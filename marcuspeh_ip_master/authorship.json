[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"marcuspeh":2,"-":22}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"### Feature-ABC","lastModifiedDate":"2021-07-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Description of the feature.","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"### Feature-XYZ","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Description of the feature.","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"### `duke.util.Keyword` - Describe action","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Describe the action and its outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"`keyword (optional arguments)`","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Description of the outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2021-07-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"marcuspeh":1,"-":28}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"import duke.command.Parser;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"import duke.util.DukeException;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"    /** For the chatboard to read the user input. */","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"    private Scanner sc;","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"    /** Stores all the task. */","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-20"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"    /** Get the ui to interact with the user. */","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"    /** deals with loading and saving tasks. */","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"     * Constructor for duke.Duke.","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"    Duke() {","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"        storage \u003d new Storage(ui);","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"        taskList \u003d new TaskList(storage.importTask(), ui, storage);","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"     * Starts the chatbot and get it to chat with the user.","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"    private void chat() {","lastModifiedDate":"2021-08-13"},{"lineNumber":36,"author":{"gitId":"marcuspeh"},"content":"        ui.greetMessage();","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"        String message;","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"        Command command;","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"marcuspeh"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2021-08-20"},{"lineNumber":40,"author":{"gitId":"marcuspeh"},"content":"        while (isRunning) {","lastModifiedDate":"2021-08-20"},{"lineNumber":41,"author":{"gitId":"marcuspeh"},"content":"            message \u003d sc.nextLine().strip();","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"marcuspeh"},"content":"            try {","lastModifiedDate":"2021-08-20"},{"lineNumber":43,"author":{"gitId":"marcuspeh"},"content":"                command \u003d Parser.parseChat(message);","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"marcuspeh"},"content":"                if (command \u003d\u003d null)","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"marcuspeh"},"content":"                    isRunning \u003d false;","lastModifiedDate":"2021-08-20"},{"lineNumber":46,"author":{"gitId":"marcuspeh"},"content":"                else","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"marcuspeh"},"content":"                    command.execute(taskList, ui);","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"marcuspeh"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-20"},{"lineNumber":49,"author":{"gitId":"marcuspeh"},"content":"                ui.chatErrorMessage();","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"marcuspeh"},"content":"            }","lastModifiedDate":"2021-08-14"},{"lineNumber":51,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":52,"author":{"gitId":"marcuspeh"},"content":"        ui.exitMessage();","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":54,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":55,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":56,"author":{"gitId":"marcuspeh"},"content":"     * Runs the chatbot.","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":59,"author":{"gitId":"marcuspeh"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-14"},{"lineNumber":60,"author":{"gitId":"marcuspeh"},"content":"        duke.chat();","lastModifiedDate":"2021-08-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"marcuspeh":58,"-":4}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"package duke.command;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":" * Interface for commands.","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":" * @author marcuspeh","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":" * @version A-JavaDoc","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":" * @since 23 Aug 2021","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"public interface Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"     * Execute the command for duke.","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"     * @param taskList duke.main.TaskList to execute the command.","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"     * @param ui To interact with the user.","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"    public abstract void execute(TaskList taskList, Ui ui);","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"marcuspeh":21}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"package duke.command;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"import duke.util.Keyword;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":" * Handles the command for new deadline.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":" * @author marcuspeh","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":" * @version A-JavaDoc","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":" * @since 23 Aug 2021","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"public class DeadlineCommand implements Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"    /** Stores the message entered by the user. */","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"    private String message;","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"    /** Constructor for duke.command.DeadlineCommand.","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"     * @param message Stores the message entered by the user.","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"    public DeadlineCommand(String message) {","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"     * Adds a new task to the task list.","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"     * @param taskList duke.main.TaskList to execute the command.","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"     * @param ui       To interact with the user.","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"    public void execute(TaskList taskList, Ui ui) {","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"            String[] details \u003d message.split(Keyword.DEADLINE.getSeparator());","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"marcuspeh"},"content":"            taskList.addDeadline(details[0].substring(Keyword.DEADLINE.length() + 1), details[1]);","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"            ui.deadlineErrorMessage();","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"marcuspeh":41}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"package duke.command;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"import duke.util.Keyword;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":" * Handles the command for delete.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":" * @author marcuspeh","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":" * @version A-JavaDoc","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":" * @since 23 Aug 2021","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"    /** Stores the message entered by the . */","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"    private String message;","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"    /** Constructor for duke.command.DeleteCommand.","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"     * @param message Stores the message entered by the user.","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"    public DeleteCommand(String message) {","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"     * Adds a new task to the task list.","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"     * @param taskList duke.main.TaskList to execute the command.","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"     * @param ui To interact with the user.","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"    public void execute(TaskList taskList, Ui ui) {","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"            taskList.deleteTask(Integer.parseInt(message.substring(Keyword.DELETE.length() + 1)));","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"marcuspeh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"            ui.deleteErrorMessage();","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"marcuspeh"},"content":"            ui.deleteIndexErrorMessage();","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"marcuspeh":42}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"package duke.command;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"import duke.util.Keyword;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":" * Handles the command for done.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":" * @author marcuspeh","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":" * @version A-JavaDoc","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":" * @since 23 Aug 2021","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"public class DoneCommand implements Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"    /** Stores the message entered by the user. */","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"    private String message;","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"    /** Constructor for duke.command.DoneCommand.","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"     * @param message Stores the message entered by the user.","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"    public DoneCommand(String message) {","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"     * Adds a new task to the task list.","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"     * @param taskList duke.main.TaskList to execute the command.","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"     * @param ui       To interact with the user.","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"    public void execute(TaskList taskList, Ui ui) {","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"            taskList.markDone(Integer.parseInt(message.substring(Keyword.DONE.length() + 1)));","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"marcuspeh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"            ui.doneErrorMessage();","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"marcuspeh"},"content":"            ui.doneIndexErrorMessage();","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"marcuspeh":42}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"package duke.command;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"import duke.util.Keyword;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":" * Handles the command for new event.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":" * @author marcuspeh","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":" * @version A-JavaDoc","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":" * @since 23 Aug 2021","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"public class EventCommand implements Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"    /** Stores the message entered by the user. */","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"    private String message;","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"    /** Constructor for duke.command.EventCommand.","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"     * @param message Stores the message entered by the user.","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"    public EventCommand(String message) {","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"     * Adds a new task to the task list.","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"     * @param taskList duke.main.TaskList to execute the command.","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"     * @param ui To interact with the user.","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"    public void execute(TaskList taskList, Ui ui) {","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"            String[] details \u003d message.split(Keyword.EVENTS.getSeparator());","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"marcuspeh"},"content":"            taskList.addEvent(details[0].substring(Keyword.EVENTS.length() + 1), details[1]);","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"            ui.eventErrorMessage();","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"marcuspeh":41}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"import duke.util.Keyword;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"    /** Stores the message entered by the user. */","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"    private String message;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"    /** Constructor for duke.command.FindCommand.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"     * @param message Stores the message entered by the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"    public FindCommand(String message) {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"     * Finds all the task containing the keywords.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"     * @param taskList duke.main.TaskList to execute the command.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"     * @param ui       To interact with the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"    public void execute(TaskList taskList, Ui ui) {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"        taskList.findTask(message.substring(Keyword.TODOS.length() + 1));","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"marcuspeh":30}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"package duke.command;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"import java.util.List;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":" * Handles the command for list.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":" * @author marcuspeh","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":" * @version A-JavaDoc","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":" * @since 23 Aug 2021","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"     * Adds a new task to the task list.","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"     * @param taskList duke.main.TaskList to execute the command.","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"     * @param ui       To interact with the user.","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"    public void execute(TaskList taskList, Ui ui) {","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"        List\u003cTask\u003e allTask \u003d taskList.getTaskList();","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"        String[] task \u003d IntStream.range(0, allTask.size())","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"                .mapToObj(x -\u003e (x + 1) + \". \" + allTask.get(x).toString())","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"                .collect(Collectors.toList())","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"                .toArray(new String[0]);","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"        ui.listTask(task);","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"marcuspeh":34}},{"path":"src/main/java/duke/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"package duke.command;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"import duke.util.DukeException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"import duke.util.Keyword;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":" * Deals with making sense of the user command.","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":" * @author marcuspeh","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":" * @version Level-9","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":" * @since 21 Aug 2021","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"public class Parser {","lastModifiedDate":"2021-08-20"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"     * Returns a Command based on the input by the user.","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"     * If user is non-parsable, null will be returned.","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"     * @param message command input by the user.","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"     * @return the type of command as a enum duke.util.Keyword.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"     * @throws DukeException if the command is not recognised.","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"    public static Command parseChat(String message) throws DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"        String command \u003d message.split(\" \")[0].toLowerCase();","lastModifiedDate":"2021-08-20"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"        if (command.equals(Keyword.EXIT.getKeyword()))","lastModifiedDate":"2021-08-20"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"            return null;","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"        else if (command.equals(Keyword.LIST.getKeyword()))","lastModifiedDate":"2021-08-20"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"        else if (command.equals(Keyword.DONE.getKeyword()))","lastModifiedDate":"2021-08-20"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"            return new DoneCommand(message);","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"        else if (command.equals(Keyword.DEADLINE.getKeyword()))","lastModifiedDate":"2021-08-20"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"            return new DeadlineCommand(message);","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"        else if (command.equals(Keyword.EVENTS.getKeyword()))","lastModifiedDate":"2021-08-20"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"            return new EventCommand(message);","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"        else if (command.equals(Keyword.TODOS.getKeyword()))","lastModifiedDate":"2021-08-20"},{"lineNumber":36,"author":{"gitId":"marcuspeh"},"content":"            return new TodoCommand(message);","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"        else if (command.equals(Keyword.FIND.getKeyword()))","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"            return new FindCommand(message);","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"marcuspeh"},"content":"        else if (command.equals(Keyword.DELETE.getKeyword()))","lastModifiedDate":"2021-08-20"},{"lineNumber":40,"author":{"gitId":"marcuspeh"},"content":"            return new DeleteCommand(message);","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":42,"author":{"gitId":"marcuspeh"},"content":"        throw new DukeException(\"Command not parsable\");","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":44,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"marcuspeh":44}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"package duke.command;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"import duke.util.Keyword;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":" * Handles the command for new todo.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":" * @author marcuspeh","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":" * @version A-JavaDoc","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":" * @since 23 Aug 2021","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"public class TodoCommand implements Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"    /** Stores the message entered by the user. */","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"    private String message;","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"    /** Constructor for duke.task.Deadlines.TodoCommand.","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"     * @param message Stores the message entered by the user.","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"    TodoCommand(String message) {","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"     * Adds a new task to the task list.","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"     * @param taskList duke.main.TaskList to execute the command.","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"     * @param ui To interact with the user.","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"    public void execute(TaskList taskList, Ui ui) {","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"        taskList.addTodo(message.substring(Keyword.TODOS.length() + 1));","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"marcuspeh":36}},{"path":"src/main/java/duke/task/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"package duke.task;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":" * Class to store deadline. Subclass of task.","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":" * @author marcuspeh","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":" * @version A-MoreOOP","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":" * @since 21 Aug 2021","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"     * @param task task to be stored.","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"     * @param dateTime deadTime for the task.","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"     * @throws ParseException Date / Time format is invalid.","lastModifiedDate":"2021-08-20"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"    public Deadlines(String task, String dateTime) throws ParseException {","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"        super(task, dateTime);","lastModifiedDate":"2021-08-20"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"     * @param task duke.task.Task to be stored.","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"     * @param dateTime deadTime for the task.","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"     * @param done Whether the task is done.","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"    public Deadlines(String task, String dateTime, boolean done) throws ParseException {","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"        super(task, dateTime, done);","lastModifiedDate":"2021-08-20"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"marcuspeh"},"content":"     * Saves the task to the txt file.","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"     * Format is as follow: \u003cType(D)\u003e | \u003cDescription\u003e | \u003cDone\u003e | \u003cDatetime\u003e.","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"marcuspeh"},"content":"     * @return string to save the txt file.","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"marcuspeh"},"content":"    public String saveOutput() {","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"marcuspeh"},"content":"        return String.format(\"D | %s | %s | %s\", super.getTask(),","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"marcuspeh"},"content":"                super.getIsDone() ? 1 : 0, super.getDateTime());","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":46,"author":{"gitId":"marcuspeh"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"marcuspeh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"marcuspeh"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + super.getDateTime()  + \")\";","lastModifiedDate":"2021-08-20"},{"lineNumber":49,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"marcuspeh":50}},{"path":"src/main/java/duke/task/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"package duke.task;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":" * Class to store event. Subclass of task.","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":" * @author marcuspeh","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":" * @version A-MoreOOP","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":" * @since 21 Aug 2021","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"public class Events extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"     * Constructor for duke.task.Events.","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"     * @param task task to be stored.","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"     * @param dateTime dateTime for the task.","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"     * @throws ParseException Date / Time format is invalid.","lastModifiedDate":"2021-08-20"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"    public Events(String task, String dateTime) throws ParseException {","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"        super(task, dateTime);","lastModifiedDate":"2021-08-20"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"     * Constructor for duke.task.Events.","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"     * @param task task to be stored.","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"     * @param dateTime dateTime for the task.","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"     * @param done whether the task is done.","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"    public Events(String task, String dateTime, boolean done) throws ParseException {","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"        super(task, dateTime, done);","lastModifiedDate":"2021-08-20"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"marcuspeh"},"content":"     * Saves the task to the txt file.","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"     * Format is as follow: \u003cType(E)\u003e | \u003cDescription\u003e | \u003cDone\u003e | \u003cDateTime\u003e.","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"marcuspeh"},"content":"     * @return string to save the txt file.","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"marcuspeh"},"content":"    public String saveOutput() {","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"marcuspeh"},"content":"        return String.format(\"E | %s | %s | %s\", super.getTask(),","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"marcuspeh"},"content":"                super.getIsDone() ? 1 : 0, getDateTime());","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"marcuspeh"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"marcuspeh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"marcuspeh"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + super.getDateTime() + \")\";","lastModifiedDate":"2021-08-20"},{"lineNumber":49,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"marcuspeh":50}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"package duke.task;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"import java.util.Date;","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":" * Abstract Class to manage task stored in chatbot.","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":" * @author marcuspeh","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":" * @version A-JavaDoc","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":" * @since 23 Aug 2021","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"    /** Stores the task. */","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"    private String task;","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"    /** Stores if the task is done. */","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"    /** Stores the date time for the task. */","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"    private Date dateTime;","lastModifiedDate":"2021-08-20"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"    /** Date format. */","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"    private static final String DATETIME \u003d \"dd/MM/yy HHmm\";","lastModifiedDate":"2021-08-20"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"    private static final SimpleDateFormat formatDateTime \u003d new SimpleDateFormat(DATETIME);","lastModifiedDate":"2021-08-20"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"     * Constructor for duke.task.Task.","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"     * @param task task to be stored.","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"    Task(String task) {","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"marcuspeh"},"content":"     * Constructor for duke.task.Task.","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"     * @param task duke.task.Task to be stored.","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"marcuspeh"},"content":"     * @param isDone Whether the task is done.","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-20"},{"lineNumber":41,"author":{"gitId":"marcuspeh"},"content":"    Task(String task, boolean isDone) {","lastModifiedDate":"2021-08-20"},{"lineNumber":42,"author":{"gitId":"marcuspeh"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-20"},{"lineNumber":43,"author":{"gitId":"marcuspeh"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-20"},{"lineNumber":44,"author":{"gitId":"marcuspeh"},"content":"        this.dateTime \u003d null;","lastModifiedDate":"2021-08-20"},{"lineNumber":45,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":46,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":47,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-20"},{"lineNumber":48,"author":{"gitId":"marcuspeh"},"content":"     * Constructor for duke.task.Task.","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-20"},{"lineNumber":50,"author":{"gitId":"marcuspeh"},"content":"     * @param task duke.task.Task to be stored.","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"marcuspeh"},"content":"     * @param dateTime Date / Time of the task.","lastModifiedDate":"2021-08-20"},{"lineNumber":52,"author":{"gitId":"marcuspeh"},"content":"     * @param isDone Whether the task is done.","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-20"},{"lineNumber":54,"author":{"gitId":"marcuspeh"},"content":"    Task(String task, String dateTime, boolean isDone) throws ParseException {","lastModifiedDate":"2021-08-20"},{"lineNumber":55,"author":{"gitId":"marcuspeh"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-20"},{"lineNumber":56,"author":{"gitId":"marcuspeh"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-20"},{"lineNumber":57,"author":{"gitId":"marcuspeh"},"content":"        this.dateTime \u003d formatDateTime.parse(dateTime);","lastModifiedDate":"2021-08-20"},{"lineNumber":58,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":59,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":60,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-20"},{"lineNumber":61,"author":{"gitId":"marcuspeh"},"content":"     * Constructor for duke.task.Task.","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-20"},{"lineNumber":63,"author":{"gitId":"marcuspeh"},"content":"     * @param task duke.task.Task to be stored.","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"marcuspeh"},"content":"     * @param dateTime Date / Time of the task.","lastModifiedDate":"2021-08-20"},{"lineNumber":65,"author":{"gitId":"marcuspeh"},"content":"     * @throws ParseException Date / Time format is invalid.","lastModifiedDate":"2021-08-20"},{"lineNumber":66,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"marcuspeh"},"content":"    Task(String task, String dateTime) throws ParseException {","lastModifiedDate":"2021-08-20"},{"lineNumber":68,"author":{"gitId":"marcuspeh"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"marcuspeh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-20"},{"lineNumber":70,"author":{"gitId":"marcuspeh"},"content":"        this.dateTime \u003d formatDateTime.parse(dateTime);","lastModifiedDate":"2021-08-20"},{"lineNumber":71,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":72,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":73,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":74,"author":{"gitId":"marcuspeh"},"content":"     * Marks the task as done.","lastModifiedDate":"2021-08-15"},{"lineNumber":75,"author":{"gitId":"marcuspeh"},"content":"     * If task is successfully marked as done, true will be returned.","lastModifiedDate":"2021-08-15"},{"lineNumber":76,"author":{"gitId":"marcuspeh"},"content":"     * If task is not successfully marked as done, false will be returned instead.","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":78,"author":{"gitId":"marcuspeh"},"content":"     * @return if update is successful.","lastModifiedDate":"2021-08-15"},{"lineNumber":79,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":80,"author":{"gitId":"marcuspeh"},"content":"    public boolean markDone() {","lastModifiedDate":"2021-08-15"},{"lineNumber":81,"author":{"gitId":"marcuspeh"},"content":"        if (isDone)","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"marcuspeh"},"content":"            return false;","lastModifiedDate":"2021-08-15"},{"lineNumber":83,"author":{"gitId":"marcuspeh"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"marcuspeh"},"content":"        return true;","lastModifiedDate":"2021-08-15"},{"lineNumber":85,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":86,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":87,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"marcuspeh"},"content":"     * Returns an output to save to the txt file.","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"marcuspeh"},"content":"     * Format is as follow: \u003cType(T/D/E)\u003e \u003cDescription\u003e \u003cDone\u003e \u003cDateTime if applicable\u003e.","lastModifiedDate":"2021-08-21"},{"lineNumber":90,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":91,"author":{"gitId":"marcuspeh"},"content":"     * @return string to save the txt file","lastModifiedDate":"2021-08-19"},{"lineNumber":92,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":93,"author":{"gitId":"marcuspeh"},"content":"    public abstract String saveOutput();","lastModifiedDate":"2021-08-19"},{"lineNumber":94,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":95,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"marcuspeh"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2021-08-19"},{"lineNumber":97,"author":{"gitId":"marcuspeh"},"content":"        return isDone;","lastModifiedDate":"2021-08-19"},{"lineNumber":98,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":99,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":100,"author":{"gitId":"marcuspeh"},"content":"    public String getTask() {","lastModifiedDate":"2021-08-15"},{"lineNumber":101,"author":{"gitId":"marcuspeh"},"content":"        return task;","lastModifiedDate":"2021-08-15"},{"lineNumber":102,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":103,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":104,"author":{"gitId":"marcuspeh"},"content":"    public String getDateTime() {","lastModifiedDate":"2021-08-20"},{"lineNumber":105,"author":{"gitId":"marcuspeh"},"content":"        return formatDateTime.format(dateTime);","lastModifiedDate":"2021-08-20"},{"lineNumber":106,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":107,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":108,"author":{"gitId":"marcuspeh"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":109,"author":{"gitId":"marcuspeh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":110,"author":{"gitId":"marcuspeh"},"content":"        return (isDone ? \"[X] \" : \"[ ] \") + task.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":111,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":112,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"marcuspeh":112}},{"path":"src/main/java/duke/task/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"package duke.task;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":" * Class to store task. Subclass of duke.task.Task.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":" * @author marcuspeh","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":" * @version A-MoreOOP","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":" * @since 21 Aug 2021","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"public class ToDos extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"     * Constructor for Todo.","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"     * @param task task to be stored.","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"    public ToDos(String task) {","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"        super(task);","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"     * Constructor for Todo.","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"     * @param task duke.task.Task to be stored.","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"     * @param done Whether the task is done.","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"    public ToDos(String task, boolean done) {","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"        super(task, done);","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"     * Saves the task to the txt file.","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"     * Format is as follow: \u003cType(T)\u003e | \u003cDescription\u003e | \u003cDone\u003e.","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"     * @return string to save the txt file.","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"marcuspeh"},"content":"    public String saveOutput() {","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"        return String.format(\"T | %s | %s\", super.getTask(), super.getIsDone() ? 1 : 0);","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"marcuspeh"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"marcuspeh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"marcuspeh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-15"},{"lineNumber":43,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"marcuspeh":44}},{"path":"src/main/java/duke/util/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"package duke.util;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":" * Exception class for duke.Duke.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":" * @author marcuspeh","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":" * @version A-MoreOOP","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":" * @since 21 Aug 2021","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-20"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"        super(message);","lastModifiedDate":"2021-08-20"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"marcuspeh":14}},{"path":"src/main/java/duke/util/Keyword.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"package duke.util;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":" * Enum file for chatbot commands.","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":" * @author marcuspeh","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":" * @version Level-9","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":" * @since 19 Aug 2021","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"public enum Keyword {","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"    /** Exit message. */","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"    EXIT(\"bye\"),","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"    /** duke.util.Keyword for listing out all the task. */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"    LIST(\"list\"),","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"    /** duke.util.Keyword for marking task as done. */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"    DONE(\"done\"),","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"    /** duke.util.Keyword for marking task as Deadline task.\" */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"    DEADLINE(\"deadline\", \" /by \", \"D\"),","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"    /** duke.util.Keyword for marking task as duke.task.Events. */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"    EVENTS(\"event\", \" /at \", \"E\"),","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"    /** duke.util.Keyword for marking task as Todos. */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"    TODOS(\"todo\", \"\", \"T\"),","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"    /** duke.util.Keyword for deleting task. */","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"    /** duke.util.Keyword for finding task. */","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"    FIND(\"find\");","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"    /** duke.util.Keyword for command. */","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"    private String keyword;","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"    /** Separator for spliting up various input. */","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"    private String separator;","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"    /** Code for saving task. */","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"    private  String saveWord;","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"marcuspeh"},"content":"     * Constructor for duke.util.Keyword Enum.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"     * @param keyword duke.util.Keyword for command","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"marcuspeh"},"content":"    Keyword(String keyword) {","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"marcuspeh"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"marcuspeh"},"content":"        this.separator \u003d \"\";","lastModifiedDate":"2021-08-15"},{"lineNumber":43,"author":{"gitId":"marcuspeh"},"content":"        this.saveWord \u003d \"\";","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":46,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"marcuspeh"},"content":"     * Constructor for duke.util.Keyword Enum.","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"marcuspeh"},"content":"     * @param keyword duke.util.Keyword for command.","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"marcuspeh"},"content":"     * @param separator Separator for spliting up various input.","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"marcuspeh"},"content":"     * @param saveWord saveWord for task.","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":53,"author":{"gitId":"marcuspeh"},"content":"    Keyword(String keyword, String separator, String saveWord) {","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"marcuspeh"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-15"},{"lineNumber":55,"author":{"gitId":"marcuspeh"},"content":"        this.separator \u003d separator;","lastModifiedDate":"2021-08-15"},{"lineNumber":56,"author":{"gitId":"marcuspeh"},"content":"        this.saveWord \u003d saveWord;","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":58,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":59,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":60,"author":{"gitId":"marcuspeh"},"content":"     * Finds the length of the keyword.","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":62,"author":{"gitId":"marcuspeh"},"content":"     * @return the length of the keyword.","lastModifiedDate":"2021-08-15"},{"lineNumber":63,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":64,"author":{"gitId":"marcuspeh"},"content":"    public int length() {","lastModifiedDate":"2021-08-15"},{"lineNumber":65,"author":{"gitId":"marcuspeh"},"content":"        return keyword.length();","lastModifiedDate":"2021-08-15"},{"lineNumber":66,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":67,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":68,"author":{"gitId":"marcuspeh"},"content":"    public String getKeyword() {","lastModifiedDate":"2021-08-15"},{"lineNumber":69,"author":{"gitId":"marcuspeh"},"content":"        return keyword;","lastModifiedDate":"2021-08-15"},{"lineNumber":70,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":71,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":72,"author":{"gitId":"marcuspeh"},"content":"    public String getSeparator() {","lastModifiedDate":"2021-08-15"},{"lineNumber":73,"author":{"gitId":"marcuspeh"},"content":"        return separator;","lastModifiedDate":"2021-08-15"},{"lineNumber":74,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":75,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"marcuspeh"},"content":"    public String getSaveWord() {","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"marcuspeh"},"content":"        return saveWord;","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"marcuspeh":79}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"package duke.util;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"import duke.task.Deadlines;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"import duke.task.Events;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"import duke.task.ToDos;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"import java.io.File;","lastModifiedDate":"2021-08-20"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-20"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-20"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-08-20"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-20"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-20"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-08-20"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-20"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"import java.util.List;","lastModifiedDate":"2021-08-20"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":" * Deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":" * @author marcuspeh","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":" * @version A-JavaDoc","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":" * @since 23 Aug 2021","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"public class Storage {","lastModifiedDate":"2021-08-20"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"    /** File name for the storage. */","lastModifiedDate":"2021-08-20"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"    private final String LOCATION \u003d \"./data/duke.txt\";","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"    /** To deals with the errorMessages. */","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"     * Constructor for duke.main.Storage.","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"     * @param ui to deal with the errorMessages.","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"    public Storage(Ui ui) {","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":41,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-20"},{"lineNumber":42,"author":{"gitId":"marcuspeh"},"content":"     * Exports the task in list to a txt file in ./data.","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-20"},{"lineNumber":44,"author":{"gitId":"marcuspeh"},"content":"     * @param taskList list of task to be stored.","lastModifiedDate":"2021-08-20"},{"lineNumber":45,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-20"},{"lineNumber":46,"author":{"gitId":"marcuspeh"},"content":"    public void exportTask(List\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"marcuspeh"},"content":"        try {","lastModifiedDate":"2021-08-20"},{"lineNumber":48,"author":{"gitId":"marcuspeh"},"content":"            File file \u003d new File(LOCATION);","lastModifiedDate":"2021-08-20"},{"lineNumber":49,"author":{"gitId":"marcuspeh"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2021-08-20"},{"lineNumber":50,"author":{"gitId":"marcuspeh"},"content":"            file.createNewFile();","lastModifiedDate":"2021-08-20"},{"lineNumber":51,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":52,"author":{"gitId":"marcuspeh"},"content":"            FileWriter fileWrite \u003d new FileWriter(file);","lastModifiedDate":"2021-08-20"},{"lineNumber":53,"author":{"gitId":"marcuspeh"},"content":"            BufferedWriter bufferedWriter \u003d new BufferedWriter(fileWrite);","lastModifiedDate":"2021-08-20"},{"lineNumber":54,"author":{"gitId":"marcuspeh"},"content":"            taskList.stream()","lastModifiedDate":"2021-08-20"},{"lineNumber":55,"author":{"gitId":"marcuspeh"},"content":"                    .forEach(task -\u003e {","lastModifiedDate":"2021-08-20"},{"lineNumber":56,"author":{"gitId":"marcuspeh"},"content":"                        try {","lastModifiedDate":"2021-08-20"},{"lineNumber":57,"author":{"gitId":"marcuspeh"},"content":"                            bufferedWriter.write(task.saveOutput());","lastModifiedDate":"2021-08-20"},{"lineNumber":58,"author":{"gitId":"marcuspeh"},"content":"                            bufferedWriter.newLine();","lastModifiedDate":"2021-08-20"},{"lineNumber":59,"author":{"gitId":"marcuspeh"},"content":"                        } catch (IOException e) {","lastModifiedDate":"2021-08-20"},{"lineNumber":60,"author":{"gitId":"marcuspeh"},"content":"                            ui.exportTaskErrorMessage(task);","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"marcuspeh"},"content":"                        }","lastModifiedDate":"2021-08-20"},{"lineNumber":62,"author":{"gitId":"marcuspeh"},"content":"                    });","lastModifiedDate":"2021-08-20"},{"lineNumber":63,"author":{"gitId":"marcuspeh"},"content":"            bufferedWriter.flush();","lastModifiedDate":"2021-08-20"},{"lineNumber":64,"author":{"gitId":"marcuspeh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-20"},{"lineNumber":65,"author":{"gitId":"marcuspeh"},"content":"            ui.exportTaskErrorMessage();","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":67,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":68,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":69,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-20"},{"lineNumber":70,"author":{"gitId":"marcuspeh"},"content":"     * Loads the txt file containing information on the task.","lastModifiedDate":"2021-08-20"},{"lineNumber":71,"author":{"gitId":"marcuspeh"},"content":"     * If dir/file is not found, a welcome message will be printed.","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-20"},{"lineNumber":73,"author":{"gitId":"marcuspeh"},"content":"     * @return A list of all the task stored.","lastModifiedDate":"2021-08-20"},{"lineNumber":74,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-20"},{"lineNumber":75,"author":{"gitId":"marcuspeh"},"content":"    public List\u003cTask\u003e importTask() {","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"marcuspeh"},"content":"        File file \u003d new File(LOCATION);","lastModifiedDate":"2021-08-20"},{"lineNumber":77,"author":{"gitId":"marcuspeh"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-20"},{"lineNumber":78,"author":{"gitId":"marcuspeh"},"content":"        try {","lastModifiedDate":"2021-08-20"},{"lineNumber":79,"author":{"gitId":"marcuspeh"},"content":"            FileReader fileReader \u003d new FileReader(file);","lastModifiedDate":"2021-08-20"},{"lineNumber":80,"author":{"gitId":"marcuspeh"},"content":"            BufferedReader bufferedReader \u003d new BufferedReader(fileReader);","lastModifiedDate":"2021-08-20"},{"lineNumber":81,"author":{"gitId":"marcuspeh"},"content":"            bufferedReader.lines()","lastModifiedDate":"2021-08-20"},{"lineNumber":82,"author":{"gitId":"marcuspeh"},"content":"                    .forEach(task -\u003e {","lastModifiedDate":"2021-08-20"},{"lineNumber":83,"author":{"gitId":"marcuspeh"},"content":"                        String[] taskData \u003d task.split(\" \\\\| \");","lastModifiedDate":"2021-08-20"},{"lineNumber":84,"author":{"gitId":"marcuspeh"},"content":"                        if (taskData.length \u003d\u003d 3 || taskData.length \u003d\u003d 4) {","lastModifiedDate":"2021-08-20"},{"lineNumber":85,"author":{"gitId":"marcuspeh"},"content":"                            if (taskData[0].equals(Keyword.DEADLINE.getSaveWord())) {","lastModifiedDate":"2021-08-20"},{"lineNumber":86,"author":{"gitId":"marcuspeh"},"content":"                                try {","lastModifiedDate":"2021-08-20"},{"lineNumber":87,"author":{"gitId":"marcuspeh"},"content":"                                    taskList.add(new Deadlines(taskData[1], taskData[3],","lastModifiedDate":"2021-08-20"},{"lineNumber":88,"author":{"gitId":"marcuspeh"},"content":"                                            taskData[2].equals(\"1\") ? true : false));","lastModifiedDate":"2021-08-20"},{"lineNumber":89,"author":{"gitId":"marcuspeh"},"content":"                                } catch (ParseException e) {","lastModifiedDate":"2021-08-20"},{"lineNumber":90,"author":{"gitId":"marcuspeh"},"content":"                                    ui.importTaskErrorMessage(taskData[1]);","lastModifiedDate":"2021-08-21"},{"lineNumber":91,"author":{"gitId":"marcuspeh"},"content":"                                }","lastModifiedDate":"2021-08-20"},{"lineNumber":92,"author":{"gitId":"marcuspeh"},"content":"                            } else if (taskData[0].equals(Keyword.EVENTS.getSaveWord())) {","lastModifiedDate":"2021-08-20"},{"lineNumber":93,"author":{"gitId":"marcuspeh"},"content":"                                try {","lastModifiedDate":"2021-08-20"},{"lineNumber":94,"author":{"gitId":"marcuspeh"},"content":"                                    taskList.add(new Events(taskData[1], taskData[3],","lastModifiedDate":"2021-08-20"},{"lineNumber":95,"author":{"gitId":"marcuspeh"},"content":"                                            taskData[2].equals(\"1\") ? true : false));","lastModifiedDate":"2021-08-20"},{"lineNumber":96,"author":{"gitId":"marcuspeh"},"content":"                                } catch (ParseException e) {","lastModifiedDate":"2021-08-20"},{"lineNumber":97,"author":{"gitId":"marcuspeh"},"content":"                                    ui.importTaskErrorMessage(taskData[1]);","lastModifiedDate":"2021-08-21"},{"lineNumber":98,"author":{"gitId":"marcuspeh"},"content":"                                }","lastModifiedDate":"2021-08-20"},{"lineNumber":99,"author":{"gitId":"marcuspeh"},"content":"                            } else if (taskData[0].equals(Keyword.TODOS.getSaveWord())) {","lastModifiedDate":"2021-08-20"},{"lineNumber":100,"author":{"gitId":"marcuspeh"},"content":"                                taskList.add(new ToDos(taskData[1],","lastModifiedDate":"2021-08-20"},{"lineNumber":101,"author":{"gitId":"marcuspeh"},"content":"                                        taskData[2].equals(\"1\") ? true : false));","lastModifiedDate":"2021-08-20"},{"lineNumber":102,"author":{"gitId":"marcuspeh"},"content":"                            }","lastModifiedDate":"2021-08-20"},{"lineNumber":103,"author":{"gitId":"marcuspeh"},"content":"                        }","lastModifiedDate":"2021-08-20"},{"lineNumber":104,"author":{"gitId":"marcuspeh"},"content":"                    });","lastModifiedDate":"2021-08-20"},{"lineNumber":105,"author":{"gitId":"marcuspeh"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-20"},{"lineNumber":106,"author":{"gitId":"marcuspeh"},"content":"            ui.importTaskErrorMessage();","lastModifiedDate":"2021-08-21"},{"lineNumber":107,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":108,"author":{"gitId":"marcuspeh"},"content":"        return taskList;","lastModifiedDate":"2021-08-20"},{"lineNumber":109,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":110,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"marcuspeh":110}},{"path":"src/main/java/duke/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"package duke.util;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"import duke.task.Deadlines;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"import duke.task.Events;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"import duke.task.ToDos;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"import java.util.List;","lastModifiedDate":"2021-08-20"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":" * Deals with storing of task as well as operations involving the tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":" * @author marcuspeh","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":" * @version Level-9","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":" * @since 21 Aug 2021","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"public class TaskList {","lastModifiedDate":"2021-08-20"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"    /** List to store all the task. */","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"    private List\u003cTask\u003e taskList;","lastModifiedDate":"2021-08-20"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"    /** To deal with the errorMessages. */","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"    /** Deals with load and saving of task. */","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"     * Constructor for duke.main.TaskList.","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"     * @param taskList List to store all the task.","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"     * @param ui To deal with the error messages.","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"     * @param storage deals with load and saving of tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"    public TaskList(List\u003cTask\u003e taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-20"},{"lineNumber":36,"author":{"gitId":"marcuspeh"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":39,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":40,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-20"},{"lineNumber":41,"author":{"gitId":"marcuspeh"},"content":"     * Adds the task entered by the user into the list.","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-20"},{"lineNumber":43,"author":{"gitId":"marcuspeh"},"content":"     * @param task task input by the user.","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-20"},{"lineNumber":45,"author":{"gitId":"marcuspeh"},"content":"    private void addTask(Task task) {","lastModifiedDate":"2021-08-20"},{"lineNumber":46,"author":{"gitId":"marcuspeh"},"content":"        taskList.add(task);","lastModifiedDate":"2021-08-20"},{"lineNumber":47,"author":{"gitId":"marcuspeh"},"content":"        ui.addMessage(task, taskList.size());","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":49,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":50,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-20"},{"lineNumber":51,"author":{"gitId":"marcuspeh"},"content":"     * Adds a new Event to the task list.","lastModifiedDate":"2021-08-20"},{"lineNumber":52,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-20"},{"lineNumber":53,"author":{"gitId":"marcuspeh"},"content":"     * @param s Description of the task.","lastModifiedDate":"2021-08-20"},{"lineNumber":54,"author":{"gitId":"marcuspeh"},"content":"     * @param dateTime Date and time of the event.","lastModifiedDate":"2021-08-20"},{"lineNumber":55,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-20"},{"lineNumber":56,"author":{"gitId":"marcuspeh"},"content":"    public void addEvent(String s, String dateTime) {","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"marcuspeh"},"content":"        try {","lastModifiedDate":"2021-08-20"},{"lineNumber":58,"author":{"gitId":"marcuspeh"},"content":"            addTask(new Events(s, dateTime));","lastModifiedDate":"2021-08-20"},{"lineNumber":59,"author":{"gitId":"marcuspeh"},"content":"            saveTaskList();","lastModifiedDate":"2021-08-20"},{"lineNumber":60,"author":{"gitId":"marcuspeh"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-08-20"},{"lineNumber":61,"author":{"gitId":"marcuspeh"},"content":"            ui.dateTimeErrorMessage();","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":63,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":64,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":65,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-20"},{"lineNumber":66,"author":{"gitId":"marcuspeh"},"content":"     * Adds a new deadline to the task list.","lastModifiedDate":"2021-08-20"},{"lineNumber":67,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-20"},{"lineNumber":68,"author":{"gitId":"marcuspeh"},"content":"     * @param s Description of the task.","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"marcuspeh"},"content":"     * @param dateTime Deadline of the task.","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-20"},{"lineNumber":71,"author":{"gitId":"marcuspeh"},"content":"    public void addDeadline(String s, String dateTime) {","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"marcuspeh"},"content":"        try {","lastModifiedDate":"2021-08-20"},{"lineNumber":73,"author":{"gitId":"marcuspeh"},"content":"            addTask(new Deadlines(s, dateTime));","lastModifiedDate":"2021-08-20"},{"lineNumber":74,"author":{"gitId":"marcuspeh"},"content":"            saveTaskList();","lastModifiedDate":"2021-08-20"},{"lineNumber":75,"author":{"gitId":"marcuspeh"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-08-20"},{"lineNumber":76,"author":{"gitId":"marcuspeh"},"content":"            ui.dateTimeErrorMessage();","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":78,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":79,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":80,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-20"},{"lineNumber":81,"author":{"gitId":"marcuspeh"},"content":"     * Adds a new todo to the task list.","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-20"},{"lineNumber":83,"author":{"gitId":"marcuspeh"},"content":"     * @param message Description of the task.","lastModifiedDate":"2021-08-20"},{"lineNumber":84,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-20"},{"lineNumber":85,"author":{"gitId":"marcuspeh"},"content":"    public void addTodo(String message) {","lastModifiedDate":"2021-08-20"},{"lineNumber":86,"author":{"gitId":"marcuspeh"},"content":"        try {","lastModifiedDate":"2021-08-20"},{"lineNumber":87,"author":{"gitId":"marcuspeh"},"content":"            addTask(new ToDos(message));","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"marcuspeh"},"content":"            saveTaskList();","lastModifiedDate":"2021-08-20"},{"lineNumber":89,"author":{"gitId":"marcuspeh"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-20"},{"lineNumber":90,"author":{"gitId":"marcuspeh"},"content":"            ui.todoErrorMessage();","lastModifiedDate":"2021-08-21"},{"lineNumber":91,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":92,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":93,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":94,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-20"},{"lineNumber":95,"author":{"gitId":"marcuspeh"},"content":"     * Marks the nth task as done.","lastModifiedDate":"2021-08-21"},{"lineNumber":96,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-20"},{"lineNumber":97,"author":{"gitId":"marcuspeh"},"content":"     * @param n the task to be mark as done.","lastModifiedDate":"2021-08-20"},{"lineNumber":98,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-20"},{"lineNumber":99,"author":{"gitId":"marcuspeh"},"content":"    public void markDone(int n) {","lastModifiedDate":"2021-08-21"},{"lineNumber":100,"author":{"gitId":"marcuspeh"},"content":"        Task task \u003d taskList.get(n - 1);","lastModifiedDate":"2021-08-20"},{"lineNumber":101,"author":{"gitId":"marcuspeh"},"content":"        boolean success \u003d task.markDone();","lastModifiedDate":"2021-08-20"},{"lineNumber":102,"author":{"gitId":"marcuspeh"},"content":"        if (success) {","lastModifiedDate":"2021-08-20"},{"lineNumber":103,"author":{"gitId":"marcuspeh"},"content":"            saveTaskList();","lastModifiedDate":"2021-08-20"},{"lineNumber":104,"author":{"gitId":"marcuspeh"},"content":"            ui.doneSuccessMessage(task);","lastModifiedDate":"2021-08-21"},{"lineNumber":105,"author":{"gitId":"marcuspeh"},"content":"        } else","lastModifiedDate":"2021-08-20"},{"lineNumber":106,"author":{"gitId":"marcuspeh"},"content":"            ui.doneFailedMessage(task);","lastModifiedDate":"2021-08-21"},{"lineNumber":107,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":108,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":109,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-20"},{"lineNumber":110,"author":{"gitId":"marcuspeh"},"content":"     * Deletes the nth task from the task list.","lastModifiedDate":"2021-08-21"},{"lineNumber":111,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-20"},{"lineNumber":112,"author":{"gitId":"marcuspeh"},"content":"     * @param n the task to be deleted.","lastModifiedDate":"2021-08-20"},{"lineNumber":113,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-20"},{"lineNumber":114,"author":{"gitId":"marcuspeh"},"content":"    public void deleteTask(int n) {","lastModifiedDate":"2021-08-21"},{"lineNumber":115,"author":{"gitId":"marcuspeh"},"content":"        Task task \u003d taskList.remove(n - 1);","lastModifiedDate":"2021-08-20"},{"lineNumber":116,"author":{"gitId":"marcuspeh"},"content":"        saveTaskList();","lastModifiedDate":"2021-08-20"},{"lineNumber":117,"author":{"gitId":"marcuspeh"},"content":"        ui.deleteMessage(task, taskList.size());","lastModifiedDate":"2021-08-21"},{"lineNumber":118,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":119,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":120,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":121,"author":{"gitId":"marcuspeh"},"content":"     * Saves the task list by calling the method in storage.","lastModifiedDate":"2021-08-21"},{"lineNumber":122,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":123,"author":{"gitId":"marcuspeh"},"content":"    private void saveTaskList() {","lastModifiedDate":"2021-08-20"},{"lineNumber":124,"author":{"gitId":"marcuspeh"},"content":"        storage.exportTask(this.taskList);","lastModifiedDate":"2021-08-21"},{"lineNumber":125,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":126,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":127,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":128,"author":{"gitId":"marcuspeh"},"content":"     * Finds all the task that contains the string S and returns a array containing","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"marcuspeh"},"content":"     * all the tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"marcuspeh"},"content":"     * @param s Keyword to search for the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"marcuspeh"},"content":"     * @return String list containing all the description of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":134,"author":{"gitId":"marcuspeh"},"content":"    public void findTask(String s) {","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"marcuspeh"},"content":"        List\u003cString\u003e taskFiltered \u003d taskList.stream()","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"marcuspeh"},"content":"                .filter(task -\u003e task.getTask().contains(s))","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"marcuspeh"},"content":"                .map(x -\u003e x.toString())","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"marcuspeh"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"marcuspeh"},"content":"        ui.searchOutputMessage(taskFiltered);","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"marcuspeh"},"content":"    public List\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-08-20"},{"lineNumber":143,"author":{"gitId":"marcuspeh"},"content":"        return taskList;","lastModifiedDate":"2021-08-20"},{"lineNumber":144,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":145,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"marcuspeh":145}},{"path":"src/main/java/duke/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"package duke.util;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"import java.util.List;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":" * Deals with the interactions with the user. This class only","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":" * prints out messages to the user.","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":" * @author marcuspeh","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":" * @version Level-9","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":" * @since 21 Aug 2021","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"public class Ui {","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"     * Lists out all the task stored by the user.","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"     * @param taskArray To list out all the task.","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"    public void listTask(String[] taskArray) {","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"        if (taskArray.length \u003d\u003d 0)","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"            printMessage(\"You have no task.\");","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"        else","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"            printMessage(taskArray);","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"     * Prints out a message when task is added.","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"     * @param task duke.task.Task that is added.","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"     * @param totalTask Total number of task stored.","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"    public void addMessage(Task task, int totalTask) {","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"        printMessage(\"Got it. I\u0027ve added this task:\",","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"marcuspeh"},"content":"                task.toString(),","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"                String.format(\"Now you have %o task(s).\", totalTask));","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"marcuspeh"},"content":"     * Prints out a message when the task is marked as done.","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"marcuspeh"},"content":"     * @param task duke.task.Task that is marked as done.","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"marcuspeh"},"content":"    public void doneSuccessMessage(Task task) {","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"marcuspeh"},"content":"        printMessage(\"Nice! I\u0027ve did mark this task as done:\", task.toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"marcuspeh"},"content":"     * Prints out a message when the user tries to mark a task as done when it","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"marcuspeh"},"content":"     * is already marked as done.","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"marcuspeh"},"content":"     * @param task duke.task.Task to be marked as done.","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"marcuspeh"},"content":"    public void doneFailedMessage(Task task) {","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"marcuspeh"},"content":"        printMessage(\"Ugh! This task was already done:\", task.toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"marcuspeh"},"content":"     * Prints out a message when the user deletes the task.","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"marcuspeh"},"content":"     * @param task duke.task.Task to be deleted.","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"marcuspeh"},"content":"     * @param totalTask Total number of task stored.","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"marcuspeh"},"content":"    public void deleteMessage(Task task, int totalTask) {","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"marcuspeh"},"content":"        printMessage(\"Noted. I\u0027ve removed this task:\",","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"marcuspeh"},"content":"                task.toString(),","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"marcuspeh"},"content":"                String.format(\"Now you have %o task(s).\", totalTask));","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"marcuspeh"},"content":"     * Prints out all the task that is found.","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"marcuspeh"},"content":"     * @param tasks Tasks to be printed.","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"marcuspeh"},"content":"    public void searchOutputMessage(List\u003cString\u003e tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"marcuspeh"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"marcuspeh"},"content":"            tasks.add(0, \"There are no matching tasks found.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"marcuspeh"},"content":"            return;","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"marcuspeh"},"content":"        tasks.add(0, \"Here are the matching task(s) in your list:\");","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"marcuspeh"},"content":"        printMessage(tasks.toArray(new String[0]));","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"marcuspeh"},"content":"     * Prints out a message when a task is unable to be exported and saved.","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"marcuspeh"},"content":"     * @param task duke.task.Task to be exported and saved.","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":90,"author":{"gitId":"marcuspeh"},"content":"    public void exportTaskErrorMessage(Task task) {","lastModifiedDate":"2021-08-21"},{"lineNumber":91,"author":{"gitId":"marcuspeh"},"content":"        printMessage(String.format(\"Unable to save %s\", task.toString()));","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":93,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":95,"author":{"gitId":"marcuspeh"},"content":"     * Prints out a message when all the task is unable to be exported and saved.","lastModifiedDate":"2021-08-21"},{"lineNumber":96,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":97,"author":{"gitId":"marcuspeh"},"content":"    public void exportTaskErrorMessage() {","lastModifiedDate":"2021-08-21"},{"lineNumber":98,"author":{"gitId":"marcuspeh"},"content":"        printMessage(\"Unable to save task.\");","lastModifiedDate":"2021-08-21"},{"lineNumber":99,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":100,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":101,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":102,"author":{"gitId":"marcuspeh"},"content":"     * Prints out a message when the task cannot be imported.","lastModifiedDate":"2021-08-21"},{"lineNumber":103,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":104,"author":{"gitId":"marcuspeh"},"content":"     * @param description Description of task to be imported.","lastModifiedDate":"2021-08-21"},{"lineNumber":105,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":106,"author":{"gitId":"marcuspeh"},"content":"    public void importTaskErrorMessage(String description) {","lastModifiedDate":"2021-08-21"},{"lineNumber":107,"author":{"gitId":"marcuspeh"},"content":"        printMessage(String.format(\"Cant import %s\", description));","lastModifiedDate":"2021-08-21"},{"lineNumber":108,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":109,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":110,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":111,"author":{"gitId":"marcuspeh"},"content":"     * Prints out a message if this is the first time the user is using duke.Duke.","lastModifiedDate":"2021-08-21"},{"lineNumber":112,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":113,"author":{"gitId":"marcuspeh"},"content":"    public void importTaskErrorMessage() {","lastModifiedDate":"2021-08-21"},{"lineNumber":114,"author":{"gitId":"marcuspeh"},"content":"        printMessage(\"This are the commands that I recognised:\",","lastModifiedDate":"2021-08-21"},{"lineNumber":115,"author":{"gitId":"marcuspeh"},"content":"                \"bye - Ends the chat session.\",","lastModifiedDate":"2021-08-21"},{"lineNumber":116,"author":{"gitId":"marcuspeh"},"content":"                \"todo \u003cdescription\u003e - Adds a new todo to the task list.\",","lastModifiedDate":"2021-08-21"},{"lineNumber":117,"author":{"gitId":"marcuspeh"},"content":"                \"deadline \u003cdescription\u003e /by \u003cdate/time\u003e - Adds a new deadline to the task list\",","lastModifiedDate":"2021-08-21"},{"lineNumber":118,"author":{"gitId":"marcuspeh"},"content":"                \"event \u003cdescription\u003e /at \u003cdate/time\u003e - Adds a new event to the task list\",","lastModifiedDate":"2021-08-21"},{"lineNumber":119,"author":{"gitId":"marcuspeh"},"content":"                \"list - return a list of all the task\",","lastModifiedDate":"2021-08-21"},{"lineNumber":120,"author":{"gitId":"marcuspeh"},"content":"                \"done \u003cnumber\u003e - Sets the task to be done\",","lastModifiedDate":"2021-08-21"},{"lineNumber":121,"author":{"gitId":"marcuspeh"},"content":"                \"delete \u003cnumber\u003e - Delete the task\");","lastModifiedDate":"2021-08-21"},{"lineNumber":122,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":123,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":124,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":125,"author":{"gitId":"marcuspeh"},"content":"     * Prints out the greeting message used when the chat started.","lastModifiedDate":"2021-08-21"},{"lineNumber":126,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":127,"author":{"gitId":"marcuspeh"},"content":"    public void greetMessage() {","lastModifiedDate":"2021-08-21"},{"lineNumber":128,"author":{"gitId":"marcuspeh"},"content":"        printMessage(\"Good day there! I\u0027m DUKE\\n\", \"What can I do for you?\");","lastModifiedDate":"2021-08-21"},{"lineNumber":129,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":130,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":131,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":132,"author":{"gitId":"marcuspeh"},"content":"     * Echos the message the user sends for level-1.","lastModifiedDate":"2021-08-21"},{"lineNumber":133,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":134,"author":{"gitId":"marcuspeh"},"content":"     * @param s Message user sent.","lastModifiedDate":"2021-08-21"},{"lineNumber":135,"author":{"gitId":"marcuspeh"},"content":"     * @Deprecated Level-2","lastModifiedDate":"2021-08-21"},{"lineNumber":136,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":137,"author":{"gitId":"marcuspeh"},"content":"    public void echoMessage(String s) {","lastModifiedDate":"2021-08-21"},{"lineNumber":138,"author":{"gitId":"marcuspeh"},"content":"        printMessage(s);","lastModifiedDate":"2021-08-21"},{"lineNumber":139,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":140,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":141,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":142,"author":{"gitId":"marcuspeh"},"content":"     * Prints out the exit message when chat ends.","lastModifiedDate":"2021-08-21"},{"lineNumber":143,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":144,"author":{"gitId":"marcuspeh"},"content":"    public void exitMessage() {","lastModifiedDate":"2021-08-21"},{"lineNumber":145,"author":{"gitId":"marcuspeh"},"content":"        printMessage(\"Farewell! Hope to see you again.\");","lastModifiedDate":"2021-08-21"},{"lineNumber":146,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":147,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":148,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":149,"author":{"gitId":"marcuspeh"},"content":"     * Prints out chat error message when command is not recognized.","lastModifiedDate":"2021-08-21"},{"lineNumber":150,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":151,"author":{"gitId":"marcuspeh"},"content":"    public void chatErrorMessage() {","lastModifiedDate":"2021-08-21"},{"lineNumber":152,"author":{"gitId":"marcuspeh"},"content":"        printMessage(\"Ugh! Only the following commands are recognised.\",","lastModifiedDate":"2021-08-21"},{"lineNumber":153,"author":{"gitId":"marcuspeh"},"content":"                \"bye - Ends the chat session.\",","lastModifiedDate":"2021-08-21"},{"lineNumber":154,"author":{"gitId":"marcuspeh"},"content":"                \"todo \u003cdescription\u003e - Adds a new todo to the task list.\",","lastModifiedDate":"2021-08-21"},{"lineNumber":155,"author":{"gitId":"marcuspeh"},"content":"                \"deadline \u003cdescription\u003e /by \u003cdate/time\u003e - Adds a new deadline to the task list\",","lastModifiedDate":"2021-08-21"},{"lineNumber":156,"author":{"gitId":"marcuspeh"},"content":"                \"event \u003cdescription\u003e /at \u003cdate/time\u003e - Adds a new event to the task list\",","lastModifiedDate":"2021-08-21"},{"lineNumber":157,"author":{"gitId":"marcuspeh"},"content":"                \"list - return a list of all the task\",","lastModifiedDate":"2021-08-21"},{"lineNumber":158,"author":{"gitId":"marcuspeh"},"content":"                \"done \u003cnumber\u003e - Sets the task to be done\",","lastModifiedDate":"2021-08-21"},{"lineNumber":159,"author":{"gitId":"marcuspeh"},"content":"                \"delete \u003cnumber\u003e - Delete the task\");","lastModifiedDate":"2021-08-21"},{"lineNumber":160,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":161,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":162,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":163,"author":{"gitId":"marcuspeh"},"content":"     * Prints out error message if done message does not contains number.","lastModifiedDate":"2021-08-21"},{"lineNumber":164,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":165,"author":{"gitId":"marcuspeh"},"content":"    public void doneErrorMessage() {","lastModifiedDate":"2021-08-21"},{"lineNumber":166,"author":{"gitId":"marcuspeh"},"content":"        printMessage(\"Ugh! The command should be in this format:\",","lastModifiedDate":"2021-08-21"},{"lineNumber":167,"author":{"gitId":"marcuspeh"},"content":"                \"done \u003cnumber\u003e\");","lastModifiedDate":"2021-08-21"},{"lineNumber":168,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":169,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":170,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":171,"author":{"gitId":"marcuspeh"},"content":"     * Prints out error message if done message is out of range.","lastModifiedDate":"2021-08-21"},{"lineNumber":172,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":173,"author":{"gitId":"marcuspeh"},"content":"    public void doneIndexErrorMessage() {","lastModifiedDate":"2021-08-21"},{"lineNumber":174,"author":{"gitId":"marcuspeh"},"content":"        printMessage(\"Ugh! The command should be in this format:\",","lastModifiedDate":"2021-08-21"},{"lineNumber":175,"author":{"gitId":"marcuspeh"},"content":"                \"done \u003cnumber\u003e\",","lastModifiedDate":"2021-08-21"},{"lineNumber":176,"author":{"gitId":"marcuspeh"},"content":"                \"Note: number is based on the number from command \u0027list\u0027\");","lastModifiedDate":"2021-08-21"},{"lineNumber":177,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":178,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":179,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":180,"author":{"gitId":"marcuspeh"},"content":"     * Prints out error message if todo message does not contains description.","lastModifiedDate":"2021-08-21"},{"lineNumber":181,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":182,"author":{"gitId":"marcuspeh"},"content":"    public void todoErrorMessage() {","lastModifiedDate":"2021-08-21"},{"lineNumber":183,"author":{"gitId":"marcuspeh"},"content":"        printMessage(\"Ugh! The command should be in this format:\",","lastModifiedDate":"2021-08-21"},{"lineNumber":184,"author":{"gitId":"marcuspeh"},"content":"                \"todo \u003cdescription\u003e\");","lastModifiedDate":"2021-08-21"},{"lineNumber":185,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":186,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":187,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":188,"author":{"gitId":"marcuspeh"},"content":"     * Prints out error message if deadline message does not contains /by.","lastModifiedDate":"2021-08-21"},{"lineNumber":189,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":190,"author":{"gitId":"marcuspeh"},"content":"    public void deadlineErrorMessage() {","lastModifiedDate":"2021-08-21"},{"lineNumber":191,"author":{"gitId":"marcuspeh"},"content":"        printMessage(\"Ugh! The command should be in this format:\",","lastModifiedDate":"2021-08-21"},{"lineNumber":192,"author":{"gitId":"marcuspeh"},"content":"                \"deadline \u003cdescription\u003e /by \u003cdate/time\u003e\");","lastModifiedDate":"2021-08-21"},{"lineNumber":193,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":194,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":195,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":196,"author":{"gitId":"marcuspeh"},"content":"     * Prints out error message if delete message does not contains number.","lastModifiedDate":"2021-08-21"},{"lineNumber":197,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":198,"author":{"gitId":"marcuspeh"},"content":"    public void deleteErrorMessage() {","lastModifiedDate":"2021-08-21"},{"lineNumber":199,"author":{"gitId":"marcuspeh"},"content":"        printMessage(\"Ugh! The command should be in this format:\",","lastModifiedDate":"2021-08-21"},{"lineNumber":200,"author":{"gitId":"marcuspeh"},"content":"                \"delete \u003cnumber\u003e\");","lastModifiedDate":"2021-08-21"},{"lineNumber":201,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":202,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":203,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":204,"author":{"gitId":"marcuspeh"},"content":"     * Prints out error message if delete message is out of range.","lastModifiedDate":"2021-08-21"},{"lineNumber":205,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":206,"author":{"gitId":"marcuspeh"},"content":"    public void deleteIndexErrorMessage() {","lastModifiedDate":"2021-08-21"},{"lineNumber":207,"author":{"gitId":"marcuspeh"},"content":"        printMessage(\"Ugh! The command should be in this format:\",","lastModifiedDate":"2021-08-21"},{"lineNumber":208,"author":{"gitId":"marcuspeh"},"content":"                \"delete \u003cnumber\u003e\",","lastModifiedDate":"2021-08-21"},{"lineNumber":209,"author":{"gitId":"marcuspeh"},"content":"                \"Note: number is based on the number from command \u0027list\u0027\");","lastModifiedDate":"2021-08-21"},{"lineNumber":210,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":211,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":212,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":213,"author":{"gitId":"marcuspeh"},"content":"     * Prints out error message if event message does not contains /at.","lastModifiedDate":"2021-08-21"},{"lineNumber":214,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":215,"author":{"gitId":"marcuspeh"},"content":"    public void eventErrorMessage() {","lastModifiedDate":"2021-08-21"},{"lineNumber":216,"author":{"gitId":"marcuspeh"},"content":"        printMessage(\"Ugh! The command should be in this format:\",","lastModifiedDate":"2021-08-21"},{"lineNumber":217,"author":{"gitId":"marcuspeh"},"content":"                \"event \u003cdescription\u003e /at \u003cdate/time\u003e\");","lastModifiedDate":"2021-08-21"},{"lineNumber":218,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":219,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":220,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":221,"author":{"gitId":"marcuspeh"},"content":"     * Prints out error message if dateTime format is invalid.","lastModifiedDate":"2021-08-21"},{"lineNumber":222,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":223,"author":{"gitId":"marcuspeh"},"content":"    public void dateTimeErrorMessage() {","lastModifiedDate":"2021-08-21"},{"lineNumber":224,"author":{"gitId":"marcuspeh"},"content":"        printMessage(\"Date/Time format is wrong. Ensure that it is in the this format:\",","lastModifiedDate":"2021-08-21"},{"lineNumber":225,"author":{"gitId":"marcuspeh"},"content":"                \"dd/mm/yy hhmm (24hrs format)\");","lastModifiedDate":"2021-08-21"},{"lineNumber":226,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":227,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":228,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":229,"author":{"gitId":"marcuspeh"},"content":"     * Formats the sentences that will be printed out by the chatbot.","lastModifiedDate":"2021-08-21"},{"lineNumber":230,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":231,"author":{"gitId":"marcuspeh"},"content":"     * @param strings Arbitrary number of strings to be printed out","lastModifiedDate":"2021-08-21"},{"lineNumber":232,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":233,"author":{"gitId":"marcuspeh"},"content":"    private void printMessage(String... strings) {","lastModifiedDate":"2021-08-21"},{"lineNumber":234,"author":{"gitId":"marcuspeh"},"content":"        System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2021-08-21"},{"lineNumber":235,"author":{"gitId":"marcuspeh"},"content":"        for (String str: strings)","lastModifiedDate":"2021-08-21"},{"lineNumber":236,"author":{"gitId":"marcuspeh"},"content":"            System.out.println(\"\\t\" + str);","lastModifiedDate":"2021-08-21"},{"lineNumber":237,"author":{"gitId":"marcuspeh"},"content":"        System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2021-08-21"},{"lineNumber":238,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":239,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":240,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"marcuspeh":240}},{"path":"src/test/java/duke/command/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"import duke.util.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"    public void parseChat_lowercaseInput_success() {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"            Command command \u003d Parser.parseChat(\"bye\");","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"            assertNull(command, \"Exit command should not return anything.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"            fail();","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"            boolean isInstant \u003d Parser.parseChat(\"list\") instanceof ListCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"            assertTrue(isInstant, \"List command return is returned.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"            fail();","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"            boolean isInstant \u003d Parser.parseChat(\"done 2\") instanceof DoneCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"            assertTrue(isInstant, \"Done command return is returned.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"            fail();","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"marcuspeh"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"            boolean isInstant \u003d Parser.parseChat(\"deadline cs2106\") instanceof DeadlineCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"            assertTrue(isInstant, \"Deadline command return is returned.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"marcuspeh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"marcuspeh"},"content":"            fail();","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"marcuspeh"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"marcuspeh"},"content":"            boolean isInstant \u003d Parser.parseChat(\"event cs2106\") instanceof EventCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"marcuspeh"},"content":"            assertTrue(isInstant, \"Event command return is returned.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"marcuspeh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"marcuspeh"},"content":"            fail();","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"marcuspeh"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"marcuspeh"},"content":"            boolean isInstant \u003d Parser.parseChat(\"todo cs2106\") instanceof TodoCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"marcuspeh"},"content":"            assertTrue(isInstant, \"Todo command return is returned.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"marcuspeh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"marcuspeh"},"content":"            fail();","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"marcuspeh"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"marcuspeh"},"content":"            boolean isInstant \u003d Parser.parseChat(\"delete 3\") instanceof DeleteCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"marcuspeh"},"content":"            assertTrue(isInstant, \"Delete command return is returned.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"marcuspeh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"marcuspeh"},"content":"            fail();","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"marcuspeh"},"content":"    public void parseChat_uppercaseInput_success() {","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"marcuspeh"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"marcuspeh"},"content":"            Command command \u003d Parser.parseChat(\"BYE\");","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"marcuspeh"},"content":"            assertNull(command, \"Exit command should not return anything.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"marcuspeh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"marcuspeh"},"content":"            fail();","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"marcuspeh"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"marcuspeh"},"content":"            boolean isInstant \u003d Parser.parseChat(\"LIST\") instanceof ListCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"marcuspeh"},"content":"            assertTrue(isInstant, \"List command return is returned.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"marcuspeh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"marcuspeh"},"content":"            fail();","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"marcuspeh"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"marcuspeh"},"content":"            boolean isInstant \u003d Parser.parseChat(\"DONE 2\") instanceof DoneCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"marcuspeh"},"content":"            assertTrue(isInstant, \"Done command return is returned.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"marcuspeh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"marcuspeh"},"content":"            fail();","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"marcuspeh"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"marcuspeh"},"content":"            boolean isInstant \u003d Parser.parseChat(\"DEADLINE cs2106\") instanceof DeadlineCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"marcuspeh"},"content":"            assertTrue(isInstant, \"Deadline command return is returned.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"marcuspeh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"marcuspeh"},"content":"            fail();","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"marcuspeh"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"marcuspeh"},"content":"            boolean isInstant \u003d Parser.parseChat(\"EVENT cs2106\") instanceof EventCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"marcuspeh"},"content":"            assertTrue(isInstant, \"Event command return is returned.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"marcuspeh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"marcuspeh"},"content":"            fail();","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"marcuspeh"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"marcuspeh"},"content":"            boolean isInstant \u003d Parser.parseChat(\"TODO cs2106\") instanceof TodoCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"marcuspeh"},"content":"            assertTrue(isInstant, \"Todo command return is returned.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"marcuspeh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"marcuspeh"},"content":"            fail();","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"marcuspeh"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"marcuspeh"},"content":"            boolean isInstant \u003d Parser.parseChat(\"DELETE 3\") instanceof DeleteCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"marcuspeh"},"content":"            assertTrue(isInstant, \"Delete command return is returned.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"marcuspeh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"marcuspeh"},"content":"            fail();","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"marcuspeh"},"content":"    public void parseChat_incorrectInput_exceptionThrown() {","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"marcuspeh"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"marcuspeh"},"content":"            Parser.parseChat(\"hello world.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"marcuspeh"},"content":"            fail();","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"marcuspeh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":123,"author":{"gitId":"marcuspeh"},"content":"            assertEquals(\"Command not parsable\", e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"marcuspeh":126}},{"path":"src/test/java/duke/task/DeadlinesTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"package duke.task;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"public class DeadlinesTest {","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"    public void toString_parseableDate_success(){","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"            Deadlines deadline \u003d new Deadlines(\"CS2103\", \"21/8/21 1500\");","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"            assertEquals(\"[D][ ] CS2103 (by: 21/08/21 1500)\", deadline.toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"            fail();","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"            Deadlines deadline \u003d new Deadlines(\"CS2103\", \"21/8/21 1500\", true);","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"            assertEquals(\"[D][X] CS2103 (by: 21/08/21 1500)\", deadline.toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"            fail();","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"            Deadlines deadline \u003d new Deadlines(\"CS2103\", \"21/8/21 1500\", false);","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"            assertEquals(\"[D][ ] CS2103 (by: 21/08/21 1500)\", deadline.toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"            fail();","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"    public void toString_unparseableDate_exceptionThrown() {","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"marcuspeh"},"content":"            Deadlines deadline \u003d new Deadlines(\"CS2103\", \"21/8/21 p\");","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"marcuspeh"},"content":"            fail();","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"marcuspeh"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"marcuspeh"},"content":"            assertEquals(\"Unparseable date: \\\"21/8/21 p\\\"\", e.getMessage());","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"marcuspeh"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"marcuspeh"},"content":"            Deadlines deadline \u003d new Deadlines(\"CS2103\", \"21/8/21 p\", true);","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"marcuspeh"},"content":"            fail();","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"marcuspeh"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"marcuspeh"},"content":"            assertEquals(\"Unparseable date: \\\"21/8/21 p\\\"\", e.getMessage());","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"marcuspeh"},"content":"    public void testSaveOutputConversion() {","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"marcuspeh"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"marcuspeh"},"content":"            Deadlines deadline \u003d new Deadlines(\"CS2103\", \"21/8/21 1500\");","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"marcuspeh"},"content":"            assertEquals(\"D | CS2103 | 0 | 21/08/21 1500\", deadline.saveOutput());","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"marcuspeh"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"marcuspeh"},"content":"            fail();","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"marcuspeh"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"marcuspeh"},"content":"            Deadlines deadline \u003d new Deadlines(\"CS2103\", \"21/8/21 1500\", true);","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"marcuspeh"},"content":"            assertEquals(\"D | CS2103 | 1 | 21/08/21 1500\", deadline.saveOutput());","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"marcuspeh"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"marcuspeh"},"content":"            fail();","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"marcuspeh"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"marcuspeh"},"content":"            Deadlines deadline \u003d new Deadlines(\"CS2103\", \"21/8/21 1500\", false);","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"marcuspeh"},"content":"            assertEquals(\"D | CS2103 | 0 | 21/08/21 1500\", deadline.saveOutput());","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"marcuspeh"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"marcuspeh"},"content":"            fail();","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"marcuspeh":76}},{"path":"src/test/java/duke/task/EventsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"package duke.task;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"public class EventsTest {","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"    public void toString_parseableDate_success(){","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"            Events event \u003d new Events(\"CS2103\", \"21/8/21 1500\");","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"            assertEquals(\"[E][ ] CS2103 (at: 21/08/21 1500)\", event.toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"            fail();","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"            Events event \u003d new Events(\"CS2103\", \"21/8/21 1500\", true);","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"            assertEquals(\"[E][X] CS2103 (at: 21/08/21 1500)\", event.toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"            fail();","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"            Events event \u003d new Events(\"CS2103\", \"21/8/21 1500\", false);","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"            assertEquals(\"[E][ ] CS2103 (at: 21/08/21 1500)\", event.toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"            fail();","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"    public void toString_unparseableDate_exceptionThrown() {","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"marcuspeh"},"content":"            Events event \u003d new Events(\"CS2103\", \"21/8/21 p\");","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"marcuspeh"},"content":"            fail();","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"marcuspeh"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"marcuspeh"},"content":"            assertEquals(\"Unparseable date: \\\"21/8/21 p\\\"\", e.getMessage());","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"marcuspeh"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"marcuspeh"},"content":"            Events event \u003d new Events(\"CS2103\", \"21/8/21 p\", true);","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"marcuspeh"},"content":"            fail();","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"marcuspeh"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"marcuspeh"},"content":"            assertEquals(\"Unparseable date: \\\"21/8/21 p\\\"\", e.getMessage());","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"marcuspeh"},"content":"    public void testSaveOutputConversion() {","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"marcuspeh"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"marcuspeh"},"content":"            Events event \u003d new Events(\"CS2103\", \"21/8/21 1500\");","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"marcuspeh"},"content":"            assertEquals(\"E | CS2103 | 0 | 21/08/21 1500\", event.saveOutput());","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"marcuspeh"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"marcuspeh"},"content":"            fail();","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"marcuspeh"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"marcuspeh"},"content":"            Events event \u003d new Events(\"CS2103\", \"21/8/21 1500\", true);","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"marcuspeh"},"content":"            assertEquals(\"E | CS2103 | 1 | 21/08/21 1500\", event.saveOutput());","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"marcuspeh"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"marcuspeh"},"content":"            fail();","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"marcuspeh"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"marcuspeh"},"content":"            Events event \u003d new Events(\"CS2103\", \"21/8/21 1500\", false);","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"marcuspeh"},"content":"            assertEquals(\"E | CS2103 | 0 | 21/08/21 1500\", event.saveOutput());","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"marcuspeh"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"marcuspeh"},"content":"            fail();","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"marcuspeh":76}},{"path":"src/test/java/duke/task/ToDosTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"package duke.task;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"public class ToDosTest {","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"    public void testToStringConversion(){","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"        ToDos todo1 \u003d new ToDos(\"CS2103\");","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"        assertEquals(\"[T][ ] CS2103\", todo1.toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"        ToDos todo2 \u003d new ToDos(\"CS2103\", true);","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"        assertEquals(\"[T][X] CS2103\", todo2.toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"        ToDos todo3 \u003d new ToDos(\"CS2103\", false);","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"        assertEquals(\"[T][ ] CS2103\", todo3.toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"    public void testSaveOutputConversion() {","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"            ToDos todo1 \u003d new ToDos(\"CS2103\");","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"            assertEquals(\"T | CS2103 | 0\", todo1.saveOutput());","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"            ToDos todo2 \u003d new ToDos(\"CS2103\", true);","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"            assertEquals(\"T | CS2103 | 1\", todo2.saveOutput());","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"            ToDos todo3 \u003d new ToDos(\"CS2103\", false);","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"            assertEquals(\"T | CS2103 | 0\", todo3.saveOutput());","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"marcuspeh":34}},{"path":"src/test/java/duke/util/DukeExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"package duke.util;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"public class DukeExceptionTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"    public void testExceptionMessage(){","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"        assertEquals(\"Hello world\", new DukeException(\"Hello world\").getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"marcuspeh":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"todo","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"todo Visit new theme park","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"deadline","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"deadline Submit report","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"deadline Submit report /by","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"deadline Submit report /by 01/01/21 1500","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"event","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"event Meeting with boss","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"event Meeting with boss /at","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"event Meeting with boss /at 12/12/21 1400","lastModifiedDate":"2021-08-20"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"done","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"done x","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"done 0","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"done 1","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"done 1","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"delete","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"delete -1","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"delete x","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"delete 3","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"delete 1","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"delete 1","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"event CS2103T /at 12 Dec 21 3pm","lastModifiedDate":"2021-08-20"},{"lineNumber":36,"author":{"gitId":"marcuspeh"},"content":"deadline CS2106 /by 3/9/21 2pm","lastModifiedDate":"2021-08-20"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"bye","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"marcuspeh":37}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"javac  -cp ..\\src\\main\\java\\duke\\task -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\task\\*.java","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"javac  -cp ..\\src\\main\\java\\duke\\util -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\util\\*.java","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"javac  -cp ..\\src\\main\\java\\duke\\command -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\command\\*.java","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"javac  -cp ..\\src\\main\\java\\duke -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"marcuspeh":5,"-":19}}]
