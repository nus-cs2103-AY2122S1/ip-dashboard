[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"plugins {","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"    id \u0027java\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"    id \u0027application\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.0.0\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"group \u0027org.example\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"version \u00271.0-SNAPSHOT\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":"repositories {","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":"    mavenCentral()","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"test {","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"    useJUnitPlatform()","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"boonhaii"},"content":"run {","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"boonhaii"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"boonhaii"},"content":"dependencies {","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"boonhaii"},"content":"    implementation \u0027junit:junit:4.13.2\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"boonhaii"},"content":"    testImplementation \u0027junit:junit:4.13.2\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"boonhaii"},"content":"    implementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"boonhaii"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"boonhaii"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"boonhaii"},"content":"    testRuntimeOnly(\"org.junit.platform:junit-platform-launcher:1.7.2\")","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"boonhaii"},"content":"    testRuntimeOnly(\"org.junit.jupiter:junit-jupiter-engine:5.7.2\")","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"boonhaii"},"content":"    testRuntimeOnly(\"org.junit.vintage:junit-vintage-engine:5.7.2\")","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"boonhaii"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"boonhaii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"boonhaii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"boonhaii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"boonhaii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"boonhaii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"boonhaii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"boonhaii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"boonhaii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"boonhaii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"boonhaii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"boonhaii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"boonhaii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"boonhaii"},"content":"checkstyle {","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"boonhaii"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"boonhaii":51}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":" * Main class of project.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":"    private static Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"    private UI userInt;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"    private User user;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"boonhaii"},"content":"     * Constructor of Duke instance, which initalises the other","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"boonhaii"},"content":"     * components of the project.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"boonhaii"},"content":"     * @param user User object which encapsulates the users\u0027 name and visit history","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"boonhaii"},"content":"    private Duke(User user) {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"boonhaii"},"content":"        this.user \u003d user;","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"boonhaii"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"boonhaii"},"content":"        this.userInt \u003d new UI();","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"boonhaii"},"content":"        try {","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"boonhaii"},"content":"            this.tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"boonhaii"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"boonhaii"},"content":"            userInt.showLoadingError();","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"boonhaii"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"boonhaii"},"content":"     * Main method which starts up the Duii Bot,","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"boonhaii"},"content":"     * parsing input and executing the respective behaviours.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"boonhaii"},"content":"    private void run() {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"boonhaii"},"content":"        userInt.greet(this.user);","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"boonhaii"},"content":"        userInt.printPrevSession(this.tasks, this.user);","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"boonhaii"},"content":"        userInt.showLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"boonhaii"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"boonhaii"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"boonhaii"},"content":"            try {","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"boonhaii"},"content":"                String fullCommand \u003d userInt.readCommand(Duke.sc);","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"boonhaii"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"boonhaii"},"content":"                c.execute(tasks, userInt, storage);","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"boonhaii"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"boonhaii"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"boonhaii"},"content":"                userInt.showError(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"boonhaii"},"content":"            } finally {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"boonhaii"},"content":"                userInt.showLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"boonhaii"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":56,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":57,"author":{"gitId":"boonhaii"},"content":"        System.out.println(\"Session Terminated.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":59,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":60,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"boonhaii"},"content":"     * Fully terminates the bot to prevent any inputs from any user.","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"boonhaii"},"content":"    public static void shutdown() {","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"boonhaii"},"content":"        Duke.sc.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":66,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":67,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"boonhaii"},"content":"     * Main method of the project.","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"boonhaii"},"content":"     * @param args Command Line arguments.","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"boonhaii"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"boonhaii"},"content":"        Duke user1 \u003d new Duke(new User(\"User 1\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"boonhaii"},"content":"        user1.run();","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"boonhaii"},"content":"        Duke.shutdown();","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"boonhaii":74,"-":3}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"boonhaii"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"boonhaii"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"boonhaii"},"content":" * Parser class which handles the processing of the inputs detected","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"boonhaii"},"content":" * by the User Interface.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"boonhaii"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"boonhaii"},"content":"public class Parser {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"boonhaii"},"content":"     * Parses the input from the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"boonhaii"},"content":"     * @param input The input inserted by the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"boonhaii"},"content":"     * @return The respective commands to be executed based on the input.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"boonhaii"},"content":"     * @throws DukeException This exception is thrown when the input is invalid.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"boonhaii"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"boonhaii"},"content":"        String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"boonhaii"},"content":"        String[] details;","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"boonhaii"},"content":"        String description;","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"boonhaii"},"content":"        String[] dateTimeArr;","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"boonhaii"},"content":"        LocalDate date;","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"boonhaii"},"content":"        LocalTime time;","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"boonhaii"},"content":"        LocalDateTime dateTimeInfo;","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"boonhaii"},"content":"        int taskid;","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"boonhaii"},"content":"        switch (inputArr[0]) {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"boonhaii"},"content":"        case \"list\":","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"boonhaii"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"boonhaii"},"content":"        case \"done\":","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"boonhaii"},"content":"            if (inputArr.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"boonhaii"},"content":"                throw new DukeException(\"Indicate the id of the task which you have completed!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"boonhaii"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"boonhaii"},"content":"            taskid \u003d Integer.parseInt(inputArr[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"boonhaii"},"content":"            return new DoneCommand(taskid);","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"boonhaii"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"boonhaii"},"content":"            if (inputArr.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"boonhaii"},"content":"                throw new DukeException(\"Indicate the id of the task which you want to remove!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"boonhaii"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"boonhaii"},"content":"            taskid \u003d Integer.parseInt(inputArr[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"boonhaii"},"content":"            return new DeleteCommand(taskid);","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"boonhaii"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"boonhaii"},"content":"            if (inputArr.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"boonhaii"},"content":"                throw new DukeException(\"Input in the format: todo *description*\");","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"boonhaii"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"boonhaii"},"content":"            description \u003d input.replaceFirst(\"todo \", \"\");","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"boonhaii"},"content":"            return new AddCommand(new Task(description));","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"boonhaii"},"content":"        case \"event\":","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"boonhaii"},"content":"            details \u003d input.split(\" /at \");","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"boonhaii"},"content":"            description \u003d details[0].replaceFirst(\"event \", \"\");","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"boonhaii"},"content":"            if (details.length \u003d\u003d 1 || description.equals(\"\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"boonhaii"},"content":"                throw new DukeException(\"Input the following format: event *description* /at *DD/MM/YYYY* *24H-Time*\");","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"boonhaii"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"boonhaii"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"boonhaii"},"content":"                dateTimeArr \u003d details[1].split(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"boonhaii"},"content":"                date \u003d LocalDate.parse(dateTimeArr[0], DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"boonhaii"},"content":"                time \u003d dateTimeArr.length \u003d\u003d 1","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"boonhaii"},"content":"                        ? LocalTime.of(0, 0)","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"boonhaii"},"content":"                        : LocalTime.parse(dateTimeArr[1], DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"boonhaii"},"content":"                dateTimeInfo \u003d LocalDateTime.of(date, time);","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"boonhaii"},"content":"                return new AddCommand(new Event(description, dateTimeInfo));","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"boonhaii"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"boonhaii"},"content":"                throw new DukeException(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"boonhaii"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"boonhaii"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"boonhaii"},"content":"            details \u003d input.split(\" /by \");","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"boonhaii"},"content":"            description \u003d details[0].replaceFirst(\"deadline \", \"\");","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"boonhaii"},"content":"            if (details.length \u003d\u003d 1 || description.equals(\"\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"boonhaii"},"content":"                throw new DukeException(\"Input the following format: \"","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"boonhaii"},"content":"                        + \"deadline *description* /at *DD/MM/YYYY* *24H-Time*\");","lastModifiedDate":"2021-08-28"},{"lineNumber":87,"author":{"gitId":"boonhaii"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"boonhaii"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"boonhaii"},"content":"                dateTimeArr \u003d details[1].split(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"boonhaii"},"content":"                date \u003d LocalDate.parse(dateTimeArr[0], DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"boonhaii"},"content":"                time \u003d dateTimeArr.length \u003d\u003d 1","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"boonhaii"},"content":"                        ? LocalTime.of(0, 0)","lastModifiedDate":"2021-08-28"},{"lineNumber":93,"author":{"gitId":"boonhaii"},"content":"                        : LocalTime.parse(dateTimeArr[1], DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":94,"author":{"gitId":"boonhaii"},"content":"                dateTimeInfo \u003d LocalDateTime.of(date, time);","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"boonhaii"},"content":"                return new AddCommand(new Deadline(description, dateTimeInfo));","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"boonhaii"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"boonhaii"},"content":"                throw new DukeException(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"boonhaii"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"boonhaii"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"boonhaii"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"boonhaii"},"content":"        case \"find\":","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"boonhaii"},"content":"            if (inputArr.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"boonhaii"},"content":"                throw new DukeException(\"Input the keyword to be used for the search!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"boonhaii"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"boonhaii"},"content":"                return new FindCommand(inputArr[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"boonhaii"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"boonhaii"},"content":"        default:","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"boonhaii"},"content":"            throw new DukeException(\"I don\u0027t get what you mean? Try again!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"boonhaii":113}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"boonhaii"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"boonhaii"},"content":" * Storage class handles the reading and writing of data","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"boonhaii"},"content":" * from the local file system.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"boonhaii"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"boonhaii"},"content":"public class Storage {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"boonhaii"},"content":"    private DateTimeFormatter dateTimeFormat;","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"boonhaii"},"content":"    private File file;","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"boonhaii"},"content":"     * Public constructor to initialise the storage for the Duii Bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"boonhaii"},"content":"    public Storage() {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"boonhaii"},"content":"        this.dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"yyyy MMM dd HH:mm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"boonhaii"},"content":"     * Searches the current file system for existing saved files.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"boonhaii"},"content":"     * Creates a new data directory consisting of the text file to write","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"boonhaii"},"content":"     * into if saved file does not exist.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"boonhaii"},"content":"     * @return The abstract representation of the pathname of the created file","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"boonhaii"},"content":"    public File getfiles() {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"boonhaii"},"content":"        String home \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"boonhaii"},"content":"        Path path \u003d Paths.get(home, \"ip\", \"data\");","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"boonhaii"},"content":"        File directory \u003d new File(path.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"boonhaii"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"boonhaii"},"content":"            System.out.println(\"\u0027data\u0027 directory not found. Creating the directory...\");","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"boonhaii"},"content":"            directory.mkdir();","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"boonhaii"},"content":"            System.out.println(\"Directory created.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"boonhaii"},"content":"        Path filepath \u003d Paths.get(home, \"ip\", \"data\", \"duke.txt\");","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"boonhaii"},"content":"        File file \u003d new File(filepath.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"boonhaii"},"content":"        if (!file.exists()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"boonhaii"},"content":"            System.out.println(\"Data file not found. Creating a new file...\");","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"boonhaii"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"boonhaii"},"content":"                file.createNewFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"boonhaii"},"content":"                System.out.println(\"File created.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"boonhaii"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"boonhaii"},"content":"                System.out.println(\"IO error occured\");","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"boonhaii"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"boonhaii"},"content":"        return file;","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"boonhaii"},"content":"     * Writes the saved tasks from previous sessions (if any) into","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"boonhaii"},"content":"     * the local TaskList object.","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"boonhaii"},"content":"     * @return An ArrayList initialised with the previously saved tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"boonhaii"},"content":"     * @throws DukeException If an IOException occurs upon reading of file, which is passed on to","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"boonhaii"},"content":"     *                       the main() method of Duke class.","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"boonhaii"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"boonhaii"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"boonhaii"},"content":"            file \u003d this.getfiles();","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"boonhaii"},"content":"            FileReader reader \u003d new FileReader(file);","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"boonhaii"},"content":"            BufferedReader buffreader \u003d new BufferedReader(reader);","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"boonhaii"},"content":"            String text;","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"boonhaii"},"content":"            ArrayList\u003cTask\u003e saved \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"boonhaii"},"content":"            while ((text \u003d buffreader.readLine()) !\u003d null) {","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"boonhaii"},"content":"                String[] lineArr \u003d text.split(\" | \");","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"boonhaii"},"content":"                switch (lineArr.length) {","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"boonhaii"},"content":"                case 3:","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"boonhaii"},"content":"                    // To complete TaskList class","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"boonhaii"},"content":"                    Task toDo \u003d new Task(lineArr[2]);","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"boonhaii"},"content":"                    saved.add(toDo);","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"boonhaii"},"content":"                    if (lineArr[1].equals(\"1\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"boonhaii"},"content":"                        toDo.complete();","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"boonhaii"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"boonhaii"},"content":"                    break;","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"boonhaii"},"content":"                case 4:","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"boonhaii"},"content":"                    if (lineArr[0].equals(\"D\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"boonhaii"},"content":"                        Deadline deadline \u003d new Deadline(lineArr[2], LocalDateTime.parse(lineArr[3],","lastModifiedDate":"2021-08-28"},{"lineNumber":94,"author":{"gitId":"boonhaii"},"content":"                                this.dateTimeFormat));","lastModifiedDate":"2021-08-28"},{"lineNumber":95,"author":{"gitId":"boonhaii"},"content":"                        saved.add(deadline);","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"boonhaii"},"content":"                    } else if (lineArr[0].equals(\"E\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"boonhaii"},"content":"                        Event event \u003d new Event(lineArr[2], LocalDateTime.parse(lineArr[3], this.dateTimeFormat));","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"boonhaii"},"content":"                        saved.add(event);","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"boonhaii"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"boonhaii"},"content":"                    break;","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"boonhaii"},"content":"                default:","lastModifiedDate":"2021-08-28"},{"lineNumber":102,"author":{"gitId":"boonhaii"},"content":"                    throw new DukeException(\"Error loading input file.\");","lastModifiedDate":"2021-08-28"},{"lineNumber":103,"author":{"gitId":"boonhaii"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"boonhaii"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"boonhaii"},"content":"            return saved;","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"boonhaii"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"boonhaii"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"boonhaii"},"content":"     * Writes the tasks of the current session into the dynamically created file","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"boonhaii"},"content":"     * on the local filesystem.","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"boonhaii"},"content":"     * @throws DukeException If an IOException occurs during writing of file, which","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"boonhaii"},"content":"     *                       is passed on to the main() method of Duke class.","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"boonhaii"},"content":"    public void save(TaskList list) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"boonhaii"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"boonhaii"},"content":"            FileWriter writer \u003d new FileWriter(file, false);","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"boonhaii"},"content":"            for (Task item : list.getAllTasks()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"boonhaii"},"content":"                writer.write(item.displayInfo() + \"\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"boonhaii"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"boonhaii"},"content":"            writer.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"boonhaii"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"boonhaii"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":128,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"boonhaii":129}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":" * TaskList class handles the manipulation of the list","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":" * during active usage of the Duii Bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":"public class TaskList {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"    private int listLength;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"     * Public constructor to initialise TaskList with data","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":"     * from the previous session for the Duii Bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"boonhaii"},"content":"     * @param tasks Creates a task list if there were remaining tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"boonhaii"},"content":"     *              from the previous session.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"boonhaii"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"boonhaii"},"content":"        this.list \u003d tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"boonhaii"},"content":"        this.listLength \u003d tasks.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"boonhaii"},"content":"     * Public constructor to initialise a new TaskList for","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"boonhaii"},"content":"     * the Duii Bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"boonhaii"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"boonhaii"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"boonhaii"},"content":"        this.listLength \u003d 0;","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"boonhaii"},"content":"     * Inserts the input task into the end of the ArrayList,","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"boonhaii"},"content":"     * and updates the total number of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"boonhaii"},"content":"     * @param task The task to be added to the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"boonhaii"},"content":"     * @throws DukeException If an error has occurred in adding the","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"boonhaii"},"content":"     *                       task into the ArrayList.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"boonhaii"},"content":"    public void add(Task task) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"boonhaii"},"content":"        this.list.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"boonhaii"},"content":"        this.listLength++;","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"boonhaii"},"content":"     * Removes the task with the corresponding id from the ArrayList,","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"boonhaii"},"content":"     * and updates the total number of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"boonhaii"},"content":"     * @param id The id of the task as per display with the list() method.","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"boonhaii"},"content":"     * @throws DukeException This error is thrown if the id specified is invalid.","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"boonhaii"},"content":"     * @returns The task object which was removed from the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"boonhaii"},"content":"    public Task delete(int id) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"boonhaii"},"content":"        if (id - 1 \u003e this.listLength) {","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"boonhaii"},"content":"            throw new DukeException(\"The id you entered was invalid!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"boonhaii"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"boonhaii"},"content":"            Task removedTask \u003d this.list.remove(id - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"boonhaii"},"content":"            this.listLength--;","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"boonhaii"},"content":"            return removedTask;","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"boonhaii"},"content":"     * Marks a specific task with the corresponding id as completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"boonhaii"},"content":"     * @param id The id of the task as per display with the list() method.","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"boonhaii"},"content":"     * @throws DukeException This error is thrown if the id specified is invalid.","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"boonhaii"},"content":"     * @returns The task object which was marked as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"boonhaii"},"content":"    public Task markDone(int id) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"boonhaii"},"content":"        if (id - 1 \u003e this.listLength) {","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"boonhaii"},"content":"            throw new DukeException(\"The id you entered was invalid!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"boonhaii"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"boonhaii"},"content":"            Task doneTask \u003d this.list.get(id - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"boonhaii"},"content":"            doneTask.complete();","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"boonhaii"},"content":"            return doneTask;","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"boonhaii"},"content":"     * Returns the ArrayList consisting of all the tasks in the active session.","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"boonhaii"},"content":"     * @return ArrayList consisting of all the tasks in the active session.","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"boonhaii"},"content":"    public ArrayList\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"boonhaii"},"content":"        return this.list;","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"boonhaii":94}},{"path":"src/main/java/duke/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":" * UI class which handles all the interactions with the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":"public class UI {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"    private static String logo \u003d \" ____        _ _\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"            + \"|  _ \\\\ _   _(_|_)\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"            + \"| | | | | | | | |\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"            + \"| |_| | |_| | | |\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"            + \"|____/ \\\\__,_|_|_|\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"boonhaii"},"content":"     * Prints the welcome message to the user\u0027s terminal.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"boonhaii"},"content":"    public void greet(User user) {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"boonhaii"},"content":"        System.out.println(logo);","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"boonhaii"},"content":"        System.out.println(String.format(\"Hello %s! I\u0027m Duii, your personal assistant!\", user.getUsername()));","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"boonhaii"},"content":"        System.out.println(\"What do you need help with?\");","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"boonhaii"},"content":"     * Prints the error message which has occurred during loading of file.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"boonhaii"},"content":"    public void showLoadingError() {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"boonhaii"},"content":"        System.out.println(\"Error starting up Duii.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"boonhaii"},"content":"     * Gets the input passed in by the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"boonhaii"},"content":"     * @return The input keyed in by the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"boonhaii"},"content":"    public String readCommand(Scanner sc) {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"boonhaii"},"content":"        return sc.nextLine().toLowerCase();","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"boonhaii"},"content":"     * Prints the seperating line to the terminal.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"boonhaii"},"content":"    public void showLine() {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"boonhaii"},"content":"        System.out.println(\"___________________\");","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"boonhaii"},"content":"     * Prints the error message from the thrown exception.","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"boonhaii"},"content":"    public void showError(String error) {","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"boonhaii"},"content":"        System.out.println(error);","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"boonhaii"},"content":"     * Alerts the user that a task has been marked as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"boonhaii"},"content":"    public void notifyDone(Task doneTask) {","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"boonhaii"},"content":"        System.out.println(\"You\u0027ve finished the task? Good job!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"boonhaii"},"content":"        System.out.println(\"This task has been marked as done:\");","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"boonhaii"},"content":"        System.out.println(doneTask.displayInfo());","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"boonhaii"},"content":"     * Alerts the user that a task has been deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"boonhaii"},"content":"    public void notifyDelete(Task removedTask) {","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"boonhaii"},"content":"        System.out.println(\"Okay! Removing the task:\");","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"boonhaii"},"content":"        System.out.println(removedTask.displayInfo());","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"boonhaii"},"content":"     * Displays the list of tasks in the current active session.","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"boonhaii"},"content":"    public void notifyList(ArrayList\u003cTask\u003e taskArrList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"boonhaii"},"content":"        int listLength \u003d taskArrList.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"boonhaii"},"content":"        System.out.println(\"Here\u0027s your current list:\");","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"boonhaii"},"content":"        for (int i \u003d 0; i \u003c listLength; i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"boonhaii"},"content":"            System.out.println(String.format(\"%d. %s\", i + 1, taskArrList.get(i).displayInfo()));","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"boonhaii"},"content":"     * Updates the user that there are no matches in the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"boonhaii"},"content":"    public void notifyNoMatching() {","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"boonhaii"},"content":"        System.out.println(\"There were no keyword matches!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"boonhaii"},"content":"     * Updates the user of the tasks in the list matching the keywords.","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"boonhaii"},"content":"     * @param taskArrList The ArrayList of tasks with matching keywords.","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"boonhaii"},"content":"    public void notifyMatchingList(ArrayList\u003cTask\u003e taskArrList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"boonhaii"},"content":"        int listLength \u003d taskArrList.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"boonhaii"},"content":"        System.out.println(\"Here\u0027s are the matching results:\");","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"boonhaii"},"content":"        for (int i \u003d 0; i \u003c listLength; i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"boonhaii"},"content":"            System.out.println(String.format(\"%d. %s\", i + 1, taskArrList.get(i).displayInfo()));","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":107,"author":{"gitId":"boonhaii"},"content":"     * Updates the user of the tasks in the list, after adding the new task.","lastModifiedDate":"2021-08-28"},{"lineNumber":108,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":109,"author":{"gitId":"boonhaii"},"content":"     * @param taskArrList The ArrayList of tasks in the current list.","lastModifiedDate":"2021-08-28"},{"lineNumber":110,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":111,"author":{"gitId":"boonhaii"},"content":"    public void notifyAdd(ArrayList\u003cTask\u003e taskArrList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"boonhaii"},"content":"        int listLength \u003d taskArrList.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"boonhaii"},"content":"        Task newTask \u003d taskArrList.get(listLength - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"boonhaii"},"content":"        System.out.println(\"New Task? I\u0027ve added it to the list:\");","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"boonhaii"},"content":"        System.out.println(newTask.displayInfo());","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"boonhaii"},"content":"        System.out.println(String.format(\"Now you have %d task(s) in the list.\", listLength));","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"boonhaii"},"content":"     * Shows the tasks recorded from the previous session.","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"boonhaii"},"content":"     * If the user is a new user, nothing is printed to the terminal.","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"boonhaii"},"content":"    public void printPrevSession(TaskList tasks, User user) {","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"boonhaii"},"content":"        if (!user.isNewUser()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"boonhaii"},"content":"            ArrayList\u003cTask\u003e taskArrList \u003d tasks.getAllTasks();","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"boonhaii"},"content":"            int listLength \u003d taskArrList.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"boonhaii"},"content":"            if (listLength \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":128,"author":{"gitId":"boonhaii"},"content":"                System.out.println(\"You have no outstanding tasks from the previous session.\"","lastModifiedDate":"2021-08-28"},{"lineNumber":129,"author":{"gitId":"boonhaii"},"content":"                        + \" What a productivity master!\");","lastModifiedDate":"2021-08-28"},{"lineNumber":130,"author":{"gitId":"boonhaii"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"boonhaii"},"content":"                System.out.println(\"These tasks are from the previous session:\");","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"boonhaii"},"content":"                for (int i \u003d 0; i \u003c taskArrList.size(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":133,"author":{"gitId":"boonhaii"},"content":"                    System.out.println(String.format(\"%d. %s\", i + 1, taskArrList.get(i).displayInfo()));","lastModifiedDate":"2021-08-25"},{"lineNumber":134,"author":{"gitId":"boonhaii"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":135,"author":{"gitId":"boonhaii"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":136,"author":{"gitId":"boonhaii"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":137,"author":{"gitId":"boonhaii"},"content":"            user.hasLoginBefore();","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":139,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":140,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":141,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":142,"author":{"gitId":"boonhaii"},"content":"     * Prints the exit message to the user\u0027s terminal.","lastModifiedDate":"2021-08-25"},{"lineNumber":143,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":144,"author":{"gitId":"boonhaii"},"content":"    public void exit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":145,"author":{"gitId":"boonhaii"},"content":"        System.out.println(\"You\u0027re going already? Hope to see you again soon!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":146,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":147,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"boonhaii":147}},{"path":"src/main/java/duke/User.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":" * User class which enables for multi-user usage of the bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"public class User {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":"    private String username;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"    private boolean isNewUser;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":"     * Public constructor to create a new user to start up their","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":"     * respective Duii Bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"     * @param username The desired name of the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"    public User(String username) {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"        this.username \u003d username;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":"        this.isNewUser \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"boonhaii"},"content":"     * Checks whether the user is logging in for the first time.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"boonhaii"},"content":"     * @return Whether the user is a new user.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"boonhaii"},"content":"    public boolean isNewUser() {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"boonhaii"},"content":"        return this.isNewUser;","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"boonhaii"},"content":"     * Updates the users\u0027 past login experience.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"boonhaii"},"content":"    public void hasLoginBefore() {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"boonhaii"},"content":"        this.isNewUser \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"boonhaii"},"content":"     * Gets the username of the current user.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"boonhaii"},"content":"     * @return The username of the current user.","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"boonhaii"},"content":"    public String getUsername() {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"boonhaii"},"content":"        return this.username;","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"boonhaii":45}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":"import duke.UI;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":" * AddCommand class which indicates input is adding new tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"    private Task newTask;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"boonhaii"},"content":"     * Public constructor for the AddCommand.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"boonhaii"},"content":"     * @param newTask The task to be added.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"boonhaii"},"content":"    public AddCommand(Task newTask) {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"boonhaii"},"content":"        this.newTask \u003d newTask;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"boonhaii"},"content":"     * Adds the task into the respective components of the bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"boonhaii"},"content":"     * @param tasks The TaskList associated with the current bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"boonhaii"},"content":"     * @param userInt The User Interface associated with the current bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"boonhaii"},"content":"     * @param storage The storage associated with the current bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"boonhaii"},"content":"     * @throws DukeException If any error has occurred during the addition of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"boonhaii"},"content":"    public void execute(TaskList tasks, UI userInt, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"boonhaii"},"content":"        tasks.add(this.newTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"boonhaii"},"content":"        ArrayList\u003cTask\u003e taskArrList \u003d tasks.getAllTasks();","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"boonhaii"},"content":"        userInt.notifyAdd(taskArrList);","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"boonhaii"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"boonhaii"},"content":"     * Gets the task associated with the command.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"boonhaii"},"content":"     * @return The task associated with the given command.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"boonhaii"},"content":"    public Task getTask() {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"boonhaii"},"content":"        return this.newTask;","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"boonhaii"},"content":"     * Returns a boolean determining whether the input should exit the bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"boonhaii"},"content":"     * @return If the command exits the bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"boonhaii"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"boonhaii"},"content":"        return this.isExit;","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"boonhaii":60}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"import duke.UI;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":" * Abstract class which determines the behaviour of the bot","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":" * in response to the input of the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"     * Abstract method which executes the commands.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"     * @param task The TaskList associated with the current bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":"     * @param userInt The User Interface associated with the current bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"boonhaii"},"content":"     * @param storage The storage associated with the current bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"boonhaii"},"content":"     * @throws DukeException If any error has occurred during the execution of the commands.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"boonhaii"},"content":"    public abstract void execute(TaskList task, UI userInt, Storage storage) throws DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"boonhaii"},"content":"     * Returns a boolean determining whether the input should exit the bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"boonhaii"},"content":"     * @return If the command exits the bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"boonhaii"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"boonhaii"},"content":"     * Gets the task associated with the command.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"boonhaii"},"content":"     * @return The task associated with the given command.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"boonhaii"},"content":"    public abstract Task getTask();","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"boonhaii":38}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"import duke.UI;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":"    private int taskid;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"    private Task removedTask;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"     * Public constructor of the DeleteCommand object.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"     * @param taskid The id of the task to be removed, with respect to","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":"     *               the list printed by the list() command.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"boonhaii"},"content":"    public DeleteCommand(int taskid) {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"boonhaii"},"content":"        this.taskid \u003d taskid;","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"boonhaii"},"content":"     * Removes the task in the respective component of the bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"boonhaii"},"content":"     * @param tasks The TaskList associated with the current bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"boonhaii"},"content":"     * @param userInt The User Interface associated with the current bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"boonhaii"},"content":"     * @param storage The storage associated with the current bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"boonhaii"},"content":"     * @throws DukeException If any error has occurred during the addition of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"boonhaii"},"content":"    public void execute(TaskList tasks, UI userInt, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"boonhaii"},"content":"        removedTask \u003d tasks.delete(this.taskid);","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"boonhaii"},"content":"        userInt.notifyDelete(removedTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"boonhaii"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"boonhaii"},"content":"     * Gets the task associated with the command.","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"boonhaii"},"content":"     * @return The task associated with the given command.","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"boonhaii"},"content":"    public Task getTask() {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"boonhaii"},"content":"        return this.removedTask;","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"boonhaii"},"content":"     * Returns a boolean determining whether the input should exit the bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"boonhaii"},"content":"     * @return If the command exits the bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"boonhaii"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"boonhaii"},"content":"        return this.isExit;","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"boonhaii":57}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"import duke.UI;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":"    private int taskid;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":"    private Task doneTask;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"     * Public constructor of the DoneCommand object.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"     * @param taskid The id of the task to be removed, with respect to","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"     *               the list printed by the list() command.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"boonhaii"},"content":"    public DoneCommand(int taskid) {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"boonhaii"},"content":"        this.taskid \u003d taskid;","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"boonhaii"},"content":"     * Marks a task in the TaskList of the bot as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"boonhaii"},"content":"     * @param tasks The TaskList associated with the current bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"boonhaii"},"content":"     * @param userInt The User Interface associated with the current bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"boonhaii"},"content":"     * @param storage The storage associated with the current bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"boonhaii"},"content":"     * @throws DukeException If any error has occurred during the addition of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"boonhaii"},"content":"    public void execute(TaskList tasks, UI userInt, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"boonhaii"},"content":"        doneTask \u003d tasks.markDone(this.taskid);","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"boonhaii"},"content":"        userInt.notifyDone(doneTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"boonhaii"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"boonhaii"},"content":"     * Gets the task associated with the command.","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"boonhaii"},"content":"     * @return The task associated with the given command.","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"boonhaii"},"content":"    public Task getTask() {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"boonhaii"},"content":"        return this.doneTask;","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"boonhaii"},"content":"     * Returns a boolean determining whether the input should exit the bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"boonhaii"},"content":"     * @return If the command exits the bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"boonhaii"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"boonhaii"},"content":"        return this.isExit;","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"boonhaii":56}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"import duke.UI;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":"    private boolean isExit \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"     * Exits the bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"     * @param task The TaskList associated with the current bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"     * @param userInt The User Interface associated with the current bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"     * @param storage The storage associated with the current bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":"     * @throws DukeException If any error has occurred during the addition of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"boonhaii"},"content":"    public void execute(TaskList task, UI userInt, Storage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"boonhaii"},"content":"        userInt.exit();","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"boonhaii"},"content":"     * Gets the task associated with the command.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"boonhaii"},"content":"     * @return null, as task is associated with an exit command.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"boonhaii"},"content":"    public Task getTask() {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"boonhaii"},"content":"        return null;","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"boonhaii"},"content":"     * Returns a boolean determining whether the input should exit the bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"boonhaii"},"content":"     * @return If the command exits the bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"boonhaii"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"boonhaii"},"content":"        return this.isExit;","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"boonhaii":43}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":"import duke.UI;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":" * FindCommand class which searches for tasks with matching keywords","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"    private String keyword;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":"     * Public constructor of the FindCommand","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"boonhaii"},"content":"     * @param keyword The keyword used to search for the matching tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"boonhaii"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"boonhaii"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"boonhaii"},"content":"     * Lists the tasks with the matching keyword associated with the FindCommand.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"boonhaii"},"content":"     * @param tasks The TaskList associated with the current bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"boonhaii"},"content":"     * @param userInt The User Interface associated with the current bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"boonhaii"},"content":"     * @param storage The storage associated with the current bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"boonhaii"},"content":"    public void execute(TaskList tasks, UI userInt, Storage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"boonhaii"},"content":"        ArrayList\u003cTask\u003e taskArrList \u003d tasks.getAllTasks();","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"boonhaii"},"content":"        int listLength \u003d taskArrList.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"boonhaii"},"content":"        ArrayList\u003cTask\u003e matches \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"boonhaii"},"content":"        for (int i \u003d 0; i \u003c listLength; i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"boonhaii"},"content":"            Task currTask \u003d taskArrList.get(i);","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"boonhaii"},"content":"            String description \u003d currTask.getTaskName();","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"boonhaii"},"content":"            if (description.contains(this.keyword)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"boonhaii"},"content":"                matches.add(currTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"boonhaii"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"boonhaii"},"content":"        if (matches.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"boonhaii"},"content":"            userInt.notifyNoMatching();","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"boonhaii"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"boonhaii"},"content":"            userInt.notifyMatchingList(matches);","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"boonhaii"},"content":"     * Returns a boolean determining whether the input should exit the bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"boonhaii"},"content":"     * @return If the command exits the bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"boonhaii"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"boonhaii"},"content":"        return this.isExit;","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"boonhaii"},"content":"     * Gets the task associated with the command.","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"boonhaii"},"content":"     * @return null, as no single task is associated with the command.","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"boonhaii"},"content":"    public Task getTask() {","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"boonhaii"},"content":"        return null;","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"boonhaii":69}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":"import duke.UI;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":" * ListCommand class which displays the current tasks in the list.","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":"     * Gets the user interface to display all the current tasks in the active","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"boonhaii"},"content":"     * ArrayList.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"boonhaii"},"content":"     * @param tasks The TaskList associated with the current bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"boonhaii"},"content":"     * @param userInt The User Interface associated with the current bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"boonhaii"},"content":"     * @param storage The storage associated with the current bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"boonhaii"},"content":"     * @throws DukeException If any error has occurred during the addition of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"boonhaii"},"content":"    public void execute(TaskList tasks, UI userInt, Storage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"boonhaii"},"content":"        ArrayList\u003cTask\u003e taskArrList \u003d tasks.getAllTasks();","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"boonhaii"},"content":"        userInt.notifyList(taskArrList);","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"boonhaii"},"content":"     * Gets the task associated with the command.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"boonhaii"},"content":"     * @return null, as no single task is associated with the list command.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"boonhaii"},"content":"    public Task getTask() {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"boonhaii"},"content":"        return null;","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"boonhaii"},"content":"     * Returns a boolean determining whether the input should exit the bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"boonhaii"},"content":"     * @return If the command exits the bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"boonhaii"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"boonhaii"},"content":"        return this.isExit;","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"boonhaii":50}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":" * Main exception class for the bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"     * Public constructor for the exception which is handled by the bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":"     * @param message The error message to accompany the error thrown.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"        super(message);","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"boonhaii":16}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":" * Tasks which have a due date","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"     * Public constructor which creates a new Deadline object with a due date.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"     * @param taskName The description of the Deadline","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"     * @param deadline The due date of the Deadline","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"boonhaii"},"content":"    public Deadline(String taskName, LocalDateTime deadline) {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"boonhaii"},"content":"        super(taskName);","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"boonhaii"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"boonhaii"},"content":"     * Gets the due date of the deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"boonhaii"},"content":"     * @return The string representation of the due date.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"boonhaii"},"content":"    public String getWhen() {","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"boonhaii"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"boonhaii"},"content":"        return dtf.format(deadline);","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"boonhaii"},"content":"     * Gets the string representation of the Deadline object.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"boonhaii"},"content":"     * @return The string representation of the deadline object.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"boonhaii"},"content":"    public String displayInfo() {","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"boonhaii"},"content":"        return String.format(\"[D] [%s] %s (by: %s)\", this.getStatus(), this.getTaskName(), this.getWhen());","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"boonhaii"},"content":"     * Gets the string representation of the Deadline object,","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"boonhaii"},"content":"     * used for writing into the local file system.","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"boonhaii"},"content":"     * @return The string representation of the deadline object,","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"boonhaii"},"content":"     *          used for writing into the local file system.","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"boonhaii"},"content":"    public String getSaveInfo() {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"boonhaii"},"content":"        if (this.isDone()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"boonhaii"},"content":"            return String.format(\"D | 1 | %s | %s\", this.getTaskName(), this.getWhen());","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"boonhaii"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"boonhaii"},"content":"            return String.format(\"D | 0 | %s | %s\", this.getTaskName(), this.getWhen());","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"boonhaii":59}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":" * Tasks which occur during a certain time","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":"    private LocalDateTime time;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"     * Public constructor which creates a new Event object with a due date.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"     * @param taskName The description of the Event.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"     * @param time The start time of the Event.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"boonhaii"},"content":"    public Event(String taskName, LocalDateTime time) {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"boonhaii"},"content":"        super(taskName);","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"boonhaii"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"boonhaii"},"content":"     * Gets the start time of the Event.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"boonhaii"},"content":"     * @return The string representation of the time of event.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"boonhaii"},"content":"    public String getWhen() {","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"boonhaii"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"boonhaii"},"content":"        return dtf.format(time);","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"boonhaii"},"content":"     * Gets the string representation of the Event object.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"boonhaii"},"content":"     * @return The string representation of the Event object.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"boonhaii"},"content":"    public String displayInfo() {","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"boonhaii"},"content":"        return String.format(\"[E] [%s] %s (at: %s)\", this.getStatus(), this.getTaskName(), this.getWhen());","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"boonhaii"},"content":"     * Gets the string representation of the Event object,","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"boonhaii"},"content":"     * used for writing into the local file system.","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"boonhaii"},"content":"     * @return The string representation of the event object,","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"boonhaii"},"content":"     *          used for writing into the local file system.","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"boonhaii"},"content":"    public String getSaveInfo() {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"boonhaii"},"content":"        if (this.isDone()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"boonhaii"},"content":"            return String.format(\"E | 1 | %s | %s\", this.getTaskName(), this.getWhen());","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"boonhaii"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"boonhaii"},"content":"            return String.format(\"E | 0 | %s | %s\", this.getTaskName(), this.getWhen());","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"boonhaii":59}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":" * General tasks to be completed by the user with no time property.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"public class Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"    private String taskName;","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":"     * Public constructor which creates a new Task object.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"     * @param taskName The description of the Event.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"    public Task(String taskName) {","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"boonhaii"},"content":"     * Public constructor which creates a new Task object that has","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"boonhaii"},"content":"     * been done.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"boonhaii"},"content":"     * Used for creation of tasks which may have been completed in","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"boonhaii"},"content":"     * the previous session but not deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"boonhaii"},"content":"     * @param taskName The description of the Event.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"boonhaii"},"content":"     * @param isDone Whether the task has been completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"boonhaii"},"content":"    public Task(String taskName, boolean isDone) {","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"boonhaii"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"boonhaii"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"boonhaii"},"content":"     * Gets the string representation of the completion status of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"boonhaii"},"content":"     * @return The string representation of the status, \"X\" for completed and \" \"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"boonhaii"},"content":"     *          for incomplete.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"boonhaii"},"content":"    public String getStatus() {","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"boonhaii"},"content":"        return this.isDone ? \"X\" : \" \";","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":43,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"boonhaii"},"content":"     * Marks the task as completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"boonhaii"},"content":"    public void complete() {","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"boonhaii"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"boonhaii"},"content":"     * Gets the description of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"boonhaii"},"content":"     * @return Description of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"boonhaii"},"content":"    public String getTaskName() {","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"boonhaii"},"content":"        return this.taskName;","lastModifiedDate":"2021-08-15"},{"lineNumber":58,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":59,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":60,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"boonhaii"},"content":"     * Gets the completion status of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"boonhaii"},"content":"     * @return Whether a task has been completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"boonhaii"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"boonhaii"},"content":"        return this.isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"boonhaii"},"content":"     * Gets the string representation of the Task object.","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"boonhaii"},"content":"     * @return The string representation of the Task object.","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"boonhaii"},"content":"    public String displayInfo() {","lastModifiedDate":"2021-08-16"},{"lineNumber":75,"author":{"gitId":"boonhaii"},"content":"        return String.format(\"[T] [%s] %s\", this.getStatus(), this.getTaskName());","lastModifiedDate":"2021-08-16"},{"lineNumber":76,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":77,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"boonhaii"},"content":"     * Gets the string representation of the Task object,","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"boonhaii"},"content":"     * used for writing into the local file system.","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"boonhaii"},"content":"     * @return The string representation of the task object,","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"boonhaii"},"content":"     *          used for writing into the local file system.","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"boonhaii"},"content":"    public String getSaveInfo() {","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"boonhaii"},"content":"        if (this.isDone()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"boonhaii"},"content":"            return String.format(\"T | 1 | %s\", this.getTaskName());","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"boonhaii"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"boonhaii"},"content":"            return String.format(\"T | 0 | %s\", this.getTaskName());","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"boonhaii":93}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":"    public void parseCompletetoDo() {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":"        assertEquals(Parser.parse(\"todo borrow book\").getTask().getTaskName(),","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"                 \"borrow book\");","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"    public void parseIncompletetoDo() {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"boonhaii"},"content":"            Parser.parse(\"todo\");","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"boonhaii"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"boonhaii"},"content":"            assertEquals(e.getMessage(), \"Input in the format: todo *description*\");","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"boonhaii"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"boonhaii"},"content":"    public void parseIncompleteEvent() {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"boonhaii"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"boonhaii"},"content":"            Parser.parse(\"event zoom meeting\");","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"boonhaii"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"boonhaii"},"content":"            assertEquals(e.getMessage(),","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"boonhaii"},"content":"                    \"Input the following format: event *description* /at *DD/MM/YYYY* *24H-Time*\");","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"boonhaii"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"boonhaii"},"content":"    public void parseCompleteDeadline() {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"boonhaii"},"content":"        assertEquals(Parser.parse(\"deadline PL1101E project /by 20/04/2021 1200\".toLowerCase()).getTask().displayInfo(),","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"boonhaii"},"content":"                \"[D] [ ] pl1101e project (by: 20 Apr 2021 12:00)\");","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"boonhaii"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"boonhaii"},"content":"    public void parseCompleteDeadline_invalidDay() {","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"boonhaii"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"boonhaii"},"content":"            Parser.parse(\"deadline PL1101E project /by 33/04/2021 1200\");","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"boonhaii"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"boonhaii"},"content":"            assertEquals(e.getMessage(),","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"boonhaii"},"content":"                    \"Text \u002733/04/2021\u0027 could not be parsed: Invalid value for DayOfMonth (valid values 1 - 28/31): 33\");","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"boonhaii":51}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":"    public void createNewDeadline() {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"        assertEquals(new Deadline(\"pl1101e project\",","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"                LocalDateTime.of(2021, 04, 20, 12, 00)).displayInfo(),","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"                \"[D] [ ] pl1101e project (by: 20 Apr 2021 12:00)\");","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"boonhaii":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"yeehor","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"todo Borrow Book","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"deadline PL1101E project /by 20/04/2021 1200","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"deadline CS2101 project /by 20/04/2021 2500","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"deadline CS2101 project /by 33/04/2021 2100","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":"deadline CS2101 project  /by 30/13/2021 2100","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"deadline","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"event zoom meeting","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":"deadline go home","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":"event PL1101E project meeting /at 15/04/2021 1200","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":"event CS2103T project meeting /at 04/04/2021","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"event CS2101 project meeting /at 20/04/2021 2500","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"event CS2101 project meeting /at 33/04/2021 2100","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"event CS2101 project meeting /at 30/13/2021 2100","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"done 2","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"delete 2","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"boonhaii"},"content":"delete 1","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"boonhaii"},"content":"delete 5","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"boonhaii"},"content":"done 9","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"boonhaii"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"boonhaii"},"content":"done","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"boonhaii"},"content":"todo","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"boonhaii"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"boonhaii"},"content":"bye","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"boonhaii"},"content":"list","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"boonhaii"},"content":"delete 2","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"boonhaii"},"content":"delete 1","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"boonhaii"},"content":"bye","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"boonhaii"},"content":"bye","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"boonhaii":31}}]
