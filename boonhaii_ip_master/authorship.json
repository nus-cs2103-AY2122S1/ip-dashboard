[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"plugins {","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"    id \u0027java\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"    id \u0027application\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.0.0\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"mainClassName \u003d \u0027duke.gui.Launcher\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":"group \u0027org.example\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":"version \u00271.0-SNAPSHOT\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"repositories {","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"    mavenCentral()","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"test {","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":"    useJUnitPlatform()","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"boonhaii"},"content":"run {","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"boonhaii"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"boonhaii"},"content":"dependencies {","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"boonhaii"},"content":"    implementation \u0027junit:junit:4.13.2\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"boonhaii"},"content":"    testImplementation \u0027junit:junit:4.13.2\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"boonhaii"},"content":"    implementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"boonhaii"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"boonhaii"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"boonhaii"},"content":"    testRuntimeOnly(\"org.junit.platform:junit-platform-launcher:1.7.2\")","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"boonhaii"},"content":"    testRuntimeOnly(\"org.junit.jupiter:junit-jupiter-engine:5.7.2\")","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"boonhaii"},"content":"    testRuntimeOnly(\"org.junit.vintage:junit-vintage-engine:5.7.2\")","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"boonhaii"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"boonhaii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"boonhaii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"boonhaii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"boonhaii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"boonhaii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"boonhaii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"boonhaii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"boonhaii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"boonhaii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"boonhaii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"boonhaii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"boonhaii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"boonhaii"},"content":"checkstyle {","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"boonhaii"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"boonhaii":53}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"Duii is a todo-list application that allows users to keep track of their tasks through a Graphical User Interface (GUI). This project is adapted from Project Duke. Display pictures used are taken from Pinterest, original author 不觉晓晓.","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"## Starting the Program","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":"To get started, ensure that you have the following installed:","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"1. [Java Version 11](https://www.java.com/en/) or higher.","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"2. The .jar file for [Duii v0.2](https://github.com/boonhaii/ip/releases/tag/v0.2).","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":"To start up the application, navigate to the folder with the which the .jar file is in, and execute the file.","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":"The application should display the following startup message if it is your first time using the application,","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"Hello! I\u0027m Duii, your personal assistant!","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"Type in \u0027/help\u0027 for the full list of supported commands.","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"You have no outstanding tasks from the previous session.","lastModifiedDate":"2021-09-12"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"What do you need help with?","lastModifiedDate":"2021-09-12"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"boonhaii"},"content":"or something similar to the following if you have used the application and had a saved file prior.","lastModifiedDate":"2021-09-12"},{"lineNumber":20,"author":{"gitId":"boonhaii"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":21,"author":{"gitId":"boonhaii"},"content":"Hello! I\u0027m Duii, your personal assistant!","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"boonhaii"},"content":"Type in \u0027/help\u0027 for the full list of supported commands.","lastModifiedDate":"2021-09-12"},{"lineNumber":23,"author":{"gitId":"boonhaii"},"content":"These tasks are from the previous session:","lastModifiedDate":"2021-09-12"},{"lineNumber":24,"author":{"gitId":"boonhaii"},"content":"1. [T] [] Homework","lastModifiedDate":"2021-09-12"},{"lineNumber":25,"author":{"gitId":"boonhaii"},"content":"What do you need help with?","lastModifiedDate":"2021-09-12"},{"lineNumber":26,"author":{"gitId":"boonhaii"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":27,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"boonhaii"},"content":"Listed below is a summary of the features available in Duii.","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":31,"author":{"gitId":"boonhaii"},"content":"### Todos/Deadlines/Events","lastModifiedDate":"2021-09-12"},{"lineNumber":32,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":33,"author":{"gitId":"boonhaii"},"content":"Duii supports 3 types of tasks, namely todos, deadlines and events. ","lastModifiedDate":"2021-09-12"},{"lineNumber":34,"author":{"gitId":"boonhaii"},"content":"Todos are generic tasks, which have an optional field for duration.","lastModifiedDate":"2021-09-12"},{"lineNumber":35,"author":{"gitId":"boonhaii"},"content":"Deadlines are tasks which have to be completed by a certain date.","lastModifiedDate":"2021-09-12"},{"lineNumber":36,"author":{"gitId":"boonhaii"},"content":"Events are tasks which will be done at a specific time.","lastModifiedDate":"2021-09-12"},{"lineNumber":37,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":38,"author":{"gitId":"boonhaii"},"content":"### Add Todos/Deadlines/Events","lastModifiedDate":"2021-09-12"},{"lineNumber":39,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":40,"author":{"gitId":"boonhaii"},"content":"Duii can add Todos/Deadlines/Events into your task list.","lastModifiedDate":"2021-09-12"},{"lineNumber":41,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":42,"author":{"gitId":"boonhaii"},"content":"### Delete Todos/Deadlines/Events","lastModifiedDate":"2021-09-12"},{"lineNumber":43,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":44,"author":{"gitId":"boonhaii"},"content":"Duii can remove specific Todos/Deadlines/Events into your task list.","lastModifiedDate":"2021-09-12"},{"lineNumber":45,"author":{"gitId":"boonhaii"},"content":"Duii supports multiple deletion of tasks at one go.","lastModifiedDate":"2021-09-12"},{"lineNumber":46,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":47,"author":{"gitId":"boonhaii"},"content":"### Mark Done","lastModifiedDate":"2021-09-12"},{"lineNumber":48,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":49,"author":{"gitId":"boonhaii"},"content":"Duii can help you mark tasks as done once you have completed a task.","lastModifiedDate":"2021-09-12"},{"lineNumber":50,"author":{"gitId":"boonhaii"},"content":"Duii supports multiple marking of tasks at one go.","lastModifiedDate":"2021-09-12"},{"lineNumber":51,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":52,"author":{"gitId":"boonhaii"},"content":"### Listing Tasks","lastModifiedDate":"2021-09-12"},{"lineNumber":53,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":54,"author":{"gitId":"boonhaii"},"content":"Duii can list out all your existing tasks in your current list.","lastModifiedDate":"2021-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":56,"author":{"gitId":"boonhaii"},"content":"### Finding Tasks","lastModifiedDate":"2021-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":58,"author":{"gitId":"boonhaii"},"content":"Duii can find tasks which contain a specific keyword in its task description or in its tagging.","lastModifiedDate":"2021-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":60,"author":{"gitId":"boonhaii"},"content":"### Task Tagging","lastModifiedDate":"2021-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":62,"author":{"gitId":"boonhaii"},"content":"Tasks can be tagged with single-worded keywords, which can be used to search for the specific task again in the future.","lastModifiedDate":"2021-09-12"},{"lineNumber":63,"author":{"gitId":"boonhaii"},"content":"These tags can also be removed when required.","lastModifiedDate":"2021-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":65,"author":{"gitId":"boonhaii"},"content":"### Saving","lastModifiedDate":"2021-09-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":67,"author":{"gitId":"boonhaii"},"content":"Duii can keep track of the tasks in your current session, allowing you to continue from where you stopped for your future sessions.","lastModifiedDate":"2021-09-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":69,"author":{"gitId":"boonhaii"},"content":"### Help Page","lastModifiedDate":"2021-09-12"},{"lineNumber":70,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":71,"author":{"gitId":"boonhaii"},"content":"Duii provides a help page listing all the available commands.","lastModifiedDate":"2021-09-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":75,"author":{"gitId":"boonhaii"},"content":"Listed below are the available commands for Duii. Do note that the output would differ based on the tasks saved in the data file upon opening the application, as well as the users\u0027 inputs.","lastModifiedDate":"2021-09-12"},{"lineNumber":76,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":77,"author":{"gitId":"boonhaii"},"content":"### `todo` - Adds a todo the list","lastModifiedDate":"2021-09-12"},{"lineNumber":78,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":79,"author":{"gitId":"boonhaii"},"content":"Arguments:","lastModifiedDate":"2021-09-12"},{"lineNumber":80,"author":{"gitId":"boonhaii"},"content":"  * Task Description (Required)","lastModifiedDate":"2021-09-12"},{"lineNumber":81,"author":{"gitId":"boonhaii"},"content":"  * Duration (Optional)","lastModifiedDate":"2021-09-12"},{"lineNumber":82,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":83,"author":{"gitId":"boonhaii"},"content":"Example of usage: ","lastModifiedDate":"2021-09-12"},{"lineNumber":84,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":85,"author":{"gitId":"boonhaii"},"content":"`todo Assignement 1 (2h)`","lastModifiedDate":"2021-09-12"},{"lineNumber":86,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":87,"author":{"gitId":"boonhaii"},"content":"Expected outcome:","lastModifiedDate":"2021-09-12"},{"lineNumber":88,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":89,"author":{"gitId":"boonhaii"},"content":"A todo is added to the list.","lastModifiedDate":"2021-09-12"},{"lineNumber":90,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":91,"author":{"gitId":"boonhaii"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":92,"author":{"gitId":"boonhaii"},"content":"New Task? I\u0027ve added it to the list:","lastModifiedDate":"2021-09-12"},{"lineNumber":93,"author":{"gitId":"boonhaii"},"content":"[T] [] assignment 1 (needs 2h)","lastModifiedDate":"2021-09-12"},{"lineNumber":94,"author":{"gitId":"boonhaii"},"content":"Now you have 1 task(s) in the list.","lastModifiedDate":"2021-09-12"},{"lineNumber":95,"author":{"gitId":"boonhaii"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":96,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":97,"author":{"gitId":"boonhaii"},"content":"### `deadline` - Adds a deadline the list","lastModifiedDate":"2021-09-12"},{"lineNumber":98,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":99,"author":{"gitId":"boonhaii"},"content":"Arguments:","lastModifiedDate":"2021-09-12"},{"lineNumber":100,"author":{"gitId":"boonhaii"},"content":"  * Task Description (Required)","lastModifiedDate":"2021-09-12"},{"lineNumber":101,"author":{"gitId":"boonhaii"},"content":"  * Input seperator ie. \"/by\" (Required)","lastModifiedDate":"2021-09-12"},{"lineNumber":102,"author":{"gitId":"boonhaii"},"content":"  * Date of deadline, in the format \"DD/MM/YYYY\" (Required)","lastModifiedDate":"2021-09-12"},{"lineNumber":103,"author":{"gitId":"boonhaii"},"content":"  * Time of deadline (Optional), default value is 0000","lastModifiedDate":"2021-09-12"},{"lineNumber":104,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":105,"author":{"gitId":"boonhaii"},"content":"Example of usage: ","lastModifiedDate":"2021-09-12"},{"lineNumber":106,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":107,"author":{"gitId":"boonhaii"},"content":"`deadline cs2103 ip /by 19/09/2021 1900`","lastModifiedDate":"2021-09-12"},{"lineNumber":108,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":109,"author":{"gitId":"boonhaii"},"content":"Expected outcome:","lastModifiedDate":"2021-09-12"},{"lineNumber":110,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":111,"author":{"gitId":"boonhaii"},"content":"A deadline is added to the list.","lastModifiedDate":"2021-09-12"},{"lineNumber":112,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":113,"author":{"gitId":"boonhaii"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":114,"author":{"gitId":"boonhaii"},"content":"New Task? I\u0027ve added it to the list:","lastModifiedDate":"2021-09-12"},{"lineNumber":115,"author":{"gitId":"boonhaii"},"content":"[D] [] cs2103 ip (by: 19 Sep 2021 19:00)","lastModifiedDate":"2021-09-12"},{"lineNumber":116,"author":{"gitId":"boonhaii"},"content":"Now you have 2 task(s) in the list.","lastModifiedDate":"2021-09-12"},{"lineNumber":117,"author":{"gitId":"boonhaii"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":118,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":119,"author":{"gitId":"boonhaii"},"content":"### `event` - Adds a event the list","lastModifiedDate":"2021-09-12"},{"lineNumber":120,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":121,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":122,"author":{"gitId":"boonhaii"},"content":"Arguments:","lastModifiedDate":"2021-09-12"},{"lineNumber":123,"author":{"gitId":"boonhaii"},"content":"  * Task Description (Required)","lastModifiedDate":"2021-09-12"},{"lineNumber":124,"author":{"gitId":"boonhaii"},"content":"  * Input seperator ie. \"/at\" (Required)","lastModifiedDate":"2021-09-12"},{"lineNumber":125,"author":{"gitId":"boonhaii"},"content":"  * Date of deadline, in the format \"DD/MM/YYYY\" (Required)","lastModifiedDate":"2021-09-12"},{"lineNumber":126,"author":{"gitId":"boonhaii"},"content":"  * Time of deadline, default value is 0000 (Optional)","lastModifiedDate":"2021-09-12"},{"lineNumber":127,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":128,"author":{"gitId":"boonhaii"},"content":"Example of usage: ","lastModifiedDate":"2021-09-12"},{"lineNumber":129,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":130,"author":{"gitId":"boonhaii"},"content":"`event cs2101 project meeting /by 12/09/2021 2130`","lastModifiedDate":"2021-09-12"},{"lineNumber":131,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":132,"author":{"gitId":"boonhaii"},"content":"Expected outcome:","lastModifiedDate":"2021-09-12"},{"lineNumber":133,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":134,"author":{"gitId":"boonhaii"},"content":"An event is added to the list.","lastModifiedDate":"2021-09-12"},{"lineNumber":135,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":136,"author":{"gitId":"boonhaii"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":137,"author":{"gitId":"boonhaii"},"content":"New Task? I\u0027ve added it to the list:","lastModifiedDate":"2021-09-12"},{"lineNumber":138,"author":{"gitId":"boonhaii"},"content":"[E] [] cs2101 project meeting (by: 12 Sep 2021 21:30)","lastModifiedDate":"2021-09-12"},{"lineNumber":139,"author":{"gitId":"boonhaii"},"content":"Now you have 2 task(s) in the list.","lastModifiedDate":"2021-09-12"},{"lineNumber":140,"author":{"gitId":"boonhaii"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":141,"author":{"gitId":"boonhaii"},"content":"### `list` - Lists all the tasks in the list","lastModifiedDate":"2021-09-12"},{"lineNumber":142,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":143,"author":{"gitId":"boonhaii"},"content":"Arugments:","lastModifiedDate":"2021-09-12"},{"lineNumber":144,"author":{"gitId":"boonhaii"},"content":"  * None.","lastModifiedDate":"2021-09-12"},{"lineNumber":145,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":146,"author":{"gitId":"boonhaii"},"content":"Example of usage: ","lastModifiedDate":"2021-09-12"},{"lineNumber":147,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":148,"author":{"gitId":"boonhaii"},"content":"`list`","lastModifiedDate":"2021-09-12"},{"lineNumber":149,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":150,"author":{"gitId":"boonhaii"},"content":"Expected outcome:","lastModifiedDate":"2021-09-12"},{"lineNumber":151,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":152,"author":{"gitId":"boonhaii"},"content":"Lists all the existing events in the current list.","lastModifiedDate":"2021-09-12"},{"lineNumber":153,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":154,"author":{"gitId":"boonhaii"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":155,"author":{"gitId":"boonhaii"},"content":"Here\u0027s your current list:","lastModifiedDate":"2021-09-12"},{"lineNumber":156,"author":{"gitId":"boonhaii"},"content":"1. [T] [] Assignment 1(needs 2h)","lastModifiedDate":"2021-09-12"},{"lineNumber":157,"author":{"gitId":"boonhaii"},"content":"2. [D] [] cs2103 ip (by: 19 Sep 2021 19:00)","lastModifiedDate":"2021-09-12"},{"lineNumber":158,"author":{"gitId":"boonhaii"},"content":"3. [E] [] cs2101 project meeting (at: 12 Sep 2021 21:30)","lastModifiedDate":"2021-09-12"},{"lineNumber":159,"author":{"gitId":"boonhaii"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":160,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":161,"author":{"gitId":"boonhaii"},"content":"### `done` - Marks task(s) as completed","lastModifiedDate":"2021-09-12"},{"lineNumber":162,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":163,"author":{"gitId":"boonhaii"},"content":"Arguments:","lastModifiedDate":"2021-09-12"},{"lineNumber":164,"author":{"gitId":"boonhaii"},"content":"  * IDs of the tasks to be marked as done, If multiple IDs are present, seperate them by commas. (Required)","lastModifiedDate":"2021-09-12"},{"lineNumber":165,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":166,"author":{"gitId":"boonhaii"},"content":"Example of usage: ","lastModifiedDate":"2021-09-12"},{"lineNumber":167,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":168,"author":{"gitId":"boonhaii"},"content":"`done 1,2`","lastModifiedDate":"2021-09-12"},{"lineNumber":169,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":170,"author":{"gitId":"boonhaii"},"content":"Expected outcome:","lastModifiedDate":"2021-09-12"},{"lineNumber":171,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":172,"author":{"gitId":"boonhaii"},"content":"The tasks with the inputted IDs would be marked as done.","lastModifiedDate":"2021-09-12"},{"lineNumber":173,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":174,"author":{"gitId":"boonhaii"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":175,"author":{"gitId":"boonhaii"},"content":"You\u0027ve finished the task? Good job!","lastModifiedDate":"2021-09-12"},{"lineNumber":176,"author":{"gitId":"boonhaii"},"content":"These task has been marked as done:","lastModifiedDate":"2021-09-12"},{"lineNumber":177,"author":{"gitId":"boonhaii"},"content":"[T] [X] Assignment 1(needs 2h)","lastModifiedDate":"2021-09-12"},{"lineNumber":178,"author":{"gitId":"boonhaii"},"content":"[D] [X] cs2103 ip (by: 19 Sep 2021 19:00)","lastModifiedDate":"2021-09-12"},{"lineNumber":179,"author":{"gitId":"boonhaii"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":180,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":181,"author":{"gitId":"boonhaii"},"content":"### `delete` - Deletes task(s) from the list","lastModifiedDate":"2021-09-12"},{"lineNumber":182,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":183,"author":{"gitId":"boonhaii"},"content":"Arguments:","lastModifiedDate":"2021-09-12"},{"lineNumber":184,"author":{"gitId":"boonhaii"},"content":"  * IDs of the tasks to be removed. If multiple IDs are present, seperate them by commas. (Required)","lastModifiedDate":"2021-09-12"},{"lineNumber":185,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":186,"author":{"gitId":"boonhaii"},"content":"Example of usage: ","lastModifiedDate":"2021-09-12"},{"lineNumber":187,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":188,"author":{"gitId":"boonhaii"},"content":"`delete 1,2`","lastModifiedDate":"2021-09-12"},{"lineNumber":189,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":190,"author":{"gitId":"boonhaii"},"content":"Expected outcome:","lastModifiedDate":"2021-09-12"},{"lineNumber":191,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":192,"author":{"gitId":"boonhaii"},"content":"The tasks with the inputted IDs would be removed.","lastModifiedDate":"2021-09-12"},{"lineNumber":193,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":194,"author":{"gitId":"boonhaii"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":195,"author":{"gitId":"boonhaii"},"content":"Okay! Removing these tasks:","lastModifiedDate":"2021-09-12"},{"lineNumber":196,"author":{"gitId":"boonhaii"},"content":"[T] [X] Assignment 1(needs 2h)","lastModifiedDate":"2021-09-12"},{"lineNumber":197,"author":{"gitId":"boonhaii"},"content":"[D] [X] cs2103 ip (by: 19 Sep 2021 19:00)","lastModifiedDate":"2021-09-12"},{"lineNumber":198,"author":{"gitId":"boonhaii"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":199,"author":{"gitId":"boonhaii"},"content":"### `find` - Searches for tasks with a specified keyword","lastModifiedDate":"2021-09-12"},{"lineNumber":200,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":201,"author":{"gitId":"boonhaii"},"content":"Arguments:","lastModifiedDate":"2021-09-12"},{"lineNumber":202,"author":{"gitId":"boonhaii"},"content":"  * Keyword (Required)","lastModifiedDate":"2021-09-12"},{"lineNumber":203,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":204,"author":{"gitId":"boonhaii"},"content":"Example of usage: ","lastModifiedDate":"2021-09-12"},{"lineNumber":205,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":206,"author":{"gitId":"boonhaii"},"content":"`find ip`","lastModifiedDate":"2021-09-12"},{"lineNumber":207,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":208,"author":{"gitId":"boonhaii"},"content":"Expected outcome:","lastModifiedDate":"2021-09-12"},{"lineNumber":209,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":210,"author":{"gitId":"boonhaii"},"content":"Displays the tasks with the specified keyword","lastModifiedDate":"2021-09-12"},{"lineNumber":211,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":212,"author":{"gitId":"boonhaii"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":213,"author":{"gitId":"boonhaii"},"content":"Here are the matching results:","lastModifiedDate":"2021-09-12"},{"lineNumber":214,"author":{"gitId":"boonhaii"},"content":"1. [D] [X] cs2103 ip (by: 19 Sep 2021 19:00)","lastModifiedDate":"2021-09-12"},{"lineNumber":215,"author":{"gitId":"boonhaii"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":216,"author":{"gitId":"boonhaii"},"content":"If the keyword does not match any task description, a notification message will still appear.","lastModifiedDate":"2021-09-12"},{"lineNumber":217,"author":{"gitId":"boonhaii"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":218,"author":{"gitId":"boonhaii"},"content":"There were no keyword matches!","lastModifiedDate":"2021-09-12"},{"lineNumber":219,"author":{"gitId":"boonhaii"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":220,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":221,"author":{"gitId":"boonhaii"},"content":"### `tag add` - Tags tasks with the relevant keyword","lastModifiedDate":"2021-09-12"},{"lineNumber":222,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":223,"author":{"gitId":"boonhaii"},"content":"Arguments:","lastModifiedDate":"2021-09-12"},{"lineNumber":224,"author":{"gitId":"boonhaii"},"content":"  * Whole/Part of Task Description (Required)","lastModifiedDate":"2021-09-12"},{"lineNumber":225,"author":{"gitId":"boonhaii"},"content":"  * Keyword (Required)","lastModifiedDate":"2021-09-12"},{"lineNumber":226,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":227,"author":{"gitId":"boonhaii"},"content":"Example of usage: ","lastModifiedDate":"2021-09-12"},{"lineNumber":228,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":229,"author":{"gitId":"boonhaii"},"content":"`tag add cs2101 project meeting urgent`","lastModifiedDate":"2021-09-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":231,"author":{"gitId":"boonhaii"},"content":"Expected outcome:","lastModifiedDate":"2021-09-12"},{"lineNumber":232,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":233,"author":{"gitId":"boonhaii"},"content":"Tags the specified task with the keyword passed.","lastModifiedDate":"2021-09-12"},{"lineNumber":234,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":235,"author":{"gitId":"boonhaii"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":236,"author":{"gitId":"boonhaii"},"content":"Here are the tasks which have been tagged with #urgent:","lastModifiedDate":"2021-09-12"},{"lineNumber":237,"author":{"gitId":"boonhaii"},"content":"1. [E] [] cs2101 project meeting (at: 12 Sep 2021 21:30)","lastModifiedDate":"2021-09-12"},{"lineNumber":238,"author":{"gitId":"boonhaii"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":239,"author":{"gitId":"boonhaii"},"content":"If the keyword does not match any task description, a notification message will still appear.","lastModifiedDate":"2021-09-12"},{"lineNumber":240,"author":{"gitId":"boonhaii"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":241,"author":{"gitId":"boonhaii"},"content":"There were no keyword matches!","lastModifiedDate":"2021-09-12"},{"lineNumber":242,"author":{"gitId":"boonhaii"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":243,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":244,"author":{"gitId":"boonhaii"},"content":"### `tag delete` - Tags tasks with the relevant keyword","lastModifiedDate":"2021-09-12"},{"lineNumber":245,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":246,"author":{"gitId":"boonhaii"},"content":"Arguments:","lastModifiedDate":"2021-09-12"},{"lineNumber":247,"author":{"gitId":"boonhaii"},"content":"  * Whole/Part of Task Description (Required)","lastModifiedDate":"2021-09-12"},{"lineNumber":248,"author":{"gitId":"boonhaii"},"content":"  * Keyword (Required)","lastModifiedDate":"2021-09-12"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":250,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2021-09-12"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":252,"author":{"gitId":"boonhaii"},"content":"`tag delete cs2101 project meeting urgent`","lastModifiedDate":"2021-09-12"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":254,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2021-09-12"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":256,"author":{"gitId":"boonhaii"},"content":"Removes the specified tag the specified task(s).","lastModifiedDate":"2021-09-12"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":258,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":259,"author":{"gitId":"boonhaii"},"content":"Here are the tasks which have had the tag #urgent removed:","lastModifiedDate":"2021-09-12"},{"lineNumber":260,"author":{"gitId":"boonhaii"},"content":"1. [E] [] cs2101 project meeting (at: 12 Sep 2021 21:30)","lastModifiedDate":"2021-09-12"},{"lineNumber":261,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":262,"author":{"gitId":"boonhaii"},"content":"If the keyword does not match any task description, a notification message will still appear.","lastModifiedDate":"2021-09-12"},{"lineNumber":263,"author":{"gitId":"boonhaii"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":264,"author":{"gitId":"boonhaii"},"content":"There were no keyword matches!","lastModifiedDate":"2021-09-12"},{"lineNumber":265,"author":{"gitId":"boonhaii"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":267,"author":{"gitId":"boonhaii"},"content":"### `/help` - Lists out all the availble commands.","lastModifiedDate":"2021-09-12"},{"lineNumber":268,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":269,"author":{"gitId":"boonhaii"},"content":"Arguments:","lastModifiedDate":"2021-09-12"},{"lineNumber":270,"author":{"gitId":"boonhaii"},"content":"  * None","lastModifiedDate":"2021-09-12"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":274,"author":{"gitId":"boonhaii"},"content":"`/help`","lastModifiedDate":"2021-09-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":278,"author":{"gitId":"boonhaii"},"content":"Displays all available commands.","lastModifiedDate":"2021-09-12"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":280,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":281,"author":{"gitId":"boonhaii"},"content":"The following commands are available:","lastModifiedDate":"2021-09-12"},{"lineNumber":282,"author":{"gitId":"boonhaii"},"content":"list - Lists all the tasks in the current task list.","lastModifiedDate":"2021-09-12"},{"lineNumber":283,"author":{"gitId":"boonhaii"},"content":"done - Marks the tasks with the specified IDs as done.","lastModifiedDate":"2021-09-12"},{"lineNumber":284,"author":{"gitId":"boonhaii"},"content":"Eg. done 1,2,3 ","lastModifiedDate":"2021-09-12"},{"lineNumber":285,"author":{"gitId":"boonhaii"},"content":"delete - Deletes the tasks with the specified IDs.","lastModifiedDate":"2021-09-12"},{"lineNumber":286,"author":{"gitId":"boonhaii"},"content":"Eg. delete 5,1,2 ","lastModifiedDate":"2021-09-12"},{"lineNumber":287,"author":{"gitId":"boonhaii"},"content":"tag add - Tags a certain task with the relevant keywords with a tag.","lastModifiedDate":"2021-09-12"},{"lineNumber":288,"author":{"gitId":"boonhaii"},"content":"Eg. tag add book nerd","lastModifiedDate":"2021-09-12"},{"lineNumber":289,"author":{"gitId":"boonhaii"},"content":"tag delete - Removes a certain tag from task(s) with the relevant keywords.","lastModifiedDate":"2021-09-12"},{"lineNumber":290,"author":{"gitId":"boonhaii"},"content":"Eg. tag delete book nerd","lastModifiedDate":"2021-09-12"},{"lineNumber":291,"author":{"gitId":"boonhaii"},"content":"todo - Adds a toDo activity to the list. Optional to specify duration in brackets.","lastModifiedDate":"2021-09-12"},{"lineNumber":292,"author":{"gitId":"boonhaii"},"content":"Eg. todo read book (2h)","lastModifiedDate":"2021-09-12"},{"lineNumber":293,"author":{"gitId":"boonhaii"},"content":"event - Adds an event activity to the list.","lastModifiedDate":"2021-09-12"},{"lineNumber":294,"author":{"gitId":"boonhaii"},"content":"Eg. event Dinner /at 19/02/2021 1900","lastModifiedDate":"2021-09-12"},{"lineNumber":295,"author":{"gitId":"boonhaii"},"content":"deadline - Adds a deadline activity to the list. ","lastModifiedDate":"2021-09-12"},{"lineNumber":296,"author":{"gitId":"boonhaii"},"content":"Eg. deadline Assignment 1 /by 19/03/2021 1500","lastModifiedDate":"2021-09-12"},{"lineNumber":297,"author":{"gitId":"boonhaii"},"content":"find - Lists all the tasks with the specified keyword in its description or tag.","lastModifiedDate":"2021-09-12"},{"lineNumber":298,"author":{"gitId":"boonhaii"},"content":"Eg. find books ","lastModifiedDate":"2021-09-12"},{"lineNumber":299,"author":{"gitId":"boonhaii"},"content":"bye - Exits the program.","lastModifiedDate":"2021-09-12"},{"lineNumber":300,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":301,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":302,"author":{"gitId":"boonhaii"},"content":"### `bye` - Exits the application","lastModifiedDate":"2021-09-12"},{"lineNumber":303,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":304,"author":{"gitId":"boonhaii"},"content":"Arguments:","lastModifiedDate":"2021-09-12"},{"lineNumber":305,"author":{"gitId":"boonhaii"},"content":"  * None","lastModifiedDate":"2021-09-12"},{"lineNumber":306,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":307,"author":{"gitId":"boonhaii"},"content":"Example of usage: ","lastModifiedDate":"2021-09-12"},{"lineNumber":308,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":309,"author":{"gitId":"boonhaii"},"content":"`bye`","lastModifiedDate":"2021-09-12"},{"lineNumber":310,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":311,"author":{"gitId":"boonhaii"},"content":"Expected outcome:","lastModifiedDate":"2021-09-12"},{"lineNumber":312,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":313,"author":{"gitId":"boonhaii"},"content":"Displays the exit message, before exiting the application.","lastModifiedDate":"2021-09-12"},{"lineNumber":314,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":315,"author":{"gitId":"boonhaii"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":316,"author":{"gitId":"boonhaii"},"content":"You\u0027re going already? Hope to see you again soon!","lastModifiedDate":"2021-09-12"},{"lineNumber":317,"author":{"gitId":"boonhaii"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":318,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":319,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"boonhaii":286,"-":33}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"@rem","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"@rem","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":"@rem","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"@rem","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"@rem limitations under the License.","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"@rem","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":"@rem ##########################################################################","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"boonhaii"},"content":"@rem","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"boonhaii"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"boonhaii"},"content":"@rem","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"boonhaii"},"content":"@rem ##########################################################################","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"boonhaii"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"boonhaii"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"boonhaii"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"boonhaii"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"boonhaii"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"boonhaii"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"boonhaii"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"boonhaii"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"boonhaii"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"boonhaii"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"boonhaii"},"content":"@rem Find java.exe","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"boonhaii"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"boonhaii"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"boonhaii"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"boonhaii"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"boonhaii"},"content":"echo.","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"boonhaii"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"boonhaii"},"content":"echo.","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"boonhaii"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"boonhaii"},"content":"echo location of your Java installation.","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"boonhaii"},"content":"goto fail","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"boonhaii"},"content":":findJavaFromJavaHome","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"boonhaii"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"boonhaii"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"boonhaii"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"boonhaii"},"content":"echo.","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"boonhaii"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"boonhaii"},"content":"echo.","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"boonhaii"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"boonhaii"},"content":"echo location of your Java installation.","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"boonhaii"},"content":"goto fail","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"boonhaii"},"content":":execute","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"boonhaii"},"content":"@rem Setup the command line","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"boonhaii"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"boonhaii"},"content":"@rem Execute Gradle","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"boonhaii"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"boonhaii"},"content":":end","lastModifiedDate":"2021-08-31"},{"lineNumber":77,"author":{"gitId":"boonhaii"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"boonhaii"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2021-08-31"},{"lineNumber":79,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"boonhaii"},"content":":fail","lastModifiedDate":"2021-08-31"},{"lineNumber":81,"author":{"gitId":"boonhaii"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2021-08-31"},{"lineNumber":82,"author":{"gitId":"boonhaii"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2021-08-31"},{"lineNumber":83,"author":{"gitId":"boonhaii"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2021-08-31"},{"lineNumber":84,"author":{"gitId":"boonhaii"},"content":"exit /b 1","lastModifiedDate":"2021-08-31"},{"lineNumber":85,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":86,"author":{"gitId":"boonhaii"},"content":":mainEnd","lastModifiedDate":"2021-08-31"},{"lineNumber":87,"author":{"gitId":"boonhaii"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2021-08-31"},{"lineNumber":88,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":89,"author":{"gitId":"boonhaii"},"content":":omega","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"boonhaii":89}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":" * Main class of project.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":"    private Ui userInt;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"     * Constructor of Duke instance, which initalises the other","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"     * components of the project.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":"    public Duke() {","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"boonhaii"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"boonhaii"},"content":"        this.userInt \u003d new Ui();","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"boonhaii"},"content":"        try {","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"boonhaii"},"content":"            this.tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"boonhaii"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"boonhaii"},"content":"            userInt.showLoadingError();","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"boonhaii"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"boonhaii"},"content":"     * Gets the string representation of the response by the User Interface.","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"boonhaii"},"content":"     * @param input The input string by the user","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"boonhaii"},"content":"     * @return The string to be printed out to the GUI as the response","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"boonhaii"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"boonhaii"},"content":"        try {","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"boonhaii"},"content":"            Command command \u003d Parser.parse(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"boonhaii"},"content":"            return command.execute(tasks, userInt, storage);","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"boonhaii"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"boonhaii"},"content":"            return e.getMessage();","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":44,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":45,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"boonhaii"},"content":"     * Gets the tasks associated to the current user.","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"boonhaii"},"content":"     * @return TaskList object associated with the bot.","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"boonhaii"},"content":"    public TaskList getTasks() {","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"boonhaii"},"content":"        return this.tasks;","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"boonhaii"},"content":"     * Gets the Ui associated to the bot.","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"boonhaii"},"content":"     * @return Ui object associated with the bot.","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"boonhaii"},"content":"    public Ui getUi() {","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"boonhaii"},"content":"        return this.userInt;","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":62,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":64,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"boonhaii":61,"-":3}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":"import duke.command.AddTagCommand;","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"import duke.command.DeleteTagCommand;","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"import duke.command.HelpCommand;","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":"import duke.command.InvalidCommand;","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"boonhaii"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"boonhaii"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"boonhaii"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"boonhaii"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"boonhaii"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"boonhaii"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"boonhaii"},"content":" * Parser class which handles the processing of the inputs detected","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"boonhaii"},"content":" * by the User Interface.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"boonhaii"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"boonhaii"},"content":"public class Parser {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"boonhaii"},"content":"     * Parses the input from the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"boonhaii"},"content":"     * @param input The input inserted by the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"boonhaii"},"content":"     * @return The respective commands to be executed based on the input.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"boonhaii"},"content":"     * @throws DukeException This exception is thrown when the input is invalid.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"boonhaii"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"boonhaii"},"content":"        input \u003d input.toLowerCase();","lastModifiedDate":"2021-09-12"},{"lineNumber":40,"author":{"gitId":"boonhaii"},"content":"        String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"boonhaii"},"content":"        switch (inputArr[0]) {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"boonhaii"},"content":"        case \"list\":","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"boonhaii"},"content":"            return parseList();","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"boonhaii"},"content":"        case \"done\":","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"boonhaii"},"content":"            return parseDone(inputArr);","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"boonhaii"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"boonhaii"},"content":"            return parseDelete(inputArr);","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"boonhaii"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"boonhaii"},"content":"            return parseToDo(inputArr);","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"boonhaii"},"content":"        case \"event\":","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"boonhaii"},"content":"            return parseEvent(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"boonhaii"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"boonhaii"},"content":"            return parseDeadline(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"boonhaii"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"boonhaii"},"content":"            return parseExit();","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"boonhaii"},"content":"        case \"find\":","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"boonhaii"},"content":"            return parseFind(inputArr);","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"boonhaii"},"content":"        case \"tag\":","lastModifiedDate":"2021-09-06"},{"lineNumber":59,"author":{"gitId":"boonhaii"},"content":"            return parseTag(inputArr);","lastModifiedDate":"2021-09-06"},{"lineNumber":60,"author":{"gitId":"boonhaii"},"content":"        case \"/help\":","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"boonhaii"},"content":"            return parseHelp();","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"boonhaii"},"content":"        default:","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"boonhaii"},"content":"            return parseInvalidCommand();","lastModifiedDate":"2021-09-11"},{"lineNumber":64,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":68,"author":{"gitId":"boonhaii"},"content":"     * Parses the input in the case of a list command entered.","lastModifiedDate":"2021-09-06"},{"lineNumber":69,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":70,"author":{"gitId":"boonhaii"},"content":"     * @return The corresponding command for list.","lastModifiedDate":"2021-09-06"},{"lineNumber":71,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":72,"author":{"gitId":"boonhaii"},"content":"    public static Command parseList() {","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"boonhaii"},"content":"        return new ListCommand();","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":77,"author":{"gitId":"boonhaii"},"content":"     * Parses the input in the case of a done command entered.","lastModifiedDate":"2021-09-06"},{"lineNumber":78,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":79,"author":{"gitId":"boonhaii"},"content":"     * @param inputArr The input which has been split using whitespaces.","lastModifiedDate":"2021-09-06"},{"lineNumber":80,"author":{"gitId":"boonhaii"},"content":"     * @return The corresponding command for done.","lastModifiedDate":"2021-09-06"},{"lineNumber":81,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":82,"author":{"gitId":"boonhaii"},"content":"    public static Command parseDone(String[] inputArr) {","lastModifiedDate":"2021-08-31"},{"lineNumber":83,"author":{"gitId":"boonhaii"},"content":"        if (inputArr.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"boonhaii"},"content":"            throw new DukeException(\"Indicate the id of the task which you have completed, \"","lastModifiedDate":"2021-08-31"},{"lineNumber":85,"author":{"gitId":"boonhaii"},"content":"                    + \"seperated by commas for multiple ids!\");","lastModifiedDate":"2021-08-31"},{"lineNumber":86,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"boonhaii"},"content":"        String[] strTaskId \u003d inputArr[1].split(\",\");","lastModifiedDate":"2021-08-31"},{"lineNumber":88,"author":{"gitId":"boonhaii"},"content":"        int numTasks \u003d strTaskId.length;","lastModifiedDate":"2021-08-31"},{"lineNumber":89,"author":{"gitId":"boonhaii"},"content":"        int[] taskIds \u003d new int[numTasks];","lastModifiedDate":"2021-08-31"},{"lineNumber":90,"author":{"gitId":"boonhaii"},"content":"        for (int i \u003d 0; i \u003c numTasks; i++) {","lastModifiedDate":"2021-08-31"},{"lineNumber":91,"author":{"gitId":"boonhaii"},"content":"            taskIds[i] \u003d Integer.parseInt(strTaskId[i]);","lastModifiedDate":"2021-08-31"},{"lineNumber":92,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":93,"author":{"gitId":"boonhaii"},"content":"        return new DoneCommand(taskIds);","lastModifiedDate":"2021-08-31"},{"lineNumber":94,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":95,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":96,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":97,"author":{"gitId":"boonhaii"},"content":"     * Parses the input in the case of a delete command entered.","lastModifiedDate":"2021-09-06"},{"lineNumber":98,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":99,"author":{"gitId":"boonhaii"},"content":"     * @param inputArr The input which has been split using whitespaces.","lastModifiedDate":"2021-09-06"},{"lineNumber":100,"author":{"gitId":"boonhaii"},"content":"     * @return The corresponding command for delete.","lastModifiedDate":"2021-09-06"},{"lineNumber":101,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":102,"author":{"gitId":"boonhaii"},"content":"    public static Command parseDelete(String[] inputArr) {","lastModifiedDate":"2021-08-31"},{"lineNumber":103,"author":{"gitId":"boonhaii"},"content":"        if (inputArr.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"boonhaii"},"content":"            throw new DukeException(\"Indicate the id of the task which you want to remove, \"","lastModifiedDate":"2021-08-31"},{"lineNumber":105,"author":{"gitId":"boonhaii"},"content":"                    + \"seperated by commas for multiple ids!\");","lastModifiedDate":"2021-08-31"},{"lineNumber":106,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"boonhaii"},"content":"        String[] strTaskId \u003d inputArr[1].split(\",\");","lastModifiedDate":"2021-08-31"},{"lineNumber":108,"author":{"gitId":"boonhaii"},"content":"        int numTasks \u003d strTaskId.length;","lastModifiedDate":"2021-08-31"},{"lineNumber":109,"author":{"gitId":"boonhaii"},"content":"        int[] taskIds \u003d new int[numTasks];","lastModifiedDate":"2021-08-31"},{"lineNumber":110,"author":{"gitId":"boonhaii"},"content":"        for (int i \u003d 0; i \u003c numTasks; i++) {","lastModifiedDate":"2021-08-31"},{"lineNumber":111,"author":{"gitId":"boonhaii"},"content":"            taskIds[i] \u003d Integer.parseInt(strTaskId[i]);","lastModifiedDate":"2021-08-31"},{"lineNumber":112,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":113,"author":{"gitId":"boonhaii"},"content":"        return new DeleteCommand(taskIds);","lastModifiedDate":"2021-08-31"},{"lineNumber":114,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":115,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":116,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":117,"author":{"gitId":"boonhaii"},"content":"     * Parses the input in the case of a todo command entered.","lastModifiedDate":"2021-09-06"},{"lineNumber":118,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":119,"author":{"gitId":"boonhaii"},"content":"     * @param inputArr The input which has been split using whitespaces.","lastModifiedDate":"2021-09-06"},{"lineNumber":120,"author":{"gitId":"boonhaii"},"content":"     * @return The corresponding command for todo.","lastModifiedDate":"2021-09-06"},{"lineNumber":121,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":122,"author":{"gitId":"boonhaii"},"content":"    public static Command parseToDo(String[] inputArr) {","lastModifiedDate":"2021-08-31"},{"lineNumber":123,"author":{"gitId":"boonhaii"},"content":"        if (inputArr.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"boonhaii"},"content":"            throw new DukeException(\"Input in the format: todo *description*\");","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":127,"author":{"gitId":"boonhaii"},"content":"        String description \u003d inputArr[1];","lastModifiedDate":"2021-09-06"},{"lineNumber":128,"author":{"gitId":"boonhaii"},"content":"        for (int i \u003d 2; i \u003c inputArr.length; i++) {","lastModifiedDate":"2021-09-06"},{"lineNumber":129,"author":{"gitId":"boonhaii"},"content":"            if (inputArr[i].charAt(0) !\u003d \u0027(\u0027) {","lastModifiedDate":"2021-09-06"},{"lineNumber":130,"author":{"gitId":"boonhaii"},"content":"                description +\u003d (\" \" + inputArr[i]);","lastModifiedDate":"2021-09-06"},{"lineNumber":131,"author":{"gitId":"boonhaii"},"content":"            } else {","lastModifiedDate":"2021-09-06"},{"lineNumber":132,"author":{"gitId":"boonhaii"},"content":"                String duration \u003d inputArr[i];","lastModifiedDate":"2021-09-06"},{"lineNumber":133,"author":{"gitId":"boonhaii"},"content":"                duration \u003d duration.replaceAll(\"[()]\", \"\");","lastModifiedDate":"2021-09-06"},{"lineNumber":134,"author":{"gitId":"boonhaii"},"content":"                return new AddCommand(new Task(description, duration));","lastModifiedDate":"2021-09-06"},{"lineNumber":135,"author":{"gitId":"boonhaii"},"content":"            }","lastModifiedDate":"2021-09-06"},{"lineNumber":136,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":137,"author":{"gitId":"boonhaii"},"content":"        return new AddCommand(new Task(description));","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":139,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":140,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":141,"author":{"gitId":"boonhaii"},"content":"     * Parses the input in the case of a event command entered.","lastModifiedDate":"2021-09-06"},{"lineNumber":142,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":143,"author":{"gitId":"boonhaii"},"content":"     * @param input The input entered by the user.","lastModifiedDate":"2021-09-06"},{"lineNumber":144,"author":{"gitId":"boonhaii"},"content":"     * @return The corresponding command for event.","lastModifiedDate":"2021-09-06"},{"lineNumber":145,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":146,"author":{"gitId":"boonhaii"},"content":"    public static Command parseEvent(String input) {","lastModifiedDate":"2021-08-31"},{"lineNumber":147,"author":{"gitId":"boonhaii"},"content":"        String[] details \u003d input.split(\" /at \");","lastModifiedDate":"2021-08-31"},{"lineNumber":148,"author":{"gitId":"boonhaii"},"content":"        String description \u003d details[0].replaceFirst(\"event \", \"\");","lastModifiedDate":"2021-08-31"},{"lineNumber":149,"author":{"gitId":"boonhaii"},"content":"        if (details.length \u003d\u003d 1 || description.equals(\"\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":150,"author":{"gitId":"boonhaii"},"content":"            throw new DukeException(\"Input the following format: event *description* /at *DD/MM/YYYY* *24H-Time*\");","lastModifiedDate":"2021-08-25"},{"lineNumber":151,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":152,"author":{"gitId":"boonhaii"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":153,"author":{"gitId":"boonhaii"},"content":"            String[] dateTimeArr \u003d details[1].split(\" \");","lastModifiedDate":"2021-08-31"},{"lineNumber":154,"author":{"gitId":"boonhaii"},"content":"            LocalDate date \u003d LocalDate.parse(dateTimeArr[0], DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":155,"author":{"gitId":"boonhaii"},"content":"            LocalTime time \u003d dateTimeArr.length \u003d\u003d 1","lastModifiedDate":"2021-08-31"},{"lineNumber":156,"author":{"gitId":"boonhaii"},"content":"                    ? LocalTime.of(0, 0)","lastModifiedDate":"2021-08-28"},{"lineNumber":157,"author":{"gitId":"boonhaii"},"content":"                    : LocalTime.parse(dateTimeArr[1], DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":158,"author":{"gitId":"boonhaii"},"content":"            LocalDateTime dateTimeInfo \u003d LocalDateTime.of(date, time);","lastModifiedDate":"2021-08-31"},{"lineNumber":159,"author":{"gitId":"boonhaii"},"content":"            return new AddCommand(new Event(description, dateTimeInfo));","lastModifiedDate":"2021-08-25"},{"lineNumber":160,"author":{"gitId":"boonhaii"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":161,"author":{"gitId":"boonhaii"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":162,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":163,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":164,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":165,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":166,"author":{"gitId":"boonhaii"},"content":"     * Parses the input in the case of a deadline command entered.","lastModifiedDate":"2021-09-06"},{"lineNumber":167,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":168,"author":{"gitId":"boonhaii"},"content":"     * @param input The input which has been entered by the user.","lastModifiedDate":"2021-09-06"},{"lineNumber":169,"author":{"gitId":"boonhaii"},"content":"     * @return The corresponding command for todo.","lastModifiedDate":"2021-09-06"},{"lineNumber":170,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":171,"author":{"gitId":"boonhaii"},"content":"    public static Command parseDeadline(String input) {","lastModifiedDate":"2021-08-31"},{"lineNumber":172,"author":{"gitId":"boonhaii"},"content":"        String[] details \u003d input.split(\" /by \");","lastModifiedDate":"2021-08-31"},{"lineNumber":173,"author":{"gitId":"boonhaii"},"content":"        String description \u003d details[0].replaceFirst(\"deadline \", \"\");","lastModifiedDate":"2021-08-31"},{"lineNumber":174,"author":{"gitId":"boonhaii"},"content":"        if (details.length \u003d\u003d 1 || description.equals(\"\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":175,"author":{"gitId":"boonhaii"},"content":"            throw new DukeException(\"Input the following format: \"","lastModifiedDate":"2021-08-28"},{"lineNumber":176,"author":{"gitId":"boonhaii"},"content":"                    + \"deadline *description* /at *DD/MM/YYYY* *24H-Time*\");","lastModifiedDate":"2021-08-28"},{"lineNumber":177,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":178,"author":{"gitId":"boonhaii"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":179,"author":{"gitId":"boonhaii"},"content":"            String[] dateTimeArr \u003d details[1].split(\" \");","lastModifiedDate":"2021-08-31"},{"lineNumber":180,"author":{"gitId":"boonhaii"},"content":"            LocalDate date \u003d LocalDate.parse(dateTimeArr[0], DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":181,"author":{"gitId":"boonhaii"},"content":"            LocalTime time \u003d dateTimeArr.length \u003d\u003d 1","lastModifiedDate":"2021-08-31"},{"lineNumber":182,"author":{"gitId":"boonhaii"},"content":"                    ? LocalTime.of(0, 0)","lastModifiedDate":"2021-08-28"},{"lineNumber":183,"author":{"gitId":"boonhaii"},"content":"                    : LocalTime.parse(dateTimeArr[1], DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":184,"author":{"gitId":"boonhaii"},"content":"            LocalDateTime dateTimeInfo \u003d LocalDateTime.of(date, time);","lastModifiedDate":"2021-08-31"},{"lineNumber":185,"author":{"gitId":"boonhaii"},"content":"            return new AddCommand(new Deadline(description, dateTimeInfo));","lastModifiedDate":"2021-08-25"},{"lineNumber":186,"author":{"gitId":"boonhaii"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":187,"author":{"gitId":"boonhaii"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":188,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":189,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":190,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":191,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":192,"author":{"gitId":"boonhaii"},"content":"     * Parses the input in the case of a find command entered.","lastModifiedDate":"2021-09-06"},{"lineNumber":193,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":194,"author":{"gitId":"boonhaii"},"content":"     * @param inputArr The input which has been entered by the user.","lastModifiedDate":"2021-09-06"},{"lineNumber":195,"author":{"gitId":"boonhaii"},"content":"     * @return The corresponding command for find.","lastModifiedDate":"2021-09-06"},{"lineNumber":196,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":197,"author":{"gitId":"boonhaii"},"content":"    public static Command parseFind(String[] inputArr) {","lastModifiedDate":"2021-08-31"},{"lineNumber":198,"author":{"gitId":"boonhaii"},"content":"        if (inputArr.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":199,"author":{"gitId":"boonhaii"},"content":"            throw new DukeException(\"Input the keyword to be used for the search!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":200,"author":{"gitId":"boonhaii"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":201,"author":{"gitId":"boonhaii"},"content":"            return new FindCommand(inputArr[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":202,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":203,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":204,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":205,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":206,"author":{"gitId":"boonhaii"},"content":"     * Parses the input in the case of a tag command entered.","lastModifiedDate":"2021-09-06"},{"lineNumber":207,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":208,"author":{"gitId":"boonhaii"},"content":"     * @param inputArr The input which has been split using whitespaces.","lastModifiedDate":"2021-09-06"},{"lineNumber":209,"author":{"gitId":"boonhaii"},"content":"     * @return The corresponding command for tag.","lastModifiedDate":"2021-09-06"},{"lineNumber":210,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":211,"author":{"gitId":"boonhaii"},"content":"    public static Command parseTag(String[] inputArr) {","lastModifiedDate":"2021-09-06"},{"lineNumber":212,"author":{"gitId":"boonhaii"},"content":"        if (inputArr.length \u003c 4) {","lastModifiedDate":"2021-09-11"},{"lineNumber":213,"author":{"gitId":"boonhaii"},"content":"            throw new DukeException(\"Indicate the task and the tag with the format: tag *add/delete* *task* *tag*!\");","lastModifiedDate":"2021-09-11"},{"lineNumber":214,"author":{"gitId":"boonhaii"},"content":"        } else {","lastModifiedDate":"2021-09-11"},{"lineNumber":215,"author":{"gitId":"boonhaii"},"content":"            String tag \u003d inputArr[inputArr.length - 1];","lastModifiedDate":"2021-09-12"},{"lineNumber":216,"author":{"gitId":"boonhaii"},"content":"            String description \u003d inputArr[2];","lastModifiedDate":"2021-09-12"},{"lineNumber":217,"author":{"gitId":"boonhaii"},"content":"            for (int i \u003d 3; i \u003c inputArr.length - 1; i++) {","lastModifiedDate":"2021-09-12"},{"lineNumber":218,"author":{"gitId":"boonhaii"},"content":"                description +\u003d (\" \" + inputArr[i]);","lastModifiedDate":"2021-09-12"},{"lineNumber":219,"author":{"gitId":"boonhaii"},"content":"            }","lastModifiedDate":"2021-09-12"},{"lineNumber":220,"author":{"gitId":"boonhaii"},"content":"            if (inputArr[1].equals(\"add\")) {","lastModifiedDate":"2021-09-11"},{"lineNumber":221,"author":{"gitId":"boonhaii"},"content":"                return new AddTagCommand(description, tag);","lastModifiedDate":"2021-09-12"},{"lineNumber":222,"author":{"gitId":"boonhaii"},"content":"            } else if (inputArr[1].equals(\"delete\")) {","lastModifiedDate":"2021-09-11"},{"lineNumber":223,"author":{"gitId":"boonhaii"},"content":"                return new DeleteTagCommand(description, tag);","lastModifiedDate":"2021-09-12"},{"lineNumber":224,"author":{"gitId":"boonhaii"},"content":"            } else {","lastModifiedDate":"2021-09-06"},{"lineNumber":225,"author":{"gitId":"boonhaii"},"content":"                return new InvalidCommand();","lastModifiedDate":"2021-09-11"},{"lineNumber":226,"author":{"gitId":"boonhaii"},"content":"            }","lastModifiedDate":"2021-09-06"},{"lineNumber":227,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":228,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":229,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":230,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":231,"author":{"gitId":"boonhaii"},"content":"     * Parses the input in the case of an unrecognised command.","lastModifiedDate":"2021-09-11"},{"lineNumber":232,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":233,"author":{"gitId":"boonhaii"},"content":"     * @return The corresponding command for invalid inputs.","lastModifiedDate":"2021-09-11"},{"lineNumber":234,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":235,"author":{"gitId":"boonhaii"},"content":"    public static Command parseInvalidCommand() {","lastModifiedDate":"2021-09-11"},{"lineNumber":236,"author":{"gitId":"boonhaii"},"content":"        return new InvalidCommand();","lastModifiedDate":"2021-09-11"},{"lineNumber":237,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":238,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":239,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":240,"author":{"gitId":"boonhaii"},"content":"     * Parses the input in the case of an exit command.","lastModifiedDate":"2021-09-11"},{"lineNumber":241,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":242,"author":{"gitId":"boonhaii"},"content":"     * @return The corresponding command for exit.","lastModifiedDate":"2021-09-11"},{"lineNumber":243,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":244,"author":{"gitId":"boonhaii"},"content":"    public static Command parseExit() {","lastModifiedDate":"2021-09-11"},{"lineNumber":245,"author":{"gitId":"boonhaii"},"content":"        return new ExitCommand();","lastModifiedDate":"2021-09-11"},{"lineNumber":246,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":247,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":248,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":249,"author":{"gitId":"boonhaii"},"content":"     * Parses the input in the case of a help command.","lastModifiedDate":"2021-09-11"},{"lineNumber":250,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":251,"author":{"gitId":"boonhaii"},"content":"     * @return The corresponding command for help.","lastModifiedDate":"2021-09-11"},{"lineNumber":252,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":253,"author":{"gitId":"boonhaii"},"content":"    public static Command parseHelp() {","lastModifiedDate":"2021-09-11"},{"lineNumber":254,"author":{"gitId":"boonhaii"},"content":"        return new HelpCommand();","lastModifiedDate":"2021-09-11"},{"lineNumber":255,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":256,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":257,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"boonhaii":257}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"boonhaii"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"boonhaii"},"content":" * Storage class handles the reading and writing of data","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"boonhaii"},"content":" * from the local file system.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"boonhaii"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"boonhaii"},"content":"public class Storage {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"boonhaii"},"content":"    private static DateTimeFormatter dateTimeFormat;","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"boonhaii"},"content":"    private File file;","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"boonhaii"},"content":"     * Public constructor to initialise the storage for the Duii Bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"boonhaii"},"content":"    public Storage() {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"boonhaii"},"content":"        this.dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\");","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"boonhaii"},"content":"     * Searches the current file system for existing saved files.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"boonhaii"},"content":"     * Creates a new data directory consisting of the text file to write","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"boonhaii"},"content":"     * into if saved file does not exist.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"boonhaii"},"content":"     * @return The abstract representation of the pathname of the created file","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"boonhaii"},"content":"    public File getFiles() {","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"boonhaii"},"content":"        String home \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"boonhaii"},"content":"        Path path \u003d Paths.get(home, \"ip\", \"data\");","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"boonhaii"},"content":"        File directory \u003d new File(path.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"boonhaii"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"boonhaii"},"content":"            Ui.notifyDirNotFound();","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"boonhaii"},"content":"            boolean directoryCreated \u003d directory.mkdir();","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"boonhaii"},"content":"            assert(directoryCreated) : \"Error Creating file.\";","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"boonhaii"},"content":"            Ui.notifyCreatedDir();","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"boonhaii"},"content":"        Path filepath \u003d Paths.get(home, \"ip\", \"data\", \"duke.txt\");","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"boonhaii"},"content":"        File file \u003d new File(filepath.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"boonhaii"},"content":"        if (!file.exists()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"boonhaii"},"content":"            Ui.notifyFileNotFound();","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"boonhaii"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"boonhaii"},"content":"                boolean fileCreated \u003d file.createNewFile();","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"boonhaii"},"content":"                assert(fileCreated) : \"Error Creating file.\";","lastModifiedDate":"2021-09-06"},{"lineNumber":59,"author":{"gitId":"boonhaii"},"content":"                Ui.notifyCreatedFile();","lastModifiedDate":"2021-09-06"},{"lineNumber":60,"author":{"gitId":"boonhaii"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"boonhaii"},"content":"                Ui.showFileError();","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"boonhaii"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"boonhaii"},"content":"        assert(file !\u003d null) : \"System file used for tasks cannot be null!\";","lastModifiedDate":"2021-09-06"},{"lineNumber":65,"author":{"gitId":"boonhaii"},"content":"        return file;","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"boonhaii"},"content":"     * Writes the saved tasks from previous sessions (if any) into","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"boonhaii"},"content":"     * the local TaskList object.","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"boonhaii"},"content":"     * @return An ArrayList initialised with the previously saved tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"boonhaii"},"content":"     * @throws DukeException If an IOException occurs upon reading of file, which is passed on to","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"boonhaii"},"content":"     *                       the main() method of Duke class.","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"boonhaii"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"boonhaii"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"boonhaii"},"content":"            file \u003d this.getFiles();","lastModifiedDate":"2021-08-31"},{"lineNumber":79,"author":{"gitId":"boonhaii"},"content":"            FileReader reader \u003d new FileReader(file);","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"boonhaii"},"content":"            BufferedReader bufferedReader \u003d new BufferedReader(reader);","lastModifiedDate":"2021-09-06"},{"lineNumber":81,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":82,"author":{"gitId":"boonhaii"},"content":"            String text;","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"boonhaii"},"content":"            ArrayList\u003cTask\u003e saved \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":85,"author":{"gitId":"boonhaii"},"content":"            while ((text \u003d bufferedReader.readLine()) !\u003d null) {","lastModifiedDate":"2021-09-06"},{"lineNumber":86,"author":{"gitId":"boonhaii"},"content":"                String[] lineArr \u003d text.split(\" \\\\| \");","lastModifiedDate":"2021-08-31"},{"lineNumber":87,"author":{"gitId":"boonhaii"},"content":"                switch (lineArr.length) {","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"boonhaii"},"content":"                case 4:","lastModifiedDate":"2021-09-06"},{"lineNumber":89,"author":{"gitId":"boonhaii"},"content":"                    Task toDo \u003d loadToDo(lineArr);","lastModifiedDate":"2021-09-06"},{"lineNumber":90,"author":{"gitId":"boonhaii"},"content":"                    saved.add(toDo);","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"boonhaii"},"content":"                    break;","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"boonhaii"},"content":"                case 5:","lastModifiedDate":"2021-09-06"},{"lineNumber":93,"author":{"gitId":"boonhaii"},"content":"                    if (lineArr[0].equals(\"D\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"boonhaii"},"content":"                        Deadline deadline \u003d loadDeadline(lineArr);","lastModifiedDate":"2021-09-06"},{"lineNumber":95,"author":{"gitId":"boonhaii"},"content":"                        saved.add(deadline);","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"boonhaii"},"content":"                    } else if (lineArr[0].equals(\"E\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"boonhaii"},"content":"                        Event event \u003d loadEvent(lineArr);","lastModifiedDate":"2021-09-06"},{"lineNumber":98,"author":{"gitId":"boonhaii"},"content":"                        saved.add(event);","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"boonhaii"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"boonhaii"},"content":"                    break;","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"boonhaii"},"content":"                default:","lastModifiedDate":"2021-08-28"},{"lineNumber":102,"author":{"gitId":"boonhaii"},"content":"                    throw new DukeException(\"Error loading input file.\");","lastModifiedDate":"2021-08-28"},{"lineNumber":103,"author":{"gitId":"boonhaii"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"boonhaii"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"boonhaii"},"content":"            return saved;","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"boonhaii"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"boonhaii"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":112,"author":{"gitId":"boonhaii"},"content":"     * Creates a todo object from the saved file.","lastModifiedDate":"2021-09-06"},{"lineNumber":113,"author":{"gitId":"boonhaii"},"content":"     * @param lineArr The line entry from the saved file which has been split by its seperator.","lastModifiedDate":"2021-09-06"},{"lineNumber":114,"author":{"gitId":"boonhaii"},"content":"     * @return A todo object in the previous iteration of the program.","lastModifiedDate":"2021-09-06"},{"lineNumber":115,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":116,"author":{"gitId":"boonhaii"},"content":"    public Task loadToDo(String[] lineArr) {","lastModifiedDate":"2021-09-06"},{"lineNumber":117,"author":{"gitId":"boonhaii"},"content":"        Task toDo \u003d new Task(lineArr[2]);","lastModifiedDate":"2021-09-06"},{"lineNumber":118,"author":{"gitId":"boonhaii"},"content":"        if (lineArr[1].equals(\"1\")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":119,"author":{"gitId":"boonhaii"},"content":"            toDo.complete();","lastModifiedDate":"2021-09-06"},{"lineNumber":120,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":121,"author":{"gitId":"boonhaii"},"content":"        String[] tags \u003d lineArr[3].split(\"#\");","lastModifiedDate":"2021-09-06"},{"lineNumber":122,"author":{"gitId":"boonhaii"},"content":"        for (int i \u003d 1; i \u003c tags.length; i++) {","lastModifiedDate":"2021-09-06"},{"lineNumber":123,"author":{"gitId":"boonhaii"},"content":"            toDo.addTag(tags[i]);","lastModifiedDate":"2021-09-11"},{"lineNumber":124,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":125,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":126,"author":{"gitId":"boonhaii"},"content":"        return toDo;","lastModifiedDate":"2021-09-06"},{"lineNumber":127,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":128,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":129,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":130,"author":{"gitId":"boonhaii"},"content":"     * Creates a deadline object from the saved file.","lastModifiedDate":"2021-09-06"},{"lineNumber":131,"author":{"gitId":"boonhaii"},"content":"     * @param lineArr The line entry from the saved file which has been split by its seperator.","lastModifiedDate":"2021-09-06"},{"lineNumber":132,"author":{"gitId":"boonhaii"},"content":"     * @return A deadline object in the previous iteration of the program.","lastModifiedDate":"2021-09-06"},{"lineNumber":133,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":134,"author":{"gitId":"boonhaii"},"content":"    public Deadline loadDeadline(String[] lineArr) {","lastModifiedDate":"2021-09-06"},{"lineNumber":135,"author":{"gitId":"boonhaii"},"content":"        Deadline deadline \u003d new Deadline(lineArr[2], LocalDateTime.parse(lineArr[3],","lastModifiedDate":"2021-09-06"},{"lineNumber":136,"author":{"gitId":"boonhaii"},"content":"                this.dateTimeFormat));","lastModifiedDate":"2021-09-06"},{"lineNumber":137,"author":{"gitId":"boonhaii"},"content":"        if (lineArr[1].equals(\"1\")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":138,"author":{"gitId":"boonhaii"},"content":"            deadline.complete();","lastModifiedDate":"2021-09-06"},{"lineNumber":139,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":140,"author":{"gitId":"boonhaii"},"content":"        String[] tags \u003d lineArr[4].split(\"#\");","lastModifiedDate":"2021-09-06"},{"lineNumber":141,"author":{"gitId":"boonhaii"},"content":"        for (int i \u003d 1; i \u003c tags.length; i++) {","lastModifiedDate":"2021-09-06"},{"lineNumber":142,"author":{"gitId":"boonhaii"},"content":"            deadline.addTag(tags[i]);","lastModifiedDate":"2021-09-11"},{"lineNumber":143,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":144,"author":{"gitId":"boonhaii"},"content":"        return deadline;","lastModifiedDate":"2021-09-06"},{"lineNumber":145,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":146,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":147,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":148,"author":{"gitId":"boonhaii"},"content":"     * Creates an event object from the saved file.","lastModifiedDate":"2021-09-06"},{"lineNumber":149,"author":{"gitId":"boonhaii"},"content":"     * @param lineArr The line entry from the saved file which has been split by its seperator.","lastModifiedDate":"2021-09-06"},{"lineNumber":150,"author":{"gitId":"boonhaii"},"content":"     * @return A event object in the previous iteration of the program.","lastModifiedDate":"2021-09-06"},{"lineNumber":151,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":152,"author":{"gitId":"boonhaii"},"content":"    public Event loadEvent(String[] lineArr) {","lastModifiedDate":"2021-09-06"},{"lineNumber":153,"author":{"gitId":"boonhaii"},"content":"        Event event \u003d new Event(lineArr[2], LocalDateTime.parse(lineArr[3], this.dateTimeFormat));","lastModifiedDate":"2021-09-06"},{"lineNumber":154,"author":{"gitId":"boonhaii"},"content":"        if (lineArr[1].equals(\"1\")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":155,"author":{"gitId":"boonhaii"},"content":"            event.complete();","lastModifiedDate":"2021-09-06"},{"lineNumber":156,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":157,"author":{"gitId":"boonhaii"},"content":"        String savedTags \u003d lineArr[4].replaceFirst(\"#\", \"\");","lastModifiedDate":"2021-09-06"},{"lineNumber":158,"author":{"gitId":"boonhaii"},"content":"        String[] tags \u003d savedTags.split(\"#\");","lastModifiedDate":"2021-09-06"},{"lineNumber":159,"author":{"gitId":"boonhaii"},"content":"        for (int i \u003d 1; i \u003c tags.length; i++) {","lastModifiedDate":"2021-09-06"},{"lineNumber":160,"author":{"gitId":"boonhaii"},"content":"            event.addTag(tags[i]);","lastModifiedDate":"2021-09-11"},{"lineNumber":161,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":162,"author":{"gitId":"boonhaii"},"content":"        return event;","lastModifiedDate":"2021-09-06"},{"lineNumber":163,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":164,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":165,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":166,"author":{"gitId":"boonhaii"},"content":"     * Writes the tasks of the current session into the dynamically created file","lastModifiedDate":"2021-08-25"},{"lineNumber":167,"author":{"gitId":"boonhaii"},"content":"     * on the local filesystem.","lastModifiedDate":"2021-08-25"},{"lineNumber":168,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":169,"author":{"gitId":"boonhaii"},"content":"     * @param list The task list to be written into the local file system.","lastModifiedDate":"2021-08-31"},{"lineNumber":170,"author":{"gitId":"boonhaii"},"content":"     * @throws DukeException If an IOException occurs during writing of file, which","lastModifiedDate":"2021-08-25"},{"lineNumber":171,"author":{"gitId":"boonhaii"},"content":"     *                       is passed on to the main() method of Duke class.","lastModifiedDate":"2021-08-25"},{"lineNumber":172,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":173,"author":{"gitId":"boonhaii"},"content":"    public void save(TaskList list) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":174,"author":{"gitId":"boonhaii"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":175,"author":{"gitId":"boonhaii"},"content":"            FileWriter writer \u003d new FileWriter(file, false);","lastModifiedDate":"2021-08-25"},{"lineNumber":176,"author":{"gitId":"boonhaii"},"content":"            for (Task item : list.getAllTasks()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":177,"author":{"gitId":"boonhaii"},"content":"                writer.write(item.getSaveInfo() + \"\\n\");","lastModifiedDate":"2021-08-31"},{"lineNumber":178,"author":{"gitId":"boonhaii"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":179,"author":{"gitId":"boonhaii"},"content":"            writer.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":180,"author":{"gitId":"boonhaii"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":181,"author":{"gitId":"boonhaii"},"content":"            Ui.saveSessionError();","lastModifiedDate":"2021-09-11"},{"lineNumber":182,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":183,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":184,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"boonhaii":184}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":" * TaskList class handles the manipulation of the list","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":" * during active usage of the Duii Bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":"public class TaskList {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"    private int listLength;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"     * Public constructor to initialise TaskList with data","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":"     * from the previous session for the Duii Bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"boonhaii"},"content":"     * @param tasks Creates a task list if there were remaining tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"boonhaii"},"content":"     *              from the previous session.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"boonhaii"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"boonhaii"},"content":"        this.list \u003d tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"boonhaii"},"content":"        this.listLength \u003d tasks.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"boonhaii"},"content":"     * Public constructor to initialise a new TaskList for","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"boonhaii"},"content":"     * the Duii Bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"boonhaii"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"boonhaii"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"boonhaii"},"content":"        this.listLength \u003d 0;","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"boonhaii"},"content":"     * Inserts the input task into the end of the ArrayList,","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"boonhaii"},"content":"     * and updates the total number of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"boonhaii"},"content":"     * @param task The task to be added to the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"boonhaii"},"content":"     * @throws DukeException If an error has occurred in adding the","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"boonhaii"},"content":"     *                       task into the ArrayList.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"boonhaii"},"content":"    public void add(Task task) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"boonhaii"},"content":"        this.list.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"boonhaii"},"content":"        this.listLength++;","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"boonhaii"},"content":"     * Removes the task with the corresponding id from the ArrayList,","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"boonhaii"},"content":"     * and updates the total number of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"boonhaii"},"content":"     * @param id The id of the task as per display with the list() method.","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"boonhaii"},"content":"     * @return The task object which was removed from the list.","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"boonhaii"},"content":"     * @throws DukeException This error is thrown if the id specified is invalid.","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"boonhaii"},"content":"    public Task delete(int id) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"boonhaii"},"content":"        if (id - 1 \u003e this.listLength) {","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"boonhaii"},"content":"            throw new DukeException(String.format(\"Id %s does not exist in the current list!\", id));","lastModifiedDate":"2021-09-07"},{"lineNumber":62,"author":{"gitId":"boonhaii"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"boonhaii"},"content":"            try {","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"boonhaii"},"content":"                Task removedTask \u003d this.list.remove(id - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"boonhaii"},"content":"                this.listLength--;","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"boonhaii"},"content":"                assert(this.listLength \u003e\u003d 0) : \"List length cannot be negative!\";","lastModifiedDate":"2021-09-06"},{"lineNumber":67,"author":{"gitId":"boonhaii"},"content":"                return removedTask;","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"boonhaii"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":69,"author":{"gitId":"boonhaii"},"content":"                throw new DukeException(String.format(\"Id %s does not exist in the current list!\", id));","lastModifiedDate":"2021-09-07"},{"lineNumber":70,"author":{"gitId":"boonhaii"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":71,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":72,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"boonhaii"},"content":"     * Marks a specific task with the corresponding id as completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"boonhaii"},"content":"     * @param id The id of the task as per display with the list() method.","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"boonhaii"},"content":"     * @return The task object which was marked as done.","lastModifiedDate":"2021-09-11"},{"lineNumber":80,"author":{"gitId":"boonhaii"},"content":"     * @throws DukeException This error is thrown if the id specified is invalid.","lastModifiedDate":"2021-09-11"},{"lineNumber":81,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"boonhaii"},"content":"    public Task markDone(int id) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"boonhaii"},"content":"        if (id - 1 \u003e this.listLength) {","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"boonhaii"},"content":"            throw new DukeException(String.format(\"Id %s does not exist in the current list!\", id));","lastModifiedDate":"2021-09-07"},{"lineNumber":85,"author":{"gitId":"boonhaii"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"boonhaii"},"content":"            try {","lastModifiedDate":"2021-09-07"},{"lineNumber":87,"author":{"gitId":"boonhaii"},"content":"                Task doneTask \u003d this.list.get(id - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"boonhaii"},"content":"                assert(doneTask !\u003d null) : \"Completed task cannot be null!\";","lastModifiedDate":"2021-09-06"},{"lineNumber":89,"author":{"gitId":"boonhaii"},"content":"                doneTask.complete();","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"boonhaii"},"content":"                return doneTask;","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"boonhaii"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":92,"author":{"gitId":"boonhaii"},"content":"                throw new DukeException(String.format(\"Id %s does not exist in the current list!\", id));","lastModifiedDate":"2021-09-07"},{"lineNumber":93,"author":{"gitId":"boonhaii"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":94,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"boonhaii"},"content":"     * Returns the ArrayList consisting of all the tasks in the active session.","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"boonhaii"},"content":"     * @return ArrayList consisting of all the tasks in the active session.","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"boonhaii"},"content":"    public ArrayList\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"boonhaii"},"content":"        return this.list;","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"boonhaii":105}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":" * UI class which handles all the interactions with the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":"public class Ui {","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":"    private static final String exitMessage \u003d \"You\u0027re going already? Hope to see you again soon!\";","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"    private static final String loadingErrorMessage \u003d \"Error starting up Duii.\\n\";","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"    private static final String createFileErrorMessage \u003d \"Error creating local record file.\"","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"            + \"This session may not be saved.\\n\";","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"    private static final String saveErrorMessage \u003d \"Error saving current session.\\n\";","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"    private static final String noMatchMessage \u003d \"There were no keyword matches!\";","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":"    private static final String botDescription \u003d \"Duii is a task manager which helps you keep \"","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"boonhaii"},"content":"            + \"track your upcoming tasks!\\n\";","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"boonhaii"},"content":"    private static final String commandList \u003d \"The following commands are available:\\n\"","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"boonhaii"},"content":"            + \"list - Lists all the tasks in the current task list.\\n\"","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"boonhaii"},"content":"            + \"done - Marks the tasks with the specified IDs as done.\\n\"","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"boonhaii"},"content":"            + \"Eg. done 1,2,3 \\n\"","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"boonhaii"},"content":"            + \"delete - Deletes the tasks with the specified IDs.\\n\"","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"boonhaii"},"content":"            + \"Eg. delete 5,1,2 \\n\"","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"boonhaii"},"content":"            + \"tag add - Tags a certain task with the relevant keywords with a tag.\\n\"","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"boonhaii"},"content":"            + \"Eg. tag add book nerd\\n\"","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"boonhaii"},"content":"            + \"tag delete - Removes a certain tag from task(s) with the relevant keywords.\\n\"","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"boonhaii"},"content":"            + \"Eg. tag delete book nerd\\n\"","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"boonhaii"},"content":"            + \"todo - Adds a toDo activity to the list. Optional to specify duration in brackets.\\n\"","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"boonhaii"},"content":"            + \"Eg. todo read book (2h)\\n\"","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"boonhaii"},"content":"            + \"event - Adds an event activity to the list.\\n\"","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"boonhaii"},"content":"            + \"Eg. event Dinner /at 19/02/2021 1900\\n\"","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"boonhaii"},"content":"            + \"deadline - Adds a deadline activity to the list. \\n\"","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"boonhaii"},"content":"            + \"Eg. deadline Assignment 1 /by 19/03/2021 1500\\n\"","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"boonhaii"},"content":"            + \"find - Lists all the tasks with the specified keyword in its description or tag.\\n\"","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"boonhaii"},"content":"            + \"Eg. find books \\n\"","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"boonhaii"},"content":"            + \"bye - Exits the program.\";","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"boonhaii"},"content":"     * Prints the welcome message to the user\u0027s terminal.","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"boonhaii"},"content":"    public String greet(TaskList tasks) {","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"boonhaii"},"content":"        return \"Hello! I\u0027m Duii, your personal assistant!\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"boonhaii"},"content":"                + \"Type in \u0027/help\u0027 for the full list of supported commands. \\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"boonhaii"},"content":"                + printPrevSession(tasks)","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"boonhaii"},"content":"                + \"What do you need help with?\";","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"boonhaii"},"content":"     * Prints the error message which has occurred during loading of file.","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"boonhaii"},"content":"    public String showLoadingError() {","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"boonhaii"},"content":"        return loadingErrorMessage;","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"boonhaii"},"content":"     * Prints the error message which has occurred during creation of file.","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"boonhaii"},"content":"    public static String showFileError() {","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"boonhaii"},"content":"        return createFileErrorMessage;","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"boonhaii"},"content":"     * Prints the error message which has occurred during creation of file.","lastModifiedDate":"2021-09-11"},{"lineNumber":66,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"boonhaii"},"content":"    public static String saveSessionError() {","lastModifiedDate":"2021-09-11"},{"lineNumber":68,"author":{"gitId":"boonhaii"},"content":"        return saveErrorMessage;","lastModifiedDate":"2021-09-11"},{"lineNumber":69,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"boonhaii"},"content":"     * Alerts the user that a task has been marked as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"boonhaii"},"content":"    public String notifyDone(Task doneTask) {","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"boonhaii"},"content":"        assert (doneTask !\u003d null);","lastModifiedDate":"2021-09-06"},{"lineNumber":76,"author":{"gitId":"boonhaii"},"content":"        return \"You\u0027ve finished the task? Good job!\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":77,"author":{"gitId":"boonhaii"},"content":"                + \"This task has been marked as done:\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"boonhaii"},"content":"                + doneTask.displayInfo();","lastModifiedDate":"2021-08-31"},{"lineNumber":79,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":82,"author":{"gitId":"boonhaii"},"content":"     * Alerts the user that multiple tasks have been marked as done.","lastModifiedDate":"2021-08-31"},{"lineNumber":83,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":84,"author":{"gitId":"boonhaii"},"content":"    public String notifyMultiDone(ArrayList\u003cTask\u003e doneTasks) {","lastModifiedDate":"2021-08-31"},{"lineNumber":85,"author":{"gitId":"boonhaii"},"content":"        assert (doneTasks.size() \u003e 1);","lastModifiedDate":"2021-09-06"},{"lineNumber":86,"author":{"gitId":"boonhaii"},"content":"        String output \u003d \"You\u0027ve finished the task? Good job!\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":87,"author":{"gitId":"boonhaii"},"content":"                + \"These tasks have been marked as done:\\n\";","lastModifiedDate":"2021-09-12"},{"lineNumber":88,"author":{"gitId":"boonhaii"},"content":"        for (int i \u003d 0; i \u003c doneTasks.size(); i++) {","lastModifiedDate":"2021-08-31"},{"lineNumber":89,"author":{"gitId":"boonhaii"},"content":"            output +\u003d doneTasks.get(i).displayInfo() + \"\\n\";","lastModifiedDate":"2021-08-31"},{"lineNumber":90,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":91,"author":{"gitId":"boonhaii"},"content":"        return output + \" \";","lastModifiedDate":"2021-09-12"},{"lineNumber":92,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":93,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":94,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"boonhaii"},"content":"     * Alerts the user that a task has been deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"boonhaii"},"content":"    public String notifyDelete(Task removedTask) {","lastModifiedDate":"2021-08-31"},{"lineNumber":98,"author":{"gitId":"boonhaii"},"content":"        assert (removedTask !\u003d null);","lastModifiedDate":"2021-09-06"},{"lineNumber":99,"author":{"gitId":"boonhaii"},"content":"        return \"Okay! Removing the task:\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":100,"author":{"gitId":"boonhaii"},"content":"                + removedTask.displayInfo();","lastModifiedDate":"2021-08-31"},{"lineNumber":101,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":104,"author":{"gitId":"boonhaii"},"content":"     * Alerts the user that multiple tasks have been deleted.","lastModifiedDate":"2021-08-31"},{"lineNumber":105,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":106,"author":{"gitId":"boonhaii"},"content":"    public String notifyMultiDelete(ArrayList\u003cTask\u003e removedTasks) {","lastModifiedDate":"2021-08-31"},{"lineNumber":107,"author":{"gitId":"boonhaii"},"content":"        assert (removedTasks.size() \u003e 1);","lastModifiedDate":"2021-09-06"},{"lineNumber":108,"author":{"gitId":"boonhaii"},"content":"        String output \u003d \"Okay! Removing these tasks:\\n\";","lastModifiedDate":"2021-09-12"},{"lineNumber":109,"author":{"gitId":"boonhaii"},"content":"        for (int i \u003d 0; i \u003c removedTasks.size(); i++) {","lastModifiedDate":"2021-08-31"},{"lineNumber":110,"author":{"gitId":"boonhaii"},"content":"            output +\u003d removedTasks.get(i).displayInfo() + \"\\n\";","lastModifiedDate":"2021-08-31"},{"lineNumber":111,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":112,"author":{"gitId":"boonhaii"},"content":"        return output + \" \";","lastModifiedDate":"2021-09-12"},{"lineNumber":113,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":114,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":115,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"boonhaii"},"content":"     * Displays the list of tasks in the current active session.","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"boonhaii"},"content":"    public String notifyList(ArrayList\u003cTask\u003e taskArrList) {","lastModifiedDate":"2021-08-31"},{"lineNumber":119,"author":{"gitId":"boonhaii"},"content":"        assert (taskArrList !\u003d null);","lastModifiedDate":"2021-09-06"},{"lineNumber":120,"author":{"gitId":"boonhaii"},"content":"        String output \u003d \"Here\u0027s your current list:\\n\";","lastModifiedDate":"2021-08-31"},{"lineNumber":121,"author":{"gitId":"boonhaii"},"content":"        int listLength \u003d taskArrList.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"boonhaii"},"content":"        for (int i \u003d 0; i \u003c listLength; i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"boonhaii"},"content":"            output +\u003d String.format(\"%d. %s\\n\", i + 1, taskArrList.get(i).displayInfo());","lastModifiedDate":"2021-08-31"},{"lineNumber":124,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"boonhaii"},"content":"        return output + \" \";","lastModifiedDate":"2021-09-12"},{"lineNumber":126,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":128,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"boonhaii"},"content":"     * Updates the user that there are no matches in the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":130,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"boonhaii"},"content":"    public String notifyNoMatching() {","lastModifiedDate":"2021-08-31"},{"lineNumber":132,"author":{"gitId":"boonhaii"},"content":"        return noMatchMessage;","lastModifiedDate":"2021-09-11"},{"lineNumber":133,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":134,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":135,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":136,"author":{"gitId":"boonhaii"},"content":"     * Updates the user of the tasks in the list matching the keywords.","lastModifiedDate":"2021-08-25"},{"lineNumber":137,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"boonhaii"},"content":"     * @param taskArrList The ArrayList of tasks with matching keywords.","lastModifiedDate":"2021-08-25"},{"lineNumber":139,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":140,"author":{"gitId":"boonhaii"},"content":"    public String notifyMatchingList(ArrayList\u003cTask\u003e taskArrList) {","lastModifiedDate":"2021-08-31"},{"lineNumber":141,"author":{"gitId":"boonhaii"},"content":"        String output \u003d \"Here\u0027s are the matching results:\\n\";","lastModifiedDate":"2021-08-31"},{"lineNumber":142,"author":{"gitId":"boonhaii"},"content":"        int listLength \u003d taskArrList.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":143,"author":{"gitId":"boonhaii"},"content":"        for (int i \u003d 0; i \u003c listLength; i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":144,"author":{"gitId":"boonhaii"},"content":"            output +\u003d String.format(\"%d. %s\\n\", i + 1, taskArrList.get(i).displayInfo());","lastModifiedDate":"2021-08-31"},{"lineNumber":145,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":146,"author":{"gitId":"boonhaii"},"content":"        return output + \" \";","lastModifiedDate":"2021-09-12"},{"lineNumber":147,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":148,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":149,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":150,"author":{"gitId":"boonhaii"},"content":"     * Updates the user of the tasks in the list which have been tagged.","lastModifiedDate":"2021-09-06"},{"lineNumber":151,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":152,"author":{"gitId":"boonhaii"},"content":"     * @param taskArrList The ArrayList of tasks with matching keywords.","lastModifiedDate":"2021-09-06"},{"lineNumber":153,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":154,"author":{"gitId":"boonhaii"},"content":"    public String notifyTaggedList(ArrayList\u003cTask\u003e taskArrList, String keyword) {","lastModifiedDate":"2021-09-06"},{"lineNumber":155,"author":{"gitId":"boonhaii"},"content":"        String output \u003d \"Here are the tasks which have been tagged with #\" + keyword + \":\\n\";","lastModifiedDate":"2021-09-12"},{"lineNumber":156,"author":{"gitId":"boonhaii"},"content":"        int listLength \u003d taskArrList.size();","lastModifiedDate":"2021-09-06"},{"lineNumber":157,"author":{"gitId":"boonhaii"},"content":"        for (int i \u003d 0; i \u003c listLength; i++) {","lastModifiedDate":"2021-09-06"},{"lineNumber":158,"author":{"gitId":"boonhaii"},"content":"            output +\u003d String.format(\"%d. %s\\n\", i + 1, taskArrList.get(i).displayInfo());","lastModifiedDate":"2021-09-06"},{"lineNumber":159,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":160,"author":{"gitId":"boonhaii"},"content":"        return output + \" \";","lastModifiedDate":"2021-09-12"},{"lineNumber":161,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":162,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":163,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":164,"author":{"gitId":"boonhaii"},"content":"     * Updates the user of the tasks in the list which have had the tag removed.","lastModifiedDate":"2021-09-11"},{"lineNumber":165,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":166,"author":{"gitId":"boonhaii"},"content":"     * @param taskArrList The ArrayList of tasks with matching keywords.","lastModifiedDate":"2021-09-11"},{"lineNumber":167,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":168,"author":{"gitId":"boonhaii"},"content":"    public String notifyRemovedTaggedList(ArrayList\u003cTask\u003e taskArrList, String keyword) {","lastModifiedDate":"2021-09-11"},{"lineNumber":169,"author":{"gitId":"boonhaii"},"content":"        String output \u003d \"Here are the tasks which have the tag #\" + keyword + \" removed:\\n\";","lastModifiedDate":"2021-09-12"},{"lineNumber":170,"author":{"gitId":"boonhaii"},"content":"        int listLength \u003d taskArrList.size();","lastModifiedDate":"2021-09-11"},{"lineNumber":171,"author":{"gitId":"boonhaii"},"content":"        for (int i \u003d 0; i \u003c listLength; i++) {","lastModifiedDate":"2021-09-11"},{"lineNumber":172,"author":{"gitId":"boonhaii"},"content":"            output +\u003d String.format(\"%d. %s\\n\", i + 1, taskArrList.get(i).displayInfo());","lastModifiedDate":"2021-09-11"},{"lineNumber":173,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":174,"author":{"gitId":"boonhaii"},"content":"        return output + \" \";","lastModifiedDate":"2021-09-12"},{"lineNumber":175,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":176,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":177,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":178,"author":{"gitId":"boonhaii"},"content":"     * Updates the user of the tasks in the list, after adding the new task.","lastModifiedDate":"2021-08-28"},{"lineNumber":179,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":180,"author":{"gitId":"boonhaii"},"content":"     * @param taskArrList The ArrayList of tasks in the current list.","lastModifiedDate":"2021-08-28"},{"lineNumber":181,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":182,"author":{"gitId":"boonhaii"},"content":"    public String notifyAdd(ArrayList\u003cTask\u003e taskArrList) {","lastModifiedDate":"2021-08-31"},{"lineNumber":183,"author":{"gitId":"boonhaii"},"content":"        int listLength \u003d taskArrList.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":184,"author":{"gitId":"boonhaii"},"content":"        assert (listLength \u003e 0);","lastModifiedDate":"2021-09-06"},{"lineNumber":185,"author":{"gitId":"boonhaii"},"content":"        Task newTask \u003d taskArrList.get(listLength - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":186,"author":{"gitId":"boonhaii"},"content":"        return \"New Task? I\u0027ve added it to the list:\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":187,"author":{"gitId":"boonhaii"},"content":"                + newTask.displayInfo()","lastModifiedDate":"2021-08-31"},{"lineNumber":188,"author":{"gitId":"boonhaii"},"content":"                + \"\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":189,"author":{"gitId":"boonhaii"},"content":"                + String.format(\"Now you have %d task(s) in the list.\", listLength);","lastModifiedDate":"2021-08-31"},{"lineNumber":190,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":191,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":192,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":193,"author":{"gitId":"boonhaii"},"content":"     * Shows the tasks recorded from the previous session.","lastModifiedDate":"2021-08-25"},{"lineNumber":194,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":195,"author":{"gitId":"boonhaii"},"content":"    public String printPrevSession(TaskList tasks) {","lastModifiedDate":"2021-09-07"},{"lineNumber":196,"author":{"gitId":"boonhaii"},"content":"        ArrayList\u003cTask\u003e taskArrList \u003d tasks.getAllTasks();","lastModifiedDate":"2021-08-25"},{"lineNumber":197,"author":{"gitId":"boonhaii"},"content":"        int listLength \u003d taskArrList.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":198,"author":{"gitId":"boonhaii"},"content":"        if (listLength \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":199,"author":{"gitId":"boonhaii"},"content":"            return \"You have no outstanding tasks from the previous session.\\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":200,"author":{"gitId":"boonhaii"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":201,"author":{"gitId":"boonhaii"},"content":"            String output \u003d \"These tasks are from the previous session:\\n\";","lastModifiedDate":"2021-08-31"},{"lineNumber":202,"author":{"gitId":"boonhaii"},"content":"            for (int i \u003d 0; i \u003c taskArrList.size(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":203,"author":{"gitId":"boonhaii"},"content":"                output +\u003d String.format(\"%d. %s\", i + 1, taskArrList.get(i).displayInfo());","lastModifiedDate":"2021-08-31"},{"lineNumber":204,"author":{"gitId":"boonhaii"},"content":"                output +\u003d \"\\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":205,"author":{"gitId":"boonhaii"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":206,"author":{"gitId":"boonhaii"},"content":"            return output;","lastModifiedDate":"2021-08-31"},{"lineNumber":207,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":208,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":209,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":210,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":211,"author":{"gitId":"boonhaii"},"content":"     * Displays the list of commands available for the user.","lastModifiedDate":"2021-09-11"},{"lineNumber":212,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":213,"author":{"gitId":"boonhaii"},"content":"    public static String displayHelp() {","lastModifiedDate":"2021-09-11"},{"lineNumber":214,"author":{"gitId":"boonhaii"},"content":"        return botDescription + commandList;","lastModifiedDate":"2021-09-11"},{"lineNumber":215,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":216,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":217,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":218,"author":{"gitId":"boonhaii"},"content":"     * Prints the exit message to the user\u0027s terminal.","lastModifiedDate":"2021-09-11"},{"lineNumber":219,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":220,"author":{"gitId":"boonhaii"},"content":"    public String exit() {","lastModifiedDate":"2021-09-11"},{"lineNumber":221,"author":{"gitId":"boonhaii"},"content":"        return exitMessage;","lastModifiedDate":"2021-09-11"},{"lineNumber":222,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":223,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":224,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":225,"author":{"gitId":"boonhaii"},"content":"     * Prints the directory not found message to the user\u0027s terminal.","lastModifiedDate":"2021-09-06"},{"lineNumber":226,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":227,"author":{"gitId":"boonhaii"},"content":"    public static void notifyDirNotFound() {","lastModifiedDate":"2021-09-06"},{"lineNumber":228,"author":{"gitId":"boonhaii"},"content":"        System.out.println(\"\u0027data\u0027 directory not found. Creating the directory...\");","lastModifiedDate":"2021-09-06"},{"lineNumber":229,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":230,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":231,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":232,"author":{"gitId":"boonhaii"},"content":"     * Prints the directory created message to the user\u0027s terminal.","lastModifiedDate":"2021-09-06"},{"lineNumber":233,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":234,"author":{"gitId":"boonhaii"},"content":"    public static void notifyCreatedDir() {","lastModifiedDate":"2021-09-06"},{"lineNumber":235,"author":{"gitId":"boonhaii"},"content":"        System.out.println(\"Directory created.\");","lastModifiedDate":"2021-09-06"},{"lineNumber":236,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":237,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":238,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":239,"author":{"gitId":"boonhaii"},"content":"     * Prints the file not found message to the user\u0027s terminal.","lastModifiedDate":"2021-09-06"},{"lineNumber":240,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":241,"author":{"gitId":"boonhaii"},"content":"    public static void notifyFileNotFound() {","lastModifiedDate":"2021-09-06"},{"lineNumber":242,"author":{"gitId":"boonhaii"},"content":"        System.out.println(\"Data file not found. Creating a new file...\");","lastModifiedDate":"2021-09-06"},{"lineNumber":243,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":244,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":245,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":246,"author":{"gitId":"boonhaii"},"content":"     * Prints the file created message to the user\u0027s terminal.","lastModifiedDate":"2021-09-06"},{"lineNumber":247,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":248,"author":{"gitId":"boonhaii"},"content":"    public static void notifyCreatedFile() {","lastModifiedDate":"2021-09-06"},{"lineNumber":249,"author":{"gitId":"boonhaii"},"content":"        System.out.println(\"File created.\");","lastModifiedDate":"2021-09-06"},{"lineNumber":250,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":251,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"boonhaii":251}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":" * AddCommand class which indicates input is adding new tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"    private static final boolean IS_EXIT \u003d false;","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":"    private Task newTask;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"boonhaii"},"content":"     * Public constructor for the AddCommand.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"boonhaii"},"content":"     * @param newTask The task to be added.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"boonhaii"},"content":"    public AddCommand(Task newTask) {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"boonhaii"},"content":"        this.newTask \u003d newTask;","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"boonhaii"},"content":"     * Adds the task into the respective components of the bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"boonhaii"},"content":"     * @param tasks The TaskList associated with the current bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"boonhaii"},"content":"     * @param userInt The User Interface associated with the current bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"boonhaii"},"content":"     * @param storage The storage associated with the current bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"boonhaii"},"content":"     * @throws DukeException If any error has occurred during the addition of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"boonhaii"},"content":"     * @return The string to be printed to the GUI.","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"boonhaii"},"content":"    public String execute(TaskList tasks, Ui userInt, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"boonhaii"},"content":"        tasks.add(this.newTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"boonhaii"},"content":"        ArrayList\u003cTask\u003e taskArrList \u003d tasks.getAllTasks();","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"boonhaii"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"boonhaii"},"content":"        return userInt.notifyAdd(taskArrList);","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"boonhaii"},"content":"     * Gets the task associated with the command.","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"boonhaii"},"content":"     * @return The task associated with the given command.","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"boonhaii"},"content":"    public Task getTask() {","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"boonhaii"},"content":"        return this.newTask;","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"boonhaii"},"content":"     * Returns a boolean determining whether the input should exit the bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"boonhaii"},"content":"     * @return If the command exits the bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"boonhaii"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"boonhaii"},"content":"        return this.IS_EXIT;","lastModifiedDate":"2021-09-06"},{"lineNumber":63,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"boonhaii":64}},{"path":"src/main/java/duke/command/AddTagCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"package duke.command;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":"public class AddTagCommand extends Command {","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":"    private static final boolean IS_EXIT \u003d false;","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":"    private String taskDescription;","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"    private String keyword;","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"     * Public constructor for a tag command.","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":"     * @param taskDescription The description of the task.","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"boonhaii"},"content":"     * @param keyword The keyword to tag the specific task.","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"boonhaii"},"content":"    public AddTagCommand(String taskDescription, String keyword) {","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"boonhaii"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"boonhaii"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"boonhaii"},"content":"     * Lists the tasks with the matching keyword associated with the FindCommand.","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"boonhaii"},"content":"     * @param tasks The TaskList associated with the current bot.","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"boonhaii"},"content":"     * @param userInt The User Interface associated with the current bot.","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"boonhaii"},"content":"     * @param storage The storage associated with the current bot.","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"boonhaii"},"content":"     * @return The string to be printed to the GUI.","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"boonhaii"},"content":"    public String execute(TaskList tasks, Ui userInt, Storage storage) {","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"boonhaii"},"content":"        ArrayList\u003cTask\u003e taskArrList \u003d tasks.getAllTasks();","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"boonhaii"},"content":"        int listLength \u003d taskArrList.size();","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"boonhaii"},"content":"        ArrayList\u003cTask\u003e matches \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"boonhaii"},"content":"        for (int i \u003d 0; i \u003c listLength; i++) {","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"boonhaii"},"content":"            Task currTask \u003d taskArrList.get(i);","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"boonhaii"},"content":"            String description \u003d currTask.getTaskName();","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"boonhaii"},"content":"            if (description.contains(this.taskDescription)) {","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"boonhaii"},"content":"                matches.add(currTask);","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"boonhaii"},"content":"                currTask.addTag(this.keyword);","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"boonhaii"},"content":"            }","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"boonhaii"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"boonhaii"},"content":"        if (matches.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"boonhaii"},"content":"            return userInt.notifyNoMatching();","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"boonhaii"},"content":"        } else {","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"boonhaii"},"content":"            return userInt.notifyTaggedList(matches, this.keyword);","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":55,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":57,"author":{"gitId":"boonhaii"},"content":"     * Returns a boolean determining whether the input should exit the bot.","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":59,"author":{"gitId":"boonhaii"},"content":"     * @return If the command exits the bot.","lastModifiedDate":"2021-09-06"},{"lineNumber":60,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":62,"author":{"gitId":"boonhaii"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-06"},{"lineNumber":63,"author":{"gitId":"boonhaii"},"content":"        return this.IS_EXIT;","lastModifiedDate":"2021-09-06"},{"lineNumber":64,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":65,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":66,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":67,"author":{"gitId":"boonhaii"},"content":"     * Gets the task associated with the command.","lastModifiedDate":"2021-09-06"},{"lineNumber":68,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":69,"author":{"gitId":"boonhaii"},"content":"     * @return null, as no task is associated with the command.","lastModifiedDate":"2021-09-06"},{"lineNumber":70,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":71,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":72,"author":{"gitId":"boonhaii"},"content":"    public Task getTask() {","lastModifiedDate":"2021-09-06"},{"lineNumber":73,"author":{"gitId":"boonhaii"},"content":"        return null;","lastModifiedDate":"2021-09-06"},{"lineNumber":74,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":75,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"boonhaii":75}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":" * Abstract class which determines the behaviour of the bot","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":" * in response to the input of the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"     * Abstract method which executes the commands.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"     * @param task The TaskList associated with the current bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":"     * @param userInt The User Interface associated with the current bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"boonhaii"},"content":"     * @param storage The storage associated with the current bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"boonhaii"},"content":"     * @return The string to be printed out by the bot to the GUI.","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"boonhaii"},"content":"     * @throws DukeException If any error has occurred during the execution of the commands.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"boonhaii"},"content":"    public abstract String execute(TaskList task, Ui userInt, Storage storage) throws DukeException;","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"boonhaii"},"content":"     * Returns a boolean determining whether the input should exit the bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"boonhaii"},"content":"     * @return If the command exits the bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"boonhaii"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"boonhaii"},"content":"     * Gets the task associated with the command.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"boonhaii"},"content":"     * @return The task associated with the given command.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"boonhaii"},"content":"    public abstract Task getTask();","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"boonhaii":39}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"    private static final boolean IS_EXIT \u003d false;","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"    private int[] taskIds;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"    private Task removedTask;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":"     * Public constructor of the DeleteCommand object.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"boonhaii"},"content":"     * @param taskIds The id(s) of the task to be removed, with respect to","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"boonhaii"},"content":"     *               the list printed by the list() command.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"boonhaii"},"content":"    public DeleteCommand(int ...taskIds) {","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"boonhaii"},"content":"        this.taskIds \u003d taskIds;","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"boonhaii"},"content":"     * Removes the task in the respective component of the bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"boonhaii"},"content":"     * @param tasks The TaskList associated with the current bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"boonhaii"},"content":"     * @param userInt The User Interface associated with the current bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"boonhaii"},"content":"     * @param storage The storage associated with the current bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"boonhaii"},"content":"     * @return The string to be printed to the GUI.","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"boonhaii"},"content":"     * @throws DukeException If any error has occurred during the addition of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"boonhaii"},"content":"    public String execute(TaskList tasks, Ui userInt, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"boonhaii"},"content":"        if (taskIds.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"boonhaii"},"content":"            removedTask \u003d tasks.delete(this.taskIds[0]);","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"boonhaii"},"content":"            storage.save(tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"boonhaii"},"content":"            return userInt.notifyDelete(removedTask);","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"boonhaii"},"content":"        } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"boonhaii"},"content":"            // To remove items with the biggest ids first, such that it would not affect later deletes.","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"boonhaii"},"content":"            Arrays.sort(this.taskIds);","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"boonhaii"},"content":"            ArrayList\u003cTask\u003e removedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"boonhaii"},"content":"            for (int i \u003d this.taskIds.length - 1; i \u003e\u003d 0; i--) {","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"boonhaii"},"content":"                removedTask \u003d tasks.delete(this.taskIds[i]);","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"boonhaii"},"content":"                removedTasks.add(0, removedTask);","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"boonhaii"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"boonhaii"},"content":"            storage.save(tasks);","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"boonhaii"},"content":"            return userInt.notifyMultiDelete(removedTasks);","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"boonhaii"},"content":"     * Gets the task associated with the command.","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"boonhaii"},"content":"     * If multiple, gives the most recently deleted task.","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"boonhaii"},"content":"     * @return The task associated with the given command.","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"boonhaii"},"content":"    public Task getTask() {","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"boonhaii"},"content":"        return this.removedTask;","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"boonhaii"},"content":"     * Returns a boolean determining whether the input should exit the bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"boonhaii"},"content":"     * @return If the command exits the bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":72,"author":{"gitId":"boonhaii"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"boonhaii"},"content":"        return this.IS_EXIT;","lastModifiedDate":"2021-09-06"},{"lineNumber":74,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"boonhaii":75}},{"path":"src/main/java/duke/command/DeleteTagCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"package duke.command;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":"public class DeleteTagCommand extends Command {","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":"    private static final boolean IS_EXIT \u003d false;","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":"    private String taskDescription;","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"    private String keyword;","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"     * Public constructor for a tag command.","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":"     * @param taskDescription The description of the task.","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"boonhaii"},"content":"     * @param keyword The keyword to tag the specific task.","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"boonhaii"},"content":"    public DeleteTagCommand(String taskDescription, String keyword) {","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"boonhaii"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"boonhaii"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"boonhaii"},"content":"     * Lists the tasks with the matching keyword associated with the FindCommand.","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"boonhaii"},"content":"     * @param tasks The TaskList associated with the current bot.","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"boonhaii"},"content":"     * @param userInt The User Interface associated with the current bot.","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"boonhaii"},"content":"     * @param storage The storage associated with the current bot.","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"boonhaii"},"content":"     * @return The string to be printed to the GUI.","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"boonhaii"},"content":"    public String execute(TaskList tasks, Ui userInt, Storage storage) {","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"boonhaii"},"content":"        ArrayList\u003cTask\u003e taskArrList \u003d tasks.getAllTasks();","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"boonhaii"},"content":"        int listLength \u003d taskArrList.size();","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"boonhaii"},"content":"        ArrayList\u003cTask\u003e matches \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"boonhaii"},"content":"        for (int i \u003d 0; i \u003c listLength; i++) {","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"boonhaii"},"content":"            Task currTask \u003d taskArrList.get(i);","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"boonhaii"},"content":"            String description \u003d currTask.getTaskName();","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"boonhaii"},"content":"            if (description.contains(this.taskDescription)) {","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"boonhaii"},"content":"                matches.add(currTask);","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"boonhaii"},"content":"                currTask.removeTag(this.keyword);","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"boonhaii"},"content":"            }","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"boonhaii"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"boonhaii"},"content":"        if (matches.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"boonhaii"},"content":"            return userInt.notifyNoMatching();","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"boonhaii"},"content":"        } else {","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"boonhaii"},"content":"            return userInt.notifyRemovedTaggedList(matches, this.keyword);","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":55,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":57,"author":{"gitId":"boonhaii"},"content":"     * Returns a boolean determining whether the input should exit the bot.","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":59,"author":{"gitId":"boonhaii"},"content":"     * @return If the command exits the bot.","lastModifiedDate":"2021-09-06"},{"lineNumber":60,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":62,"author":{"gitId":"boonhaii"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-06"},{"lineNumber":63,"author":{"gitId":"boonhaii"},"content":"        return this.IS_EXIT;","lastModifiedDate":"2021-09-06"},{"lineNumber":64,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":65,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":66,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":67,"author":{"gitId":"boonhaii"},"content":"     * Gets the task associated with the command.","lastModifiedDate":"2021-09-06"},{"lineNumber":68,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":69,"author":{"gitId":"boonhaii"},"content":"     * @return null, as no task is associated with the command.","lastModifiedDate":"2021-09-06"},{"lineNumber":70,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":71,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":72,"author":{"gitId":"boonhaii"},"content":"    public Task getTask() {","lastModifiedDate":"2021-09-06"},{"lineNumber":73,"author":{"gitId":"boonhaii"},"content":"        return null;","lastModifiedDate":"2021-09-06"},{"lineNumber":74,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":75,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"boonhaii":75}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":"    private static final boolean IS_EXIT \u003d false;","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"    private int[] taskIds;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"    private Task doneTask;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"     * Public constructor of the DoneCommand object.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":"     * @param taskIds The id(s) of the task to be removed, with respect to","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"boonhaii"},"content":"     *               the list printed by the list() command.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"boonhaii"},"content":"    public DoneCommand(int... taskIds) {","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"boonhaii"},"content":"        this.taskIds \u003d taskIds;","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"boonhaii"},"content":"     * Marks a task in the TaskList of the bot as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"boonhaii"},"content":"     * @param tasks The TaskList associated with the current bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"boonhaii"},"content":"     * @param userInt The User Interface associated with the current bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"boonhaii"},"content":"     * @param storage The storage associated with the current bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"boonhaii"},"content":"     * @return The string to be printed to the GUI.","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"boonhaii"},"content":"     * @throws DukeException If any error has occurred during the addition of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"boonhaii"},"content":"    public String execute(TaskList tasks, Ui userInt, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"boonhaii"},"content":"        if (this.taskIds.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"boonhaii"},"content":"            doneTask \u003d tasks.markDone(this.taskIds[0]);","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"boonhaii"},"content":"            storage.save(tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"boonhaii"},"content":"            return userInt.notifyDone(doneTask);","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"boonhaii"},"content":"        } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"boonhaii"},"content":"            ArrayList\u003cTask\u003e doneTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"boonhaii"},"content":"            for (int taskId : this.taskIds) {","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"boonhaii"},"content":"                doneTask \u003d tasks.markDone(taskId);","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"boonhaii"},"content":"                doneTasks.add(doneTask);","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"boonhaii"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"boonhaii"},"content":"            storage.save(tasks);","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"boonhaii"},"content":"            return userInt.notifyMultiDone(doneTasks);","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"boonhaii"},"content":"     * Gets the task associated with the command.","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"boonhaii"},"content":"     * If multiple, returns the most recent done task.","lastModifiedDate":"2021-09-06"},{"lineNumber":55,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"boonhaii"},"content":"     * @return The task associated with the given command.","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"boonhaii"},"content":"    public Task getTask() {","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"boonhaii"},"content":"        return this.doneTask;","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"boonhaii"},"content":"     * Returns a boolean determining whether the input should exit the bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"boonhaii"},"content":"     * @return If the command exits the bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":69,"author":{"gitId":"boonhaii"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"boonhaii"},"content":"        return this.IS_EXIT;","lastModifiedDate":"2021-09-06"},{"lineNumber":71,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"boonhaii":72}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":"    private static final boolean IS_EXIT \u003d true;","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"     * Exits the bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"     * @param task The TaskList associated with the current bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"     * @param userInt The User Interface associated with the current bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"     * @param storage The storage associated with the current bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":"     * @return The string to be printed to the GUI.","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"boonhaii"},"content":"     * @throws DukeException If any error has occurred during the addition of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"boonhaii"},"content":"    public String execute(TaskList task, Ui userInt, Storage storage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"boonhaii"},"content":"        return userInt.exit();","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"boonhaii"},"content":"     * Gets the task associated with the command.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"boonhaii"},"content":"     * @return null, as no task is associated with an exit command.","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"boonhaii"},"content":"    public Task getTask() {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"boonhaii"},"content":"        return null;","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"boonhaii"},"content":"     * Returns a boolean determining whether the input should exit the bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"boonhaii"},"content":"     * @return If the command exits the bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"boonhaii"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"boonhaii"},"content":"        return this.IS_EXIT;","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"boonhaii":45}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":" * FindCommand class which searches for tasks with matching keywords in the description or tags.","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"    private static final boolean IS_EXIT \u003d false;","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"    private String keyword;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":"     * Public constructor of the FindCommand","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"boonhaii"},"content":"     * @param keyword The keyword used to search for the matching tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"boonhaii"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"boonhaii"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"boonhaii"},"content":"     * Lists the tasks with the matching keyword associated with the FindCommand.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"boonhaii"},"content":"     * @param tasks The TaskList associated with the current bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"boonhaii"},"content":"     * @param userInt The User Interface associated with the current bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"boonhaii"},"content":"     * @param storage The storage associated with the current bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"boonhaii"},"content":"     * @return The string to be printed to the GUI.","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"boonhaii"},"content":"    public String execute(TaskList tasks, Ui userInt, Storage storage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"boonhaii"},"content":"        ArrayList\u003cTask\u003e taskArrList \u003d tasks.getAllTasks();","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"boonhaii"},"content":"        int listLength \u003d taskArrList.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"boonhaii"},"content":"        ArrayList\u003cTask\u003e matches \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"boonhaii"},"content":"        for (int i \u003d 0; i \u003c listLength; i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"boonhaii"},"content":"            Task currTask \u003d taskArrList.get(i);","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"boonhaii"},"content":"            String description \u003d currTask.getTaskName();","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"boonhaii"},"content":"            if (description.contains(this.keyword) || currTask.hasGivenTag(this.keyword)) {","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"boonhaii"},"content":"                matches.add(currTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"boonhaii"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"boonhaii"},"content":"        if (matches.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"boonhaii"},"content":"            return userInt.notifyNoMatching();","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"boonhaii"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"boonhaii"},"content":"            return userInt.notifyMatchingList(matches);","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"boonhaii"},"content":"     * Returns a boolean determining whether the input should exit the bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"boonhaii"},"content":"     * @return If the command exits the bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":60,"author":{"gitId":"boonhaii"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"boonhaii"},"content":"        return this.IS_EXIT;","lastModifiedDate":"2021-09-06"},{"lineNumber":62,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"boonhaii"},"content":"     * Gets the task associated with the command.","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"boonhaii"},"content":"     * @return null, as no task is associated with the command.","lastModifiedDate":"2021-09-06"},{"lineNumber":68,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":70,"author":{"gitId":"boonhaii"},"content":"    public Task getTask() {","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"boonhaii"},"content":"        return null;","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"boonhaii":73}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"package duke.command;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":"    private static final boolean IS_EXIT \u003d false;","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"     * Displays the list of commands for the bot.","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"     * @param task The TaskList associated with the current bot.","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"     * @param userInt The User Interface associated with the current bot.","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"     * @param storage The storage associated with the current bot.","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":"     * @return The string to be printed to the GUI.","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"boonhaii"},"content":"     * @throws DukeException If any error has occurred during the addition of the task.","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"boonhaii"},"content":"    public String execute(TaskList task, Ui userInt, Storage storage) {","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"boonhaii"},"content":"        return userInt.displayHelp();","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"boonhaii"},"content":"     * Gets the task associated with the command.","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"boonhaii"},"content":"     * @return null, as no task is associated with a help command.","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"boonhaii"},"content":"    public Task getTask() {","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"boonhaii"},"content":"        return null;","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"boonhaii"},"content":"     * Returns a boolean determining whether the input should exit the bot.","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"boonhaii"},"content":"     * @return If the command exits the bot.","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"boonhaii"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"boonhaii"},"content":"        return this.IS_EXIT;","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"boonhaii":45}},{"path":"src/main/java/duke/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"package duke.command;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":"    private static final boolean IS_EXIT \u003d false;","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"     * Public constructor of the InvalidCommand object.","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"    public InvalidCommand() {}","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":"     * Removes the task in the respective component of the bot.","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"boonhaii"},"content":"     * @param tasks The TaskList associated with the current bot.","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"boonhaii"},"content":"     * @param userInt The User Interface associated with the current bot.","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"boonhaii"},"content":"     * @param storage The storage associated with the current bot.","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"boonhaii"},"content":"     * @return The string to be printed to the GUI.","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"boonhaii"},"content":"     * @throws DukeException If any error has occurred during the addition of the task.","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"boonhaii"},"content":"    public String execute(TaskList tasks, Ui userInt, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"boonhaii"},"content":"        throw new DukeException(\"I don\u0027t get what you mean? Try again!\");","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"boonhaii"},"content":"     * Gets the task associated with the command.","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"boonhaii"},"content":"     * @return null, as no task is associated with the command.","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"boonhaii"},"content":"    public Task getTask() {","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"boonhaii"},"content":"        return null;","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"boonhaii"},"content":"     * Returns a boolean determining whether the input should exit the bot.","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"boonhaii"},"content":"     * @return If the command exits the bot.","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"boonhaii"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-11"},{"lineNumber":48,"author":{"gitId":"boonhaii"},"content":"        return this.IS_EXIT;","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"boonhaii":50}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":" * ListCommand class which displays the current tasks in the list.","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"    private static final boolean IS_EXIT \u003d false;","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":"     * Gets the user interface to display all the current tasks in the active","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"boonhaii"},"content":"     * ArrayList.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"boonhaii"},"content":"     * @param tasks The TaskList associated with the current bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"boonhaii"},"content":"     * @param userInt The User Interface associated with the current bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"boonhaii"},"content":"     * @param storage The storage associated with the current bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"boonhaii"},"content":"     * @return The string to be printed to the GUI.","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"boonhaii"},"content":"     * @throws DukeException If any error has occurred during the addition of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"boonhaii"},"content":"    public String execute(TaskList tasks, Ui userInt, Storage storage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"boonhaii"},"content":"        ArrayList\u003cTask\u003e taskArrList \u003d tasks.getAllTasks();","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"boonhaii"},"content":"        return userInt.notifyList(taskArrList);","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"boonhaii"},"content":"     * Gets the task associated with the command.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"boonhaii"},"content":"     * @return null, as no task is associated with the list command.","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"boonhaii"},"content":"    public Task getTask() {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"boonhaii"},"content":"        return null;","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"boonhaii"},"content":"     * Returns a boolean determining whether the input should exit the bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"boonhaii"},"content":"     * @return If the command exits the bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"boonhaii"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"boonhaii"},"content":"        return this.IS_EXIT;","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"boonhaii":52}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":" * Main exception class for the bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"     * Public constructor for the exception which is handled by the bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":"     * @param message The error message to accompany the error thrown.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"        super(message);","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"boonhaii":16}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"package duke.gui;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"boonhaii"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"boonhaii"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"boonhaii"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"boonhaii"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"boonhaii"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"boonhaii"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"boonhaii"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"boonhaii"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"boonhaii"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"boonhaii"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"boonhaii"},"content":"    private DialogBox(String text, Image img, String person) {","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"boonhaii"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"boonhaii"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"boonhaii"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"boonhaii"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"boonhaii"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"boonhaii"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"boonhaii"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"boonhaii"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"boonhaii"},"content":"        dialog.setMinSize(30, Double.parseDouble(\"-Infinity\"));","lastModifiedDate":"2021-09-12"},{"lineNumber":44,"author":{"gitId":"boonhaii"},"content":"        dialog.setFont(new Font(\"Helvetica Neue\", 13));","lastModifiedDate":"2021-09-12"},{"lineNumber":45,"author":{"gitId":"boonhaii"},"content":"        if (person.equals(\"Duke\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"boonhaii"},"content":"            dialog.setStyle(\"-fx-background-color:#f3f3f3;\"","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"boonhaii"},"content":"                    + \"-fx-background-radius: 0 15 15 15;\"","lastModifiedDate":"2021-09-11"},{"lineNumber":48,"author":{"gitId":"boonhaii"},"content":"                    + \"-fx-label-padding: 5 5 5 5;\"","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"boonhaii"},"content":"                    + \"-fx-effect:dropshadow(gaussian, #949494, 10, 0.0, 0, 0)\");","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"boonhaii"},"content":"        } else {","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"boonhaii"},"content":"            dialog.setStyle(\"-fx-background-color:#a9dfbf; \"","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"boonhaii"},"content":"                    + \"-fx-background-radius: 15 0 15 15; \"","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"boonhaii"},"content":"                    + \"-fx-label-padding: 5 5 5 5;\"","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"boonhaii"},"content":"                    + \"-fx-effect:dropshadow(gaussian, #949494, 10, 0.0, 0, 0)\");","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"boonhaii"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"boonhaii"},"content":"        displayPicture.setFitHeight(40);","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"boonhaii"},"content":"        displayPicture.setFitWidth(40);","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"boonhaii"},"content":"        displayPicture.setClip(new Circle(20, 20, 20));","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"boonhaii"},"content":"    /**![](../../../resources/images/user.png)","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"boonhaii"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"boonhaii"},"content":"    private void flip() {","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"boonhaii"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"boonhaii"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"boonhaii"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"boonhaii"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"boonhaii"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"boonhaii"},"content":"        DialogBox user \u003d new DialogBox(text, img, \"User\");","lastModifiedDate":"2021-09-07"},{"lineNumber":74,"author":{"gitId":"boonhaii"},"content":"        return user;","lastModifiedDate":"2021-09-07"},{"lineNumber":75,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":77,"author":{"gitId":"boonhaii"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"boonhaii"},"content":"        var db \u003d new DialogBox(text, img, \"Duke\");","lastModifiedDate":"2021-09-07"},{"lineNumber":79,"author":{"gitId":"boonhaii"},"content":"        db.flip();","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"boonhaii"},"content":"        return db;","lastModifiedDate":"2021-08-31"},{"lineNumber":81,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":82,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"boonhaii":82}},{"path":"src/main/java/duke/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"package duke.gui;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"public class Launcher {","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"boonhaii":12}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"package duke.gui;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"boonhaii"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"boonhaii"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"boonhaii"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"boonhaii"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"boonhaii"},"content":"            stage.setTitle(\"Duii\");","lastModifiedDate":"2021-09-12"},{"lineNumber":24,"author":{"gitId":"boonhaii"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(new Duke());","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"boonhaii"},"content":"            stage.show();","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"boonhaii"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"boonhaii"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"boonhaii":30}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"package duke.gui;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"import java.util.Timer;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"import java.util.TimerTask;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"boonhaii"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"boonhaii"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"boonhaii"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"boonhaii"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"boonhaii"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"boonhaii"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"boonhaii"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"boonhaii"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"boonhaii"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"boonhaii"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"boonhaii"},"content":"    private Duke bot;","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"boonhaii"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.jpeg\"));","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"boonhaii"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/bot.jpeg\"));","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"boonhaii"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"boonhaii"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"boonhaii"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"boonhaii"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"boonhaii"},"content":"        bot \u003d d;","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"boonhaii"},"content":"        start();","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"boonhaii"},"content":"     * Starts up the Main Window of the GUI.","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"boonhaii"},"content":"    public void start() {","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"boonhaii"},"content":"        sendButton.setStyle(\"-fx-background-color: #52be80; -fx-background-radius:80\");","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"boonhaii"},"content":"        Ui userInterface \u003d bot.getUi();","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"boonhaii"},"content":"        String greetings \u003d userInterface.greet(bot.getTasks());","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"boonhaii"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"boonhaii"},"content":"                DialogBox.getDukeDialog(greetings, dukeImage));","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"boonhaii"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"boonhaii"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"boonhaii"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"boonhaii"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"boonhaii"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"boonhaii"},"content":"        String response \u003d bot.getResponse(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"boonhaii"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"boonhaii"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"boonhaii"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"boonhaii"},"content":"        );","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"boonhaii"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":71,"author":{"gitId":"boonhaii"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":72,"author":{"gitId":"boonhaii"},"content":"            new Timer().schedule(","lastModifiedDate":"2021-09-07"},{"lineNumber":73,"author":{"gitId":"boonhaii"},"content":"                    new TimerTask() {","lastModifiedDate":"2021-09-07"},{"lineNumber":74,"author":{"gitId":"boonhaii"},"content":"                        public void run() {","lastModifiedDate":"2021-09-07"},{"lineNumber":75,"author":{"gitId":"boonhaii"},"content":"                            Platform.exit();","lastModifiedDate":"2021-09-07"},{"lineNumber":76,"author":{"gitId":"boonhaii"},"content":"                            System.exit(0); }","lastModifiedDate":"2021-09-07"},{"lineNumber":77,"author":{"gitId":"boonhaii"},"content":"                    }, 3000);","lastModifiedDate":"2021-09-07"},{"lineNumber":78,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":79,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"boonhaii":80}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":" * Tasks which have a due date","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":"    private LocalDateTime by;","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"     * Public constructor which creates a new Deadline object with a due date.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"     * @param taskName The description of the Deadline","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"     * @param by The due date of the Deadline","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"boonhaii"},"content":"    public Deadline(String taskName, LocalDateTime by) {","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"boonhaii"},"content":"        super(taskName);","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"boonhaii"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"boonhaii"},"content":"     * Gets the due date of the deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"boonhaii"},"content":"     * @return The string representation of the due date.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"boonhaii"},"content":"    public String getWhen() {","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"boonhaii"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"boonhaii"},"content":"        return dtf.format(by);","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"boonhaii"},"content":"     * Gets the string representation of the Deadline object.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"boonhaii"},"content":"     * @return The string representation of the deadline object.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"boonhaii"},"content":"    public String displayInfo() {","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"boonhaii"},"content":"        return String.format(\"[D] [%s] %s (by: %s)\", this.getStatus(), this.getTaskName(), this.getWhen());","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"boonhaii"},"content":"     * Gets the string representation of the Deadline object,","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"boonhaii"},"content":"     * used for writing into the local file system.","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"boonhaii"},"content":"     * @return The string representation of the deadline object,","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"boonhaii"},"content":"     *          used for writing into the local file system.","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"boonhaii"},"content":"    public String getSaveInfo() {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"boonhaii"},"content":"        if (this.isDone()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"boonhaii"},"content":"            return String.format(\"D | 1 | %s | %s | %s\", this.getTaskName(), this.getWhen(), super.getTagsInString());","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"boonhaii"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"boonhaii"},"content":"            return String.format(\"D | 0 | %s | %s | %s\", this.getTaskName(), this.getWhen(), super.getTagsInString());","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"boonhaii":59}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":" * Tasks which occur during a certain time","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":"    private LocalDateTime at;","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"     * Public constructor which creates a new Event object with a due date.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"     * @param taskName The description of the Event.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"     * @param at The start time of the Event.","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"boonhaii"},"content":"    public Event(String taskName, LocalDateTime at) {","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"boonhaii"},"content":"        super(taskName);","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"boonhaii"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"boonhaii"},"content":"     * Gets the start time of the Event.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"boonhaii"},"content":"     * @return The string representation of the time of event.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"boonhaii"},"content":"    public String getWhen() {","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"boonhaii"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"boonhaii"},"content":"        return dtf.format(at);","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"boonhaii"},"content":"     * Gets the string representation of the Event object.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"boonhaii"},"content":"     * @return The string representation of the Event object.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"boonhaii"},"content":"    public String displayInfo() {","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"boonhaii"},"content":"        return String.format(\"[E] [%s] %s (at: %s)\", this.getStatus(), this.getTaskName(), this.getWhen());","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"boonhaii"},"content":"     * Gets the string representation of the Event object,","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"boonhaii"},"content":"     * used for writing into the local file system.","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"boonhaii"},"content":"     * @return The string representation of the event object,","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"boonhaii"},"content":"     *          used for writing into the local file system.","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"boonhaii"},"content":"    public String getSaveInfo() {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"boonhaii"},"content":"        if (this.isDone()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"boonhaii"},"content":"            return String.format(\"E | 1 | %s | %s | %s\", this.getTaskName(), this.getWhen(), this.getTagsInString());","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"boonhaii"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"boonhaii"},"content":"            return String.format(\"E | 0 | %s | %s | %s\", this.getTaskName(), this.getWhen(), this.getTagsInString());","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"boonhaii":59}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":" * General tasks to be completed by the user with no time property.","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"public class Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":"    private String taskName;","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":"    private String duration;","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":"    private ArrayList\u003cString\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"     * Public constructor which creates a new Task object.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"     * @param taskName The description of the Event.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"boonhaii"},"content":"    public Task(String taskName) {","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"boonhaii"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"boonhaii"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"boonhaii"},"content":"     * Public constructor which creates a new Task object with specified duration.","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"boonhaii"},"content":"     * @param taskName The description of the Event.","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"boonhaii"},"content":"     * @param duration The time allocated by the user for the task.","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"boonhaii"},"content":"    public Task(String taskName, String duration) {","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"boonhaii"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"boonhaii"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"boonhaii"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"boonhaii"},"content":"     * Public constructor which creates a new Task object that has","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"boonhaii"},"content":"     * been done.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"boonhaii"},"content":"     * Used for creation of tasks which may have been completed in","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"boonhaii"},"content":"     * the previous session but not deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"boonhaii"},"content":"     * @param taskName The description of the Event.","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"boonhaii"},"content":"     * @param isDone Whether the task has been completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"boonhaii"},"content":"    public Task(String taskName, boolean isDone) {","lastModifiedDate":"2021-08-15"},{"lineNumber":46,"author":{"gitId":"boonhaii"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"boonhaii"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"boonhaii"},"content":"     * Gets the string representation of the completion status of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"boonhaii"},"content":"     * @return The string representation of the status, \"X\" for completed and \" \"","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"boonhaii"},"content":"     *          for incomplete.","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"boonhaii"},"content":"    public String getStatus() {","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"boonhaii"},"content":"        return this.isDone ? \"X\" : \" \";","lastModifiedDate":"2021-08-15"},{"lineNumber":58,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":59,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":60,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"boonhaii"},"content":"     * Marks the task as completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"boonhaii"},"content":"    public void complete() {","lastModifiedDate":"2021-08-15"},{"lineNumber":64,"author":{"gitId":"boonhaii"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-15"},{"lineNumber":65,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":66,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":67,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"boonhaii"},"content":"     * Gets the description of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"boonhaii"},"content":"     * @return Description of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"boonhaii"},"content":"    public String getTaskName() {","lastModifiedDate":"2021-08-16"},{"lineNumber":73,"author":{"gitId":"boonhaii"},"content":"        if (this.duration \u003d\u003d null) {","lastModifiedDate":"2021-09-06"},{"lineNumber":74,"author":{"gitId":"boonhaii"},"content":"            return this.taskName;","lastModifiedDate":"2021-08-15"},{"lineNumber":75,"author":{"gitId":"boonhaii"},"content":"        } else {","lastModifiedDate":"2021-09-06"},{"lineNumber":76,"author":{"gitId":"boonhaii"},"content":"            return this.taskName + \" (needs \" + this.duration + \")\";","lastModifiedDate":"2021-09-06"},{"lineNumber":77,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":78,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":79,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":80,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"boonhaii"},"content":"     * Gets the completion status of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"boonhaii"},"content":"     * @return Whether a task has been completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"boonhaii"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"boonhaii"},"content":"        return this.isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"boonhaii"},"content":"     * Gets the string representation of the Task object.","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"boonhaii"},"content":"     * @return The string representation of the Task object.","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"boonhaii"},"content":"    public String displayInfo() {","lastModifiedDate":"2021-08-16"},{"lineNumber":95,"author":{"gitId":"boonhaii"},"content":"        return String.format(\"[T] [%s] %s\", this.getStatus(), this.getTaskName());","lastModifiedDate":"2021-08-16"},{"lineNumber":96,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":97,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"boonhaii"},"content":"     * Gets the string representation of the Task object,","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"boonhaii"},"content":"     * used for writing into the local file system.","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"boonhaii"},"content":"     * @return The string representation of the task object,","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"boonhaii"},"content":"     *          used for writing into the local file system.","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"boonhaii"},"content":"    public String getSaveInfo() {","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"boonhaii"},"content":"        if (this.isDone()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"boonhaii"},"content":"            return String.format(\"T | 1 | %s | %s\", this.getTaskName(), this.getTagsInString());","lastModifiedDate":"2021-09-11"},{"lineNumber":108,"author":{"gitId":"boonhaii"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"boonhaii"},"content":"            return String.format(\"T | 0 | %s | %s\", this.getTaskName(), this.getTagsInString());","lastModifiedDate":"2021-09-11"},{"lineNumber":110,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":114,"author":{"gitId":"boonhaii"},"content":"     * Tags a keyword to the task.","lastModifiedDate":"2021-09-06"},{"lineNumber":115,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":116,"author":{"gitId":"boonhaii"},"content":"    public void addTag(String keyword) {","lastModifiedDate":"2021-09-11"},{"lineNumber":117,"author":{"gitId":"boonhaii"},"content":"        this.tags.add(keyword.toLowerCase());","lastModifiedDate":"2021-09-06"},{"lineNumber":118,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":119,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":120,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":121,"author":{"gitId":"boonhaii"},"content":"     * Removes a tag with a keyword from the task.","lastModifiedDate":"2021-09-11"},{"lineNumber":122,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":123,"author":{"gitId":"boonhaii"},"content":"    public void removeTag(String keyword) {","lastModifiedDate":"2021-09-11"},{"lineNumber":124,"author":{"gitId":"boonhaii"},"content":"        String savedTag \u003d keyword.toLowerCase();","lastModifiedDate":"2021-09-11"},{"lineNumber":125,"author":{"gitId":"boonhaii"},"content":"        if (this.tags.contains(savedTag)) {","lastModifiedDate":"2021-09-11"},{"lineNumber":126,"author":{"gitId":"boonhaii"},"content":"            this.tags.remove(savedTag);","lastModifiedDate":"2021-09-11"},{"lineNumber":127,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":128,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":129,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":130,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":131,"author":{"gitId":"boonhaii"},"content":"     * Checks if a given tag is present in the tasks tags.","lastModifiedDate":"2021-09-06"},{"lineNumber":132,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":133,"author":{"gitId":"boonhaii"},"content":"     * @return If a given keyword is a tag for the task.","lastModifiedDate":"2021-09-11"},{"lineNumber":134,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":135,"author":{"gitId":"boonhaii"},"content":"    public boolean hasGivenTag(String keyword) {","lastModifiedDate":"2021-09-06"},{"lineNumber":136,"author":{"gitId":"boonhaii"},"content":"        for (int i \u003d 0; i \u003c tags.size(); i++) {","lastModifiedDate":"2021-09-06"},{"lineNumber":137,"author":{"gitId":"boonhaii"},"content":"            if (tags.get(i).equals(keyword)) {","lastModifiedDate":"2021-09-06"},{"lineNumber":138,"author":{"gitId":"boonhaii"},"content":"                return true;","lastModifiedDate":"2021-09-06"},{"lineNumber":139,"author":{"gitId":"boonhaii"},"content":"            }","lastModifiedDate":"2021-09-06"},{"lineNumber":140,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":141,"author":{"gitId":"boonhaii"},"content":"        return false;","lastModifiedDate":"2021-09-06"},{"lineNumber":142,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":143,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":144,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":145,"author":{"gitId":"boonhaii"},"content":"     * Get string combination of all tags relevant to a task.","lastModifiedDate":"2021-09-06"},{"lineNumber":146,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":147,"author":{"gitId":"boonhaii"},"content":"    public String getTagsInString() {","lastModifiedDate":"2021-09-11"},{"lineNumber":148,"author":{"gitId":"boonhaii"},"content":"        String stringTags \u003d \"\";","lastModifiedDate":"2021-09-06"},{"lineNumber":149,"author":{"gitId":"boonhaii"},"content":"        if (this.tags.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-06"},{"lineNumber":150,"author":{"gitId":"boonhaii"},"content":"            return \"#\";","lastModifiedDate":"2021-09-06"},{"lineNumber":151,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":152,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":153,"author":{"gitId":"boonhaii"},"content":"        for (int i \u003d 0; i \u003c tags.size(); i++) {","lastModifiedDate":"2021-09-06"},{"lineNumber":154,"author":{"gitId":"boonhaii"},"content":"            stringTags +\u003d \"#\" + tags.get(i);","lastModifiedDate":"2021-09-06"},{"lineNumber":155,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":156,"author":{"gitId":"boonhaii"},"content":"        return stringTags;","lastModifiedDate":"2021-09-06"},{"lineNumber":157,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":158,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"boonhaii":158}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" minHeight\u003d\"-Infinity\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"text\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"75.0\" fitWidth\u003d\"75.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"boonhaii":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"40.0\" prefWidth\u003d\"355.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"        \u003cfx:define\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"            \u003cImage fx:id\u003d\"btnImage\" url\u003d\"/images/send.png\"/\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"        \u003c/fx:define\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"355.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"40.0\" prefWidth\u003d\"40.0\"\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":"        \u003cgraphic\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"boonhaii"},"content":"            \u003cImageView image\u003d\"$btnImage\" fitHeight\u003d\"25\" fitWidth\u003d\"25\" /\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"boonhaii"},"content":"        \u003c/graphic\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"boonhaii"},"content":"        \u003c/Button\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"boonhaii"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"boonhaii"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"boonhaii"},"content":"                \u003cVBox style\u003d\"-fx-background-color:#d7f5ff\"  fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"boonhaii"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"boonhaii"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"boonhaii"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"boonhaii"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"boonhaii":28}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":"    public void parseCompletetoDo() {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":"        assertEquals(Parser.parse(\"todo borrow book\").getTask().getTaskName(),","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"                 \"borrow book\");","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"    public void parseIncompletetoDo() {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"boonhaii"},"content":"            Parser.parse(\"todo\");","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"boonhaii"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"boonhaii"},"content":"            assertEquals(e.getMessage(), \"Input in the format: todo *description*\");","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"boonhaii"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"boonhaii"},"content":"    public void parseIncompleteEvent() {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"boonhaii"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"boonhaii"},"content":"            Parser.parse(\"event zoom meeting\");","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"boonhaii"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"boonhaii"},"content":"            assertEquals(e.getMessage(),","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"boonhaii"},"content":"                    \"Input the following format: event *description* /at *DD/MM/YYYY* *24H-Time*\");","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"boonhaii"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"boonhaii"},"content":"    public void parseCompleteDeadline() {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"boonhaii"},"content":"        assertEquals(Parser.parse(\"deadline PL1101E project /by 20/04/2021 1200\".toLowerCase()).getTask().displayInfo(),","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"boonhaii"},"content":"                \"[D] [ ] pl1101e project (by: 20 Apr 2021 12:00)\");","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"boonhaii"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"boonhaii"},"content":"    public void parseCompleteDeadline_invalidDay() {","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"boonhaii"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"boonhaii"},"content":"            Parser.parse(\"deadline PL1101E project /by 33/04/2021 1200\");","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"boonhaii"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"boonhaii"},"content":"            assertEquals(e.getMessage(),","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"boonhaii"},"content":"                    \"Text \u002733/04/2021\u0027 could not be parsed: Invalid value for DayOfMonth (valid values 1 - 28/31): 33\");","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"boonhaii":51}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":"    public void createNewDeadline() {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"        assertEquals(new Deadline(\"pl1101e project\",","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"                LocalDateTime.of(2021, 04, 20, 12, 00)).displayInfo(),","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"                \"[D] [ ] pl1101e project (by: 20 Apr 2021 12:00)\");","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"boonhaii":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"yeehor","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"todo Borrow Book","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"deadline PL1101E project /by 20/04/2021 1200","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"deadline CS2101 project /by 20/04/2021 2500","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"deadline CS2101 project /by 33/04/2021 2100","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":"deadline CS2101 project  /by 30/13/2021 2100","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"deadline","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"event zoom meeting","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":"deadline go home","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":"event PL1101E project meeting /at 15/04/2021 1200","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":"event CS2103T project meeting /at 04/04/2021","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"event CS2101 project meeting /at 20/04/2021 2500","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"event CS2101 project meeting /at 33/04/2021 2100","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"event CS2101 project meeting /at 30/13/2021 2100","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"done 2","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"delete 2","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"boonhaii"},"content":"delete 1","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"boonhaii"},"content":"delete 5","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"boonhaii"},"content":"done 9","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"boonhaii"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"boonhaii"},"content":"done","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"boonhaii"},"content":"todo","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"boonhaii"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"boonhaii"},"content":"bye","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"boonhaii"},"content":"list","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"boonhaii"},"content":"delete 2","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"boonhaii"},"content":"delete 1","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"boonhaii"},"content":"bye","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"boonhaii"},"content":"bye","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"boonhaii":31}}]
