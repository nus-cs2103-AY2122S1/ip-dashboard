[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"    private String deadline;","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"    public Deadline(String taskName, String deadline) {","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"        super(taskName);","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":"    public String getWhen() {","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":"        return this.deadline;","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"    public String displayInfo() {","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"        return String.format(\"[D] [%s] %s (by: %s)\", this.getStatus(), this.getTaskName(), this.getWhen());","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"boonhaii":18}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"import java.util.Locale;","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"import java.util.regex.*;","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":"    private static String input \u003d \"\";","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"    private static ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"    private static int listLength \u003d 0;","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":"        String logo \u003d \" ____        _ _\\n\"","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"                    + \"|  _ \\\\ _   _(_|_)\\n\"","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"                    + \"| | | | | | | | |\\n\"","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"                    + \"| |_| | |_| | | |\\n\"","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"                    + \"|____/ \\\\__,_|_|_|\\n\";","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"        System.out.println(logo);","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":"        greet();","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"boonhaii"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"boonhaii"},"content":"        input \u003d sc.nextLine().toLowerCase();","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"boonhaii"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"boonhaii"},"content":"            try {","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"boonhaii"},"content":"                parseInput(input);","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"boonhaii"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"boonhaii"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"boonhaii"},"content":"                System.out.println();","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"boonhaii"},"content":"            } finally {","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"boonhaii"},"content":"                input \u003d sc.nextLine().toLowerCase();","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"boonhaii"},"content":"                continue;","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"boonhaii"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"boonhaii"},"content":"        exit();","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"boonhaii"},"content":"     * This method parses the input from the user.","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"boonhaii"},"content":"     * @param input The input inserted by the user.","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"boonhaii"},"content":"     * @throws DukeException This exception is thrown when the input is invalid.","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"boonhaii"},"content":"    public static void parseInput(String input) throws DukeException {","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"boonhaii"},"content":"        if (input.equals(\"list\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"boonhaii"},"content":"            list();","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"boonhaii"},"content":"        } else if (Pattern.matches(\"done.*\", input)) {","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"boonhaii"},"content":"            String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"boonhaii"},"content":"            if (inputArr.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"boonhaii"},"content":"                throw new DukeException(\"Indicate the id of the task which you have completed!\");","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"boonhaii"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"boonhaii"},"content":"            try {","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"boonhaii"},"content":"                markDone(Integer.parseInt(inputArr[1]));","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"boonhaii"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"boonhaii"},"content":"                throw new DukeException(e.getMessage());","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"boonhaii"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"boonhaii"},"content":"        } else if (Pattern.matches(\"delete.*\", input)) {","lastModifiedDate":"2021-08-16"},{"lineNumber":56,"author":{"gitId":"boonhaii"},"content":"            String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"boonhaii"},"content":"            if (inputArr.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-16"},{"lineNumber":58,"author":{"gitId":"boonhaii"},"content":"                throw new DukeException(\"Indicate the id of the task which you want to remove!\");","lastModifiedDate":"2021-08-16"},{"lineNumber":59,"author":{"gitId":"boonhaii"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":60,"author":{"gitId":"boonhaii"},"content":"            try {","lastModifiedDate":"2021-08-16"},{"lineNumber":61,"author":{"gitId":"boonhaii"},"content":"                delete(Integer.parseInt(inputArr[1]));","lastModifiedDate":"2021-08-16"},{"lineNumber":62,"author":{"gitId":"boonhaii"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":63,"author":{"gitId":"boonhaii"},"content":"                throw new DukeException(e.getMessage());","lastModifiedDate":"2021-08-16"},{"lineNumber":64,"author":{"gitId":"boonhaii"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":65,"author":{"gitId":"boonhaii"},"content":"        } else if (Pattern.matches(\"event.*\", input)) {","lastModifiedDate":"2021-08-16"},{"lineNumber":66,"author":{"gitId":"boonhaii"},"content":"            String[] inputArr \u003d input.replaceFirst(\"event \",\"\").split(\"/at\");","lastModifiedDate":"2021-08-16"},{"lineNumber":67,"author":{"gitId":"boonhaii"},"content":"            if (inputArr.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-16"},{"lineNumber":68,"author":{"gitId":"boonhaii"},"content":"                throw new DukeException(\"Describe the event and indicate its time!\");","lastModifiedDate":"2021-08-16"},{"lineNumber":69,"author":{"gitId":"boonhaii"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":70,"author":{"gitId":"boonhaii"},"content":"            add(new Event(inputArr[0], inputArr[1]));","lastModifiedDate":"2021-08-16"},{"lineNumber":71,"author":{"gitId":"boonhaii"},"content":"        } else if (Pattern.matches(\"deadline.*\", input)) {","lastModifiedDate":"2021-08-16"},{"lineNumber":72,"author":{"gitId":"boonhaii"},"content":"            String[] inputArr \u003d input.replaceFirst(\"deadline \", \"\").split(\"/by\");","lastModifiedDate":"2021-08-16"},{"lineNumber":73,"author":{"gitId":"boonhaii"},"content":"            if (inputArr.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-16"},{"lineNumber":74,"author":{"gitId":"boonhaii"},"content":"                throw new DukeException(\"Describe the activity and its deadline!\");","lastModifiedDate":"2021-08-16"},{"lineNumber":75,"author":{"gitId":"boonhaii"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":76,"author":{"gitId":"boonhaii"},"content":"            add(new Deadline(inputArr[0], inputArr[1]));","lastModifiedDate":"2021-08-16"},{"lineNumber":77,"author":{"gitId":"boonhaii"},"content":"        } else if (Pattern.matches(\"todo.*\", input)) {","lastModifiedDate":"2021-08-16"},{"lineNumber":78,"author":{"gitId":"boonhaii"},"content":"            String inputArr \u003d input.replaceFirst(\"todo\", \"\");","lastModifiedDate":"2021-08-16"},{"lineNumber":79,"author":{"gitId":"boonhaii"},"content":"            if (inputArr.equals(\"\")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":80,"author":{"gitId":"boonhaii"},"content":"                throw new DukeException(\"Describe the activity!\");","lastModifiedDate":"2021-08-16"},{"lineNumber":81,"author":{"gitId":"boonhaii"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":82,"author":{"gitId":"boonhaii"},"content":"            add(new Task(inputArr.strip()));","lastModifiedDate":"2021-08-16"},{"lineNumber":83,"author":{"gitId":"boonhaii"},"content":"        } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":84,"author":{"gitId":"boonhaii"},"content":"            throw new DukeException(\"I don\u0027t get what you mean? Try Again!\");","lastModifiedDate":"2021-08-16"},{"lineNumber":85,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":86,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":87,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":88,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":89,"author":{"gitId":"boonhaii"},"content":"     * This method prints the greetings to the user\u0027s terminal.","lastModifiedDate":"2021-08-15"},{"lineNumber":90,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":91,"author":{"gitId":"boonhaii"},"content":"    public static void greet() {","lastModifiedDate":"2021-08-14"},{"lineNumber":92,"author":{"gitId":"boonhaii"},"content":"        System.out.println(\"Hello! I\u0027m Duii, your personal assistant!\");","lastModifiedDate":"2021-08-15"},{"lineNumber":93,"author":{"gitId":"boonhaii"},"content":"        System.out.println(\"What do you need help with?\");","lastModifiedDate":"2021-08-15"},{"lineNumber":94,"author":{"gitId":"boonhaii"},"content":"        System.out.println();","lastModifiedDate":"2021-08-16"},{"lineNumber":95,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":96,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":97,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":98,"author":{"gitId":"boonhaii"},"content":"     * This method adds the input task into the list.","lastModifiedDate":"2021-08-15"},{"lineNumber":99,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":100,"author":{"gitId":"boonhaii"},"content":"     * @param task The task to be added to the list.","lastModifiedDate":"2021-08-15"},{"lineNumber":101,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":102,"author":{"gitId":"boonhaii"},"content":"    public static void add(Task task) throws DukeException {","lastModifiedDate":"2021-08-16"},{"lineNumber":103,"author":{"gitId":"boonhaii"},"content":"        list.add(task);","lastModifiedDate":"2021-08-16"},{"lineNumber":104,"author":{"gitId":"boonhaii"},"content":"        System.out.println(\"New Task? I\u0027ve added it to the list:\");","lastModifiedDate":"2021-08-16"},{"lineNumber":105,"author":{"gitId":"boonhaii"},"content":"        System.out.println(task.displayInfo());","lastModifiedDate":"2021-08-16"},{"lineNumber":106,"author":{"gitId":"boonhaii"},"content":"        listLength++;","lastModifiedDate":"2021-08-15"},{"lineNumber":107,"author":{"gitId":"boonhaii"},"content":"        System.out.println(String.format(\"Now you have %d task(s) in the list.\", listLength));","lastModifiedDate":"2021-08-16"},{"lineNumber":108,"author":{"gitId":"boonhaii"},"content":"        System.out.println();","lastModifiedDate":"2021-08-16"},{"lineNumber":109,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":110,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":111,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":112,"author":{"gitId":"boonhaii"},"content":"     * This method marks a specific task as completed.","lastModifiedDate":"2021-08-16"},{"lineNumber":113,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":114,"author":{"gitId":"boonhaii"},"content":"     * @param id The id of the task as per display with the list() method.","lastModifiedDate":"2021-08-16"},{"lineNumber":115,"author":{"gitId":"boonhaii"},"content":"     * @throws DukeException This error is thrown if the id specified is invalid.","lastModifiedDate":"2021-08-16"},{"lineNumber":116,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":117,"author":{"gitId":"boonhaii"},"content":"    public static void markDone(int id) throws DukeException{","lastModifiedDate":"2021-08-16"},{"lineNumber":118,"author":{"gitId":"boonhaii"},"content":"        if (id - 1 \u003e listLength) {","lastModifiedDate":"2021-08-16"},{"lineNumber":119,"author":{"gitId":"boonhaii"},"content":"            throw new DukeException(\"The id you entered was invalid!\");","lastModifiedDate":"2021-08-16"},{"lineNumber":120,"author":{"gitId":"boonhaii"},"content":"        } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":121,"author":{"gitId":"boonhaii"},"content":"            System.out.println(\"You\u0027ve finished the task? Good job!\");","lastModifiedDate":"2021-08-15"},{"lineNumber":122,"author":{"gitId":"boonhaii"},"content":"            System.out.println(\"This task has been marked as done:\");","lastModifiedDate":"2021-08-15"},{"lineNumber":123,"author":{"gitId":"boonhaii"},"content":"            list.get(id - 1).complete();","lastModifiedDate":"2021-08-16"},{"lineNumber":124,"author":{"gitId":"boonhaii"},"content":"            System.out.println(list.get(id - 1).displayInfo());","lastModifiedDate":"2021-08-16"},{"lineNumber":125,"author":{"gitId":"boonhaii"},"content":"            System.out.println();","lastModifiedDate":"2021-08-16"},{"lineNumber":126,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":127,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":128,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":129,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":130,"author":{"gitId":"boonhaii"},"content":"     * This method deletes specific task from the list.","lastModifiedDate":"2021-08-16"},{"lineNumber":131,"author":{"gitId":"boonhaii"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":132,"author":{"gitId":"boonhaii"},"content":"     * @param id The id of the task as per display with the list() method.","lastModifiedDate":"2021-08-16"},{"lineNumber":133,"author":{"gitId":"boonhaii"},"content":"     * @throws DukeException This error is thrown if the id specified is invalid.","lastModifiedDate":"2021-08-16"},{"lineNumber":134,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":135,"author":{"gitId":"boonhaii"},"content":"    public static void delete(int id) throws DukeException {","lastModifiedDate":"2021-08-16"},{"lineNumber":136,"author":{"gitId":"boonhaii"},"content":"        if (id - 1 \u003e listLength) {","lastModifiedDate":"2021-08-16"},{"lineNumber":137,"author":{"gitId":"boonhaii"},"content":"            throw new DukeException(\"The id you entered was invalid!\");","lastModifiedDate":"2021-08-16"},{"lineNumber":138,"author":{"gitId":"boonhaii"},"content":"        } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":139,"author":{"gitId":"boonhaii"},"content":"            System.out.println(\"Okay! Removing the task:\");","lastModifiedDate":"2021-08-16"},{"lineNumber":140,"author":{"gitId":"boonhaii"},"content":"            Task removed \u003d list.remove(id - 1);","lastModifiedDate":"2021-08-16"},{"lineNumber":141,"author":{"gitId":"boonhaii"},"content":"            System.out.println(removed.displayInfo());","lastModifiedDate":"2021-08-16"},{"lineNumber":142,"author":{"gitId":"boonhaii"},"content":"            listLength--;","lastModifiedDate":"2021-08-16"},{"lineNumber":143,"author":{"gitId":"boonhaii"},"content":"            System.out.println();","lastModifiedDate":"2021-08-16"},{"lineNumber":144,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":145,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":146,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":147,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":148,"author":{"gitId":"boonhaii"},"content":"     * This method enumerates all the tasks in the list.","lastModifiedDate":"2021-08-15"},{"lineNumber":149,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":150,"author":{"gitId":"boonhaii"},"content":"    public static void list() {","lastModifiedDate":"2021-08-15"},{"lineNumber":151,"author":{"gitId":"boonhaii"},"content":"        System.out.println(\"Here\u0027s your current list:\");","lastModifiedDate":"2021-08-15"},{"lineNumber":152,"author":{"gitId":"boonhaii"},"content":"        for (int i \u003d 0; i \u003c listLength; i++) {","lastModifiedDate":"2021-08-15"},{"lineNumber":153,"author":{"gitId":"boonhaii"},"content":"            System.out.println(String.format(\"%d. %s\", i + 1, list.get(i).displayInfo()));","lastModifiedDate":"2021-08-16"},{"lineNumber":154,"author":{"gitId":"boonhaii"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":155,"author":{"gitId":"boonhaii"},"content":"        System.out.println();","lastModifiedDate":"2021-08-16"},{"lineNumber":156,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":157,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":158,"author":{"gitId":"boonhaii"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":159,"author":{"gitId":"boonhaii"},"content":"     * This method prints the exit message to the user\u0027s terminal.","lastModifiedDate":"2021-08-15"},{"lineNumber":160,"author":{"gitId":"boonhaii"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":161,"author":{"gitId":"boonhaii"},"content":"    public static void exit() {","lastModifiedDate":"2021-08-14"},{"lineNumber":162,"author":{"gitId":"boonhaii"},"content":"        System.out.println(\"You\u0027re going already? Hope to see you again soon!\");","lastModifiedDate":"2021-08-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"boonhaii":160,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"public class DukeException extends RuntimeException{","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"        super(message);","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"boonhaii":6}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"    private String duration;","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"    public Event(String taskName, String duration) {","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"        super(taskName);","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":"    public String getWhen() {","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":"        return this.duration;","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"    public String displayInfo() {","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"        return String.format(\"[E] [%s] %s (at: %s)\", this.getStatus(), this.getTaskName(), this.getWhen());","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"boonhaii":18}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"public class Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"    private String taskName;","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"    public Task(String taskName) {","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":"    public Task(String taskName, boolean isDone) {","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"    public String getStatus() {","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"        return this.isDone ? \"X\" : \" \";","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"boonhaii"},"content":"    public void complete() {","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"boonhaii"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"boonhaii"},"content":"    public String getType() {","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"boonhaii"},"content":"        return \"T\";","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"boonhaii"},"content":"    public String getTaskName() {","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"boonhaii"},"content":"        return this.taskName;","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"boonhaii"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"boonhaii"},"content":"    public String displayInfo() {","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"boonhaii"},"content":"        return String.format(\"[T] [%s] %s\", this.getStatus(), this.getTaskName());","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"boonhaii"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"boonhaii"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"boonhaii":34}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"boonhaii"},"content":"yeehor","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"boonhaii"},"content":"todo Borrow Book","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"boonhaii"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"boonhaii"},"content":"deadline return book /by 2pm","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"boonhaii"},"content":"deadline","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"boonhaii"},"content":"event zoom meeting","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"boonhaii"},"content":"deadline go home","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"boonhaii"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"boonhaii"},"content":"done 2","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"boonhaii"},"content":"delete 2","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"boonhaii"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"boonhaii"},"content":"delete 1","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"boonhaii"},"content":"delete 5","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"boonhaii"},"content":"done 9","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"boonhaii"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"boonhaii"},"content":"done","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"boonhaii"},"content":"todo","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"boonhaii"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"boonhaii"},"content":"bye","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"boonhaii":19}}]
