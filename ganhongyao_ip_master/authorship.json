[{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ganhongyao"},"content":"public enum Command {","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"ganhongyao"},"content":"    LIST {","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"ganhongyao"},"content":"        @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"ganhongyao"},"content":"        public void validateArguments(String arguments) {}","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"ganhongyao"},"content":"    },","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"ganhongyao"},"content":"    TODO {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"ganhongyao"},"content":"        @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"ganhongyao"},"content":"        public void validateArguments(String arguments) throws DukeException {","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"ganhongyao"},"content":"            if (arguments.isEmpty()) {","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"ganhongyao"},"content":"                throw new DukeException(\"Invalid use of the \u0027todo\u0027 command.\\n\\nTo add a new todo, use \u0027todo \u003cname\u003e\u0027.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"ganhongyao"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"ganhongyao"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"ganhongyao"},"content":"    },","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"ganhongyao"},"content":"    DEADLINE {","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"ganhongyao"},"content":"        @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"ganhongyao"},"content":"        public void validateArguments(String arguments) throws DukeException {","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"ganhongyao"},"content":"            String[] deadlineDetails \u003d arguments.split(\"\\\\s+/by\\\\s+\", 2);","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"ganhongyao"},"content":"            if (deadlineDetails.length \u003c 2) {","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"ganhongyao"},"content":"                throw new DukeException(\"Invalid use of the \u0027deadline\u0027 command.\\n\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"ganhongyao"},"content":"                        \"To add a new deadline, use \u0027deadline \u003cname\u003e /by \u003cdue-date\u003e\u0027.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"ganhongyao"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"ganhongyao"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"ganhongyao"},"content":"    },","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"ganhongyao"},"content":"    EVENT {","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"ganhongyao"},"content":"        @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"ganhongyao"},"content":"        public void validateArguments(String arguments) throws DukeException {","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"ganhongyao"},"content":"            String[] eventDetails \u003d arguments.split(\"\\\\s+/at\\\\s+\", 2);","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"ganhongyao"},"content":"            if (eventDetails.length \u003c 2) {","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"ganhongyao"},"content":"                throw new DukeException(\"Invalid use of the \u0027event\u0027 command.\\n\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"ganhongyao"},"content":"                        \"To add a new event, use \u0027event \u003cname\u003e /at \u003cevent-timestamp\u003e\u0027.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"ganhongyao"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"ganhongyao"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"ganhongyao"},"content":"    },","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"ganhongyao"},"content":"    DONE {","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"ganhongyao"},"content":"        @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"ganhongyao"},"content":"        public void validateArguments(String arguments) throws DukeException {","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"ganhongyao"},"content":"            if (arguments.isEmpty()) {","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"ganhongyao"},"content":"                throw new DukeException(\"Invalid use of the \u0027done\u0027 command.\\n\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"ganhongyao"},"content":"                        \"To mark a task as done, use \u0027done \u003ctask-number\u003e\u0027.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"ganhongyao"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"ganhongyao"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"ganhongyao"},"content":"    },","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"ganhongyao"},"content":"    DELETE {","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"ganhongyao"},"content":"        @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"ganhongyao"},"content":"        public void validateArguments(String arguments) throws DukeException {","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"ganhongyao"},"content":"            if (arguments.isEmpty()) {","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"ganhongyao"},"content":"                throw new DukeException(\"Invalid use of the \u0027delete\u0027 command.\\n\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"ganhongyao"},"content":"                        \"To delete a task, use \u0027delete \u003ctask-number\u003e\u0027.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"ganhongyao"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"ganhongyao"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"ganhongyao"},"content":"    },","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"ganhongyao"},"content":"    BYE {","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"ganhongyao"},"content":"        @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"ganhongyao"},"content":"        public void validateArguments(String arguments) {}","lastModifiedDate":"2021-08-17"},{"lineNumber":55,"author":{"gitId":"ganhongyao"},"content":"    };","lastModifiedDate":"2021-08-17"},{"lineNumber":56,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":57,"author":{"gitId":"ganhongyao"},"content":"    public abstract void validateArguments(String arguments) throws DukeException;","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"ganhongyao"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"ganhongyao":58}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ganhongyao"},"content":"public class Deadline extends Task implements Timestampable {","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ganhongyao"},"content":"    private final DukeDateTime dueDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"ganhongyao"},"content":"    public Deadline(String name, DukeDateTime dueDate) {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"ganhongyao"},"content":"        super(name);","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"ganhongyao"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"ganhongyao"},"content":"    public Deadline(String name, boolean isDone, DukeDateTime dueDate) {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"ganhongyao"},"content":"        super(name, isDone);","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"ganhongyao"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"ganhongyao"},"content":"    public static Deadline fromText(String text) throws DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"ganhongyao"},"content":"        String[] deadlineDetails \u003d text.split(\" \\\\| \", 4);","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"ganhongyao"},"content":"        if (deadlineDetails.length \u003c 4) {","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"ganhongyao"},"content":"            throw new DukeException(String.format(\"Cannot parse Deadline from \\n\\t`%s`\", text));","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"ganhongyao"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"ganhongyao"},"content":"        boolean isDone \u003d deadlineDetails[1].equals(\"X\");","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"ganhongyao"},"content":"        String name \u003d deadlineDetails[2];","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"ganhongyao"},"content":"        DukeDateTime dueDate \u003d DukeDateTime.parseISO(deadlineDetails[3]);","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"ganhongyao"},"content":"        return new Deadline(name, isDone, dueDate);","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"ganhongyao"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"ganhongyao"},"content":"    public String toText() {","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"ganhongyao"},"content":"        String[] props \u003d new String[]{\"D\", super.getStatusIcon(), super.getName(), this.dueDate.toISO()};","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"ganhongyao"},"content":"        return String.join(\" | \", props);","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"ganhongyao"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"ganhongyao"},"content":"    public boolean onSameDayAs(DukeDateTime date) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"ganhongyao"},"content":"        return DukeDateTime.onSameDay(this.dueDate, date);","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"ganhongyao"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"ganhongyao"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"ganhongyao"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), dueDate);","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"ganhongyao"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"ganhongyao":40}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ganhongyao"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ganhongyao"},"content":"import java.util.List;","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"ganhongyao"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"ganhongyao"},"content":"    // User-facing messages","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"ganhongyao"},"content":"    private static final String GREETING_MESSAGE \u003d \"Hello! I\u0027m Duke. What can I do for you?\";","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"ganhongyao"},"content":"    private static final String WELCOME_BACK_MESSAGE \u003d \"Welcome back! I\u0027m Duke. \" +","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"ganhongyao"},"content":"            \"These are the tasks I recall from your last visit.\\n\\n%s\";","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"ganhongyao"},"content":"    private static final String EXIT_MESSAGE \u003d \"Goodbye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"ganhongyao"},"content":"    // User-facing error messages","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"ganhongyao"},"content":"    private static final String INVALID_COMMAND_MESSAGE \u003d \"Invalid command.\";","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"ganhongyao"},"content":"    private static final String INVALID_TASK_NUMBER_MESSAGE \u003d \"Invalid task number.\";","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"ganhongyao"},"content":"    // ResponsePrettifier settings","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"ganhongyao"},"content":"    private static final int INDENTATION_LEVEL \u003d 4;","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"ganhongyao"},"content":"    private static final int SEPARATOR_LENGTH \u003d 60;","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"ganhongyao"},"content":"    private static final String SEPARATOR \u003d \"_\".repeat(SEPARATOR_LENGTH);","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"ganhongyao"},"content":"        DukeResponsePrettifier prettifier \u003d new DukeResponsePrettifier(INDENTATION_LEVEL, SEPARATOR);","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"ganhongyao"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"ganhongyao"},"content":"        Storage storage \u003d new Storage(\"./data/tasks.txt\");","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"ganhongyao"},"content":"        List\u003cTask\u003e loadedTasks \u003d storage.loadTasks();","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"ganhongyao"},"content":"        TaskManager taskManager \u003d new TaskManager(loadedTasks);","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"ganhongyao"},"content":"        if (loadedTasks.size() \u003e 0) {","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"ganhongyao"},"content":"            prettifier.print(String.format(WELCOME_BACK_MESSAGE, taskManager));","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"ganhongyao"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"ganhongyao"},"content":"            prettifier.print(GREETING_MESSAGE);","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"ganhongyao"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"ganhongyao"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"ganhongyao"},"content":"            String inputLine \u003d scanner.nextLine().trim();","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"ganhongyao"},"content":"            String firstWord \u003d inputLine.split(\"\\\\s+\")[0];","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"ganhongyao"},"content":"            try {","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"ganhongyao"},"content":"                Command command;","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"ganhongyao"},"content":"                try {","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"ganhongyao"},"content":"                    command \u003d Command.valueOf(firstWord.toUpperCase());","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"ganhongyao"},"content":"                } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"ganhongyao"},"content":"                    throw new DukeException(INVALID_COMMAND_MESSAGE);","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"ganhongyao"},"content":"                }","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"ganhongyao"},"content":"                String inputLineWithoutCommand \u003d inputLine.replace(firstWord, \"\").trim();","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"ganhongyao"},"content":"                command.validateArguments(inputLineWithoutCommand);","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"ganhongyao"},"content":"                switch (command) {","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"ganhongyao"},"content":"                case LIST:","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"ganhongyao"},"content":"                    if (inputLineWithoutCommand.isEmpty()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"ganhongyao"},"content":"                        prettifier.print(taskManager.list());","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"ganhongyao"},"content":"                    } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"ganhongyao"},"content":"                        DukeDateTime date \u003d DukeDateTime.parseUserInputDate(inputLineWithoutCommand);","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"ganhongyao"},"content":"                        prettifier.print(taskManager.list(date));","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"ganhongyao"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"ganhongyao"},"content":"                    break;","lastModifiedDate":"2021-08-15"},{"lineNumber":53,"author":{"gitId":"ganhongyao"},"content":"                case TODO:","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"ganhongyao"},"content":"                    String toDoName \u003d inputLineWithoutCommand;","lastModifiedDate":"2021-08-17"},{"lineNumber":55,"author":{"gitId":"ganhongyao"},"content":"                    ToDo toDo \u003d new ToDo(toDoName);","lastModifiedDate":"2021-08-17"},{"lineNumber":56,"author":{"gitId":"ganhongyao"},"content":"                    prettifier.print(taskManager.addTask(toDo));","lastModifiedDate":"2021-08-17"},{"lineNumber":57,"author":{"gitId":"ganhongyao"},"content":"                    storage.saveTasks(taskManager.toText());","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"ganhongyao"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"ganhongyao"},"content":"                case DEADLINE:","lastModifiedDate":"2021-08-17"},{"lineNumber":60,"author":{"gitId":"ganhongyao"},"content":"                    String[] deadlineDetails \u003d inputLineWithoutCommand.split(\"\\\\s+/by\\\\s+\", 2);","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"ganhongyao"},"content":"                    String deadlineName \u003d deadlineDetails[0];","lastModifiedDate":"2021-08-17"},{"lineNumber":62,"author":{"gitId":"ganhongyao"},"content":"                    DukeDateTime deadlineDueDate\u003d  DukeDateTime.parseUserInputDateTime(deadlineDetails[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"ganhongyao"},"content":"                    Deadline deadline \u003d new Deadline(deadlineName, deadlineDueDate);","lastModifiedDate":"2021-08-17"},{"lineNumber":64,"author":{"gitId":"ganhongyao"},"content":"                    prettifier.print(taskManager.addTask(deadline));","lastModifiedDate":"2021-08-17"},{"lineNumber":65,"author":{"gitId":"ganhongyao"},"content":"                    storage.saveTasks(taskManager.toText());","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"ganhongyao"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":67,"author":{"gitId":"ganhongyao"},"content":"                case EVENT:","lastModifiedDate":"2021-08-17"},{"lineNumber":68,"author":{"gitId":"ganhongyao"},"content":"                    String[] eventDetails \u003d inputLineWithoutCommand.split(\"\\\\s+/at\\\\s+\", 2);","lastModifiedDate":"2021-08-17"},{"lineNumber":69,"author":{"gitId":"ganhongyao"},"content":"                    String eventName \u003d eventDetails[0];","lastModifiedDate":"2021-08-17"},{"lineNumber":70,"author":{"gitId":"ganhongyao"},"content":"                    DukeDateTime eventTimestamp \u003d DukeDateTime.parseUserInputDateTime(eventDetails[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"ganhongyao"},"content":"                    Event event \u003d new Event(eventName, eventTimestamp);","lastModifiedDate":"2021-08-17"},{"lineNumber":72,"author":{"gitId":"ganhongyao"},"content":"                    prettifier.print(taskManager.addTask(event));","lastModifiedDate":"2021-08-17"},{"lineNumber":73,"author":{"gitId":"ganhongyao"},"content":"                    storage.saveTasks(taskManager.toText());","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"ganhongyao"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":75,"author":{"gitId":"ganhongyao"},"content":"                case DONE:","lastModifiedDate":"2021-08-17"},{"lineNumber":76,"author":{"gitId":"ganhongyao"},"content":"                    try {","lastModifiedDate":"2021-08-15"},{"lineNumber":77,"author":{"gitId":"ganhongyao"},"content":"                        int taskNumber \u003d Integer.parseInt(inputLineWithoutCommand);","lastModifiedDate":"2021-08-16"},{"lineNumber":78,"author":{"gitId":"ganhongyao"},"content":"                        prettifier.print(taskManager.markTaskAsDone(taskNumber));","lastModifiedDate":"2021-08-15"},{"lineNumber":79,"author":{"gitId":"ganhongyao"},"content":"                        storage.saveTasks(taskManager.toText());","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"ganhongyao"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-15"},{"lineNumber":81,"author":{"gitId":"ganhongyao"},"content":"                        // User provided an argument that is not parsable.","lastModifiedDate":"2021-08-15"},{"lineNumber":82,"author":{"gitId":"ganhongyao"},"content":"                        throw new DukeException(INVALID_TASK_NUMBER_MESSAGE);","lastModifiedDate":"2021-08-16"},{"lineNumber":83,"author":{"gitId":"ganhongyao"},"content":"                    }","lastModifiedDate":"2021-08-16"},{"lineNumber":84,"author":{"gitId":"ganhongyao"},"content":"                    break;","lastModifiedDate":"2021-08-16"},{"lineNumber":85,"author":{"gitId":"ganhongyao"},"content":"                case DELETE:","lastModifiedDate":"2021-08-17"},{"lineNumber":86,"author":{"gitId":"ganhongyao"},"content":"                    try {","lastModifiedDate":"2021-08-16"},{"lineNumber":87,"author":{"gitId":"ganhongyao"},"content":"                        int taskNumber \u003d Integer.parseInt(inputLineWithoutCommand);","lastModifiedDate":"2021-08-16"},{"lineNumber":88,"author":{"gitId":"ganhongyao"},"content":"                        prettifier.print(taskManager.deleteTask(taskNumber));","lastModifiedDate":"2021-08-16"},{"lineNumber":89,"author":{"gitId":"ganhongyao"},"content":"                        storage.saveTasks(taskManager.toText());","lastModifiedDate":"2021-08-21"},{"lineNumber":90,"author":{"gitId":"ganhongyao"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":91,"author":{"gitId":"ganhongyao"},"content":"                        // User provided an argument that is not parsable.","lastModifiedDate":"2021-08-17"},{"lineNumber":92,"author":{"gitId":"ganhongyao"},"content":"                        throw new DukeException(INVALID_TASK_NUMBER_MESSAGE);","lastModifiedDate":"2021-08-16"},{"lineNumber":93,"author":{"gitId":"ganhongyao"},"content":"                    }","lastModifiedDate":"2021-08-15"},{"lineNumber":94,"author":{"gitId":"ganhongyao"},"content":"                    break;","lastModifiedDate":"2021-08-15"},{"lineNumber":95,"author":{"gitId":"ganhongyao"},"content":"                case BYE:","lastModifiedDate":"2021-08-17"},{"lineNumber":96,"author":{"gitId":"ganhongyao"},"content":"                    prettifier.print(EXIT_MESSAGE);","lastModifiedDate":"2021-08-15"},{"lineNumber":97,"author":{"gitId":"ganhongyao"},"content":"                    scanner.close();","lastModifiedDate":"2021-08-15"},{"lineNumber":98,"author":{"gitId":"ganhongyao"},"content":"                    return;","lastModifiedDate":"2021-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2019-07-29"},{"lineNumber":100,"author":{"gitId":"ganhongyao"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":101,"author":{"gitId":"ganhongyao"},"content":"                prettifier.print(e.getMessage());","lastModifiedDate":"2021-08-16"},{"lineNumber":102,"author":{"gitId":"ganhongyao"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":103,"author":{"gitId":"ganhongyao"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":105,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":5,"ganhongyao":101}},{"path":"src/main/java/DukeDateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ganhongyao"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ganhongyao"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"ganhongyao"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"ganhongyao"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"ganhongyao"},"content":"public class DukeDateTime {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"ganhongyao"},"content":"    private final static DateTimeFormatter USER_INPUT_DATE_TIME_FORMATTER \u003d","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"ganhongyao"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"ganhongyao"},"content":"    private final static DateTimeFormatter USER_INPUT_DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"ganhongyao"},"content":"    private final static DateTimeFormatter DISPLAY_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy hh.mma\");","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"ganhongyao"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"ganhongyao"},"content":"    public DukeDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"ganhongyao"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"ganhongyao"},"content":"    public DukeDateTime(LocalDate date) {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"ganhongyao"},"content":"        this.dateTime \u003d date.atStartOfDay();","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"ganhongyao"},"content":"    public static DukeDateTime parseUserInputDateTime(String str) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"ganhongyao"},"content":"        LocalDateTime dt;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"ganhongyao"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"ganhongyao"},"content":"            dt \u003d LocalDateTime.parse(str, USER_INPUT_DATE_TIME_FORMATTER);","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"ganhongyao"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"ganhongyao"},"content":"            throw new DukeException(\"Unable to parse datetime. Please use the `YYYY-MM-DD HHMM` format \" +","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"ganhongyao"},"content":"                    \"(e.g. 2021-08-24 2130).\");","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"ganhongyao"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"ganhongyao"},"content":"        return new DukeDateTime(dt);","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"ganhongyao"},"content":"    public static DukeDateTime parseUserInputDate(String str) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"ganhongyao"},"content":"        LocalDate dt;","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"ganhongyao"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"ganhongyao"},"content":"            dt \u003d LocalDate.parse(str, USER_INPUT_DATE_FORMATTER);","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"ganhongyao"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"ganhongyao"},"content":"            throw new DukeException(\"Unable to parse date. Please use the `YYYY-MM-DD` format \" +","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"ganhongyao"},"content":"                    \"(e.g. 2021-08-24).\");","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"ganhongyao"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"ganhongyao"},"content":"        return new DukeDateTime(dt);","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"ganhongyao"},"content":"    public static DukeDateTime parseISO(String str) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"ganhongyao"},"content":"        LocalDateTime dt;","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"ganhongyao"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"ganhongyao"},"content":"            dt \u003d LocalDateTime.parse(str, DateTimeFormatter.ISO_LOCAL_DATE_TIME);","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"ganhongyao"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"ganhongyao"},"content":"            throw new DukeException(\"Unable to parse datetime. Please use the ISO datetime format.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"ganhongyao"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"ganhongyao"},"content":"        return new DukeDateTime(dt);","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"ganhongyao"},"content":"    public static boolean onSameDay(DukeDateTime d1, DukeDateTime d2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"ganhongyao"},"content":"        return d1.dateTime.toLocalDate().equals(d2.dateTime.toLocalDate());","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"ganhongyao"},"content":"    public String toISO() {","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"ganhongyao"},"content":"        return this.dateTime.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME);","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"ganhongyao"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"ganhongyao"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"ganhongyao"},"content":"        return this.dateTime.format(DISPLAY_FORMATTER);","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"ganhongyao"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"ganhongyao":66}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ganhongyao"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"ganhongyao"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"ganhongyao"},"content":"        super(message);","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"ganhongyao"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"ganhongyao":5}},{"path":"src/main/java/DukeResponsePrettifier.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ganhongyao"},"content":"public class DukeResponsePrettifier {","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"ganhongyao"},"content":"    private final String indent;","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"ganhongyao"},"content":"    private final String separator;","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"ganhongyao"},"content":"    public DukeResponsePrettifier(int indentationLevel, String separator) {","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"ganhongyao"},"content":"        this.indent \u003d \" \".repeat(indentationLevel);","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"ganhongyao"},"content":"        this.separator \u003d separator;","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"ganhongyao"},"content":"    private String indent(String str) {","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"ganhongyao"},"content":"        // Indent all lines","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"ganhongyao"},"content":"        String indentedString \u003d str.replace(\"\\n\", \"\\n\" + indent);","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"ganhongyao"},"content":"        return indent + indentedString;","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"ganhongyao"},"content":"    private void printSeparator() {","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"ganhongyao"},"content":"        System.out.println(indent(separator));","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"ganhongyao"},"content":"    public void print(String response) {","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"ganhongyao"},"content":"        printSeparator();","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"ganhongyao"},"content":"        System.out.println(indent(response));","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"ganhongyao"},"content":"        printSeparator();","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"ganhongyao"},"content":"        System.out.println();","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"ganhongyao"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"ganhongyao":26}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ganhongyao"},"content":"public class Event extends Task implements Timestampable {","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ganhongyao"},"content":"    private final DukeDateTime timestamp;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"ganhongyao"},"content":"    public Event(String name, DukeDateTime timestamp) {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"ganhongyao"},"content":"        super(name);","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"ganhongyao"},"content":"        this.timestamp \u003d timestamp;","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"ganhongyao"},"content":"    public Event(String name, boolean isDone, DukeDateTime timestamp) {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"ganhongyao"},"content":"        super(name, isDone);","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"ganhongyao"},"content":"        this.timestamp \u003d timestamp;","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"ganhongyao"},"content":"    public static Event fromText(String text) throws DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"ganhongyao"},"content":"        String[] eventDetails \u003d text.split(\" \\\\| \", 4);","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"ganhongyao"},"content":"        if (eventDetails.length \u003c 4) {","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"ganhongyao"},"content":"            throw new DukeException(String.format(\"Cannot parse Event from \\n\\t`%s`\", text));","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"ganhongyao"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"ganhongyao"},"content":"        boolean isDone \u003d eventDetails[1].equals(\"X\");","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"ganhongyao"},"content":"        String name \u003d eventDetails[2];","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"ganhongyao"},"content":"        DukeDateTime timestamp \u003d DukeDateTime.parseISO(eventDetails[3]);","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"ganhongyao"},"content":"        return new Event(name, isDone, timestamp);","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"ganhongyao"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"ganhongyao"},"content":"    public String toText() {","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"ganhongyao"},"content":"        String[] props \u003d new String[]{\"E\", super.getStatusIcon(), super.getName(), this.timestamp.toISO()};","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"ganhongyao"},"content":"        return String.join(\" | \", props);","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"ganhongyao"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"ganhongyao"},"content":"    public boolean onSameDayAs(DukeDateTime date) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"ganhongyao"},"content":"        return DukeDateTime.onSameDay(this.timestamp, date);","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"ganhongyao"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"ganhongyao"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"ganhongyao"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), timestamp);","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"ganhongyao"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"ganhongyao":40}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ganhongyao"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"ganhongyao"},"content":"import java.io.File;","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"ganhongyao"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"ganhongyao"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"ganhongyao"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"ganhongyao"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"ganhongyao"},"content":"import java.util.List;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"ganhongyao"},"content":"public class Storage {","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"ganhongyao"},"content":"    private final String filePath;","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"ganhongyao"},"content":"    private final File file;","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"ganhongyao"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"ganhongyao"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"ganhongyao"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"ganhongyao"},"content":"        if (!this.file.isFile()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"ganhongyao"},"content":"            this.file.getParentFile().mkdirs();","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"ganhongyao"},"content":"            try {","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"ganhongyao"},"content":"                this.file.createNewFile();","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"ganhongyao"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"ganhongyao"},"content":"                System.out.printf(\"An error occurred when trying to access file %s.\" +","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"ganhongyao"},"content":"                        \"Changes to your task list will not be saved locally.\\n\", filePath);","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"ganhongyao"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"ganhongyao"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"ganhongyao"},"content":"    public List\u003cTask\u003e loadTasks() {","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"ganhongyao"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"ganhongyao"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"ganhongyao"},"content":"            FileReader fileReader \u003d new FileReader(file);","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"ganhongyao"},"content":"            BufferedReader bufferedReader \u003d new BufferedReader(fileReader);","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"ganhongyao"},"content":"            String nextLine \u003d bufferedReader.readLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"ganhongyao"},"content":"            while (nextLine !\u003d null) {","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"ganhongyao"},"content":"                try {","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"ganhongyao"},"content":"                    taskList.add(Task.fromText(nextLine));","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"ganhongyao"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"ganhongyao"},"content":"                    System.out.printf(\"Bad task format found in %s: %s\\nSkipping over...\\n\", filePath, e.getMessage());","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"ganhongyao"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"ganhongyao"},"content":"                nextLine \u003d bufferedReader.readLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"ganhongyao"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"ganhongyao"},"content":"            bufferedReader.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"ganhongyao"},"content":"            fileReader.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"ganhongyao"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"ganhongyao"},"content":"            System.out.printf(\"An error occurred when trying to load %s:\\n\\t%s\\n\", filePath, e.getMessage());","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"ganhongyao"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"ganhongyao"},"content":"        return taskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"ganhongyao"},"content":"    public void saveTasks(String tasks) {","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"ganhongyao"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"ganhongyao"},"content":"            FileWriter fileWriter \u003d new FileWriter(file);","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"ganhongyao"},"content":"            fileWriter.write(tasks);","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"ganhongyao"},"content":"            fileWriter.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"ganhongyao"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"ganhongyao"},"content":"            System.out.printf(\"An error occurred when trying to save tasks locally:\\n\\t%s\\n\", e.getMessage());","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"ganhongyao"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"ganhongyao"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"ganhongyao":59}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ganhongyao"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"ganhongyao"},"content":"    private String name;","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"ganhongyao"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"ganhongyao"},"content":"    protected Task(String name) {","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"ganhongyao"},"content":"        this(name, false);","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"ganhongyao"},"content":"    protected Task(String name, boolean isDone) {","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"ganhongyao"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"ganhongyao"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"ganhongyao"},"content":"    protected Task markAsDone() {","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"ganhongyao"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"ganhongyao"},"content":"        return this;","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"ganhongyao"},"content":"    public String getName() {","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"ganhongyao"},"content":"        return name;","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"ganhongyao"},"content":"    public boolean checkTaskDone() {","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"ganhongyao"},"content":"        return isDone;","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"ganhongyao"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"ganhongyao"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"ganhongyao"},"content":"    public static Task fromText(String text) throws DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"ganhongyao"},"content":"        char taskType \u003d text.charAt(0);","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"ganhongyao"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"ganhongyao"},"content":"        case \u0027T\u0027:","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"ganhongyao"},"content":"            return ToDo.fromText(text);","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"ganhongyao"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"ganhongyao"},"content":"            return Deadline.fromText(text);","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"ganhongyao"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"ganhongyao"},"content":"            return Event.fromText(text);","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"ganhongyao"},"content":"        default:","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"ganhongyao"},"content":"            throw new DukeException(String.format(\"Cannot parse Task from \\n\\t`%s`\", text));","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"ganhongyao"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"ganhongyao"},"content":"    public abstract String toText();","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"ganhongyao"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"ganhongyao"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"ganhongyao"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), name);","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"ganhongyao"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"ganhongyao":51}},{"path":"src/main/java/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ganhongyao"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ganhongyao"},"content":"import java.util.List;","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"ganhongyao"},"content":"public class TaskManager {","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"ganhongyao"},"content":"    // Success Messages","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"ganhongyao"},"content":"    private static final String TASKS_COUNT_MESSAGE \u003d \"Now you have %d %s in the list.\";","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"ganhongyao"},"content":"    private static final String UNDONE_TASKS_COUNT_MESSAGE \u003d \"You have %d incomplete %s remaining.\";","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"ganhongyao"},"content":"    private static final String TASK_ADDED_MESSAGE \u003d \"Got it. I\u0027ve added this task:\\n  %s\\n\\n\" + TASKS_COUNT_MESSAGE;","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"ganhongyao"},"content":"    private static final String MARKED_TASK_AS_DONE_MESSAGE \u003d \"Nice! I\u0027ve marked this task as done:\\n  %s\\n\\n\" +","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"ganhongyao"},"content":"            UNDONE_TASKS_COUNT_MESSAGE;","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"ganhongyao"},"content":"    private static final String DELETED_TASK_MESSAGE \u003d \"Noted. I\u0027ve removed this task:\\n  %s\\n\\n\" + TASKS_COUNT_MESSAGE;","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"ganhongyao"},"content":"    // Error Messages","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"ganhongyao"},"content":"    private static final String TASK_NOT_FOUND_MESSAGE \u003d","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"ganhongyao"},"content":"            \"You don\u0027t have a task with that number.\";","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"ganhongyao"},"content":"    private final List\u003cTask\u003e taskList;","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"ganhongyao"},"content":"    public TaskManager(List\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"ganhongyao"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"ganhongyao"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"ganhongyao"},"content":"        taskList.add(task);","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"ganhongyao"},"content":"        int taskCount \u003d getTaskCount();","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"ganhongyao"},"content":"        String pluralised \u003d taskCount \u003e 1 ? \"tasks\" : \"task\";","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"ganhongyao"},"content":"        return String.format(TASK_ADDED_MESSAGE, task, taskCount, pluralised);","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"ganhongyao"},"content":"    public String markTaskAsDone(int taskNumber) throws DukeException {","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"ganhongyao"},"content":"        try {","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"ganhongyao"},"content":"            // User input is 1-indexed","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"ganhongyao"},"content":"            int taskIndex \u003d taskNumber - 1;","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"ganhongyao"},"content":"            Task task \u003d taskList.get(taskIndex);","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"ganhongyao"},"content":"            task.markAsDone();","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"ganhongyao"},"content":"            int undoneTaskCount \u003d getUndoneTaskCount();","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"ganhongyao"},"content":"            String pluralised \u003d undoneTaskCount \u003e 1 || undoneTaskCount \u003d\u003d 0 ? \"tasks\" : \"task\";","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"ganhongyao"},"content":"            return String.format(MARKED_TASK_AS_DONE_MESSAGE, task, undoneTaskCount, pluralised);","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"ganhongyao"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"ganhongyao"},"content":"            throw new DukeException(TASK_NOT_FOUND_MESSAGE);","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"ganhongyao"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"ganhongyao"},"content":"    public String deleteTask(int taskNumber) throws DukeException {","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"ganhongyao"},"content":"        try {","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"ganhongyao"},"content":"            // User input is 1-indexed","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"ganhongyao"},"content":"            int taskIndex \u003d taskNumber - 1;","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"ganhongyao"},"content":"            Task task \u003d taskList.remove(taskIndex);","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"ganhongyao"},"content":"            int taskCount \u003d getTaskCount();","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"ganhongyao"},"content":"            String pluralised \u003d taskCount \u003e 1 || taskCount \u003d\u003d 0 ? \"tasks\" : \"task\";","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"ganhongyao"},"content":"            return String.format(DELETED_TASK_MESSAGE, task, taskCount, pluralised);","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"ganhongyao"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"ganhongyao"},"content":"            throw new DukeException(TASK_NOT_FOUND_MESSAGE);","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"ganhongyao"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":55,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":56,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":57,"author":{"gitId":"ganhongyao"},"content":"    private int getTaskCount() {","lastModifiedDate":"2021-08-15"},{"lineNumber":58,"author":{"gitId":"ganhongyao"},"content":"        return taskList.size();","lastModifiedDate":"2021-08-15"},{"lineNumber":59,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":60,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":61,"author":{"gitId":"ganhongyao"},"content":"    private int getUndoneTaskCount() {","lastModifiedDate":"2021-08-15"},{"lineNumber":62,"author":{"gitId":"ganhongyao"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-08-15"},{"lineNumber":63,"author":{"gitId":"ganhongyao"},"content":"        for (Task t : taskList) {","lastModifiedDate":"2021-08-15"},{"lineNumber":64,"author":{"gitId":"ganhongyao"},"content":"            if (!t.checkTaskDone()) {","lastModifiedDate":"2021-08-15"},{"lineNumber":65,"author":{"gitId":"ganhongyao"},"content":"                count++;","lastModifiedDate":"2021-08-15"},{"lineNumber":66,"author":{"gitId":"ganhongyao"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":67,"author":{"gitId":"ganhongyao"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":68,"author":{"gitId":"ganhongyao"},"content":"        return count;","lastModifiedDate":"2021-08-15"},{"lineNumber":69,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":70,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":71,"author":{"gitId":"ganhongyao"},"content":"    public String toText() {","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"ganhongyao"},"content":"        String[] tasks \u003d new String[taskList.size()];","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"ganhongyao"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"ganhongyao"},"content":"            tasks[i] \u003d taskList.get(i).toText();","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"ganhongyao"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"ganhongyao"},"content":"        return String.join(\"\\n\", tasks);","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"ganhongyao"},"content":"    public String list() {","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"ganhongyao"},"content":"        String[] allTasks \u003d new String[taskList.size()];","lastModifiedDate":"2021-08-15"},{"lineNumber":81,"author":{"gitId":"ganhongyao"},"content":"        for (int i \u003d 0; i \u003c allTasks.length; i++) {","lastModifiedDate":"2021-08-15"},{"lineNumber":82,"author":{"gitId":"ganhongyao"},"content":"            Task task \u003d taskList.get(i);","lastModifiedDate":"2021-08-15"},{"lineNumber":83,"author":{"gitId":"ganhongyao"},"content":"            // Display numbers are 1-indexed","lastModifiedDate":"2021-08-15"},{"lineNumber":84,"author":{"gitId":"ganhongyao"},"content":"            int taskNumber \u003d i + 1;","lastModifiedDate":"2021-08-15"},{"lineNumber":85,"author":{"gitId":"ganhongyao"},"content":"            allTasks[i] \u003d prependNumberToTask(taskNumber, task);","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"ganhongyao"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":87,"author":{"gitId":"ganhongyao"},"content":"        return String.join(\"\\n\", allTasks);","lastModifiedDate":"2021-08-15"},{"lineNumber":88,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":89,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"ganhongyao"},"content":"    private List\u003cTask\u003e filterByDate(DukeDateTime dateTime) {","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"ganhongyao"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"ganhongyao"},"content":"        for (Task t : this.taskList) {","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"ganhongyao"},"content":"            if (!(t instanceof Timestampable)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"ganhongyao"},"content":"                continue;","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"ganhongyao"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"ganhongyao"},"content":"            Timestampable timestampableTask \u003d (Timestampable) t;","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"ganhongyao"},"content":"            if (timestampableTask.onSameDayAs(dateTime)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"ganhongyao"},"content":"                tasks.add(t);","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"ganhongyao"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"ganhongyao"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"ganhongyao"},"content":"        return tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"ganhongyao"},"content":"    public String list(DukeDateTime dateTime) {","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"ganhongyao"},"content":"        List\u003cTask\u003e filteredTasks \u003d filterByDate(dateTime);","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"ganhongyao"},"content":"        String[] filteredTasksStrings \u003d new String[filteredTasks.size()];","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"ganhongyao"},"content":"        for (int i \u003d 0; i \u003c filteredTasksStrings.length; i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"ganhongyao"},"content":"            Task task \u003d filteredTasks.get(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"ganhongyao"},"content":"            int taskNumber \u003d i + 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"ganhongyao"},"content":"            filteredTasksStrings[i] \u003d prependNumberToTask(taskNumber, task);","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"ganhongyao"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"ganhongyao"},"content":"        return String.join(\"\\n\", filteredTasksStrings);","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"ganhongyao"},"content":"    private String prependNumberToTask(int taskNumber, Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"ganhongyao"},"content":"        return String.format(\"%d. %s\", taskNumber, task.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"ganhongyao"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"ganhongyao"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"ganhongyao"},"content":"        return list();","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"ganhongyao"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"ganhongyao":123}},{"path":"src/main/java/Timestampable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ganhongyao"},"content":"public interface Timestampable {","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ganhongyao"},"content":"    public boolean onSameDayAs(DukeDateTime date);","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"ganhongyao"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"ganhongyao":3}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ganhongyao"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"ganhongyao"},"content":"    public ToDo(String name) {","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"ganhongyao"},"content":"        super(name);","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"ganhongyao"},"content":"    public ToDo(String name, boolean isDone) {","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"ganhongyao"},"content":"        super(name, isDone);","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"ganhongyao"},"content":"    public static ToDo fromText(String text) throws DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"ganhongyao"},"content":"        String[] toDoDetails \u003d text.split(\" \\\\| \", 3);","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"ganhongyao"},"content":"        if (toDoDetails.length \u003c 3) {","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"ganhongyao"},"content":"            throw new DukeException(String.format(\"Cannot parse ToDo from \\n\\t`%s`\", text));","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"ganhongyao"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"ganhongyao"},"content":"        boolean isDone \u003d toDoDetails[1].equals(\"X\");","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"ganhongyao"},"content":"        String name \u003d toDoDetails[2];","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"ganhongyao"},"content":"        return new ToDo(name, isDone);","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"ganhongyao"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"ganhongyao"},"content":"    public String toText() {","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"ganhongyao"},"content":"        String[] props \u003d new String[]{\"T\", super.getStatusIcon(), super.getName()};","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"ganhongyao"},"content":"        return String.join(\" | \", props);","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"ganhongyao"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"ganhongyao"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"ganhongyao"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"ganhongyao"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"ganhongyao"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"ganhongyao"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"ganhongyao":30}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ganhongyao"},"content":"todo","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"ganhongyao"},"content":"todo borrow book","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"ganhongyao"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"ganhongyao"},"content":"done","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"ganhongyao"},"content":"done asd","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"ganhongyao"},"content":"done 999","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"ganhongyao"},"content":"done 1","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"ganhongyao"},"content":"deadline","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"ganhongyao"},"content":"deadline return book","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"ganhongyao"},"content":"deadline return book /by 2021-08-31 2359 ","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"ganhongyao"},"content":"event","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"ganhongyao"},"content":"event book convention","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"ganhongyao"},"content":"event book convention /at 2021-08-29 1500","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"ganhongyao"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"ganhongyao"},"content":"list 2021-08-31","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"ganhongyao"},"content":"done 3","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"ganhongyao"},"content":"delete","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"ganhongyao"},"content":"delete asd","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"ganhongyao"},"content":"delete 999","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"ganhongyao"},"content":"delete 2","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"ganhongyao"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"ganhongyao"},"content":"bye","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"ganhongyao":22}}]
