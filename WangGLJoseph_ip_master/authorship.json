[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"WangGLJoseph"},"content":"# Duke v0.9.0","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"WangGLJoseph"},"content":"\u003e *\"Be not afraid of growing slowly, be afraid of standing still.\"* - Chinese proverb","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"WangGLJoseph"},"content":"Duke offers you a:","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"WangGLJoseph"},"content":"- Hassle free","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"WangGLJoseph"},"content":"- Text based","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"WangGLJoseph"},"content":"- Minimalist","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"WangGLJoseph"},"content":"and completely **offline** experience of planning your tasks!","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"WangGLJoseph"},"content":"## Duke\u0027s features","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"WangGLJoseph"},"content":"- [x] Adding and saving tasks","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"WangGLJoseph"},"content":"- [ ] GUI (coming soon!)","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"WangGLJoseph"},"content":"- [ ] Mystery features ðŸ˜œ","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"WangGLJoseph"},"content":"## Setting up Duke","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"WangGLJoseph"},"content":"1. Download it [here](https://github.com/WangGLJoseph/ip/releases/download/A-Jar/ip.jar)","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"WangGLJoseph"},"content":"2. Double-click to run it","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"WangGLJoseph"},"content":"3. Add your tasks","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"WangGLJoseph"},"content":"4. Enjoy **mastery** over your tasks ðŸ˜†","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"WangGLJoseph"},"content":"A snippet of the workings of controlling your tasks. Behold, you\u0027ve got the power!","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"WangGLJoseph"},"content":"   ```java","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"WangGLJoseph"},"content":"    public String finishTask(int index) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"WangGLJoseph"},"content":"        if (index \u003e taskArrayList.size()) {","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"WangGLJoseph"},"content":"            throw new DukeException(\"This task index is not in the task list!\");","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"WangGLJoseph"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"WangGLJoseph"},"content":"        taskArrayList.get(index - 1).markAsDone();","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"WangGLJoseph"},"content":"        return (sandwich(\"Congratulations! You have finished this task: \"","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"WangGLJoseph"},"content":"                + taskArrayList.get(index - 1).toString()));","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"WangGLJoseph":26,"-":5}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"WangGLJoseph"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"WangGLJoseph"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"WangGLJoseph"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"WangGLJoseph"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"WangGLJoseph"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"WangGLJoseph"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"WangGLJoseph"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"WangGLJoseph"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"WangGLJoseph"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"WangGLJoseph"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"WangGLJoseph"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"WangGLJoseph"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"WangGLJoseph"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"WangGLJoseph"},"content":"    mainClassName \u003d \"cs2103.duke.Duke\"","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"WangGLJoseph":15,"-":45}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"WangGLJoseph"},"content":"1.[T][ ] 1","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"WangGLJoseph"},"content":"2.[T][ ] 2","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"WangGLJoseph"},"content":"3.[D][ ] 3 (by: 2020 02 02)","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"WangGLJoseph"},"content":"4.[T][ ] 4","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"WangGLJoseph"},"content":"5.[E][ ] 5 (at: 2021 11 11)","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"WangGLJoseph":5}},{"path":"src/main/java/cs2103/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangGLJoseph"},"content":"package cs2103.duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"WangGLJoseph"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"WangGLJoseph"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"WangGLJoseph"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"WangGLJoseph"},"content":" * This class encapsulates a Deadline Task object, which inherits from the Task class.","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"WangGLJoseph"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"WangGLJoseph"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"WangGLJoseph"},"content":"    protected int index;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"WangGLJoseph"},"content":"    protected String by;","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"WangGLJoseph"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"WangGLJoseph"},"content":"    public Deadline(int index, String description, String by) {","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"WangGLJoseph"},"content":"        super(index, description);","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"WangGLJoseph"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"WangGLJoseph"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"WangGLJoseph"},"content":"        this.date \u003d LocalDate.parse(by);","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"WangGLJoseph"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"WangGLJoseph"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"WangGLJoseph"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"yyyy MM dd\")) + \")\";","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"WangGLJoseph"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"WangGLJoseph":25}},{"path":"src/main/java/cs2103/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangGLJoseph"},"content":"package cs2103.duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"WangGLJoseph"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"WangGLJoseph"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"WangGLJoseph"},"content":" * This class encapsulates a Duke chat-bot.","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"WangGLJoseph"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"WangGLJoseph"},"content":"public class Duke {","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"WangGLJoseph"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"WangGLJoseph"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"WangGLJoseph"},"content":"    private boolean canExit \u003d false;","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"WangGLJoseph"},"content":"    public Duke() {","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"WangGLJoseph"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"WangGLJoseph"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"WangGLJoseph"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"WangGLJoseph"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"WangGLJoseph"},"content":"            System.out.println(ui.showLoadingError());","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"WangGLJoseph"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"WangGLJoseph"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"WangGLJoseph"},"content":"        ui \u003d new Ui(storage, tasks);","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"WangGLJoseph"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"WangGLJoseph"},"content":"     * Generate a response given an input from user.","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"WangGLJoseph"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"WangGLJoseph"},"content":"     * @param input The user input received.","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"WangGLJoseph"},"content":"     * @return A string representing the response to the user.","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"WangGLJoseph"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"WangGLJoseph"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"WangGLJoseph"},"content":"        String result;","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"WangGLJoseph"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"WangGLJoseph"},"content":"            return ui.handleInput(input, tasks);","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"WangGLJoseph"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"WangGLJoseph"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"WangGLJoseph"},"content":"            result \u003d e.toString();","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"WangGLJoseph"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"WangGLJoseph"},"content":"        return result;","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"WangGLJoseph"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"WangGLJoseph"},"content":"        DukeLauncher.main(null);","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"WangGLJoseph":42,"-":2}},{"path":"src/main/java/cs2103/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangGLJoseph"},"content":"package cs2103.duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"WangGLJoseph"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"WangGLJoseph"},"content":" * This class encapsulates the exception thrown when the user enters an erroneous input.","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"WangGLJoseph"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"WangGLJoseph"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"WangGLJoseph"},"content":"    private static String msg;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"WangGLJoseph"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"WangGLJoseph"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"WangGLJoseph"},"content":"        msg \u003d errorMessage;","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"WangGLJoseph"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"WangGLJoseph"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"WangGLJoseph"},"content":"        return (\"Oh No! I do not understand your input due to the following problem:\\n\" + msg);","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"WangGLJoseph"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"WangGLJoseph":18}},{"path":"src/main/java/cs2103/duke/DukeLauncher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangGLJoseph"},"content":"package cs2103.duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"WangGLJoseph"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"WangGLJoseph"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"WangGLJoseph"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"WangGLJoseph"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"WangGLJoseph"},"content":"public class DukeLauncher {","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"WangGLJoseph"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"WangGLJoseph"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"WangGLJoseph"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"WangGLJoseph":12}},{"path":"src/main/java/cs2103/duke/DukeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangGLJoseph"},"content":"package cs2103.duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"WangGLJoseph"},"content":"import java.io.File;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"WangGLJoseph"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"WangGLJoseph"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"WangGLJoseph"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"WangGLJoseph"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"WangGLJoseph"},"content":" * This class encapsulates the parsing of duke.txt to convert the contents of the file","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"WangGLJoseph"},"content":" * into an ArrayList.","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"WangGLJoseph"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"WangGLJoseph"},"content":"public class DukeParser {","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"WangGLJoseph"},"content":"    private String filePath;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"WangGLJoseph"},"content":"    public DukeParser(String dukeFilePath) {","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"WangGLJoseph"},"content":"        this.filePath \u003d dukeFilePath;","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"WangGLJoseph"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"WangGLJoseph"},"content":"     * This method copies the contents of the file from filePath and","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"WangGLJoseph"},"content":"     * converts them into Task objects into the taskArrayList with the","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"WangGLJoseph"},"content":"     * help of the parse() method.","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"WangGLJoseph"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"WangGLJoseph"},"content":"     * @return TaskArrayList the ArrayList to copy the information to.","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"WangGLJoseph"},"content":"     * @throws IOException If filePath does not exist.","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"WangGLJoseph"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"WangGLJoseph"},"content":"    public ArrayList\u003cTask\u003e copyFileContents() throws IOException {","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"WangGLJoseph"},"content":"        File f \u003d new File(this.filePath); // create a File for the given file path","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"WangGLJoseph"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"WangGLJoseph"},"content":"        StringBuilder targetBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"WangGLJoseph"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"WangGLJoseph"},"content":"            targetBuilder.append(s.nextLine()).append(\"\\n\");","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"WangGLJoseph"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"WangGLJoseph"},"content":"        return parse(targetBuilder.toString());","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"WangGLJoseph"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"WangGLJoseph"},"content":"     * This method parses the string copied from duke.txt and converts them into task objects","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"WangGLJoseph"},"content":"     * into the taskArrayList.","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"WangGLJoseph"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"WangGLJoseph"},"content":"     * @param toParse The string to parse.","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"WangGLJoseph"},"content":"     * @return A taskArrayList made up of tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"WangGLJoseph"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"WangGLJoseph"},"content":"    public static ArrayList\u003cTask\u003e parse(String toParse) {","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"WangGLJoseph"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"WangGLJoseph"},"content":"        Scanner ps \u003d new Scanner(toParse); // passes whole file into the scanner","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"WangGLJoseph"},"content":"        while (ps.hasNextLine()) {","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"WangGLJoseph"},"content":"            String nLine \u003d ps.nextLine(); // parse one line at a time","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"WangGLJoseph"},"content":"            int ref \u003d 3; // reference point","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"WangGLJoseph"},"content":"            char taskType \u003d nLine.charAt(ref);","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"WangGLJoseph"},"content":"            boolean isDone \u003d nLine.charAt(ref + 3) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"WangGLJoseph"},"content":"            int strLength \u003d nLine.length();","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"WangGLJoseph"},"content":"            switch (taskType) {","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"WangGLJoseph"},"content":"            case \u0027T\u0027:","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"WangGLJoseph"},"content":"                String todoName \u003d nLine.substring(ref + 5, strLength).trim();","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"WangGLJoseph"},"content":"                Task newestTodo \u003d new ToDo(result.size(), todoName);","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"WangGLJoseph"},"content":"                if (isDone) {","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"WangGLJoseph"},"content":"                    newestTodo.markAsDone();","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"WangGLJoseph"},"content":"                }","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"WangGLJoseph"},"content":"                result.add(newestTodo);","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"WangGLJoseph"},"content":"                break;","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"WangGLJoseph"},"content":"            case \u0027D\u0027:","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"WangGLJoseph"},"content":"                String deadlineInfo \u003d nLine.substring(ref + 5, strLength);","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"WangGLJoseph"},"content":"                String[] arrD \u003d deadlineInfo.split(\"\\\\(by: \", 2);","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"WangGLJoseph"},"content":"                String deadlineName \u003d arrD[0].trim();","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"WangGLJoseph"},"content":"                String deadlineReminder \u003d arrD[1].substring(0, arrD[1].length() - 1).trim();","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"WangGLJoseph"},"content":"                deadlineReminder \u003d parseDate(deadlineReminder);","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"WangGLJoseph"},"content":"                Task newestDeadline \u003d new Deadline(result.size(), deadlineName, deadlineReminder);","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"WangGLJoseph"},"content":"                result.add(newestDeadline);","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"WangGLJoseph"},"content":"                if (isDone) {","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"WangGLJoseph"},"content":"                    newestDeadline.markAsDone();","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"WangGLJoseph"},"content":"                }","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"WangGLJoseph"},"content":"                break;","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"WangGLJoseph"},"content":"            case \u0027E\u0027:","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"WangGLJoseph"},"content":"                String eventInfo \u003d nLine.substring(ref + 5, strLength);","lastModifiedDate":"2021-08-31"},{"lineNumber":77,"author":{"gitId":"WangGLJoseph"},"content":"                String[] arrE \u003d eventInfo.split(\"\\\\(at: \", 2);","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"WangGLJoseph"},"content":"                String eventName \u003d arrE[0].trim();","lastModifiedDate":"2021-09-18"},{"lineNumber":79,"author":{"gitId":"WangGLJoseph"},"content":"                String eventReminder \u003d arrE[1].substring(0, arrE[1].length() - 1).trim();","lastModifiedDate":"2021-09-18"},{"lineNumber":80,"author":{"gitId":"WangGLJoseph"},"content":"                eventReminder \u003d parseDate(eventReminder);","lastModifiedDate":"2021-08-31"},{"lineNumber":81,"author":{"gitId":"WangGLJoseph"},"content":"                Task newestEvent \u003d new Event(result.size(), eventName, eventReminder);","lastModifiedDate":"2021-09-01"},{"lineNumber":82,"author":{"gitId":"WangGLJoseph"},"content":"                result.add(newestEvent);","lastModifiedDate":"2021-08-31"},{"lineNumber":83,"author":{"gitId":"WangGLJoseph"},"content":"                if (isDone) {","lastModifiedDate":"2021-08-31"},{"lineNumber":84,"author":{"gitId":"WangGLJoseph"},"content":"                    newestEvent.markAsDone();","lastModifiedDate":"2021-08-31"},{"lineNumber":85,"author":{"gitId":"WangGLJoseph"},"content":"                }","lastModifiedDate":"2021-08-31"},{"lineNumber":86,"author":{"gitId":"WangGLJoseph"},"content":"                break;","lastModifiedDate":"2021-08-31"},{"lineNumber":87,"author":{"gitId":"WangGLJoseph"},"content":"            default:","lastModifiedDate":"2021-08-31"},{"lineNumber":88,"author":{"gitId":"WangGLJoseph"},"content":"                System.out.println(\"Unknown input\");","lastModifiedDate":"2021-08-31"},{"lineNumber":89,"author":{"gitId":"WangGLJoseph"},"content":"                break;","lastModifiedDate":"2021-08-31"},{"lineNumber":90,"author":{"gitId":"WangGLJoseph"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":91,"author":{"gitId":"WangGLJoseph"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":92,"author":{"gitId":"WangGLJoseph"},"content":"        return result;","lastModifiedDate":"2021-08-31"},{"lineNumber":93,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":94,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":95,"author":{"gitId":"WangGLJoseph"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":96,"author":{"gitId":"WangGLJoseph"},"content":"     * Parses input string in the format \"yyyy MM dd\" and returns it in the format","lastModifiedDate":"2021-08-31"},{"lineNumber":97,"author":{"gitId":"WangGLJoseph"},"content":"     * \"YYYY-MM-DD\".","lastModifiedDate":"2021-08-31"},{"lineNumber":98,"author":{"gitId":"WangGLJoseph"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":99,"author":{"gitId":"WangGLJoseph"},"content":"     * @param input String in format \"MMM d yyyy\".","lastModifiedDate":"2021-09-01"},{"lineNumber":100,"author":{"gitId":"WangGLJoseph"},"content":"     * @return String in format \"YYYY-MM-DD\".","lastModifiedDate":"2021-09-01"},{"lineNumber":101,"author":{"gitId":"WangGLJoseph"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":102,"author":{"gitId":"WangGLJoseph"},"content":"    public static String parseDate(String input) {","lastModifiedDate":"2021-08-31"},{"lineNumber":103,"author":{"gitId":"WangGLJoseph"},"content":"        String year \u003d input.substring(0, 4);","lastModifiedDate":"2021-08-31"},{"lineNumber":104,"author":{"gitId":"WangGLJoseph"},"content":"        String month \u003d input.substring(5, 7);","lastModifiedDate":"2021-08-31"},{"lineNumber":105,"author":{"gitId":"WangGLJoseph"},"content":"        String day \u003d input.substring(8, 10);","lastModifiedDate":"2021-08-31"},{"lineNumber":106,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":107,"author":{"gitId":"WangGLJoseph"},"content":"        return year + \"-\" + month + \"-\" + day;","lastModifiedDate":"2021-08-31"},{"lineNumber":108,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":109,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":110,"author":{"gitId":"WangGLJoseph"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"WangGLJoseph":110}},{"path":"src/main/java/cs2103/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangGLJoseph"},"content":"package cs2103.duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"WangGLJoseph"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"WangGLJoseph"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"WangGLJoseph"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"WangGLJoseph"},"content":" * This class encapsulates an Event Task object, which inherits from the Task class.","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"WangGLJoseph"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"WangGLJoseph"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"WangGLJoseph"},"content":"    protected int index;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"WangGLJoseph"},"content":"    protected String at;","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"WangGLJoseph"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"WangGLJoseph"},"content":"    public Event(int index, String description, String at) {","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"WangGLJoseph"},"content":"        super(index, description);","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"WangGLJoseph"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"WangGLJoseph"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"WangGLJoseph"},"content":"        this.date \u003d LocalDate.parse(at);","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"WangGLJoseph"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"WangGLJoseph"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"WangGLJoseph"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + date.format(DateTimeFormatter.ofPattern(\"yyyy MM dd\")) + \")\";","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"WangGLJoseph"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"WangGLJoseph":25}},{"path":"src/main/java/cs2103/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangGLJoseph"},"content":"package cs2103.duke;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"WangGLJoseph"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"WangGLJoseph"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"WangGLJoseph"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"WangGLJoseph"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"WangGLJoseph"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"WangGLJoseph"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"WangGLJoseph"},"content":"import cs2103.duke.controllers.MainWindow;","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"WangGLJoseph"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"WangGLJoseph"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"WangGLJoseph"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"WangGLJoseph"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"WangGLJoseph"},"content":"    private final Duke duke \u003d new Duke();","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"WangGLJoseph"},"content":"    public Main() {","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"WangGLJoseph"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"WangGLJoseph"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"WangGLJoseph"},"content":"        try {","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"WangGLJoseph"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"WangGLJoseph"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"WangGLJoseph"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"WangGLJoseph"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"WangGLJoseph"},"content":"            scene.getRoot().setStyle(\"-fx-font-family: \u0027Courier New\u0027\");","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"WangGLJoseph"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"WangGLJoseph"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"WangGLJoseph"},"content":"            stage.show();","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"WangGLJoseph"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"WangGLJoseph"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"WangGLJoseph"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"WangGLJoseph"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"WangGLJoseph":38}},{"path":"src/main/java/cs2103/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangGLJoseph"},"content":"package cs2103.duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"WangGLJoseph"},"content":"import java.io.File;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"WangGLJoseph"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"WangGLJoseph"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"WangGLJoseph"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"WangGLJoseph"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"WangGLJoseph"},"content":" * This class encapsulates a Storage object which saves the tasks that have been added by the user, it also","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"WangGLJoseph"},"content":" * performs the initialization for the duke.txt and its parent folder, if they are not already present.","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"WangGLJoseph"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"WangGLJoseph"},"content":"public class Storage {","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"WangGLJoseph"},"content":"    String dukeFileDirectoryPath \u003d \"./data\";","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"WangGLJoseph"},"content":"    String dukeFilePath \u003d \"./data/duke.txt\";","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"WangGLJoseph"},"content":"    public Storage() {","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"WangGLJoseph"},"content":"        initialize();","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"WangGLJoseph"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"WangGLJoseph"},"content":"     * Checks the dukeFilePath for the existence of duke.txt, if the file or the folder containing it","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"WangGLJoseph"},"content":"     * does not exist, create them.","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"WangGLJoseph"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"WangGLJoseph"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"WangGLJoseph"},"content":"        File dukeFileDirectory \u003d new File(dukeFileDirectoryPath);","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"WangGLJoseph"},"content":"        File dukeFile \u003d new File(dukeFilePath);","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"WangGLJoseph"},"content":"        // creates directory if it does not exist","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"WangGLJoseph"},"content":"        if (dukeFileDirectory.mkdir()) {","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"WangGLJoseph"},"content":"            System.out.println(\"folder: \u0027data/\u0027 has been created\");","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"WangGLJoseph"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"WangGLJoseph"},"content":"        // creates file if it does not exist","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"WangGLJoseph"},"content":"        try {","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"WangGLJoseph"},"content":"            if (dukeFile.createNewFile()) {","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"WangGLJoseph"},"content":"                System.out.println(\"\u0027duke.txt\u0027 has been created in the \u0027data/\u0027 folder \");","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"WangGLJoseph"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"WangGLJoseph"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"WangGLJoseph"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"WangGLJoseph"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"WangGLJoseph"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"WangGLJoseph"},"content":"     * Loads the data stored in duke.txt into a taskArrayList.","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"WangGLJoseph"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"WangGLJoseph"},"content":"     * @return The taskArrayList representation of the data stored in duke.txt, if any.","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"WangGLJoseph"},"content":"     * @throws IOException If an invalid input is detected.","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"WangGLJoseph"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"WangGLJoseph"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"WangGLJoseph"},"content":"        // initialize","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"WangGLJoseph"},"content":"        initialize();","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"WangGLJoseph"},"content":"        // load the data from the hard disk for dukeFile","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"WangGLJoseph"},"content":"        DukeParser p \u003d new DukeParser(dukeFilePath);","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"WangGLJoseph"},"content":"        return p.copyFileContents();","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"WangGLJoseph"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"WangGLJoseph"},"content":"     * This method overwrites the file.","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"WangGLJoseph"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"WangGLJoseph"},"content":"     * @param textToAppend The text to append.","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"WangGLJoseph"},"content":"     * @throws IOException If filePath does not exist.","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"WangGLJoseph"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"WangGLJoseph"},"content":"    public void overwriteFile(String textToAppend) throws IOException {","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"WangGLJoseph"},"content":"        FileWriter fw \u003d new FileWriter(dukeFilePath, false); // create a FileWriter in append mode","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"WangGLJoseph"},"content":"        fw.write(textToAppend);","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"WangGLJoseph"},"content":"        fw.close();","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"WangGLJoseph"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"WangGLJoseph"},"content":"     * This method appends to the file instead of overwrites.","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"WangGLJoseph"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"WangGLJoseph"},"content":"     * @param filePath     The path to the file to append to.","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"WangGLJoseph"},"content":"     * @param textToAppend The text to append.","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"WangGLJoseph"},"content":"     * @throws IOException If filePath does not exist.","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"WangGLJoseph"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"WangGLJoseph"},"content":"    public void appendToFile(String filePath, String textToAppend) throws IOException {","lastModifiedDate":"2021-08-31"},{"lineNumber":77,"author":{"gitId":"WangGLJoseph"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"WangGLJoseph"},"content":"        fw.write(textToAppend);","lastModifiedDate":"2021-08-31"},{"lineNumber":79,"author":{"gitId":"WangGLJoseph"},"content":"        fw.close();","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":81,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":82,"author":{"gitId":"WangGLJoseph"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"WangGLJoseph":82}},{"path":"src/main/java/cs2103/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangGLJoseph"},"content":"package cs2103.duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"WangGLJoseph"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"WangGLJoseph"},"content":" * This class encapsulates a Task object.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"WangGLJoseph"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"WangGLJoseph"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"WangGLJoseph"},"content":"    protected int index;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"WangGLJoseph"},"content":"    protected String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"WangGLJoseph"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"WangGLJoseph"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"WangGLJoseph"},"content":"     * Creates a task with the specified description, isDone false by default.","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"WangGLJoseph"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"WangGLJoseph"},"content":"     * @param index       Index of the task, starting from 0.","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"WangGLJoseph"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"WangGLJoseph"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"WangGLJoseph"},"content":"    public Task(int index, String description) {","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"WangGLJoseph"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"WangGLJoseph"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"WangGLJoseph"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"WangGLJoseph"},"content":"    public int getIndex() {","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"WangGLJoseph"},"content":"        return index;","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"WangGLJoseph"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"WangGLJoseph"},"content":"     * Getter method for status using isDone.","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"WangGLJoseph"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"WangGLJoseph"},"content":"     * @return A letter \u0027X\u0027 if task is complete, an empty space if otherwise.","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"WangGLJoseph"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"WangGLJoseph"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"WangGLJoseph"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"WangGLJoseph"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"WangGLJoseph"},"content":"     * Setter method for isDone of a Task object.","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"WangGLJoseph"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"WangGLJoseph"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"WangGLJoseph"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"WangGLJoseph"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"WangGLJoseph"},"content":"     * Returns string representation of Task.","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"WangGLJoseph"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"WangGLJoseph"},"content":"     * @return String representation of Task.","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"WangGLJoseph"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"WangGLJoseph"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"WangGLJoseph"},"content":"        return (\"[\" + getStatusIcon() + \"] \" + description);","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"WangGLJoseph"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"WangGLJoseph":53}},{"path":"src/main/java/cs2103/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangGLJoseph"},"content":"package cs2103.duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"WangGLJoseph"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"WangGLJoseph"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"WangGLJoseph"},"content":" * This class encapsulates a TaskList object, which represents all the tasks added by a user.","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"WangGLJoseph"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"WangGLJoseph"},"content":"public class TaskList {","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"WangGLJoseph"},"content":"    private ArrayList\u003cTask\u003e taskArrayList;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"WangGLJoseph"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"WangGLJoseph"},"content":"     * This constructor instantiates a new Tasklist with no tasks inside.","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"WangGLJoseph"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"WangGLJoseph"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"WangGLJoseph"},"content":"        taskArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"WangGLJoseph"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"WangGLJoseph"},"content":"     * This constructor instantiates a new TaskList with tasks provided by the input taskArrayList.","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"WangGLJoseph"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"WangGLJoseph"},"content":"     * @param taskArrayList The ArrayList containing the tasks with which to instantiate the new TaskList object.","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"WangGLJoseph"},"content":"     * @throws DukeException If an invalid input is detected.","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"WangGLJoseph"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"WangGLJoseph"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskArrayList) throws DukeException {","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"WangGLJoseph"},"content":"        this.taskArrayList \u003d taskArrayList;","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"WangGLJoseph"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"WangGLJoseph"},"content":"     * This method takes the user\u0027s input list and beautifies it for display.","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"WangGLJoseph"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"WangGLJoseph"},"content":"     * @return The beautified string to display.","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"WangGLJoseph"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"WangGLJoseph"},"content":"    public String listBeautify() {","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"WangGLJoseph"},"content":"        StringBuilder listBeautified \u003d new StringBuilder();","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"WangGLJoseph"},"content":"        for (int i \u003d 0; i \u003c taskArrayList.size(); i++) {","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"WangGLJoseph"},"content":"            listBeautified.append(taskArrayList.get(i).getIndex() + 1)","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"WangGLJoseph"},"content":"                    .append(\".\")","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"WangGLJoseph"},"content":"                    .append(taskArrayList.get(i).toString());","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"WangGLJoseph"},"content":"            if (i \u003c taskArrayList.size() - 1) { // new line except for last item","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"WangGLJoseph"},"content":"                listBeautified.append(\"\\n\");","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"WangGLJoseph"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"WangGLJoseph"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"WangGLJoseph"},"content":"        return listBeautified.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"WangGLJoseph"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"WangGLJoseph"},"content":"     * Validates input string to ensure it follows the valid format YYYY-MM-DD, and is a valid date.","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"WangGLJoseph"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"WangGLJoseph"},"content":"     * @param input The string to be validated.","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"WangGLJoseph"},"content":"     * @return True if the string is a valid date.","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"WangGLJoseph"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"WangGLJoseph"},"content":"    public boolean isValidDate(String input) {","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"WangGLJoseph"},"content":"        String[] splitInputs \u003d input.split(\"-\");","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"WangGLJoseph"},"content":"        if (splitInputs.length !\u003d 3) {","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"WangGLJoseph"},"content":"            return false;","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"WangGLJoseph"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"WangGLJoseph"},"content":"        boolean isLeapYear;","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"WangGLJoseph"},"content":"        String year \u003d splitInputs[0];","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"WangGLJoseph"},"content":"        String month \u003d splitInputs[1];","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"WangGLJoseph"},"content":"        String day \u003d splitInputs[2];","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"WangGLJoseph"},"content":"        int maxDay;","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"WangGLJoseph"},"content":"        // check year","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"WangGLJoseph"},"content":"        if (year.length() !\u003d 4 || !year.matches(\"\\\\d+\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"WangGLJoseph"},"content":"            return false;","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"WangGLJoseph"},"content":"        } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"WangGLJoseph"},"content":"            isLeapYear \u003d (Integer.parseInt(year) % 4 \u003d\u003d 0);","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"WangGLJoseph"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"WangGLJoseph"},"content":"        // check month","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"WangGLJoseph"},"content":"        if (month.length() !\u003d 2 || !month.matches(\"\\\\d+\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"WangGLJoseph"},"content":"            return false;","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"WangGLJoseph"},"content":"        } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"WangGLJoseph"},"content":"            switch (Integer.parseInt(month)) {","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"WangGLJoseph"},"content":"            case 1:","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"WangGLJoseph"},"content":"            case 3:","lastModifiedDate":"2021-08-31"},{"lineNumber":77,"author":{"gitId":"WangGLJoseph"},"content":"            case 5:","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"WangGLJoseph"},"content":"            case 7:","lastModifiedDate":"2021-08-31"},{"lineNumber":79,"author":{"gitId":"WangGLJoseph"},"content":"            case 8:","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"WangGLJoseph"},"content":"            case 10:","lastModifiedDate":"2021-08-31"},{"lineNumber":81,"author":{"gitId":"WangGLJoseph"},"content":"            case 12:","lastModifiedDate":"2021-08-31"},{"lineNumber":82,"author":{"gitId":"WangGLJoseph"},"content":"                maxDay \u003d 31;","lastModifiedDate":"2021-08-31"},{"lineNumber":83,"author":{"gitId":"WangGLJoseph"},"content":"                break;","lastModifiedDate":"2021-08-31"},{"lineNumber":84,"author":{"gitId":"WangGLJoseph"},"content":"            case 4:","lastModifiedDate":"2021-08-31"},{"lineNumber":85,"author":{"gitId":"WangGLJoseph"},"content":"            case 6:","lastModifiedDate":"2021-08-31"},{"lineNumber":86,"author":{"gitId":"WangGLJoseph"},"content":"            case 9:","lastModifiedDate":"2021-08-31"},{"lineNumber":87,"author":{"gitId":"WangGLJoseph"},"content":"            case 11:","lastModifiedDate":"2021-08-31"},{"lineNumber":88,"author":{"gitId":"WangGLJoseph"},"content":"                maxDay \u003d 30;","lastModifiedDate":"2021-08-31"},{"lineNumber":89,"author":{"gitId":"WangGLJoseph"},"content":"                break;","lastModifiedDate":"2021-08-31"},{"lineNumber":90,"author":{"gitId":"WangGLJoseph"},"content":"            case 2:","lastModifiedDate":"2021-08-31"},{"lineNumber":91,"author":{"gitId":"WangGLJoseph"},"content":"                if (isLeapYear) {","lastModifiedDate":"2021-08-31"},{"lineNumber":92,"author":{"gitId":"WangGLJoseph"},"content":"                    maxDay \u003d 29;","lastModifiedDate":"2021-08-31"},{"lineNumber":93,"author":{"gitId":"WangGLJoseph"},"content":"                } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":94,"author":{"gitId":"WangGLJoseph"},"content":"                    maxDay \u003d 28;","lastModifiedDate":"2021-08-31"},{"lineNumber":95,"author":{"gitId":"WangGLJoseph"},"content":"                }","lastModifiedDate":"2021-08-31"},{"lineNumber":96,"author":{"gitId":"WangGLJoseph"},"content":"                break;","lastModifiedDate":"2021-08-31"},{"lineNumber":97,"author":{"gitId":"WangGLJoseph"},"content":"            default:","lastModifiedDate":"2021-08-31"},{"lineNumber":98,"author":{"gitId":"WangGLJoseph"},"content":"                return false;","lastModifiedDate":"2021-08-31"},{"lineNumber":99,"author":{"gitId":"WangGLJoseph"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":100,"author":{"gitId":"WangGLJoseph"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":101,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":102,"author":{"gitId":"WangGLJoseph"},"content":"        // check day","lastModifiedDate":"2021-08-31"},{"lineNumber":103,"author":{"gitId":"WangGLJoseph"},"content":"        if (day.length() !\u003d 2 || !day.matches(\"\\\\d+\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":104,"author":{"gitId":"WangGLJoseph"},"content":"            return false;","lastModifiedDate":"2021-08-31"},{"lineNumber":105,"author":{"gitId":"WangGLJoseph"},"content":"        } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":106,"author":{"gitId":"WangGLJoseph"},"content":"            return Integer.parseInt(day) \u003c\u003d maxDay;","lastModifiedDate":"2021-08-31"},{"lineNumber":107,"author":{"gitId":"WangGLJoseph"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":108,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":109,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":110,"author":{"gitId":"WangGLJoseph"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":111,"author":{"gitId":"WangGLJoseph"},"content":"     * Adds a task into the task list.","lastModifiedDate":"2021-08-31"},{"lineNumber":112,"author":{"gitId":"WangGLJoseph"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":113,"author":{"gitId":"WangGLJoseph"},"content":"     * @param type        The type of task to be added.","lastModifiedDate":"2021-09-01"},{"lineNumber":114,"author":{"gitId":"WangGLJoseph"},"content":"     * @param name        The name of task to be added.","lastModifiedDate":"2021-09-01"},{"lineNumber":115,"author":{"gitId":"WangGLJoseph"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-09-01"},{"lineNumber":116,"author":{"gitId":"WangGLJoseph"},"content":"     * @return String representing the newly added task.","lastModifiedDate":"2021-09-01"},{"lineNumber":117,"author":{"gitId":"WangGLJoseph"},"content":"     * @throws DukeException if the user input is invalid.","lastModifiedDate":"2021-09-01"},{"lineNumber":118,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":119,"author":{"gitId":"WangGLJoseph"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":120,"author":{"gitId":"WangGLJoseph"},"content":"    public String addTask(String type, String name, String description) throws DukeException {","lastModifiedDate":"2021-08-31"},{"lineNumber":121,"author":{"gitId":"WangGLJoseph"},"content":"        switch (type) {","lastModifiedDate":"2021-08-31"},{"lineNumber":122,"author":{"gitId":"WangGLJoseph"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-31"},{"lineNumber":123,"author":{"gitId":"WangGLJoseph"},"content":"            if (name.trim().equals(\"\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":124,"author":{"gitId":"WangGLJoseph"},"content":"                throw new DukeException(\"No task name\");","lastModifiedDate":"2021-08-31"},{"lineNumber":125,"author":{"gitId":"WangGLJoseph"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":126,"author":{"gitId":"WangGLJoseph"},"content":"            Task newestTodo \u003d new ToDo(taskArrayList.size(), name);","lastModifiedDate":"2021-09-01"},{"lineNumber":127,"author":{"gitId":"WangGLJoseph"},"content":"            taskArrayList.add(newestTodo);","lastModifiedDate":"2021-08-31"},{"lineNumber":128,"author":{"gitId":"WangGLJoseph"},"content":"            return (\"New todo task added:\\n\"","lastModifiedDate":"2021-09-18"},{"lineNumber":129,"author":{"gitId":"WangGLJoseph"},"content":"                    + newestTodo","lastModifiedDate":"2021-08-31"},{"lineNumber":130,"author":{"gitId":"WangGLJoseph"},"content":"                    + \"\\nYou now have \"","lastModifiedDate":"2021-08-31"},{"lineNumber":131,"author":{"gitId":"WangGLJoseph"},"content":"                    + taskArrayList.size()","lastModifiedDate":"2021-08-31"},{"lineNumber":132,"author":{"gitId":"WangGLJoseph"},"content":"                    + \" item(s) in your task list.\");","lastModifiedDate":"2021-09-18"},{"lineNumber":133,"author":{"gitId":"WangGLJoseph"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-31"},{"lineNumber":134,"author":{"gitId":"WangGLJoseph"},"content":"            if (!isValidDate(description)) {","lastModifiedDate":"2021-08-31"},{"lineNumber":135,"author":{"gitId":"WangGLJoseph"},"content":"                throw new DukeException(\"Invalid Date, please follow the format YYYY-MM-DD\");","lastModifiedDate":"2021-08-31"},{"lineNumber":136,"author":{"gitId":"WangGLJoseph"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":137,"author":{"gitId":"WangGLJoseph"},"content":"            Task newestDeadline \u003d new Deadline(taskArrayList.size(), name, description);","lastModifiedDate":"2021-09-01"},{"lineNumber":138,"author":{"gitId":"WangGLJoseph"},"content":"            taskArrayList.add(newestDeadline);","lastModifiedDate":"2021-08-31"},{"lineNumber":139,"author":{"gitId":"WangGLJoseph"},"content":"            return (\"New deadline task added:\\n\"","lastModifiedDate":"2021-09-18"},{"lineNumber":140,"author":{"gitId":"WangGLJoseph"},"content":"                    + newestDeadline","lastModifiedDate":"2021-08-31"},{"lineNumber":141,"author":{"gitId":"WangGLJoseph"},"content":"                    + \"\\nYou now have \"","lastModifiedDate":"2021-08-31"},{"lineNumber":142,"author":{"gitId":"WangGLJoseph"},"content":"                    + taskArrayList.size()","lastModifiedDate":"2021-08-31"},{"lineNumber":143,"author":{"gitId":"WangGLJoseph"},"content":"                    + \" item(s) in your task list.\");","lastModifiedDate":"2021-09-18"},{"lineNumber":144,"author":{"gitId":"WangGLJoseph"},"content":"        case \"event\":","lastModifiedDate":"2021-08-31"},{"lineNumber":145,"author":{"gitId":"WangGLJoseph"},"content":"            if (!isValidDate(description)) {","lastModifiedDate":"2021-08-31"},{"lineNumber":146,"author":{"gitId":"WangGLJoseph"},"content":"                throw new DukeException(\"Invalid Date, please follow the format YYYY-MM-DD\");","lastModifiedDate":"2021-08-31"},{"lineNumber":147,"author":{"gitId":"WangGLJoseph"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":148,"author":{"gitId":"WangGLJoseph"},"content":"            Task newestEvent \u003d new Event(taskArrayList.size(), name, description);","lastModifiedDate":"2021-09-01"},{"lineNumber":149,"author":{"gitId":"WangGLJoseph"},"content":"            taskArrayList.add(newestEvent);","lastModifiedDate":"2021-08-31"},{"lineNumber":150,"author":{"gitId":"WangGLJoseph"},"content":"            return (\"New deadline task added:\\n\"","lastModifiedDate":"2021-09-18"},{"lineNumber":151,"author":{"gitId":"WangGLJoseph"},"content":"                    + newestEvent","lastModifiedDate":"2021-08-31"},{"lineNumber":152,"author":{"gitId":"WangGLJoseph"},"content":"                    + \"\\nYou now have \"","lastModifiedDate":"2021-08-31"},{"lineNumber":153,"author":{"gitId":"WangGLJoseph"},"content":"                    + taskArrayList.size()","lastModifiedDate":"2021-08-31"},{"lineNumber":154,"author":{"gitId":"WangGLJoseph"},"content":"                    + \" item(s) in your task list.\");","lastModifiedDate":"2021-09-18"},{"lineNumber":155,"author":{"gitId":"WangGLJoseph"},"content":"        default:","lastModifiedDate":"2021-08-31"},{"lineNumber":156,"author":{"gitId":"WangGLJoseph"},"content":"            throw new DukeException(\"Unknown task type\");","lastModifiedDate":"2021-08-31"},{"lineNumber":157,"author":{"gitId":"WangGLJoseph"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":158,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":159,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":160,"author":{"gitId":"WangGLJoseph"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":161,"author":{"gitId":"WangGLJoseph"},"content":"     * This method lists all tasks in the TaskList.","lastModifiedDate":"2021-09-01"},{"lineNumber":162,"author":{"gitId":"WangGLJoseph"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":163,"author":{"gitId":"WangGLJoseph"},"content":"     * @return A string representing all tasks in the TaskList.","lastModifiedDate":"2021-09-01"},{"lineNumber":164,"author":{"gitId":"WangGLJoseph"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":165,"author":{"gitId":"WangGLJoseph"},"content":"    public String listTasks() {","lastModifiedDate":"2021-08-31"},{"lineNumber":166,"author":{"gitId":"WangGLJoseph"},"content":"        return (listBeautify());","lastModifiedDate":"2021-09-18"},{"lineNumber":167,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":168,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":169,"author":{"gitId":"WangGLJoseph"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":170,"author":{"gitId":"WangGLJoseph"},"content":"     * This method marks a task as finished, and returns a string informing the user of the change.","lastModifiedDate":"2021-09-01"},{"lineNumber":171,"author":{"gitId":"WangGLJoseph"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":172,"author":{"gitId":"WangGLJoseph"},"content":"     * @param index The index of the task to be marked, the first task will have an index of 1.","lastModifiedDate":"2021-09-01"},{"lineNumber":173,"author":{"gitId":"WangGLJoseph"},"content":"     * @return A string informing the user of the change.","lastModifiedDate":"2021-09-01"},{"lineNumber":174,"author":{"gitId":"WangGLJoseph"},"content":"     * @throws DukeException If the user specified an invalid index.","lastModifiedDate":"2021-09-01"},{"lineNumber":175,"author":{"gitId":"WangGLJoseph"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":176,"author":{"gitId":"WangGLJoseph"},"content":"    public String finishTask(int index) throws DukeException {","lastModifiedDate":"2021-08-31"},{"lineNumber":177,"author":{"gitId":"WangGLJoseph"},"content":"        if (index \u003e taskArrayList.size()) {","lastModifiedDate":"2021-08-31"},{"lineNumber":178,"author":{"gitId":"WangGLJoseph"},"content":"            throw new DukeException(\"This task index is not in the task list!\");","lastModifiedDate":"2021-08-31"},{"lineNumber":179,"author":{"gitId":"WangGLJoseph"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":180,"author":{"gitId":"WangGLJoseph"},"content":"        taskArrayList.get(index - 1).markAsDone();","lastModifiedDate":"2021-08-31"},{"lineNumber":181,"author":{"gitId":"WangGLJoseph"},"content":"        return (\"Congratulations! You have finished this task:\\n\"","lastModifiedDate":"2021-09-18"},{"lineNumber":182,"author":{"gitId":"WangGLJoseph"},"content":"                + taskArrayList.get(index - 1).toString());","lastModifiedDate":"2021-09-18"},{"lineNumber":183,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":184,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":185,"author":{"gitId":"WangGLJoseph"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":186,"author":{"gitId":"WangGLJoseph"},"content":"     * This method removes a task from the TaskList, and lets the user know which task was removed.","lastModifiedDate":"2021-09-01"},{"lineNumber":187,"author":{"gitId":"WangGLJoseph"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":188,"author":{"gitId":"WangGLJoseph"},"content":"     * @param index The index of the task to be deleted, the first task will have an index of 1.","lastModifiedDate":"2021-09-01"},{"lineNumber":189,"author":{"gitId":"WangGLJoseph"},"content":"     * @return A string informing the user of the deletion.","lastModifiedDate":"2021-09-01"},{"lineNumber":190,"author":{"gitId":"WangGLJoseph"},"content":"     * @throws DukeException If the user specified an invalid index.","lastModifiedDate":"2021-09-01"},{"lineNumber":191,"author":{"gitId":"WangGLJoseph"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":192,"author":{"gitId":"WangGLJoseph"},"content":"    public String deleteTask(int index) throws DukeException {","lastModifiedDate":"2021-08-31"},{"lineNumber":193,"author":{"gitId":"WangGLJoseph"},"content":"        if (index \u003e taskArrayList.size()) {","lastModifiedDate":"2021-08-31"},{"lineNumber":194,"author":{"gitId":"WangGLJoseph"},"content":"            throw new DukeException(\"This task index is not in the task list!\");","lastModifiedDate":"2021-08-31"},{"lineNumber":195,"author":{"gitId":"WangGLJoseph"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":196,"author":{"gitId":"WangGLJoseph"},"content":"        String deleteMessage \u003d (\"Got it, I have deleted this task:\\n\"","lastModifiedDate":"2021-09-18"},{"lineNumber":197,"author":{"gitId":"WangGLJoseph"},"content":"                + taskArrayList.get(index - 1).toString()","lastModifiedDate":"2021-08-31"},{"lineNumber":198,"author":{"gitId":"WangGLJoseph"},"content":"                + \"\\nYou now have \"","lastModifiedDate":"2021-08-31"},{"lineNumber":199,"author":{"gitId":"WangGLJoseph"},"content":"                + (taskArrayList.size() - 1)","lastModifiedDate":"2021-08-31"},{"lineNumber":200,"author":{"gitId":"WangGLJoseph"},"content":"                + \" item(s) in your task list.\");","lastModifiedDate":"2021-09-18"},{"lineNumber":201,"author":{"gitId":"WangGLJoseph"},"content":"        // actual logic of deletion","lastModifiedDate":"2021-08-31"},{"lineNumber":202,"author":{"gitId":"WangGLJoseph"},"content":"        taskArrayList.remove(index - 1);","lastModifiedDate":"2021-08-31"},{"lineNumber":203,"author":{"gitId":"WangGLJoseph"},"content":"        return deleteMessage;","lastModifiedDate":"2021-08-31"},{"lineNumber":204,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":205,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":206,"author":{"gitId":"WangGLJoseph"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":207,"author":{"gitId":"WangGLJoseph"},"content":"     * This method finds all tasks matching a keyword entered by the user.","lastModifiedDate":"2021-09-01"},{"lineNumber":208,"author":{"gitId":"WangGLJoseph"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":209,"author":{"gitId":"WangGLJoseph"},"content":"     * @param keyword The keyword to match tasks to.","lastModifiedDate":"2021-09-01"},{"lineNumber":210,"author":{"gitId":"WangGLJoseph"},"content":"     * @return All tasks matching the keyword.","lastModifiedDate":"2021-09-01"},{"lineNumber":211,"author":{"gitId":"WangGLJoseph"},"content":"     * @throws DukeException If keyword is invalid.","lastModifiedDate":"2021-09-01"},{"lineNumber":212,"author":{"gitId":"WangGLJoseph"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":213,"author":{"gitId":"WangGLJoseph"},"content":"    public String findTasks(String keyword) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":214,"author":{"gitId":"WangGLJoseph"},"content":"        // if \u0027keyword\u0027 contains more than one word or any spaces","lastModifiedDate":"2021-09-01"},{"lineNumber":215,"author":{"gitId":"WangGLJoseph"},"content":"        if (keyword.trim().split(\"\\\\s+\").length \u003e 1) {","lastModifiedDate":"2021-09-01"},{"lineNumber":216,"author":{"gitId":"WangGLJoseph"},"content":"            throw new DukeException(\"Invalid keyword, please enter only one keyword without blanks\");","lastModifiedDate":"2021-09-01"},{"lineNumber":217,"author":{"gitId":"WangGLJoseph"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":218,"author":{"gitId":"WangGLJoseph"},"content":"            ArrayList\u003cTask\u003e subList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-01"},{"lineNumber":219,"author":{"gitId":"WangGLJoseph"},"content":"            for (Task task : taskArrayList) { // for each task in the taskArrayList","lastModifiedDate":"2021-09-01"},{"lineNumber":220,"author":{"gitId":"WangGLJoseph"},"content":"                if (task.description.contains(keyword)) { // add task to subList if contains keyword","lastModifiedDate":"2021-09-01"},{"lineNumber":221,"author":{"gitId":"WangGLJoseph"},"content":"                    subList.add(task);","lastModifiedDate":"2021-09-01"},{"lineNumber":222,"author":{"gitId":"WangGLJoseph"},"content":"                }","lastModifiedDate":"2021-09-01"},{"lineNumber":223,"author":{"gitId":"WangGLJoseph"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":224,"author":{"gitId":"WangGLJoseph"},"content":"            if (subList.isEmpty()) {","lastModifiedDate":"2021-09-01"},{"lineNumber":225,"author":{"gitId":"WangGLJoseph"},"content":"                return (\"No matches found for keyword: \" + keyword.trim());","lastModifiedDate":"2021-09-01"},{"lineNumber":226,"author":{"gitId":"WangGLJoseph"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":227,"author":{"gitId":"WangGLJoseph"},"content":"            TaskList matchedTaskList \u003d new TaskList(subList);","lastModifiedDate":"2021-09-01"},{"lineNumber":228,"author":{"gitId":"WangGLJoseph"},"content":"            return (\"Here are the matching tasks in your list:\\n\"","lastModifiedDate":"2021-09-18"},{"lineNumber":229,"author":{"gitId":"WangGLJoseph"},"content":"                    + matchedTaskList.listBeautify()","lastModifiedDate":"2021-09-01"},{"lineNumber":230,"author":{"gitId":"WangGLJoseph"},"content":"            );","lastModifiedDate":"2021-09-01"},{"lineNumber":231,"author":{"gitId":"WangGLJoseph"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":232,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":233,"author":{"gitId":"WangGLJoseph"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"WangGLJoseph":233}},{"path":"src/main/java/cs2103/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangGLJoseph"},"content":"package cs2103.duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"WangGLJoseph"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"WangGLJoseph"},"content":" * This class encapsulates a Todo Task object, which inherits from the Task class.","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"WangGLJoseph"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"WangGLJoseph"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"WangGLJoseph"},"content":"    protected int index;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"WangGLJoseph"},"content":"    protected String description;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"WangGLJoseph"},"content":"    public ToDo(int index, String description) {","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"WangGLJoseph"},"content":"        super(index, description);","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"WangGLJoseph"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"WangGLJoseph"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"WangGLJoseph"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"WangGLJoseph"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"WangGLJoseph"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"WangGLJoseph"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"WangGLJoseph":20}},{"path":"src/main/java/cs2103/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangGLJoseph"},"content":"package cs2103.duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"WangGLJoseph"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"WangGLJoseph"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"WangGLJoseph"},"content":" * This class encapsulates an Ui object, which abstracts the user interactions with Duke out of","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"WangGLJoseph"},"content":" * the Duke class.","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"WangGLJoseph"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"WangGLJoseph"},"content":"public class Ui {","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"WangGLJoseph"},"content":"    private static final int lv \u003d 10;","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"WangGLJoseph"},"content":"    private static final String[] features \u003d {","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"WangGLJoseph"},"content":"            \"\",","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"WangGLJoseph"},"content":"            \"Greet, Echo, Exit, \",","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"WangGLJoseph"},"content":"            \"Add, List, \\n\",","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"WangGLJoseph"},"content":"            \"Mark as Done, \",","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"WangGLJoseph"},"content":"            \"ToDos, Events, Deadlines, \",","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"WangGLJoseph"},"content":"            \"Handle Errors, \\n\",","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"WangGLJoseph"},"content":"            \"Delete, \",","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"WangGLJoseph"},"content":"            \"Save, \",","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"WangGLJoseph"},"content":"            \"Dates and Times, \",","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"WangGLJoseph"},"content":"            \"Find\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"WangGLJoseph"},"content":"    };","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"WangGLJoseph"},"content":"    private final Storage storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"WangGLJoseph"},"content":"    private static TaskList taskArrayList;","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"WangGLJoseph"},"content":"    public Ui(Storage storage, TaskList tasks) {","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"WangGLJoseph"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"WangGLJoseph"},"content":"        taskArrayList \u003d tasks;","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"WangGLJoseph"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"WangGLJoseph"},"content":"     * Shows the welcome message when the user runs Duke.","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"WangGLJoseph"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"WangGLJoseph"},"content":"     * @return the welcome message to the user.","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"WangGLJoseph"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"WangGLJoseph"},"content":"    public String showWelcome() {","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"WangGLJoseph"},"content":"        // populating featuresCombined so each level has all elements of levels before it","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"WangGLJoseph"},"content":"        StringBuilder featuresCombined \u003d new StringBuilder();","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"WangGLJoseph"},"content":"        for (int count \u003d 0; count \u003c\u003d lv; count++) {","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"WangGLJoseph"},"content":"            featuresCombined.append(features[count]);","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"WangGLJoseph"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"WangGLJoseph"},"content":"        // Welcome message","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"WangGLJoseph"},"content":"        String welcome \u003d \"Hello! I\u0027m Duke: Level \" + lv + \"\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"WangGLJoseph"},"content":"                + \"What would you like to do today?\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"WangGLJoseph"},"content":"                + \"My current features are: \" + featuresCombined + \"\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"WangGLJoseph"},"content":"                + \"Here are your tasks: \" + \"\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"WangGLJoseph"},"content":"                + taskArrayList.listBeautify();","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"WangGLJoseph"},"content":"        return welcome;","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"WangGLJoseph"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"WangGLJoseph"},"content":"     * Shows the goodbye message when the user exits Duke.","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"WangGLJoseph"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"WangGLJoseph"},"content":"     * @return The goodbye message to the user.","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"WangGLJoseph"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"WangGLJoseph"},"content":"    public String showGoodbye() {","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"WangGLJoseph"},"content":"        // Goodbye message","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"WangGLJoseph"},"content":"        String goodbye \u003d \"Thank you for using Duke: Level \" + lv + \"\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"WangGLJoseph"},"content":"                + \"See you soon!\";","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"WangGLJoseph"},"content":"        return goodbye;","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"WangGLJoseph"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"WangGLJoseph"},"content":"     * Reads user\u0027s inputs and responds to it accordingly.","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"WangGLJoseph"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"WangGLJoseph"},"content":"     * @param input The information entered by the user after the command.","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"WangGLJoseph"},"content":"     * @param tasks The Tasklist object containing all currently present tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"WangGLJoseph"},"content":"     * @return The string representing the task added by the user.","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"WangGLJoseph"},"content":"     * @throws DukeException If user enters an invalid input.","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"WangGLJoseph"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"WangGLJoseph"},"content":"    public String handleInput(String input, TaskList tasks) throws DukeException, IOException {","lastModifiedDate":"2021-09-18"},{"lineNumber":74,"author":{"gitId":"WangGLJoseph"},"content":"        // parse out the first word from input as the user\u0027s command","lastModifiedDate":"2021-09-18"},{"lineNumber":75,"author":{"gitId":"WangGLJoseph"},"content":"        String[] userInputs \u003d input.split(\"\\\\s+\", 2);","lastModifiedDate":"2021-09-18"},{"lineNumber":76,"author":{"gitId":"WangGLJoseph"},"content":"        String command \u003d userInputs[0];","lastModifiedDate":"2021-09-18"},{"lineNumber":77,"author":{"gitId":"WangGLJoseph"},"content":"        String remainingInput \u003d \"\";","lastModifiedDate":"2021-09-18"},{"lineNumber":78,"author":{"gitId":"WangGLJoseph"},"content":"        if (userInputs.length \u003e 1) {","lastModifiedDate":"2021-09-18"},{"lineNumber":79,"author":{"gitId":"WangGLJoseph"},"content":"            remainingInput \u003d userInputs[1];","lastModifiedDate":"2021-09-18"},{"lineNumber":80,"author":{"gitId":"WangGLJoseph"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":81,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":82,"author":{"gitId":"WangGLJoseph"},"content":"        switch (command) {","lastModifiedDate":"2021-09-18"},{"lineNumber":83,"author":{"gitId":"WangGLJoseph"},"content":"            case \"bye\":","lastModifiedDate":"2021-09-18"},{"lineNumber":84,"author":{"gitId":"WangGLJoseph"},"content":"                storage.overwriteFile(taskArrayList.listBeautify());","lastModifiedDate":"2021-09-18"},{"lineNumber":85,"author":{"gitId":"WangGLJoseph"},"content":"                return showGoodbye();","lastModifiedDate":"2021-09-18"},{"lineNumber":86,"author":{"gitId":"WangGLJoseph"},"content":"            case \"list\":  // user inputs \u0027list\u0027, return all text stored","lastModifiedDate":"2021-08-31"},{"lineNumber":87,"author":{"gitId":"WangGLJoseph"},"content":"                return tasks.listTasks();","lastModifiedDate":"2021-08-31"},{"lineNumber":88,"author":{"gitId":"WangGLJoseph"},"content":"            case \"done\":  // first input is done, check second input for integer","lastModifiedDate":"2021-08-31"},{"lineNumber":89,"author":{"gitId":"WangGLJoseph"},"content":"                if (remainingInput \u003d\u003d null) {","lastModifiedDate":"2021-09-18"},{"lineNumber":90,"author":{"gitId":"WangGLJoseph"},"content":"                    throw new DukeException(\"unspecified task to mark as done\");","lastModifiedDate":"2021-09-18"},{"lineNumber":91,"author":{"gitId":"WangGLJoseph"},"content":"                } else {","lastModifiedDate":"2021-09-18"},{"lineNumber":92,"author":{"gitId":"WangGLJoseph"},"content":"                    try {","lastModifiedDate":"2021-09-18"},{"lineNumber":93,"author":{"gitId":"WangGLJoseph"},"content":"                        int taskNumber \u003d Integer.parseInt(remainingInput);","lastModifiedDate":"2021-09-18"},{"lineNumber":94,"author":{"gitId":"WangGLJoseph"},"content":"                        return tasks.finishTask(taskNumber);","lastModifiedDate":"2021-09-18"},{"lineNumber":95,"author":{"gitId":"WangGLJoseph"},"content":"                    } catch (NumberFormatException ex) {","lastModifiedDate":"2021-09-18"},{"lineNumber":96,"author":{"gitId":"WangGLJoseph"},"content":"                        ex.printStackTrace();","lastModifiedDate":"2021-09-18"},{"lineNumber":97,"author":{"gitId":"WangGLJoseph"},"content":"                    }","lastModifiedDate":"2021-09-18"},{"lineNumber":98,"author":{"gitId":"WangGLJoseph"},"content":"                }","lastModifiedDate":"2021-09-18"},{"lineNumber":99,"author":{"gitId":"WangGLJoseph"},"content":"            case \"delete\":","lastModifiedDate":"2021-08-31"},{"lineNumber":100,"author":{"gitId":"WangGLJoseph"},"content":"                if (remainingInput \u003d\u003d null) {","lastModifiedDate":"2021-09-18"},{"lineNumber":101,"author":{"gitId":"WangGLJoseph"},"content":"                    throw new DukeException(\"unspecified task to delete\");","lastModifiedDate":"2021-09-18"},{"lineNumber":102,"author":{"gitId":"WangGLJoseph"},"content":"                } else {","lastModifiedDate":"2021-09-18"},{"lineNumber":103,"author":{"gitId":"WangGLJoseph"},"content":"                    try {","lastModifiedDate":"2021-09-18"},{"lineNumber":104,"author":{"gitId":"WangGLJoseph"},"content":"                        int taskNumber \u003d Integer.parseInt(remainingInput);","lastModifiedDate":"2021-09-18"},{"lineNumber":105,"author":{"gitId":"WangGLJoseph"},"content":"                        return tasks.deleteTask(taskNumber);","lastModifiedDate":"2021-09-18"},{"lineNumber":106,"author":{"gitId":"WangGLJoseph"},"content":"                    } catch (NumberFormatException ex) {","lastModifiedDate":"2021-09-18"},{"lineNumber":107,"author":{"gitId":"WangGLJoseph"},"content":"                        ex.printStackTrace();","lastModifiedDate":"2021-09-18"},{"lineNumber":108,"author":{"gitId":"WangGLJoseph"},"content":"                    }","lastModifiedDate":"2021-09-18"},{"lineNumber":109,"author":{"gitId":"WangGLJoseph"},"content":"                }","lastModifiedDate":"2021-09-18"},{"lineNumber":110,"author":{"gitId":"WangGLJoseph"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-31"},{"lineNumber":111,"author":{"gitId":"WangGLJoseph"},"content":"                if (remainingInput.trim().equals(\"\")) {","lastModifiedDate":"2021-09-18"},{"lineNumber":112,"author":{"gitId":"WangGLJoseph"},"content":"                    throw new DukeException(\"No task description\");","lastModifiedDate":"2021-08-31"},{"lineNumber":113,"author":{"gitId":"WangGLJoseph"},"content":"                }","lastModifiedDate":"2021-08-31"},{"lineNumber":114,"author":{"gitId":"WangGLJoseph"},"content":"                return tasks.addTask(\"todo\", remainingInput, \"\");","lastModifiedDate":"2021-09-18"},{"lineNumber":115,"author":{"gitId":"WangGLJoseph"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-31"},{"lineNumber":116,"author":{"gitId":"WangGLJoseph"},"content":"                String[] deadlineTokens \u003d remainingInput.split(\"\\\\s*/by\\\\s*\");","lastModifiedDate":"2021-09-18"},{"lineNumber":117,"author":{"gitId":"WangGLJoseph"},"content":"                if (deadlineTokens.length \u003d\u003d 0) {","lastModifiedDate":"2021-08-31"},{"lineNumber":118,"author":{"gitId":"WangGLJoseph"},"content":"                    throw new DukeException(\"No task description\");","lastModifiedDate":"2021-08-31"},{"lineNumber":119,"author":{"gitId":"WangGLJoseph"},"content":"                } else if (deadlineTokens.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-31"},{"lineNumber":120,"author":{"gitId":"WangGLJoseph"},"content":"                    throw new DukeException(\"No task deadline\");","lastModifiedDate":"2021-08-31"},{"lineNumber":121,"author":{"gitId":"WangGLJoseph"},"content":"                }","lastModifiedDate":"2021-08-31"},{"lineNumber":122,"author":{"gitId":"WangGLJoseph"},"content":"                String deadlineName \u003d deadlineTokens[0];","lastModifiedDate":"2021-08-31"},{"lineNumber":123,"author":{"gitId":"WangGLJoseph"},"content":"                String deadlineReminder \u003d deadlineTokens[1];","lastModifiedDate":"2021-08-31"},{"lineNumber":124,"author":{"gitId":"WangGLJoseph"},"content":"                return tasks.addTask(\"deadline\", deadlineName, deadlineReminder);","lastModifiedDate":"2021-08-31"},{"lineNumber":125,"author":{"gitId":"WangGLJoseph"},"content":"            case \"event\":","lastModifiedDate":"2021-08-31"},{"lineNumber":126,"author":{"gitId":"WangGLJoseph"},"content":"                String[] eventTokens \u003d remainingInput.split(\"\\\\s*/at\\\\s*\");","lastModifiedDate":"2021-09-18"},{"lineNumber":127,"author":{"gitId":"WangGLJoseph"},"content":"                if (eventTokens.length \u003d\u003d 0) {","lastModifiedDate":"2021-08-31"},{"lineNumber":128,"author":{"gitId":"WangGLJoseph"},"content":"                    throw new DukeException(\"No task description\");","lastModifiedDate":"2021-08-31"},{"lineNumber":129,"author":{"gitId":"WangGLJoseph"},"content":"                } else if (eventTokens.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-31"},{"lineNumber":130,"author":{"gitId":"WangGLJoseph"},"content":"                    throw new DukeException(\"No task duration\");","lastModifiedDate":"2021-08-31"},{"lineNumber":131,"author":{"gitId":"WangGLJoseph"},"content":"                }","lastModifiedDate":"2021-08-31"},{"lineNumber":132,"author":{"gitId":"WangGLJoseph"},"content":"                String eventName \u003d eventTokens[0];","lastModifiedDate":"2021-08-31"},{"lineNumber":133,"author":{"gitId":"WangGLJoseph"},"content":"                String eventReminder \u003d eventTokens[1];","lastModifiedDate":"2021-08-31"},{"lineNumber":134,"author":{"gitId":"WangGLJoseph"},"content":"                return tasks.addTask(\"event\", eventName, eventReminder);","lastModifiedDate":"2021-08-31"},{"lineNumber":135,"author":{"gitId":"WangGLJoseph"},"content":"            case \"find\":","lastModifiedDate":"2021-09-01"},{"lineNumber":136,"author":{"gitId":"WangGLJoseph"},"content":"                if (remainingInput \u003d\u003d null) {","lastModifiedDate":"2021-09-18"},{"lineNumber":137,"author":{"gitId":"WangGLJoseph"},"content":"                    throw new DukeException(\"unspecified keyword to search for\");","lastModifiedDate":"2021-09-18"},{"lineNumber":138,"author":{"gitId":"WangGLJoseph"},"content":"                } else {","lastModifiedDate":"2021-09-18"},{"lineNumber":139,"author":{"gitId":"WangGLJoseph"},"content":"                    return tasks.findTasks(remainingInput);","lastModifiedDate":"2021-09-18"},{"lineNumber":140,"author":{"gitId":"WangGLJoseph"},"content":"                }","lastModifiedDate":"2021-09-18"},{"lineNumber":141,"author":{"gitId":"WangGLJoseph"},"content":"            default:","lastModifiedDate":"2021-08-31"},{"lineNumber":142,"author":{"gitId":"WangGLJoseph"},"content":"                throw new DukeException(\"Unknown Input\"); // unknown input","lastModifiedDate":"2021-08-31"},{"lineNumber":143,"author":{"gitId":"WangGLJoseph"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":144,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":145,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":146,"author":{"gitId":"WangGLJoseph"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":147,"author":{"gitId":"WangGLJoseph"},"content":"     * Alert the user if the duke.txt could not be loaded.","lastModifiedDate":"2021-09-01"},{"lineNumber":148,"author":{"gitId":"WangGLJoseph"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":149,"author":{"gitId":"WangGLJoseph"},"content":"     * @return A string alerting the user of the error.","lastModifiedDate":"2021-09-01"},{"lineNumber":150,"author":{"gitId":"WangGLJoseph"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":151,"author":{"gitId":"WangGLJoseph"},"content":"    public String showLoadingError() {","lastModifiedDate":"2021-08-31"},{"lineNumber":152,"author":{"gitId":"WangGLJoseph"},"content":"        return (\"Loading error: duke.txt could not be loaded\");","lastModifiedDate":"2021-08-31"},{"lineNumber":153,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":154,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":155,"author":{"gitId":"WangGLJoseph"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"WangGLJoseph":155}},{"path":"src/main/java/cs2103/duke/controllers/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangGLJoseph"},"content":"package cs2103.duke.controllers;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"WangGLJoseph"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"WangGLJoseph"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"WangGLJoseph"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"WangGLJoseph"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"WangGLJoseph"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"WangGLJoseph"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"WangGLJoseph"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"WangGLJoseph"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"WangGLJoseph"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"WangGLJoseph"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"WangGLJoseph"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"WangGLJoseph"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"WangGLJoseph"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"WangGLJoseph"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"WangGLJoseph"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"WangGLJoseph"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"WangGLJoseph"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"WangGLJoseph"},"content":"    @FXML","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"WangGLJoseph"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"WangGLJoseph"},"content":"    @FXML","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"WangGLJoseph"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"WangGLJoseph"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"WangGLJoseph"},"content":"        try {","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"WangGLJoseph"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"WangGLJoseph"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"WangGLJoseph"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"WangGLJoseph"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"WangGLJoseph"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"WangGLJoseph"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"WangGLJoseph"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"WangGLJoseph"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"WangGLJoseph"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"WangGLJoseph"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"WangGLJoseph"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"WangGLJoseph"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"WangGLJoseph"},"content":"    private void flip() {","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"WangGLJoseph"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"WangGLJoseph"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"WangGLJoseph"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"WangGLJoseph"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"WangGLJoseph"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"WangGLJoseph"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"WangGLJoseph"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"WangGLJoseph"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"WangGLJoseph"},"content":"        db.flip();","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"WangGLJoseph"},"content":"        return db;","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"WangGLJoseph"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"WangGLJoseph":60}},{"path":"src/main/java/cs2103/duke/controllers/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangGLJoseph"},"content":"package cs2103.duke.controllers;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"WangGLJoseph"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"WangGLJoseph"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"WangGLJoseph"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"WangGLJoseph"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"WangGLJoseph"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"WangGLJoseph"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"WangGLJoseph"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"WangGLJoseph"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"WangGLJoseph"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"WangGLJoseph"},"content":"import cs2103.duke.Duke;","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"WangGLJoseph"},"content":"import javafx.util.Duration;","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"WangGLJoseph"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"WangGLJoseph"},"content":" * Controller for cs2103.duke.controllers.MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"WangGLJoseph"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"WangGLJoseph"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"WangGLJoseph"},"content":"    @FXML","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"WangGLJoseph"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"WangGLJoseph"},"content":"    @FXML","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"WangGLJoseph"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"WangGLJoseph"},"content":"    @FXML","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"WangGLJoseph"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"WangGLJoseph"},"content":"    @FXML","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"WangGLJoseph"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"WangGLJoseph"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"WangGLJoseph"},"content":"    private static final String WELCOME_MESSAGE \u003d \"Welcome to Duke! What would you like to do today?\";","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"WangGLJoseph"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/TheUser.png\"));","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"WangGLJoseph"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/TheDuke.png\"));","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"WangGLJoseph"},"content":"    @FXML","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"WangGLJoseph"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"WangGLJoseph"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"WangGLJoseph"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"WangGLJoseph"},"content":"                DialogBox.getDukeDialog(WELCOME_MESSAGE, dukeImage)","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"WangGLJoseph"},"content":"        );","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"WangGLJoseph"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"WangGLJoseph"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"WangGLJoseph"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"WangGLJoseph"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"WangGLJoseph"},"content":"     * the dialog container. Clears the user input after processing. Duke\u0027s image is placed on the left to","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"WangGLJoseph"},"content":"     * differentiate between user input and Dukeâ€™s output.","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"WangGLJoseph"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"WangGLJoseph"},"content":"    @FXML","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"WangGLJoseph"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"WangGLJoseph"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"WangGLJoseph"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"WangGLJoseph"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"WangGLJoseph"},"content":"            addDialog(input, response);","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"WangGLJoseph"},"content":"            // solution for delay before closing the window adapted from:","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"WangGLJoseph"},"content":"            // https://github.com/felissaf/ip/blob/master/src/main/java/myjournal/MainWindow.java.","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"WangGLJoseph"},"content":"            PauseTransition goodbyePause \u003d new PauseTransition(Duration.seconds(2));","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"WangGLJoseph"},"content":"            goodbyePause.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"WangGLJoseph"},"content":"            goodbyePause.play();","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"WangGLJoseph"},"content":"        } else {","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"WangGLJoseph"},"content":"            addDialog(input, response);","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"WangGLJoseph"},"content":"            userInput.clear();","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"WangGLJoseph"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"WangGLJoseph"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":71,"author":{"gitId":"WangGLJoseph"},"content":"     * A helper method to add dialog for the user and duke.","lastModifiedDate":"2021-09-18"},{"lineNumber":72,"author":{"gitId":"WangGLJoseph"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":73,"author":{"gitId":"WangGLJoseph"},"content":"     * @param input    The user\u0027s input.","lastModifiedDate":"2021-09-18"},{"lineNumber":74,"author":{"gitId":"WangGLJoseph"},"content":"     * @param response The duke\u0027s response.","lastModifiedDate":"2021-09-18"},{"lineNumber":75,"author":{"gitId":"WangGLJoseph"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":76,"author":{"gitId":"WangGLJoseph"},"content":"    private void addDialog(String input, String response) {","lastModifiedDate":"2021-09-18"},{"lineNumber":77,"author":{"gitId":"WangGLJoseph"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-08"},{"lineNumber":78,"author":{"gitId":"WangGLJoseph"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-08"},{"lineNumber":79,"author":{"gitId":"WangGLJoseph"},"content":"                DialogBox.getDukeDialog(response, dukeImage));","lastModifiedDate":"2021-09-18"},{"lineNumber":80,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":81,"author":{"gitId":"WangGLJoseph"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"WangGLJoseph":81}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"WangGLJoseph"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"WangGLJoseph"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"WangGLJoseph"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"WangGLJoseph"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"WangGLJoseph"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"WangGLJoseph"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"WangGLJoseph"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"WangGLJoseph"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"WangGLJoseph"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"WangGLJoseph"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"WangGLJoseph"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"WangGLJoseph"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"WangGLJoseph"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"WangGLJoseph"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"WangGLJoseph":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"WangGLJoseph"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"WangGLJoseph"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"WangGLJoseph"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"WangGLJoseph"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"WangGLJoseph"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"WangGLJoseph"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"WangGLJoseph"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"cs2103.duke.controllers.MainWindow\"\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"WangGLJoseph"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"WangGLJoseph"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"WangGLJoseph"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"WangGLJoseph"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"WangGLJoseph"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"WangGLJoseph"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"WangGLJoseph"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"WangGLJoseph"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"WangGLJoseph"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"WangGLJoseph"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"WangGLJoseph":19}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangGLJoseph"},"content":"package cs2103.duke.test;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"WangGLJoseph"},"content":"import cs2103.duke.DukeException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"WangGLJoseph"},"content":"import cs2103.duke.TaskList;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"WangGLJoseph"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"WangGLJoseph"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"WangGLJoseph"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"WangGLJoseph"},"content":" * This class encapsulates the testing for TaskList in the Duke package,","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"WangGLJoseph"},"content":" * the names of the test methods are meant to be self-explanatory.","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"WangGLJoseph"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"WangGLJoseph"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"WangGLJoseph"},"content":"    @Test","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"WangGLJoseph"},"content":"    public void dummyTest() {","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"WangGLJoseph"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"WangGLJoseph"},"content":"    @Test","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"WangGLJoseph"},"content":"    public void testAddTodo() throws DukeException {","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"WangGLJoseph"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"WangGLJoseph"},"content":"        assertEquals(\"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"WangGLJoseph"},"content":"                        + \"New todo task added:\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"WangGLJoseph"},"content":"                        + \"[T][ ]test1\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"WangGLJoseph"},"content":"                        + \"You now have 1 item(s) in your task list.\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"WangGLJoseph"},"content":"                        + \"____________________________________________________________\",","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"WangGLJoseph"},"content":"                tl.addTask(\"todo\", \"test1\", \"\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"WangGLJoseph"},"content":"    @Test","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"WangGLJoseph"},"content":"    public void testAddDeadline() throws DukeException {","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"WangGLJoseph"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"WangGLJoseph"},"content":"        assertEquals(\"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"WangGLJoseph"},"content":"                        + \"New deadline task added:\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"WangGLJoseph"},"content":"                        + \"[D][ ]ms3 (by: 2021 07 20)\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"WangGLJoseph"},"content":"                        + \"You now have 1 item(s) in your task list.\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"WangGLJoseph"},"content":"                        + \"____________________________________________________________\",","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"WangGLJoseph"},"content":"                tl.addTask(\"deadline\", \"ms3\", \"2021-07-20\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"WangGLJoseph"},"content":"    @Test","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"WangGLJoseph"},"content":"    public void testFindTask() throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"WangGLJoseph"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"WangGLJoseph"},"content":"        tl.addTask(\"todo\", \"test1\", \"\");","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"WangGLJoseph"},"content":"        tl.addTask(\"deadline\", \"ms3\", \"2021-07-20\");","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"WangGLJoseph"},"content":"        assertEquals(\"____________________________________________________________\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"WangGLJoseph"},"content":"                + \"Here are the matching tasks in your list:\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"WangGLJoseph"},"content":"                + \"1.[T][ ]test1\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"WangGLJoseph"},"content":"                + \"____________________________________________________________\",","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"WangGLJoseph"},"content":"                tl.findTasks(\"test\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"WangGLJoseph"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"WangGLJoseph":52}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"WangGLJoseph"},"content":"todo Clean room","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"WangGLJoseph"},"content":"deadline CS2103 ip week 2 /by tonight","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"WangGLJoseph"},"content":"event watch national address by PM Lee /at 8pm Friday","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"WangGLJoseph"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"WangGLJoseph"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"WangGLJoseph"},"content":"delete 3","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"WangGLJoseph"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"WangGLJoseph"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"WangGLJoseph":8}}]
