[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"WangGLJoseph"},"content":"____________________________________________________________","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"WangGLJoseph"},"content":"1.[T][ ] test1","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"WangGLJoseph"},"content":"____________________________________________________________","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"WangGLJoseph":3}},{"path":"src/main/java/cs2103/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangGLJoseph"},"content":"package cs2103.duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"WangGLJoseph"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"WangGLJoseph"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"WangGLJoseph"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"WangGLJoseph"},"content":"    protected String by;","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"WangGLJoseph"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"WangGLJoseph"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"WangGLJoseph"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"WangGLJoseph"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"WangGLJoseph"},"content":"        this.date \u003d LocalDate.parse(by);","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"WangGLJoseph"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"WangGLJoseph"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"WangGLJoseph"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"yyyy MM dd\")) + \")\";","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"WangGLJoseph"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"WangGLJoseph":21}},{"path":"src/main/java/cs2103/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangGLJoseph"},"content":"package cs2103.duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"WangGLJoseph"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"WangGLJoseph"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"WangGLJoseph"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"WangGLJoseph"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"WangGLJoseph"},"content":" * This class encapsulates a Duke chat-bot.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"WangGLJoseph"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"WangGLJoseph"},"content":"    private static ArrayList\u003cTask\u003e taskArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"WangGLJoseph"},"content":"    private static final String dukeFilePath \u003d \"./data/duke.txt\";","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"WangGLJoseph"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"WangGLJoseph"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"WangGLJoseph"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"WangGLJoseph"},"content":"    public Duke(String dukeFilePath) {","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"WangGLJoseph"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"WangGLJoseph"},"content":"        storage \u003d new Storage(dukeFilePath);","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"WangGLJoseph"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"WangGLJoseph"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"WangGLJoseph"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"WangGLJoseph"},"content":"            System.out.println(ui.showLoadingError());","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"WangGLJoseph"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"WangGLJoseph"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"WangGLJoseph"},"content":"    public void run() throws IOException {","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"WangGLJoseph"},"content":"        System.out.println(ui.showWelcome());","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"WangGLJoseph"},"content":"        boolean canExit \u003d false;","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"WangGLJoseph"},"content":"        // Scanner to read user inputs","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"WangGLJoseph"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"WangGLJoseph"},"content":"        while (!canExit) {","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"WangGLJoseph"},"content":"            String userInput \u003d scanner.next();","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"WangGLJoseph"},"content":"            try {","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"WangGLJoseph"},"content":"                if (userInput.equals(\"bye\")) { // user inputs \"bye\", set canExit to true and Exit","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"WangGLJoseph"},"content":"                    canExit \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"WangGLJoseph"},"content":"                    // store task list","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"WangGLJoseph"},"content":"                    String temp \u003d tasks.listTasks();","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"WangGLJoseph"},"content":"                    storage.overwriteFile(dukeFilePath, temp);","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"WangGLJoseph"},"content":"                    System.out.println(ui.showGoodbye());","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"WangGLJoseph"},"content":"                } else { // check first input","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"WangGLJoseph"},"content":"                    System.out.println(ui.handleInput(scanner, userInput, tasks));","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"WangGLJoseph"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"WangGLJoseph"},"content":"            } catch (DukeException | IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"WangGLJoseph"},"content":"                e.printStackTrace(); // print stack trace for e","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"WangGLJoseph"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"WangGLJoseph"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"WangGLJoseph"},"content":"    public static void main(String[] args) throws IOException, DukeException {","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"WangGLJoseph"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"WangGLJoseph":52,"-":3}},{"path":"src/main/java/cs2103/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangGLJoseph"},"content":"package cs2103.duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"WangGLJoseph"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"WangGLJoseph"},"content":"    private static String msg;","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"WangGLJoseph"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"WangGLJoseph"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"WangGLJoseph"},"content":"        msg \u003d errorMessage;","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"WangGLJoseph"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"WangGLJoseph"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"WangGLJoseph"},"content":"        return (\"Oh No! I do not understand your input due to the following problem:\\n\" + msg);","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"WangGLJoseph"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"WangGLJoseph":15}},{"path":"src/main/java/cs2103/duke/DukeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangGLJoseph"},"content":"package cs2103.duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"WangGLJoseph"},"content":"import java.io.File;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"WangGLJoseph"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"WangGLJoseph"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"WangGLJoseph"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"WangGLJoseph"},"content":"public class DukeParser {","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"WangGLJoseph"},"content":"    private String filePath;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"WangGLJoseph"},"content":"    public DukeParser(String dukeFilePath) {","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"WangGLJoseph"},"content":"        this.filePath \u003d dukeFilePath;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"WangGLJoseph"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"WangGLJoseph"},"content":"     * This method copies the contents of the file from filePath and","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"WangGLJoseph"},"content":"     * converts them into Task objects into the taskArrayList with the","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"WangGLJoseph"},"content":"     * help of the parse() method.","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"WangGLJoseph"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"WangGLJoseph"},"content":"     * @return taskArrayList the ArrayList to copy the information to","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"WangGLJoseph"},"content":"     * @throws IOException if filePath does not exist","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"WangGLJoseph"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"WangGLJoseph"},"content":"    public ArrayList\u003cTask\u003e copyFileContents() throws IOException {","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"WangGLJoseph"},"content":"        File f \u003d new File(this.filePath); // create a File for the given file path","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"WangGLJoseph"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"WangGLJoseph"},"content":"        StringBuilder targetBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"WangGLJoseph"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"WangGLJoseph"},"content":"            targetBuilder.append(s.nextLine()).append(\"\\n\");","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"WangGLJoseph"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"WangGLJoseph"},"content":"        return parse(targetBuilder.toString());","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"WangGLJoseph"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"WangGLJoseph"},"content":"     * This method parses the string copied from duke.txt and converts them into task objects","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"WangGLJoseph"},"content":"     * into the taskArrayList.","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"WangGLJoseph"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"WangGLJoseph"},"content":"     * @param toParse the string to parse","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"WangGLJoseph"},"content":"     * @return a taskArrayList made up of tasks","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"WangGLJoseph"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"WangGLJoseph"},"content":"    public static ArrayList\u003cTask\u003e parse(String toParse) {","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"WangGLJoseph"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"WangGLJoseph"},"content":"        Scanner ps \u003d new Scanner(toParse); // passes whole file into the scanner","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"WangGLJoseph"},"content":"//        [[T][ ] 1, [E][ ] 2 (at: 2), [D][ ] 3 (by: 3)]","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"WangGLJoseph"},"content":"        while (ps.hasNextLine()) {","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"WangGLJoseph"},"content":"            String nLine \u003d ps.nextLine(); // parse one line at a time","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"WangGLJoseph"},"content":"            int ref \u003d 3; // reference point","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"WangGLJoseph"},"content":"            char taskType \u003d nLine.charAt(ref);","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"WangGLJoseph"},"content":"            boolean isDone \u003d nLine.charAt(ref + 3) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"WangGLJoseph"},"content":"            int strLength \u003d nLine.length();","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"WangGLJoseph"},"content":"            switch (taskType) {","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"WangGLJoseph"},"content":"            case \u0027T\u0027:","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"WangGLJoseph"},"content":"                String todoName \u003d nLine.substring(ref + 5, strLength);","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"WangGLJoseph"},"content":"                Task newestTodo \u003d new ToDo(todoName);","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"WangGLJoseph"},"content":"                if (isDone) {","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"WangGLJoseph"},"content":"                    newestTodo.markAsDone();","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"WangGLJoseph"},"content":"                }","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"WangGLJoseph"},"content":"                result.add(newestTodo);","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"WangGLJoseph"},"content":"                break;","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"WangGLJoseph"},"content":"            case \u0027D\u0027:","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"WangGLJoseph"},"content":"                String deadlineInfo \u003d nLine.substring(ref + 5, strLength);","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"WangGLJoseph"},"content":"                String[] arrD \u003d deadlineInfo.split(\"\\\\(by: \", 2);","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"WangGLJoseph"},"content":"                String deadlineName \u003d arrD[0];","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"WangGLJoseph"},"content":"                String deadlineReminder \u003d arrD[1].substring(0, arrD[1].length() - 1);","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"WangGLJoseph"},"content":"                deadlineReminder \u003d parseDate(deadlineReminder);","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"WangGLJoseph"},"content":"                Task newestDeadline \u003d new Deadline(deadlineName, deadlineReminder);","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"WangGLJoseph"},"content":"                result.add(newestDeadline);","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"WangGLJoseph"},"content":"                if (isDone) {","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"WangGLJoseph"},"content":"                    newestDeadline.markAsDone();","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"WangGLJoseph"},"content":"                }","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"WangGLJoseph"},"content":"                break;","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"WangGLJoseph"},"content":"            case \u0027E\u0027:","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"WangGLJoseph"},"content":"                String eventInfo \u003d nLine.substring(ref + 5, strLength);","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"WangGLJoseph"},"content":"                String[] arrE \u003d eventInfo.split(\"\\\\(at: \", 2);","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"WangGLJoseph"},"content":"                String eventName \u003d arrE[0];","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"WangGLJoseph"},"content":"                String eventReminder \u003d arrE[1].substring(0, arrE[1].length() - 1);","lastModifiedDate":"2021-08-31"},{"lineNumber":77,"author":{"gitId":"WangGLJoseph"},"content":"                eventReminder \u003d parseDate(eventReminder);","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"WangGLJoseph"},"content":"                Task newestEvent \u003d new Event(eventName, eventReminder);","lastModifiedDate":"2021-08-31"},{"lineNumber":79,"author":{"gitId":"WangGLJoseph"},"content":"                result.add(newestEvent);","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"WangGLJoseph"},"content":"                if (isDone) {","lastModifiedDate":"2021-08-31"},{"lineNumber":81,"author":{"gitId":"WangGLJoseph"},"content":"                    newestEvent.markAsDone();","lastModifiedDate":"2021-08-31"},{"lineNumber":82,"author":{"gitId":"WangGLJoseph"},"content":"                }","lastModifiedDate":"2021-08-31"},{"lineNumber":83,"author":{"gitId":"WangGLJoseph"},"content":"                break;","lastModifiedDate":"2021-08-31"},{"lineNumber":84,"author":{"gitId":"WangGLJoseph"},"content":"            default:","lastModifiedDate":"2021-08-31"},{"lineNumber":85,"author":{"gitId":"WangGLJoseph"},"content":"                System.out.println(\"Unknown input\");","lastModifiedDate":"2021-08-31"},{"lineNumber":86,"author":{"gitId":"WangGLJoseph"},"content":"                break;","lastModifiedDate":"2021-08-31"},{"lineNumber":87,"author":{"gitId":"WangGLJoseph"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":88,"author":{"gitId":"WangGLJoseph"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":89,"author":{"gitId":"WangGLJoseph"},"content":"        return result;","lastModifiedDate":"2021-08-31"},{"lineNumber":90,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":91,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":92,"author":{"gitId":"WangGLJoseph"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":93,"author":{"gitId":"WangGLJoseph"},"content":"     * Parses input string in the format \"yyyy MM dd\" and returns it in the format","lastModifiedDate":"2021-08-31"},{"lineNumber":94,"author":{"gitId":"WangGLJoseph"},"content":"     * \"YYYY-MM-DD\".","lastModifiedDate":"2021-08-31"},{"lineNumber":95,"author":{"gitId":"WangGLJoseph"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":96,"author":{"gitId":"WangGLJoseph"},"content":"     * @param input string in format \"MMM d yyyy\"","lastModifiedDate":"2021-08-31"},{"lineNumber":97,"author":{"gitId":"WangGLJoseph"},"content":"     * @return string in format \"YYYY-MM-DD\"","lastModifiedDate":"2021-08-31"},{"lineNumber":98,"author":{"gitId":"WangGLJoseph"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":99,"author":{"gitId":"WangGLJoseph"},"content":"    public static String parseDate(String input) {","lastModifiedDate":"2021-08-31"},{"lineNumber":100,"author":{"gitId":"WangGLJoseph"},"content":"        String year \u003d input.substring(0, 4);","lastModifiedDate":"2021-08-31"},{"lineNumber":101,"author":{"gitId":"WangGLJoseph"},"content":"        String month \u003d input.substring(5, 7);","lastModifiedDate":"2021-08-31"},{"lineNumber":102,"author":{"gitId":"WangGLJoseph"},"content":"        String day \u003d input.substring(8, 10);","lastModifiedDate":"2021-08-31"},{"lineNumber":103,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":104,"author":{"gitId":"WangGLJoseph"},"content":"        return year + \"-\" + month + \"-\" + day;","lastModifiedDate":"2021-08-31"},{"lineNumber":105,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":106,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":107,"author":{"gitId":"WangGLJoseph"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"WangGLJoseph":107}},{"path":"src/main/java/cs2103/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangGLJoseph"},"content":"package cs2103.duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"WangGLJoseph"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"WangGLJoseph"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"WangGLJoseph"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"WangGLJoseph"},"content":"    protected String at;","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"WangGLJoseph"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"WangGLJoseph"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"WangGLJoseph"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"WangGLJoseph"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"WangGLJoseph"},"content":"        this.date \u003d LocalDate.parse(at);","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"WangGLJoseph"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"WangGLJoseph"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"WangGLJoseph"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + date.format(DateTimeFormatter.ofPattern(\"yyyy MM dd\")) + \")\";","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"WangGLJoseph"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"WangGLJoseph":21}},{"path":"src/main/java/cs2103/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangGLJoseph"},"content":"package cs2103.duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"WangGLJoseph"},"content":"import java.io.File;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"WangGLJoseph"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"WangGLJoseph"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"WangGLJoseph"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"WangGLJoseph"},"content":"public class Storage {","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"WangGLJoseph"},"content":"    private static ArrayList\u003cTask\u003e taskArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"WangGLJoseph"},"content":"    private final String filePath;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"WangGLJoseph"},"content":"    public Storage(String dukeFilePath) {","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"WangGLJoseph"},"content":"        this.filePath \u003d dukeFilePath;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"WangGLJoseph"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"WangGLJoseph"},"content":"        // load the data from the hard disk for dukeFile","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"WangGLJoseph"},"content":"        File dukeFile \u003d new File(filePath);","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"WangGLJoseph"},"content":"        // creates directory if it does not exist","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"WangGLJoseph"},"content":"        if (dukeFile.mkdir()) {","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"WangGLJoseph"},"content":"            // dukeFile.mkdir();","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"WangGLJoseph"},"content":"            System.out.println(\"folder: \u0027data/\u0027 has been created\");","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"WangGLJoseph"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"WangGLJoseph"},"content":"        // creates file if it does not exist","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"WangGLJoseph"},"content":"        if (dukeFile.createNewFile()) {","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"WangGLJoseph"},"content":"            // dukeFile.createNewFile();","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"WangGLJoseph"},"content":"            System.out.println(\"\u0027duke.txt\u0027 has been created in the \u0027data/\u0027 folder \");","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"WangGLJoseph"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"WangGLJoseph"},"content":"        DukeParser p \u003d new DukeParser(filePath);","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"WangGLJoseph"},"content":"        return p.copyFileContents();","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"WangGLJoseph"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"WangGLJoseph"},"content":"     * This method overwrites the file.","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"WangGLJoseph"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"WangGLJoseph"},"content":"     * @param filePath     the path to the file to append to","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"WangGLJoseph"},"content":"     * @param textToAppend the text to append","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"WangGLJoseph"},"content":"     * @throws IOException if filePath does not exist","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"WangGLJoseph"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"WangGLJoseph"},"content":"    public void overwriteFile(String filePath, String textToAppend) throws IOException {","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"WangGLJoseph"},"content":"        FileWriter fw \u003d new FileWriter(filePath, false); // create a FileWriter in append mode","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"WangGLJoseph"},"content":"        fw.write(textToAppend);","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"WangGLJoseph"},"content":"        fw.close();","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"WangGLJoseph"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"WangGLJoseph"},"content":"     * This method appends to the file instead of overwrites.","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"WangGLJoseph"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"WangGLJoseph"},"content":"     * @param filePath     the path to the file to append to","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"WangGLJoseph"},"content":"     * @param textToAppend the text to append","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"WangGLJoseph"},"content":"     * @throws IOException if filePath does not exist","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"WangGLJoseph"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"WangGLJoseph"},"content":"    public void appendToFile(String filePath, String textToAppend) throws IOException {","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"WangGLJoseph"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"WangGLJoseph"},"content":"        fw.write(textToAppend);","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"WangGLJoseph"},"content":"        fw.close();","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"WangGLJoseph"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"WangGLJoseph":64}},{"path":"src/main/java/cs2103/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangGLJoseph"},"content":"package cs2103.duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"WangGLJoseph"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"WangGLJoseph"},"content":" * This class encapsulates a Task object.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"WangGLJoseph"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"WangGLJoseph"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"WangGLJoseph"},"content":"    protected String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"WangGLJoseph"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"WangGLJoseph"},"content":"    protected String taskType;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"WangGLJoseph"},"content":"    protected String reminder;","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"WangGLJoseph"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"WangGLJoseph"},"content":"     * Creates a task with the specified description, isDone false by default.","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"WangGLJoseph"},"content":"     *  @param description description of task","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"WangGLJoseph"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"WangGLJoseph"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"WangGLJoseph"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"WangGLJoseph"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"WangGLJoseph"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"WangGLJoseph"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"WangGLJoseph"},"content":"     * Getter method for status using isDone","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"WangGLJoseph"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"WangGLJoseph"},"content":"     * @return an icon \u0027X\u0027 if complete, space if otherwise","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"WangGLJoseph"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"WangGLJoseph"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"WangGLJoseph"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"WangGLJoseph"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"WangGLJoseph"},"content":"     * Getter method for type of task using taskType.","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"WangGLJoseph"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"WangGLJoseph"},"content":"     * @return an icon representing the type of the task (T, D, E)","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"WangGLJoseph"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"WangGLJoseph"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"WangGLJoseph"},"content":"        return (this.taskType \u003d\u003d \"todo\" ? \"T\" :","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"WangGLJoseph"},"content":"                this.taskType \u003d\u003d \"deadline\" ? \"D\" :","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"WangGLJoseph"},"content":"                        this.taskType \u003d\u003d \"event\" ? \"E\" : \"NONE\");","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"WangGLJoseph"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"WangGLJoseph"},"content":"     * Getter method for task reminder","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"WangGLJoseph"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"WangGLJoseph"},"content":"     * @return the string reminder for the task","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"WangGLJoseph"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"WangGLJoseph"},"content":"    public String getReminder() {","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"WangGLJoseph"},"content":"        return this.reminder;","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"WangGLJoseph"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"WangGLJoseph"},"content":"     * Setter method for isDone of a Task object","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"WangGLJoseph"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"WangGLJoseph"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"WangGLJoseph"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"WangGLJoseph"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"WangGLJoseph"},"content":"     * Returns string representation of Task.","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"WangGLJoseph"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"WangGLJoseph"},"content":"     * @return string representation of Task","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"WangGLJoseph"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"WangGLJoseph"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"WangGLJoseph"},"content":"        return (\"[\" + getStatusIcon() + \"] \" + description);","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"WangGLJoseph"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"WangGLJoseph":67}},{"path":"src/main/java/cs2103/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangGLJoseph"},"content":"package cs2103.duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"WangGLJoseph"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"WangGLJoseph"},"content":"public class TaskList {","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"WangGLJoseph"},"content":"    private ArrayList\u003cTask\u003e taskArrayList;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"WangGLJoseph"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"WangGLJoseph"},"content":"        this.taskArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"WangGLJoseph"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskArrayList) throws DukeException {","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"WangGLJoseph"},"content":"        this.taskArrayList \u003d taskArrayList;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"WangGLJoseph"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"WangGLJoseph"},"content":"     * This method takes an input string and formats it by including horizontal lines above","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"WangGLJoseph"},"content":"     * and below the input string","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"WangGLJoseph"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"WangGLJoseph"},"content":"     * @param str input string to be sandwiched","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"WangGLJoseph"},"content":"     * @return the original string sandwiched between two horizontal lines","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"WangGLJoseph"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"WangGLJoseph"},"content":"    public static String sandwich(String str) {","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"WangGLJoseph"},"content":"        return \"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"WangGLJoseph"},"content":"                + str + \"\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"WangGLJoseph"},"content":"                + \"____________________________________________________________\";","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"WangGLJoseph"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"WangGLJoseph"},"content":"     * This method takes the user\u0027s input list and beautifies it for display.","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"WangGLJoseph"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"WangGLJoseph"},"content":"     * @param taskArrayList the user\u0027s input list to be beautified","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"WangGLJoseph"},"content":"     * @return the beautified string to display","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"WangGLJoseph"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"WangGLJoseph"},"content":"    public String listBeautify(ArrayList\u003cTask\u003e taskArrayList) {","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"WangGLJoseph"},"content":"        StringBuilder listBeautified \u003d new StringBuilder();","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"WangGLJoseph"},"content":"        for (int i \u003d 0; i \u003c taskArrayList.size(); i++) {","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"WangGLJoseph"},"content":"            listBeautified.append(i + 1)","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"WangGLJoseph"},"content":"                    .append(\".\")","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"WangGLJoseph"},"content":"                    .append(taskArrayList.get(i).toString());","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"WangGLJoseph"},"content":"            if (i \u003c taskArrayList.size() - 1) { // new line except for last item","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"WangGLJoseph"},"content":"                listBeautified.append(\"\\n\");","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"WangGLJoseph"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"WangGLJoseph"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"WangGLJoseph"},"content":"        return listBeautified.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"WangGLJoseph"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"WangGLJoseph"},"content":"     * Validates input string to ensure it follows the valid format YYYY-MM-DD, and is a valid date.","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"WangGLJoseph"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"WangGLJoseph"},"content":"     * @param input the string to be validated","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"WangGLJoseph"},"content":"     * @return true if the string is a valid date","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"WangGLJoseph"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"WangGLJoseph"},"content":"    public boolean isValidDate(String input) {","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"WangGLJoseph"},"content":"        String[] splitInputs \u003d input.split(\"-\");","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"WangGLJoseph"},"content":"        if (splitInputs.length !\u003d 3) {","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"WangGLJoseph"},"content":"            return false;","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"WangGLJoseph"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"WangGLJoseph"},"content":"        boolean isLeapYear;","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"WangGLJoseph"},"content":"        String year \u003d splitInputs[0];","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"WangGLJoseph"},"content":"        String month \u003d splitInputs[1];","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"WangGLJoseph"},"content":"        String day \u003d splitInputs[2];","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"WangGLJoseph"},"content":"        int maxDay;","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"WangGLJoseph"},"content":"        // check year","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"WangGLJoseph"},"content":"        if (year.length() !\u003d 4 || !year.matches(\"\\\\d+\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"WangGLJoseph"},"content":"            return false;","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"WangGLJoseph"},"content":"        } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"WangGLJoseph"},"content":"            isLeapYear \u003d (Integer.parseInt(year) % 4 \u003d\u003d 0);","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"WangGLJoseph"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"WangGLJoseph"},"content":"        // check month","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"WangGLJoseph"},"content":"        if (month.length() !\u003d 2 || !month.matches(\"\\\\d+\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"WangGLJoseph"},"content":"            return false;","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"WangGLJoseph"},"content":"        } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"WangGLJoseph"},"content":"            switch (Integer.parseInt(month)) {","lastModifiedDate":"2021-08-31"},{"lineNumber":77,"author":{"gitId":"WangGLJoseph"},"content":"            case 1:","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"WangGLJoseph"},"content":"            case 3:","lastModifiedDate":"2021-08-31"},{"lineNumber":79,"author":{"gitId":"WangGLJoseph"},"content":"            case 5:","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"WangGLJoseph"},"content":"            case 7:","lastModifiedDate":"2021-08-31"},{"lineNumber":81,"author":{"gitId":"WangGLJoseph"},"content":"            case 8:","lastModifiedDate":"2021-08-31"},{"lineNumber":82,"author":{"gitId":"WangGLJoseph"},"content":"            case 10:","lastModifiedDate":"2021-08-31"},{"lineNumber":83,"author":{"gitId":"WangGLJoseph"},"content":"            case 12:","lastModifiedDate":"2021-08-31"},{"lineNumber":84,"author":{"gitId":"WangGLJoseph"},"content":"                maxDay \u003d 31;","lastModifiedDate":"2021-08-31"},{"lineNumber":85,"author":{"gitId":"WangGLJoseph"},"content":"                break;","lastModifiedDate":"2021-08-31"},{"lineNumber":86,"author":{"gitId":"WangGLJoseph"},"content":"            case 4:","lastModifiedDate":"2021-08-31"},{"lineNumber":87,"author":{"gitId":"WangGLJoseph"},"content":"            case 6:","lastModifiedDate":"2021-08-31"},{"lineNumber":88,"author":{"gitId":"WangGLJoseph"},"content":"            case 9:","lastModifiedDate":"2021-08-31"},{"lineNumber":89,"author":{"gitId":"WangGLJoseph"},"content":"            case 11:","lastModifiedDate":"2021-08-31"},{"lineNumber":90,"author":{"gitId":"WangGLJoseph"},"content":"                maxDay \u003d 30;","lastModifiedDate":"2021-08-31"},{"lineNumber":91,"author":{"gitId":"WangGLJoseph"},"content":"                break;","lastModifiedDate":"2021-08-31"},{"lineNumber":92,"author":{"gitId":"WangGLJoseph"},"content":"            case 2:","lastModifiedDate":"2021-08-31"},{"lineNumber":93,"author":{"gitId":"WangGLJoseph"},"content":"                if (isLeapYear) {","lastModifiedDate":"2021-08-31"},{"lineNumber":94,"author":{"gitId":"WangGLJoseph"},"content":"                    maxDay \u003d 29;","lastModifiedDate":"2021-08-31"},{"lineNumber":95,"author":{"gitId":"WangGLJoseph"},"content":"                } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":96,"author":{"gitId":"WangGLJoseph"},"content":"                    maxDay \u003d 28;","lastModifiedDate":"2021-08-31"},{"lineNumber":97,"author":{"gitId":"WangGLJoseph"},"content":"                }","lastModifiedDate":"2021-08-31"},{"lineNumber":98,"author":{"gitId":"WangGLJoseph"},"content":"                break;","lastModifiedDate":"2021-08-31"},{"lineNumber":99,"author":{"gitId":"WangGLJoseph"},"content":"            default:","lastModifiedDate":"2021-08-31"},{"lineNumber":100,"author":{"gitId":"WangGLJoseph"},"content":"                return false;","lastModifiedDate":"2021-08-31"},{"lineNumber":101,"author":{"gitId":"WangGLJoseph"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":102,"author":{"gitId":"WangGLJoseph"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":103,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":104,"author":{"gitId":"WangGLJoseph"},"content":"        // check day","lastModifiedDate":"2021-08-31"},{"lineNumber":105,"author":{"gitId":"WangGLJoseph"},"content":"        if (day.length() !\u003d 2 || !day.matches(\"\\\\d+\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":106,"author":{"gitId":"WangGLJoseph"},"content":"            return false;","lastModifiedDate":"2021-08-31"},{"lineNumber":107,"author":{"gitId":"WangGLJoseph"},"content":"        } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":108,"author":{"gitId":"WangGLJoseph"},"content":"            return Integer.parseInt(day) \u003c\u003d maxDay;","lastModifiedDate":"2021-08-31"},{"lineNumber":109,"author":{"gitId":"WangGLJoseph"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":110,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":111,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":112,"author":{"gitId":"WangGLJoseph"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":113,"author":{"gitId":"WangGLJoseph"},"content":"     * Adds a task into the task list.","lastModifiedDate":"2021-08-31"},{"lineNumber":114,"author":{"gitId":"WangGLJoseph"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":115,"author":{"gitId":"WangGLJoseph"},"content":"     * @param type the type of task to be added","lastModifiedDate":"2021-08-31"},{"lineNumber":116,"author":{"gitId":"WangGLJoseph"},"content":"     * @param name the name of task to be added","lastModifiedDate":"2021-08-31"},{"lineNumber":117,"author":{"gitId":"WangGLJoseph"},"content":"     * @param description the description of the task","lastModifiedDate":"2021-08-31"},{"lineNumber":118,"author":{"gitId":"WangGLJoseph"},"content":"     * @return string representing the newly added task","lastModifiedDate":"2021-08-31"},{"lineNumber":119,"author":{"gitId":"WangGLJoseph"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-31"},{"lineNumber":120,"author":{"gitId":"WangGLJoseph"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":121,"author":{"gitId":"WangGLJoseph"},"content":"    public String addTask(String type, String name, String description) throws DukeException {","lastModifiedDate":"2021-08-31"},{"lineNumber":122,"author":{"gitId":"WangGLJoseph"},"content":"        switch (type) {","lastModifiedDate":"2021-08-31"},{"lineNumber":123,"author":{"gitId":"WangGLJoseph"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-31"},{"lineNumber":124,"author":{"gitId":"WangGLJoseph"},"content":"            if (name.trim().equals(\"\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":125,"author":{"gitId":"WangGLJoseph"},"content":"                throw new DukeException(\"No task name\");","lastModifiedDate":"2021-08-31"},{"lineNumber":126,"author":{"gitId":"WangGLJoseph"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":127,"author":{"gitId":"WangGLJoseph"},"content":"            Task newestTodo \u003d new ToDo(name);","lastModifiedDate":"2021-08-31"},{"lineNumber":128,"author":{"gitId":"WangGLJoseph"},"content":"            taskArrayList.add(newestTodo);","lastModifiedDate":"2021-08-31"},{"lineNumber":129,"author":{"gitId":"WangGLJoseph"},"content":"            return (sandwich(\"New todo task added:\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":130,"author":{"gitId":"WangGLJoseph"},"content":"                    + newestTodo","lastModifiedDate":"2021-08-31"},{"lineNumber":131,"author":{"gitId":"WangGLJoseph"},"content":"                    + \"\\nYou now have \"","lastModifiedDate":"2021-08-31"},{"lineNumber":132,"author":{"gitId":"WangGLJoseph"},"content":"                    + taskArrayList.size()","lastModifiedDate":"2021-08-31"},{"lineNumber":133,"author":{"gitId":"WangGLJoseph"},"content":"                    + \" item(s) in your task list.\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":134,"author":{"gitId":"WangGLJoseph"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-31"},{"lineNumber":135,"author":{"gitId":"WangGLJoseph"},"content":"            if (!isValidDate(description)) {","lastModifiedDate":"2021-08-31"},{"lineNumber":136,"author":{"gitId":"WangGLJoseph"},"content":"                throw new DukeException(\"Invalid Date, please follow the format YYYY-MM-DD\");","lastModifiedDate":"2021-08-31"},{"lineNumber":137,"author":{"gitId":"WangGLJoseph"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":138,"author":{"gitId":"WangGLJoseph"},"content":"            Task newestDeadline \u003d new Deadline(name, description);","lastModifiedDate":"2021-08-31"},{"lineNumber":139,"author":{"gitId":"WangGLJoseph"},"content":"            taskArrayList.add(newestDeadline);","lastModifiedDate":"2021-08-31"},{"lineNumber":140,"author":{"gitId":"WangGLJoseph"},"content":"            return (sandwich(\"New deadline task added:\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":141,"author":{"gitId":"WangGLJoseph"},"content":"                    + newestDeadline","lastModifiedDate":"2021-08-31"},{"lineNumber":142,"author":{"gitId":"WangGLJoseph"},"content":"                    + \"\\nYou now have \"","lastModifiedDate":"2021-08-31"},{"lineNumber":143,"author":{"gitId":"WangGLJoseph"},"content":"                    + taskArrayList.size()","lastModifiedDate":"2021-08-31"},{"lineNumber":144,"author":{"gitId":"WangGLJoseph"},"content":"                    + \" item(s) in your task list.\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":145,"author":{"gitId":"WangGLJoseph"},"content":"        case \"event\":","lastModifiedDate":"2021-08-31"},{"lineNumber":146,"author":{"gitId":"WangGLJoseph"},"content":"            if (!isValidDate(description)) {","lastModifiedDate":"2021-08-31"},{"lineNumber":147,"author":{"gitId":"WangGLJoseph"},"content":"                throw new DukeException(\"Invalid Date, please follow the format YYYY-MM-DD\");","lastModifiedDate":"2021-08-31"},{"lineNumber":148,"author":{"gitId":"WangGLJoseph"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":149,"author":{"gitId":"WangGLJoseph"},"content":"            Task newestEvent \u003d new Event(name, description);","lastModifiedDate":"2021-08-31"},{"lineNumber":150,"author":{"gitId":"WangGLJoseph"},"content":"            taskArrayList.add(newestEvent);","lastModifiedDate":"2021-08-31"},{"lineNumber":151,"author":{"gitId":"WangGLJoseph"},"content":"            return (sandwich(\"New deadline task added:\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":152,"author":{"gitId":"WangGLJoseph"},"content":"                    + newestEvent","lastModifiedDate":"2021-08-31"},{"lineNumber":153,"author":{"gitId":"WangGLJoseph"},"content":"                    + \"\\nYou now have \"","lastModifiedDate":"2021-08-31"},{"lineNumber":154,"author":{"gitId":"WangGLJoseph"},"content":"                    + taskArrayList.size()","lastModifiedDate":"2021-08-31"},{"lineNumber":155,"author":{"gitId":"WangGLJoseph"},"content":"                    + \" item(s) in your task list.\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":156,"author":{"gitId":"WangGLJoseph"},"content":"        default:","lastModifiedDate":"2021-08-31"},{"lineNumber":157,"author":{"gitId":"WangGLJoseph"},"content":"            throw new DukeException(\"Unknown task type\");","lastModifiedDate":"2021-08-31"},{"lineNumber":158,"author":{"gitId":"WangGLJoseph"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":159,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":160,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":161,"author":{"gitId":"WangGLJoseph"},"content":"    public String listTasks() {","lastModifiedDate":"2021-08-31"},{"lineNumber":162,"author":{"gitId":"WangGLJoseph"},"content":"        return (sandwich(listBeautify(taskArrayList)));","lastModifiedDate":"2021-08-31"},{"lineNumber":163,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":164,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":165,"author":{"gitId":"WangGLJoseph"},"content":"    public String finishTask(int index) throws DukeException {","lastModifiedDate":"2021-08-31"},{"lineNumber":166,"author":{"gitId":"WangGLJoseph"},"content":"        if (index \u003e taskArrayList.size()) {","lastModifiedDate":"2021-08-31"},{"lineNumber":167,"author":{"gitId":"WangGLJoseph"},"content":"            throw new DukeException(\"This task index is not in the task list!\");","lastModifiedDate":"2021-08-31"},{"lineNumber":168,"author":{"gitId":"WangGLJoseph"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":169,"author":{"gitId":"WangGLJoseph"},"content":"        taskArrayList.get(index - 1).markAsDone();","lastModifiedDate":"2021-08-31"},{"lineNumber":170,"author":{"gitId":"WangGLJoseph"},"content":"        return (sandwich(\"Congratulations! You have finished this task: \"","lastModifiedDate":"2021-08-31"},{"lineNumber":171,"author":{"gitId":"WangGLJoseph"},"content":"                + taskArrayList.get(index - 1).toString()));","lastModifiedDate":"2021-08-31"},{"lineNumber":172,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":173,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":174,"author":{"gitId":"WangGLJoseph"},"content":"    public String deleteTask(int index) throws DukeException {","lastModifiedDate":"2021-08-31"},{"lineNumber":175,"author":{"gitId":"WangGLJoseph"},"content":"        if (index \u003e taskArrayList.size()) {","lastModifiedDate":"2021-08-31"},{"lineNumber":176,"author":{"gitId":"WangGLJoseph"},"content":"            throw new DukeException(\"This task index is not in the task list!\");","lastModifiedDate":"2021-08-31"},{"lineNumber":177,"author":{"gitId":"WangGLJoseph"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":178,"author":{"gitId":"WangGLJoseph"},"content":"        String deleteMessage \u003d  (sandwich(\"Got it, I have deleted this task: \"","lastModifiedDate":"2021-08-31"},{"lineNumber":179,"author":{"gitId":"WangGLJoseph"},"content":"                + taskArrayList.get(index - 1).toString()","lastModifiedDate":"2021-08-31"},{"lineNumber":180,"author":{"gitId":"WangGLJoseph"},"content":"                + \"\\nYou now have \"","lastModifiedDate":"2021-08-31"},{"lineNumber":181,"author":{"gitId":"WangGLJoseph"},"content":"                + (taskArrayList.size() - 1)","lastModifiedDate":"2021-08-31"},{"lineNumber":182,"author":{"gitId":"WangGLJoseph"},"content":"                + \" item(s) in your task list.\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":183,"author":{"gitId":"WangGLJoseph"},"content":"        // actual logic of deletion","lastModifiedDate":"2021-08-31"},{"lineNumber":184,"author":{"gitId":"WangGLJoseph"},"content":"        taskArrayList.remove(index - 1);","lastModifiedDate":"2021-08-31"},{"lineNumber":185,"author":{"gitId":"WangGLJoseph"},"content":"        return deleteMessage;","lastModifiedDate":"2021-08-31"},{"lineNumber":186,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":187,"author":{"gitId":"WangGLJoseph"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"WangGLJoseph":187}},{"path":"src/main/java/cs2103/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangGLJoseph"},"content":"package cs2103.duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"WangGLJoseph"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"WangGLJoseph"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"WangGLJoseph"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"WangGLJoseph"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"WangGLJoseph"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"WangGLJoseph"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"WangGLJoseph"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"WangGLJoseph":13}},{"path":"src/main/java/cs2103/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangGLJoseph"},"content":"package cs2103.duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"WangGLJoseph"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"WangGLJoseph"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"WangGLJoseph"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"WangGLJoseph"},"content":"public class Ui {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"WangGLJoseph"},"content":"    private static final int lv \u003d 8;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"WangGLJoseph"},"content":"    private static final String[] features \u003d {","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"WangGLJoseph"},"content":"            \"\",","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"WangGLJoseph"},"content":"            \"Greet, Echo, Exit\",","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"WangGLJoseph"},"content":"            \", Add, List\",","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"WangGLJoseph"},"content":"            \", Mark as Done\",","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"WangGLJoseph"},"content":"            \", ToDos, Events, Deadlines\",","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"WangGLJoseph"},"content":"            \", Handle Errors\",","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"WangGLJoseph"},"content":"            \", Delete\",","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"WangGLJoseph"},"content":"            \", Save\",","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"WangGLJoseph"},"content":"            \", Dates and Times\"","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"WangGLJoseph"},"content":"    };","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"WangGLJoseph"},"content":"    private static ArrayList\u003cTask\u003e taskArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"WangGLJoseph"},"content":"    private static final String dukeFilePath \u003d \"./data/duke.txt\";","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"WangGLJoseph"},"content":"    public Ui() {","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"WangGLJoseph"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"WangGLJoseph"},"content":"     * This method takes an input string and formats it by including horizontal lines above","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"WangGLJoseph"},"content":"     * and below the input string","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"WangGLJoseph"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"WangGLJoseph"},"content":"     * @param str input string to be sandwiched","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"WangGLJoseph"},"content":"     * @return the original string sandwiched between two horizontal lines","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"WangGLJoseph"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"WangGLJoseph"},"content":"    public static String sandwich(String str) {","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"WangGLJoseph"},"content":"        return \"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"WangGLJoseph"},"content":"                + str + \"\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"WangGLJoseph"},"content":"                + \"____________________________________________________________\";","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"WangGLJoseph"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"WangGLJoseph"},"content":"     * This method takes the user\u0027s input list and beautifies it for display.","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"WangGLJoseph"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"WangGLJoseph"},"content":"     * @param taskArrayList the user\u0027s input list to be beautified","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"WangGLJoseph"},"content":"     * @return the beautified string to display","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"WangGLJoseph"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"WangGLJoseph"},"content":"    public static String listBeautify(ArrayList\u003cTask\u003e taskArrayList) {","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"WangGLJoseph"},"content":"        StringBuilder listBeautified \u003d new StringBuilder();","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"WangGLJoseph"},"content":"        for (int i \u003d 0; i \u003c taskArrayList.size(); i++) {","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"WangGLJoseph"},"content":"            listBeautified.append(i + 1)","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"WangGLJoseph"},"content":"                    .append(\".\")","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"WangGLJoseph"},"content":"                    .append(taskArrayList.get(i).toString());","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"WangGLJoseph"},"content":"            if (i \u003c taskArrayList.size() - 1) { // new line except for last item","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"WangGLJoseph"},"content":"                listBeautified.append(\"\\n\");","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"WangGLJoseph"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"WangGLJoseph"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"WangGLJoseph"},"content":"        return listBeautified.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"WangGLJoseph"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"WangGLJoseph"},"content":"     * Shows the welcome message when user runs Duke.","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"WangGLJoseph"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"WangGLJoseph"},"content":"    public String showWelcome() throws IOException {","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"WangGLJoseph"},"content":"        // populating featuresCombined so each level has all elements of levels before it","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"WangGLJoseph"},"content":"        StringBuilder featuresCombined \u003d new StringBuilder();","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"WangGLJoseph"},"content":"        for (int count \u003d 0; count \u003c\u003d lv; count++) {","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"WangGLJoseph"},"content":"            featuresCombined.append(features[count]);","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"WangGLJoseph"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"WangGLJoseph"},"content":"        // parsing duke.txt","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"WangGLJoseph"},"content":"        DukeParser dp \u003d new DukeParser(dukeFilePath);","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"WangGLJoseph"},"content":"        taskArrayList \u003d dp.copyFileContents();","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"WangGLJoseph"},"content":"        // Welcome message","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"WangGLJoseph"},"content":"        String welcome \u003d \"Hello! I\u0027m Duke: Level \" + lv + \"\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"WangGLJoseph"},"content":"                + \"What would you like to do today?\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"WangGLJoseph"},"content":"                + \"My current features are: \" + featuresCombined + \"\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":77,"author":{"gitId":"WangGLJoseph"},"content":"                + \"Here are your tasks: \" + \"\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"WangGLJoseph"},"content":"                + sandwich(listBeautify(taskArrayList));","lastModifiedDate":"2021-08-31"},{"lineNumber":79,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"WangGLJoseph"},"content":"        return (sandwich(welcome));","lastModifiedDate":"2021-08-31"},{"lineNumber":81,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":82,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":83,"author":{"gitId":"WangGLJoseph"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":84,"author":{"gitId":"WangGLJoseph"},"content":"     * Shows the goodbye message when user exits Duke.","lastModifiedDate":"2021-08-31"},{"lineNumber":85,"author":{"gitId":"WangGLJoseph"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":86,"author":{"gitId":"WangGLJoseph"},"content":"    public String showGoodbye() throws IOException {","lastModifiedDate":"2021-08-31"},{"lineNumber":87,"author":{"gitId":"WangGLJoseph"},"content":"        // Goodbye message","lastModifiedDate":"2021-08-31"},{"lineNumber":88,"author":{"gitId":"WangGLJoseph"},"content":"        String goodbye \u003d \"Thank you for using Duke: Level \" + lv + \"\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":89,"author":{"gitId":"WangGLJoseph"},"content":"                + \"See you soon!\";","lastModifiedDate":"2021-08-31"},{"lineNumber":90,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":91,"author":{"gitId":"WangGLJoseph"},"content":"        return (sandwich(goodbye));","lastModifiedDate":"2021-08-31"},{"lineNumber":92,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":93,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":94,"author":{"gitId":"WangGLJoseph"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":95,"author":{"gitId":"WangGLJoseph"},"content":"     * Reads user\u0027s inputs and responds to it accordingly.","lastModifiedDate":"2021-08-31"},{"lineNumber":96,"author":{"gitId":"WangGLJoseph"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":97,"author":{"gitId":"WangGLJoseph"},"content":"     * @param userInput the information entered by the user after the command","lastModifiedDate":"2021-08-31"},{"lineNumber":98,"author":{"gitId":"WangGLJoseph"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":99,"author":{"gitId":"WangGLJoseph"},"content":"    public String handleInput(Scanner scanner, String userInput, TaskList tasks) throws DukeException {","lastModifiedDate":"2021-08-31"},{"lineNumber":100,"author":{"gitId":"WangGLJoseph"},"content":"        switch (userInput) {","lastModifiedDate":"2021-08-31"},{"lineNumber":101,"author":{"gitId":"WangGLJoseph"},"content":"        case \"list\":  // user inputs \u0027list\u0027, return all text stored","lastModifiedDate":"2021-08-31"},{"lineNumber":102,"author":{"gitId":"WangGLJoseph"},"content":"            return tasks.listTasks();","lastModifiedDate":"2021-08-31"},{"lineNumber":103,"author":{"gitId":"WangGLJoseph"},"content":"        case \"done\":  // first input is done, check second input for integer","lastModifiedDate":"2021-08-31"},{"lineNumber":104,"author":{"gitId":"WangGLJoseph"},"content":"            if (scanner.hasNextInt()) {","lastModifiedDate":"2021-08-31"},{"lineNumber":105,"author":{"gitId":"WangGLJoseph"},"content":"                int taskNum \u003d scanner.nextInt();","lastModifiedDate":"2021-08-31"},{"lineNumber":106,"author":{"gitId":"WangGLJoseph"},"content":"                return tasks.finishTask(taskNum);","lastModifiedDate":"2021-08-31"},{"lineNumber":107,"author":{"gitId":"WangGLJoseph"},"content":"            } else throw new DukeException(\"unspecified task to mark as done\");","lastModifiedDate":"2021-08-31"},{"lineNumber":108,"author":{"gitId":"WangGLJoseph"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-31"},{"lineNumber":109,"author":{"gitId":"WangGLJoseph"},"content":"            if (scanner.hasNextInt()) {","lastModifiedDate":"2021-08-31"},{"lineNumber":110,"author":{"gitId":"WangGLJoseph"},"content":"                int taskNum \u003d scanner.nextInt();","lastModifiedDate":"2021-08-31"},{"lineNumber":111,"author":{"gitId":"WangGLJoseph"},"content":"                return tasks.deleteTask(taskNum);","lastModifiedDate":"2021-08-31"},{"lineNumber":112,"author":{"gitId":"WangGLJoseph"},"content":"            } else throw new DukeException(\"unspecified task to delete\");","lastModifiedDate":"2021-08-31"},{"lineNumber":113,"author":{"gitId":"WangGLJoseph"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-31"},{"lineNumber":114,"author":{"gitId":"WangGLJoseph"},"content":"            String todoName \u003d scanner.nextLine();","lastModifiedDate":"2021-08-31"},{"lineNumber":115,"author":{"gitId":"WangGLJoseph"},"content":"            if (todoName.trim().equals(\"\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":116,"author":{"gitId":"WangGLJoseph"},"content":"                throw new DukeException(\"No task description\");","lastModifiedDate":"2021-08-31"},{"lineNumber":117,"author":{"gitId":"WangGLJoseph"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":118,"author":{"gitId":"WangGLJoseph"},"content":"            return tasks.addTask(\"todo\", todoName, \"\");","lastModifiedDate":"2021-08-31"},{"lineNumber":119,"author":{"gitId":"WangGLJoseph"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-31"},{"lineNumber":120,"author":{"gitId":"WangGLJoseph"},"content":"            String[] deadlineTokens \u003d scanner.nextLine().split(\"\\\\s*/by\\\\s*\");","lastModifiedDate":"2021-08-31"},{"lineNumber":121,"author":{"gitId":"WangGLJoseph"},"content":"            if (deadlineTokens.length \u003d\u003d 0) {","lastModifiedDate":"2021-08-31"},{"lineNumber":122,"author":{"gitId":"WangGLJoseph"},"content":"                throw new DukeException(\"No task description\");","lastModifiedDate":"2021-08-31"},{"lineNumber":123,"author":{"gitId":"WangGLJoseph"},"content":"            } else if (deadlineTokens.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-31"},{"lineNumber":124,"author":{"gitId":"WangGLJoseph"},"content":"                throw new DukeException(\"No task deadline\");","lastModifiedDate":"2021-08-31"},{"lineNumber":125,"author":{"gitId":"WangGLJoseph"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":126,"author":{"gitId":"WangGLJoseph"},"content":"            String deadlineName \u003d deadlineTokens[0];","lastModifiedDate":"2021-08-31"},{"lineNumber":127,"author":{"gitId":"WangGLJoseph"},"content":"            String deadlineReminder \u003d deadlineTokens[1];","lastModifiedDate":"2021-08-31"},{"lineNumber":128,"author":{"gitId":"WangGLJoseph"},"content":"            return tasks.addTask(\"deadline\", deadlineName, deadlineReminder);","lastModifiedDate":"2021-08-31"},{"lineNumber":129,"author":{"gitId":"WangGLJoseph"},"content":"        case \"event\":","lastModifiedDate":"2021-08-31"},{"lineNumber":130,"author":{"gitId":"WangGLJoseph"},"content":"            String[] eventTokens \u003d scanner.nextLine().split(\"\\\\s*/at\\\\s*\");","lastModifiedDate":"2021-08-31"},{"lineNumber":131,"author":{"gitId":"WangGLJoseph"},"content":"            if (eventTokens.length \u003d\u003d 0) {","lastModifiedDate":"2021-08-31"},{"lineNumber":132,"author":{"gitId":"WangGLJoseph"},"content":"                throw new DukeException(\"No task description\");","lastModifiedDate":"2021-08-31"},{"lineNumber":133,"author":{"gitId":"WangGLJoseph"},"content":"            } else if (eventTokens.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-31"},{"lineNumber":134,"author":{"gitId":"WangGLJoseph"},"content":"                throw new DukeException(\"No task duration\");","lastModifiedDate":"2021-08-31"},{"lineNumber":135,"author":{"gitId":"WangGLJoseph"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":136,"author":{"gitId":"WangGLJoseph"},"content":"            String eventName \u003d eventTokens[0];","lastModifiedDate":"2021-08-31"},{"lineNumber":137,"author":{"gitId":"WangGLJoseph"},"content":"            String eventReminder \u003d eventTokens[1];","lastModifiedDate":"2021-08-31"},{"lineNumber":138,"author":{"gitId":"WangGLJoseph"},"content":"            return tasks.addTask(\"event\", eventName, eventReminder);","lastModifiedDate":"2021-08-31"},{"lineNumber":139,"author":{"gitId":"WangGLJoseph"},"content":"        default:","lastModifiedDate":"2021-08-31"},{"lineNumber":140,"author":{"gitId":"WangGLJoseph"},"content":"            throw new DukeException(\"Unknown Input\"); // unknown input","lastModifiedDate":"2021-08-31"},{"lineNumber":141,"author":{"gitId":"WangGLJoseph"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":142,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":143,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":144,"author":{"gitId":"WangGLJoseph"},"content":"    public String showLoadingError() {","lastModifiedDate":"2021-08-31"},{"lineNumber":145,"author":{"gitId":"WangGLJoseph"},"content":"        return (\"Loading error: duke.txt could not be loaded\");","lastModifiedDate":"2021-08-31"},{"lineNumber":146,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":147,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":148,"author":{"gitId":"WangGLJoseph"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"WangGLJoseph":148}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WangGLJoseph"},"content":"package cs2103.duke.test;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"WangGLJoseph"},"content":"import cs2103.duke.DukeException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"WangGLJoseph"},"content":"import cs2103.duke.TaskList;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"WangGLJoseph"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"WangGLJoseph"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"WangGLJoseph"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"WangGLJoseph"},"content":"    @Test","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"WangGLJoseph"},"content":"    public void dummyTest() {","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"WangGLJoseph"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"WangGLJoseph"},"content":"    @Test","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"WangGLJoseph"},"content":"    public void testAddTodo() throws DukeException {","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"WangGLJoseph"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"WangGLJoseph"},"content":"        assertEquals(\"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"WangGLJoseph"},"content":"                        + \"New todo task added:\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"WangGLJoseph"},"content":"                        + \"[T][ ] test1\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"WangGLJoseph"},"content":"                        + \"You now have 1 item(s) in your task list.\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"WangGLJoseph"},"content":"                        + \"____________________________________________________________\",","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"WangGLJoseph"},"content":"                tl.addTask(\"todo\", \"test1\", \"\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"WangGLJoseph"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"WangGLJoseph"},"content":"    @Test","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"WangGLJoseph"},"content":"    public void testAddDeadline() throws DukeException {","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"WangGLJoseph"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"WangGLJoseph"},"content":"        assertEquals(\"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"WangGLJoseph"},"content":"                        + \"New deadline task added:\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"WangGLJoseph"},"content":"                        + \"[D][ ] ms3 (by: 2021 07 20)\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"WangGLJoseph"},"content":"                        + \"You now have 1 item(s) in your task list.\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"WangGLJoseph"},"content":"                        + \"____________________________________________________________\",","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"WangGLJoseph"},"content":"                tl.addTask(\"deadline\", \"ms3\", \"2021-07-20\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"WangGLJoseph"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"WangGLJoseph"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"WangGLJoseph":36}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"WangGLJoseph"},"content":"todo Clean room","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"WangGLJoseph"},"content":"deadline CS2103 ip week 2 /by tonight","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"WangGLJoseph"},"content":"event watch national address by PM Lee /at 8pm Friday","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"WangGLJoseph"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"WangGLJoseph"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"WangGLJoseph"},"content":"delete 3","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"WangGLJoseph"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"WangGLJoseph"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"WangGLJoseph":8}}]
