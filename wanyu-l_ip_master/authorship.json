[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"/** This class implements the Duke assistant/chat-bot","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":" * @author damithc","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":" * edited by Wanyu","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":"     * List of tasks that are stored","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"    private static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"     * Greets the user as well as reads user\u0027s inputs with a scanner","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"     * calls the \u0027chat\u0027 method to respond accordingly","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"     * @param args the command-line argument for the program to execute","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"        String separator \u003d \"     _______________________________________________________\";","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"        System.out.println(separator);","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"        System.out.println(\"     Hi! I am Duke!\\n\" + \"     What can I do for you?\");","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"        System.out.println(separator);","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"            String currentLine \u003d sc.nextLine();","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"            System.out.println(currentLine);","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"            System.out.println(separator);","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"wanyu-l"},"content":"            chat(currentLine);","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"wanyu-l"},"content":"            System.out.println(separator);","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"wanyu-l"},"content":"    public enum Command{","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"wanyu-l"},"content":"        TODO, DEADLINE, EVENT, LIST, DONE, DELETE, BYE","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"wanyu-l"},"content":"     * To determine the appropriate response from input command","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"wanyu-l"},"content":"     * by verifying if a valid command has been keyed","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"wanyu-l"},"content":"     * @param s input words that is read by scanner in \u0027main\u0027","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"wanyu-l"},"content":"    public static void chat(String s) {","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"wanyu-l"},"content":"        String check \u003d s.replaceAll(\" \", \"\");","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"wanyu-l"},"content":"        String[] words \u003d s.split(\" \");","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"wanyu-l"},"content":"        if (check.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":56,"author":{"gitId":"wanyu-l"},"content":"            Command c \u003d Command.BYE;","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"wanyu-l"},"content":"            doSomething(c, \"\");","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"wanyu-l"},"content":"        } else if (check.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":59,"author":{"gitId":"wanyu-l"},"content":"            Command c \u003d Command.LIST;","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"wanyu-l"},"content":"            doSomething(c, \"\");","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"wanyu-l"},"content":"        } else if (words[0].equalsIgnoreCase(\"done\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":62,"author":{"gitId":"wanyu-l"},"content":"            Command c \u003d Command.DONE;","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"wanyu-l"},"content":"            doSomething(c, s);","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"wanyu-l"},"content":"        } else if (words[0].equalsIgnoreCase(\"delete\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"wanyu-l"},"content":"            Command c \u003d Command.DELETE;","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"wanyu-l"},"content":"            doSomething(c, s);","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"wanyu-l"},"content":"        } else if (words[0].equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"wanyu-l"},"content":"            Command c \u003d Command.TODO;","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"wanyu-l"},"content":"            doSomething(c, s);","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"wanyu-l"},"content":"        } else if (words[0].equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"wanyu-l"},"content":"            Command c \u003d Command.DEADLINE;","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"wanyu-l"},"content":"            doSomething(c, s);","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"wanyu-l"},"content":"        } else if (words[0].equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"wanyu-l"},"content":"            Command c \u003d Command.EVENT;","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"wanyu-l"},"content":"            doSomething(c, s);","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"wanyu-l"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"wanyu-l"},"content":"            System.out.println(\"     Invalid input :(\");","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"wanyu-l"},"content":"            helperMessage();","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"wanyu-l"},"content":"     * The key method that calls other relevant methods","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"wanyu-l"},"content":"     * depending on instructions as per input by user","lastModifiedDate":"2021-08-18"},{"lineNumber":85,"author":{"gitId":"wanyu-l"},"content":"     * @param c the command specific to a certain sequence of method calls","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"wanyu-l"},"content":"     * @param doWhat the user\u0027s input","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":88,"author":{"gitId":"wanyu-l"},"content":"    public static void doSomething(Command c, String doWhat) {","lastModifiedDate":"2021-08-18"},{"lineNumber":89,"author":{"gitId":"wanyu-l"},"content":"        switch (c) {","lastModifiedDate":"2021-08-18"},{"lineNumber":90,"author":{"gitId":"wanyu-l"},"content":"            case BYE:","lastModifiedDate":"2021-08-18"},{"lineNumber":91,"author":{"gitId":"wanyu-l"},"content":"                System.out.println(\"     Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":92,"author":{"gitId":"wanyu-l"},"content":"                System.exit(0);","lastModifiedDate":"2021-08-18"},{"lineNumber":93,"author":{"gitId":"wanyu-l"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":94,"author":{"gitId":"wanyu-l"},"content":"            case LIST:","lastModifiedDate":"2021-08-18"},{"lineNumber":95,"author":{"gitId":"wanyu-l"},"content":"                getList();","lastModifiedDate":"2021-08-18"},{"lineNumber":96,"author":{"gitId":"wanyu-l"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"wanyu-l"},"content":"            case DONE:","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"wanyu-l"},"content":"                String[] words \u003d doWhat.split(\" \");","lastModifiedDate":"2021-08-18"},{"lineNumber":99,"author":{"gitId":"wanyu-l"},"content":"                try {","lastModifiedDate":"2021-08-16"},{"lineNumber":100,"author":{"gitId":"wanyu-l"},"content":"                    if (words.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":101,"author":{"gitId":"wanyu-l"},"content":"                        throw new IllegalArgumentException(\"Please input index :)\");","lastModifiedDate":"2021-08-17"},{"lineNumber":102,"author":{"gitId":"wanyu-l"},"content":"                    }","lastModifiedDate":"2021-08-17"},{"lineNumber":103,"author":{"gitId":"wanyu-l"},"content":"                    int index \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2021-08-17"},{"lineNumber":104,"author":{"gitId":"wanyu-l"},"content":"                    tasks.get(index).setIsDone();","lastModifiedDate":"2021-08-16"},{"lineNumber":105,"author":{"gitId":"wanyu-l"},"content":"                    if (index \u003e\u003d tasks.size() || index \u003c 0) {","lastModifiedDate":"2021-08-16"},{"lineNumber":106,"author":{"gitId":"wanyu-l"},"content":"                        throw new IllegalArgumentException(\"No such index. Please input correct index, no such index :(\");","lastModifiedDate":"2021-08-17"},{"lineNumber":107,"author":{"gitId":"wanyu-l"},"content":"                    }","lastModifiedDate":"2021-08-16"},{"lineNumber":108,"author":{"gitId":"wanyu-l"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":109,"author":{"gitId":"wanyu-l"},"content":"                    System.out.println(\"     Please input a valid index :)\");","lastModifiedDate":"2021-08-18"},{"lineNumber":110,"author":{"gitId":"wanyu-l"},"content":"                    System.out.println(\"     Note: \u0027list\u0027 can be used to see the current tasks.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":111,"author":{"gitId":"wanyu-l"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":112,"author":{"gitId":"wanyu-l"},"content":"                    System.out.println(\"     Please use a number instead :(\");","lastModifiedDate":"2021-08-17"},{"lineNumber":113,"author":{"gitId":"wanyu-l"},"content":"                } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":114,"author":{"gitId":"wanyu-l"},"content":"                    System.out.println(\"     \" + e.getMessage());","lastModifiedDate":"2021-08-17"},{"lineNumber":115,"author":{"gitId":"wanyu-l"},"content":"                }","lastModifiedDate":"2021-08-16"},{"lineNumber":116,"author":{"gitId":"wanyu-l"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":117,"author":{"gitId":"wanyu-l"},"content":"            case DELETE:","lastModifiedDate":"2021-08-18"},{"lineNumber":118,"author":{"gitId":"wanyu-l"},"content":"                String[] which \u003d doWhat.split(\" \");","lastModifiedDate":"2021-08-18"},{"lineNumber":119,"author":{"gitId":"wanyu-l"},"content":"                if (which.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":120,"author":{"gitId":"wanyu-l"},"content":"                    System.out.println(\"     Unable to delete task without an index. Please input index :)\");","lastModifiedDate":"2021-08-17"},{"lineNumber":121,"author":{"gitId":"wanyu-l"},"content":"                    System.out.println(\"     Please input in the form: \u0027delete \u003ctask index\u003e\u0027.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":122,"author":{"gitId":"wanyu-l"},"content":"                    System.out.println(\"     Note: list can be used to see the current tasks.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":123,"author":{"gitId":"wanyu-l"},"content":"                } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":124,"author":{"gitId":"wanyu-l"},"content":"                    if (tasks.isEmpty() || tasks \u003d\u003d null) {","lastModifiedDate":"2021-08-17"},{"lineNumber":125,"author":{"gitId":"wanyu-l"},"content":"                        System.out.println(\"     List is empty, no tasks to delete, looking good!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":126,"author":{"gitId":"wanyu-l"},"content":"                    } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":127,"author":{"gitId":"wanyu-l"},"content":"                        try {","lastModifiedDate":"2021-08-17"},{"lineNumber":128,"author":{"gitId":"wanyu-l"},"content":"                            int index \u003d Integer.parseInt(which[1]) - 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":129,"author":{"gitId":"wanyu-l"},"content":"                            deleteTask(index);","lastModifiedDate":"2021-08-17"},{"lineNumber":130,"author":{"gitId":"wanyu-l"},"content":"                        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":131,"author":{"gitId":"wanyu-l"},"content":"                            System.out.println(\"     Please use a number instead :(\");","lastModifiedDate":"2021-08-17"},{"lineNumber":132,"author":{"gitId":"wanyu-l"},"content":"                        }","lastModifiedDate":"2021-08-17"},{"lineNumber":133,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":134,"author":{"gitId":"wanyu-l"},"content":"                    }","lastModifiedDate":"2021-08-17"},{"lineNumber":135,"author":{"gitId":"wanyu-l"},"content":"                }","lastModifiedDate":"2021-08-17"},{"lineNumber":136,"author":{"gitId":"wanyu-l"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":137,"author":{"gitId":"wanyu-l"},"content":"            case TODO:","lastModifiedDate":"2021-08-18"},{"lineNumber":138,"author":{"gitId":"wanyu-l"},"content":"                String[] toDoWhat \u003d doWhat.split(\" \");","lastModifiedDate":"2021-08-18"},{"lineNumber":139,"author":{"gitId":"wanyu-l"},"content":"                if (toDoWhat.length \u003c 2) {","lastModifiedDate":"2021-08-18"},{"lineNumber":140,"author":{"gitId":"wanyu-l"},"content":"                    System.out.println(\"     Oops, you have left out the task description for todo!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":141,"author":{"gitId":"wanyu-l"},"content":"                } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":142,"author":{"gitId":"wanyu-l"},"content":"                    ToDo t \u003d new ToDo(filterInfo(toDoWhat));","lastModifiedDate":"2021-08-18"},{"lineNumber":143,"author":{"gitId":"wanyu-l"},"content":"                    addTask(t);","lastModifiedDate":"2021-08-18"},{"lineNumber":144,"author":{"gitId":"wanyu-l"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":145,"author":{"gitId":"wanyu-l"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":146,"author":{"gitId":"wanyu-l"},"content":"            case DEADLINE:","lastModifiedDate":"2021-08-18"},{"lineNumber":147,"author":{"gitId":"wanyu-l"},"content":"                String[] deadlineDoWhat \u003d doWhat.split(\" \");","lastModifiedDate":"2021-08-18"},{"lineNumber":148,"author":{"gitId":"wanyu-l"},"content":"                try {","lastModifiedDate":"2021-08-16"},{"lineNumber":149,"author":{"gitId":"wanyu-l"},"content":"                    Deadline d \u003d new Deadline(filterInfo(deadlineDoWhat), lookForDeadline(deadlineDoWhat));","lastModifiedDate":"2021-08-18"},{"lineNumber":150,"author":{"gitId":"wanyu-l"},"content":"                    addTask(d);","lastModifiedDate":"2021-08-18"},{"lineNumber":151,"author":{"gitId":"wanyu-l"},"content":"                } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":152,"author":{"gitId":"wanyu-l"},"content":"                    if (e.getMessage().equals(\"deadline\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":153,"author":{"gitId":"wanyu-l"},"content":"                        System.out.println(\"     Invalid input :(\");","lastModifiedDate":"2021-08-18"},{"lineNumber":154,"author":{"gitId":"wanyu-l"},"content":"                        System.out.println(\"     Please input in the form: \u0027deadline \u003cName\u003e /by \u003cDate\u003e\u0027.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":155,"author":{"gitId":"wanyu-l"},"content":"                    } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":156,"author":{"gitId":"wanyu-l"},"content":"                        System.out.println(\"     \" + e.getMessage());","lastModifiedDate":"2021-08-18"},{"lineNumber":157,"author":{"gitId":"wanyu-l"},"content":"                        System.out.println(\"     Hey, no deadline recorded does not mean no deadline \u003e:(\");","lastModifiedDate":"2021-08-18"},{"lineNumber":158,"author":{"gitId":"wanyu-l"},"content":"                    }","lastModifiedDate":"2021-08-18"},{"lineNumber":159,"author":{"gitId":"wanyu-l"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":160,"author":{"gitId":"wanyu-l"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":161,"author":{"gitId":"wanyu-l"},"content":"            case EVENT:","lastModifiedDate":"2021-08-18"},{"lineNumber":162,"author":{"gitId":"wanyu-l"},"content":"                String[] whatEvent \u003d doWhat.split(\" \");","lastModifiedDate":"2021-08-18"},{"lineNumber":163,"author":{"gitId":"wanyu-l"},"content":"                try {","lastModifiedDate":"2021-08-18"},{"lineNumber":164,"author":{"gitId":"wanyu-l"},"content":"                    Event d \u003d new Event(filterInfo(whatEvent), searchForEventDay(whatEvent));","lastModifiedDate":"2021-08-18"},{"lineNumber":165,"author":{"gitId":"wanyu-l"},"content":"                    addTask(d);","lastModifiedDate":"2021-08-18"},{"lineNumber":166,"author":{"gitId":"wanyu-l"},"content":"                } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":167,"author":{"gitId":"wanyu-l"},"content":"                    if (e.getMessage().equals(\"event\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":168,"author":{"gitId":"wanyu-l"},"content":"                        System.out.println(\"     Invalid input :(\");","lastModifiedDate":"2021-08-18"},{"lineNumber":169,"author":{"gitId":"wanyu-l"},"content":"                        System.out.println(\"     Please input in the form: \u0027event \u003cName\u003e /at \u003cDate\u003e\u0027.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":170,"author":{"gitId":"wanyu-l"},"content":"                    } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":171,"author":{"gitId":"wanyu-l"},"content":"                        System.out.println(\"     \" + e.getMessage());","lastModifiedDate":"2021-08-17"},{"lineNumber":172,"author":{"gitId":"wanyu-l"},"content":"                        System.out.println(\"     I can\u0027t add an event without a date!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":173,"author":{"gitId":"wanyu-l"},"content":"                    }","lastModifiedDate":"2021-08-16"},{"lineNumber":174,"author":{"gitId":"wanyu-l"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":175,"author":{"gitId":"wanyu-l"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":176,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":177,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":178,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":179,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":180,"author":{"gitId":"wanyu-l"},"content":"     * To delete a task from the list","lastModifiedDate":"2021-08-17"},{"lineNumber":181,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":182,"author":{"gitId":"wanyu-l"},"content":"     * @param ind the index of task to be deleted","lastModifiedDate":"2021-08-17"},{"lineNumber":183,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":184,"author":{"gitId":"wanyu-l"},"content":"    public static void deleteTask(int ind) {","lastModifiedDate":"2021-08-17"},{"lineNumber":185,"author":{"gitId":"wanyu-l"},"content":"        //because of how this method is called, ind will be valid","lastModifiedDate":"2021-08-17"},{"lineNumber":186,"author":{"gitId":"wanyu-l"},"content":"        Task t \u003d tasks.remove(ind);","lastModifiedDate":"2021-08-17"},{"lineNumber":187,"author":{"gitId":"wanyu-l"},"content":"        System.out.println(\"     Noted, the following task has been deleted: \");","lastModifiedDate":"2021-08-17"},{"lineNumber":188,"author":{"gitId":"wanyu-l"},"content":"        System.out.println(\"       \" + t.getType() + \"[\" + t.getStatus() + \"] \" + t.getTask());","lastModifiedDate":"2021-08-17"},{"lineNumber":189,"author":{"gitId":"wanyu-l"},"content":"        System.out.println(\"     Nice! there are \" + tasks.size() + \" task(s) left.\" );","lastModifiedDate":"2021-08-18"},{"lineNumber":190,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":191,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":192,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":193,"author":{"gitId":"wanyu-l"},"content":"     * To display commands to help user with input as much as possible","lastModifiedDate":"2021-08-17"},{"lineNumber":194,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":195,"author":{"gitId":"wanyu-l"},"content":"    public static void helperMessage() {","lastModifiedDate":"2021-08-17"},{"lineNumber":196,"author":{"gitId":"wanyu-l"},"content":"        System.out.println(\"     Types of tasks: \u0027todo\u0027, \u0027deadline\u0027, \u0027event\u0027\");","lastModifiedDate":"2021-08-18"},{"lineNumber":197,"author":{"gitId":"wanyu-l"},"content":"        System.out.println(\"     If you wish to add a task,\" +","lastModifiedDate":"2021-08-18"},{"lineNumber":198,"author":{"gitId":"wanyu-l"},"content":"                \" please input in the form: \u0027\u003cType of Task\u003e \u003cName of Task\u003e\u0027\" +","lastModifiedDate":"2021-08-18"},{"lineNumber":199,"author":{"gitId":"wanyu-l"},"content":"                \" and include keyword \u0027/at\u0027 OR \u0027/by\u0027 followed by \u003cDate\u003e if relevant.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":200,"author":{"gitId":"wanyu-l"},"content":"        System.out.println(\"     If you wish to delete a task, \"","lastModifiedDate":"2021-08-18"},{"lineNumber":201,"author":{"gitId":"wanyu-l"},"content":"                + \"please input in the form: \u0027delete \u003ctask index\u003e\u0027.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":202,"author":{"gitId":"wanyu-l"},"content":"        System.out.println(\"     If you wish to see the current tasks, please input \u0027list\u0027.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":203,"author":{"gitId":"wanyu-l"},"content":"        System.out.println(\"     If you wish to mark a task as done, please input \u0027done \u003ctask index\u003e.\u0027\");","lastModifiedDate":"2021-08-17"},{"lineNumber":204,"author":{"gitId":"wanyu-l"},"content":"        System.out.println(\"     If you wish to terminate the program, please input \u0027bye\u0027.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":205,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":206,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":207,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":208,"author":{"gitId":"wanyu-l"},"content":"     * To get the String representation of the date/deadline as input by user","lastModifiedDate":"2021-08-17"},{"lineNumber":209,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":210,"author":{"gitId":"wanyu-l"},"content":"     * @param words the String array representation of the input by user","lastModifiedDate":"2021-08-17"},{"lineNumber":211,"author":{"gitId":"wanyu-l"},"content":"     * @return the concatenated String that is the date specified by user","lastModifiedDate":"2021-08-17"},{"lineNumber":212,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":213,"author":{"gitId":"wanyu-l"},"content":"    public static String filterInfo(String[] words) {","lastModifiedDate":"2021-08-16"},{"lineNumber":214,"author":{"gitId":"wanyu-l"},"content":"        String temp \u003d \"\";","lastModifiedDate":"2021-08-16"},{"lineNumber":215,"author":{"gitId":"wanyu-l"},"content":"        for (int i \u003d 1; i \u003c words.length; i++) {","lastModifiedDate":"2021-08-16"},{"lineNumber":216,"author":{"gitId":"wanyu-l"},"content":"            if (!(words[i].equals(\"/at\")||words[i].equals(\"/by\"))) {","lastModifiedDate":"2021-08-16"},{"lineNumber":217,"author":{"gitId":"wanyu-l"},"content":"                temp +\u003d words[i] + \" \";","lastModifiedDate":"2021-08-16"},{"lineNumber":218,"author":{"gitId":"wanyu-l"},"content":"            } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":219,"author":{"gitId":"wanyu-l"},"content":"                break;","lastModifiedDate":"2021-08-16"},{"lineNumber":220,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":221,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":222,"author":{"gitId":"wanyu-l"},"content":"        return temp;","lastModifiedDate":"2021-08-16"},{"lineNumber":223,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":224,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":225,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":226,"author":{"gitId":"wanyu-l"},"content":"     * To identify the start of String representation of date of Event","lastModifiedDate":"2021-08-17"},{"lineNumber":227,"author":{"gitId":"wanyu-l"},"content":"     * by finding the \"/at\" expression","lastModifiedDate":"2021-08-17"},{"lineNumber":228,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":229,"author":{"gitId":"wanyu-l"},"content":"     * @param args the String array representation of the input by user","lastModifiedDate":"2021-08-17"},{"lineNumber":230,"author":{"gitId":"wanyu-l"},"content":"     * @return the String representation of the date by passing it to method","lastModifiedDate":"2021-08-17"},{"lineNumber":231,"author":{"gitId":"wanyu-l"},"content":"     * getDate which requires a starting index as an argument","lastModifiedDate":"2021-08-17"},{"lineNumber":232,"author":{"gitId":"wanyu-l"},"content":"     * @throws IllegalArgumentException thrown when encountering a String Array without","lastModifiedDate":"2021-08-17"},{"lineNumber":233,"author":{"gitId":"wanyu-l"},"content":"     * the presence of \"/at\" expression, which is not a valid input for Event","lastModifiedDate":"2021-08-17"},{"lineNumber":234,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":235,"author":{"gitId":"wanyu-l"},"content":"    public static String searchForEventDay(String[] args) throws IllegalArgumentException {","lastModifiedDate":"2021-08-16"},{"lineNumber":236,"author":{"gitId":"wanyu-l"},"content":"        for (int i \u003d 1; i \u003c args.length; i++) {","lastModifiedDate":"2021-08-16"},{"lineNumber":237,"author":{"gitId":"wanyu-l"},"content":"            if (args[i].equals(\"/at\")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":238,"author":{"gitId":"wanyu-l"},"content":"                if  (i + 1 \u003e\u003d args.length) {","lastModifiedDate":"2021-08-16"},{"lineNumber":239,"author":{"gitId":"wanyu-l"},"content":"                    throw new IllegalArgumentException(\"Oh no, date is missing :(\");","lastModifiedDate":"2021-08-16"},{"lineNumber":240,"author":{"gitId":"wanyu-l"},"content":"                } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":241,"author":{"gitId":"wanyu-l"},"content":"                    return getDate(args, i + 1);","lastModifiedDate":"2021-08-16"},{"lineNumber":242,"author":{"gitId":"wanyu-l"},"content":"                }","lastModifiedDate":"2021-08-16"},{"lineNumber":243,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":244,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":245,"author":{"gitId":"wanyu-l"},"content":"        throw new IllegalArgumentException(\"event\");","lastModifiedDate":"2021-08-18"},{"lineNumber":246,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":247,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":248,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":249,"author":{"gitId":"wanyu-l"},"content":"     * To identify the start of String representation of date for Deadline","lastModifiedDate":"2021-08-17"},{"lineNumber":250,"author":{"gitId":"wanyu-l"},"content":"     * by finding the \"/by\" expression","lastModifiedDate":"2021-08-17"},{"lineNumber":251,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":252,"author":{"gitId":"wanyu-l"},"content":"     * @param arg the String array representation of the input by user","lastModifiedDate":"2021-08-17"},{"lineNumber":253,"author":{"gitId":"wanyu-l"},"content":"     * @return the String representation of the date by passing it to method","lastModifiedDate":"2021-08-17"},{"lineNumber":254,"author":{"gitId":"wanyu-l"},"content":"     * getDate which requires a starting index as an argument","lastModifiedDate":"2021-08-17"},{"lineNumber":255,"author":{"gitId":"wanyu-l"},"content":"     * @throws IllegalArgumentException thrown when encountering a String Array without","lastModifiedDate":"2021-08-17"},{"lineNumber":256,"author":{"gitId":"wanyu-l"},"content":"     * the presence of \"/by\" expression, which is not a valid input for Deadline","lastModifiedDate":"2021-08-17"},{"lineNumber":257,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":258,"author":{"gitId":"wanyu-l"},"content":"    public static String lookForDeadline(String[] arg) throws IllegalArgumentException {","lastModifiedDate":"2021-08-16"},{"lineNumber":259,"author":{"gitId":"wanyu-l"},"content":"        for (int i \u003d 1; i \u003c arg.length; i++) {","lastModifiedDate":"2021-08-16"},{"lineNumber":260,"author":{"gitId":"wanyu-l"},"content":"            if (arg[i].equals(\"/by\")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":261,"author":{"gitId":"wanyu-l"},"content":"                if  (i + 1 \u003e\u003d arg.length) {","lastModifiedDate":"2021-08-16"},{"lineNumber":262,"author":{"gitId":"wanyu-l"},"content":"                    throw new IllegalArgumentException(\"Uh oh, deadline is missing :(\");","lastModifiedDate":"2021-08-18"},{"lineNumber":263,"author":{"gitId":"wanyu-l"},"content":"                } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":264,"author":{"gitId":"wanyu-l"},"content":"                    return getDate(arg, i + 1);","lastModifiedDate":"2021-08-16"},{"lineNumber":265,"author":{"gitId":"wanyu-l"},"content":"                }","lastModifiedDate":"2021-08-16"},{"lineNumber":266,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":267,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":268,"author":{"gitId":"wanyu-l"},"content":"        throw new IllegalArgumentException(\"deadline\");","lastModifiedDate":"2021-08-18"},{"lineNumber":269,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":270,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":271,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":272,"author":{"gitId":"wanyu-l"},"content":"     * To create a String representation of date by","lastModifiedDate":"2021-08-17"},{"lineNumber":273,"author":{"gitId":"wanyu-l"},"content":"     * concatenating a String from the starting index to the last index","lastModifiedDate":"2021-08-17"},{"lineNumber":274,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":275,"author":{"gitId":"wanyu-l"},"content":"     * @param s the String array representation of the input by user","lastModifiedDate":"2021-08-17"},{"lineNumber":276,"author":{"gitId":"wanyu-l"},"content":"     * @param start the starting index","lastModifiedDate":"2021-08-17"},{"lineNumber":277,"author":{"gitId":"wanyu-l"},"content":"     * @return String representation of date as input by user","lastModifiedDate":"2021-08-17"},{"lineNumber":278,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":279,"author":{"gitId":"wanyu-l"},"content":"    public static String getDate(String[] s, int start) {","lastModifiedDate":"2021-08-16"},{"lineNumber":280,"author":{"gitId":"wanyu-l"},"content":"        String temp \u003d \"\";","lastModifiedDate":"2021-08-16"},{"lineNumber":281,"author":{"gitId":"wanyu-l"},"content":"        for (int i \u003d start; i \u003c s.length; i++) {","lastModifiedDate":"2021-08-16"},{"lineNumber":282,"author":{"gitId":"wanyu-l"},"content":"            if (i + 1 \u003c s.length) {","lastModifiedDate":"2021-08-17"},{"lineNumber":283,"author":{"gitId":"wanyu-l"},"content":"                temp +\u003d s[i] + \" \";","lastModifiedDate":"2021-08-16"},{"lineNumber":284,"author":{"gitId":"wanyu-l"},"content":"            } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":285,"author":{"gitId":"wanyu-l"},"content":"                temp +\u003d s[i];","lastModifiedDate":"2021-08-17"},{"lineNumber":286,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":287,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":288,"author":{"gitId":"wanyu-l"},"content":"        return temp;","lastModifiedDate":"2021-08-16"},{"lineNumber":289,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":290,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":291,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":292,"author":{"gitId":"wanyu-l"},"content":"     * To add things to the stored list of tasks","lastModifiedDate":"2021-08-16"},{"lineNumber":293,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":294,"author":{"gitId":"wanyu-l"},"content":"     * @param t the task to be added/e","lastModifiedDate":"2021-08-17"},{"lineNumber":295,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":296,"author":{"gitId":"wanyu-l"},"content":"    public static void addTask(Task t) {","lastModifiedDate":"2021-08-16"},{"lineNumber":297,"author":{"gitId":"wanyu-l"},"content":"        if (tasks \u003d\u003d null) {","lastModifiedDate":"2021-08-16"},{"lineNumber":298,"author":{"gitId":"wanyu-l"},"content":"            tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-16"},{"lineNumber":299,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":300,"author":{"gitId":"wanyu-l"},"content":"        tasks.add(t);","lastModifiedDate":"2021-08-16"},{"lineNumber":301,"author":{"gitId":"wanyu-l"},"content":"        System.out.println(\"     Successfully added:\\n\" + \"     \" + t.getType() + \"[ ] \" + t.getTask());","lastModifiedDate":"2021-08-16"},{"lineNumber":302,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":303,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":304,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":305,"author":{"gitId":"wanyu-l"},"content":"     * To display the entire list of tasks sequentially","lastModifiedDate":"2021-08-16"},{"lineNumber":306,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":307,"author":{"gitId":"wanyu-l"},"content":"    public static void getList() {","lastModifiedDate":"2021-08-16"},{"lineNumber":308,"author":{"gitId":"wanyu-l"},"content":"        if (tasks !\u003d null \u0026\u0026 !tasks.isEmpty()) {","lastModifiedDate":"2021-08-17"},{"lineNumber":309,"author":{"gitId":"wanyu-l"},"content":"            System.out.println(\"     The current list has these items:\");","lastModifiedDate":"2021-08-16"},{"lineNumber":310,"author":{"gitId":"wanyu-l"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-16"},{"lineNumber":311,"author":{"gitId":"wanyu-l"},"content":"                System.out.println(\"     \" + (i + 1) + \".\" + tasks.get(i).getType() + \"[\" + tasks.get(i).getStatus() + \"] \"","lastModifiedDate":"2021-08-16"},{"lineNumber":312,"author":{"gitId":"wanyu-l"},"content":"                        + tasks.get(i).getTask());","lastModifiedDate":"2021-08-16"},{"lineNumber":313,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":314,"author":{"gitId":"wanyu-l"},"content":"            System.out.println(\"     There are \" + tasks.size() + \" task(s) now, keep up!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":315,"author":{"gitId":"wanyu-l"},"content":"        } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":316,"author":{"gitId":"wanyu-l"},"content":"            System.out.println(\"     There are no items in your list, keep adding them!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":317,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":318,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":319,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":320,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":321,"author":{"gitId":"wanyu-l"},"content":"     * This class implements the tasks to be tracked by the","lastModifiedDate":"2021-08-16"},{"lineNumber":322,"author":{"gitId":"wanyu-l"},"content":"     * Duke assistant","lastModifiedDate":"2021-08-16"},{"lineNumber":323,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":324,"author":{"gitId":"wanyu-l"},"content":"    public static class Task{","lastModifiedDate":"2021-08-16"},{"lineNumber":325,"author":{"gitId":"wanyu-l"},"content":"        /**","lastModifiedDate":"2021-08-16"},{"lineNumber":326,"author":{"gitId":"wanyu-l"},"content":"         * Description of the task","lastModifiedDate":"2021-08-16"},{"lineNumber":327,"author":{"gitId":"wanyu-l"},"content":"         */","lastModifiedDate":"2021-08-16"},{"lineNumber":328,"author":{"gitId":"wanyu-l"},"content":"        private final String task;","lastModifiedDate":"2021-08-16"},{"lineNumber":329,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":330,"author":{"gitId":"wanyu-l"},"content":"        /**","lastModifiedDate":"2021-08-16"},{"lineNumber":331,"author":{"gitId":"wanyu-l"},"content":"         * Status of the task represented by String","lastModifiedDate":"2021-08-16"},{"lineNumber":332,"author":{"gitId":"wanyu-l"},"content":"         */","lastModifiedDate":"2021-08-16"},{"lineNumber":333,"author":{"gitId":"wanyu-l"},"content":"        private String isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":334,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":335,"author":{"gitId":"wanyu-l"},"content":"        /**","lastModifiedDate":"2021-08-16"},{"lineNumber":336,"author":{"gitId":"wanyu-l"},"content":"         * Constructor for a Task","lastModifiedDate":"2021-08-16"},{"lineNumber":337,"author":{"gitId":"wanyu-l"},"content":"         * @param s the input string to describe the task","lastModifiedDate":"2021-08-16"},{"lineNumber":338,"author":{"gitId":"wanyu-l"},"content":"         */","lastModifiedDate":"2021-08-16"},{"lineNumber":339,"author":{"gitId":"wanyu-l"},"content":"        public Task(String s) {","lastModifiedDate":"2021-08-16"},{"lineNumber":340,"author":{"gitId":"wanyu-l"},"content":"            this.task \u003d s;","lastModifiedDate":"2021-08-16"},{"lineNumber":341,"author":{"gitId":"wanyu-l"},"content":"            this.isDone \u003d \" \";","lastModifiedDate":"2021-08-16"},{"lineNumber":342,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":343,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":344,"author":{"gitId":"wanyu-l"},"content":"        /**","lastModifiedDate":"2021-08-16"},{"lineNumber":345,"author":{"gitId":"wanyu-l"},"content":"         * To mark a task as complete by changing","lastModifiedDate":"2021-08-16"},{"lineNumber":346,"author":{"gitId":"wanyu-l"},"content":"         * the String representation","lastModifiedDate":"2021-08-16"},{"lineNumber":347,"author":{"gitId":"wanyu-l"},"content":"         */","lastModifiedDate":"2021-08-16"},{"lineNumber":348,"author":{"gitId":"wanyu-l"},"content":"        public void setIsDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":349,"author":{"gitId":"wanyu-l"},"content":"            if (this.isDone.equals(\" \")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":350,"author":{"gitId":"wanyu-l"},"content":"                this.isDone \u003d \"X\";","lastModifiedDate":"2021-08-16"},{"lineNumber":351,"author":{"gitId":"wanyu-l"},"content":"                System.out.println(\"     Well done! The task is completed!\");","lastModifiedDate":"2021-08-16"},{"lineNumber":352,"author":{"gitId":"wanyu-l"},"content":"            } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":353,"author":{"gitId":"wanyu-l"},"content":"                System.out.println(\"     You have already completed this task before!\");","lastModifiedDate":"2021-08-16"},{"lineNumber":354,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":355,"author":{"gitId":"wanyu-l"},"content":"            System.out.println(\"       [\" + isDone + \"] \" + this.getTask());","lastModifiedDate":"2021-08-16"},{"lineNumber":356,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":357,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":358,"author":{"gitId":"wanyu-l"},"content":"        /**","lastModifiedDate":"2021-08-16"},{"lineNumber":359,"author":{"gitId":"wanyu-l"},"content":"         * To retrieve the status of the task","lastModifiedDate":"2021-08-16"},{"lineNumber":360,"author":{"gitId":"wanyu-l"},"content":"         * whether it is complete or not","lastModifiedDate":"2021-08-16"},{"lineNumber":361,"author":{"gitId":"wanyu-l"},"content":"         *","lastModifiedDate":"2021-08-17"},{"lineNumber":362,"author":{"gitId":"wanyu-l"},"content":"         * @return the string representation of the task\u0027s state","lastModifiedDate":"2021-08-16"},{"lineNumber":363,"author":{"gitId":"wanyu-l"},"content":"         */","lastModifiedDate":"2021-08-16"},{"lineNumber":364,"author":{"gitId":"wanyu-l"},"content":"        public String getStatus() {","lastModifiedDate":"2021-08-16"},{"lineNumber":365,"author":{"gitId":"wanyu-l"},"content":"            return this.isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":366,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":367,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":368,"author":{"gitId":"wanyu-l"},"content":"        /**","lastModifiedDate":"2021-08-16"},{"lineNumber":369,"author":{"gitId":"wanyu-l"},"content":"         * To retrieve the description of the task","lastModifiedDate":"2021-08-16"},{"lineNumber":370,"author":{"gitId":"wanyu-l"},"content":"         *","lastModifiedDate":"2021-08-16"},{"lineNumber":371,"author":{"gitId":"wanyu-l"},"content":"         * @return the String that is the description of the task","lastModifiedDate":"2021-08-16"},{"lineNumber":372,"author":{"gitId":"wanyu-l"},"content":"         */","lastModifiedDate":"2021-08-16"},{"lineNumber":373,"author":{"gitId":"wanyu-l"},"content":"        public String getTask() {","lastModifiedDate":"2021-08-16"},{"lineNumber":374,"author":{"gitId":"wanyu-l"},"content":"            return this.task;","lastModifiedDate":"2021-08-16"},{"lineNumber":375,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":376,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":377,"author":{"gitId":"wanyu-l"},"content":"        /**","lastModifiedDate":"2021-08-17"},{"lineNumber":378,"author":{"gitId":"wanyu-l"},"content":"         * To retrieve the information on the type of Task","lastModifiedDate":"2021-08-17"},{"lineNumber":379,"author":{"gitId":"wanyu-l"},"content":"         *","lastModifiedDate":"2021-08-17"},{"lineNumber":380,"author":{"gitId":"wanyu-l"},"content":"         * @return the String description of the type of Task","lastModifiedDate":"2021-08-17"},{"lineNumber":381,"author":{"gitId":"wanyu-l"},"content":"         */","lastModifiedDate":"2021-08-17"},{"lineNumber":382,"author":{"gitId":"wanyu-l"},"content":"        public String getType() {","lastModifiedDate":"2021-08-16"},{"lineNumber":383,"author":{"gitId":"wanyu-l"},"content":"            return \"regular\";","lastModifiedDate":"2021-08-16"},{"lineNumber":384,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":385,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":386,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":387,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":388,"author":{"gitId":"wanyu-l"},"content":"     * The ToDo class is a child class for Task","lastModifiedDate":"2021-08-17"},{"lineNumber":389,"author":{"gitId":"wanyu-l"},"content":"     * to support different specificities of a task","lastModifiedDate":"2021-08-17"},{"lineNumber":390,"author":{"gitId":"wanyu-l"},"content":"     * as input by user","lastModifiedDate":"2021-08-17"},{"lineNumber":391,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":392,"author":{"gitId":"wanyu-l"},"content":"    public static class ToDo extends Task{","lastModifiedDate":"2021-08-16"},{"lineNumber":393,"author":{"gitId":"wanyu-l"},"content":"        /**","lastModifiedDate":"2021-08-17"},{"lineNumber":394,"author":{"gitId":"wanyu-l"},"content":"         * The String to store the type of task information","lastModifiedDate":"2021-08-17"},{"lineNumber":395,"author":{"gitId":"wanyu-l"},"content":"         * that identifies a ToDo task","lastModifiedDate":"2021-08-17"},{"lineNumber":396,"author":{"gitId":"wanyu-l"},"content":"         */","lastModifiedDate":"2021-08-17"},{"lineNumber":397,"author":{"gitId":"wanyu-l"},"content":"        final String type \u003d \"[T]\";","lastModifiedDate":"2021-08-17"},{"lineNumber":398,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":399,"author":{"gitId":"wanyu-l"},"content":"        /**","lastModifiedDate":"2021-08-17"},{"lineNumber":400,"author":{"gitId":"wanyu-l"},"content":"         * Constructor for a ToDo task","lastModifiedDate":"2021-08-17"},{"lineNumber":401,"author":{"gitId":"wanyu-l"},"content":"         *","lastModifiedDate":"2021-08-17"},{"lineNumber":402,"author":{"gitId":"wanyu-l"},"content":"         * @param s the input string to describe the ToDO task","lastModifiedDate":"2021-08-17"},{"lineNumber":403,"author":{"gitId":"wanyu-l"},"content":"         */","lastModifiedDate":"2021-08-17"},{"lineNumber":404,"author":{"gitId":"wanyu-l"},"content":"        public ToDo(String s) {","lastModifiedDate":"2021-08-16"},{"lineNumber":405,"author":{"gitId":"wanyu-l"},"content":"            super(s);","lastModifiedDate":"2021-08-16"},{"lineNumber":406,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":407,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":408,"author":{"gitId":"wanyu-l"},"content":"        /**","lastModifiedDate":"2021-08-17"},{"lineNumber":409,"author":{"gitId":"wanyu-l"},"content":"         * To retrieve the information on the type of Task","lastModifiedDate":"2021-08-17"},{"lineNumber":410,"author":{"gitId":"wanyu-l"},"content":"         *","lastModifiedDate":"2021-08-17"},{"lineNumber":411,"author":{"gitId":"wanyu-l"},"content":"         * @return the String description of the type of Task","lastModifiedDate":"2021-08-17"},{"lineNumber":412,"author":{"gitId":"wanyu-l"},"content":"         */","lastModifiedDate":"2021-08-17"},{"lineNumber":413,"author":{"gitId":"wanyu-l"},"content":"        public String getType() {","lastModifiedDate":"2021-08-16"},{"lineNumber":414,"author":{"gitId":"wanyu-l"},"content":"            return this.type;","lastModifiedDate":"2021-08-16"},{"lineNumber":415,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":416,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":417,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":418,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":419,"author":{"gitId":"wanyu-l"},"content":"     * The Deadline class is a child class for Task","lastModifiedDate":"2021-08-17"},{"lineNumber":420,"author":{"gitId":"wanyu-l"},"content":"     * to support different specificities of a task","lastModifiedDate":"2021-08-17"},{"lineNumber":421,"author":{"gitId":"wanyu-l"},"content":"     * as input by user","lastModifiedDate":"2021-08-17"},{"lineNumber":422,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":423,"author":{"gitId":"wanyu-l"},"content":"    public static class Deadline extends Task{","lastModifiedDate":"2021-08-16"},{"lineNumber":424,"author":{"gitId":"wanyu-l"},"content":"        /**","lastModifiedDate":"2021-08-17"},{"lineNumber":425,"author":{"gitId":"wanyu-l"},"content":"         * The String to store the type of task information","lastModifiedDate":"2021-08-17"},{"lineNumber":426,"author":{"gitId":"wanyu-l"},"content":"         * that identifies a Deadline task","lastModifiedDate":"2021-08-17"},{"lineNumber":427,"author":{"gitId":"wanyu-l"},"content":"         */","lastModifiedDate":"2021-08-17"},{"lineNumber":428,"author":{"gitId":"wanyu-l"},"content":"        final String type \u003d \"[D]\";","lastModifiedDate":"2021-08-17"},{"lineNumber":429,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":430,"author":{"gitId":"wanyu-l"},"content":"        /**","lastModifiedDate":"2021-08-17"},{"lineNumber":431,"author":{"gitId":"wanyu-l"},"content":"         * The String to store the do-by-date information","lastModifiedDate":"2021-08-17"},{"lineNumber":432,"author":{"gitId":"wanyu-l"},"content":"         * that identifies a Deadline task","lastModifiedDate":"2021-08-17"},{"lineNumber":433,"author":{"gitId":"wanyu-l"},"content":"         */","lastModifiedDate":"2021-08-17"},{"lineNumber":434,"author":{"gitId":"wanyu-l"},"content":"        final String dueDate;","lastModifiedDate":"2021-08-17"},{"lineNumber":435,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":436,"author":{"gitId":"wanyu-l"},"content":"        /**","lastModifiedDate":"2021-08-17"},{"lineNumber":437,"author":{"gitId":"wanyu-l"},"content":"         * Constructor for a Deadline task","lastModifiedDate":"2021-08-17"},{"lineNumber":438,"author":{"gitId":"wanyu-l"},"content":"         *","lastModifiedDate":"2021-08-17"},{"lineNumber":439,"author":{"gitId":"wanyu-l"},"content":"         * @param s the input string to describe the Deadline task","lastModifiedDate":"2021-08-17"},{"lineNumber":440,"author":{"gitId":"wanyu-l"},"content":"         * @param date the do-by-date","lastModifiedDate":"2021-08-17"},{"lineNumber":441,"author":{"gitId":"wanyu-l"},"content":"         */","lastModifiedDate":"2021-08-17"},{"lineNumber":442,"author":{"gitId":"wanyu-l"},"content":"        public Deadline(String s, String date) {","lastModifiedDate":"2021-08-16"},{"lineNumber":443,"author":{"gitId":"wanyu-l"},"content":"            super(s);","lastModifiedDate":"2021-08-16"},{"lineNumber":444,"author":{"gitId":"wanyu-l"},"content":"            this.dueDate \u003d date;","lastModifiedDate":"2021-08-16"},{"lineNumber":445,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":446,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":447,"author":{"gitId":"wanyu-l"},"content":"        /**","lastModifiedDate":"2021-08-17"},{"lineNumber":448,"author":{"gitId":"wanyu-l"},"content":"         * To retrieve the information on the type of Task","lastModifiedDate":"2021-08-17"},{"lineNumber":449,"author":{"gitId":"wanyu-l"},"content":"         *","lastModifiedDate":"2021-08-17"},{"lineNumber":450,"author":{"gitId":"wanyu-l"},"content":"         * @return the String description of the type of Task","lastModifiedDate":"2021-08-17"},{"lineNumber":451,"author":{"gitId":"wanyu-l"},"content":"         */","lastModifiedDate":"2021-08-17"},{"lineNumber":452,"author":{"gitId":"wanyu-l"},"content":"        public String getType() {","lastModifiedDate":"2021-08-16"},{"lineNumber":453,"author":{"gitId":"wanyu-l"},"content":"            return this.type;","lastModifiedDate":"2021-08-16"},{"lineNumber":454,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":455,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":456,"author":{"gitId":"wanyu-l"},"content":"        /**","lastModifiedDate":"2021-08-17"},{"lineNumber":457,"author":{"gitId":"wanyu-l"},"content":"         * To retrieve the description of the Deadline task","lastModifiedDate":"2021-08-17"},{"lineNumber":458,"author":{"gitId":"wanyu-l"},"content":"         *","lastModifiedDate":"2021-08-17"},{"lineNumber":459,"author":{"gitId":"wanyu-l"},"content":"         * @return the String that is the description of the Deadline task","lastModifiedDate":"2021-08-17"},{"lineNumber":460,"author":{"gitId":"wanyu-l"},"content":"         */","lastModifiedDate":"2021-08-17"},{"lineNumber":461,"author":{"gitId":"wanyu-l"},"content":"        @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":462,"author":{"gitId":"wanyu-l"},"content":"        public String getTask() {","lastModifiedDate":"2021-08-16"},{"lineNumber":463,"author":{"gitId":"wanyu-l"},"content":"            return super.getTask() + \"(by: \" + this.dueDate + \")\";","lastModifiedDate":"2021-08-16"},{"lineNumber":464,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":465,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":466,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":467,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":468,"author":{"gitId":"wanyu-l"},"content":"     * The Event class is a child class for Task","lastModifiedDate":"2021-08-17"},{"lineNumber":469,"author":{"gitId":"wanyu-l"},"content":"     * to support different specificities of a task","lastModifiedDate":"2021-08-17"},{"lineNumber":470,"author":{"gitId":"wanyu-l"},"content":"     * as input by user","lastModifiedDate":"2021-08-17"},{"lineNumber":471,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":472,"author":{"gitId":"wanyu-l"},"content":"    public static class Event extends Task{","lastModifiedDate":"2021-08-16"},{"lineNumber":473,"author":{"gitId":"wanyu-l"},"content":"        /**","lastModifiedDate":"2021-08-17"},{"lineNumber":474,"author":{"gitId":"wanyu-l"},"content":"         * The String to store the type of task information","lastModifiedDate":"2021-08-17"},{"lineNumber":475,"author":{"gitId":"wanyu-l"},"content":"         * that identifies an Event task","lastModifiedDate":"2021-08-17"},{"lineNumber":476,"author":{"gitId":"wanyu-l"},"content":"         */","lastModifiedDate":"2021-08-17"},{"lineNumber":477,"author":{"gitId":"wanyu-l"},"content":"        final String type \u003d \"[E]\";","lastModifiedDate":"2021-08-17"},{"lineNumber":478,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":479,"author":{"gitId":"wanyu-l"},"content":"        /**","lastModifiedDate":"2021-08-17"},{"lineNumber":480,"author":{"gitId":"wanyu-l"},"content":"         * The String to store the date information","lastModifiedDate":"2021-08-17"},{"lineNumber":481,"author":{"gitId":"wanyu-l"},"content":"         * that identifies an Event task","lastModifiedDate":"2021-08-17"},{"lineNumber":482,"author":{"gitId":"wanyu-l"},"content":"         */","lastModifiedDate":"2021-08-17"},{"lineNumber":483,"author":{"gitId":"wanyu-l"},"content":"        final String date;","lastModifiedDate":"2021-08-17"},{"lineNumber":484,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":485,"author":{"gitId":"wanyu-l"},"content":"        /**","lastModifiedDate":"2021-08-17"},{"lineNumber":486,"author":{"gitId":"wanyu-l"},"content":"         * Constructor for an Event task","lastModifiedDate":"2021-08-17"},{"lineNumber":487,"author":{"gitId":"wanyu-l"},"content":"         * @param s the input string to describe the Event task","lastModifiedDate":"2021-08-17"},{"lineNumber":488,"author":{"gitId":"wanyu-l"},"content":"         * @param date the date of the event","lastModifiedDate":"2021-08-17"},{"lineNumber":489,"author":{"gitId":"wanyu-l"},"content":"         */","lastModifiedDate":"2021-08-17"},{"lineNumber":490,"author":{"gitId":"wanyu-l"},"content":"        public Event(String s, String date) {","lastModifiedDate":"2021-08-16"},{"lineNumber":491,"author":{"gitId":"wanyu-l"},"content":"            super(s);","lastModifiedDate":"2021-08-16"},{"lineNumber":492,"author":{"gitId":"wanyu-l"},"content":"            this.date \u003d date;","lastModifiedDate":"2021-08-16"},{"lineNumber":493,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":494,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":495,"author":{"gitId":"wanyu-l"},"content":"        /**","lastModifiedDate":"2021-08-17"},{"lineNumber":496,"author":{"gitId":"wanyu-l"},"content":"         * To retrieve the information on the type of Task","lastModifiedDate":"2021-08-17"},{"lineNumber":497,"author":{"gitId":"wanyu-l"},"content":"         *","lastModifiedDate":"2021-08-17"},{"lineNumber":498,"author":{"gitId":"wanyu-l"},"content":"         * @return the String description of the type of Task","lastModifiedDate":"2021-08-17"},{"lineNumber":499,"author":{"gitId":"wanyu-l"},"content":"         */","lastModifiedDate":"2021-08-17"},{"lineNumber":500,"author":{"gitId":"wanyu-l"},"content":"        public String getType() {","lastModifiedDate":"2021-08-16"},{"lineNumber":501,"author":{"gitId":"wanyu-l"},"content":"            return this.type;","lastModifiedDate":"2021-08-16"},{"lineNumber":502,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":503,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":504,"author":{"gitId":"wanyu-l"},"content":"        /**","lastModifiedDate":"2021-08-17"},{"lineNumber":505,"author":{"gitId":"wanyu-l"},"content":"         * To retrieve the description of the Event task","lastModifiedDate":"2021-08-17"},{"lineNumber":506,"author":{"gitId":"wanyu-l"},"content":"         *","lastModifiedDate":"2021-08-17"},{"lineNumber":507,"author":{"gitId":"wanyu-l"},"content":"         * @return the String that is the description of the Event task","lastModifiedDate":"2021-08-17"},{"lineNumber":508,"author":{"gitId":"wanyu-l"},"content":"         */","lastModifiedDate":"2021-08-17"},{"lineNumber":509,"author":{"gitId":"wanyu-l"},"content":"        @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":510,"author":{"gitId":"wanyu-l"},"content":"        public String getTask() {","lastModifiedDate":"2021-08-16"},{"lineNumber":511,"author":{"gitId":"wanyu-l"},"content":"            return super.getTask() + \"(at: \" + this.date + \")\";","lastModifiedDate":"2021-08-16"},{"lineNumber":512,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":513,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":514,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":515,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"wanyu-l":505,"-":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"todo read book","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"deadline return book /by June 6th","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"Event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"todo join sports club","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"tod test run","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"done 1","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"done 4","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"todo borrow book","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"event typing code /at ","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"deadline what ds /by","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"todo","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"done","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"deadline","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"event","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"done 11","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"done1","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"done 1","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"huh","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"what","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"blahh","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"done wh","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"delete 3","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"delete 2","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"delete","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"delete2","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"delteeda","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"deleted","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"event example","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"deadline submission","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"wanyu-l":35}}]
