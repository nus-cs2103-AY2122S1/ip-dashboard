[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":23,"wanyu-l":1}},{"path":"src/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"T|@|1","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wanyu-l":1}},{"path":"src/main/java/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":" * The ByeCommand Class inherits Command and is","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":" * a specific type of executable command.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"public final class ByeCommand extends Command{","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"     * Constructs the ByeCommand object.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"     * @param s the entire line of user input","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"    public ByeCommand(ArrayList\u003cString\u003e s) {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"        super(s);","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"     * Executes the command.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"     * @param lst the TaskList object that stores the list of tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"     * @param ui the Ui object that interacts with the user","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"     * @param storage the Storage object that saves changes to stored tasks, if any","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"    public void execute(TaskList lst, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"        Duke.terminate();","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wanyu-l":36}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":" * The Command class represents the action to be done.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":"public abstract class Command{","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"    private final ArrayList\u003cString\u003e input;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"     * Constructs the Command object.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"     * @param s the entire line of user input","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"    public Command(ArrayList\u003cString\u003e s) {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"        this.input \u003d s;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"     * Returns the stored user input.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"     * @return the user\u0027s line of input","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"    public ArrayList\u003cString\u003e getInput() {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"        return input;","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"     * Returns true if it is a command to exit the program.","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"     * @return the result if it is a command to exit the program","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"wanyu-l"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"wanyu-l"},"content":"        return this instanceof ByeCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"wanyu-l"},"content":"     * Executes the command.","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"wanyu-l"},"content":"     * @param lst the TaskList object that stores the list of tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"wanyu-l"},"content":"     * @param ui the Ui object that interacts with the user","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"wanyu-l"},"content":"     * @param storage the Storage object that saves changes to stored tasks, if any","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"wanyu-l"},"content":"    public abstract void execute(TaskList lst, Ui ui, Storage storage);","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wanyu-l":50}},{"path":"src/main/java/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"import tasks.DeadLineTask;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":" * The DeadlineCommand Class inherits Command and is","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":" * a specific type of executable command.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"public final class DeadlineCommand extends Command{","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"     * Constructs the DeadlineCommand object.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"     * @param s the entire line of user input","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"    public DeadlineCommand(ArrayList\u003cString\u003e s) {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"        super(s);","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"     * Executes the command.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"     * @param lst the TaskList object that stores the list of tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"     * @param ui the Ui object that interacts with the user","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"     * @param storage the Storage object that saves changes to stored tasks, if any","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"    public void execute(TaskList lst, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"            DeadLineTask d \u003d new DeadLineTask(lst.filterInfo(getInput()),","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"                    lst.lookForDeadline(getInput()));","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wanyu-l"},"content":"            lst.addTask(d);","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wanyu-l"},"content":"            storage.resetFile(lst.getTasks());","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wanyu-l"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wanyu-l"},"content":"            if (e.getMessage().equals(\"deadline\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wanyu-l"},"content":"                Ui.showInput(\"Invalid input :(\",","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wanyu-l"},"content":"                        \"Please input in the form: \u0027deadline \u003cName\u003e /by \u003cDate\u003e\u0027.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wanyu-l"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"wanyu-l"},"content":"                Ui.showInput(e.getMessage(), \"Hey, no deadline recorded does not mean no deadline \u003e:(\");","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wanyu-l":48}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":" * The DeleteCommand Class inherits Command and is","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":" * a specific type of executable command.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":"public final class DeleteCommand extends Command{","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"     * Constructs the DeleteCommand object.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"     * @param s the entire line of user input","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"    public DeleteCommand(ArrayList\u003cString\u003e s) {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"        super(s);","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"     * Executes the command.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"     * @param lst the TaskList object that stores the list of tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"     * @param ui the Ui object that interacts with the user","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"     * @param storage the Storage object that saves changes to stored tasks, if any","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"    public void execute(TaskList lst, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"        if (super.getInput().size() \u003d\u003d 1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"            Ui.showInput(\"Unable to delete task without an index. Please input index :)\",","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"                    \"Please input in the form: \u0027delete \u003ctask index\u003e\u0027.\",","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"                    \"Note: list can be used to see the current tasks.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wanyu-l"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wanyu-l"},"content":"            if (lst.getTasks().isEmpty()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wanyu-l"},"content":"                Ui.showInput(\"List is empty, no tasks to delete, looking good!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wanyu-l"},"content":"            } else if (super.getInput().size() \u003e 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wanyu-l"},"content":"                Ui.showInput(\"Please input in the form: \u0027delete \u003cindex\u003e\u0027.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wanyu-l"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wanyu-l"},"content":"                try {","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"wanyu-l"},"content":"                    int index \u003d Integer.parseInt(super.getInput().get(1)) - 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wanyu-l"},"content":"                    lst.deleteTask(index);","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"wanyu-l"},"content":"                    storage.resetFile(lst.getTasks());","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wanyu-l"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"wanyu-l"},"content":"                    Ui.showInput(\"Please use a number instead :(\");","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"wanyu-l"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"wanyu-l"},"content":"                    Ui.showInput(\"Please input a valid index :)\",","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"wanyu-l"},"content":"                            \"Note: \u0027list\u0027 can be used to see the current tasks.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"wanyu-l"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wanyu-l":56}},{"path":"src/main/java/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"import tasks.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":" * The DoneCommand Class inherits Command and is","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":" * a specific type of executable command.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"public final class DoneCommand extends Command{","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"     * Constructs the DoneCommand object.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"     * @param s the entire line of user input","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"    public DoneCommand(ArrayList\u003cString\u003e s) {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"        super(s);","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"     * Executes the command.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"     * @param lst the TaskList object that stores the list of tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"     * @param ui the Ui object that interacts with the user","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"     * @param storage the Storage object that saves changes to stored tasks, if any","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"    public void execute(TaskList lst, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"        ArrayList\u003cTask\u003e tasks \u003d lst.getTasks();","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wanyu-l"},"content":"            if (getInput().size() \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"wanyu-l"},"content":"                throw new IllegalArgumentException(\"Please input index :)\");","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wanyu-l"},"content":"            if (getInput().size() \u003e 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"wanyu-l"},"content":"                throw new IllegalArgumentException(\"Please input in the form: \u0027done \u003cindex\u003e\u0027.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wanyu-l"},"content":"            int index \u003d Integer.parseInt(getInput().get(1)) - 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"wanyu-l"},"content":"            if (index \u003e\u003d tasks.size() || index \u003c 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wanyu-l"},"content":"                throw new IllegalArgumentException(\"No such index. Please input correct index, no such index :(\");","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wanyu-l"},"content":"            tasks.get(index).setIsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"wanyu-l"},"content":"            storage.resetFile(tasks);","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"wanyu-l"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"wanyu-l"},"content":"            Ui.showInput(\"Please input a valid index :)\",","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"wanyu-l"},"content":"                    \"Note: \u0027list\u0027 can be used to see the current tasks.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"wanyu-l"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"wanyu-l"},"content":"            Ui.showInput(\"Please use a number instead :(\");","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"wanyu-l"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"wanyu-l"},"content":"            Ui.showInput(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wanyu-l":58}},{"path":"src/main/java/commands/DueCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":" * The DueCommand Class inherits Command and is","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":" * a specific type of executable command.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"public final class DueCommand extends Command{","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"     * Constructs the DueCommand object.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"     * @param s the entire line of user input","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"    public DueCommand(ArrayList\u003cString\u003e s) {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"        super(s);","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"     * Executes the command.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"     * @param lst the TaskList object that stores the list of tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"     * @param ui the Ui object that interacts with the user","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"     * @param storage the Storage object that saves changes to stored tasks, if any","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"    public void execute(TaskList lst, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"            lst.anyTaskDue(getInput().get(1));","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"            Ui.showInput(\"Invalid input :(\");","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wanyu-l"},"content":"            Ui.helperMessage();","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wanyu-l":40}},{"path":"src/main/java/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"import tasks.EventTask;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":" * The EventCommand Class inherits Command and is","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":" * a specific type of executable command.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"public final class EventCommand extends Command{","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"     * Constructs the EventCommand object.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"     * @param s the entire line of user input","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"    public EventCommand(ArrayList\u003cString\u003e s) {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"        super(s);","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"     * Executes the command.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"     * @param lst the TaskList object that stores the list of tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"     * @param ui the Ui object that interacts with the user","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"     * @param storage the Storage object that saves changes to stored tasks, if any","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"    public void execute(TaskList lst, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"            EventTask e \u003d new EventTask(lst.filterInfo(getInput()),","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"                    lst.searchForEventDay(getInput()));","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wanyu-l"},"content":"            lst.addTask(e);","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wanyu-l"},"content":"            storage.resetFile(lst.getTasks());","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wanyu-l"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wanyu-l"},"content":"            if (e.getMessage().equals(\"event\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wanyu-l"},"content":"                Ui.showInput(\"Invalid input :(\", \"Please input in the form: \u0027event \u003cName\u003e /at \u003cDate\u003e\u0027.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wanyu-l"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wanyu-l"},"content":"                Ui.showInput(e.getMessage(), \"I can\u0027t add an event without a date!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wanyu-l":47}},{"path":"src/main/java/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"import tasks.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":"    public FindCommand(ArrayList\u003cString\u003e s) {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"        super(s);","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"    public void execute(TaskList lst, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"        String target \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"        for (int i \u003d 1; i \u003c getInput().size(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"            if (i + 1 \u003c getInput().size()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"                target +\u003d getInput().get(i) + \" \";","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"                target +\u003d getInput().get(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"        ArrayList\u003cTask\u003e tasksFound \u003d lst.findTask(target);","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"        if (tasksFound.isEmpty()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"            Ui.showInput(\"No task tasksFound!\");","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"            String temp \u003d \"The items tasksFound are: \\n\";","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"            for (int i \u003d 0; i \u003c tasksFound.size(); i++) {","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"wanyu-l"},"content":"                if (i + 1 \u003c tasksFound.size()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"wanyu-l"},"content":"                    temp +\u003d \"     \" + (i + 1) + \".\" + tasksFound.get(i).getType()","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"wanyu-l"},"content":"                            + tasksFound.get(i).getStatus() + \" \" + tasksFound.get(i).getTask() + \"\\n\";","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"wanyu-l"},"content":"                } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"wanyu-l"},"content":"                    temp +\u003d \"     \" + (i + 1) + \".\" + tasksFound.get(i).getType()","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"wanyu-l"},"content":"                            + tasksFound.get(i).getStatus() + \" \" + tasksFound.get(i).getTask();","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"wanyu-l"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"wanyu-l"},"content":"            Ui.showInput(temp);","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"wanyu-l":48}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":" * The ListCommand Class inherits Command and is","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":" * a specific type of executable command.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":"public final class ListCommand extends Command{","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"     * Constructs the ListCommand object.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"     * @param s the entire line of user input","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"    public ListCommand(ArrayList\u003cString\u003e s) {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"        super(s);","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"     * Executes the command.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"     * @param lst the TaskList object that stores the list of tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"     * @param ui the Ui object that interacts with the user","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"     * @param storage the Storage object that saves changes to stored tasks, if any","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"    public void execute(TaskList lst, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"        lst.getList();","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wanyu-l":35}},{"path":"src/main/java/commands/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"import tasks.ToDoTask;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":" * The ToDoCommand Class inherits Command and is","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":" * a specific type of executable command.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"public final class ToDoCommand extends Command{","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"     * Constructs the ToDoCommand object.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"     * @param s the entire line of user input","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"    public ToDoCommand(ArrayList\u003cString\u003e s) {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"        super(s);","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"     * Executes the command.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"     * @param lst the TaskList object that stores the list of tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"     * @param ui the Ui object that interacts with the user","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"     * @param storage the Storage object that saves changes to stored tasks, if any","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"    public void execute(TaskList lst, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"        if (getInput().size() \u003c 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"            Ui.showInput(\"Oops, you have left out the task description for todo!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wanyu-l"},"content":"            ToDoTask t \u003d new ToDoTask(lst.filterInfo(getInput()));","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"wanyu-l"},"content":"            lst.addTask(t);","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wanyu-l"},"content":"            storage.resetFile(lst.getTasks());","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wanyu-l":42}},{"path":"src/main/java/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"D|return book|2/12/2019 1800|1","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"T|test|1","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"D|return book|2/12/2019 1800|1","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"T|\\at|0","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"D|return book|2/12/2019 1800|0","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"T|\\at|0","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wanyu-l":6}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"import commands.Command;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"import parser.Parser;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":"/** This class implements the Duke memo assistant.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":" * @author damithc","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":" * edited by Wanyu","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke{","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"    private static TaskList tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"    private final Parser parser;","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"     * Constructs a Duke object.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"    public Duke() {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"        Ui.welcomeMessage();","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"            storage.createFiles();","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"            Ui.showInput(\"something went wrong: \" + e.getMessage() + \"\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"                    + \"     exiting program...\");","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"            terminate();","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"        tasks \u003d new TaskList(storage.loadSaves());","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"wanyu-l"},"content":"     * Starts the program and execute commands","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"wanyu-l"},"content":"     * detected by parser as per user input.","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"wanyu-l"},"content":"    public void run() {","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"wanyu-l"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"wanyu-l"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"wanyu-l"},"content":"            String next \u003d ui.readLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wanyu-l"},"content":"            Ui.showAsUserInput(next);","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"wanyu-l"},"content":"            Command command \u003d parser.parse(next);","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"wanyu-l"},"content":"            if (command !\u003d null) {","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"wanyu-l"},"content":"                command.execute(tasks, ui, storage);","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"wanyu-l"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"wanyu-l"},"content":"     * Exits the program.","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"wanyu-l"},"content":"    public static void terminate() {","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"wanyu-l"},"content":"        Ui.showExitMessage();","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"wanyu-l"},"content":"        System.exit(0);","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":63,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":64,"author":{"gitId":"wanyu-l"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"wanyu-l"},"content":"        new Duke().run();","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"wanyu-l":66,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":" * The DukeException class inherits Exception and","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":" * is unique Duke instances.","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"     * Constructs the DukeException object.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":"     * @param s the message associated with the exception","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"    public DukeException(String s) {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"        super(s);","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wanyu-l":16}},{"path":"src/main/java/duke/Level-8.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"list","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"deadline return book /by 2/12/2019 1800","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"due 2019/12/02","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"this is a line.","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"this   is  a  weird    line   is .","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"jsut atoat to tsrljt12","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":"done1","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":"done 1","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"listr","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"list","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"delete","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"todo \\at","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"    done      12","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"!@#$   done 1","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"done!@# 1","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"!$!@$delete 2","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"delete 2","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"list","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"bye","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wanyu-l":24}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package parser;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"import commands.*;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":" * The Parser class attempts to make sense of","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":" * user\u0027s input and generates commands accordingly.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":"public final class Parser{","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"     * Generates the command corresponding to user\u0027s input.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"     * @param str input line of words, possibly containing any character","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"     * @return the command corresponding to keywords or null if none detected","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"    public Command parse(String str) {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"        Command c \u003d null;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"            ArrayList\u003cString\u003e words \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"            String[] arr \u003d str.split(\"\\\\s+\");","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"            for (String ss : arr) {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"                if (!ss.equals(\"\")) words.add(ss);","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"            c \u003d generateCommand(words);","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"            Ui.helperMessage();","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"        return c;","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"     * Creates commands specific to user\u0027s input.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"wanyu-l"},"content":"     * @param s the words detected by parse method","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"wanyu-l"},"content":"     * @return created executable command","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"wanyu-l"},"content":"     * @throws DukeException if user\u0027s input does not contain correct keywords","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"wanyu-l"},"content":"    public Command generateCommand(ArrayList\u003cString\u003e s) throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"wanyu-l"},"content":"        if (s \u003d\u003d null || s.isEmpty()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"wanyu-l"},"content":"            throw new DukeException(\"Please chek your input!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wanyu-l"},"content":"        } else if (s.get(0).equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"wanyu-l"},"content":"            return new ByeCommand(s);","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wanyu-l"},"content":"        } else if (s.get(0).equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"wanyu-l"},"content":"            return new ListCommand(s);","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"wanyu-l"},"content":"        } else if (s.get(0).equalsIgnoreCase(\"done\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"wanyu-l"},"content":"            return new DoneCommand(s);","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"wanyu-l"},"content":"        } else if (s.get(0).equalsIgnoreCase(\"delete\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"wanyu-l"},"content":"            return new DeleteCommand(s);","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"wanyu-l"},"content":"        } else if (s.get(0).equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"wanyu-l"},"content":"            return new ToDoCommand(s);","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"wanyu-l"},"content":"        } else if (s.get(0).equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"wanyu-l"},"content":"            return new DeadlineCommand(s);","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"wanyu-l"},"content":"        } else if (s.get(0).equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"wanyu-l"},"content":"            return new EventCommand(s);","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"wanyu-l"},"content":"        } else if (s.get(0).equalsIgnoreCase(\"due\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"wanyu-l"},"content":"            return new DueCommand(s);","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"wanyu-l"},"content":"        } else if (s.get(0).equalsIgnoreCase(\"find\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"wanyu-l"},"content":"            return new FindCommand(s);","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"wanyu-l"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"wanyu-l"},"content":"            throw new DukeException(\"Invalid command!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wanyu-l":67}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"import java.io.*;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"import tasks.DeadLineTask;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"import tasks.EventTask;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"import tasks.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"import tasks.ToDoTask;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":" * The Storage Class is responsible for reading and loading","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":" * of data stored locally on the computer.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"public final class Storage{","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"    private final static String FILE_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"     * Checks if folder and text files for where the information","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"     * related to the Duke assistant already exists. If not,","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"     * create them.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"     * @throws DukeException if there were unexpected errors","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"     * while creating or checking files","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"    public void createFiles() throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"        File folder \u003d new File(\"./data\");","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"        File saves \u003d new File(FILE_PATH);","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"            if (!folder.exists() || !folder.isDirectory()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"              boolean isFolderCreated \u003d folder.mkdir();","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"            if (!saves.exists()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"              boolean isSavesCreated \u003d saves.createNewFile();","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wanyu-l"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wanyu-l"},"content":"            Ui.showInput(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"wanyu-l"},"content":"            throw new DukeException(\"Unexpected issue encountered\");","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"wanyu-l"},"content":"     * Saves the tasks to specified folder and file.","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"wanyu-l"},"content":"     * @param currTasks the list of tasks to be saved","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"wanyu-l"},"content":"    public void resetFile(ArrayList\u003cTask\u003e currTasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"wanyu-l"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"wanyu-l"},"content":"        if (!file.delete()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"wanyu-l"},"content":"            Ui.showInput(\"something went wrong\");","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"wanyu-l"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"wanyu-l"},"content":"            boolean isFileCreated \u003d file.createNewFile();","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"wanyu-l"},"content":"            FileWriter writer \u003d new FileWriter(FILE_PATH, true);","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"wanyu-l"},"content":"            for (Task t : currTasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"wanyu-l"},"content":"                writer.write(t.getSaveFormat() + \"\\n\");","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"wanyu-l"},"content":"                writer.flush();","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"wanyu-l"},"content":"            writer.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"wanyu-l"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"wanyu-l"},"content":"            Ui.showInput(\"Unable to write, something went wrong\");","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"wanyu-l"},"content":"     * Loads the previously saved list of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"wanyu-l"},"content":"     * @return the stored list of tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"wanyu-l"},"content":"    public ArrayList\u003cTask\u003e loadSaves() {","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"wanyu-l"},"content":"        ArrayList\u003cTask\u003e tasksLoaded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"wanyu-l"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"wanyu-l"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(FILE_PATH));","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"wanyu-l"},"content":"            String line \u003d reader.readLine();","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"wanyu-l"},"content":"            while (line !\u003d null) {","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"wanyu-l"},"content":"                String[] words \u003d line.split(\"\\\\|\");","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"wanyu-l"},"content":"                if (words[0].equals(\"T\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"wanyu-l"},"content":"                    ToDoTask t \u003d new ToDoTask(words[1]);","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"wanyu-l"},"content":"                    if (words[words.length - 1].equals(\"1\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"wanyu-l"},"content":"                        t.markAsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"wanyu-l"},"content":"                    }","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"wanyu-l"},"content":"                    tasksLoaded.add(t);","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"wanyu-l"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"wanyu-l"},"content":"                if (words[0].equals(\"D\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"wanyu-l"},"content":"                    DeadLineTask d \u003d new DeadLineTask(words[1], words[2]);","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"wanyu-l"},"content":"                    if (words[words.length - 1].equals(\"1\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"wanyu-l"},"content":"                        d.markAsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"wanyu-l"},"content":"                    }","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"wanyu-l"},"content":"                    tasksLoaded.add(d);","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"wanyu-l"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"wanyu-l"},"content":"                if (words[0].equals(\"E\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"wanyu-l"},"content":"                    EventTask e \u003d new EventTask(words[1], words[2]);","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"wanyu-l"},"content":"                    if (words[words.length - 1].equals(\"1\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"wanyu-l"},"content":"                        e.markAsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"wanyu-l"},"content":"                    }","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"wanyu-l"},"content":"                    tasksLoaded.add(e);","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"wanyu-l"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"wanyu-l"},"content":"                line \u003d reader.readLine();","lastModifiedDate":"2021-08-27"},{"lineNumber":101,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"wanyu-l"},"content":"            reader.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"wanyu-l"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"wanyu-l"},"content":"            Ui.showInput(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"wanyu-l"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"wanyu-l"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"wanyu-l"},"content":"        return tasksLoaded;","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wanyu-l":110}},{"path":"src/main/java/tasks/DeadLineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"import java.time.Month;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":" * The DeadlineTask Class inherits Task Class","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":" * to support different specificities of a task","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":" * as per input by user.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"public final class DeadLineTask extends Task{","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"     * Stores the type of task information","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"     * that identifies a DeadlineTask.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"    private final String TYPE \u003d \"[D]\";","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"     * Stores the do-by-date information.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"    private final String dueDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"     * Stores the do-by-date information as a LocalDate.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"    private LocalDate localDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"     * Constructs a Deadline task and check if a date can be","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"     * stored as LocalDate. If so, save it, otherwise save","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"     * date as per user input.","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"     * @param s the input string to describe the Deadline task","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"     * @param date the do-by-date","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wanyu-l"},"content":"    public DeadLineTask(String s, String date) {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wanyu-l"},"content":"        super(s);","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wanyu-l"},"content":"        this.dueDate \u003d date;","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wanyu-l"},"content":"        String day \u003d checkForDate(date);","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wanyu-l"},"content":"        if (!day.equals(\"\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wanyu-l"},"content":"            LocalDate ld \u003d convertDate(day);","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"wanyu-l"},"content":"            setLocalDate(ld);","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"wanyu-l"},"content":"    private String checkForDate(String s) {","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"wanyu-l"},"content":"        String temp \u003d \"^[0-9]{1,2}[\\\\\\\\/][0-9]{1,2}[\\\\\\\\/][0-9]{4}\\\\s[0-9]{4}$\";","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"wanyu-l"},"content":"        Pattern p \u003d Pattern.compile(temp);","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"wanyu-l"},"content":"        Matcher m \u003d p.matcher(s);","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"wanyu-l"},"content":"        if (m.find()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"wanyu-l"},"content":"            return m.group();","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"wanyu-l"},"content":"        return \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"wanyu-l"},"content":"    private LocalDate convertDate(String s) {","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"wanyu-l"},"content":"        String[] date \u003d s.substring(0, s.length() - 4).split(\"/\");","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"wanyu-l"},"content":"        int day \u003d Integer.parseInt(date[0].replaceAll(\" \", \"\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"wanyu-l"},"content":"        int month \u003d Integer.parseInt(date[1].replaceAll(\" \", \"\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"wanyu-l"},"content":"        int year \u003d Integer.parseInt(date[2].replaceAll(\" \", \"\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"wanyu-l"},"content":"        return LocalDate.of(year, month, day);","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"wanyu-l"},"content":"     * Retrieves the information of the type of task.","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"wanyu-l"},"content":"     * @return the String description of the type of task","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"wanyu-l"},"content":"    public String getType() {","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"wanyu-l"},"content":"        return this.TYPE;","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"wanyu-l"},"content":"    private void setLocalDate(LocalDate localDate) {","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"wanyu-l"},"content":"        this.localDate \u003d localDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"wanyu-l"},"content":"     * Retrieves the information on the date associated with task.","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"wanyu-l"},"content":"     * @return the date associated with task in as a LocalDate","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"wanyu-l"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"wanyu-l"},"content":"    public LocalDate getLocalDate() {","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"wanyu-l"},"content":"        return this.localDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"wanyu-l"},"content":"     * Retrieves the description specific to the Deadline task","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"wanyu-l"},"content":"     * and use a LocalDate if available.","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"wanyu-l"},"content":"     * @return the description specific to the Deadline task","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"wanyu-l"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"wanyu-l"},"content":"    public String getTask() {","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"wanyu-l"},"content":"        if (this.localDate \u003d\u003d null) {","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"wanyu-l"},"content":"            return super.getTask() + \" \" + \"(by: \" + this.dueDate + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"wanyu-l"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"wanyu-l"},"content":"            return super.getTask() + \" \" + \"(by: \" + Month.of(this.localDate.getMonthValue()) + \" \"","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"wanyu-l"},"content":"                    + this.localDate.getDayOfMonth() + \" \" + this.localDate.getYear() + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"wanyu-l"},"content":"     * Retrieves the simple description of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"wanyu-l"},"content":"     * @return the simple description of the task","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"wanyu-l"},"content":"    public String getSimpleTaskDescription() {","lastModifiedDate":"2021-08-27"},{"lineNumber":111,"author":{"gitId":"wanyu-l"},"content":"        return super.getTask();","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"wanyu-l"},"content":"     * Retrieves the information on the format of the task to be saved.","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"wanyu-l"},"content":"     * @return the String representation of how the task will be saved","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"wanyu-l"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"wanyu-l"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"wanyu-l"},"content":"        if (super.getStatus().equals(\"[ ]\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"wanyu-l"},"content":"            return \"D\" + \"|\" + this.getSimpleTaskDescription().strip() + \"|\" + this.dueDate + \"|\" + 0;","lastModifiedDate":"2021-08-27"},{"lineNumber":123,"author":{"gitId":"wanyu-l"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"wanyu-l"},"content":"            return \"D\" + \"|\" + this.getSimpleTaskDescription().strip() + \"|\" + this.dueDate + \"|\" + 1;","lastModifiedDate":"2021-08-27"},{"lineNumber":125,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wanyu-l":127}},{"path":"src/main/java/tasks/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"import java.time.Month;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":" * The EventTask Class inherits Task Class","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":" * to support different specificities of a task","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":" * as per input by user.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"public final class EventTask extends Task{","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"     * Stores the type of task information","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"     * that identifies a EventTask.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"    private final String TYPE \u003d \"[E]\";","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"     * Stores the date information of an Event task.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"    private final String date;","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"     * Stores the date information as a LocalDate.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"    private LocalDate localDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"     * Constructs an Event task and check if a date can be","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"     * stored as LocalDate. If so, save it, otherwise save","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"     * date as per user input.","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"     * @param s the input string to describe the Event task","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"     * @param date the date of the event","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wanyu-l"},"content":"    public EventTask(String s, String date) {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wanyu-l"},"content":"        super(s);","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wanyu-l"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wanyu-l"},"content":"        String day \u003d checkForDate(date);","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wanyu-l"},"content":"        if (!day.equals(\"\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wanyu-l"},"content":"            LocalDate ld \u003d convertDate(day);","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"wanyu-l"},"content":"            setLocalDate(ld);","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"wanyu-l"},"content":"    private String checkForDate(String s) {","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"wanyu-l"},"content":"        String temp \u003d \"^[0-9]{1,2}[\\\\\\\\/][0-9]{1,2}[\\\\\\\\/][0-9]{4}\\\\s[0-9]{4}$\";","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"wanyu-l"},"content":"        Pattern p \u003d Pattern.compile(temp);","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"wanyu-l"},"content":"        Matcher m \u003d p.matcher(s);","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"wanyu-l"},"content":"        if (m.find()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"wanyu-l"},"content":"            return m.group();","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"wanyu-l"},"content":"        return \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"wanyu-l"},"content":"    private LocalDate convertDate(String s) {","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"wanyu-l"},"content":"        String[] date \u003d s.substring(0, s.length() - 4).split(\"/\");","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"wanyu-l"},"content":"        int day \u003d Integer.parseInt(date[0].replaceAll(\" \", \"\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"wanyu-l"},"content":"        int month \u003d Integer.parseInt(date[1].replaceAll(\" \", \"\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"wanyu-l"},"content":"        int year \u003d Integer.parseInt(date[2].replaceAll(\" \", \"\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"wanyu-l"},"content":"        return LocalDate.of(year, month, day);","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"wanyu-l"},"content":"     * Retrieves the information of the type of task.","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"wanyu-l"},"content":"     * @return the String description of the type of task","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"wanyu-l"},"content":"    public String getType() {","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"wanyu-l"},"content":"        return this.TYPE;","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"wanyu-l"},"content":"    private void setLocalDate(LocalDate localDate) {","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"wanyu-l"},"content":"        this.localDate \u003d localDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"wanyu-l"},"content":"     * Retrieves the information on the date associated with task.","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"wanyu-l"},"content":"     * @return the date associated with task in as LocalDate","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"wanyu-l"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"wanyu-l"},"content":"    public LocalDate getLocalDate() {","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"wanyu-l"},"content":"        return this.localDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"wanyu-l"},"content":"     * Retrieves the description specific to the Event task","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"wanyu-l"},"content":"     * and use a LocalDate if available.","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"wanyu-l"},"content":"     * @return the description specific to the Event task","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"wanyu-l"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"wanyu-l"},"content":"    public String getTask() {","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"wanyu-l"},"content":"        if (this.localDate \u003d\u003d null) {","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"wanyu-l"},"content":"            return super.getTask() + \" \" + \"(at: \" + this.date + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"wanyu-l"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"wanyu-l"},"content":"            return super.getTask() + \" \" + \"(at: \" + Month.of(this.localDate.getMonthValue()) + \" \"","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"wanyu-l"},"content":"                    + this.localDate.getDayOfMonth() + \" \" + this.localDate.getYear() + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"wanyu-l"},"content":"     * Retrieves the simple description of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"wanyu-l"},"content":"     * @return the simple description of the task","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"wanyu-l"},"content":"    public String getSimpleTaskDescription() {","lastModifiedDate":"2021-08-27"},{"lineNumber":113,"author":{"gitId":"wanyu-l"},"content":"        return super.getTask();","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"wanyu-l"},"content":"     * Retrieves the information on the format of the task to be saved.","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"wanyu-l"},"content":"     * @return the String representation of how the task will be saved","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"wanyu-l"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"wanyu-l"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2021-08-23"},{"lineNumber":123,"author":{"gitId":"wanyu-l"},"content":"        if (super.getStatus().equals(\"[ ]\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"wanyu-l"},"content":"            return \"E\" + \"|\" + this.getSimpleTaskDescription().strip() + \"|\" + this.date + \"|\" + 0;","lastModifiedDate":"2021-08-27"},{"lineNumber":125,"author":{"gitId":"wanyu-l"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"wanyu-l"},"content":"            return \"E\" + \"|\" + this.getSimpleTaskDescription().strip() + \"|\" + this.date + \"|\" + 1;","lastModifiedDate":"2021-08-27"},{"lineNumber":127,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":128,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wanyu-l":129}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":" * The Task class implements the tasks to be tracked by the","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":" * Duke assistant.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":"public class Task{","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"     * Description of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"    private final String task;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"     * Status of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"    private String isDone;","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"     * Constructs a Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"     * @param s the input string to describe the task","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"    public Task(String s) {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"        this.task \u003d s;","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"        this.isDone \u003d \"[ ]\";","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"     * Sets a task as complete by changing","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"     * the String representation and display a confirmation message.","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"    public void setIsDone() {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wanyu-l"},"content":"        String result \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wanyu-l"},"content":"        if (this.isDone.equals(\"[ ]\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wanyu-l"},"content":"            this.isDone \u003d \"[X]\";","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wanyu-l"},"content":"            result \u003d \"Well done! The task is completed!\";","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wanyu-l"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wanyu-l"},"content":"            result \u003d \"You have already completed this task before!\";","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"wanyu-l"},"content":"        Ui.showInput(result, this.getType() + isDone + \" \" + this.getTask());","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"wanyu-l"},"content":"     * Marks a task as complete by changing","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"wanyu-l"},"content":"     * the String representation without displaying confirmation message.","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"wanyu-l"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"wanyu-l"},"content":"        this.isDone \u003d \"[X]\";","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"wanyu-l"},"content":"     * Retrieves the status of the task","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"wanyu-l"},"content":"     * whether it is complete or not.","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"wanyu-l"},"content":"     * @return the string representation of the task\u0027s state","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"wanyu-l"},"content":"    public String getStatus() {","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"wanyu-l"},"content":"        return this.isDone;","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"wanyu-l"},"content":"     * Retrieves the description of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"wanyu-l"},"content":"     * @return the String that is the description of the task","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"wanyu-l"},"content":"    public String getTask() {","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"wanyu-l"},"content":"        return this.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"wanyu-l"},"content":"     * Retrieves the information of the type of task.","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"wanyu-l"},"content":"     * @return the String description of the type of task","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"wanyu-l"},"content":"    public String getType() {","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"wanyu-l"},"content":"        return \"regular\";","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"wanyu-l"},"content":"     * Retrieves the information on the format of the task to be saved.","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"wanyu-l"},"content":"     * @return the String representation of how the task will be saved","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"wanyu-l"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"wanyu-l"},"content":"        return \"regular\";","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"wanyu-l"},"content":"     * Retrieves the information on the date associated with task.","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"wanyu-l"},"content":"     * @return the date associated with task in as LocalDate if applicable","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"wanyu-l"},"content":"    public LocalDate getLocalDate() {","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"wanyu-l"},"content":"        return null;","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wanyu-l":100}},{"path":"src/main/java/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"public final class TaskList{","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":"    public TaskList(ArrayList\u003cTask\u003e inputTasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":"        this.tasks \u003d inputTasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"        return this.tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"     * Gets the String representation of the date/deadline as input by user","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"     * @param words the String array representation of the input by user","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"     * @return the concatenated String that is the date specified by user","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"    public String filterInfo(ArrayList\u003cString\u003e words) {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"        String temp \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"        for (int i \u003d 1; i \u003c words.size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"            if (!(words.get(i).equals(\"/at\") || words.get(i).equals(\"/by\"))","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"                    || words.get(0).equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"                temp +\u003d words.get(i) + \" \";","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"                break;","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"        return temp;","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wanyu-l"},"content":"     * Identifies the start of String representation of date of Event","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"wanyu-l"},"content":"     * by finding the \"/at\" expression","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wanyu-l"},"content":"     * @param args the String array representation of the input by user","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wanyu-l"},"content":"     * @return the String representation of the date by passing it to method","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wanyu-l"},"content":"     * getDate which requires a starting index as an argument","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"wanyu-l"},"content":"     * @throws IllegalArgumentException thrown when encountering a String Array without","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wanyu-l"},"content":"     * the presence of \"/at\" expression, which is not a valid input for Event","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wanyu-l"},"content":"    public String searchForEventDay(ArrayList\u003cString\u003e args) throws IllegalArgumentException {","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"wanyu-l"},"content":"        for (int i \u003d 2; i \u003c args.size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"wanyu-l"},"content":"            if (args.get(i).equals(\"/at\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"wanyu-l"},"content":"                if (i + 1 \u003e\u003d args.size()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"wanyu-l"},"content":"                    throw new IllegalArgumentException(\"Oh no, date is missing :(\");","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"wanyu-l"},"content":"                } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"wanyu-l"},"content":"                    return getDate(args, i + 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"wanyu-l"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"wanyu-l"},"content":"        throw new IllegalArgumentException(\"event\");","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"wanyu-l"},"content":"     * Identifies the start of String representation of date for Deadline","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"wanyu-l"},"content":"     * by finding the \"/by\" expression","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"wanyu-l"},"content":"     * @param arg the String array representation of the input by user","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"wanyu-l"},"content":"     * @return the String representation of the date by passing it to method","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"wanyu-l"},"content":"     * getDate which requires a starting index as an argument","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"wanyu-l"},"content":"     * @throws IllegalArgumentException thrown when encountering a String Array without","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"wanyu-l"},"content":"     * the presence of \"/by\" expression, which is not a valid input for Deadline","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"wanyu-l"},"content":"    public String lookForDeadline(ArrayList\u003cString\u003e arg) throws IllegalArgumentException {","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"wanyu-l"},"content":"        for (int i \u003d 2; i \u003c arg.size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"wanyu-l"},"content":"            if (arg.get(i).equals(\"/by\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"wanyu-l"},"content":"                if (i + 1 \u003e\u003d arg.size()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"wanyu-l"},"content":"                    throw new IllegalArgumentException(\"Uh oh, deadline is missing :(\");","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"wanyu-l"},"content":"                } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"wanyu-l"},"content":"                    return getDate(arg, i + 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"wanyu-l"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"wanyu-l"},"content":"        throw new IllegalArgumentException(\"deadline\");","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"wanyu-l"},"content":"     * Creates a String representation of date by","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"wanyu-l"},"content":"     * concatenating a String from the starting index to the last index","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"wanyu-l"},"content":"     * @param s the String array representation of the input by user","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"wanyu-l"},"content":"     * @param start the starting index","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"wanyu-l"},"content":"     * @return String representation of date as input by user","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"wanyu-l"},"content":"    public String getDate(ArrayList\u003cString\u003e s,int start) {","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"wanyu-l"},"content":"        String temp \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"wanyu-l"},"content":"        for (int i \u003d start; i \u003c s.size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"wanyu-l"},"content":"            if (i + 1 \u003c s.size()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"wanyu-l"},"content":"                temp +\u003d s.get(i) + \" \";","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"wanyu-l"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"wanyu-l"},"content":"                temp +\u003d s.get(i);","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"wanyu-l"},"content":"        return temp;","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"wanyu-l"},"content":"     * Adds tasks to the stored list of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":105,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"wanyu-l"},"content":"     * @param t the task to be added/e","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"wanyu-l"},"content":"    public void addTask(Task t){","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"wanyu-l"},"content":"        if (tasks \u003d\u003d null) {","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"wanyu-l"},"content":"            tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"wanyu-l"},"content":"        tasks.add(t);","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"wanyu-l"},"content":"        Ui.showInput(\"Successfully added:\", t.getType() + t.getStatus() + \" \" + t.getTask());","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"wanyu-l"},"content":"     * Displays the entire list of tasks sequentially","lastModifiedDate":"2021-08-27"},{"lineNumber":118,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"wanyu-l"},"content":"    public void getList() {","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"wanyu-l"},"content":"        if (tasks !\u003d null \u0026\u0026 !tasks.isEmpty()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"wanyu-l"},"content":"            String temp \u003d \"The current list has these items:\\n\";","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"wanyu-l"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":123,"author":{"gitId":"wanyu-l"},"content":"                temp +\u003d \"     \" + (i + 1) + \".\" + tasks.get(i).getType() + tasks.get(i).getStatus() + \" \"","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"wanyu-l"},"content":"                        + tasks.get(i).getTask() + \"\\n\";","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"wanyu-l"},"content":"            Ui.showInput(temp, \"There are \" + tasks.size() + \" task(s) now, keep up!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"wanyu-l"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":128,"author":{"gitId":"wanyu-l"},"content":"            Ui.showInput(\"There are no items in your list, keep adding them!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":130,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":131,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":132,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":133,"author":{"gitId":"wanyu-l"},"content":"     * Deletes a task from the list","lastModifiedDate":"2021-08-27"},{"lineNumber":134,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"wanyu-l"},"content":"     * @param ind the index of task to be deleted","lastModifiedDate":"2021-08-23"},{"lineNumber":136,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":137,"author":{"gitId":"wanyu-l"},"content":"    public void deleteTask(int ind) {","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"wanyu-l"},"content":"        Task t \u003d tasks.remove(ind);","lastModifiedDate":"2021-08-23"},{"lineNumber":139,"author":{"gitId":"wanyu-l"},"content":"        Ui.showInput(\"Noted, the following task has been deleted: \",","lastModifiedDate":"2021-08-23"},{"lineNumber":140,"author":{"gitId":"wanyu-l"},"content":"                t.getType() + t.getStatus() + \" \" + t.getTask(),","lastModifiedDate":"2021-08-23"},{"lineNumber":141,"author":{"gitId":"wanyu-l"},"content":"                \"Nice! there are \" + tasks.size() + \" task(s) left.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":142,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":143,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":144,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"wanyu-l"},"content":"     * Checks if any tasks are due on a particular day.","lastModifiedDate":"2021-08-24"},{"lineNumber":146,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":147,"author":{"gitId":"wanyu-l"},"content":"     * @param s the date which user wants to check","lastModifiedDate":"2021-08-27"},{"lineNumber":148,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":149,"author":{"gitId":"wanyu-l"},"content":"    public void anyTaskDue(String s) {","lastModifiedDate":"2021-08-27"},{"lineNumber":150,"author":{"gitId":"wanyu-l"},"content":"        ArrayList\u003cTask\u003e dueItems \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-27"},{"lineNumber":151,"author":{"gitId":"wanyu-l"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":152,"author":{"gitId":"wanyu-l"},"content":"            Ui.showInput(\"No tasks yet!\");","lastModifiedDate":"2021-08-27"},{"lineNumber":153,"author":{"gitId":"wanyu-l"},"content":"        } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":154,"author":{"gitId":"wanyu-l"},"content":"            String[] date \u003d s.split(\"/\");","lastModifiedDate":"2021-08-27"},{"lineNumber":155,"author":{"gitId":"wanyu-l"},"content":"            LocalDate ref \u003d LocalDate.parse(date[0] + \"-\" + date[1] + \"-\" + date[2]);","lastModifiedDate":"2021-08-27"},{"lineNumber":156,"author":{"gitId":"wanyu-l"},"content":"            for (Task t : tasks) {","lastModifiedDate":"2021-08-27"},{"lineNumber":157,"author":{"gitId":"wanyu-l"},"content":"                if (!(t instanceof ToDoTask)) {","lastModifiedDate":"2021-08-27"},{"lineNumber":158,"author":{"gitId":"wanyu-l"},"content":"                    LocalDate temp \u003d t.getLocalDate();","lastModifiedDate":"2021-08-27"},{"lineNumber":159,"author":{"gitId":"wanyu-l"},"content":"                    if (temp !\u003d null) {","lastModifiedDate":"2021-08-27"},{"lineNumber":160,"author":{"gitId":"wanyu-l"},"content":"                        if (temp.equals(ref)) {","lastModifiedDate":"2021-08-27"},{"lineNumber":161,"author":{"gitId":"wanyu-l"},"content":"                            dueItems.add(t);","lastModifiedDate":"2021-08-27"},{"lineNumber":162,"author":{"gitId":"wanyu-l"},"content":"                        }","lastModifiedDate":"2021-08-27"},{"lineNumber":163,"author":{"gitId":"wanyu-l"},"content":"                    }","lastModifiedDate":"2021-08-27"},{"lineNumber":164,"author":{"gitId":"wanyu-l"},"content":"                }","lastModifiedDate":"2021-08-27"},{"lineNumber":165,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":166,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":167,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":168,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":169,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":170,"author":{"gitId":"wanyu-l"},"content":"     * Finds tasks according to keywords.","lastModifiedDate":"2021-08-27"},{"lineNumber":171,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":172,"author":{"gitId":"wanyu-l"},"content":"     * @param target the keywords as per input by user","lastModifiedDate":"2021-08-27"},{"lineNumber":173,"author":{"gitId":"wanyu-l"},"content":"     * @return list containing all tasks that match input keywords","lastModifiedDate":"2021-08-27"},{"lineNumber":174,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":175,"author":{"gitId":"wanyu-l"},"content":"    public ArrayList\u003cTask\u003e findTask(String target) {","lastModifiedDate":"2021-08-27"},{"lineNumber":176,"author":{"gitId":"wanyu-l"},"content":"        ArrayList\u003cTask\u003e matched \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":177,"author":{"gitId":"wanyu-l"},"content":"        if (!target.equals(\"\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":178,"author":{"gitId":"wanyu-l"},"content":"            for (Task t : tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":179,"author":{"gitId":"wanyu-l"},"content":"                String temp \u003d t.getTask();","lastModifiedDate":"2021-08-24"},{"lineNumber":180,"author":{"gitId":"wanyu-l"},"content":"                if (temp.toLowerCase().contains(target.toLowerCase())) {","lastModifiedDate":"2021-08-24"},{"lineNumber":181,"author":{"gitId":"wanyu-l"},"content":"                    matched.add(t);","lastModifiedDate":"2021-08-24"},{"lineNumber":182,"author":{"gitId":"wanyu-l"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":183,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":184,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":185,"author":{"gitId":"wanyu-l"},"content":"        return matched;","lastModifiedDate":"2021-08-24"},{"lineNumber":186,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":187,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wanyu-l":187}},{"path":"src/main/java/tasks/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":" * The DeadlineTask Class inherits Task Class","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":" * to support different specificities of a task","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":" * as per input by user.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"public final class ToDoTask extends Task{","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":"     * Stores the type of task information","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"     * that identifies a ToDoTask.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"    private final String TYPE \u003d \"[T]\";","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"     * Constructs a ToDoTask.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"     * @param s the input string to describe the task","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"    public ToDoTask(String s) {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"        super(s);","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"     * Retrieves the information of the type of task.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"     * @return the String description of the type of task","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"    public String getType() {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"      return this.TYPE;","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"wanyu-l"},"content":"     * Retrieves the information on the format of the task to be saved.","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"wanyu-l"},"content":"     * @return the String representation of how the task will be saved","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"wanyu-l"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wanyu-l"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wanyu-l"},"content":"        if (super.getStatus().equals(\"[ ]\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"wanyu-l"},"content":"            return \"T\" + \"|\" + this.getTask().strip() + \"|\" + 0;","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wanyu-l"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"wanyu-l"},"content":"            return \"T\" + \"|\" + this.getTask().strip() + \"|\" + 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wanyu-l":50}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":" * The Ui Class is responsible for interactions with","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":" * the user directly and displays various dialog prompts","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":" * to help user with input.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":"public final class Ui{","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":"    private final static String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"    private final static String SEPARATOR \u003d \"     _______________________________________________________\";","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"    private final Scanner sc;","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"     * Constructs an Ui.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"    public Ui() {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"     * Displays the message when program is first started.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"    public static void welcomeMessage() {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"        System.out.println(\"Hello from\\n\" + LOGO);","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"        System.out.println(\"     Hi! I am Duke!\\n\" + \"     What can I do for you?\");","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"wanyu-l"},"content":"     * Detects the next line of input by user.","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"wanyu-l"},"content":"     * @return the detected line of input","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"wanyu-l"},"content":"    public String readLine() {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wanyu-l"},"content":"        String s \u003d \" \";","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"wanyu-l"},"content":"        if (sc.hasNext()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wanyu-l"},"content":"          s \u003d sc.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wanyu-l"},"content":"        return s;","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"wanyu-l"},"content":"     * Displays certain dialogs as feedback to user.","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"wanyu-l"},"content":"     * @param s the words to be displayed","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"wanyu-l"},"content":"    public static void showInput(String ... s) {","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"wanyu-l"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"wanyu-l"},"content":"        for (String str : s) {","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"wanyu-l"},"content":"            System.out.println(\"     \" + str);","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"wanyu-l"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"wanyu-l"},"content":"     * Displays the user\u0027s input as confirmation that","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"wanyu-l"},"content":"     * the input was indeed detected.","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"wanyu-l"},"content":"     * @param s the words to be displayed.","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"wanyu-l"},"content":"    public static void showAsUserInput(String s) {","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"wanyu-l"},"content":"        System.out.println(s);","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"wanyu-l"},"content":"     * Displays the message upon termination of program.","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"wanyu-l"},"content":"    public static void showExitMessage() {","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"wanyu-l"},"content":"        showInput(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"wanyu-l"},"content":"     * Displays commands to help user with input as much as possible","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"wanyu-l"},"content":"    public static void helperMessage() {","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"wanyu-l"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"wanyu-l"},"content":"        System.out.println(\"     The following can be used:\");","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"wanyu-l"},"content":"        System.out.println(\"     Types of tasks: \u0027todo\u0027, \u0027deadline\u0027, \u0027event\u0027\");","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"wanyu-l"},"content":"        System.out.println(\"     If you wish to add a task,\" +","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"wanyu-l"},"content":"                \" please input in the form: \u0027\u003cType of tasks.Task\u003e \u003cName of tasks.Task\u003e\u0027\" +","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"wanyu-l"},"content":"                \" and include keyword \u0027/at\u0027 OR \u0027/by\u0027 followed by \u003cDate\u003e if relevant.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"wanyu-l"},"content":"        System.out.println(\"     If you wish to delete a task, \"","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"wanyu-l"},"content":"                + \"please input in the form: \u0027delete \u003ctask index\u003e\u0027.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"wanyu-l"},"content":"        System.out.println(\"     If you wish to see the current tasks, please input \u0027list\u0027.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"wanyu-l"},"content":"        System.out.println(\"     If you wish to mark a task as done, please input \u0027done \u003ctask index\u003e.\u0027\");","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"wanyu-l"},"content":"        System.out.println(\"     If you wish to terminate the program, please input \u0027bye\u0027.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"wanyu-l"},"content":"        System.out.println(\"     If you wish to check items due on a particular day, please \" +","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"wanyu-l"},"content":"                \"input \u0027due YYYY/MM/DD\u0027.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"wanyu-l"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wanyu-l":101}},{"path":"src/test/java/commands/CommandsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"public class CommandsTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":"  @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":"  public void byeTest() {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":"    assertEquals(true, new ByeCommand(new ArrayList\u003c\u003e()).isExit());","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"  }","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"  @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"  public void deadlineTest() {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"    assertEquals(false, new DeadlineCommand(new ArrayList\u003c\u003e()).isExit());","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"  }","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"  @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"  public void todoTest() {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"    assertEquals(false, new ToDoCommand(new ArrayList\u003c\u003e()).isExit());","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"  }","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"  @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"  public void eventTest() {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"    assertEquals(false, new EventCommand(new ArrayList\u003c\u003e()).isExit());","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"  }","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"  @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"  public void deleteTest() {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"    assertEquals(false, new DeleteCommand(new ArrayList\u003c\u003e()).isExit());","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"  }","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"  @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"  public void doneTest() {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wanyu-l"},"content":"    assertEquals(false, new DoneCommand(new ArrayList\u003c\u003e()).isExit());","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wanyu-l"},"content":"  }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wanyu-l"},"content":"  @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wanyu-l"},"content":"  public void listTest() {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wanyu-l"},"content":"    assertEquals(false, new ListCommand(new ArrayList\u003c\u003e()).isExit());","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wanyu-l"},"content":"  }","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wanyu-l"},"content":"  @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"wanyu-l"},"content":"  public void dueTest() {","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wanyu-l"},"content":"    assertEquals(false, new DueCommand(new ArrayList\u003c\u003e()).isExit());","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"wanyu-l"},"content":"  }","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wanyu-l":49}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"  @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"  public void dummyTest(){","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":"    assertEquals(2,2);","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":"  }","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wanyu-l":12}},{"path":"src/test/java/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package parser;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"import commands.*;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"import commands.DeleteCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":"  @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"  public void Test1() {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"    Command c \u003d new DeleteCommand(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"    assertEquals(c.getClass(), new Parser().parse(\"delete this\").getClass());","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"  }","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"  @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"  public void Test2() {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"    Command c \u003d new DeleteCommand(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"    assertEquals(c.getClass(), new Parser().parse(\"delete        \").getClass());","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"  }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"  @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"  public void Test3() {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"    Command c \u003d new ByeCommand(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"    assertEquals(c.getClass(), new Parser().parse(\"bye 12\").getClass());","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"  }","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"  @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"  public void Test4() {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"    Command c \u003d new ByeCommand(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"    assertEquals(c.getClass(), new Parser().parse(\"bye\").getClass());","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"  }","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"  @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wanyu-l"},"content":"  public void Test5() {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wanyu-l"},"content":"    Command c \u003d new DeadlineCommand(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wanyu-l"},"content":"    assertEquals(c.getClass(), new Parser().parse(\"deadline whatever\").getClass());","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wanyu-l"},"content":"  }","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wanyu-l"},"content":"  @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wanyu-l"},"content":"  public void Test6() {","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"wanyu-l"},"content":"    Command c \u003d new DoneCommand(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wanyu-l"},"content":"    assertEquals(c.getClass(), new Parser().parse(\"done g!@#!$\").getClass());","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"wanyu-l"},"content":"  }","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"wanyu-l"},"content":"  @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"wanyu-l"},"content":"  public void Test7() {","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"wanyu-l"},"content":"    Command c \u003d new DoneCommand(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"wanyu-l"},"content":"    assertEquals(c.getClass(), new Parser().parse(\"done 1\").getClass());","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"wanyu-l"},"content":"  }","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"wanyu-l"},"content":"  @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"wanyu-l"},"content":"  public void Test8() {","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"wanyu-l"},"content":"    Command c \u003d new DueCommand(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"wanyu-l"},"content":"    assertEquals(c.getClass(), new Parser().parse(\"due yesterday\").getClass());","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"wanyu-l"},"content":"  }","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"wanyu-l"},"content":"  @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"wanyu-l"},"content":"  public void Test9() {","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"wanyu-l"},"content":"    Command c \u003d new EventCommand(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"wanyu-l"},"content":"    assertEquals(c.getClass(), new Parser().parse(\"EvEnT\").getClass());","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"wanyu-l"},"content":"  }","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"wanyu-l"},"content":"  @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"wanyu-l"},"content":"  public void Test10() {","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"wanyu-l"},"content":"    Command c \u003d new ListCommand(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"wanyu-l"},"content":"    assertEquals(c.getClass(), new Parser().parse(\"liST\").getClass());","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"wanyu-l"},"content":"  }","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"wanyu-l"},"content":"  @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"wanyu-l"},"content":"  public void Test11() {","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"wanyu-l"},"content":"    Command c \u003d new ToDoCommand(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"wanyu-l"},"content":"    assertEquals(c.getClass(), new Parser().parse(\"todo blah\").getClass());","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"wanyu-l"},"content":"  }","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wanyu-l":77}},{"path":"src/test/java/tasks/TasksTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"public class TasksTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"  @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"  public void ToDoTaskTest1() {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"    Task t \u003d new ToDoTask(\"this\");","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":"    assertEquals(\"[T]\", t.getType());","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":"    assertEquals(\"this\", t.getTask());","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":"    assertEquals(\"[ ]\", t.getStatus());","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"    assertEquals(\"T|this|0\", t.getSaveFormat());","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"    t.setIsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"    assertEquals(\"[X]\", t.getStatus());","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"    assertEquals(\"T|this|1\", t.getSaveFormat());","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"    t.setIsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"  }","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"  @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"  public void ToDoTaskTest2() {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"    assertEquals(\"[T]\", new ToDoTask(\"this\").getType());","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"  }","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"  @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"  public void ToDoTaskTest3() {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"    Task t \u003d new ToDoTask(\"this\");","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"    t.markAsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"    assertEquals(\"[X]\", t.getStatus());","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"  }","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"  @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"  public void EventTaskTest1() {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"    Task t \u003d new EventTask(\"this\", \"when\");","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"    assertEquals(\"[E]\", t.getType());","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wanyu-l"},"content":"    assertEquals(\"this (at: when)\", t.getTask());","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wanyu-l"},"content":"    assertEquals(\"[ ]\", t.getStatus());","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wanyu-l"},"content":"    assertEquals(\"E|this|when|0\", t.getSaveFormat());","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wanyu-l"},"content":"    t.setIsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wanyu-l"},"content":"    assertEquals(\"[X]\", t.getStatus());","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wanyu-l"},"content":"    assertEquals(\"E|this|when|1\", t.getSaveFormat());","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wanyu-l"},"content":"    t.setIsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"wanyu-l"},"content":"  }","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"wanyu-l"},"content":"  @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wanyu-l"},"content":"  public void EventTaskTest2() {","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"wanyu-l"},"content":"    assertEquals(\"[E]\", new EventTask(\"this\", \"when\").getType());","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"wanyu-l"},"content":"  }","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"wanyu-l"},"content":"  @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"wanyu-l"},"content":"  public void EventTaskTest3() {","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"wanyu-l"},"content":"    Task t \u003d new EventTask(\"this\", \"when\");","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"wanyu-l"},"content":"    t.markAsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"wanyu-l"},"content":"    assertEquals(\"[X]\", t.getStatus());","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"wanyu-l"},"content":"  }","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"wanyu-l"},"content":"  @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"wanyu-l"},"content":"  public void EventTaskTest4() {","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"wanyu-l"},"content":"    Task t \u003d new EventTask(\"this\", \"2/12/2019 1800\");","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"wanyu-l"},"content":"    assertEquals(\"this (at: DECEMBER 2 2019)\", t.getTask());","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"wanyu-l"},"content":"    assertEquals(\"2019-12-02\", t.getLocalDate().toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"wanyu-l"},"content":"  }","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"wanyu-l"},"content":"  @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"wanyu-l"},"content":"  public void DeadLineTaskTest1() {","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"wanyu-l"},"content":"    Task t \u003d new DeadLineTask(\"this\", \"when\");","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"wanyu-l"},"content":"    assertEquals(\"[D]\", t.getType());","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"wanyu-l"},"content":"    assertEquals(\"this (by: when)\", t.getTask());","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"wanyu-l"},"content":"    assertEquals(\"[ ]\", t.getStatus());","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"wanyu-l"},"content":"    assertEquals(\"D|this|when|0\", t.getSaveFormat());","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"wanyu-l"},"content":"    t.setIsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"wanyu-l"},"content":"    assertEquals(\"[X]\", t.getStatus());","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"wanyu-l"},"content":"    assertEquals(\"D|this|when|1\", t.getSaveFormat());","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"wanyu-l"},"content":"    t.setIsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"wanyu-l"},"content":"  }","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"wanyu-l"},"content":"  @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"wanyu-l"},"content":"  public void DeadLineTaskTest2() {","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"wanyu-l"},"content":"    assertEquals(\"[D]\", new DeadLineTask(\"this\", \"when\").getType());","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"wanyu-l"},"content":"  }","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"wanyu-l"},"content":"  @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"wanyu-l"},"content":"  public void DeadLineTaskTest3() {","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"wanyu-l"},"content":"    Task t \u003d new DeadLineTask(\"this\", \"when\");","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"wanyu-l"},"content":"    t.markAsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"wanyu-l"},"content":"    assertEquals(\"[X]\", t.getStatus());","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"wanyu-l"},"content":"  }","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"wanyu-l"},"content":"  @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"wanyu-l"},"content":"  public void DeadLineTaskTest4() {","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"wanyu-l"},"content":"    Task t \u003d new DeadLineTask(\"this\", \"2/12/2019 1800\");","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"wanyu-l"},"content":"    assertEquals(\"this (by: DECEMBER 2 2019)\", t.getTask());","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"wanyu-l"},"content":"    assertEquals(\"2019-12-02\", t.getLocalDate().toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"wanyu-l"},"content":"  }","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wanyu-l":96}},{"path":"text-ui-test/New folder/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"list","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"todo read book","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"deadline return book /by June 6th","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"Event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"todo join sports club","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"tod test run","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"done 1","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"done 4","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"todo borrow book","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":"list","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"list","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"event typing code /at ","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"deadline what ds /by","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"todo","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"done","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"deadline","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"event","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"done 11","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"done1","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"done 1","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"huh","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"what","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"blahh","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"list","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"done wh","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"delete 3","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"delete 2","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"delete","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"delete2","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"delteeda","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"deleted","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"event example","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"deadline submission","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"bye","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wanyu-l":36}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"todo read book","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"deadline return book /by June 6th","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"Event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"todo join sports club","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"tod test run","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"done 1","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"done 4","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"todo borrow book","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"event typing code /at ","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"deadline what ds /by","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"todo","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"done","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"deadline","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"event","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"done 11","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"done1","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"done 1","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"huh","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"what","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"blahh","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"done wh","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"delete 3","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"delete 2","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"delete","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"delete2","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"delteeda","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"deleted","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"event example","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"deadline submission","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"bye","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wanyu-l":36}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":"REM @@author:crypto-code {wanyu-l}-reused","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":"dir /s /B  ../src/main/java/*/*.java \u003e sources.txt","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin @sources.txt","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"REM @@author:crypto-code {wanyu-l}-reused","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"wanyu-l":7}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"find ../src/main/java/*/*.java  \u003e sources.txt","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin @sources.txt","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"# @@author:crypto-code {wanyu-l}-reused","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"# @@author:crypto-code {wanyu-l}-reused","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"wanyu-l":5}}]
