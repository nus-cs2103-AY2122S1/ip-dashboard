[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"# Memo-Assistant Duke","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"\u003e ‚ÄúWork gives you meaning and purpose and life is empty without it.‚Äù  ‚Äì Stephen Hawking ([source](https://dansilvestre.com/productivity-quotes/))","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"If you are someone constantly seeking for tasks to be done, it might be difficult to remember all of them.","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"**Duke CAN help!**","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"Duke is:","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"* text based","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":"* simple and easy","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":"* ~~helpful~~ *REALLY* helpful ","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"## Getting Started","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"1. Download it [here](https://github.com/wanyu-l/ip/releases/download/v0.1/Duke.java.jar)","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"2. Run it","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"3. Add your tasks","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"   - Don\u0027t worry, Duke will assist you with inputs!","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   ```   ","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"   ","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"### Let it remember the tasks for you üòÑ","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"## What it can do:","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"- [x] store a **List** of tasks to be done","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"- [x] add, **Delete** and mark tasks as **Done**","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"- [x] **Find** tasks by **Due** dates or keywords","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"- [ ] **Reschedule** tasks to new dates (coming soon)","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"**Here\u0027s a part of the program, maybe it can be of help in practising coding in Java, the `main` method:**","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"wanyu-l"},"content":"```java","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"wanyu-l"},"content":"public static void main(String[] args) {","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"wanyu-l"},"content":"    new Duke().run();","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"wanyu-l"},"content":"```","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"wanyu-l":29,"-":12}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"    useJUnitPlatform{","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"        includeTags \u0027Test\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"wanyu-l"},"content":"    mainClassName \u003d \"Duke\"","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"wanyu-l"},"content":"    archiveBaseName \u003d \"Memo-Assistant Duke\"","lastModifiedDate":"2021-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"wanyu-l"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-09-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":43,"wanyu-l":22}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"# Guide to using Memo-Assitant Duke","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"Sample screenshot","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"![Image of UI](https://github.com/wanyu-l/ip/blob/master/docs/Ui.png)","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"### Feature-Todo","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":"Adds an entry that is descriptive of a task that is to be done, one that does not require details on date.","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"Expected input format: todo {description} ","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"**Example:**","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"`todo read book` ","lastModifiedDate":"2021-09-12"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"**Will result in the following**","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"Successfully added: ","lastModifiedDate":"2021-09-12"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"[T][] read book","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"### Feature-Event","lastModifiedDate":"2021-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"Adds an entry that is descriptive of a task that is to be done on a specific date.","lastModifiedDate":"2021-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"Expected input format: event {description} /at {date in DD/MM/YYYY}","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"**Example:**","lastModifiedDate":"2021-09-12"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"`event quiz /at 12/09/2021` ","lastModifiedDate":"2021-09-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"**Will result in the following:**","lastModifiedDate":"2021-09-12"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"Successfully added: ","lastModifiedDate":"2021-09-12"},{"lineNumber":37,"author":{"gitId":"wanyu-l"},"content":"[E][] quiz (at: 12 SEPTEMBER 2021)","lastModifiedDate":"2021-09-12"},{"lineNumber":38,"author":{"gitId":"wanyu-l"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":39,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":40,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":41,"author":{"gitId":"wanyu-l"},"content":"### Feature-Deadline","lastModifiedDate":"2021-09-12"},{"lineNumber":42,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":43,"author":{"gitId":"wanyu-l"},"content":"Adds an entry that is descriptive of a task that is to be done by a specific date.","lastModifiedDate":"2021-09-12"},{"lineNumber":44,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":45,"author":{"gitId":"wanyu-l"},"content":"Expected input format: deadline {description} /by {date in DD/MM/YYYY}","lastModifiedDate":"2021-09-12"},{"lineNumber":46,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":47,"author":{"gitId":"wanyu-l"},"content":"**Example:**","lastModifiedDate":"2021-09-12"},{"lineNumber":48,"author":{"gitId":"wanyu-l"},"content":"`deadline assignment /by 20/09/2021` ","lastModifiedDate":"2021-09-12"},{"lineNumber":49,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":50,"author":{"gitId":"wanyu-l"},"content":"**Will result in the following:**","lastModifiedDate":"2021-09-12"},{"lineNumber":51,"author":{"gitId":"wanyu-l"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":52,"author":{"gitId":"wanyu-l"},"content":"Successfully added: ","lastModifiedDate":"2021-09-12"},{"lineNumber":53,"author":{"gitId":"wanyu-l"},"content":"[D][] assignment (by: 20 SEPTEMBER 2021)","lastModifiedDate":"2021-09-12"},{"lineNumber":54,"author":{"gitId":"wanyu-l"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":55,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":56,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":57,"author":{"gitId":"wanyu-l"},"content":"### Feature-List","lastModifiedDate":"2021-09-12"},{"lineNumber":58,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":59,"author":{"gitId":"wanyu-l"},"content":"Shows all entries of tasks currently stored.","lastModifiedDate":"2021-09-12"},{"lineNumber":60,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":61,"author":{"gitId":"wanyu-l"},"content":"Expected input format: list","lastModifiedDate":"2021-09-12"},{"lineNumber":62,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":63,"author":{"gitId":"wanyu-l"},"content":"**Example:**","lastModifiedDate":"2021-09-12"},{"lineNumber":64,"author":{"gitId":"wanyu-l"},"content":"`list` ","lastModifiedDate":"2021-09-12"},{"lineNumber":65,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":66,"author":{"gitId":"wanyu-l"},"content":"**Will result in the following:**","lastModifiedDate":"2021-09-12"},{"lineNumber":67,"author":{"gitId":"wanyu-l"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":68,"author":{"gitId":"wanyu-l"},"content":"The current list has these items:","lastModifiedDate":"2021-09-12"},{"lineNumber":69,"author":{"gitId":"wanyu-l"},"content":"1.[T][] read book","lastModifiedDate":"2021-09-12"},{"lineNumber":70,"author":{"gitId":"wanyu-l"},"content":"2.[E][] quiz (at: 12 SEPTEMBER 2021)","lastModifiedDate":"2021-09-12"},{"lineNumber":71,"author":{"gitId":"wanyu-l"},"content":"3.[D][] assignment (by: 20 SEPTEMBER 2021)","lastModifiedDate":"2021-09-12"},{"lineNumber":72,"author":{"gitId":"wanyu-l"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":73,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":74,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":75,"author":{"gitId":"wanyu-l"},"content":"### Feature-Done","lastModifiedDate":"2021-09-12"},{"lineNumber":76,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":77,"author":{"gitId":"wanyu-l"},"content":"Marks an entry of a task as completed.","lastModifiedDate":"2021-09-12"},{"lineNumber":78,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":79,"author":{"gitId":"wanyu-l"},"content":"Expected input format: done {index}","lastModifiedDate":"2021-09-12"},{"lineNumber":80,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":81,"author":{"gitId":"wanyu-l"},"content":"**Example:**","lastModifiedDate":"2021-09-12"},{"lineNumber":82,"author":{"gitId":"wanyu-l"},"content":"`done 1` ","lastModifiedDate":"2021-09-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":84,"author":{"gitId":"wanyu-l"},"content":"**Will result in the following:**","lastModifiedDate":"2021-09-12"},{"lineNumber":85,"author":{"gitId":"wanyu-l"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":86,"author":{"gitId":"wanyu-l"},"content":"Well done! The task is completed!","lastModifiedDate":"2021-09-12"},{"lineNumber":87,"author":{"gitId":"wanyu-l"},"content":"[T][X] read book","lastModifiedDate":"2021-09-12"},{"lineNumber":88,"author":{"gitId":"wanyu-l"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":91,"author":{"gitId":"wanyu-l"},"content":"### Feature-Delete","lastModifiedDate":"2021-09-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":93,"author":{"gitId":"wanyu-l"},"content":"Deletes an entry of task.","lastModifiedDate":"2021-09-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":95,"author":{"gitId":"wanyu-l"},"content":"Expected input format: delete {index}","lastModifiedDate":"2021-09-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":97,"author":{"gitId":"wanyu-l"},"content":"**Example:**","lastModifiedDate":"2021-09-12"},{"lineNumber":98,"author":{"gitId":"wanyu-l"},"content":"`delete 1` ","lastModifiedDate":"2021-09-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":100,"author":{"gitId":"wanyu-l"},"content":"**Will result in the following:**","lastModifiedDate":"2021-09-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":102,"author":{"gitId":"wanyu-l"},"content":"Noted, the following task has been deleted:","lastModifiedDate":"2021-09-12"},{"lineNumber":103,"author":{"gitId":"wanyu-l"},"content":"[T][X] read book","lastModifiedDate":"2021-09-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":105,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":106,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":107,"author":{"gitId":"wanyu-l"},"content":"### Feature-Due","lastModifiedDate":"2021-09-12"},{"lineNumber":108,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":109,"author":{"gitId":"wanyu-l"},"content":"Checks for tasks due on a specific date.","lastModifiedDate":"2021-09-12"},{"lineNumber":110,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":111,"author":{"gitId":"wanyu-l"},"content":"Expected input format: due {date in DD/MM/YYYY}","lastModifiedDate":"2021-09-12"},{"lineNumber":112,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":113,"author":{"gitId":"wanyu-l"},"content":"**Example:**","lastModifiedDate":"2021-09-12"},{"lineNumber":114,"author":{"gitId":"wanyu-l"},"content":"`due 12/09/2021` ","lastModifiedDate":"2021-09-12"},{"lineNumber":115,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":116,"author":{"gitId":"wanyu-l"},"content":"**Will result in the following:**","lastModifiedDate":"2021-09-12"},{"lineNumber":117,"author":{"gitId":"wanyu-l"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":118,"author":{"gitId":"wanyu-l"},"content":"The task(s) due are:","lastModifiedDate":"2021-09-12"},{"lineNumber":119,"author":{"gitId":"wanyu-l"},"content":"1.[E][] quiz (at: 12 SEPTEMBER 2021)","lastModifiedDate":"2021-09-12"},{"lineNumber":120,"author":{"gitId":"wanyu-l"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":123,"author":{"gitId":"wanyu-l"},"content":"### Feature-Find","lastModifiedDate":"2021-09-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":125,"author":{"gitId":"wanyu-l"},"content":"Checks for tasks with any matching keyword in their description.","lastModifiedDate":"2021-09-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":127,"author":{"gitId":"wanyu-l"},"content":"Expected input format: find {keyword}","lastModifiedDate":"2021-09-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":129,"author":{"gitId":"wanyu-l"},"content":"**Example:**","lastModifiedDate":"2021-09-12"},{"lineNumber":130,"author":{"gitId":"wanyu-l"},"content":"`find september`","lastModifiedDate":"2021-09-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":132,"author":{"gitId":"wanyu-l"},"content":"**Will result in the following:**","lastModifiedDate":"2021-09-12"},{"lineNumber":133,"author":{"gitId":"wanyu-l"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":134,"author":{"gitId":"wanyu-l"},"content":"The task(s) found are:","lastModifiedDate":"2021-09-12"},{"lineNumber":135,"author":{"gitId":"wanyu-l"},"content":"1.[E][] quiz (at: 12 SEPTEMBER 2021)","lastModifiedDate":"2021-09-12"},{"lineNumber":136,"author":{"gitId":"wanyu-l"},"content":"2.[D][] assignment (by: 20 SEPTEMBER 2021)","lastModifiedDate":"2021-09-12"},{"lineNumber":137,"author":{"gitId":"wanyu-l"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":138,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":139,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":140,"author":{"gitId":"wanyu-l"},"content":"### Feature-Reschedule","lastModifiedDate":"2021-09-12"},{"lineNumber":141,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":142,"author":{"gitId":"wanyu-l"},"content":"Change the date associated with an entry of task.","lastModifiedDate":"2021-09-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":144,"author":{"gitId":"wanyu-l"},"content":"Expected input format: reschedule {index} {new date in DD/MM/YYYY}","lastModifiedDate":"2021-09-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":146,"author":{"gitId":"wanyu-l"},"content":"**Example:**","lastModifiedDate":"2021-09-12"},{"lineNumber":147,"author":{"gitId":"wanyu-l"},"content":"`reschedule 2 21/09/2021`","lastModifiedDate":"2021-09-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":149,"author":{"gitId":"wanyu-l"},"content":"**Will result in the following:**","lastModifiedDate":"2021-09-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":151,"author":{"gitId":"wanyu-l"},"content":"Noted, the following task have been rescheduled:","lastModifiedDate":"2021-09-12"},{"lineNumber":152,"author":{"gitId":"wanyu-l"},"content":"From [D][] assignment (by: 20 SEPTEMBER 2021)","lastModifiedDate":"2021-09-12"},{"lineNumber":153,"author":{"gitId":"wanyu-l"},"content":"To [D][] assignment (by: 21 SEPTEMBER 2021)","lastModifiedDate":"2021-09-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":155,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":156,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":157,"author":{"gitId":"wanyu-l"},"content":"### Feature-Snooze","lastModifiedDate":"2021-09-12"},{"lineNumber":158,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":159,"author":{"gitId":"wanyu-l"},"content":"Upon launch of application, Duke checks for tasks due on the day itself and results in the following dialog box to appear:","lastModifiedDate":"2021-09-12"},{"lineNumber":160,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":161,"author":{"gitId":"wanyu-l"},"content":"![Image of UI](https://github.com/wanyu-l/ip/blob/master/docs/TasksDueToday.png)","lastModifiedDate":"2021-09-12"},{"lineNumber":162,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":163,"author":{"gitId":"wanyu-l"},"content":"`Snooze` results in relevant tasks to be rescheduled to the subsequent day.","lastModifiedDate":"2021-09-12"},{"lineNumber":164,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":165,"author":{"gitId":"wanyu-l"},"content":"`Confirm` does not result in any further changes, choose this to manually reschedule later or to ignore the alert.","lastModifiedDate":"2021-09-12"},{"lineNumber":166,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":167,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":168,"author":{"gitId":"wanyu-l"},"content":"### Feature-Bye","lastModifiedDate":"2021-09-12"},{"lineNumber":169,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":170,"author":{"gitId":"wanyu-l"},"content":"Close the program.","lastModifiedDate":"2021-09-12"},{"lineNumber":171,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":172,"author":{"gitId":"wanyu-l"},"content":"Expected input format: bye","lastModifiedDate":"2021-09-12"},{"lineNumber":173,"author":{"gitId":"wanyu-l"},"content":"**Example:**","lastModifiedDate":"2021-09-12"},{"lineNumber":174,"author":{"gitId":"wanyu-l"},"content":"`reschedule 2 21/09/2021`","lastModifiedDate":"2021-09-12"},{"lineNumber":175,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":176,"author":{"gitId":"wanyu-l"},"content":"**Will result in the following dialog box:**","lastModifiedDate":"2021-09-12"},{"lineNumber":177,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":178,"author":{"gitId":"wanyu-l"},"content":"![Image of UI](https://github.com/wanyu-l/ip/blob/master/docs/ByeWindow.png)","lastModifiedDate":"2021-09-13"},{"lineNumber":179,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":180,"author":{"gitId":"wanyu-l"},"content":"Click `confirm` or `X` at the top right corner to proceed to close the program.","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"wanyu-l":151,"-":29}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"import ui.Launcher;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"/** This class implements the Duke memo assistant.","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":" * @author damithc","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":" * edited by Wanyu","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":" */","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":"     * Starts the program and execute commands","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":"     * detected by parser as per user input.","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"    public void run() {","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"        new Launcher().launch();","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"        new Duke().run();","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"wanyu-l":16,"-":4}},{"path":"src/main/java/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":" * The ByeCommand Class inherits Command and is","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":" * a specific type of executable command.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"public final class ByeCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"     * Constructs the ByeCommand object.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"     * @param userInput the entire line of user input","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"    public ByeCommand(ArrayList\u003cString\u003e userInput) {","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"        super(userInput);","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"     * Executes the command.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"     * @param list the TaskList object that stores the list of tasks","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"     * @param ui the Ui object that interacts with the user","lastModifiedDate":"2021-09-12"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"     * @param storage the Storage object that saves changes to stored tasks, if any","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"     * @return the message displaying the result","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"    public String execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"        assert list !\u003d null : \"invalid TaskList object detected\";","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"        assert ui !\u003d null : \"invalid Ui object detected\";","lastModifiedDate":"2021-09-12"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"        assert storage !\u003d null : \"invalid Storage object detected\";","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"wanyu-l"},"content":"        return \"\";","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wanyu-l":39}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":" * The Command class represents the action to be done.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"    private final ArrayList\u003cString\u003e userInput;","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"     * Constructs the Command object.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"     * @param userInput the entire line of user input","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"    public Command(ArrayList\u003cString\u003e userInput) {","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"     * Returns the stored user input.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"     * @return the user\u0027s line of input","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"    public ArrayList\u003cString\u003e getInput() {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"        return userInput;","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"     * Returns true if it is a command to exit the program.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"wanyu-l"},"content":"     * @return the result if it is a command to exit the program","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"wanyu-l"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"wanyu-l"},"content":"        return this instanceof ByeCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"wanyu-l"},"content":"     * Executes the command.","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"wanyu-l"},"content":"     * @param list the TaskList object that stores the list of tasks","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"wanyu-l"},"content":"     * @param ui the Ui object that interacts with the user","lastModifiedDate":"2021-09-12"},{"lineNumber":48,"author":{"gitId":"wanyu-l"},"content":"     * @param storage the Storage object that saves changes to stored tasks, if any","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"wanyu-l"},"content":"     * @return the message displaying the result","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"wanyu-l"},"content":"    public abstract String execute(TaskList list, Ui ui, Storage storage);","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wanyu-l":52}},{"path":"src/main/java/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"import tasks.DeadLineTask;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":" * The DeadlineCommand Class inherits Command and is","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":" * a specific type of executable command.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"public final class DeadlineCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"     * Constructs the DeadlineCommand object.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"     * @param userInput the entire line of user input","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"    public DeadlineCommand(ArrayList\u003cString\u003e userInput) {","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"        super(userInput);","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"     * Executes the command.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"     * @param list the TaskList object that stores the list of tasks","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"     * @param ui the Ui object that interacts with the user","lastModifiedDate":"2021-09-12"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"     * @param storage the Storage object that saves changes to stored tasks, if any","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"     * @return the message displaying the result","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"    public String execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"        assert list !\u003d null : \"invalid TaskList object detected\";","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"wanyu-l"},"content":"        assert ui !\u003d null : \"invalid Ui object detected\";","lastModifiedDate":"2021-09-12"},{"lineNumber":38,"author":{"gitId":"wanyu-l"},"content":"        assert storage !\u003d null : \"invalid Storage object detected\";","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"wanyu-l"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wanyu-l"},"content":"            DeadLineTask task \u003d new DeadLineTask(list.filterInfo(getInput()),","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"wanyu-l"},"content":"                    list.getDeadline(getInput()));","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"wanyu-l"},"content":"            String result \u003d list.addTask(task);","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"wanyu-l"},"content":"            storage.resetFile(list.getTasks());","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"wanyu-l"},"content":"            return result;","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"wanyu-l"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"wanyu-l"},"content":"            if (e.getMessage().equals(\"deadline\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wanyu-l"},"content":"                return \"     Invalid input :(\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"wanyu-l"},"content":"                        + \"     Please input in the form: \u0027deadline \u003cName\u003e /by \u003cDate\u003e\u0027.\";","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"wanyu-l"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"wanyu-l"},"content":"                return \"     \" + e.getMessage() + \"\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"wanyu-l"},"content":"                        + \"     Hey, no deadline recorded does not mean no deadline \u003e:(\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"wanyu-l"},"content":"                        + \"     An estimation will be fine, I will remind you on that day.\";","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wanyu-l":56}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":" * The DeleteCommand Class inherits Command and is","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":" * a specific type of executable command.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"public final class DeleteCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"     * Constructs the DeleteCommand object.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"     * @param userInput the entire line of user input","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"    public DeleteCommand(ArrayList\u003cString\u003e userInput) {","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"        super(userInput);","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"     * Executes the command.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"     * @param list the TaskList object that stores the list of tasks","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"     * @param ui the Ui object that interacts with the user","lastModifiedDate":"2021-09-12"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"     * @param storage the Storage object that saves changes to stored tasks, if any","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"     * @return the message displaying the result","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"    public String execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"        assert list !\u003d null : \"invalid TaskList object detected\";","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"        assert ui !\u003d null : \"invalid Ui object detected\";","lastModifiedDate":"2021-09-12"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"        assert storage !\u003d null : \"invalid Storage object detected\";","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"wanyu-l"},"content":"        if (getInput().size() \u003d\u003d 1) {","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"wanyu-l"},"content":"            return \"     Unable to delete task without an index. Please input index :)\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"wanyu-l"},"content":"                    + \"     Please input in the form: \u0027delete \u003ctask index\u003e\u0027.\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"wanyu-l"},"content":"                    + \"     Note: list can be used to see the current tasks.\";","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"wanyu-l"},"content":"        if (getInput().size() \u003e 2) {","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"wanyu-l"},"content":"            return \"     Please input in the form: \u0027delete \u003cindex\u003e\u0027.\";","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"wanyu-l"},"content":"        if (list.getTasks().isEmpty()) {","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"wanyu-l"},"content":"            return \"     List is empty, no tasks to delete, looking good!\";","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"wanyu-l"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"wanyu-l"},"content":"            int index \u003d Integer.parseInt(getInput().get(1)) - 1;","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"wanyu-l"},"content":"            String result \u003d list.deleteTask(index);","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"wanyu-l"},"content":"            storage.resetFile(list.getTasks());","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"wanyu-l"},"content":"            return result;","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"wanyu-l"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"wanyu-l"},"content":"            return \"     Please use a number instead :(\";","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"wanyu-l"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"wanyu-l"},"content":"            return \"     Please input a valid index :)\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"wanyu-l"},"content":"                    + \"     Note: \u0027list\u0027 can be used to see the current tasks.\";","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wanyu-l":60}},{"path":"src/main/java/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"import tasks.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":" * The DoneCommand Class inherits Command and is","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":" * a specific type of executable command.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"public final class DoneCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"     * Constructs the DoneCommand object.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"     * @param userInput the entire line of user input","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"    public DoneCommand(ArrayList\u003cString\u003e userInput) {","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"        super(userInput);","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"     * Executes the command.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"     * @param list the TaskList object that stores the list of tasks","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"     * @param ui the Ui object that interacts with the user","lastModifiedDate":"2021-09-12"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"     * @param storage the Storage object that saves changes to stored tasks, if any","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"     * @return the message displaying the result","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"    public String execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"        assert list !\u003d null : \"invalid TaskList object detected\";","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"wanyu-l"},"content":"        assert ui !\u003d null : \"invalid Ui object detected\";","lastModifiedDate":"2021-09-12"},{"lineNumber":38,"author":{"gitId":"wanyu-l"},"content":"        assert storage !\u003d null : \"invalid Storage object detected\";","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"wanyu-l"},"content":"        ArrayList\u003cTask\u003e tasks \u003d list.getTasks();","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"wanyu-l"},"content":"        String result;","lastModifiedDate":"2021-09-12"},{"lineNumber":41,"author":{"gitId":"wanyu-l"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wanyu-l"},"content":"            if (getInput().size() \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"wanyu-l"},"content":"                throw new DukeException(\"Please input index :)\");","lastModifiedDate":"2021-09-12"},{"lineNumber":44,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wanyu-l"},"content":"            if (getInput().size() \u003e 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"wanyu-l"},"content":"                throw new DukeException(\"Please input in the form: \u0027done \u003cindex\u003e\u0027.\");","lastModifiedDate":"2021-09-12"},{"lineNumber":47,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"wanyu-l"},"content":"            int index \u003d Integer.parseInt(getInput().get(1)) - 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"wanyu-l"},"content":"            if (index \u003e\u003d tasks.size() || index \u003c 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"wanyu-l"},"content":"                throw new DukeException(\"No such index. Please input correct index, no such index :(\");","lastModifiedDate":"2021-09-12"},{"lineNumber":51,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"wanyu-l"},"content":"            result \u003d tasks.get(index).setIsDone();","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"wanyu-l"},"content":"            storage.resetFile(tasks);","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"wanyu-l"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"wanyu-l"},"content":"            return \"     Please input a valid index :)\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"wanyu-l"},"content":"                    + \"     Note: \u0027list\u0027 can be used to see the current tasks.\";","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"wanyu-l"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"wanyu-l"},"content":"            return \"     Please use a number instead :(\";","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"wanyu-l"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-12"},{"lineNumber":60,"author":{"gitId":"wanyu-l"},"content":"            return \"     \" + e.getMessage();","lastModifiedDate":"2021-09-04"},{"lineNumber":61,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"wanyu-l"},"content":"        assert !result.equals(\"\") : \"message for executing done is null\";","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"wanyu-l"},"content":"        return result;","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wanyu-l":65}},{"path":"src/main/java/commands/DueCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":"import tasks.Task;","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":" * The DueCommand Class inherits Command and is","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":" * a specific type of executable command.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"public final class DueCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"     * Constructs the DueCommand object.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"     * @param userInput the entire line of user input","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"    public DueCommand(ArrayList\u003cString\u003e userInput) {","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"        super(userInput);","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"     * Executes the command.","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"     * @param list the TaskList object that stores the list of tasks","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"     * @param ui the Ui object that interacts with the user","lastModifiedDate":"2021-09-12"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"     * @param storage the Storage object that saves changes to stored tasks, if any","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"     * @return the message displaying the result","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"wanyu-l"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wanyu-l"},"content":"    public String execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"wanyu-l"},"content":"        assert list !\u003d null : \"invalid TaskList object detected\";","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"wanyu-l"},"content":"        assert ui !\u003d null : \"invalid Ui object detected\";","lastModifiedDate":"2021-09-12"},{"lineNumber":42,"author":{"gitId":"wanyu-l"},"content":"        assert storage !\u003d null : \"invalid Storage object detected\";","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"wanyu-l"},"content":"        if (getInput().size() !\u003d 2) {","lastModifiedDate":"2021-09-12"},{"lineNumber":44,"author":{"gitId":"wanyu-l"},"content":"            return \"     Please input in the form \u0027due \u003cdate\u003e\u0027.\\n\"","lastModifiedDate":"2021-09-12"},{"lineNumber":45,"author":{"gitId":"wanyu-l"},"content":"                    + \"     Date should be in \u0027DD/MM/YYYY\u0027 form.\";","lastModifiedDate":"2021-09-12"},{"lineNumber":46,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":47,"author":{"gitId":"wanyu-l"},"content":"        LocalDate dueDate \u003d getDate(getInput().get(1));","lastModifiedDate":"2021-09-12"},{"lineNumber":48,"author":{"gitId":"wanyu-l"},"content":"        if (dueDate \u003d\u003d null) {","lastModifiedDate":"2021-09-12"},{"lineNumber":49,"author":{"gitId":"wanyu-l"},"content":"            return \"     Please input a valid date in \u0027DD/MM/YYYY\u0027 form.\";","lastModifiedDate":"2021-09-12"},{"lineNumber":50,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":51,"author":{"gitId":"wanyu-l"},"content":"        ArrayList\u003cTask\u003e tasksDue \u003d list.findTasksDue(dueDate);","lastModifiedDate":"2021-09-12"},{"lineNumber":52,"author":{"gitId":"wanyu-l"},"content":"        if (tasksDue.isEmpty()) {","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"wanyu-l"},"content":"            return \"     No task due!\";","lastModifiedDate":"2021-09-12"},{"lineNumber":54,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":55,"author":{"gitId":"wanyu-l"},"content":"        String result \u003d \"     The task(s) due are: \\n\";","lastModifiedDate":"2021-09-12"},{"lineNumber":56,"author":{"gitId":"wanyu-l"},"content":"        for (int i \u003d 0; i \u003c tasksDue.size(); i++) {","lastModifiedDate":"2021-09-04"},{"lineNumber":57,"author":{"gitId":"wanyu-l"},"content":"            if (i + 1 \u003c tasksDue.size()) {","lastModifiedDate":"2021-09-04"},{"lineNumber":58,"author":{"gitId":"wanyu-l"},"content":"                result +\u003d \"     \" + (i + 1) + \".\" + tasksDue.get(i).getType()","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"wanyu-l"},"content":"                        + tasksDue.get(i).getStatus() + \" \" + tasksDue.get(i).getDescription() + \"\\n\";","lastModifiedDate":"2021-09-04"},{"lineNumber":60,"author":{"gitId":"wanyu-l"},"content":"            } else {","lastModifiedDate":"2021-09-04"},{"lineNumber":61,"author":{"gitId":"wanyu-l"},"content":"                result +\u003d \"     \" + (i + 1) + \".\" + tasksDue.get(i).getType()","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"wanyu-l"},"content":"                        + tasksDue.get(i).getStatus() + \" \" + tasksDue.get(i).getDescription();","lastModifiedDate":"2021-09-04"},{"lineNumber":63,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":64,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":65,"author":{"gitId":"wanyu-l"},"content":"        return result;","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":68,"author":{"gitId":"wanyu-l"},"content":"    private LocalDate getDate(String userInput) {","lastModifiedDate":"2021-09-12"},{"lineNumber":69,"author":{"gitId":"wanyu-l"},"content":"        String str \u003d userInput.replaceAll(\" \", \"\");","lastModifiedDate":"2021-09-12"},{"lineNumber":70,"author":{"gitId":"wanyu-l"},"content":"        String temp \u003d \"^[0-9]{1,2}[\\\\\\\\/][0-9]{1,2}[\\\\\\\\/][0-9]{4}$\";","lastModifiedDate":"2021-09-12"},{"lineNumber":71,"author":{"gitId":"wanyu-l"},"content":"        Pattern p \u003d Pattern.compile(temp);","lastModifiedDate":"2021-09-12"},{"lineNumber":72,"author":{"gitId":"wanyu-l"},"content":"        Matcher m \u003d p.matcher(str);","lastModifiedDate":"2021-09-12"},{"lineNumber":73,"author":{"gitId":"wanyu-l"},"content":"        String dateStr;","lastModifiedDate":"2021-09-12"},{"lineNumber":74,"author":{"gitId":"wanyu-l"},"content":"        if (m.find()) {","lastModifiedDate":"2021-09-12"},{"lineNumber":75,"author":{"gitId":"wanyu-l"},"content":"            dateStr \u003d m.group();","lastModifiedDate":"2021-09-12"},{"lineNumber":76,"author":{"gitId":"wanyu-l"},"content":"            try {","lastModifiedDate":"2021-09-12"},{"lineNumber":77,"author":{"gitId":"wanyu-l"},"content":"                String[] date \u003d dateStr.split(\"/\");","lastModifiedDate":"2021-09-12"},{"lineNumber":78,"author":{"gitId":"wanyu-l"},"content":"                int day \u003d Integer.parseInt(date[0]);","lastModifiedDate":"2021-09-12"},{"lineNumber":79,"author":{"gitId":"wanyu-l"},"content":"                int month \u003d Integer.parseInt(date[1]);","lastModifiedDate":"2021-09-12"},{"lineNumber":80,"author":{"gitId":"wanyu-l"},"content":"                int year \u003d Integer.parseInt(date[2]);","lastModifiedDate":"2021-09-12"},{"lineNumber":81,"author":{"gitId":"wanyu-l"},"content":"                return LocalDate.of(year, month, day);","lastModifiedDate":"2021-09-12"},{"lineNumber":82,"author":{"gitId":"wanyu-l"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2021-09-12"},{"lineNumber":83,"author":{"gitId":"wanyu-l"},"content":"                return null;","lastModifiedDate":"2021-09-12"},{"lineNumber":84,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-09-12"},{"lineNumber":85,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":86,"author":{"gitId":"wanyu-l"},"content":"        return null;","lastModifiedDate":"2021-09-12"},{"lineNumber":87,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wanyu-l":88}},{"path":"src/main/java/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"import tasks.EventTask;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":" * The EventCommand Class inherits Command and is","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":" * a specific type of executable command.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"public final class EventCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"     * Constructs the EventCommand object.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"     * @param userInput the entire line of user input","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"    public EventCommand(ArrayList\u003cString\u003e userInput) {","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"        super(userInput);","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"     * Executes the command.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"     * @param list the TaskList object that stores the list of tasks","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"     * @param ui the Ui object that interacts with the user","lastModifiedDate":"2021-09-12"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"     * @param storage the Storage object that saves changes to stored tasks, if any","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"     * @return the message displaying the result","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"    public String execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"        assert list !\u003d null : \"invalid TaskList object detected\";","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"wanyu-l"},"content":"        assert ui !\u003d null : \"invalid Ui object detected\";","lastModifiedDate":"2021-09-12"},{"lineNumber":38,"author":{"gitId":"wanyu-l"},"content":"        assert storage !\u003d null : \"invalid Storage object detected\";","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"wanyu-l"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wanyu-l"},"content":"            EventTask task \u003d new EventTask(list.filterInfo(getInput()),","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"wanyu-l"},"content":"                    list.getEventDay(getInput()));","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"wanyu-l"},"content":"            String result \u003d list.addTask(task);","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"wanyu-l"},"content":"            storage.resetFile(list.getTasks());","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"wanyu-l"},"content":"            return result;","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"wanyu-l"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"wanyu-l"},"content":"            if (e.getMessage().equals(\"event\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wanyu-l"},"content":"                return \"     Invalid input :(\" + \"\\n\" + \"     Please input in the form: \u0027event \u003cName\u003e /at \u003cDate\u003e\u0027.\";","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"wanyu-l"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"wanyu-l"},"content":"                return \"     \" + e.getMessage() + \"\\n\" + \"     I can\u0027t add an event without a date!\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"wanyu-l"},"content":"                        + \"     An estimation will be fine, I will remind you on that day.\";","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wanyu-l":54}},{"path":"src/main/java/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"import tasks.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":" * The FindCommand Class inherits Command and is","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":" * a specific type of executable command.","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"public final class FindCommand extends Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"     * Constructs the FindCommand object.","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"     * @param userInput the entire line of user input","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"    public FindCommand(ArrayList\u003cString\u003e userInput) {","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"        super(userInput);","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"     * Executes the command.","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"     * @param list the TaskList object that stores the list of tasks","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"     * @param ui the Ui object that interacts with the user","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"     * @param storage the Storage object that saves changes to stored tasks, if any","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"     * @return the message displaying the result","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"    public String execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"        assert list !\u003d null : \"invalid TaskList object detected\";","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"        assert ui !\u003d null : \"invalid Ui object detected\";","lastModifiedDate":"2021-09-12"},{"lineNumber":37,"author":{"gitId":"wanyu-l"},"content":"        assert storage !\u003d null : \"invalid Storage object detected\";","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"wanyu-l"},"content":"        String keyword \u003d \"\";","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"wanyu-l"},"content":"        if (getInput().size() \u003c 2) {","lastModifiedDate":"2021-09-12"},{"lineNumber":40,"author":{"gitId":"wanyu-l"},"content":"            return \"     Please input a keyword for me to look for!\";","lastModifiedDate":"2021-09-12"},{"lineNumber":41,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":42,"author":{"gitId":"wanyu-l"},"content":"        for (int i \u003d 1; i \u003c getInput().size(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"wanyu-l"},"content":"            if (i + 1 \u003c getInput().size()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"wanyu-l"},"content":"                keyword +\u003d getInput().get(i) + \" \";","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"wanyu-l"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"wanyu-l"},"content":"                keyword +\u003d getInput().get(i);","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"wanyu-l"},"content":"        ArrayList\u003cTask\u003e tasksFound \u003d list.findTask(keyword);","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"wanyu-l"},"content":"        if (tasksFound.isEmpty()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"wanyu-l"},"content":"            return \"     No task task found!\";","lastModifiedDate":"2021-09-12"},{"lineNumber":52,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":53,"author":{"gitId":"wanyu-l"},"content":"        String result \u003d \"     The task(s) found are: \\n\";","lastModifiedDate":"2021-09-12"},{"lineNumber":54,"author":{"gitId":"wanyu-l"},"content":"        for (int i \u003d 0; i \u003c tasksFound.size(); i++) {","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"wanyu-l"},"content":"            if (i + 1 \u003c tasksFound.size()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"wanyu-l"},"content":"                result +\u003d \"     \" + (i + 1) + \".\" + tasksFound.get(i).getType()","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"wanyu-l"},"content":"                        + tasksFound.get(i).getStatus() + \" \" + tasksFound.get(i).getDescription() + \"\\n\";","lastModifiedDate":"2021-09-04"},{"lineNumber":58,"author":{"gitId":"wanyu-l"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"wanyu-l"},"content":"                result +\u003d \"     \" + (i + 1) + \".\" + tasksFound.get(i).getType()","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"wanyu-l"},"content":"                        + tasksFound.get(i).getStatus() + \" \" + tasksFound.get(i).getDescription();","lastModifiedDate":"2021-09-04"},{"lineNumber":61,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"wanyu-l"},"content":"        return result;","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":65,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"wanyu-l":66}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":" * The ListCommand Class inherits Command and is","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":" * a specific type of executable command.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"public final class ListCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"     * Constructs the ListCommand object.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"     * @param userInput the entire line of user input","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"    public ListCommand(ArrayList\u003cString\u003e userInput) {","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"        super(userInput);","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"     * Executes the command.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"     * @param list the TaskList object that stores the list of tasks","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"     * @param ui the Ui object that interacts with the user","lastModifiedDate":"2021-09-12"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"     * @param storage the Storage object that saves changes to stored tasks, if any","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"     * @return the message displaying the result","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"    public String execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"        assert list !\u003d null : \"invalid TaskList object detected\";","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"        assert ui !\u003d null : \"invalid Ui object detected\";","lastModifiedDate":"2021-09-12"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"        assert storage !\u003d null : \"invalid Storage object detected\";","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"wanyu-l"},"content":"        return list.getList();","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wanyu-l":39}},{"path":"src/main/java/commands/RescheduleCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package commands;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":" * The RescheduleCommand Class inherits Command and is","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":" * a specific type of executable command.","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"public final class RescheduleCommand extends Command {","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"     * Constructs the RescheduleCommand object.","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"     * @param userInput the entire line of user input","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"    public RescheduleCommand(ArrayList\u003cString\u003e userInput) {","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"        super(userInput);","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"     * Executes the command.","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"     * @param list    the TaskList object that stores the list of tasks","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"     * @param ui      the Ui object that interacts with the user","lastModifiedDate":"2021-09-12"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"     * @param storage the Storage object that saves changes to stored tasks, if any","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"     * @return the message displaying the result","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"wanyu-l"},"content":"    @Override","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"wanyu-l"},"content":"    public String execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"wanyu-l"},"content":"        if (getInput().size() \u003e 4) {","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"wanyu-l"},"content":"            return \"     Please input in the form \u0027reschedule \u003cindex\u003e \u003cdate\u003e \u003ctime\u003e (if applicable)\u0027\\n\"","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"wanyu-l"},"content":"                    + \"     Date should be in \u0027DD/MM/YYYY\u0027 form and time should be in HH/MM.\";","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"wanyu-l"},"content":"        if (getInput().size() \u003c 3) {","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"wanyu-l"},"content":"            return \"     Please input index and date at least\";","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":47,"author":{"gitId":"wanyu-l"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"wanyu-l"},"content":"            int index \u003d Integer.parseInt(getInput().get(1)) - 1;","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"wanyu-l"},"content":"            LocalDate localDate \u003d getDate(getInput().get(2));","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"wanyu-l"},"content":"            LocalTime localTime \u003d null;","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"wanyu-l"},"content":"            if (getInput().size() \u003d\u003d 4) {","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"wanyu-l"},"content":"                localTime \u003d getTime(getInput().get(3));","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"wanyu-l"},"content":"            if (localDate \u003d\u003d null) {","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"wanyu-l"},"content":"                throw new DukeException(\"Not a valid date!\");","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"wanyu-l"},"content":"            String prefix \u003d \"\";","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"wanyu-l"},"content":"            if (localTime \u003d\u003d null) {","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"wanyu-l"},"content":"                prefix \u003d \"     Not a valid time.\\n\";","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"wanyu-l"},"content":"            String result \u003d prefix + list.reschedule(localDate, localTime, index);","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"wanyu-l"},"content":"            storage.resetFile(list.getTasks());","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"wanyu-l"},"content":"            return result;","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"wanyu-l"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"wanyu-l"},"content":"            return \"     Please use a number instead!\";","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"wanyu-l"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"wanyu-l"},"content":"            return \"     \" + e.getMessage();","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":69,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":70,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":71,"author":{"gitId":"wanyu-l"},"content":"    private LocalDate getDate(String userInput) {","lastModifiedDate":"2021-09-07"},{"lineNumber":72,"author":{"gitId":"wanyu-l"},"content":"        String str \u003d userInput.replaceAll(\" \", \"\");","lastModifiedDate":"2021-09-07"},{"lineNumber":73,"author":{"gitId":"wanyu-l"},"content":"        String temp \u003d \"^[0-9]{1,2}[\\\\\\\\/][0-9]{1,2}[\\\\\\\\/][0-9]{4}$\";","lastModifiedDate":"2021-09-07"},{"lineNumber":74,"author":{"gitId":"wanyu-l"},"content":"        Pattern p \u003d Pattern.compile(temp);","lastModifiedDate":"2021-09-07"},{"lineNumber":75,"author":{"gitId":"wanyu-l"},"content":"        Matcher m \u003d p.matcher(str);","lastModifiedDate":"2021-09-07"},{"lineNumber":76,"author":{"gitId":"wanyu-l"},"content":"        String dateStr;","lastModifiedDate":"2021-09-07"},{"lineNumber":77,"author":{"gitId":"wanyu-l"},"content":"        if (m.find()) {","lastModifiedDate":"2021-09-07"},{"lineNumber":78,"author":{"gitId":"wanyu-l"},"content":"            dateStr \u003d m.group();","lastModifiedDate":"2021-09-07"},{"lineNumber":79,"author":{"gitId":"wanyu-l"},"content":"            try {","lastModifiedDate":"2021-09-07"},{"lineNumber":80,"author":{"gitId":"wanyu-l"},"content":"                String[] date \u003d dateStr.split(\"/\");","lastModifiedDate":"2021-09-07"},{"lineNumber":81,"author":{"gitId":"wanyu-l"},"content":"                int day \u003d Integer.parseInt(date[0]);","lastModifiedDate":"2021-09-07"},{"lineNumber":82,"author":{"gitId":"wanyu-l"},"content":"                int month \u003d Integer.parseInt(date[1]);","lastModifiedDate":"2021-09-07"},{"lineNumber":83,"author":{"gitId":"wanyu-l"},"content":"                int year \u003d Integer.parseInt(date[2]);","lastModifiedDate":"2021-09-07"},{"lineNumber":84,"author":{"gitId":"wanyu-l"},"content":"                return LocalDate.of(year, month, day);","lastModifiedDate":"2021-09-07"},{"lineNumber":85,"author":{"gitId":"wanyu-l"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":86,"author":{"gitId":"wanyu-l"},"content":"                return null;","lastModifiedDate":"2021-09-07"},{"lineNumber":87,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":88,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":89,"author":{"gitId":"wanyu-l"},"content":"        return null;","lastModifiedDate":"2021-09-07"},{"lineNumber":90,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":91,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":92,"author":{"gitId":"wanyu-l"},"content":"    private LocalTime getTime(String input) {","lastModifiedDate":"2021-09-15"},{"lineNumber":93,"author":{"gitId":"wanyu-l"},"content":"        String time \u003d \"^[0-9]{4}$\";","lastModifiedDate":"2021-09-15"},{"lineNumber":94,"author":{"gitId":"wanyu-l"},"content":"        Pattern p \u003d Pattern.compile(time);","lastModifiedDate":"2021-09-15"},{"lineNumber":95,"author":{"gitId":"wanyu-l"},"content":"        Matcher m \u003d p.matcher(input);","lastModifiedDate":"2021-09-15"},{"lineNumber":96,"author":{"gitId":"wanyu-l"},"content":"        if (m.find()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":97,"author":{"gitId":"wanyu-l"},"content":"            String matched \u003d m.group();","lastModifiedDate":"2021-09-15"},{"lineNumber":98,"author":{"gitId":"wanyu-l"},"content":"            try {","lastModifiedDate":"2021-09-15"},{"lineNumber":99,"author":{"gitId":"wanyu-l"},"content":"                return LocalTime.of(Integer.parseInt(matched.substring(0, 2)),","lastModifiedDate":"2021-09-15"},{"lineNumber":100,"author":{"gitId":"wanyu-l"},"content":"                        Integer.parseInt(matched.substring(2)));","lastModifiedDate":"2021-09-15"},{"lineNumber":101,"author":{"gitId":"wanyu-l"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":102,"author":{"gitId":"wanyu-l"},"content":"                return null;","lastModifiedDate":"2021-09-15"},{"lineNumber":103,"author":{"gitId":"wanyu-l"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":104,"author":{"gitId":"wanyu-l"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-09-15"},{"lineNumber":105,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":106,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":107,"author":{"gitId":"wanyu-l"},"content":"        return null;","lastModifiedDate":"2021-09-15"},{"lineNumber":108,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":109,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"wanyu-l":109}},{"path":"src/main/java/commands/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"import tasks.ToDoTask;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":" * The ToDoCommand Class inherits Command and is","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":" * a specific type of executable command.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"public final class ToDoCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"     * Constructs the ToDoCommand object.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"     * @param userInput the entire line of user input","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"    public ToDoCommand(ArrayList\u003cString\u003e userInput) {","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"        super(userInput);","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"     * Executes the command.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"     * @param list the TaskList object that stores the list of tasks","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"     * @param ui the Ui object that interacts with the user","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"     * @param storage the Storage object that saves changes to stored tasks, if any","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"     * @return the message displaying the result","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"    public String execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"        assert list !\u003d null : \"invalid TaskList object detected\";","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"        assert ui !\u003d null : \"invalid Ui object detected\";","lastModifiedDate":"2021-09-12"},{"lineNumber":37,"author":{"gitId":"wanyu-l"},"content":"        assert storage !\u003d null : \"invalid Storage object detected\";","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"wanyu-l"},"content":"        if (getInput().size() \u003c 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"wanyu-l"},"content":"            return \"     Oops, you have left out the task description for todo!\";","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":41,"author":{"gitId":"wanyu-l"},"content":"        ToDoTask task \u003d new ToDoTask(list.filterInfo(getInput()));","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"wanyu-l"},"content":"        String result \u003d list.addTask(task);","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"wanyu-l"},"content":"        storage.resetFile(list.getTasks());","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"wanyu-l"},"content":"        return result;","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wanyu-l":46}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":" * The DukeException class inherits Exception and","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":" * is unique Duke instances.","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"     * Constructs the duke.DukeException object.","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":"     * @param message the message associated with the exception","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"        super(message);","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wanyu-l":16}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package parser;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"import commands.ByeCommand;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"import commands.Command;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"import commands.DeadlineCommand;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"import commands.DeleteCommand;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"import commands.DoneCommand;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":"import commands.DueCommand;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":"import commands.EventCommand;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":"import commands.FindCommand;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"import commands.ListCommand;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"import commands.RescheduleCommand;","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"import commands.ToDoCommand;","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":" * The Parser class attempts to make sense of","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":" * user\u0027s input and generates commands accordingly.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"public final class Parser {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"     * Generates the command corresponding to user\u0027s input.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"     * @param userInput input line of words, possibly containing any character","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"     * @return the command corresponding to keywords or null if none detected","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"    public Command parse(String userInput) {","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"        Command command \u003d null;","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"            ArrayList\u003cString\u003e words \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"            String[] arr \u003d userInput.split(\"\\\\s+\");","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"            for (String ss : arr) {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wanyu-l"},"content":"                if (!ss.equals(\"\")) {","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"wanyu-l"},"content":"                    words.add(ss);","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"wanyu-l"},"content":"                }","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wanyu-l"},"content":"            command \u003d generateCommand(words);","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"wanyu-l"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wanyu-l"},"content":"            new Ui().showHelperMessage();","lastModifiedDate":"2021-09-12"},{"lineNumber":44,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wanyu-l"},"content":"        return command;","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"wanyu-l"},"content":"     * Creates commands specific to user\u0027s input.","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"wanyu-l"},"content":"     * @param s the words detected by parse method","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"wanyu-l"},"content":"     * @return created executable command","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"wanyu-l"},"content":"     * @throws DukeException if user\u0027s input does not contain correct keywords","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"wanyu-l"},"content":"    public Command generateCommand(ArrayList\u003cString\u003e s) throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"wanyu-l"},"content":"        if (s \u003d\u003d null || s.isEmpty()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"wanyu-l"},"content":"            throw new DukeException(\"Please chek your input!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"wanyu-l"},"content":"        } else if (s.get(0).equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"wanyu-l"},"content":"            return new ByeCommand(s);","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"wanyu-l"},"content":"        } else if (s.get(0).equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"wanyu-l"},"content":"            return new ListCommand(s);","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"wanyu-l"},"content":"        } else if (s.get(0).equalsIgnoreCase(\"done\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"wanyu-l"},"content":"            return new DoneCommand(s);","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"wanyu-l"},"content":"        } else if (s.get(0).equalsIgnoreCase(\"delete\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"wanyu-l"},"content":"            return new DeleteCommand(s);","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"wanyu-l"},"content":"        } else if (s.get(0).equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"wanyu-l"},"content":"            return new ToDoCommand(s);","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"wanyu-l"},"content":"        } else if (s.get(0).equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"wanyu-l"},"content":"            return new DeadlineCommand(s);","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"wanyu-l"},"content":"        } else if (s.get(0).equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"wanyu-l"},"content":"            return new EventCommand(s);","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"wanyu-l"},"content":"        } else if (s.get(0).equalsIgnoreCase(\"due\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"wanyu-l"},"content":"            return new DueCommand(s);","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"wanyu-l"},"content":"        } else if (s.get(0).equalsIgnoreCase(\"find\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"wanyu-l"},"content":"            return new FindCommand(s);","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"wanyu-l"},"content":"        } else if (s.get(0).equalsIgnoreCase(\"reschedule\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":77,"author":{"gitId":"wanyu-l"},"content":"            return new RescheduleCommand(s);","lastModifiedDate":"2021-09-07"},{"lineNumber":78,"author":{"gitId":"wanyu-l"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"wanyu-l"},"content":"            throw new DukeException(\"Not a valid command!\");","lastModifiedDate":"2021-09-04"},{"lineNumber":80,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wanyu-l":82}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"import java.io.File;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":"import tasks.DeadLineTask;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"import tasks.EventTask;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"import tasks.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"import tasks.ToDoTask;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":" * The Storage Class is responsible for reading and loading","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":" * of data stored locally on the computer.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"public final class Storage {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"    private static final String DATA_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"     * Checks if folder and text files for where the information","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"     * related to the Duke assistant already exists. If not,","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"     * create them.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"     * @throws DukeException if there were unexpected errors","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"     * while creating or checking files","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"    public void createFiles() throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"        File folder \u003d new File(\"./data\");","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"        File saves \u003d new File(DATA_PATH);","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"wanyu-l"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wanyu-l"},"content":"            if (!folder.exists() || !folder.isDirectory()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"wanyu-l"},"content":"                folder.mkdir();","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wanyu-l"},"content":"            if (!saves.exists()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wanyu-l"},"content":"                saves.createNewFile();","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"wanyu-l"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wanyu-l"},"content":"            new Ui().showInput(e.getMessage());","lastModifiedDate":"2021-09-12"},{"lineNumber":46,"author":{"gitId":"wanyu-l"},"content":"            throw new DukeException(\"Unexpected issue encountered\");","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"wanyu-l"},"content":"     * Saves the tasks to specified folder and file.","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"wanyu-l"},"content":"     * @param tasks the list of tasks to be saved","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"wanyu-l"},"content":"    public void resetFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-04"},{"lineNumber":56,"author":{"gitId":"wanyu-l"},"content":"        File file \u003d new File(DATA_PATH);","lastModifiedDate":"2021-09-06"},{"lineNumber":57,"author":{"gitId":"wanyu-l"},"content":"        boolean deleted \u003d file.delete();","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"wanyu-l"},"content":"        if (deleted) {","lastModifiedDate":"2021-09-06"},{"lineNumber":59,"author":{"gitId":"wanyu-l"},"content":"            try {","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"wanyu-l"},"content":"                file.createNewFile();","lastModifiedDate":"2021-09-04"},{"lineNumber":61,"author":{"gitId":"wanyu-l"},"content":"                FileWriter writer \u003d new FileWriter(DATA_PATH, true);","lastModifiedDate":"2021-09-06"},{"lineNumber":62,"author":{"gitId":"wanyu-l"},"content":"                for (Task t : tasks) {","lastModifiedDate":"2021-09-04"},{"lineNumber":63,"author":{"gitId":"wanyu-l"},"content":"                    writer.write(t.getSaveFormat() + \"\\n\");","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"wanyu-l"},"content":"                    writer.flush();","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"wanyu-l"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"wanyu-l"},"content":"                writer.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"wanyu-l"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"wanyu-l"},"content":"                new Ui().showInput(\"Unable to write, something went wrong\");","lastModifiedDate":"2021-09-12"},{"lineNumber":69,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"wanyu-l"},"content":"        } else {","lastModifiedDate":"2021-09-06"},{"lineNumber":71,"author":{"gitId":"wanyu-l"},"content":"            new Ui().showInput(\"Something went wrong... could not overwrite\");","lastModifiedDate":"2021-09-12"},{"lineNumber":72,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":73,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"wanyu-l"},"content":"     * Loads the previously saved list of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"wanyu-l"},"content":"     * @return the stored list of tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"wanyu-l"},"content":"    public ArrayList\u003cTask\u003e loadSaves() {","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"wanyu-l"},"content":"        ArrayList\u003cTask\u003e tasksLoaded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"wanyu-l"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"wanyu-l"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(DATA_PATH));","lastModifiedDate":"2021-09-06"},{"lineNumber":84,"author":{"gitId":"wanyu-l"},"content":"            String line \u003d reader.readLine();","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"wanyu-l"},"content":"            while (line !\u003d null) {","lastModifiedDate":"2021-08-27"},{"lineNumber":86,"author":{"gitId":"wanyu-l"},"content":"                String[] words \u003d line.split(\"\\\\|\");","lastModifiedDate":"2021-08-27"},{"lineNumber":87,"author":{"gitId":"wanyu-l"},"content":"                if (words[0].equals(\"T\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"wanyu-l"},"content":"                    ToDoTask t \u003d new ToDoTask(words[1]);","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"wanyu-l"},"content":"                    if (words[words.length - 1].equals(\"1\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"wanyu-l"},"content":"                        t.markAsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"wanyu-l"},"content":"                    }","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"wanyu-l"},"content":"                    tasksLoaded.add(t);","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"wanyu-l"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"wanyu-l"},"content":"                if (words[0].equals(\"D\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"wanyu-l"},"content":"                    DeadLineTask d \u003d new DeadLineTask(words[1], words[2]);","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"wanyu-l"},"content":"                    if (words[words.length - 1].equals(\"1\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"wanyu-l"},"content":"                        d.markAsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"wanyu-l"},"content":"                    }","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"wanyu-l"},"content":"                    tasksLoaded.add(d);","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"wanyu-l"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"wanyu-l"},"content":"                if (words[0].equals(\"E\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"wanyu-l"},"content":"                    EventTask e \u003d new EventTask(words[1], words[2]);","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"wanyu-l"},"content":"                    if (words[words.length - 1].equals(\"1\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"wanyu-l"},"content":"                        e.markAsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"wanyu-l"},"content":"                    }","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"wanyu-l"},"content":"                    tasksLoaded.add(e);","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"wanyu-l"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"wanyu-l"},"content":"                line \u003d reader.readLine();","lastModifiedDate":"2021-08-27"},{"lineNumber":109,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"wanyu-l"},"content":"            reader.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"wanyu-l"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"wanyu-l"},"content":"            new Ui().showInput(e.getMessage());","lastModifiedDate":"2021-09-12"},{"lineNumber":113,"author":{"gitId":"wanyu-l"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"wanyu-l"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"wanyu-l"},"content":"        return tasksLoaded;","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wanyu-l":118}},{"path":"src/main/java/tasks/DeadLineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"import java.time.Month;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":" * The DeadlineTask Class inherits Task Class","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":" * to support different specificities of a task","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":" * as per input by user.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"public final class DeadLineTask extends Task {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"    /** Stores the type of task information that identifies a DeadlineTask */","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"    private final String taskType \u003d \"[D]\";","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"    /** Stores the do-by-date information */","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"    private String dueDate;","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"    /** Stores the do-by-date information as a LocalDate */","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"    private LocalDate localDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"    /** Stores the time information as a LocalTime */","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"    private LocalTime time;","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"     * Constructs a Deadline task and check if a date can be","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"     * stored as LocalDate. If so, save it, otherwise save","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"     * date as per user input.","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"     * @param description the input string to describe the Deadline task","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"     * @param date the do-by-date","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wanyu-l"},"content":"    public DeadLineTask(String description, String date) {","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"wanyu-l"},"content":"        super(description);","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"wanyu-l"},"content":"        this.dueDate \u003d date;","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"wanyu-l"},"content":"        setDateAndTime(date);","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"wanyu-l"},"content":"    private void setDateAndTime(String userInput) {","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"wanyu-l"},"content":"        String dateAndTime \u003d \"[0-9]{1,2}[\\\\\\\\/][0-9]{1,2}[\\\\\\\\/][0-9]{4}\\\\s[0-9]{4}\";","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"wanyu-l"},"content":"        String dateOnly \u003d \"[0-9]{1,2}[\\\\\\\\/][0-9]{1,2}[\\\\\\\\/][0-9]{4}\";","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"wanyu-l"},"content":"        Pattern p \u003d Pattern.compile(dateAndTime);","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"wanyu-l"},"content":"        Matcher m \u003d p.matcher(userInput);","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"wanyu-l"},"content":"        String dateStr;","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"wanyu-l"},"content":"        String matched;","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"wanyu-l"},"content":"        if (m.find()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"wanyu-l"},"content":"            matched \u003d m.group();","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"wanyu-l"},"content":"            dateStr \u003d matched.substring(0, matched.length() - 4)","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"wanyu-l"},"content":"                    .replaceAll(\" \", \"\");","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"wanyu-l"},"content":"            try {","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"wanyu-l"},"content":"                String[] date \u003d dateStr.split(\"/\");","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"wanyu-l"},"content":"                int day \u003d Integer.parseInt(date[0]);","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"wanyu-l"},"content":"                int month \u003d Integer.parseInt(date[1]);","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"wanyu-l"},"content":"                int year \u003d Integer.parseInt(date[2]);","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"wanyu-l"},"content":"                setLocalDate(LocalDate.of(year, month, day));","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"wanyu-l"},"content":"                setTimeFromString(matched.substring(matched.length() - 4));","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"wanyu-l"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"wanyu-l"},"content":"                System.out.println(this.getClass() + \": invalid date\");","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"wanyu-l"},"content":"        } else {","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"wanyu-l"},"content":"            p \u003d Pattern.compile(dateOnly);","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"wanyu-l"},"content":"            m \u003d p.matcher(userInput);","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"wanyu-l"},"content":"            if (m.find()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"wanyu-l"},"content":"                dateStr \u003d m.group();","lastModifiedDate":"2021-09-06"},{"lineNumber":70,"author":{"gitId":"wanyu-l"},"content":"                try {","lastModifiedDate":"2021-09-06"},{"lineNumber":71,"author":{"gitId":"wanyu-l"},"content":"                    String[] date \u003d dateStr.split(\"/\");","lastModifiedDate":"2021-09-06"},{"lineNumber":72,"author":{"gitId":"wanyu-l"},"content":"                    int day \u003d Integer.parseInt(date[0]);","lastModifiedDate":"2021-09-06"},{"lineNumber":73,"author":{"gitId":"wanyu-l"},"content":"                    int month \u003d Integer.parseInt(date[1]);","lastModifiedDate":"2021-09-06"},{"lineNumber":74,"author":{"gitId":"wanyu-l"},"content":"                    int year \u003d Integer.parseInt(date[2]);","lastModifiedDate":"2021-09-06"},{"lineNumber":75,"author":{"gitId":"wanyu-l"},"content":"                    setLocalDate(LocalDate.of(year, month, day));","lastModifiedDate":"2021-09-15"},{"lineNumber":76,"author":{"gitId":"wanyu-l"},"content":"                } catch (DateTimeException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":77,"author":{"gitId":"wanyu-l"},"content":"                    System.out.println(this.getClass() + \": invalid date\");","lastModifiedDate":"2021-09-15"},{"lineNumber":78,"author":{"gitId":"wanyu-l"},"content":"                }","lastModifiedDate":"2021-09-15"},{"lineNumber":79,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":80,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":81,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":82,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":83,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":84,"author":{"gitId":"wanyu-l"},"content":"    private void setTimeFromString(String time) {","lastModifiedDate":"2021-09-15"},{"lineNumber":85,"author":{"gitId":"wanyu-l"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":86,"author":{"gitId":"wanyu-l"},"content":"            this.time \u003d LocalTime.of(Integer.parseInt(time.substring(0, 2)),","lastModifiedDate":"2021-09-15"},{"lineNumber":87,"author":{"gitId":"wanyu-l"},"content":"                    Integer.parseInt(time.substring(time.length() - 2)));","lastModifiedDate":"2021-09-15"},{"lineNumber":88,"author":{"gitId":"wanyu-l"},"content":"            if (localDate !\u003d null) {","lastModifiedDate":"2021-09-15"},{"lineNumber":89,"author":{"gitId":"wanyu-l"},"content":"                dueDate +\u003d \" \" + this.time.toString().replaceAll(\":\", \"\");","lastModifiedDate":"2021-09-15"},{"lineNumber":90,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":91,"author":{"gitId":"wanyu-l"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":92,"author":{"gitId":"wanyu-l"},"content":"            this.time \u003d null;","lastModifiedDate":"2021-09-15"},{"lineNumber":93,"author":{"gitId":"wanyu-l"},"content":"            System.out.println(\"invalid time\" + e.getMessage());","lastModifiedDate":"2021-09-15"},{"lineNumber":94,"author":{"gitId":"wanyu-l"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":95,"author":{"gitId":"wanyu-l"},"content":"            this.time \u003d null;","lastModifiedDate":"2021-09-15"},{"lineNumber":96,"author":{"gitId":"wanyu-l"},"content":"            System.out.println(\"no time created\" + e.getMessage());","lastModifiedDate":"2021-09-15"},{"lineNumber":97,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":98,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":99,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":100,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":101,"author":{"gitId":"wanyu-l"},"content":"     * Sets the time as a valid time.","lastModifiedDate":"2021-09-15"},{"lineNumber":102,"author":{"gitId":"wanyu-l"},"content":"     * @param localTime the specific valid time to store","lastModifiedDate":"2021-09-15"},{"lineNumber":103,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":104,"author":{"gitId":"wanyu-l"},"content":"    public void setLocalTime(LocalTime localTime) {","lastModifiedDate":"2021-09-15"},{"lineNumber":105,"author":{"gitId":"wanyu-l"},"content":"        if (localTime !\u003d null) {","lastModifiedDate":"2021-09-15"},{"lineNumber":106,"author":{"gitId":"wanyu-l"},"content":"            this.time \u003d localTime;","lastModifiedDate":"2021-09-15"},{"lineNumber":107,"author":{"gitId":"wanyu-l"},"content":"            if (this.localDate !\u003d null) {","lastModifiedDate":"2021-09-15"},{"lineNumber":108,"author":{"gitId":"wanyu-l"},"content":"                dueDate +\u003d \" \" + localTime.toString().replaceAll(\":\", \"\");","lastModifiedDate":"2021-09-15"},{"lineNumber":109,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"wanyu-l"},"content":"     * Retrieves the information of the type of task.","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"wanyu-l"},"content":"     * @return the String description of the type of task","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"wanyu-l"},"content":"    public String getType() {","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"wanyu-l"},"content":"        return this.taskType;","lastModifiedDate":"2021-08-30"},{"lineNumber":120,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":123,"author":{"gitId":"wanyu-l"},"content":"     * Sets the date as a valid date.","lastModifiedDate":"2021-09-07"},{"lineNumber":124,"author":{"gitId":"wanyu-l"},"content":"     * @param localDate the specific valid date to store","lastModifiedDate":"2021-09-07"},{"lineNumber":125,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":126,"author":{"gitId":"wanyu-l"},"content":"    public void setLocalDate(LocalDate localDate) {","lastModifiedDate":"2021-09-07"},{"lineNumber":127,"author":{"gitId":"wanyu-l"},"content":"        this.time \u003d null;","lastModifiedDate":"2021-09-15"},{"lineNumber":128,"author":{"gitId":"wanyu-l"},"content":"        this.localDate \u003d localDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"wanyu-l"},"content":"        this.dueDate \u003d localDate.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":130,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":131,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":132,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"wanyu-l"},"content":"     * Retrieves the information on the date associated with task.","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"wanyu-l"},"content":"     * @return the date associated with task in as a LocalDate","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"wanyu-l"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"wanyu-l"},"content":"    public LocalDate getLocalDate() {","lastModifiedDate":"2021-08-23"},{"lineNumber":139,"author":{"gitId":"wanyu-l"},"content":"        return this.localDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":140,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":141,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":142,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":143,"author":{"gitId":"wanyu-l"},"content":"     * Retrieves the description specific to the Deadline task","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"wanyu-l"},"content":"     * and use a LocalDate if available.","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":146,"author":{"gitId":"wanyu-l"},"content":"     * @return the description specific to the Deadline task","lastModifiedDate":"2021-08-24"},{"lineNumber":147,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":148,"author":{"gitId":"wanyu-l"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":149,"author":{"gitId":"wanyu-l"},"content":"    public String getDescription() {","lastModifiedDate":"2021-09-04"},{"lineNumber":150,"author":{"gitId":"wanyu-l"},"content":"        if (this.localDate \u003d\u003d null) {","lastModifiedDate":"2021-08-23"},{"lineNumber":151,"author":{"gitId":"wanyu-l"},"content":"            return super.getDescription() + \" \" + \"(by: \" + this.dueDate + \")\";","lastModifiedDate":"2021-09-04"},{"lineNumber":152,"author":{"gitId":"wanyu-l"},"content":"        } else if (this.time \u003d\u003d null) {","lastModifiedDate":"2021-09-15"},{"lineNumber":153,"author":{"gitId":"wanyu-l"},"content":"            return super.getDescription() + \" \" + \"(by: \" + this.localDate.getDayOfMonth() + \" \"","lastModifiedDate":"2021-09-04"},{"lineNumber":154,"author":{"gitId":"wanyu-l"},"content":"                    + Month.of(this.localDate.getMonthValue()) + \" \" + this.localDate.getYear() + \")\";","lastModifiedDate":"2021-09-04"},{"lineNumber":155,"author":{"gitId":"wanyu-l"},"content":"        } else {","lastModifiedDate":"2021-09-15"},{"lineNumber":156,"author":{"gitId":"wanyu-l"},"content":"            return super.getDescription() + \" \" + \"(by: \" + this.localDate.getDayOfMonth() + \" \"","lastModifiedDate":"2021-09-15"},{"lineNumber":157,"author":{"gitId":"wanyu-l"},"content":"                    + Month.of(this.localDate.getMonthValue()) + \" \" + this.localDate.getYear() + \" \"","lastModifiedDate":"2021-09-15"},{"lineNumber":158,"author":{"gitId":"wanyu-l"},"content":"                    + time + \")\";","lastModifiedDate":"2021-09-15"},{"lineNumber":159,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":160,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":161,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":162,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":163,"author":{"gitId":"wanyu-l"},"content":"     * Retrieves the simple description of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":164,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":165,"author":{"gitId":"wanyu-l"},"content":"     * @return the simple description of the task","lastModifiedDate":"2021-08-24"},{"lineNumber":166,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":167,"author":{"gitId":"wanyu-l"},"content":"    public String getSimpleTaskDescription() {","lastModifiedDate":"2021-08-27"},{"lineNumber":168,"author":{"gitId":"wanyu-l"},"content":"        return super.getDescription();","lastModifiedDate":"2021-09-04"},{"lineNumber":169,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":170,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":171,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":172,"author":{"gitId":"wanyu-l"},"content":"     * Retrieves the information on the format of the task to be saved.","lastModifiedDate":"2021-08-24"},{"lineNumber":173,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":174,"author":{"gitId":"wanyu-l"},"content":"     * @return the String representation of how the task will be saved","lastModifiedDate":"2021-08-24"},{"lineNumber":175,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":176,"author":{"gitId":"wanyu-l"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":177,"author":{"gitId":"wanyu-l"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2021-08-23"},{"lineNumber":178,"author":{"gitId":"wanyu-l"},"content":"        if (getStatus().equals(\"[ ]\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":179,"author":{"gitId":"wanyu-l"},"content":"            return \"D\" + \"|\" + getSimpleTaskDescription().strip() + \"|\" + this.dueDate + \"|\" + 0;","lastModifiedDate":"2021-09-04"},{"lineNumber":180,"author":{"gitId":"wanyu-l"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":181,"author":{"gitId":"wanyu-l"},"content":"            return \"D\" + \"|\" + getSimpleTaskDescription().strip() + \"|\" + this.dueDate + \"|\" + 1;","lastModifiedDate":"2021-09-04"},{"lineNumber":182,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":183,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":184,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wanyu-l":184}},{"path":"src/main/java/tasks/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"import java.time.Month;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":" * The EventTask Class inherits Task Class","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":" * to support different specificities of a task","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":" * as per input by user.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"public final class EventTask extends Task {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"    /** Stores the type of task information that identifies a EventTask */","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"    private final String taskType \u003d \"[E]\";","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"    /** Stores the date information of an Event task */","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"    private String date;","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"    /** Stores the date information as a LocalDate */","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"    private LocalDate localDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"    /** Stores the time information as a LocalTime */","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"    private LocalTime time;","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"     * Constructs an Event task and check if a date can be","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"     * stored as LocalDate. If so, save it, otherwise save","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"     * date as per user input.","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"     * @param description the input string to describe the Event task","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"     * @param date the date of the event","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wanyu-l"},"content":"    public EventTask(String description, String date) {","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"wanyu-l"},"content":"        super(description);","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"wanyu-l"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"wanyu-l"},"content":"        setDateAndTime(date);","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"wanyu-l"},"content":"    private void setDateAndTime(String userInput) {","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"wanyu-l"},"content":"        String dateAndTime \u003d \"[0-9]{1,2}[\\\\\\\\/][0-9]{1,2}[\\\\\\\\/][0-9]{4}\\\\s[0-9]{4}\";","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"wanyu-l"},"content":"        String dateOnly \u003d \"[0-9]{1,2}[\\\\\\\\/][0-9]{1,2}[\\\\\\\\/][0-9]{4}\";","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"wanyu-l"},"content":"        Pattern p \u003d Pattern.compile(dateAndTime);","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"wanyu-l"},"content":"        Matcher m \u003d p.matcher(userInput);","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"wanyu-l"},"content":"        String dateStr;","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"wanyu-l"},"content":"        String matched;","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"wanyu-l"},"content":"        if (m.find()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"wanyu-l"},"content":"            matched \u003d m.group();","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"wanyu-l"},"content":"            dateStr \u003d matched.substring(0, matched.length() - 4)","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"wanyu-l"},"content":"                    .replaceAll(\" \", \"\");","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"wanyu-l"},"content":"            try {","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"wanyu-l"},"content":"                String[] date \u003d dateStr.split(\"/\");","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"wanyu-l"},"content":"                int day \u003d Integer.parseInt(date[0]);","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"wanyu-l"},"content":"                int month \u003d Integer.parseInt(date[1]);","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"wanyu-l"},"content":"                int year \u003d Integer.parseInt(date[2]);","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"wanyu-l"},"content":"                setLocalDate(LocalDate.of(year, month, day));","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"wanyu-l"},"content":"                setTimeFromString(matched.substring(matched.length() - 4));","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"wanyu-l"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"wanyu-l"},"content":"                System.out.println(this.getClass() + \": invalid date\");","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"wanyu-l"},"content":"        } else {","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"wanyu-l"},"content":"            p \u003d Pattern.compile(dateOnly);","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"wanyu-l"},"content":"            m \u003d p.matcher(userInput);","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"wanyu-l"},"content":"            if (m.find()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"wanyu-l"},"content":"                dateStr \u003d m.group();","lastModifiedDate":"2021-09-06"},{"lineNumber":70,"author":{"gitId":"wanyu-l"},"content":"                try {","lastModifiedDate":"2021-09-06"},{"lineNumber":71,"author":{"gitId":"wanyu-l"},"content":"                    String[] date \u003d dateStr.split(\"/\");","lastModifiedDate":"2021-09-06"},{"lineNumber":72,"author":{"gitId":"wanyu-l"},"content":"                    int day \u003d Integer.parseInt(date[0]);","lastModifiedDate":"2021-09-06"},{"lineNumber":73,"author":{"gitId":"wanyu-l"},"content":"                    int month \u003d Integer.parseInt(date[1]);","lastModifiedDate":"2021-09-06"},{"lineNumber":74,"author":{"gitId":"wanyu-l"},"content":"                    int year \u003d Integer.parseInt(date[2]);","lastModifiedDate":"2021-09-06"},{"lineNumber":75,"author":{"gitId":"wanyu-l"},"content":"                    setLocalDate(LocalDate.of(year, month, day));","lastModifiedDate":"2021-09-15"},{"lineNumber":76,"author":{"gitId":"wanyu-l"},"content":"                } catch (DateTimeException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":77,"author":{"gitId":"wanyu-l"},"content":"                    System.out.println(this.getClass() + \": invalid date\");","lastModifiedDate":"2021-09-15"},{"lineNumber":78,"author":{"gitId":"wanyu-l"},"content":"                }","lastModifiedDate":"2021-09-15"},{"lineNumber":79,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":80,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":81,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":82,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":83,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":84,"author":{"gitId":"wanyu-l"},"content":"    private void setTimeFromString(String time) {","lastModifiedDate":"2021-09-15"},{"lineNumber":85,"author":{"gitId":"wanyu-l"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":86,"author":{"gitId":"wanyu-l"},"content":"            this.time \u003d LocalTime.of(Integer.parseInt(time.substring(0, 2)),","lastModifiedDate":"2021-09-15"},{"lineNumber":87,"author":{"gitId":"wanyu-l"},"content":"                    Integer.parseInt(time.substring(time.length() - 2)));","lastModifiedDate":"2021-09-15"},{"lineNumber":88,"author":{"gitId":"wanyu-l"},"content":"            if (localDate !\u003d null) {","lastModifiedDate":"2021-09-15"},{"lineNumber":89,"author":{"gitId":"wanyu-l"},"content":"                date +\u003d \" \" + this.time.toString().replaceAll(\":\", \"\");","lastModifiedDate":"2021-09-15"},{"lineNumber":90,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":91,"author":{"gitId":"wanyu-l"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":92,"author":{"gitId":"wanyu-l"},"content":"            this.time \u003d null;","lastModifiedDate":"2021-09-15"},{"lineNumber":93,"author":{"gitId":"wanyu-l"},"content":"            System.out.println(\"invalid time\" + e.getMessage());","lastModifiedDate":"2021-09-15"},{"lineNumber":94,"author":{"gitId":"wanyu-l"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":95,"author":{"gitId":"wanyu-l"},"content":"            this.time \u003d null;","lastModifiedDate":"2021-09-15"},{"lineNumber":96,"author":{"gitId":"wanyu-l"},"content":"            System.out.println(\"no time created\" + e.getMessage());","lastModifiedDate":"2021-09-15"},{"lineNumber":97,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":98,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":99,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":100,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":101,"author":{"gitId":"wanyu-l"},"content":"     * Sets the time as a valid time.","lastModifiedDate":"2021-09-15"},{"lineNumber":102,"author":{"gitId":"wanyu-l"},"content":"     * @param localTime the specific valid time to store","lastModifiedDate":"2021-09-15"},{"lineNumber":103,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":104,"author":{"gitId":"wanyu-l"},"content":"    public void setLocalTime(LocalTime localTime) {","lastModifiedDate":"2021-09-15"},{"lineNumber":105,"author":{"gitId":"wanyu-l"},"content":"        if (localTime !\u003d null) {","lastModifiedDate":"2021-09-15"},{"lineNumber":106,"author":{"gitId":"wanyu-l"},"content":"            this.time \u003d localTime;","lastModifiedDate":"2021-09-15"},{"lineNumber":107,"author":{"gitId":"wanyu-l"},"content":"            if (this.localDate !\u003d null) {","lastModifiedDate":"2021-09-15"},{"lineNumber":108,"author":{"gitId":"wanyu-l"},"content":"                date +\u003d \" \" + localTime.toString().replaceAll(\":\", \"\");","lastModifiedDate":"2021-09-15"},{"lineNumber":109,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"wanyu-l"},"content":"     * Retrieves the information of the type of task.","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"wanyu-l"},"content":"     * @return the String description of the type of task","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"wanyu-l"},"content":"    public String getType() {","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"wanyu-l"},"content":"        return this.taskType;","lastModifiedDate":"2021-08-30"},{"lineNumber":120,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":123,"author":{"gitId":"wanyu-l"},"content":"     * Sets the date as a valid date.","lastModifiedDate":"2021-09-07"},{"lineNumber":124,"author":{"gitId":"wanyu-l"},"content":"     * @param localDate the specific valid date to store","lastModifiedDate":"2021-09-07"},{"lineNumber":125,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":126,"author":{"gitId":"wanyu-l"},"content":"    public void setLocalDate(LocalDate localDate) {","lastModifiedDate":"2021-09-07"},{"lineNumber":127,"author":{"gitId":"wanyu-l"},"content":"        this.time \u003d null;","lastModifiedDate":"2021-09-15"},{"lineNumber":128,"author":{"gitId":"wanyu-l"},"content":"        this.localDate \u003d localDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"wanyu-l"},"content":"        this.date \u003d localDate.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":130,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":131,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":132,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":133,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"wanyu-l"},"content":"     * Retrieves the information on the date associated with task.","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"wanyu-l"},"content":"     * @return the date associated with task in as LocalDate","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"wanyu-l"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":139,"author":{"gitId":"wanyu-l"},"content":"    public LocalDate getLocalDate() {","lastModifiedDate":"2021-08-23"},{"lineNumber":140,"author":{"gitId":"wanyu-l"},"content":"        return this.localDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":141,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":142,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":143,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":144,"author":{"gitId":"wanyu-l"},"content":"     * Retrieves the description specific to the Event task","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"wanyu-l"},"content":"     * and use a LocalDate if available.","lastModifiedDate":"2021-08-24"},{"lineNumber":146,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":147,"author":{"gitId":"wanyu-l"},"content":"     * @return the description specific to the Event task","lastModifiedDate":"2021-08-24"},{"lineNumber":148,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":149,"author":{"gitId":"wanyu-l"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":150,"author":{"gitId":"wanyu-l"},"content":"    public String getDescription() {","lastModifiedDate":"2021-09-04"},{"lineNumber":151,"author":{"gitId":"wanyu-l"},"content":"        if (this.localDate \u003d\u003d null) {","lastModifiedDate":"2021-09-07"},{"lineNumber":152,"author":{"gitId":"wanyu-l"},"content":"            return super.getDescription() + \" \" + \"(at: \" + this.date + \")\";","lastModifiedDate":"2021-09-07"},{"lineNumber":153,"author":{"gitId":"wanyu-l"},"content":"        } else if (this.time \u003d\u003d null) {","lastModifiedDate":"2021-09-15"},{"lineNumber":154,"author":{"gitId":"wanyu-l"},"content":"            return super.getDescription() + \" \" + \"(at: \" + this.localDate.getDayOfMonth() + \" \"","lastModifiedDate":"2021-09-04"},{"lineNumber":155,"author":{"gitId":"wanyu-l"},"content":"                    + Month.of(this.localDate.getMonthValue()) + \" \" + this.localDate.getYear() + \")\";","lastModifiedDate":"2021-09-04"},{"lineNumber":156,"author":{"gitId":"wanyu-l"},"content":"        } else {","lastModifiedDate":"2021-09-15"},{"lineNumber":157,"author":{"gitId":"wanyu-l"},"content":"            return super.getDescription() + \" \" + \"(at: \" + this.localDate.getDayOfMonth() + \" \"","lastModifiedDate":"2021-09-15"},{"lineNumber":158,"author":{"gitId":"wanyu-l"},"content":"                    + Month.of(this.localDate.getMonthValue()) + \" \" + this.localDate.getYear()","lastModifiedDate":"2021-09-15"},{"lineNumber":159,"author":{"gitId":"wanyu-l"},"content":"                    + \" \" + time + \")\";","lastModifiedDate":"2021-09-15"},{"lineNumber":160,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":161,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":162,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":163,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":164,"author":{"gitId":"wanyu-l"},"content":"     * Retrieves the simple description of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":165,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":166,"author":{"gitId":"wanyu-l"},"content":"     * @return the simple description of the task","lastModifiedDate":"2021-08-24"},{"lineNumber":167,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":168,"author":{"gitId":"wanyu-l"},"content":"    public String getSimpleTaskDescription() {","lastModifiedDate":"2021-08-27"},{"lineNumber":169,"author":{"gitId":"wanyu-l"},"content":"        return super.getDescription();","lastModifiedDate":"2021-09-04"},{"lineNumber":170,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":171,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":172,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":173,"author":{"gitId":"wanyu-l"},"content":"     * Retrieves the information on the format of the task to be saved.","lastModifiedDate":"2021-08-24"},{"lineNumber":174,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":175,"author":{"gitId":"wanyu-l"},"content":"     * @return the String representation of how the task will be saved","lastModifiedDate":"2021-08-24"},{"lineNumber":176,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":177,"author":{"gitId":"wanyu-l"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":178,"author":{"gitId":"wanyu-l"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2021-08-23"},{"lineNumber":179,"author":{"gitId":"wanyu-l"},"content":"        if (getStatus().equals(\"[ ]\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":180,"author":{"gitId":"wanyu-l"},"content":"            return \"E\" + \"|\" + getSimpleTaskDescription().strip() + \"|\" + this.date + \"|\" + 0;","lastModifiedDate":"2021-09-04"},{"lineNumber":181,"author":{"gitId":"wanyu-l"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":182,"author":{"gitId":"wanyu-l"},"content":"            return \"E\" + \"|\" + getSimpleTaskDescription().strip() + \"|\" + this.date + \"|\" + 1;","lastModifiedDate":"2021-09-04"},{"lineNumber":183,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":184,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":185,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wanyu-l":185}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":" * The Task class implements the tasks to be tracked by the","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":" * Duke assistant.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":"public class Task {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":"    /** Description of the task */","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"    private final String task;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"    /** Status of the task */","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"    private String isDone;","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"     * Constructs a Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"     * @param description the input string to describe the task","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"    public Task(String description) {","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"        this.task \u003d description;","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"        this.isDone \u003d \"[ ]\";","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"     * Sets a task as complete by changing","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"     * the String representation and display a confirmation message.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"     * @return the message in response to the action","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"    public String setIsDone() {","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"        String result;","lastModifiedDate":"2021-09-12"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"        if (this.isDone.equals(\"[ ]\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wanyu-l"},"content":"            this.isDone \u003d \"[X]\";","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wanyu-l"},"content":"            result \u003d \"Well done! The task is completed!\";","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wanyu-l"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wanyu-l"},"content":"            result \u003d \"You have already completed this task before!\";","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wanyu-l"},"content":"        return \"     \" + result + \"\\n\" + \"     \" + getType() + isDone + \" \" + getDescription();","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"wanyu-l"},"content":"     * Marks a task as complete by changing","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"wanyu-l"},"content":"     * the String representation without displaying confirmation message.","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"wanyu-l"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"wanyu-l"},"content":"        this.isDone \u003d \"[X]\";","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"wanyu-l"},"content":"     * Retrieves the status of the task","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"wanyu-l"},"content":"     * whether it is complete or not.","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"wanyu-l"},"content":"     * @return the string representation of the task\u0027s state","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"wanyu-l"},"content":"    public String getStatus() {","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"wanyu-l"},"content":"        return this.isDone;","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"wanyu-l"},"content":"     * Retrieves the description of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"wanyu-l"},"content":"     * @return the String that is the description of the task","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"wanyu-l"},"content":"    public String getDescription() {","lastModifiedDate":"2021-09-04"},{"lineNumber":69,"author":{"gitId":"wanyu-l"},"content":"        return this.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"wanyu-l"},"content":"     * Retrieves the information of the type of task.","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"wanyu-l"},"content":"     * @return the String description of the type of task","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"wanyu-l"},"content":"    public String getType() {","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"wanyu-l"},"content":"        return \"regular\";","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"wanyu-l"},"content":"     * Retrieves the information on the format of the task to be saved.","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"wanyu-l"},"content":"     * @return the String representation of how the task will be saved","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"wanyu-l"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"wanyu-l"},"content":"        return \"regular\";","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"wanyu-l"},"content":"     * Retrieves the information on the date associated with task.","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"wanyu-l"},"content":"     * @return the date associated with task in as LocalDate if applicable","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"wanyu-l"},"content":"    public LocalDate getLocalDate() {","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"wanyu-l"},"content":"        return null;","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":99,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":100,"author":{"gitId":"wanyu-l"},"content":"     * Sets the date as a valid date.","lastModifiedDate":"2021-09-07"},{"lineNumber":101,"author":{"gitId":"wanyu-l"},"content":"     * @param localDate the specific valid date to store","lastModifiedDate":"2021-09-07"},{"lineNumber":102,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":103,"author":{"gitId":"wanyu-l"},"content":"    public void setLocalDate(LocalDate localDate) {}","lastModifiedDate":"2021-09-07"},{"lineNumber":104,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":105,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":106,"author":{"gitId":"wanyu-l"},"content":"     * Sets the time as a valid time.","lastModifiedDate":"2021-09-15"},{"lineNumber":107,"author":{"gitId":"wanyu-l"},"content":"     * @param localTime the specific valid time to store","lastModifiedDate":"2021-09-15"},{"lineNumber":108,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":109,"author":{"gitId":"wanyu-l"},"content":"    public void setLocalTime(LocalTime localTime) {}","lastModifiedDate":"2021-09-15"},{"lineNumber":110,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":111,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wanyu-l":111}},{"path":"src/main/java/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":"/**","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":" * The TaskList class stores the list of tasks.","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":" */","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"public final class TaskList {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"     * Constructs the TaskList object.","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"     * @param inputTasks the list of tasks to be stored","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"    public TaskList(ArrayList\u003cTask\u003e inputTasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"        this.tasks \u003d inputTasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"     * Gets the list of tasks stored.","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"     * @return the stored list of tasks","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"        return this.tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"     * Gets the String representation of the date/deadline as input by user.","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wanyu-l"},"content":"     * @param userInput the String array representation of the input by user","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"wanyu-l"},"content":"     * @return the concatenated String that is the date specified by user","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wanyu-l"},"content":"    public String filterInfo(ArrayList\u003cString\u003e userInput) {","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"wanyu-l"},"content":"        String temp \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wanyu-l"},"content":"        for (int i \u003d 1; i \u003c userInput.size(); i++) {","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"wanyu-l"},"content":"            if (!(userInput.get(i).equals(\"/at\") || userInput.get(i).equals(\"/by\"))","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"wanyu-l"},"content":"                    || userInput.get(0).equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"wanyu-l"},"content":"                temp +\u003d userInput.get(i) + \" \";","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"wanyu-l"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wanyu-l"},"content":"                break;","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"wanyu-l"},"content":"        return temp;","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"wanyu-l"},"content":"     * Identifies the start of String representation of date of Event","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"wanyu-l"},"content":"     * by finding the \"/at\" expression.","lastModifiedDate":"2021-09-04"},{"lineNumber":56,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"wanyu-l"},"content":"     * @param userInput the String array representation of the input by user","lastModifiedDate":"2021-09-04"},{"lineNumber":58,"author":{"gitId":"wanyu-l"},"content":"     * @return the String representation of the date by passing it to method","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"wanyu-l"},"content":"     * getDate which requires a starting index as an argument","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"wanyu-l"},"content":"     * @throws DukeException thrown when encountering a String Array without","lastModifiedDate":"2021-09-04"},{"lineNumber":61,"author":{"gitId":"wanyu-l"},"content":"     * the presence of \"/at\" expression, which is not a valid input for Event","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"wanyu-l"},"content":"    public String getEventDay(ArrayList\u003cString\u003e userInput) throws DukeException {","lastModifiedDate":"2021-09-04"},{"lineNumber":64,"author":{"gitId":"wanyu-l"},"content":"        for (int i \u003d 2; i \u003c userInput.size(); i++) {","lastModifiedDate":"2021-09-04"},{"lineNumber":65,"author":{"gitId":"wanyu-l"},"content":"            if (userInput.get(i).equals(\"/at\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":66,"author":{"gitId":"wanyu-l"},"content":"                if (i + 1 \u003e\u003d userInput.size()) {","lastModifiedDate":"2021-09-04"},{"lineNumber":67,"author":{"gitId":"wanyu-l"},"content":"                    throw new DukeException(\"Oh no, date is missing :(\");","lastModifiedDate":"2021-09-04"},{"lineNumber":68,"author":{"gitId":"wanyu-l"},"content":"                } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"wanyu-l"},"content":"                    return getDate(userInput, i + 1);","lastModifiedDate":"2021-09-04"},{"lineNumber":70,"author":{"gitId":"wanyu-l"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"wanyu-l"},"content":"        throw new DukeException(\"event\");","lastModifiedDate":"2021-09-04"},{"lineNumber":74,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"wanyu-l"},"content":"     * Identifies the start of String representation of date for Deadline","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"wanyu-l"},"content":"     * by finding the \"/by\" expression.","lastModifiedDate":"2021-09-04"},{"lineNumber":79,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"wanyu-l"},"content":"     * @param userInput the String array representation of the input by user","lastModifiedDate":"2021-09-04"},{"lineNumber":81,"author":{"gitId":"wanyu-l"},"content":"     * @return the String representation of the date by passing it to method","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"wanyu-l"},"content":"     * getDate which requires a starting index as an argument","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"wanyu-l"},"content":"     * @throws DukeException thrown when encountering a String Array without","lastModifiedDate":"2021-09-04"},{"lineNumber":84,"author":{"gitId":"wanyu-l"},"content":"     * the presence of \"/by\" expression, which is not a valid input for Deadline","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"wanyu-l"},"content":"    public String getDeadline(ArrayList\u003cString\u003e userInput) throws DukeException {","lastModifiedDate":"2021-09-04"},{"lineNumber":87,"author":{"gitId":"wanyu-l"},"content":"        for (int i \u003d 2; i \u003c userInput.size(); i++) {","lastModifiedDate":"2021-09-04"},{"lineNumber":88,"author":{"gitId":"wanyu-l"},"content":"            if (userInput.get(i).equals(\"/by\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":89,"author":{"gitId":"wanyu-l"},"content":"                if (i + 1 \u003e\u003d userInput.size()) {","lastModifiedDate":"2021-09-04"},{"lineNumber":90,"author":{"gitId":"wanyu-l"},"content":"                    throw new DukeException(\"Uh oh, deadline is missing :(\");","lastModifiedDate":"2021-09-04"},{"lineNumber":91,"author":{"gitId":"wanyu-l"},"content":"                } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"wanyu-l"},"content":"                    return getDate(userInput, i + 1);","lastModifiedDate":"2021-09-04"},{"lineNumber":93,"author":{"gitId":"wanyu-l"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"wanyu-l"},"content":"        throw new DukeException(\"deadline\");","lastModifiedDate":"2021-09-04"},{"lineNumber":97,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"wanyu-l"},"content":"     * Creates a String representation of date by","lastModifiedDate":"2021-08-27"},{"lineNumber":101,"author":{"gitId":"wanyu-l"},"content":"     * concatenating a String from the starting index to the last index.","lastModifiedDate":"2021-09-04"},{"lineNumber":102,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"wanyu-l"},"content":"     * @param userInput the String array representation of the input by user","lastModifiedDate":"2021-09-04"},{"lineNumber":104,"author":{"gitId":"wanyu-l"},"content":"     * @param start the starting index","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"wanyu-l"},"content":"     * @return String representation of date as input by user","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"wanyu-l"},"content":"    public String getDate(ArrayList\u003cString\u003e userInput, int start) {","lastModifiedDate":"2021-09-04"},{"lineNumber":108,"author":{"gitId":"wanyu-l"},"content":"        String temp \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"wanyu-l"},"content":"        for (int i \u003d start; i \u003c userInput.size(); i++) {","lastModifiedDate":"2021-09-04"},{"lineNumber":110,"author":{"gitId":"wanyu-l"},"content":"            if (i + 1 \u003c userInput.size()) {","lastModifiedDate":"2021-09-04"},{"lineNumber":111,"author":{"gitId":"wanyu-l"},"content":"                temp +\u003d userInput.get(i) + \" \";","lastModifiedDate":"2021-09-04"},{"lineNumber":112,"author":{"gitId":"wanyu-l"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"wanyu-l"},"content":"                temp +\u003d userInput.get(i);","lastModifiedDate":"2021-09-04"},{"lineNumber":114,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"wanyu-l"},"content":"        return temp;","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"wanyu-l"},"content":"     * Adds tasks to the stored list of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":121,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"wanyu-l"},"content":"     * @param task the task to be added","lastModifiedDate":"2021-09-04"},{"lineNumber":123,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"wanyu-l"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2021-09-04"},{"lineNumber":125,"author":{"gitId":"wanyu-l"},"content":"        assert (task instanceof DeadLineTask) || (","lastModifiedDate":"2021-09-06"},{"lineNumber":126,"author":{"gitId":"wanyu-l"},"content":"                task instanceof EventTask) || (task instanceof ToDoTask) : \"incorrect task created\";","lastModifiedDate":"2021-09-06"},{"lineNumber":127,"author":{"gitId":"wanyu-l"},"content":"        if (tasks \u003d\u003d null) {","lastModifiedDate":"2021-08-23"},{"lineNumber":128,"author":{"gitId":"wanyu-l"},"content":"            tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":130,"author":{"gitId":"wanyu-l"},"content":"        tasks.add(task);","lastModifiedDate":"2021-09-04"},{"lineNumber":131,"author":{"gitId":"wanyu-l"},"content":"        return \"     Successfully added:\\n\" + \"     \" + task.getType() + task.getStatus() + \" \" + task.getDescription();","lastModifiedDate":"2021-09-04"},{"lineNumber":132,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":133,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"wanyu-l"},"content":"     * Displays the entire list of tasks sequentially.","lastModifiedDate":"2021-09-04"},{"lineNumber":136,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":137,"author":{"gitId":"wanyu-l"},"content":"    public String getList() {","lastModifiedDate":"2021-08-30"},{"lineNumber":138,"author":{"gitId":"wanyu-l"},"content":"        if (tasks !\u003d null \u0026\u0026 !tasks.isEmpty()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":139,"author":{"gitId":"wanyu-l"},"content":"            String temp \u003d \"     The current list has these items:\\n\";","lastModifiedDate":"2021-08-23"},{"lineNumber":140,"author":{"gitId":"wanyu-l"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":141,"author":{"gitId":"wanyu-l"},"content":"                temp +\u003d \"     \" + (i + 1) + \".\" + tasks.get(i).getType() + tasks.get(i).getStatus() + \" \"","lastModifiedDate":"2021-08-23"},{"lineNumber":142,"author":{"gitId":"wanyu-l"},"content":"                        + tasks.get(i).getDescription() + \"\\n\";","lastModifiedDate":"2021-09-04"},{"lineNumber":143,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":144,"author":{"gitId":"wanyu-l"},"content":"            return temp + \"\\n\" + \"     There are \" + tasks.size() + \" task(s) now, keep up!\";","lastModifiedDate":"2021-08-30"},{"lineNumber":145,"author":{"gitId":"wanyu-l"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":146,"author":{"gitId":"wanyu-l"},"content":"            return \"     There are no items in your list, keep adding them!\";","lastModifiedDate":"2021-08-30"},{"lineNumber":147,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":148,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":149,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":150,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":151,"author":{"gitId":"wanyu-l"},"content":"     * Deletes a task from the list.","lastModifiedDate":"2021-09-04"},{"lineNumber":152,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":153,"author":{"gitId":"wanyu-l"},"content":"     * @param index the index of task to be deleted","lastModifiedDate":"2021-09-04"},{"lineNumber":154,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":155,"author":{"gitId":"wanyu-l"},"content":"    public String deleteTask(int index) {","lastModifiedDate":"2021-09-04"},{"lineNumber":156,"author":{"gitId":"wanyu-l"},"content":"        Task task \u003d tasks.remove(index);","lastModifiedDate":"2021-09-04"},{"lineNumber":157,"author":{"gitId":"wanyu-l"},"content":"        return \"     Noted, the following task has been deleted: \\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":158,"author":{"gitId":"wanyu-l"},"content":"                + \"     \" + task.getType() + task.getStatus() + \" \" + task.getDescription() + \"\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":159,"author":{"gitId":"wanyu-l"},"content":"                + \"     Nice! there are \" + tasks.size() + \" task(s) left.\";","lastModifiedDate":"2021-08-30"},{"lineNumber":160,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":161,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":162,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":163,"author":{"gitId":"wanyu-l"},"content":"     * Checks if any tasks are due on a particular day.","lastModifiedDate":"2021-08-24"},{"lineNumber":164,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":165,"author":{"gitId":"wanyu-l"},"content":"     * @param date the date which user wants to check","lastModifiedDate":"2021-09-12"},{"lineNumber":166,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":167,"author":{"gitId":"wanyu-l"},"content":"    public ArrayList\u003cTask\u003e findTasksDue(LocalDate date) {","lastModifiedDate":"2021-09-12"},{"lineNumber":168,"author":{"gitId":"wanyu-l"},"content":"        ArrayList\u003cTask\u003e excludeIrrelevantTasks \u003d (ArrayList\u003cTask\u003e) tasks.stream()","lastModifiedDate":"2021-09-06"},{"lineNumber":169,"author":{"gitId":"wanyu-l"},"content":"                .filter(task -\u003e task.getLocalDate() !\u003d null).collect(Collectors.toList());","lastModifiedDate":"2021-09-06"},{"lineNumber":170,"author":{"gitId":"wanyu-l"},"content":"        return (ArrayList\u003cTask\u003e) excludeIrrelevantTasks.stream().filter(","lastModifiedDate":"2021-09-05"},{"lineNumber":171,"author":{"gitId":"wanyu-l"},"content":"            task -\u003e task.getLocalDate().equals(date)).collect(Collectors.toList());","lastModifiedDate":"2021-09-12"},{"lineNumber":172,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":173,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":174,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":175,"author":{"gitId":"wanyu-l"},"content":"     * Finds tasks according to keywords.","lastModifiedDate":"2021-08-27"},{"lineNumber":176,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":177,"author":{"gitId":"wanyu-l"},"content":"     * @param target the keywords as per input by user","lastModifiedDate":"2021-08-27"},{"lineNumber":178,"author":{"gitId":"wanyu-l"},"content":"     * @return list containing all tasks that match input keywords","lastModifiedDate":"2021-08-27"},{"lineNumber":179,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":180,"author":{"gitId":"wanyu-l"},"content":"    public ArrayList\u003cTask\u003e findTask(String target) {","lastModifiedDate":"2021-08-27"},{"lineNumber":181,"author":{"gitId":"wanyu-l"},"content":"        return (ArrayList\u003cTask\u003e) tasks.stream().filter(","lastModifiedDate":"2021-09-04"},{"lineNumber":182,"author":{"gitId":"wanyu-l"},"content":"            task -\u003e task.getDescription().toLowerCase().contains(target.toLowerCase())).collect(Collectors.toList());","lastModifiedDate":"2021-09-06"},{"lineNumber":183,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":184,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":185,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":186,"author":{"gitId":"wanyu-l"},"content":"     * Changes the date of a task to another, specific date.","lastModifiedDate":"2021-09-07"},{"lineNumber":187,"author":{"gitId":"wanyu-l"},"content":"     * @param localDate date to change to","lastModifiedDate":"2021-09-07"},{"lineNumber":188,"author":{"gitId":"wanyu-l"},"content":"     * @param localTime time to change to","lastModifiedDate":"2021-09-15"},{"lineNumber":189,"author":{"gitId":"wanyu-l"},"content":"     * @param index index of task in stored list","lastModifiedDate":"2021-09-07"},{"lineNumber":190,"author":{"gitId":"wanyu-l"},"content":"     * @return result of reschedule attempt, successful or otherwise","lastModifiedDate":"2021-09-07"},{"lineNumber":191,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":192,"author":{"gitId":"wanyu-l"},"content":"    public String reschedule(LocalDate localDate, LocalTime localTime, int index) {","lastModifiedDate":"2021-09-15"},{"lineNumber":193,"author":{"gitId":"wanyu-l"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-09-07"},{"lineNumber":194,"author":{"gitId":"wanyu-l"},"content":"            return \"     Please use a valid index!\\n\"","lastModifiedDate":"2021-09-12"},{"lineNumber":195,"author":{"gitId":"wanyu-l"},"content":"                    + \"     Note: \u0027list\u0027 can be used to see the current tasks.\";","lastModifiedDate":"2021-09-12"},{"lineNumber":196,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":197,"author":{"gitId":"wanyu-l"},"content":"        if (tasks.get(index) instanceof ToDoTask) {","lastModifiedDate":"2021-09-07"},{"lineNumber":198,"author":{"gitId":"wanyu-l"},"content":"            return \"     I cannot reschedule a todo Task!\";","lastModifiedDate":"2021-09-07"},{"lineNumber":199,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":200,"author":{"gitId":"wanyu-l"},"content":"        String previous \u003d tasks.get(index).getType() + tasks.get(index).getStatus() + \" \"","lastModifiedDate":"2021-09-07"},{"lineNumber":201,"author":{"gitId":"wanyu-l"},"content":"                + tasks.get(index).getDescription();","lastModifiedDate":"2021-09-07"},{"lineNumber":202,"author":{"gitId":"wanyu-l"},"content":"        tasks.get(index).setLocalDate(localDate);","lastModifiedDate":"2021-09-07"},{"lineNumber":203,"author":{"gitId":"wanyu-l"},"content":"        tasks.get(index).setLocalTime(localTime);","lastModifiedDate":"2021-09-15"},{"lineNumber":204,"author":{"gitId":"wanyu-l"},"content":"        return \"     Noted, the following task have been rescheduled:\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":205,"author":{"gitId":"wanyu-l"},"content":"                + \"     From \" + previous + \"\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":206,"author":{"gitId":"wanyu-l"},"content":"                + \"     To \" + tasks.get(index).getType() + tasks.get(index).getStatus() + \" \"","lastModifiedDate":"2021-09-07"},{"lineNumber":207,"author":{"gitId":"wanyu-l"},"content":"                + tasks.get(index).getDescription();","lastModifiedDate":"2021-09-07"},{"lineNumber":208,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":209,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wanyu-l":209}},{"path":"src/main/java/tasks/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":" * The DeadlineTask Class inherits Task Class","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":" * to support different specificities of a task","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":" * as per input by user.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"public final class ToDoTask extends Task {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":"    /** Stores the type of task information that identifies a ToDoTask */","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":"    private final String taskType \u003d \"[T]\";","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"     * Constructs a ToDoTask.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"     * @param description the input string to describe the task","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"    public ToDoTask(String description) {","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"        super(description);","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"     * Retrieves the information of the type of task.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"     * @return the String description of the type of task","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"    public String getType() {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"        return this.taskType;","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"     * Retrieves the information on the format of the task to be saved.","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"     * @return the String representation of how the task will be saved","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"wanyu-l"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wanyu-l"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wanyu-l"},"content":"        if (getStatus().equals(\"[ ]\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"wanyu-l"},"content":"            return \"T\" + \"|\" + getDescription().strip() + \"|\" + 0;","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"wanyu-l"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wanyu-l"},"content":"            return \"T\" + \"|\" + getDescription().strip() + \"|\" + 1;","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wanyu-l":47}},{"path":"src/main/java/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"//@@author wanyu-l-reused","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"//Reused from https://se-education.org/guides/tutorials/javaFxPart4.html","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"// with minor modifications","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public final class DialogBox extends HBox {","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Circle displayPicture;","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label text;","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Constructs a ui.DialogBox object.","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param text the input by user or output by user wrapped by Label","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private DialogBox(String text, Image img, Color imageBorder, Color backgroundColor) {","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            fxmlLoader.load(getClass().getResourceAsStream(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        displayPicture.setFill(new ImagePattern(img));","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        displayPicture.setStroke(imageBorder);","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.setBackground(new Background(new BackgroundFill(backgroundColor, new CornerRadii(20.0),","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                new Insets(5.0))));","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void flip() {","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Gets a dialog box representing the user in the conversation.","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param text message to be shown as user\u0027s query","lastModifiedDate":"2021-09-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @return a dialog box representing the user","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new DialogBox(text + \"    \", img, Color.BISQUE, Color.LIGHTBLUE);","lastModifiedDate":"2021-09-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Gets a dialog box representing the Duke in the conversation.","lastModifiedDate":"2021-09-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * @param text message to be shown as Duke\u0027s answer","lastModifiedDate":"2021-09-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @return a dialog box representing Duke","lastModifiedDate":"2021-09-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        var db \u003d new DialogBox(text, img, Color.LIGHTCORAL, Color.DARKSEAGREEN);","lastModifiedDate":"2021-09-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        db.flip();","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return db;","lastModifiedDate":"2021-08-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"wanyu-l":22,"-":60}},{"path":"src/main/java/ui/DukeApp.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":" * The DukeApp class is a workaround to access Storage, TaskList, Ui and UserPrompts.","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":"final class DukeApp {","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":"    private final TaskList list;","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":"    private final Ui ui;","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"    private final Storage storage;","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"    private final UserPrompts userPrompts;","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"     * Constructs a DukeApp object.","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"    public DukeApp() {","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"            storage.createFiles();","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"            System.out.println(\"something went wrong: \"","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"                            + e.getMessage() + \"\\n\" + \"     exiting program...\");","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"            System.exit(0);","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"        list \u003d new TaskList(storage.loadSaves());","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"        userPrompts \u003d new UserPrompts();","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"     * Retrieves an instance of Ui object.","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"     * @return an ui object","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"wanyu-l"},"content":"    public Ui getUi() {","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"wanyu-l"},"content":"        return ui;","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"wanyu-l"},"content":"     * Retrieves an instance of TaskList object.","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"wanyu-l"},"content":"     * @return a TaskList object","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"wanyu-l"},"content":"    public TaskList getLst() {","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"wanyu-l"},"content":"        return list;","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"wanyu-l"},"content":"     * Retrieves an instance of storage object.","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"wanyu-l"},"content":"     * @return a storage object","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"wanyu-l"},"content":"    public Storage getStorage() {","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"wanyu-l"},"content":"        return storage;","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"wanyu-l"},"content":"     * Retrieves an instance of UserPrompts object.","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"wanyu-l"},"content":"     * @return a userPrompts object","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"wanyu-l"},"content":"    public UserPrompts getUserPrompts() {","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"wanyu-l"},"content":"        return userPrompts;","lastModifiedDate":"2021-09-11"},{"lineNumber":63,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"wanyu-l":64}},{"path":"src/main/java/ui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":" * A class for easier usage of the Main class.","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"public final class Launcher {","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":"        new Launcher().launch();","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"     * Launches the GUI for Duke implemented in Main and other classes.","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"    public void launch() {","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"        Application.launch(Main.class, \"\");","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"wanyu-l":20}},{"path":"src/main/java/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package ui;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"/**","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":" */","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"public final class Main extends Application {","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"    private Image icon;","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"        initializeIcon();","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"        try {","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"            InputStream inputStream \u003d getClass().getResourceAsStream(\"/view/MainWindow.fxml\");","lastModifiedDate":"2021-09-12"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"            AnchorPane ap \u003d fxmlLoader.load(inputStream);","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"            stage.setResizable(false);","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"            stage.setTitle(\"Memo-Assistant Duke\");","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"            stage.getIcons().add(icon);","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setStage(stage);","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"            stage.show();","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"wanyu-l"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"wanyu-l"},"content":"    private void initializeIcon() {","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"wanyu-l"},"content":"        InputStream dukeMascot \u003d getClass().getResourceAsStream(\"/images/DukeMascot.png\");","lastModifiedDate":"2021-09-12"},{"lineNumber":43,"author":{"gitId":"wanyu-l"},"content":"        icon \u003d new Image(dukeMascot);","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"wanyu-l":45}},{"path":"src/main/java/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package ui;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"import commands.Command;","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":"import commands.DueCommand;","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":"import commands.RescheduleCommand;","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"import parser.Parser;","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"//@@author wanyu-l-reused","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"//Reused from https://se-education.org/guides/tutorials/javaFxPart4.html","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"// with minor modifications","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public final class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final DukeApp duke \u003d new DukeApp();","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Stage stage;","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Image userImage;","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Image dukeImage;","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Image icon;","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private void initialize() {","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        userImage \u003d new Image(getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        dukeImage \u003d new Image(getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        icon \u003d new Image(getClass().getResourceAsStream(\"/images/DukeMascot.png\"));","lastModifiedDate":"2021-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        //@@author","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"wanyu-l"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(new Ui().getWelcomeMessage(), dukeImage));","lastModifiedDate":"2021-09-12"},{"lineNumber":57,"author":{"gitId":"wanyu-l"},"content":"        checkAnyDueToday();","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    //@@author wanyu-l-reused","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    //Reused from https://se-education.org/guides/tutorials/javaFxPart4.html","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    // with minor modifications","lastModifiedDate":"2021-09-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-09-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String inputText \u003d userInput.getText();","lastModifiedDate":"2021-09-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Command c \u003d new Parser().parse(inputText);","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (c !\u003d null \u0026\u0026 c.isExit()) {","lastModifiedDate":"2021-09-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            duke.getUserPrompts().showExitMessage(icon);","lastModifiedDate":"2021-09-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            terminateSession();","lastModifiedDate":"2021-09-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (c !\u003d null) {","lastModifiedDate":"2021-09-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            String executeResult \u003d c.execute(duke.getLst(), duke.getUi(), duke.getStorage());","lastModifiedDate":"2021-09-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            String dukeText \u003d getResponse(executeResult);","lastModifiedDate":"2021-09-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                    DialogBox.getUserDialog(inputText, userImage),","lastModifiedDate":"2021-09-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                    DialogBox.getDukeDialog(dukeText, dukeImage));","lastModifiedDate":"2021-09-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2021-09-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            dialogContainer.getChildren().addAll(DialogBox.getUserDialog(inputText, userImage),","lastModifiedDate":"2021-09-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                    DialogBox.getDukeDialog(new Ui().getHelperMessage(), dukeImage));","lastModifiedDate":"2021-09-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2021-09-11"},{"lineNumber":84,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":85,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":86,"author":{"gitId":"wanyu-l"},"content":"     * Sets the stage as a class field for this instance of MainWindow.","lastModifiedDate":"2021-09-11"},{"lineNumber":87,"author":{"gitId":"wanyu-l"},"content":"     * @param stage the input Stage","lastModifiedDate":"2021-09-11"},{"lineNumber":88,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":89,"author":{"gitId":"wanyu-l"},"content":"    public void setStage(Stage stage) {","lastModifiedDate":"2021-09-11"},{"lineNumber":90,"author":{"gitId":"wanyu-l"},"content":"        this.stage \u003d stage;","lastModifiedDate":"2021-09-11"},{"lineNumber":91,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":92,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":93,"author":{"gitId":"wanyu-l"},"content":"    private void checkAnyDueToday() {","lastModifiedDate":"2021-09-11"},{"lineNumber":94,"author":{"gitId":"wanyu-l"},"content":"        ArrayList\u003cString\u003e checkForDue \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-11"},{"lineNumber":95,"author":{"gitId":"wanyu-l"},"content":"        String today \u003d LocalDateTime.now().format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2021-09-11"},{"lineNumber":96,"author":{"gitId":"wanyu-l"},"content":"        checkForDue.add(\"due\");","lastModifiedDate":"2021-09-11"},{"lineNumber":97,"author":{"gitId":"wanyu-l"},"content":"        checkForDue.add(today);","lastModifiedDate":"2021-09-11"},{"lineNumber":98,"author":{"gitId":"wanyu-l"},"content":"        String tasksDue \u003d new DueCommand(checkForDue).execute(duke.getLst(), duke.getUi(), duke.getStorage());","lastModifiedDate":"2021-09-11"},{"lineNumber":99,"author":{"gitId":"wanyu-l"},"content":"        if (!tasksDue.equals(\"     No task due!\")) {","lastModifiedDate":"2021-09-12"},{"lineNumber":100,"author":{"gitId":"wanyu-l"},"content":"            getDueTasksMessage(tasksDue);","lastModifiedDate":"2021-09-11"},{"lineNumber":101,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":102,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":103,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":104,"author":{"gitId":"wanyu-l"},"content":"    private void getDueTasksMessage(String tasksDueToday) {","lastModifiedDate":"2021-09-11"},{"lineNumber":105,"author":{"gitId":"wanyu-l"},"content":"        if (tasksDueToday.lines().count() \u003c 5) {","lastModifiedDate":"2021-09-11"},{"lineNumber":106,"author":{"gitId":"wanyu-l"},"content":"            showDueTasks(tasksDueToday);","lastModifiedDate":"2021-09-11"},{"lineNumber":107,"author":{"gitId":"wanyu-l"},"content":"        } else {","lastModifiedDate":"2021-09-11"},{"lineNumber":108,"author":{"gitId":"wanyu-l"},"content":"            ArrayList\u003cString\u003e firstFive \u003d (ArrayList\u003cString\u003e) tasksDueToday.lines()","lastModifiedDate":"2021-09-11"},{"lineNumber":109,"author":{"gitId":"wanyu-l"},"content":"                    .limit(5).collect(Collectors.toList());","lastModifiedDate":"2021-09-11"},{"lineNumber":110,"author":{"gitId":"wanyu-l"},"content":"            String truncatedMessage \u003d \"\";","lastModifiedDate":"2021-09-11"},{"lineNumber":111,"author":{"gitId":"wanyu-l"},"content":"            for (String s : firstFive) {","lastModifiedDate":"2021-09-11"},{"lineNumber":112,"author":{"gitId":"wanyu-l"},"content":"                truncatedMessage +\u003d s + \"\\n\";","lastModifiedDate":"2021-09-11"},{"lineNumber":113,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-09-11"},{"lineNumber":114,"author":{"gitId":"wanyu-l"},"content":"            truncatedMessage +\u003d \"     ...\\n\" + \"     For full output, please click confirm and use Due command.\";","lastModifiedDate":"2021-09-11"},{"lineNumber":115,"author":{"gitId":"wanyu-l"},"content":"            showDueTasks(truncatedMessage);","lastModifiedDate":"2021-09-11"},{"lineNumber":116,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":117,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":118,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":119,"author":{"gitId":"wanyu-l"},"content":"    private void showDueTasks(String tasksFound) {","lastModifiedDate":"2021-09-11"},{"lineNumber":120,"author":{"gitId":"wanyu-l"},"content":"        Stage exitWindow \u003d new Stage();","lastModifiedDate":"2021-09-11"},{"lineNumber":121,"author":{"gitId":"wanyu-l"},"content":"        exitWindow.setTitle(\"There are task(s) due today!\");","lastModifiedDate":"2021-09-11"},{"lineNumber":122,"author":{"gitId":"wanyu-l"},"content":"        exitWindow.setWidth(400);","lastModifiedDate":"2021-09-11"},{"lineNumber":123,"author":{"gitId":"wanyu-l"},"content":"        exitWindow.setHeight(220);","lastModifiedDate":"2021-09-11"},{"lineNumber":124,"author":{"gitId":"wanyu-l"},"content":"        exitWindow.setResizable(false);","lastModifiedDate":"2021-09-11"},{"lineNumber":125,"author":{"gitId":"wanyu-l"},"content":"        exitWindow.setAlwaysOnTop(false);","lastModifiedDate":"2021-09-11"},{"lineNumber":126,"author":{"gitId":"wanyu-l"},"content":"        exitWindow.getIcons().add(icon);","lastModifiedDate":"2021-09-11"},{"lineNumber":127,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":128,"author":{"gitId":"wanyu-l"},"content":"        Label tasksDue \u003d new Label(tasksFound);","lastModifiedDate":"2021-09-11"},{"lineNumber":129,"author":{"gitId":"wanyu-l"},"content":"        Button snooze \u003d new Button(\"Snooze\");","lastModifiedDate":"2021-09-11"},{"lineNumber":130,"author":{"gitId":"wanyu-l"},"content":"        Button confirm \u003d new Button(\"Confirm\");","lastModifiedDate":"2021-09-11"},{"lineNumber":131,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":132,"author":{"gitId":"wanyu-l"},"content":"        HBox userChoice \u003d new HBox(snooze, confirm);","lastModifiedDate":"2021-09-11"},{"lineNumber":133,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":134,"author":{"gitId":"wanyu-l"},"content":"        confirm.setOnAction(event -\u003e exitWindow.close());","lastModifiedDate":"2021-09-11"},{"lineNumber":135,"author":{"gitId":"wanyu-l"},"content":"        snooze.setOnAction(event -\u003e {","lastModifiedDate":"2021-09-11"},{"lineNumber":136,"author":{"gitId":"wanyu-l"},"content":"            snooze();","lastModifiedDate":"2021-09-11"},{"lineNumber":137,"author":{"gitId":"wanyu-l"},"content":"            exitWindow.close();","lastModifiedDate":"2021-09-11"},{"lineNumber":138,"author":{"gitId":"wanyu-l"},"content":"        });","lastModifiedDate":"2021-09-11"},{"lineNumber":139,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":140,"author":{"gitId":"wanyu-l"},"content":"        VBox information \u003d new VBox(10);","lastModifiedDate":"2021-09-11"},{"lineNumber":141,"author":{"gitId":"wanyu-l"},"content":"        information.setFillWidth(true);","lastModifiedDate":"2021-09-11"},{"lineNumber":142,"author":{"gitId":"wanyu-l"},"content":"        information.getChildren().add(tasksDue);","lastModifiedDate":"2021-09-11"},{"lineNumber":143,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":144,"author":{"gitId":"wanyu-l"},"content":"        AnchorPane anchorPane \u003d new AnchorPane();","lastModifiedDate":"2021-09-11"},{"lineNumber":145,"author":{"gitId":"wanyu-l"},"content":"        anchorPane.getChildren().addAll(information, userChoice);","lastModifiedDate":"2021-09-11"},{"lineNumber":146,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":147,"author":{"gitId":"wanyu-l"},"content":"        AnchorPane.setBottomAnchor(userChoice, 30.0);","lastModifiedDate":"2021-09-11"},{"lineNumber":148,"author":{"gitId":"wanyu-l"},"content":"        AnchorPane.setLeftAnchor(userChoice, 135.0);","lastModifiedDate":"2021-09-11"},{"lineNumber":149,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":150,"author":{"gitId":"wanyu-l"},"content":"        Scene exitScene \u003d new Scene(anchorPane);","lastModifiedDate":"2021-09-11"},{"lineNumber":151,"author":{"gitId":"wanyu-l"},"content":"        exitWindow.setScene(exitScene);","lastModifiedDate":"2021-09-11"},{"lineNumber":152,"author":{"gitId":"wanyu-l"},"content":"        exitWindow.showAndWait();","lastModifiedDate":"2021-09-11"},{"lineNumber":153,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":154,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":155,"author":{"gitId":"wanyu-l"},"content":"    private void snooze() {","lastModifiedDate":"2021-09-11"},{"lineNumber":156,"author":{"gitId":"wanyu-l"},"content":"        for (int i \u003d 0; i \u003c duke.getLst().getTasks().size(); i++) {","lastModifiedDate":"2021-09-11"},{"lineNumber":157,"author":{"gitId":"wanyu-l"},"content":"            boolean hasLocalDate \u003d duke.getLst().getTasks().get(i).getLocalDate() !\u003d null;","lastModifiedDate":"2021-09-11"},{"lineNumber":158,"author":{"gitId":"wanyu-l"},"content":"            if (hasLocalDate \u0026\u0026 duke.getLst().getTasks().get(i).getLocalDate().equals(LocalDate.now())) {","lastModifiedDate":"2021-09-11"},{"lineNumber":159,"author":{"gitId":"wanyu-l"},"content":"                ArrayList\u003cString\u003e toSnooze \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-11"},{"lineNumber":160,"author":{"gitId":"wanyu-l"},"content":"                toSnooze.add(\"reschedule\");","lastModifiedDate":"2021-09-11"},{"lineNumber":161,"author":{"gitId":"wanyu-l"},"content":"                toSnooze.add(String.valueOf(i + 1));","lastModifiedDate":"2021-09-11"},{"lineNumber":162,"author":{"gitId":"wanyu-l"},"content":"                toSnooze.add(getTomorrow());","lastModifiedDate":"2021-09-11"},{"lineNumber":163,"author":{"gitId":"wanyu-l"},"content":"                String result \u003d new RescheduleCommand(toSnooze).execute(duke.getLst(),","lastModifiedDate":"2021-09-11"},{"lineNumber":164,"author":{"gitId":"wanyu-l"},"content":"                        duke.getUi(), duke.getStorage());","lastModifiedDate":"2021-09-11"},{"lineNumber":165,"author":{"gitId":"wanyu-l"},"content":"                dialogContainer.getChildren().add(DialogBox.getDukeDialog(result, dukeImage));","lastModifiedDate":"2021-09-11"},{"lineNumber":166,"author":{"gitId":"wanyu-l"},"content":"            }","lastModifiedDate":"2021-09-11"},{"lineNumber":167,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":168,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":169,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":170,"author":{"gitId":"wanyu-l"},"content":"    private String getTomorrow() {","lastModifiedDate":"2021-09-11"},{"lineNumber":171,"author":{"gitId":"wanyu-l"},"content":"        return LocalDateTime.now().plusDays(1).format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2021-09-11"},{"lineNumber":172,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":173,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":174,"author":{"gitId":"wanyu-l"},"content":"    private String getResponse(String input) {","lastModifiedDate":"2021-09-11"},{"lineNumber":175,"author":{"gitId":"wanyu-l"},"content":"        return input;","lastModifiedDate":"2021-09-11"},{"lineNumber":176,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":177,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":178,"author":{"gitId":"wanyu-l"},"content":"    private void terminateSession() {","lastModifiedDate":"2021-09-11"},{"lineNumber":179,"author":{"gitId":"wanyu-l"},"content":"        stage.close();","lastModifiedDate":"2021-09-11"},{"lineNumber":180,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":181,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"wanyu-l":128,"-":53}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":" * The Ui Class is responsible for interactions with","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":" * the user directly and displays various dialog prompts","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":" * to help user with input.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":"public final class Ui {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":"    private final String logo \u003d \"      ____        _        \\n\"","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"            + \"     |  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"            + \"     | | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"            + \"     | |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"            + \"     |____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"    private final Scanner sc;","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"    private final String welcomeMessage \u003d","lastModifiedDate":"2021-09-12"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"            \"     Hello from\\n\" + logo + \"\\n\" + \"\\n\"","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"            + \"     Hi! I am Duke!\\n\" + \"     What can I do for you?\\n\";","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"    private final String helperMessage \u003d","lastModifiedDate":"2021-09-12"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"            \"     The following can be used:\\n\" + \"     Types of tasks: \u0027todo\u0027, \u0027deadline\u0027, \u0027event\u0027\\n\"","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"            + \"     If you wish to add a task, please input in the form:\\n\u0027\"","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"            + \"     \u003ctype of task\u003e \u003cdescription of task\u003e\u0027\"","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"            + \" and include keyword \u0027/at\u0027 OR \u0027/by\u0027 followed by \u003cdate\u003e and \u003ctime\u003e if relevant.\\n\\n\"","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"            + \"     If you wish to delete a task, please input in the form: \u0027delete \u003ctask index\u003e\u0027.\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"            + \"     If you wish to see the current tasks, please input \u0027list\u0027.\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"            + \"     If you wish to mark a task as done, please input \u0027done \u003ctask index\u003e.\u0027\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"            + \"     If you wish to terminate the program, please input \u0027bye\u0027.\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"            + \"     If you wish to check items due on a particular day, please input \u0027due \u003cdate\u003e\u0027.\\n\"","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"            + \"     If you wish to find items, please input in the form: \u0027find \u003ckeyword\u003e\u0027.\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"            + \"     If you wish to reschedule a task, please input \u0027reschedule \u003cindex\u003e \u003cnew date\u003e \\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"wanyu-l"},"content":"            + \"     Please kindly avoid unnecessary spaces and note that date and time is best in \"","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"wanyu-l"},"content":"            + \"\u0027DD/MM/YYYY HH/MM\u0027 form.\\n\";","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"wanyu-l"},"content":"    private final String exitMessage \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-09-12"},{"lineNumber":41,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"wanyu-l"},"content":"     * Constructs an Ui object.","lastModifiedDate":"2021-09-12"},{"lineNumber":44,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"wanyu-l"},"content":"    public Ui() {","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"wanyu-l"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"wanyu-l"},"content":"     * Returns the welcome message upon start of application.","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"wanyu-l"},"content":"     * @return the welcome message to be shown to user","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"wanyu-l"},"content":"    public String getWelcomeMessage() {","lastModifiedDate":"2021-09-12"},{"lineNumber":54,"author":{"gitId":"wanyu-l"},"content":"        return welcomeMessage;","lastModifiedDate":"2021-09-12"},{"lineNumber":55,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"wanyu-l"},"content":"     * Displays certain dialogs as feedback to user.","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"wanyu-l"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"wanyu-l"},"content":"     * @param s the words to be displayed","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"wanyu-l"},"content":"    public void showInput(String ... s) {","lastModifiedDate":"2021-09-12"},{"lineNumber":63,"author":{"gitId":"wanyu-l"},"content":"        System.out.println();","lastModifiedDate":"2021-09-11"},{"lineNumber":64,"author":{"gitId":"wanyu-l"},"content":"        for (String str : s) {","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"wanyu-l"},"content":"            System.out.println(\"     \" + str);","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"wanyu-l"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"wanyu-l"},"content":"        System.out.println();","lastModifiedDate":"2021-09-11"},{"lineNumber":68,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"wanyu-l"},"content":"     * Displays commands to help user with input as much as possible","lastModifiedDate":"2021-09-07"},{"lineNumber":72,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"wanyu-l"},"content":"    public void showHelperMessage() {","lastModifiedDate":"2021-09-12"},{"lineNumber":74,"author":{"gitId":"wanyu-l"},"content":"        System.out.println(helperMessage);","lastModifiedDate":"2021-09-12"},{"lineNumber":75,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"wanyu-l"},"content":"     * Returns the helper message to be shown to the user.","lastModifiedDate":"2021-09-07"},{"lineNumber":79,"author":{"gitId":"wanyu-l"},"content":"     * @return message consisting of commands that can be used","lastModifiedDate":"2021-09-07"},{"lineNumber":80,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"wanyu-l"},"content":"    public String getHelperMessage() {","lastModifiedDate":"2021-09-12"},{"lineNumber":82,"author":{"gitId":"wanyu-l"},"content":"        return helperMessage;","lastModifiedDate":"2021-09-12"},{"lineNumber":83,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"wanyu-l"},"content":"     * Returns the exit message upon termination of application.","lastModifiedDate":"2021-09-07"},{"lineNumber":87,"author":{"gitId":"wanyu-l"},"content":"     * @return the exit message to be shown to user","lastModifiedDate":"2021-09-07"},{"lineNumber":88,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"wanyu-l"},"content":"    public String getExitMessage() {","lastModifiedDate":"2021-09-12"},{"lineNumber":90,"author":{"gitId":"wanyu-l"},"content":"        return exitMessage;","lastModifiedDate":"2021-09-12"},{"lineNumber":91,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wanyu-l":92}},{"path":"src/main/java/ui/UserPrompts.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":" * ui.UserPrompts Class implements specific pop-up windows","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":" * with relevant display messages to interact with the user.","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"final class UserPrompts {","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"     * Shows the exit message with a pop-up window.","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"    public void showExitMessage(Image image) {","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"        Stage exitWindow \u003d new Stage();","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"        exitWindow.setTitle(\"See you next time!\");","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"        exitWindow.setWidth(300.0);","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"        exitWindow.setHeight(100.0);","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"        exitWindow.getIcons().add(image);","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"        exitWindow.setResizable(false);","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"        exitWindow.setAlwaysOnTop(true);","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"        Label exitLabel \u003d new Label(new Ui().getExitMessage());","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"        Button closeButton \u003d new Button(\"Confirm\");","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"        closeButton.setOnAction(event -\u003e exitWindow.close());","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"        VBox otherBox \u003d new VBox(10);","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"        otherBox.getChildren().addAll(exitLabel, closeButton);","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"        otherBox.setAlignment(Pos.CENTER);","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"wanyu-l"},"content":"        Scene exitScene \u003d new Scene(otherBox);","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"wanyu-l"},"content":"        exitWindow.setScene(exitScene);","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"wanyu-l"},"content":"        exitWindow.showAndWait();","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"wanyu-l":43}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"         maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":"         prefWidth\u003d\"985.0\"","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"        \u003cCircle fx:id\u003d\"displayPicture\" radius\u003d\"50.0\" pickOnBounds\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"wanyu-l":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":"            prefHeight\u003d\"800.0\" prefWidth\u003d\"1000.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\"","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"ui.MainWindow\"\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"                   prefHeight\u003d\"20.0\" prefWidth\u003d\"920.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"925.0\" layoutY\u003d\"773.0\" mnemonicParsing\u003d\"false\"","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"                onAction\u003d\"#handleUserInput\" prefHeight\u003d\"20.0\" prefWidth\u003d\"75.0\" text\u003d\"Enter\" /\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" vbarPolicy\u003d\"ALWAYS\"","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"                    AnchorPane.topAnchor\u003d\"1.0\" fitToWidth\u003d\"true\"","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"                    prefHeight\u003d\"770.0\" prefWidth\u003d\"998.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"760.0\" prefWidth\u003d\"990.0\" /\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"wanyu-l":25}},{"path":"src/test/java/commands/CommandsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"import org.junit.jupiter.api.Tag;","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":"@Tag(\"Test\")","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":"public class CommandsTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"    public void byeTest() {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"        assertTrue(new ByeCommand(new ArrayList\u003c\u003e()).isExit());","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"    public void deadlineTest() {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"        assertFalse(new DeadlineCommand(new ArrayList\u003c\u003e()).isExit());","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"    public void todoTest() {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"        assertFalse(new ToDoCommand(new ArrayList\u003c\u003e()).isExit());","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"    public void eventTest() {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"        assertFalse(new EventCommand(new ArrayList\u003c\u003e()).isExit());","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"    public void deleteTest() {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"        assertFalse(new DeleteCommand(new ArrayList\u003c\u003e()).isExit());","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wanyu-l"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wanyu-l"},"content":"    public void doneTest() {","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wanyu-l"},"content":"        assertFalse(new DoneCommand(new ArrayList\u003c\u003e()).isExit());","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"wanyu-l"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wanyu-l"},"content":"    public void listTest() {","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"wanyu-l"},"content":"        assertFalse(new ListCommand(new ArrayList\u003c\u003e()).isExit());","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"wanyu-l"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"wanyu-l"},"content":"    public void dueTest() {","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"wanyu-l"},"content":"        assertFalse(new DueCommand(new ArrayList\u003c\u003e()).isExit());","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"wanyu-l"},"content":"    @Test void findTest() {","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"wanyu-l"},"content":"        assertFalse(new FindCommand(new ArrayList\u003c\u003e()).isExit());","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wanyu-l":57}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"    public void dummyTest() {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wanyu-l":12}},{"path":"src/test/java/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package parser;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"import org.junit.jupiter.api.Tag;","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":"import commands.ByeCommand;","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":"import commands.Command;","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":"import commands.DeadlineCommand;","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"import commands.DeleteCommand;","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"import commands.DoneCommand;","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"import commands.DueCommand;","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"import commands.EventCommand;","lastModifiedDate":"2021-09-12"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"import commands.FindCommand;","lastModifiedDate":"2021-09-12"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"import commands.ListCommand;","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"import commands.RescheduleCommand;","lastModifiedDate":"2021-09-12"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"import commands.ToDoCommand;","lastModifiedDate":"2021-09-12"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"@Tag(\"Test\")","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"     * Checks if a DeleteCommand is created despite wrong delete input with word instead of number.","lastModifiedDate":"2021-09-12"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"    public void test1() {","lastModifiedDate":"2021-09-12"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"        Command c \u003d new DeleteCommand(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"        assertEquals(c.getClass(), new Parser().parse(\"delete this\").getClass());","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"     * Checks if a DeleteCommand is created despite extra spaces.","lastModifiedDate":"2021-09-12"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wanyu-l"},"content":"    public void test2() {","lastModifiedDate":"2021-09-12"},{"lineNumber":38,"author":{"gitId":"wanyu-l"},"content":"        Command c \u003d new DeleteCommand(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wanyu-l"},"content":"        assertEquals(c.getClass(), new Parser().parse(\"   delete        \").getClass());","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":43,"author":{"gitId":"wanyu-l"},"content":"     * Checks if a ByeCommand is created despite additional string.","lastModifiedDate":"2021-09-12"},{"lineNumber":44,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":45,"author":{"gitId":"wanyu-l"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"wanyu-l"},"content":"    public void test3() {","lastModifiedDate":"2021-09-12"},{"lineNumber":47,"author":{"gitId":"wanyu-l"},"content":"        Command c \u003d new ByeCommand(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"wanyu-l"},"content":"        assertEquals(c.getClass(), new Parser().parse(\"bye 12\").getClass());","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":52,"author":{"gitId":"wanyu-l"},"content":"     * Checks if a ByeCommand is created with correct input.","lastModifiedDate":"2021-09-12"},{"lineNumber":53,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":54,"author":{"gitId":"wanyu-l"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"wanyu-l"},"content":"    public void test4() {","lastModifiedDate":"2021-09-12"},{"lineNumber":56,"author":{"gitId":"wanyu-l"},"content":"        Command c \u003d new ByeCommand(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"wanyu-l"},"content":"        assertEquals(c.getClass(), new Parser().parse(\"bye\").getClass());","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":61,"author":{"gitId":"wanyu-l"},"content":"     * Checks if a DeadlineCommand is created despite wrong input with missing information.","lastModifiedDate":"2021-09-12"},{"lineNumber":62,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":63,"author":{"gitId":"wanyu-l"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"wanyu-l"},"content":"    public void test5() {","lastModifiedDate":"2021-09-12"},{"lineNumber":65,"author":{"gitId":"wanyu-l"},"content":"        Command c \u003d new DeadlineCommand(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"wanyu-l"},"content":"        assertEquals(c.getClass(), new Parser().parse(\"deadline whatever\").getClass());","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":70,"author":{"gitId":"wanyu-l"},"content":"     * Checks if a DoneCommand is created despite wrong input with non-number.","lastModifiedDate":"2021-09-12"},{"lineNumber":71,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":72,"author":{"gitId":"wanyu-l"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"wanyu-l"},"content":"    public void test6() {","lastModifiedDate":"2021-09-12"},{"lineNumber":74,"author":{"gitId":"wanyu-l"},"content":"        Command c \u003d new DoneCommand(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"wanyu-l"},"content":"        assertEquals(c.getClass(), new Parser().parse(\"done g!@#!$\").getClass());","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":79,"author":{"gitId":"wanyu-l"},"content":"     * Checks if a DoneCommand is created with correct input format.","lastModifiedDate":"2021-09-12"},{"lineNumber":80,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":81,"author":{"gitId":"wanyu-l"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"wanyu-l"},"content":"    public void test7() {","lastModifiedDate":"2021-09-12"},{"lineNumber":83,"author":{"gitId":"wanyu-l"},"content":"        Command c \u003d new DoneCommand(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"wanyu-l"},"content":"        assertEquals(c.getClass(), new Parser().parse(\"done 1\").getClass());","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":88,"author":{"gitId":"wanyu-l"},"content":"     * Checks if a DueCommand is created despite wrong input with non-date.","lastModifiedDate":"2021-09-12"},{"lineNumber":89,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":90,"author":{"gitId":"wanyu-l"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"wanyu-l"},"content":"    public void test8() {","lastModifiedDate":"2021-09-12"},{"lineNumber":92,"author":{"gitId":"wanyu-l"},"content":"        Command c \u003d new DueCommand(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"wanyu-l"},"content":"        assertEquals(c.getClass(), new Parser().parse(\"due yesterday\").getClass());","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":97,"author":{"gitId":"wanyu-l"},"content":"     * Checks if a EventCommand is created despite a mixture of lower and upper case chars.","lastModifiedDate":"2021-09-12"},{"lineNumber":98,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":99,"author":{"gitId":"wanyu-l"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"wanyu-l"},"content":"    public void test9() {","lastModifiedDate":"2021-09-12"},{"lineNumber":101,"author":{"gitId":"wanyu-l"},"content":"        Command c \u003d new EventCommand(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"wanyu-l"},"content":"        assertEquals(c.getClass(), new Parser().parse(\"EvEnT\").getClass());","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":106,"author":{"gitId":"wanyu-l"},"content":"     * Checks if a ListCommand is created despite a mixture of lower and upper case chars.","lastModifiedDate":"2021-09-12"},{"lineNumber":107,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":108,"author":{"gitId":"wanyu-l"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"wanyu-l"},"content":"    public void test10() {","lastModifiedDate":"2021-09-12"},{"lineNumber":110,"author":{"gitId":"wanyu-l"},"content":"        Command c \u003d new ListCommand(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"wanyu-l"},"content":"        assertEquals(c.getClass(), new Parser().parse(\"liST\").getClass());","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":115,"author":{"gitId":"wanyu-l"},"content":"     * Checks if a ToDoCommand is created despite a mixture of lower and upper case chars.","lastModifiedDate":"2021-09-12"},{"lineNumber":116,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":117,"author":{"gitId":"wanyu-l"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"wanyu-l"},"content":"    public void test11() {","lastModifiedDate":"2021-09-12"},{"lineNumber":119,"author":{"gitId":"wanyu-l"},"content":"        Command c \u003d new ToDoCommand(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"wanyu-l"},"content":"        assertEquals(c.getClass(), new Parser().parse(\"tOdo blah\").getClass());","lastModifiedDate":"2021-09-12"},{"lineNumber":121,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":123,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":124,"author":{"gitId":"wanyu-l"},"content":"     * Checks if a FindCommand is created despite a mixture of lower and upper case chars.","lastModifiedDate":"2021-09-12"},{"lineNumber":125,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":126,"author":{"gitId":"wanyu-l"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":127,"author":{"gitId":"wanyu-l"},"content":"    public void test12() {","lastModifiedDate":"2021-09-12"},{"lineNumber":128,"author":{"gitId":"wanyu-l"},"content":"        Command c \u003d new FindCommand(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-29"},{"lineNumber":129,"author":{"gitId":"wanyu-l"},"content":"        assertEquals(c.getClass(), new Parser().parse(\"fiNd 12313\").getClass());","lastModifiedDate":"2021-09-12"},{"lineNumber":130,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":131,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":132,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":133,"author":{"gitId":"wanyu-l"},"content":"     * Checks if a RescheduleCommand is created despite a mixture of lower and upper case chars","lastModifiedDate":"2021-09-12"},{"lineNumber":134,"author":{"gitId":"wanyu-l"},"content":"     * and an invalid non-date input.","lastModifiedDate":"2021-09-12"},{"lineNumber":135,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":136,"author":{"gitId":"wanyu-l"},"content":"    @Test","lastModifiedDate":"2021-09-12"},{"lineNumber":137,"author":{"gitId":"wanyu-l"},"content":"    public void test13() {","lastModifiedDate":"2021-09-12"},{"lineNumber":138,"author":{"gitId":"wanyu-l"},"content":"        Command c \u003d new RescheduleCommand(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-09-12"},{"lineNumber":139,"author":{"gitId":"wanyu-l"},"content":"        assertEquals(c.getClass(), new Parser().parse(\"rescHedule 12313\").getClass());","lastModifiedDate":"2021-09-12"},{"lineNumber":140,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":141,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wanyu-l":141}},{"path":"src/test/java/tasks/TasksTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"package tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"import org.junit.jupiter.api.Tag;","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"@Tag(\"Test\")","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"public class TasksTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":"     * Checks various behaviors of an instance of ToDoTask.","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"    public void toDoTaskTest1() {","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"        Task t \u003d new ToDoTask(\"this\");","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"        assertEquals(\"[T]\", t.getType());","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"        assertEquals(\"this\", t.getDescription());","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"        assertEquals(\"[ ]\", t.getStatus());","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"        assertEquals(\"T|this|0\", t.getSaveFormat());","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"        t.setIsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"        assertEquals(\"[X]\", t.getStatus());","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"        assertEquals(\"T|this|1\", t.getSaveFormat());","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"        t.setIsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"     * Checks the String representation of type of task for an instance of ToDoTask.","lastModifiedDate":"2021-09-12"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"    public void toDoTaskTest2() {","lastModifiedDate":"2021-09-12"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"        assertEquals(\"[T]\", new ToDoTask(\"this\").getType());","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"     * Checks the String representation of status of whether an instance of ToDoTask is done","lastModifiedDate":"2021-09-12"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"     * is correctly changed.","lastModifiedDate":"2021-09-12"},{"lineNumber":37,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":38,"author":{"gitId":"wanyu-l"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wanyu-l"},"content":"    public void toDoTaskTest3() {","lastModifiedDate":"2021-09-12"},{"lineNumber":40,"author":{"gitId":"wanyu-l"},"content":"        Task t \u003d new ToDoTask(\"this\");","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wanyu-l"},"content":"        t.markAsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wanyu-l"},"content":"        assertEquals(\"[X]\", t.getStatus());","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":47,"author":{"gitId":"wanyu-l"},"content":"     * Checks various behaviors of an instance of EventTask.","lastModifiedDate":"2021-09-12"},{"lineNumber":48,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":49,"author":{"gitId":"wanyu-l"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"wanyu-l"},"content":"    public void eventTaskTest1() {","lastModifiedDate":"2021-09-12"},{"lineNumber":51,"author":{"gitId":"wanyu-l"},"content":"        Task t \u003d new EventTask(\"this\", \"when\");","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"wanyu-l"},"content":"        assertEquals(\"[E]\", t.getType());","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"wanyu-l"},"content":"        assertEquals(\"this (at: when)\", t.getDescription());","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"wanyu-l"},"content":"        assertEquals(\"[ ]\", t.getStatus());","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"wanyu-l"},"content":"        assertEquals(\"E|this|when|0\", t.getSaveFormat());","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"wanyu-l"},"content":"        t.setIsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"wanyu-l"},"content":"        assertEquals(\"[X]\", t.getStatus());","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"wanyu-l"},"content":"        assertEquals(\"E|this|when|1\", t.getSaveFormat());","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"wanyu-l"},"content":"        t.setIsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":63,"author":{"gitId":"wanyu-l"},"content":"     * Checks the String representation of type of task for an instance of EventTask.","lastModifiedDate":"2021-09-12"},{"lineNumber":64,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":65,"author":{"gitId":"wanyu-l"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"wanyu-l"},"content":"    public void eventTaskTest2() {","lastModifiedDate":"2021-09-12"},{"lineNumber":67,"author":{"gitId":"wanyu-l"},"content":"        assertEquals(\"[E]\", new EventTask(\"this\", \"when\").getType());","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":71,"author":{"gitId":"wanyu-l"},"content":"     * Checks the String representation of status of whether an instance of ToDoTask is done","lastModifiedDate":"2021-09-12"},{"lineNumber":72,"author":{"gitId":"wanyu-l"},"content":"     * is correctly changed.","lastModifiedDate":"2021-09-12"},{"lineNumber":73,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":74,"author":{"gitId":"wanyu-l"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"wanyu-l"},"content":"    public void eventTaskTest3() {","lastModifiedDate":"2021-09-12"},{"lineNumber":76,"author":{"gitId":"wanyu-l"},"content":"        Task t \u003d new EventTask(\"this\", \"when\");","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"wanyu-l"},"content":"        t.markAsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"wanyu-l"},"content":"        assertEquals(\"[X]\", t.getStatus());","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":82,"author":{"gitId":"wanyu-l"},"content":"     * Checks if an LocalDate instance is created with certain format of input and is","lastModifiedDate":"2021-09-12"},{"lineNumber":83,"author":{"gitId":"wanyu-l"},"content":"     * correctly displayed.","lastModifiedDate":"2021-09-12"},{"lineNumber":84,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":85,"author":{"gitId":"wanyu-l"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"wanyu-l"},"content":"    public void eventTaskTest4() {","lastModifiedDate":"2021-09-12"},{"lineNumber":87,"author":{"gitId":"wanyu-l"},"content":"        Task t \u003d new EventTask(\"this\", \"2/12/2019 1800\");","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"wanyu-l"},"content":"        assertEquals(\"this (at: 2 DECEMBER 2019 18:00)\", t.getDescription());","lastModifiedDate":"2021-09-15"},{"lineNumber":89,"author":{"gitId":"wanyu-l"},"content":"        assertEquals(\"2019-12-02\", t.getLocalDate().toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":93,"author":{"gitId":"wanyu-l"},"content":"     * Checks various behaviors of an instance of DeadLineTask.","lastModifiedDate":"2021-09-12"},{"lineNumber":94,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":95,"author":{"gitId":"wanyu-l"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"wanyu-l"},"content":"    public void deadLineTaskTest1() {","lastModifiedDate":"2021-09-12"},{"lineNumber":97,"author":{"gitId":"wanyu-l"},"content":"        Task t \u003d new DeadLineTask(\"this\", \"when\");","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"wanyu-l"},"content":"        assertEquals(\"[D]\", t.getType());","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"wanyu-l"},"content":"        assertEquals(\"this (by: when)\", t.getDescription());","lastModifiedDate":"2021-09-04"},{"lineNumber":100,"author":{"gitId":"wanyu-l"},"content":"        assertEquals(\"[ ]\", t.getStatus());","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"wanyu-l"},"content":"        assertEquals(\"D|this|when|0\", t.getSaveFormat());","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"wanyu-l"},"content":"        t.setIsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"wanyu-l"},"content":"        assertEquals(\"[X]\", t.getStatus());","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"wanyu-l"},"content":"        assertEquals(\"D|this|when|1\", t.getSaveFormat());","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"wanyu-l"},"content":"        t.setIsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":109,"author":{"gitId":"wanyu-l"},"content":"     * Checks the String representation of type of task for an instance of DeadLineTask.","lastModifiedDate":"2021-09-12"},{"lineNumber":110,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":111,"author":{"gitId":"wanyu-l"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"wanyu-l"},"content":"    public void deadLineTaskTest2() {","lastModifiedDate":"2021-09-12"},{"lineNumber":113,"author":{"gitId":"wanyu-l"},"content":"        assertEquals(\"[D]\", new DeadLineTask(\"this\", \"when\").getType());","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":117,"author":{"gitId":"wanyu-l"},"content":"     * Checks the String representation of status of whether an instance of ToDoTask is done","lastModifiedDate":"2021-09-12"},{"lineNumber":118,"author":{"gitId":"wanyu-l"},"content":"     * is correctly changed.","lastModifiedDate":"2021-09-12"},{"lineNumber":119,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":120,"author":{"gitId":"wanyu-l"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"wanyu-l"},"content":"    public void deadLineTaskTest3() {","lastModifiedDate":"2021-09-12"},{"lineNumber":122,"author":{"gitId":"wanyu-l"},"content":"        Task t \u003d new DeadLineTask(\"this\", \"when\");","lastModifiedDate":"2021-08-23"},{"lineNumber":123,"author":{"gitId":"wanyu-l"},"content":"        t.markAsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"wanyu-l"},"content":"        assertEquals(\"[X]\", t.getStatus());","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"wanyu-l"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":128,"author":{"gitId":"wanyu-l"},"content":"     * Checks if an LocalDate instance is created with certain format of input and is","lastModifiedDate":"2021-09-12"},{"lineNumber":129,"author":{"gitId":"wanyu-l"},"content":"     * correctly displayed.","lastModifiedDate":"2021-09-12"},{"lineNumber":130,"author":{"gitId":"wanyu-l"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":131,"author":{"gitId":"wanyu-l"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":132,"author":{"gitId":"wanyu-l"},"content":"    public void deadLineTaskTest4() {","lastModifiedDate":"2021-09-12"},{"lineNumber":133,"author":{"gitId":"wanyu-l"},"content":"        Task t \u003d new DeadLineTask(\"this\", \"2/12/2019 1800\");","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"wanyu-l"},"content":"        assertEquals(\"this (by: 2 DECEMBER 2019 18:00)\", t.getDescription());","lastModifiedDate":"2021-09-15"},{"lineNumber":135,"author":{"gitId":"wanyu-l"},"content":"        assertEquals(\"2019-12-02\", t.getLocalDate().toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":136,"author":{"gitId":"wanyu-l"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":137,"author":{"gitId":"wanyu-l"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wanyu-l":137}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wanyu-l"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"wanyu-l"},"content":"todo read book","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"wanyu-l"},"content":"deadline return book /by June 6th","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"wanyu-l"},"content":"Event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"wanyu-l"},"content":"todo join sports club","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"wanyu-l"},"content":"tod test run","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"wanyu-l"},"content":"done 1","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"wanyu-l"},"content":"done 4","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"wanyu-l"},"content":"todo borrow book","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"event typing code /at ","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"deadline what ds /by","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"todo","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"done","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"deadline","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"wanyu-l"},"content":"event","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"wanyu-l"},"content":"done 11","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"wanyu-l"},"content":"done1","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"wanyu-l"},"content":"done 1","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"wanyu-l"},"content":"huh","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"what","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"wanyu-l"},"content":"blahh","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"wanyu-l"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"done wh","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"wanyu-l"},"content":"delete 3","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"wanyu-l"},"content":"delete 2","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"wanyu-l"},"content":"delete","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"wanyu-l"},"content":"delete2","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"wanyu-l"},"content":"delteeda","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"wanyu-l"},"content":"deleted","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"wanyu-l"},"content":"event example","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"wanyu-l"},"content":"deadline submission","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"wanyu-l"},"content":"bye","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wanyu-l":36}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wanyu-l"},"content":"REM @@author:crypto-code {wanyu-l}-reused","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wanyu-l"},"content":"dir /s /B  ../src/main/java/*/*.java \u003e sources.txt","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wanyu-l"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin @sources.txt","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wanyu-l"},"content":"REM @@author:crypto-code {wanyu-l}-reused","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"wanyu-l":6}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"wanyu-l"},"content":"find ../src/main/java/*/*.java  \u003e sources.txt","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wanyu-l"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wanyu-l"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin @sources.txt","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"wanyu-l"},"content":"# @@author:crypto-code {wanyu-l}-reused","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"wanyu-l"},"content":"# @@author:crypto-code {wanyu-l}-reused","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"wanyu-l":5}}]
