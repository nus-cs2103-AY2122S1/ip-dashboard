[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"radiankrisno"},"content":"3. After that, locate the `src/main/java/duke/Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"radiankrisno":1,"-":23}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"radiankrisno"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"radiankrisno"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"radiankrisno"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"radiankrisno"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"radiankrisno"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"radiankrisno"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"radiankrisno"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"radiankrisno"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"radiankrisno"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"radiankrisno"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"radiankrisno"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"radiankrisno"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"radiankrisno"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"radiankrisno":14,"-":46}},{"path":"src/main/java/config/Setting.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"radiankrisno"},"content":"package config;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"radiankrisno"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"radiankrisno"},"content":" * Setting class for all of the setting of the Dub chatbot.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"radiankrisno"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"radiankrisno"},"content":"public class Setting {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"radiankrisno"},"content":"    /** File directory for the local storage. */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"radiankrisno"},"content":"    public static final String FILE_DIRECTORY \u003d \"./data\";","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"radiankrisno"},"content":"    /** File name for the local storage. */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"radiankrisno"},"content":"    public static final String FILE_NAME \u003d \"tasks.txt\";","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"radiankrisno"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"radiankrisno":12}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"radiankrisno"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"radiankrisno"},"content":"import config.Setting;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"radiankrisno"},"content":"import javafx.util.Pair;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"radiankrisno"},"content":"import parser.Parser;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"radiankrisno"},"content":"import processor.Processor;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"radiankrisno"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"radiankrisno"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"radiankrisno"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"radiankrisno"},"content":" * Main class for Dub chatbot.","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"radiankrisno"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"radiankrisno"},"content":"public class Duke {","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"radiankrisno"},"content":"    private static final Parser parser \u003d new Parser(","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"radiankrisno"},"content":"            new Processor(new Storage(Setting.FILE_DIRECTORY, Setting.FILE_NAME)));","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"radiankrisno"},"content":"     * Main function for the project.","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"radiankrisno"},"content":"     * @param args Array of sequence of characters (Strings) that are passed to the main function.","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"radiankrisno"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"radiankrisno"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"radiankrisno"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"radiankrisno"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"radiankrisno"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"radiankrisno"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\";","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"radiankrisno"},"content":"        Ui.print(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"radiankrisno"},"content":"        Ui.print(\"Wait, I\u0027m not duke.Duke. I\u0027m Dub!\\nWhat can I do for you?\");","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"radiankrisno"},"content":"        listen();","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"radiankrisno"},"content":"     * Listen to the parser and user input.","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"radiankrisno"},"content":"    public static void listen() {","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"radiankrisno"},"content":"        while (true) {","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"radiankrisno"},"content":"            boolean isListening \u003d parser.nextLine().getKey();","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"radiankrisno"},"content":"            if (!isListening) {","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"radiankrisno"},"content":"                break;","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"radiankrisno"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"radiankrisno"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"radiankrisno"},"content":"     * Return the response of the chatbot according to the user input.","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"radiankrisno"},"content":"     * @param input Input from the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"radiankrisno"},"content":"     * @return Response from the chatbot.","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"radiankrisno"},"content":"    public Pair\u003cBoolean, String\u003e getResponse(String input) {","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"radiankrisno"},"content":"        return parser.getResponse(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"radiankrisno"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"radiankrisno":55}},{"path":"src/main/java/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"radiankrisno"},"content":"package exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"radiankrisno"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"radiankrisno"},"content":" * Exception class for Duke processes.","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"radiankrisno"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"radiankrisno"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"radiankrisno"},"content":"     * Constructor of the DukeException.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"radiankrisno"},"content":"     * @param error The error message.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"radiankrisno"},"content":"    public DukeException(String error) {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"radiankrisno"},"content":"        super(\"Invalid command! \" + error);","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"radiankrisno"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"radiankrisno":15}},{"path":"src/main/java/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"radiankrisno"},"content":"package gui;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"radiankrisno"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"radiankrisno"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"radiankrisno"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"radiankrisno"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"radiankrisno"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"radiankrisno"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"radiankrisno"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"radiankrisno"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"radiankrisno"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"radiankrisno"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"radiankrisno"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"radiankrisno"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"radiankrisno"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"radiankrisno"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"radiankrisno"},"content":" * This control represents a dialog box consisting of an ImageView","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"radiankrisno"},"content":" * to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"radiankrisno"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"radiankrisno"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"radiankrisno"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"radiankrisno"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"radiankrisno"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"radiankrisno"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"radiankrisno"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"radiankrisno"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"radiankrisno"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"radiankrisno"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"radiankrisno"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"radiankrisno"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"radiankrisno"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"radiankrisno"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"radiankrisno"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"radiankrisno"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"radiankrisno"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"radiankrisno"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"radiankrisno"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"radiankrisno"},"content":"    private void flip() {","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"radiankrisno"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"radiankrisno"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"radiankrisno"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"radiankrisno"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"radiankrisno"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"radiankrisno"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"radiankrisno"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"radiankrisno"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"radiankrisno"},"content":"        db.flip();","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"radiankrisno"},"content":"        return db;","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"radiankrisno"},"content":"}","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"radiankrisno":63}},{"path":"src/main/java/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"radiankrisno"},"content":"package gui;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"radiankrisno"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"radiankrisno"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"radiankrisno"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"radiankrisno"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"radiankrisno"},"content":"public class Launcher {","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"radiankrisno"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"radiankrisno"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"radiankrisno"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"radiankrisno":12}},{"path":"src/main/java/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"radiankrisno"},"content":"package gui;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"radiankrisno"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"radiankrisno"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"radiankrisno"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"radiankrisno"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"radiankrisno"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"radiankrisno"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"radiankrisno"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"radiankrisno"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"radiankrisno"},"content":" * A GUI for duke.Duke using FXML.","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"radiankrisno"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"radiankrisno"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"radiankrisno"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"radiankrisno"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"radiankrisno"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"radiankrisno"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"radiankrisno"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"radiankrisno"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"radiankrisno"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"radiankrisno"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"radiankrisno"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"radiankrisno"},"content":"            stage.show();","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"radiankrisno"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"radiankrisno"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"radiankrisno"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"radiankrisno"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"radiankrisno":32}},{"path":"src/main/java/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"radiankrisno"},"content":"package gui;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"radiankrisno"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"radiankrisno"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"radiankrisno"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"radiankrisno"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"radiankrisno"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"radiankrisno"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"radiankrisno"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"radiankrisno"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"radiankrisno"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"radiankrisno"},"content":" * Controller for gui.MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"radiankrisno"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"radiankrisno"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"radiankrisno"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"radiankrisno"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"radiankrisno"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"radiankrisno"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"radiankrisno"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"radiankrisno"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"radiankrisno"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"radiankrisno"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"radiankrisno"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"radiankrisno"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"radiankrisno"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"radiankrisno"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"radiankrisno"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"radiankrisno"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"radiankrisno"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"radiankrisno"},"content":"        duke \u003d d;","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"radiankrisno"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing duke.","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"radiankrisno"},"content":"     * Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"radiankrisno"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"radiankrisno"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"radiankrisno"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"radiankrisno"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"radiankrisno"},"content":"        String response \u003d duke.getResponse(input).getValue();","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"radiankrisno"},"content":"        if (!duke.getResponse(input).getKey()) {","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"radiankrisno"},"content":"            System.exit(0);","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"radiankrisno"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"radiankrisno"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"radiankrisno"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"radiankrisno"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"radiankrisno"},"content":"        );","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"radiankrisno"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"radiankrisno"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"radiankrisno":57}},{"path":"src/main/java/models/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"radiankrisno"},"content":"package models;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"radiankrisno"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"radiankrisno"},"content":" * List of available command known by Dub.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"radiankrisno"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"radiankrisno"},"content":"public enum Command {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"radiankrisno"},"content":"    BYE,","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"radiankrisno"},"content":"    LIST,","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"radiankrisno"},"content":"    DONE,","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"radiankrisno"},"content":"    DELETE,","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"radiankrisno"},"content":"    DEFAULT,","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"radiankrisno"},"content":"    FIND","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"radiankrisno"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"radiankrisno":13}},{"path":"src/main/java/models/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"radiankrisno"},"content":"package models;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"radiankrisno"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"radiankrisno"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"radiankrisno"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"radiankrisno"},"content":" * Event class that represents a Deadline that will be saved by Dub.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"radiankrisno"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"radiankrisno"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"radiankrisno"},"content":"    /** The deadline of the task. */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"radiankrisno"},"content":"    private final LocalDate time;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"radiankrisno"},"content":"     * Constructor of the Deadline class.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"radiankrisno"},"content":"     * @param description Description of the Deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"radiankrisno"},"content":"     * @param time Deadline of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"radiankrisno"},"content":"    public Deadline(String description, LocalDate time) {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"radiankrisno"},"content":"        super(description);","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"radiankrisno"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"radiankrisno"},"content":"     * Returns true if two objects are equal.","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"radiankrisno"},"content":"     * @param obj Object that will be compared.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"radiankrisno"},"content":"     * @return True if the object are equal.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"radiankrisno"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"radiankrisno"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"radiankrisno"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"radiankrisno"},"content":"            return true;","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"radiankrisno"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"radiankrisno"},"content":"        if (obj instanceof Deadline) {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"radiankrisno"},"content":"            Deadline temp \u003d (Deadline) obj;","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"radiankrisno"},"content":"            return temp.toString().equals(this.toString());","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"radiankrisno"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"radiankrisno"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"radiankrisno"},"content":"     * Return string implementation of the Deadline object.","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"radiankrisno"},"content":"     * @return String implementation of the Deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"radiankrisno"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"radiankrisno"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"radiankrisno"},"content":"        if (this.isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"radiankrisno"},"content":"            return \"[D][X] \" + this.description + \" (by: \"","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"radiankrisno"},"content":"                    + time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"radiankrisno"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":56,"author":{"gitId":"radiankrisno"},"content":"        return \"[D][ ] \" + this.description + \" (by: \"","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"radiankrisno"},"content":"                + time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"radiankrisno"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"radiankrisno":59}},{"path":"src/main/java/models/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"radiankrisno"},"content":"package models;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"radiankrisno"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"radiankrisno"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"radiankrisno"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"radiankrisno"},"content":" * Event class that represents a Todo that will be saved by Dub.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"radiankrisno"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"radiankrisno"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"radiankrisno"},"content":"    /** The time of the event. */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"radiankrisno"},"content":"    private final LocalDate time;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"radiankrisno"},"content":"     * Constructor of the Event class.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"radiankrisno"},"content":"     * @param description Description of the Event.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"radiankrisno"},"content":"     * @param time Time when the Event happens.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"radiankrisno"},"content":"    public Event(String description, LocalDate time) {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"radiankrisno"},"content":"        super(description);","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"radiankrisno"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"radiankrisno"},"content":"     * Returns true if two objects are equal.","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"radiankrisno"},"content":"     * @param obj Object that will be compared.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"radiankrisno"},"content":"     * @return True if the object are equal.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"radiankrisno"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"radiankrisno"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"radiankrisno"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"radiankrisno"},"content":"            return true;","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"radiankrisno"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"radiankrisno"},"content":"        if (obj instanceof Event) {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"radiankrisno"},"content":"            Event temp \u003d (Event) obj;","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"radiankrisno"},"content":"            return temp.toString().equals(this.toString());","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"radiankrisno"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"radiankrisno"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"radiankrisno"},"content":"     * Return string implementation of the Event object.","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"radiankrisno"},"content":"     * @return String implementation of the Event.","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"radiankrisno"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"radiankrisno"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"radiankrisno"},"content":"        if (this.isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"radiankrisno"},"content":"            return \"[E][X] \" + this.description + \" (by: \"","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"radiankrisno"},"content":"                    + time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"radiankrisno"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":56,"author":{"gitId":"radiankrisno"},"content":"        return \"[E][ ] \" + this.description + \" (by: \"","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"radiankrisno"},"content":"                + time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"radiankrisno"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"radiankrisno":59}},{"path":"src/main/java/models/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"radiankrisno"},"content":"package models;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"radiankrisno"},"content":"import java.io.Serializable;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"radiankrisno"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"radiankrisno"},"content":" * Task class that represents a Task that will be saved by Dub.","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"radiankrisno"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"radiankrisno"},"content":"public class Task implements Serializable {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"radiankrisno"},"content":"    /** Description of the task. */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"radiankrisno"},"content":"    protected String description;","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"radiankrisno"},"content":"    /** Boolean value that shows whether the task is done or not. */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"radiankrisno"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"radiankrisno"},"content":"     * Constructor of the Task class.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"radiankrisno"},"content":"     * @param description Description of the Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"radiankrisno"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"radiankrisno"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"radiankrisno"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"radiankrisno"},"content":"     * Makes the Task done.","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"radiankrisno"},"content":"    public void setDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"radiankrisno"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"radiankrisno"},"content":"     * Returns true if two objects are equal.","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"radiankrisno"},"content":"     * @param obj Object that will be compared.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"radiankrisno"},"content":"     * @return True if the object are equal.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"radiankrisno"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"radiankrisno"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"radiankrisno"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"radiankrisno"},"content":"            return true;","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"radiankrisno"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"radiankrisno"},"content":"        if (obj instanceof Task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"radiankrisno"},"content":"            Task temp \u003d (Task) obj;","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"radiankrisno"},"content":"            return temp.toString().equals(this.toString());","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"radiankrisno"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"radiankrisno"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"radiankrisno"},"content":"     * Returns string implementation of the Task object.","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"radiankrisno"},"content":"     * @return String implementation of the Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"radiankrisno"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"radiankrisno"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":60,"author":{"gitId":"radiankrisno"},"content":"        if (this.isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"radiankrisno"},"content":"            return \"[X] \" + this.description;","lastModifiedDate":"2021-08-17"},{"lineNumber":62,"author":{"gitId":"radiankrisno"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":63,"author":{"gitId":"radiankrisno"},"content":"        return \"[ ] \" + this.description;","lastModifiedDate":"2021-08-17"},{"lineNumber":64,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":65,"author":{"gitId":"radiankrisno"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"radiankrisno":65}},{"path":"src/main/java/models/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"radiankrisno"},"content":"package models;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"radiankrisno"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"radiankrisno"},"content":" * Todo class that represents a Todo that will be saved by Dub.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"radiankrisno"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"radiankrisno"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"radiankrisno"},"content":"     * Constructor of the Todo class.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"radiankrisno"},"content":"     * @param description Description of the Todo.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"radiankrisno"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"radiankrisno"},"content":"        super(description);","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"radiankrisno"},"content":"     * Returns true if two objects are equal.","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"radiankrisno"},"content":"     * @param obj Object that will be compared.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"radiankrisno"},"content":"     * @return True if the object are equal.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"radiankrisno"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"radiankrisno"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"radiankrisno"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"radiankrisno"},"content":"            return true;","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"radiankrisno"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"radiankrisno"},"content":"        if (obj instanceof Todo) {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"radiankrisno"},"content":"            Task temp \u003d (Todo) obj;","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"radiankrisno"},"content":"            return temp.toString().equals(this.toString());","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"radiankrisno"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"radiankrisno"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"radiankrisno"},"content":"     * Return string implementation of the Todo object.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"radiankrisno"},"content":"     * @return String implementation of the Todo.","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"radiankrisno"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"radiankrisno"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"radiankrisno"},"content":"        if (this.isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"radiankrisno"},"content":"            return \"[T][X] \" + this.description;","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"radiankrisno"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"radiankrisno"},"content":"        return \"[T][ ] \" + this.description;","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"radiankrisno"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"radiankrisno":49}},{"path":"src/main/java/parser/IParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"radiankrisno"},"content":"package parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"radiankrisno"},"content":"import javafx.util.Pair;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"radiankrisno"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"radiankrisno"},"content":" * Interface for the Parser object which parses command from the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"radiankrisno"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"radiankrisno"},"content":"public interface IParser {","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"radiankrisno"},"content":"     * Parses the command entered by the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"radiankrisno"},"content":"     * @param line Command that is entered by the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"radiankrisno"},"content":"     * @return True if the command entered is not bye.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"radiankrisno"},"content":"    Pair\u003cBoolean, String\u003e parseLine(String line);","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"radiankrisno"},"content":"     * Function that allows Parser to take the next command from the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"radiankrisno"},"content":"     * @return True if the command entered is not bye and the response from the chatbot.","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"radiankrisno"},"content":"    Pair\u003cBoolean, String\u003e nextLine();","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"radiankrisno"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"radiankrisno":23}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"radiankrisno"},"content":"package parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"radiankrisno"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"radiankrisno"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"radiankrisno"},"content":"import java.util.List;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"radiankrisno"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"radiankrisno"},"content":"import javafx.util.Pair;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"radiankrisno"},"content":"import models.Command;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"radiankrisno"},"content":"import processor.IProcessor;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"radiankrisno"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"radiankrisno"},"content":" * Parser implementation that will parses command from the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"radiankrisno"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"radiankrisno"},"content":"public class Parser implements IParser {","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"radiankrisno"},"content":"    /** Scanner object to read the line entered by the user. */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"radiankrisno"},"content":"    private final Scanner scanner;","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"radiankrisno"},"content":"    /** Processor object which processes the parsed command. */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"radiankrisno"},"content":"    private final IProcessor processor;","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"radiankrisno"},"content":"     * Constructor of the Parser object.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"radiankrisno"},"content":"     * @param processor Processor object that will process all the parsed commands.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"radiankrisno"},"content":"    public Parser(IProcessor processor) {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"radiankrisno"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"radiankrisno"},"content":"        this.processor \u003d processor;","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"radiankrisno"},"content":"     * Implementation that parses the command entered by the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"radiankrisno"},"content":"     * @param line Command that is entered by the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"radiankrisno"},"content":"     * @return True if the command entered is not bye.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"radiankrisno"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"radiankrisno"},"content":"    public Pair\u003cBoolean, String\u003e parseLine(String line) {","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"radiankrisno"},"content":"        List\u003cString\u003e arguments \u003d new ArrayList\u003c\u003e(Arrays.asList(line.split(\" \")));","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"radiankrisno"},"content":"        if (line.equals(\"bye\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"radiankrisno"},"content":"            return new Pair\u003c\u003e(false, this.processor.processCommand(Command.BYE, arguments));","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"radiankrisno"},"content":"        } else if (line.equals(\"list\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"radiankrisno"},"content":"            return new Pair\u003c\u003e(true, this.processor.processCommand(Command.LIST, arguments));","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"radiankrisno"},"content":"        } else if (arguments.get(0).equals(\"done\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"radiankrisno"},"content":"            return new Pair\u003c\u003e(true, this.processor.processCommand(Command.DONE, arguments));","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"radiankrisno"},"content":"        } else if (arguments.get(0).equals(\"delete\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"radiankrisno"},"content":"            return new Pair\u003c\u003e(true, this.processor.processCommand(Command.DELETE, arguments));","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"radiankrisno"},"content":"        } else if (arguments.get(0).equals(\"find\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"radiankrisno"},"content":"            return new Pair\u003c\u003e(true, this.processor.processCommand(Command.FIND, arguments));","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"radiankrisno"},"content":"        } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"radiankrisno"},"content":"            return new Pair\u003c\u003e(true, this.processor.processCommand(Command.DEFAULT, arguments));","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"radiankrisno"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":55,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":56,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"radiankrisno"},"content":"     * Function implementation that allows Parser to take the next command from the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"radiankrisno"},"content":"     * @return True if the command entered is not bye and the response from the chatbot.","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"radiankrisno"},"content":"    public Pair\u003cBoolean, String\u003e nextLine() {","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"radiankrisno"},"content":"        String line \u003d scanner.nextLine();","lastModifiedDate":"2021-08-17"},{"lineNumber":63,"author":{"gitId":"radiankrisno"},"content":"        System.out.println(\"\\t\" + \"____________________________________________________________\");","lastModifiedDate":"2021-08-17"},{"lineNumber":64,"author":{"gitId":"radiankrisno"},"content":"        return parseLine(line);","lastModifiedDate":"2021-08-17"},{"lineNumber":65,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":66,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"radiankrisno"},"content":"     * Function implementation that allows Parser to take command from the user and get response.","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"radiankrisno"},"content":"     * @return True if the command entered is not bye and the response from the chatbot.","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"radiankrisno"},"content":"    public Pair\u003cBoolean, String\u003e getResponse(String input) {","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"radiankrisno"},"content":"        return parseLine(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"radiankrisno"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"radiankrisno":75}},{"path":"src/main/java/processor/IProcessor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"radiankrisno"},"content":"package processor;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"radiankrisno"},"content":"import java.util.List;","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"radiankrisno"},"content":"import models.Command;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"radiankrisno"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"radiankrisno"},"content":" * Interface for the Processor object which processes command.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"radiankrisno"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"radiankrisno"},"content":"public interface IProcessor {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"radiankrisno"},"content":"     * Process command based on the type.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"radiankrisno"},"content":"     * @param command Type of command.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"radiankrisno"},"content":"     * @param arguments Other arguments for the command.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"radiankrisno"},"content":"     * @return Response from the chatbot.","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"radiankrisno"},"content":"    String processCommand(Command command, List\u003cString\u003e arguments);","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"radiankrisno"},"content":"     * Process command with type BYE.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"radiankrisno"},"content":"     * @return Response from the chatbot.","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"radiankrisno"},"content":"    String processBye();","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"radiankrisno"},"content":"     * Process command with type LIST.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"radiankrisno"},"content":"     * @return Response from the chatbot.","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"radiankrisno"},"content":"    String processList();","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"radiankrisno"},"content":"     * Process command with type DONE.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"radiankrisno"},"content":"     * @param index Index that specify which Task is done.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"radiankrisno"},"content":"     * @return Response from the chatbot.","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"radiankrisno"},"content":"    String processDone(String index);","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"radiankrisno"},"content":"     * Process command with type DELETE.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"radiankrisno"},"content":"     * @param index Index that specify which Task.","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"radiankrisno"},"content":"     * @return Response from the chatbot.","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"radiankrisno"},"content":"    String processDelete(String index);","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"radiankrisno"},"content":"    String processFind(String ... keywords);","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"radiankrisno"},"content":"     * Process command with type DEFAULT.","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"radiankrisno"},"content":"     * @param arguments List of arguments related to the command.","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"radiankrisno"},"content":"     * @return Response from the chatbot.","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"radiankrisno"},"content":"    String processDefault(List\u003cString\u003e arguments);","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"radiankrisno"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"radiankrisno":59}},{"path":"src/main/java/processor/Processor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"radiankrisno"},"content":"package processor;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"radiankrisno"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"radiankrisno"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"radiankrisno"},"content":"import java.util.List;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"radiankrisno"},"content":"import exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"radiankrisno"},"content":"import models.Command;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"radiankrisno"},"content":"import models.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"radiankrisno"},"content":"import models.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"radiankrisno"},"content":"import models.Todo;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"radiankrisno"},"content":"import storage.IStorage;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"radiankrisno"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"radiankrisno"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"radiankrisno"},"content":" * Processor implementation which processes command.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"radiankrisno"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"radiankrisno"},"content":"public class Processor implements IProcessor {","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"radiankrisno"},"content":"    /** Storage object which writes and reads from local file. */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"radiankrisno"},"content":"    private final IStorage storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"radiankrisno"},"content":"     * Constructor of the processor object.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"radiankrisno"},"content":"     * @param storage Storage object for the processor.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"radiankrisno"},"content":"    public Processor(IStorage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"radiankrisno"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"radiankrisno"},"content":"     * Process command implementation based on the type.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"radiankrisno"},"content":"     * @param command Type of command.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"radiankrisno"},"content":"     * @param arguments Other arguments for the command.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"radiankrisno"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"radiankrisno"},"content":"    public String processCommand(Command command, List\u003cString\u003e arguments) {","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"radiankrisno"},"content":"        switch(command) {","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"radiankrisno"},"content":"        case BYE:","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"radiankrisno"},"content":"            return processBye();","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"radiankrisno"},"content":"        case LIST:","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"radiankrisno"},"content":"            return processList();","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"radiankrisno"},"content":"        case DONE:","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"radiankrisno"},"content":"            return processDone(arguments.get(1));","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"radiankrisno"},"content":"        case DELETE:","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"radiankrisno"},"content":"            return processDelete(arguments.get(1));","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"radiankrisno"},"content":"        case FIND:","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"radiankrisno"},"content":"            return processFind(arguments.toArray(new String[0]));","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"radiankrisno"},"content":"        default:","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"radiankrisno"},"content":"            return processDefault(arguments);","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"radiankrisno"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":55,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":56,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"radiankrisno"},"content":"     * Process command implementation ith type DEFAULT.","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"radiankrisno"},"content":"     * @param arguments List of arguments related to the command.","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"radiankrisno"},"content":"     * @return Response from the chatbot.","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"radiankrisno"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":63,"author":{"gitId":"radiankrisno"},"content":"    public String processDefault(List\u003cString\u003e arguments) {","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"radiankrisno"},"content":"        try {","lastModifiedDate":"2021-08-17"},{"lineNumber":65,"author":{"gitId":"radiankrisno"},"content":"            String type \u003d arguments.get(0);","lastModifiedDate":"2021-08-17"},{"lineNumber":66,"author":{"gitId":"radiankrisno"},"content":"            if (type.equals(\"todo\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":67,"author":{"gitId":"radiankrisno"},"content":"                arguments.remove(0);","lastModifiedDate":"2021-08-17"},{"lineNumber":68,"author":{"gitId":"radiankrisno"},"content":"                if (arguments.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-17"},{"lineNumber":69,"author":{"gitId":"radiankrisno"},"content":"                    throw new DukeException(\"Todo description cannot be empty\");","lastModifiedDate":"2021-08-17"},{"lineNumber":70,"author":{"gitId":"radiankrisno"},"content":"                }","lastModifiedDate":"2021-08-17"},{"lineNumber":71,"author":{"gitId":"radiankrisno"},"content":"                this.storage.addTask(new Todo(String.join(\" \", arguments)));","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"radiankrisno"},"content":"            } else if (type.equals(\"deadline\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":73,"author":{"gitId":"radiankrisno"},"content":"                arguments.remove(0);","lastModifiedDate":"2021-08-17"},{"lineNumber":74,"author":{"gitId":"radiankrisno"},"content":"                if (arguments.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-17"},{"lineNumber":75,"author":{"gitId":"radiankrisno"},"content":"                    throw new DukeException(\"Deadline description cannot be empty\");","lastModifiedDate":"2021-08-17"},{"lineNumber":76,"author":{"gitId":"radiankrisno"},"content":"                }","lastModifiedDate":"2021-08-17"},{"lineNumber":77,"author":{"gitId":"radiankrisno"},"content":"                String line \u003d String.join(\" \", arguments);","lastModifiedDate":"2021-08-17"},{"lineNumber":78,"author":{"gitId":"radiankrisno"},"content":"                String[] input \u003d line.split(\" /by \");","lastModifiedDate":"2021-08-17"},{"lineNumber":79,"author":{"gitId":"radiankrisno"},"content":"                if (input.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":80,"author":{"gitId":"radiankrisno"},"content":"                    throw new DukeException(\"Deadline command must have /by specified\");","lastModifiedDate":"2021-08-17"},{"lineNumber":81,"author":{"gitId":"radiankrisno"},"content":"                }","lastModifiedDate":"2021-08-17"},{"lineNumber":82,"author":{"gitId":"radiankrisno"},"content":"                LocalDate time \u003d LocalDate.parse(input[1].trim());","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"radiankrisno"},"content":"                this.storage.addTask(new Deadline(input[0], time));","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"radiankrisno"},"content":"            } else if (type.equals(\"event\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":85,"author":{"gitId":"radiankrisno"},"content":"                arguments.remove(0);","lastModifiedDate":"2021-08-17"},{"lineNumber":86,"author":{"gitId":"radiankrisno"},"content":"                if (arguments.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-17"},{"lineNumber":87,"author":{"gitId":"radiankrisno"},"content":"                    throw new DukeException(\"Event description cannot be empty\");","lastModifiedDate":"2021-08-17"},{"lineNumber":88,"author":{"gitId":"radiankrisno"},"content":"                }","lastModifiedDate":"2021-08-17"},{"lineNumber":89,"author":{"gitId":"radiankrisno"},"content":"                String line \u003d String.join(\" \", arguments);","lastModifiedDate":"2021-08-17"},{"lineNumber":90,"author":{"gitId":"radiankrisno"},"content":"                String[] input \u003d line.split(\" /at \");","lastModifiedDate":"2021-08-17"},{"lineNumber":91,"author":{"gitId":"radiankrisno"},"content":"                if (input.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":92,"author":{"gitId":"radiankrisno"},"content":"                    throw new DukeException(\"Event command must have /at specified\");","lastModifiedDate":"2021-08-17"},{"lineNumber":93,"author":{"gitId":"radiankrisno"},"content":"                }","lastModifiedDate":"2021-08-17"},{"lineNumber":94,"author":{"gitId":"radiankrisno"},"content":"                LocalDate time \u003d LocalDate.parse(input[1].trim());","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"radiankrisno"},"content":"                this.storage.addTask(new Event(input[0], time));","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"radiankrisno"},"content":"            } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":97,"author":{"gitId":"radiankrisno"},"content":"                throw new DukeException(\"I don\u0027t understand :(\");","lastModifiedDate":"2021-08-17"},{"lineNumber":98,"author":{"gitId":"radiankrisno"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":99,"author":{"gitId":"radiankrisno"},"content":"            String response \u003d \"Got it. I\u0027ve added this task:\\n   \" + this.storage.getLastTask()","lastModifiedDate":"2021-08-31"},{"lineNumber":100,"author":{"gitId":"radiankrisno"},"content":"                    + \"\\nNow you have \" + this.storage.getSize() + \" tasks in the list.\";","lastModifiedDate":"2021-08-31"},{"lineNumber":101,"author":{"gitId":"radiankrisno"},"content":"            Ui.print(response);","lastModifiedDate":"2021-08-31"},{"lineNumber":102,"author":{"gitId":"radiankrisno"},"content":"            return response;","lastModifiedDate":"2021-08-31"},{"lineNumber":103,"author":{"gitId":"radiankrisno"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":104,"author":{"gitId":"radiankrisno"},"content":"            Ui.print(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"radiankrisno"},"content":"            return e.getMessage();","lastModifiedDate":"2021-08-31"},{"lineNumber":106,"author":{"gitId":"radiankrisno"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"radiankrisno"},"content":"            Ui.print(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"radiankrisno"},"content":"            return e.getMessage();","lastModifiedDate":"2021-08-31"},{"lineNumber":109,"author":{"gitId":"radiankrisno"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":110,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":111,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":112,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"radiankrisno"},"content":"     * Process command implementation with type LIST.","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":115,"author":{"gitId":"radiankrisno"},"content":"     * @return Response from the chatbot.","lastModifiedDate":"2021-08-31"},{"lineNumber":116,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"radiankrisno"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":118,"author":{"gitId":"radiankrisno"},"content":"    public String processList() {","lastModifiedDate":"2021-08-31"},{"lineNumber":119,"author":{"gitId":"radiankrisno"},"content":"        Ui.print(this.storage.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"radiankrisno"},"content":"        return this.storage.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":121,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":122,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":123,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"radiankrisno"},"content":"     * Process command implementation with type DONE.","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"radiankrisno"},"content":"     * @param index Index that specify which Task is done.","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"radiankrisno"},"content":"     * @return Response from the chatbot.","lastModifiedDate":"2021-08-31"},{"lineNumber":128,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"radiankrisno"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":130,"author":{"gitId":"radiankrisno"},"content":"    public String processDone(String index) {","lastModifiedDate":"2021-08-31"},{"lineNumber":131,"author":{"gitId":"radiankrisno"},"content":"        try {","lastModifiedDate":"2021-08-17"},{"lineNumber":132,"author":{"gitId":"radiankrisno"},"content":"            int i \u003d Integer.parseInt(index);","lastModifiedDate":"2021-08-17"},{"lineNumber":133,"author":{"gitId":"radiankrisno"},"content":"            this.storage.setDone(i - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":134,"author":{"gitId":"radiankrisno"},"content":"            String result \u003d \"Nice! I\u0027ve marked this task as done:\\n   \" + this.storage.getTask(i - 1);","lastModifiedDate":"2021-08-31"},{"lineNumber":135,"author":{"gitId":"radiankrisno"},"content":"            Ui.print(result);","lastModifiedDate":"2021-08-31"},{"lineNumber":136,"author":{"gitId":"radiankrisno"},"content":"            return result;","lastModifiedDate":"2021-08-31"},{"lineNumber":137,"author":{"gitId":"radiankrisno"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":138,"author":{"gitId":"radiankrisno"},"content":"            Ui.print(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":139,"author":{"gitId":"radiankrisno"},"content":"            return e.getMessage();","lastModifiedDate":"2021-08-31"},{"lineNumber":140,"author":{"gitId":"radiankrisno"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":141,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":142,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":143,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":144,"author":{"gitId":"radiankrisno"},"content":"     * Process command implementation with type DELETE.","lastModifiedDate":"2021-08-25"},{"lineNumber":145,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":146,"author":{"gitId":"radiankrisno"},"content":"     * @param index Index that specify which tASK","lastModifiedDate":"2021-08-25"},{"lineNumber":147,"author":{"gitId":"radiankrisno"},"content":"     * @return Response from the chatbot.","lastModifiedDate":"2021-08-31"},{"lineNumber":148,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":149,"author":{"gitId":"radiankrisno"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":150,"author":{"gitId":"radiankrisno"},"content":"    public String processDelete(String index) {","lastModifiedDate":"2021-08-31"},{"lineNumber":151,"author":{"gitId":"radiankrisno"},"content":"        try {","lastModifiedDate":"2021-08-17"},{"lineNumber":152,"author":{"gitId":"radiankrisno"},"content":"            int i \u003d Integer.parseInt(index);","lastModifiedDate":"2021-08-17"},{"lineNumber":153,"author":{"gitId":"radiankrisno"},"content":"            String result \u003d this.storage.deleteTask(i - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":154,"author":{"gitId":"radiankrisno"},"content":"            String output \u003d \"Got it! I\u0027ve removed this task:\\n   \" + result","lastModifiedDate":"2021-08-31"},{"lineNumber":155,"author":{"gitId":"radiankrisno"},"content":"                    + \"\\nNow you have \" + this.storage.getSize() + \" tasks in the list.\";","lastModifiedDate":"2021-08-31"},{"lineNumber":156,"author":{"gitId":"radiankrisno"},"content":"            Ui.print(output);","lastModifiedDate":"2021-08-31"},{"lineNumber":157,"author":{"gitId":"radiankrisno"},"content":"            return output;","lastModifiedDate":"2021-08-31"},{"lineNumber":158,"author":{"gitId":"radiankrisno"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":159,"author":{"gitId":"radiankrisno"},"content":"            Ui.print(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":160,"author":{"gitId":"radiankrisno"},"content":"            return e.getMessage();","lastModifiedDate":"2021-08-31"},{"lineNumber":161,"author":{"gitId":"radiankrisno"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":162,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":163,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":164,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":165,"author":{"gitId":"radiankrisno"},"content":"     * Process command implementation with type BYE.","lastModifiedDate":"2021-08-25"},{"lineNumber":166,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":167,"author":{"gitId":"radiankrisno"},"content":"     * @return Response from the chatbot.","lastModifiedDate":"2021-08-31"},{"lineNumber":168,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":169,"author":{"gitId":"radiankrisno"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":170,"author":{"gitId":"radiankrisno"},"content":"    public String processFind(String ... keywords) {","lastModifiedDate":"2021-08-31"},{"lineNumber":171,"author":{"gitId":"radiankrisno"},"content":"        String response \u003d this.storage.findKeyword(keywords).toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":172,"author":{"gitId":"radiankrisno"},"content":"        Ui.print(response);","lastModifiedDate":"2021-08-31"},{"lineNumber":173,"author":{"gitId":"radiankrisno"},"content":"        return response;","lastModifiedDate":"2021-08-31"},{"lineNumber":174,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":175,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":176,"author":{"gitId":"radiankrisno"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":177,"author":{"gitId":"radiankrisno"},"content":"    public String processBye() {","lastModifiedDate":"2021-08-31"},{"lineNumber":178,"author":{"gitId":"radiankrisno"},"content":"        String response \u003d \"Bye. Please meet me again later!\";","lastModifiedDate":"2021-08-31"},{"lineNumber":179,"author":{"gitId":"radiankrisno"},"content":"        Ui.print(response);","lastModifiedDate":"2021-08-31"},{"lineNumber":180,"author":{"gitId":"radiankrisno"},"content":"        return response;","lastModifiedDate":"2021-08-31"},{"lineNumber":181,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":182,"author":{"gitId":"radiankrisno"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"radiankrisno":182}},{"path":"src/main/java/storage/IStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"radiankrisno"},"content":"package storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"radiankrisno"},"content":"import exception.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"radiankrisno"},"content":"import models.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"radiankrisno"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"radiankrisno"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"radiankrisno"},"content":" * Interface for the Storage object which saves and loads TaskList from local file.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"radiankrisno"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"radiankrisno"},"content":"public interface IStorage {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"radiankrisno"},"content":"     * Wrapper function that add task to the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"radiankrisno"},"content":"     * @param task Task to be added to the storage.","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"radiankrisno"},"content":"    void addTask(Task task);","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"radiankrisno"},"content":"     * Wrapper function that set a specified Task inside TaskList to be done.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"radiankrisno"},"content":"     * @param index Index of the Task that will be set done.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"radiankrisno"},"content":"     * @throws DukeException If there is no task with the specified index.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"radiankrisno"},"content":"    void setDone(int index) throws DukeException;","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"radiankrisno"},"content":"     * Wrapper function that get a specified Task from TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"radiankrisno"},"content":"     * @param index Index of the Task that will be retrieved.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"radiankrisno"},"content":"     * @return  Task object with the specified index.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"radiankrisno"},"content":"    Task getTask(int index);","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"radiankrisno"},"content":"     * Wrapper function to get the latest Task from the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"radiankrisno"},"content":"     * @return Task object with the last index.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"radiankrisno"},"content":"    Task getLastTask();","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"radiankrisno"},"content":"     * Wrapper function that delete Task from the TaskList with the specified index.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"radiankrisno"},"content":"     * @param index Index of the Task that will be deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"radiankrisno"},"content":"     * @return String representation of the deleted Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"radiankrisno"},"content":"     * @throws DukeException If there is no Task with the specified index.","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"radiankrisno"},"content":"    String deleteTask(int index) throws DukeException;","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"radiankrisno"},"content":"     * Wrapper function to get the number of Task in the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"radiankrisno"},"content":"     * @return The number of Task objects in the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"radiankrisno"},"content":"    int getSize();","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"radiankrisno"},"content":"    TaskList findKeyword(String ... keywords);","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"radiankrisno"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"radiankrisno":60}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"radiankrisno"},"content":"package storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"radiankrisno"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"radiankrisno"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"radiankrisno"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"radiankrisno"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"radiankrisno"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"radiankrisno"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"radiankrisno"},"content":"import exception.DukeException;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"radiankrisno"},"content":"import models.Task;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"radiankrisno"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"radiankrisno"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"radiankrisno"},"content":" * Storage implementation that writes and saves the TaskList to local storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"radiankrisno"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"radiankrisno"},"content":"public class Storage implements IStorage {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"radiankrisno"},"content":"    /** TaskList object that store all the Task objects. */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"radiankrisno"},"content":"    private TaskList list;","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"radiankrisno"},"content":"    /** The path of the file that store TaskList in local disk. */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"radiankrisno"},"content":"    private final String filePath;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"radiankrisno"},"content":"     * Constructor of the Storage object that allows local disk memory.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"radiankrisno"},"content":"     * @param fileDirectory Directory of the storage file.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"radiankrisno"},"content":"     * @param fileName Name of the storage file.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"radiankrisno"},"content":"    public Storage(String fileDirectory, String fileName) {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"radiankrisno"},"content":"        this.filePath \u003d fileDirectory + \"/\" + fileName;","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"radiankrisno"},"content":"        this.list \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"radiankrisno"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"radiankrisno"},"content":"            File directory \u003d new File(fileDirectory);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"radiankrisno"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"radiankrisno"},"content":"                directory.mkdir();","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"radiankrisno"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"radiankrisno"},"content":"            File storage \u003d new File(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"radiankrisno"},"content":"            if (!storage.exists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"radiankrisno"},"content":"                storage.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"radiankrisno"},"content":"                writeTaskListToFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"radiankrisno"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"radiankrisno"},"content":"            this.list \u003d loadTaskListFromFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"radiankrisno"},"content":"        } catch (IOException error) {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"radiankrisno"},"content":"            System.out.println(\"Fail to handle file, error: \" + error.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"radiankrisno"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"radiankrisno"},"content":"     * Retrieves the TaskList saved inside the local storage file.","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"radiankrisno"},"content":"     * @return Saved TaskList in the local memory.","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"radiankrisno"},"content":"    private TaskList loadTaskListFromFile() {","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"radiankrisno"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"radiankrisno"},"content":"            ObjectInputStream objectInputStream \u003d new ObjectInputStream(new FileInputStream(this.filePath));","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"radiankrisno"},"content":"            return (TaskList) objectInputStream.readObject();","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"radiankrisno"},"content":"        } catch (IOException error) {","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"radiankrisno"},"content":"            System.out.println(\"Fail to retrieve ArrayList from file, error: \"","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"radiankrisno"},"content":"                    + error.getMessage());","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"radiankrisno"},"content":"        } catch (ClassNotFoundException error) {","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"radiankrisno"},"content":"            System.out.println(\"Object from the file cannot be casted to ArrayList\u003cTask\u003e, error: \"","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"radiankrisno"},"content":"                    + error.getMessage());","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"radiankrisno"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"radiankrisno"},"content":"        return new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"radiankrisno"},"content":"     * Save the current TaskList to local memory.","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"radiankrisno"},"content":"    private void writeTaskListToFile() {","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"radiankrisno"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"radiankrisno"},"content":"            ObjectOutputStream objectOutputStream \u003d new ObjectOutputStream(new FileOutputStream(this.filePath));","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"radiankrisno"},"content":"            objectOutputStream.writeObject(this.list);","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"radiankrisno"},"content":"        } catch (IOException error) {","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"radiankrisno"},"content":"            System.out.println(\"Fail to retrieve ArrayList from file, error: \" + error.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"radiankrisno"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"radiankrisno"},"content":"     * Wrapper function implementation that add task to the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"radiankrisno"},"content":"     * @param task Add a new task to storage.","lastModifiedDate":"2021-08-30"},{"lineNumber":85,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"radiankrisno"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-17"},{"lineNumber":87,"author":{"gitId":"radiankrisno"},"content":"        this.list.addTask(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"radiankrisno"},"content":"        writeTaskListToFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":90,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":91,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"radiankrisno"},"content":"     * Wrapper function implementation that set a specified Task inside TaskList to be done.","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"radiankrisno"},"content":"     * @param index Index of the Task that will be set done.","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"radiankrisno"},"content":"     * @throws DukeException If there is no task with the specified index.","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"radiankrisno"},"content":"    public void setDone(int index) throws DukeException {","lastModifiedDate":"2021-08-17"},{"lineNumber":98,"author":{"gitId":"radiankrisno"},"content":"        this.list.setDone(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"radiankrisno"},"content":"        writeTaskListToFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":101,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":102,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"radiankrisno"},"content":"     * Wrapper function implementation that get a specified Task from TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"radiankrisno"},"content":"     * @param index Index of the Task that will be retrieved.","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"radiankrisno"},"content":"     * @return  Task object with the specified index.","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"radiankrisno"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2021-08-17"},{"lineNumber":109,"author":{"gitId":"radiankrisno"},"content":"        return this.list.getTask(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":111,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":112,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"radiankrisno"},"content":"     * Wrapper function implementation to get the latest Task from the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"radiankrisno"},"content":"     * @return Task object with the last index.","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"radiankrisno"},"content":"    public Task getLastTask() {","lastModifiedDate":"2021-08-17"},{"lineNumber":118,"author":{"gitId":"radiankrisno"},"content":"        return this.list.getLastTask();","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":120,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":121,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"radiankrisno"},"content":"     * Wrapper function implementation that delete Task from the TaskList with the specified index.","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"radiankrisno"},"content":"     * @param index Index of the Task that will be deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"radiankrisno"},"content":"     * @return String representation of the deleted Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"radiankrisno"},"content":"     * @throws DukeException If there is no Task with the specified index.","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":128,"author":{"gitId":"radiankrisno"},"content":"    public String deleteTask(int index) throws DukeException {","lastModifiedDate":"2021-08-17"},{"lineNumber":129,"author":{"gitId":"radiankrisno"},"content":"        String result \u003d this.list.deleteTask(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":130,"author":{"gitId":"radiankrisno"},"content":"        writeTaskListToFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"radiankrisno"},"content":"        return result;","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":135,"author":{"gitId":"radiankrisno"},"content":"     * Wrapper function implementation to get the number of Task in the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":136,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":137,"author":{"gitId":"radiankrisno"},"content":"     * @return The number of Task objects in the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":139,"author":{"gitId":"radiankrisno"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-25"},{"lineNumber":140,"author":{"gitId":"radiankrisno"},"content":"        return this.list.getSize();","lastModifiedDate":"2021-08-25"},{"lineNumber":141,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"radiankrisno"},"content":"    public TaskList findKeyword(String ... keywords) {","lastModifiedDate":"2021-08-31"},{"lineNumber":144,"author":{"gitId":"radiankrisno"},"content":"        return this.list.findKeyword(keywords);","lastModifiedDate":"2021-08-31"},{"lineNumber":145,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":146,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":147,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":148,"author":{"gitId":"radiankrisno"},"content":"     * Return TaskList String representation.","lastModifiedDate":"2021-08-25"},{"lineNumber":149,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":150,"author":{"gitId":"radiankrisno"},"content":"     * @return String representation of TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":151,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":152,"author":{"gitId":"radiankrisno"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":153,"author":{"gitId":"radiankrisno"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":154,"author":{"gitId":"radiankrisno"},"content":"        return this.list.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":155,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":156,"author":{"gitId":"radiankrisno"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"radiankrisno":156}},{"path":"src/main/java/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"radiankrisno"},"content":"package tasklist;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"radiankrisno"},"content":"import java.io.Serializable;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"radiankrisno"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"radiankrisno"},"content":"import exception.DukeException;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"radiankrisno"},"content":"import models.Task;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"radiankrisno"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"radiankrisno"},"content":" * TaskList class that contains all of the tasks that has been inputted by the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"radiankrisno"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"radiankrisno"},"content":"public class TaskList implements Serializable {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"radiankrisno"},"content":"    /** ArrayList that store all of the Task objects. */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"radiankrisno"},"content":"    private final ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"radiankrisno"},"content":"     * Constructor of the TaskList class where we initialize ArrayList which will contain all of the Tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"radiankrisno"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"radiankrisno"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"radiankrisno"},"content":"     * Function to add task to the ArrayList.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"radiankrisno"},"content":"     * @param task Task object that will be added","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"radiankrisno"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"radiankrisno"},"content":"        this.list.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"radiankrisno"},"content":"     * Toggle the isDone boolean inside Task objects.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"radiankrisno"},"content":"     * @param index Index of the task which is going to be set done.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"radiankrisno"},"content":"     * @throws DukeException If there is no task with the specified index.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"radiankrisno"},"content":"    public void setDone(int index) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"radiankrisno"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"radiankrisno"},"content":"            this.list.get(index).setDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"radiankrisno"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"radiankrisno"},"content":"            throw new DukeException(\"There is no task with number \" + (index + 1) + \" in the list\");","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"radiankrisno"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"radiankrisno"},"content":"     * Return task with the specified index from the ArrayList.","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"radiankrisno"},"content":"     * @param index Index of the task that will be retrieved.","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"radiankrisno"},"content":"     * @return Task with the specified index.","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"radiankrisno"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"radiankrisno"},"content":"        return this.list.get(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"radiankrisno"},"content":"     * Return the last Task object in the ArrayList.","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"radiankrisno"},"content":"     * @return Task with the last index.","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"radiankrisno"},"content":"    public Task getLastTask() {","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"radiankrisno"},"content":"        return this.getTask(this.getSize() - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"radiankrisno"},"content":"     * Return the size of the ArrayList.","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"radiankrisno"},"content":"     * @return The number of Tasks in the ArrayList.","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"radiankrisno"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"radiankrisno"},"content":"        return this.list.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"radiankrisno"},"content":"     * Delete the task with specified index and returning the String value of the deleted Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"radiankrisno"},"content":"     * @param index Index of the task that will be deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"radiankrisno"},"content":"     * @return String value of the deleted Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"radiankrisno"},"content":"     * @throws DukeException If there is no task with the specified index.","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"radiankrisno"},"content":"    public String deleteTask(int index) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"radiankrisno"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"radiankrisno"},"content":"            return this.list.remove(index).toString();","lastModifiedDate":"2021-08-30"},{"lineNumber":85,"author":{"gitId":"radiankrisno"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"radiankrisno"},"content":"            throw new DukeException(\"There is no task with number \" + (index + 1) + \" in the list\");","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"radiankrisno"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":91,"author":{"gitId":"radiankrisno"},"content":"     * Function implementation that returns all of the tasks with the matched keyword in a TaskList.","lastModifiedDate":"2021-08-30"},{"lineNumber":92,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":93,"author":{"gitId":"radiankrisno"},"content":"     * @param keywords Keywords that will be searched.","lastModifiedDate":"2021-08-31"},{"lineNumber":94,"author":{"gitId":"radiankrisno"},"content":"     * @return TaskList object with all lists that match the keyword.","lastModifiedDate":"2021-08-30"},{"lineNumber":95,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":96,"author":{"gitId":"radiankrisno"},"content":"    public TaskList findKeyword(String ... keywords) {","lastModifiedDate":"2021-08-31"},{"lineNumber":97,"author":{"gitId":"radiankrisno"},"content":"        TaskList result \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"radiankrisno"},"content":"        for (String keyword: keywords) {","lastModifiedDate":"2021-08-31"},{"lineNumber":99,"author":{"gitId":"radiankrisno"},"content":"            for (int i \u003d 0; i \u003c this.list.size(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"radiankrisno"},"content":"                if (this.list.get(i).toString().contains(keyword)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"radiankrisno"},"content":"                    result.addTask(this.list.get(i));","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"radiankrisno"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"radiankrisno"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"radiankrisno"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":105,"author":{"gitId":"radiankrisno"},"content":"        return result;","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"radiankrisno"},"content":"     * Return TaskList String representation.","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"radiankrisno"},"content":"     * @return String value of the TaskList object.","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"radiankrisno"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"radiankrisno"},"content":"    public String toString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"radiankrisno"},"content":"        String result \u003d \"Here are the tasks in your list!\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"radiankrisno"},"content":"        for (int i \u003d 1; i \u003c this.list.size() + 1; i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"radiankrisno"},"content":"            result +\u003d i + \". \" + this.list.get(i - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"radiankrisno"},"content":"            if (i !\u003d this.list.size()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"radiankrisno"},"content":"                result +\u003d \"\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"radiankrisno"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"radiankrisno"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"radiankrisno"},"content":"        return result;","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"radiankrisno"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"radiankrisno":124}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"radiankrisno"},"content":"package ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"radiankrisno"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"radiankrisno"},"content":" * Ui class that format all output from Dub chatbot","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"radiankrisno"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"radiankrisno"},"content":"public class Ui {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"radiankrisno"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"radiankrisno"},"content":"     * Returns neatly formatted response to the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"radiankrisno"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"radiankrisno"},"content":"     * @param line response from Dub chatbot before formatted.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"radiankrisno"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"radiankrisno"},"content":"    public static void print(String line) {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"radiankrisno"},"content":"        System.out.print(\"\\t\" + line.replace(\"\\n\", \"\\n\\t\")","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"radiankrisno"},"content":"                + \"\\n\\t____________________________________________________________\\n\\n\");","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"radiankrisno"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"radiankrisno":16}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"radiankrisno"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"radiankrisno"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"radiankrisno"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"radiankrisno"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"radiankrisno"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"radiankrisno"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"radiankrisno"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"radiankrisno"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"radiankrisno"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"radiankrisno"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"radiankrisno"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"radiankrisno"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"radiankrisno"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"radiankrisno"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"radiankrisno":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"radiankrisno"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"radiankrisno"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"radiankrisno"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"radiankrisno"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"radiankrisno"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"radiankrisno"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"radiankrisno"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"gui.MainWindow\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"radiankrisno"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"radiankrisno"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"radiankrisno"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"radiankrisno"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"radiankrisno"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"radiankrisno"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"radiankrisno"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"radiankrisno"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"radiankrisno"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"radiankrisno"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"radiankrisno":19}},{"path":"src/test/java/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"radiankrisno"},"content":"package parser;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"radiankrisno"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"radiankrisno"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"radiankrisno"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"radiankrisno"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"radiankrisno"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"radiankrisno"},"content":"import processor.IProcessor;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"radiankrisno"},"content":"import processor.ProcessorStub;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"radiankrisno"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"radiankrisno"},"content":"    private static Parser parser;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"radiankrisno"},"content":"    @BeforeEach","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"radiankrisno"},"content":"    public void setUpEnvironment() {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"radiankrisno"},"content":"        IProcessor processor \u003d new ProcessorStub();","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"radiankrisno"},"content":"        this.parser \u003d new Parser(processor);","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"radiankrisno"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"radiankrisno"},"content":"    public void processCommand_validInput_returnSuccessfully() {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"radiankrisno"},"content":"        //Solution below adapted from https://stackoverflow.com/a/16066777","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"radiankrisno"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"radiankrisno"},"content":"            String command \u003d \"todo something\";","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"radiankrisno"},"content":"            System.setIn(new ByteArrayInputStream(command.getBytes()));","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"radiankrisno"},"content":"            Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"radiankrisno"},"content":"        } catch (Exception error) {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"radiankrisno"},"content":"            fail(\"Should not have thrown any exception\");","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"radiankrisno"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"radiankrisno"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"radiankrisno"},"content":"    public void processCommand_invalidInput_returnSuccessfully() {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"radiankrisno"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"radiankrisno"},"content":"            String command \u003d \"deadline something\";","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"radiankrisno"},"content":"            System.setIn(new ByteArrayInputStream(command.getBytes()));","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"radiankrisno"},"content":"            Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"radiankrisno"},"content":"        } catch (Exception error) {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"radiankrisno"},"content":"            fail(\"Should not have thrown any exception\");","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"radiankrisno"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"radiankrisno"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"radiankrisno":49}},{"path":"src/test/java/processor/ProcessorStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"radiankrisno"},"content":"package processor;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"radiankrisno"},"content":"import java.util.List;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"radiankrisno"},"content":"import models.Command;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"radiankrisno"},"content":"public class ProcessorStub implements IProcessor {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"radiankrisno"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"radiankrisno"},"content":"    public String processCommand(Command command, List\u003cString\u003e arguments) {","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"radiankrisno"},"content":"        return \"\";","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"radiankrisno"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"radiankrisno"},"content":"    public String processDefault(List\u003cString\u003e arguments) {","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"radiankrisno"},"content":"        return \"\";","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"radiankrisno"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"radiankrisno"},"content":"    public String processList() {","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"radiankrisno"},"content":"        return \"\";","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"radiankrisno"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"radiankrisno"},"content":"    public String processDone(String index) {","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"radiankrisno"},"content":"        return \"\";","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"radiankrisno"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"radiankrisno"},"content":"    public String processDelete(String index) {","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"radiankrisno"},"content":"        return \"\";","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"radiankrisno"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"radiankrisno"},"content":"    public String processBye() {","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"radiankrisno"},"content":"        return \"\";","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"radiankrisno"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"radiankrisno"},"content":"    public String processFind(String ... keywords) {","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"radiankrisno"},"content":"        return \"\";","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"radiankrisno"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"radiankrisno":43}},{"path":"src/test/java/processor/ProcessorTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"radiankrisno"},"content":"package processor;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"radiankrisno"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"radiankrisno"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"radiankrisno"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"radiankrisno"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"radiankrisno"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"radiankrisno"},"content":"import models.Command;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"radiankrisno"},"content":"import storage.IStorage;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"radiankrisno"},"content":"import storage.StorageStub;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"radiankrisno"},"content":"public class ProcessorTest {","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"radiankrisno"},"content":"    private static Processor processor;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"radiankrisno"},"content":"    @BeforeEach","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"radiankrisno"},"content":"    public void setUpEnvironment() {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"radiankrisno"},"content":"        IStorage storage \u003d new StorageStub();","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"radiankrisno"},"content":"        processor \u003d new Processor(storage);","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"radiankrisno"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"radiankrisno"},"content":"    public void processCommand_validInput_returnSuccessfully() {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"radiankrisno"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"radiankrisno"},"content":"            processor.processCommand(Command.DEFAULT, new ArrayList\u003c\u003e(Arrays.asList(\"todo test\".split(\" \"))));","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"radiankrisno"},"content":"        } catch (Exception error) {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"radiankrisno"},"content":"            fail(\"Should not have thrown any exception\");","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"radiankrisno"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"radiankrisno"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"radiankrisno"},"content":"    public void processDone_validInput_returnSuccessfully() {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"radiankrisno"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"radiankrisno"},"content":"            processor.processDone(\"1\");","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"radiankrisno"},"content":"        } catch (Exception error) {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"radiankrisno"},"content":"            fail(\"Should not have thrown any exception\");","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"radiankrisno"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"radiankrisno"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"radiankrisno"},"content":"    public void processDelete_validInput_returnSuccessfully() {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"radiankrisno"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"radiankrisno"},"content":"            processor.processDelete(\"1\");","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"radiankrisno"},"content":"        } catch (Exception error) {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"radiankrisno"},"content":"            fail(\"Should not have thrown any exception\");","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"radiankrisno"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"radiankrisno"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"radiankrisno"},"content":"    public void processBye_validInput_returnSuccessfully() {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"radiankrisno"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"radiankrisno"},"content":"            processor.processBye();","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"radiankrisno"},"content":"        } catch (Exception error) {","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"radiankrisno"},"content":"            fail(\"Should not have thrown any exception\");","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"radiankrisno"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"radiankrisno"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"radiankrisno":60}},{"path":"src/test/java/storage/StorageStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"radiankrisno"},"content":"package storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"radiankrisno"},"content":"import exception.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"radiankrisno"},"content":"import models.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"radiankrisno"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"radiankrisno"},"content":"public class StorageStub implements IStorage {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"radiankrisno"},"content":"    private TaskList loadTaskListFromFile() {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"radiankrisno"},"content":"        return new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"radiankrisno"},"content":"    private void writeTaskListToFile() {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"radiankrisno"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"radiankrisno"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"radiankrisno"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"radiankrisno"},"content":"    public void setDone(int index) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"radiankrisno"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"radiankrisno"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"radiankrisno"},"content":"        return new Task(\"\");","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"radiankrisno"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"radiankrisno"},"content":"    public Task getLastTask() {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"radiankrisno"},"content":"        return new Task(\"\");","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"radiankrisno"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"radiankrisno"},"content":"    public String deleteTask(int index) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"radiankrisno"},"content":"        return \"test\";","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"radiankrisno"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"radiankrisno"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"radiankrisno"},"content":"        return 0;","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"radiankrisno"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"radiankrisno"},"content":"    public TaskList findKeyword(String ... keywords) {","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"radiankrisno"},"content":"        return null;","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"radiankrisno"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"radiankrisno":51}},{"path":"src/test/java/tasklist/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"radiankrisno"},"content":"package tasklist;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"radiankrisno"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"radiankrisno"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"radiankrisno"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"radiankrisno"},"content":"import exception.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"radiankrisno"},"content":"import models.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"radiankrisno"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"radiankrisno"},"content":"    private final TaskList list \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"radiankrisno"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"radiankrisno"},"content":"    public void addTask_validInput_addSuccessfully() {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"radiankrisno"},"content":"        this.list.addTask(new Task(\"\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"radiankrisno"},"content":"        assertEquals(1, this.list.getSize());","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"radiankrisno"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"radiankrisno"},"content":"    public void deleteTask_validInput_deleteSuccessfully() {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"radiankrisno"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"radiankrisno"},"content":"            this.list.addTask(new Task(\"\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"radiankrisno"},"content":"            this.list.deleteTask(0);","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"radiankrisno"},"content":"            assertEquals(0, this.list.getSize());","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"radiankrisno"},"content":"        } catch (DukeException error) {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"radiankrisno"},"content":"            fail(\"Should not have thrown any exception\");","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"radiankrisno"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"radiankrisno"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"radiankrisno"},"content":"    public void deleteTask_invalidInput_throwError() {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"radiankrisno"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"radiankrisno"},"content":"            this.list.deleteTask(0);","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"radiankrisno"},"content":"            fail(\"Should have thrown  DukeException\");","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"radiankrisno"},"content":"        } catch (DukeException error) {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"radiankrisno"},"content":"            return;","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"radiankrisno"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"radiankrisno"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"radiankrisno"},"content":"    public void getTask_validInput_getTaskSuccessfully() {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"radiankrisno"},"content":"        Task task \u003d new Task(\"\");","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"radiankrisno"},"content":"        this.list.addTask(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"radiankrisno"},"content":"        Task result \u003d this.list.getTask(0);","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"radiankrisno"},"content":"        assertEquals(task, result);","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"radiankrisno"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"radiankrisno"},"content":"    public void getSize_validInput_returnSizeOfTasklistSuccessfully() {","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"radiankrisno"},"content":"        this.list.addTask(new Task(\"\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"radiankrisno"},"content":"        this.list.addTask(new Task(\"\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"radiankrisno"},"content":"        assertEquals(2, this.list.getSize());","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"radiankrisno"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"radiankrisno":56}},{"path":"src/test/java/ui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"radiankrisno"},"content":"package ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"radiankrisno"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"radiankrisno"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"radiankrisno"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"radiankrisno"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"radiankrisno"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"radiankrisno"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"radiankrisno"},"content":"public class UiTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"radiankrisno"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"radiankrisno"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"radiankrisno"},"content":"    @BeforeEach","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"radiankrisno"},"content":"    public void setUpEnvironment() {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"radiankrisno"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"radiankrisno"},"content":"    @AfterEach","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"radiankrisno"},"content":"    public void restoreEnvironment() {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"radiankrisno"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"radiankrisno"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"radiankrisno"},"content":"    public void print_validString_printSuccessfully() {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"radiankrisno"},"content":"        //Solution below adapted from from https://stackoverflow.com/a/1119559","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"radiankrisno"},"content":"        Ui.print(\"validString\");","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"radiankrisno"},"content":"        assertEquals(\"\\tvalidString\\n\\t____________________________________________________________\\n\\n\",","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"radiankrisno"},"content":"                outContent.toString());","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"radiankrisno"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"radiankrisno"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"radiankrisno":33}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"radiankrisno"},"content":"todo borrow book","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"radiankrisno"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"radiankrisno"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"radiankrisno"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"radiankrisno"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"radiankrisno"},"content":"todo","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"radiankrisno"},"content":"deadline","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"radiankrisno"},"content":"event","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"radiankrisno"},"content":"deadline return Sunday","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"radiankrisno"},"content":"event meeting","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"radiankrisno"},"content":"done 1","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"radiankrisno"},"content":"done 2","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"radiankrisno"},"content":"done 3","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"radiankrisno"},"content":"delete 3","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"radiankrisno"},"content":"delete 1","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"radiankrisno"},"content":"delete 2","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"radiankrisno"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"radiankrisno"},"content":"bye","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"radiankrisno":18}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"radiankrisno"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"radiankrisno":1,"-":20}}]
