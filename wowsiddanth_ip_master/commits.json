{"authorDailyContributionsMap":{"wowsiddanth":[{"date":"2021-08-13","commitResults":[{"hash":"9ec4c50f517eaecc53d66a3d5eb7eeae19284b60","messageTitle":"- First level, first iteration. Added every functionality required.","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":65,"deletions":6}}},{"hash":"efc8749dbf41ac50bd19799e90bbde24743302ee","messageTitle":"Level 2 - Iteration 1. Implemented required features","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":2}}}]},{"date":"2021-08-14","commitResults":[{"hash":"36d22d189c25c068b1564048721f13939f9d9401","messageTitle":"Task 3 - Iteration 1. Worked on all requirements. B","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":51,"deletions":22}}},{"hash":"e539d53be4134b5f9592a5da4e18f6275ab766eb","messageTitle":"Revert \"Task 3 - Iteration 1. Worked on all requirements. B\"","messageBody":"This reverts commit 36d22d189c25c068b1564048721f13939f9d9401.\n","fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":51}}},{"hash":"670b53994729dafea98ac5e24a24b6650e525250","messageTitle":"Task 3 - Iteration 1 Worked on all requirements","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":52,"deletions":20}}},{"hash":"39c1562ec7c7cb9f2e85eeac81e4d6fc117b881d","messageTitle":"Level 3 - Iteration 1 Worked on all requirements","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"935ea224dee6828f841f0e05575e6333f9e27fc1","messageTitle":"Level 3 - Iteration 2 Polished certain features. Changed switch statement to if/else and seperate print statement etcs. into their own methods.","messageBody":"","tags":["Level-3","A-Classes"],"fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":11}}},{"hash":"e034c8c554ccb3e825d6a02ca07e520dd1cbb7b4","messageTitle":"Level 4 - Iteration 1 Basic features added. No functionality yet.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":0}}},{"hash":"1294a4aca24dcc38a4c9dfed6bc8fb0359625c8a","messageTitle":"Level 4 - Iteration 2 Improved functionality","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":76,"deletions":4}}},{"hash":"ed6048b3edb68e7e630e1ae0c2532ff12df46cf1","messageTitle":"Level 4 - Iteration 3 Added some error management and polished features","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":10,"deletions":0},"java":{"insertions":22,"deletions":7}}},{"hash":"faadb34a742e7fd295384a73e3f467e9dcb51bf1","messageTitle":"Level 4 - Iteration 4 Updated the Expected.txt file. Conducted A-TextUiTesting","messageBody":"","tags":["Level-4","A-Inheritance"],"fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":15}}},{"hash":"5534340b98cf429a9651f2a547792375d049ceee","messageTitle":"Level 4 - Iteration 5 Update test files. Update name.","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":1},"java":{"insertions":23,"deletions":12},"bat":{"insertions":1,"deletions":1}}},{"hash":"a5edaa7e00011c178391e4c10a88bc46803e5e9a","messageTitle":"Level 5 - Iteration 1 Add basic implementation. Add exceptions","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":57,"deletions":33}}},{"hash":"5565335aa8881573e6972a2b0b54229c86ff3e17","messageTitle":"Level 5 - Iteration 2 Change try/catch block. Minor improvements","messageBody":"","tags":["Level-5","A-Exceptions"],"fileTypesAndContributionMap":{"java":{"insertions":44,"deletions":30}}},{"hash":"e4bccf1da261ba364468ed9602e524952535703b","messageTitle":"Level 6 - Iteration 1 Add delete. Minor improvements","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":42,"deletions":15}}},{"hash":"7bb432efbff2d84b39967c4c9a9f3e239363fa98","messageTitle":"Level 6 - Iteration 2 Remove some statements from Try/Catch","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":11}}},{"hash":"658921d24df2dc7439d436b4ef9c8295ec18420f","messageTitle":"Level 6 - Iteration 3 Change PetalException message","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}}]},{"date":"2021-08-15","commitResults":[{"hash":"34a5fd7678d04b33cb4bd91847951a488a2ba6e5","messageTitle":"Level 6 - Iteration 4 Update major changes","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0},"java":{"insertions":50,"deletions":48},"bat":{"insertions":2,"deletions":1}}},{"hash":"045a6768f0ad17d4e2311c660225a98e135440c8","messageTitle":"Level 6 - Iteration 5 Add JavaDocs, New method for processing request","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":86,"deletions":14}}},{"hash":"518adb00ed5dd59de094d4c2974de4acf2d9566e","messageTitle":"Level 6 - Iteration 6 Made changes to certain how handleTask works. Add trimming to messages to allow messages with whitespaces to still work.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":57,"deletions":54},"bat":{"insertions":1,"deletions":2}}}]},{"date":"2021-08-16","commitResults":[{"hash":"c64a857b5e2213bfe07b4673e5a9ebbce212fbe1","messageTitle":"Level 6 - Iteration 7 Made minor changes to the documentation. Changed the exception thrown by the deleteTask() method.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":43,"deletions":20}}},{"hash":"ab7fa52a3f2e4a0e80919515178c84d4f529d706","messageTitle":"Level 6 - Iteration 8 Update logic behind message handling. Move scanner to within the Petal class Wrap Java exceptions with own exception class for Java exceptions","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":63,"deletions":76}}},{"hash":"fcff855efe413781c18c1952537a74d5382921f7","messageTitle":"Level 6 - Iteration 9 Update exception to act like wrapper exceptions as well Change code to wrap some exception as PetalException and its sub exceptions Add test cases to test Update EXPECTED.txt to check as well","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":6,"deletions":1},"java":{"insertions":54,"deletions":12}}}]},{"date":"2021-08-17","commitResults":[{"hash":"191b29b82d12a8e17e1bcf13c7c0928b525a12f9","messageTitle":"Level 6 - Iteration 10 Add capital words to be used as well Add method to capitalize first letter for output for nicer output Remove string/cause fields for custom exceptions Add more test cases to test capitalized input, and wrong format","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":5,"deletions":0},"java":{"insertions":18,"deletions":23},"bat":{"insertions":3,"deletions":1}}},{"hash":"cc3ed11549cb8b0aa39d5ea2f0199318911a18cf","messageTitle":"Level 6 - Iteration 11 Change description of Petal class Add A-Collections, A-Inheritance, A-Exceptions, A-Classes tags as these were not added before","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1},"bat":{"insertions":0,"deletions":2}}},{"hash":"4d6e817889cd4962ce82ec58dc434e95c0fc5c53","messageTitle":"Level 6 - Iteration 12 Add test cases and change Expected accordingly Change name of Indentation to LINE Rename start() to run() Add function printMessage() to handle output Change name of formatMessage() to handleInput()","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":57,"deletions":57}}}]},{"date":"2021-08-18","commitResults":[{"hash":"a7608ed563034cfcc31689d28462fe944eb06906","messageTitle":"Level 6 - Iteration 12 Minor bug fixes, where first letter of time was not capitalized","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}}]},{"date":"2021-08-19","commitResults":[{"hash":"6ec57338c764aebaba7b1cce28a8928124422df9","messageTitle":"Level 6 - FINAL Minor changes to format of done/task add messages Change descriptions of classes to be more descriptive Add more test cases to input for thorough testing Changed expected accordingly","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":1},"java":{"insertions":34,"deletions":40}}},{"hash":"61db5b705abe57cf0115c67f5dd0d74bc534f3a1","messageTitle":"Level 6 - FINAL Minor changes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":5}}}]},{"date":"2021-08-21","commitResults":[{"hash":"a41696e14f04af92f38adf2c00d06dcc3c62af4e","messageTitle":"Add basic saving features","messageBody":"The bot does not have any way to save the given tasks. This results in the user having\nto repeatedly enter his tasks.\n\nAdd saving mechanisms. Create the relevant folder and file (createDirectory()). Write the\ntasks into the .txt file (retrieveTasks()) and read from it when the bot start (if possible).\n\nIt is being done this way as having multiple methods handle the writing/reading aspect\nincreasing debugging ability and readability.\n","fileTypesAndContributionMap":{"java":{"insertions":108,"deletions":17}}},{"hash":"32306d05cf68ae428197eef1d5face2d2315c6bb","messageTitle":"Format and abstract response, fix bugs","messageBody":"Some responses are quite long and cluttered up the Petal class, reducing readability.\nThe strings returned by some methods (Task toString()) and printList() are not in the\nformat required for saving. There are bugs in the displayed list after accessing saved tasks\nbecause of the wrong format being used to save the tasks.\n\nAdd abstract methods strForSaving() that returns a string representation for the task in the\nproper format (e.g. T|X|go for a run). Add formatForSaving() that prints using this method.\n\nUsed enums as it always for constants and used abstract methods to take advantage\nof polymorphism.\n","tags":["Level-7"],"fileTypesAndContributionMap":{"java":{"insertions":149,"deletions":81}}},{"hash":"3bae3fe0c4370315609cb93dbb7d4cc6104c1e8f","messageTitle":"Add time feature and add test cases","messageBody":"The code can only handle time in a string form, and is unable to do anything more with it.\n\nStore time as a LocalDate and LocalTime object. Add additional test cases to test for bugs\nin time input.\n\nStoring time as a LocalDate and LocalTime object gives much more flexibility. allowing\nPetal to display time in a specific format, and in the future, track events based on the data\n","fileTypesAndContributionMap":{"txt":{"insertions":12,"deletions":4},"java":{"insertions":80,"deletions":33}}}]},{"date":"2021-08-22","commitResults":[{"hash":"49292e9a886dd856084327d71b3bbb66eeefb0ff","messageTitle":"Retrieve tasks on given date (deadline)","messageBody":"Petal can only associate a deadline with a given task, but cannot return an output\nwith all the deadline on a given day.\n\nAdd HashMap. Use static method that takes in a date and returns string\nrepresentation of value stored at date.\n\nThe HashMap allows for the use of key-value pairs that will store the corresponding dead-\nlines at that date. Public static method will allow the method to be called from the Petal\nclass and return the string representation.\n","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":0},"java":{"insertions":46,"deletions":3}}},{"hash":"b4832b3ed5215ea057f90672d88e2b6dc3c28132","messageTitle":"Retrieve events and deadlines on given date","messageBody":"The code can only retrieve deadlines on a specified date, but not events.\n\nAdd similar methods to event class to parse given input into date, start time, and end time.\nUse hashmap to keep track of events on that date.\n\nSimilar reasons to the deadline commit. Refers to the prefer commit for more information.\n","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":107,"deletions":30}}},{"hash":"58e24ec1739d4e020549c9411ef763d07f1aaa41","messageTitle":"Add more OOP","messageBody":"The bot now does everything via the Petal class and few other classes. Many process can\nbe abstracted under their own classes.\n\nCreate 4 new classes: Parser, Storage, TaskList, and Ui. Separate methods and fields into\nrespective classes.\n\nSeparating the bots into these classes allows me to model the bot as the interactions\nbetween these components.\n","tags":["A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":363,"deletions":312}}},{"hash":"65502f1db85d948a224dbd658e744b9e3f3904ab","messageTitle":"Organize into packages","messageBody":"Program now is using the default package.\n\nCreate different packages (petal, petal.exception, petal.task, petal.components).\nSeparate classes into respective packages.\n\nPackages will lead to easier management.\n","fileTypesAndContributionMap":{"java":{"insertions":43,"deletions":1}}},{"hash":"4df0f111df36846f64384850e6dbe15fab6116ce","messageTitle":"Update test cases and change runtest.bat","messageBody":"Outdated test cases and runtest doesn\u0027t work because of packages\n\nUpdate test cases. Add paths of packages.\n","tags":["A-Packages"],"fileTypesAndContributionMap":{"bat":{"insertions":5,"deletions":7}}}]},{"date":"2021-08-23","commitResults":[{"hash":"ffcfc7cb9bdc18d86e8ed4fa77c0c9a403550685","messageTitle":"Abstract more OOP","messageBody":"Code still had elements that could be abstracted out, especially commands.\n\nCreate more class corresponding to their specific function, like ByeCommand etc. Place\nthese classes in the Command package.\n\nIt allows for:\n * the code specific to this command to be abstracted out to its own class and\n   added to the command package\n * Takes advantage of runtime polymorphism as the execute() is\n   overridden and has different effects at runtime.\n","fileTypesAndContributionMap":{"txt":{"insertions":30,"deletions":35},"java":{"insertions":340,"deletions":56},"bat":{"insertions":2,"deletions":0}}},{"hash":"8bc579023f8c2651210933e20b50a7fb7dade22a","messageTitle":"Fix bugs and move scanner","messageBody":"After abstraction, the bye command no longer works.\n\nAdd public method in Petal to terminate bot. Move scanner to Ui class as part of\nOOP.\n\nThe public method allows the Ui class to toggle the boolean Bye, turning it off and moving\nthe scanner to Ui allows for better abstraction.\n","fileTypesAndContributionMap":{"txt":{"insertions":30,"deletions":30},"java":{"insertions":43,"deletions":43},"bat":{"insertions":2,"deletions":2}}},{"hash":"35cb86906c81d66ac2bac4702b22cd8c2a32603b","messageTitle":"Add junit tests and clean up imports","messageBody":"No junit tests and some unused imports statements.\n\nCreate junit tests and corresponding stubs for unit testing. Delete import statements.\n\nStubs allow for unit testing by isolating classes.\n","tags":["A-MoreOOP","A-Jar","A-JUnit"],"fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":0},"java":{"insertions":172,"deletions":57}}},{"hash":"ce6812d35a89cc1a19f00fc14ea2c292f655fcb9","messageTitle":"Change line characters","messageBody":"Flower characters cannot be displayed properly on terminal\n\nChange characters from \u0027ꕤ\u0027 to \u0027\u003d\u0027\n","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"e0751eb3a4418b943166c63e3d1026fd65a69426","messageTitle":"Add javadoc, fix bug, and abstract calendar class","messageBody":"Some methods do not have Javadocs. Bug where delete task did not disappear from\nthe date. The way tasks are stored with dates is inefficient.\n\nAdd documentation for the remaining methods. Fix the bug related to the task.\nAdd calendar class and perform date-related operation using it..\n\nAdding a calendar class allows for more abstraction.\n","fileTypesAndContributionMap":{"txt":{"insertions":8,"deletions":0},"java":{"insertions":422,"deletions":143}}}]}]},"authorFileTypeContributionMap":{"wowsiddanth":{"java":1523,"md":0,"fxml":0,"sh":0,"bat":6,"gradle":0,"txt":39}},"authorContributionVariance":{"wowsiddanth":165376.08},"authorDisplayNameMap":{"wowsiddanth":"CS2103T-T11-1 SIDD..LKAR"}}
