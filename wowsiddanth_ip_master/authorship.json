[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"# Petal ðŸŒ¸","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"\u003e *In joy or sadness, flowers are our constant friends.*","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"\u003e **Okakura Kakuzo**","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"It\u0027s okay. Petal is here. Drop your worries and sink into the petals of relief; Petal is here for you.","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"Petal has the following abetments: ","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"* Text-based ","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"* Simple commands","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"* Task tracking","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"## Installation","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"A logical thing you might do is wonderâ€”*how do I install Petal*?","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"There are two methods:","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"      ","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"### 1. Run it in an IDE","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"1. Go to this [link](https://github.com/wowsiddanth/ip).","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"2. Download the folder.","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"3. Open it in IntelliJ or your favorite IDE.","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"4. Then, under the Petal class. add the following main method:","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"```java","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"public static void main(String[] args) {","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"        Petal p \u003d new Petal();","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"        p.run(); ","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":" }","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"```","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"### 2. Run the .jar file","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"1. Go to this [link](https://github.com/wowsiddanth/ip).","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"2. Under the __Releases__ tab, open __A-Jar__ and download the .jar file.","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"3. Download the folder.","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"4. Open command prompt from that folder, or your favorite IDE.","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"5. Then, type this into the command prompt: `java -jar iP.jar`","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"## Features","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"Petal can:","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"- [X] Keep track of tasks","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"- [X] Keep track of the dates of tasks, including deadlines and events.","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"- [ ] Set reminders (coming soon)","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"wowsiddanth":35,"-":5}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"    ","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"    mainClassName \u003d \"petal.Petal\"; //\"petal.duke.Duke\"","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"wowsiddanth":16,"-":45}},{"path":"src/main/java/petal/Petal.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import petal.command.Command;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Parser;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":" * The class for the Petal bot. It is able to respond to","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":" * a certain number of pre-determined commands in order to add certain","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":" * activities and track them.","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":" * @author Siddanth","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"public class Petal {","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"    //Components of the Petal instance","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"    private final Parser parser;","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"    private final TaskList taskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"     * Constructor for the Petal class","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"    public Petal() {","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"        taskList \u003d new TaskList(ui);","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"        storage \u003d new Storage(taskList, ui);","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"     * Returns either start message or welcome back message","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"     * @return String greeting the user","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"    public String greetUser() {","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"        //It calls createDirectory as it has to check if user has used Petal before","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"        return storage.createDirectory();","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"     * Starts the Petal instance","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"    public void run(String message) {","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"        Command command \u003d parser.handleInput(message);","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"wowsiddanth"},"content":"        command.execute(taskList, ui, storage);","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-13"},{"lineNumber":51,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"wowsiddanth":51}},{"path":"src/main/java/petal/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":" * The ByeCommand class implements Command","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":" * and handles the termination of the Petal bot","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"public class ByeCommand implements Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"     * Terminates the running Petal instance","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"     * @param taskList TaskList instance","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"     * @param ui Ui instance","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"     * @param storage Storage instance","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"            storage.saveTasks();","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"            ui.output(\"Sorry, the task couldn\u0027t be saved :/\");","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"        } finally {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"            ui.sayGoodbye();","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wowsiddanth":33}},{"path":"src/main/java/petal/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":" * The Command interface represents all Command","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"public interface Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"     * Executes the given command","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"     * @param taskList TaskList instance","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"     * @param ui Ui instance","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"     * @param storage Storage instance","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"    void execute(TaskList taskList, Ui ui, Storage storage);","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wowsiddanth":21}},{"path":"src/main/java/petal/command/DateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"import petal.exception.InvalidInputException;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":" * The DateCommand class implements Command","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":" * and handles displayed tasks on the given date","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"public class DateCommand implements Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"    private final String input;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"     * Constructs a DateCommand instance","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"     * @param input The given input","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"    public DateCommand(String input) {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"     * Displays all the tasks on the given date","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"     * @param taskList TaskList instance","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"     * @param ui Ui instance","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"     * @param storage Storage instance","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"            taskList.showTaskOnDate(input);","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"            ui.output(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wowsiddanth":40}},{"path":"src/main/java/petal/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Responses;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"import petal.exception.InvalidInputException;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":" * The DeleteCommand class implements Command","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":" * and handles the deletion of tasks","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"    private final String input;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"     * Constructs a DeleteCommand instance","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"     * @param input The given class","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"    public DeleteCommand(String input) {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"     * Deletes the task corresponding to the input","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"     * @param taskList TaskList instance","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"     * @param ui Ui instance","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"     * @param storage Storage instance","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"            taskList.deleteTask(input);","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"            ui.output(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"            ui.output(Responses.REQUIRED_FORMAT);","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wowsiddanth":42}},{"path":"src/main/java/petal/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Responses;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"import petal.exception.InvalidInputException;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":" * The DoneCommand class implements Command and deals","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":" * with marking the corresponding Task as done","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"public class DoneCommand implements Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"    private final String input;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"     * Constructs a DoneCommand instance","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"     * @param input The input in question","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"    public DoneCommand(String input) {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"     * Marks the given task as done","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"     * @param taskList TaskList instance","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"     * @param ui Ui instance","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"     * @param storage Storage instance","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"            taskList.markTaskAsDone(input);","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"            ui.output(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"            ui.output(Responses.REQUIRED_FORMAT);","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wowsiddanth":42}},{"path":"src/main/java/petal/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"import petal.exception.InvalidInputException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":" * The FindCommand implements Command","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":" * and handles the finding of keywords in tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"    private final String input;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"     * Constructs a FindCommand instance","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"     * @param input The given input","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"    public FindCommand(String input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"     * Finds the task with the given keyword","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"     * @param taskList TaskList instance","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"     * @param ui Ui instance","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"     * @param storage Storage instance","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"            taskList.findTaskWithKeyword(input);","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"            ui.output(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"wowsiddanth":40}},{"path":"src/main/java/petal/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":" * The ListCommand implements Command and handles","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":" * displayed the list of tasks to the user","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"     * Prints the current list of tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"     * @param taskList TaskList instance","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"     * @param ui Ui instance","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"     * @param storage Storage instance","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"        ui.output(taskList.printList());","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wowsiddanth":24}},{"path":"src/main/java/petal/command/TaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Responses;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"import petal.exception.EmptyDescException;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"import petal.exception.InvalidInputException;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":" * The TaskCommand implements Command and deals","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":" * with handling commands related to task creation","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"public class TaskCommand implements Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"    private final String type;","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"    private final String input;","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"     * Constructs a TaskCommand instance","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"     * @param type The type of Task","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"     * @param input The input","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"    public TaskCommand(String type, String input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"     * Creates the corresponding Task object","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"     * @param taskList TaskList instance","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"     * @param ui Ui instance","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"     * @param storage Storage instance","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"            taskList.handleTask(type, input);","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"        } catch (EmptyDescException | InvalidInputException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"            ui.output(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"            ui.output(Responses.REQUIRED_FORMAT);","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wowsiddanth":47}},{"path":"src/main/java/petal/command/UnintelligibleCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Responses;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":" * The UnintelligibleCommand implements Command and","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":" * deals with commands that cannot be made sense of","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"public class UnintelligibleCommand implements Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"     * Displays message to user informing them that the input was unintelligible","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"     * @param taskList TaskList instance","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"     * @param ui Ui instance","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"     * @param storage Storage instance","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"        ui.output(Responses.UNINTELLIGIBLE);","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"        ui.output(Responses.REQUIRED_FORMAT);","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wowsiddanth":26}},{"path":"src/main/java/petal/components/Calendar.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.components;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"import java.util.List;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"import java.util.Optional;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"import petal.exception.InvalidInputException;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"import petal.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"import petal.task.Timeable;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":" * The Calendar class encapsulates a calendar, where tasks","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":" * have dates, and can be retrieved and added by date","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"public class Calendar {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"    private HashMap\u003cLocalDate, ArrayList\u003cTimeable\u003e\u003e dateAndTimeables;","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"     * Constructs a Calendar instance","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"    public Calendar() {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"        dateAndTimeables \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"     * Adds a Timeable object to the calendar","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"     * @param timeable The Timeable to be added","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"    public void addToCalendar(Timeable timeable) {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"        LocalDate date \u003d timeable.getDate();","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"        //Optional handles null case","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"        Optional\u003cArrayList\u003cTimeable\u003e\u003e current \u003d Optional.ofNullable(dateAndTimeables.get(date));","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"        if (current.isPresent()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"            current.get().add(timeable);","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"            ArrayList\u003cTimeable\u003e lists \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"            lists.add(timeable);","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"            dateAndTimeables.put(date, lists);","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"     * Returns the String representation of all the Timeables on that date","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"     * @param date date to be used","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"wowsiddanth"},"content":"    public String showTasksOnDate(LocalDate date) throws InvalidInputException {","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"wowsiddanth"},"content":"        int count \u003d 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"wowsiddanth"},"content":"        Optional\u003cArrayList\u003cTimeable\u003e\u003e current \u003d Optional.ofNullable(dateAndTimeables.get(date));","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"wowsiddanth"},"content":"        if (current.isPresent()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"wowsiddanth"},"content":"            StringBuilder result \u003d new StringBuilder(\"Here are the tasks on this date: \");","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"wowsiddanth"},"content":"            for (Timeable d: current.get()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"wowsiddanth"},"content":"                result.append(\"\\n\").append(count++).append(\". \").append(d);","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"wowsiddanth"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"wowsiddanth"},"content":"            return result.toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"wowsiddanth"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"wowsiddanth"},"content":"            return \"No tasks on this date!\";","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"wowsiddanth"},"content":"     * Updates the calendar","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"wowsiddanth"},"content":"     * @param newList The new arraylist of Tasks, which will be used to update the calendar","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"wowsiddanth"},"content":"    public void updateCalendar(List\u003cTask\u003e newList) {","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"wowsiddanth"},"content":"        dateAndTimeables \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"wowsiddanth"},"content":"        for (Task t: newList) {","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"wowsiddanth"},"content":"            if (t.isTimeable()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"wowsiddanth"},"content":"                addToCalendar((Timeable) t);","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"wowsiddanth"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wowsiddanth":79}},{"path":"src/main/java/petal/components/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.components;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"import petal.command.ByeCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"import petal.command.Command;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"import petal.command.DateCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"import petal.command.DeleteCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"import petal.command.DoneCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"import petal.command.FindCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"import petal.command.ListCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"import petal.command.TaskCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"import petal.command.UnintelligibleCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":" * The Parser deals with comprehending the user\u0027s input","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"public class Parser {","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"     * Comprehends the user input.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"     * It splits the input and takes the first word (assumed to be command if format followed)","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"     * and reacts accordingly.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"     * @param message User input","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"    public Command handleInput(String message) {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"        message +\u003d \" \"; //So blank inputs can be handled","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"        String command \u003d message.substring(0, message.indexOf(\" \"));","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"        String formatted \u003d message.substring(message.indexOf(\u0027 \u0027) + 1).trim();","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"        switch (command) { //Checks first word in string","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"        case \"list\":","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"            return new ByeCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"        case \"done\":","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"            return new DoneCommand(formatted);","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"            return new DeleteCommand(formatted);","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"        case \"event\":","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"            //Fallthrough","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"            return new TaskCommand(command, formatted);","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"        case \"date\":","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"wowsiddanth"},"content":"            return new DateCommand(formatted);","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"        case \"find\":","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"wowsiddanth"},"content":"            return new FindCommand(formatted);","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"wowsiddanth"},"content":"        default:","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"wowsiddanth"},"content":"            return new UnintelligibleCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"wowsiddanth"},"content":"     * Parses a given string (if given correctly), creating a LocalTime object","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"wowsiddanth"},"content":"     * It is static as it is available to any object that wants to parse time","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"wowsiddanth"},"content":"     * @param time The given String","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"wowsiddanth"},"content":"     * @return LocalTime object","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"wowsiddanth"},"content":"     * @throws DateTimeParseException Thrown if string cannot be represented as a time object","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"wowsiddanth"},"content":"    public static LocalTime parseTime(String time) throws DateTimeParseException {","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"wowsiddanth"},"content":"        String formattedTime \u003d time.indexOf(\":\") \u003e 0 ? time","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"wowsiddanth"},"content":"               : time.substring(0, 2) + \":\" + time.substring(2);","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"wowsiddanth"},"content":"        return LocalTime.parse(formattedTime);","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"wowsiddanth"},"content":"     * Parses a given string (if given correctly), creating a LocalDate","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"wowsiddanth"},"content":"     * It is static as it is available to any object that wants to parse time","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"wowsiddanth"},"content":"     * @param date The given String","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"wowsiddanth"},"content":"     * @return LocalDate Object","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"wowsiddanth"},"content":"     * @throws DateTimeParseException Thrown if string cannot be represented as a Date object","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"wowsiddanth"},"content":"    public static LocalDate parseDate(String date) {","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"wowsiddanth"},"content":"        String[] dayMonthYear \u003d date.split(\"/\");","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"wowsiddanth"},"content":"        if (dayMonthYear[0].length() \u003d\u003d 1) { //if user types 2/12/2019 -\u003e 02/12/2019","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"wowsiddanth"},"content":"            dayMonthYear[0] \u003d \"0\" + dayMonthYear[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"wowsiddanth"},"content":"        return LocalDate.parse(dayMonthYear[2] + \"-\" + dayMonthYear[1] + \"-\" + dayMonthYear[0]);","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"wowsiddanth":86}},{"path":"src/main/java/petal/components/Responses.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.components;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":" * The Enum that holds all the responses that user might see, as these responses","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":" * remain a constant","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"public enum Responses {","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"    //Starting bot responses","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"    WELCOME_BACK(\"Welcome back! It definitely is good to see you again :D\"),","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"    START_MESSAGE(\"Welcome to Petal!\" + \"\\nI am the best chat bot you\u0027ll meet! Don\u0027t be shy, \"","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"                + \"say something! :P\\nPssss here\u0027s a disclaimer: \"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"                + \"use the \u0027bye\u0027 command to exit or else your tasks won\u0027t save properly!\"),","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"    //Error responses","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"    INVALID_FORMAT(\"Invalid format given! Please try again :(\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"    INVALID_TASK_NO(\"Invalid task number given! Please enter another value!\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"    EMPTY_DESCRIPTION(\"The description cannot be empty! Enter a valid one! :(\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"    INVALID_DATE_TIME(\"The date/time format used was wrong! Try again :(\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"    UNINTELLIGIBLE(\"I do not understand what you mean :(\"),","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"    REQUIRED_FORMAT(\"Use \u0027todo \u003cinsert activity\u003e\u0027 to create a to-do!\"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"                + \"\\nUse \u0027deadline \u003cinsert activity\u003e /by \u003cDD/MM/YYYY\u003e \u003cTime in 24-hour format\u003e\u0027 \"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"                + \"to create an activity with a deadline!\"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"                + \"\\nUse \u0027event \u003cinsert activity\u003e /at \u003cDD/MM/YYYY\u003e \u003cStart Time\u003e \u003cEnd Time\u003e\u0027 \"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"                + \"to create an activity with a start/end time!\"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"                + \"\\nUse \u0027delete \u003cinsert task number\u003e to delete a task!\"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"                + \"\\nUse \u0027date \u003cDD/MM/YYYY\u003e\u0027 to get the tasks on that date!\"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"                + \"\\nUse \u0027done \u003cinsert task number\u003e\u0027 to mark task as done!\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"    INVALID_TASK_NUMBER(\"Invalid task number given! Please enter another value!\"),","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"    FILE_ERROR(\"Something when wrong whilst creating/accessing these files :/\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"                + \"As such, the saving/retrieval of tasks will be turned off. Sorry!\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"    SAVE_ERROR(\"Sorry, the tasks couldn\u0027t be saved properly :/\u0027\"),","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"    //Termination responses","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"    GOODBYE(\"You\u0027re leaving :( I hope you return soon!\");","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"    private final String response;","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"     * Constructs a Response instance","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"     * @param response The String response","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"    Responses(String response) {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"        this.response \u003d response;","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"    public String toString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"wowsiddanth"},"content":"        return this.response;","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"wowsiddanth":51}},{"path":"src/main/java/petal/components/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.components;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import java.io.File;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"import java.util.Objects;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"import petal.task.Deadline;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"import petal.task.Event;","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"import petal.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"import petal.task.ToDo;","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":" * The Storage that handles all the operation dealing with the creation of directories,","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":" * files, saving of tasks, and the retrieval of previously saved tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"public class Storage {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"    //True if folder and file for saving could be created properly","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"    private boolean isLocationPresent;","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"    //Paths of the location of storage","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"    private final String folderPath;","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"    private final String filePath;","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"    private final TaskList taskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"     * Constructs a Storage instance","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"     * @param taskList Instance of TaskList being used","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"     * @param ui The Ui instance being used","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"    public Storage(TaskList taskList, Ui ui) {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"        this.folderPath \u003d System.getProperty(\"user.dir\") + \"/PetalData\";","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"        this.filePath \u003d folderPath + \"/Tasks.txt\";","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"        isLocationPresent \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"wowsiddanth"},"content":"     * Creates the main PetalData folder, containing Tasks.txt","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"wowsiddanth"},"content":"     * @return String greeting the user","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"wowsiddanth"},"content":"    public String createDirectory() {","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"wowsiddanth"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"wowsiddanth"},"content":"            if (retrieveTasks()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"wowsiddanth"},"content":"                return Responses.WELCOME_BACK.toString();","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"wowsiddanth"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"wowsiddanth"},"content":"            Path path \u003d Paths.get(folderPath);","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"wowsiddanth"},"content":"            Files.createDirectories(path);","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"wowsiddanth"},"content":"            File petalData \u003d new File(filePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"wowsiddanth"},"content":"            petalData.createNewFile();","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"wowsiddanth"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"wowsiddanth"},"content":"            isLocationPresent \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"wowsiddanth"},"content":"            return Responses.FILE_ERROR.toString();","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"wowsiddanth"},"content":"        return Responses.START_MESSAGE.toString();","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"wowsiddanth"},"content":"     * Parses the text from Tasks.txt in tasks and retrieves it as tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"wowsiddanth"},"content":"     * @return True if tasks were retrieved, false if no tasks (new user) or exception occurred","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"wowsiddanth"},"content":"    public boolean retrieveTasks() {","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"wowsiddanth"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"wowsiddanth"},"content":"            File tasks \u003d new File(filePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"wowsiddanth"},"content":"            Scanner scanner \u003d new Scanner(tasks);","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"wowsiddanth"},"content":"            ArrayList\u003cTask\u003e addPasts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-30"},{"lineNumber":80,"author":{"gitId":"wowsiddanth"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"wowsiddanth"},"content":"                String taskLine \u003d scanner.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"wowsiddanth"},"content":"                String[] components \u003d taskLine.split(\"\\\\|\");","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"wowsiddanth"},"content":"                boolean isDone \u003d Objects.equals(components[1], \"X\");","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"wowsiddanth"},"content":"                switch (components[0]) {","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"wowsiddanth"},"content":"                case \"T\":","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"wowsiddanth"},"content":"                    addPasts.add(new ToDo(components[2], isDone));","lastModifiedDate":"2021-08-30"},{"lineNumber":87,"author":{"gitId":"wowsiddanth"},"content":"                    break;","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"wowsiddanth"},"content":"                case \"D\":","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"wowsiddanth"},"content":"                    addPasts.add(new Deadline(components[2], components[3], isDone));","lastModifiedDate":"2021-08-30"},{"lineNumber":90,"author":{"gitId":"wowsiddanth"},"content":"                    break;","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"wowsiddanth"},"content":"                case \"E\":","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"wowsiddanth"},"content":"                    addPasts.add(new Event(components[2], components[3], isDone));","lastModifiedDate":"2021-08-30"},{"lineNumber":93,"author":{"gitId":"wowsiddanth"},"content":"                    break;","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"wowsiddanth"},"content":"                default:","lastModifiedDate":"2021-08-28"},{"lineNumber":95,"author":{"gitId":"wowsiddanth"},"content":"                    break;","lastModifiedDate":"2021-08-28"},{"lineNumber":96,"author":{"gitId":"wowsiddanth"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"wowsiddanth"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"wowsiddanth"},"content":"            taskList.addTask(addPasts);","lastModifiedDate":"2021-08-30"},{"lineNumber":99,"author":{"gitId":"wowsiddanth"},"content":"            scanner.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"wowsiddanth"},"content":"            return true;","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"wowsiddanth"},"content":"        } catch (FileNotFoundException | NoSuchElementException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"wowsiddanth"},"content":"            return false;","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":107,"author":{"gitId":"wowsiddanth"},"content":"     * Saves the tasks in the task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"wowsiddanth"},"content":"     * If the folder/file couldn\u0027t be created properly, the bot doesn\u0027t save the tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"wowsiddanth"},"content":"     * @throws IOException Thrown if tasks are not saved properly","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":112,"author":{"gitId":"wowsiddanth"},"content":"    public void saveTasks() throws IOException {","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"wowsiddanth"},"content":"        if (!isLocationPresent) {","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"wowsiddanth"},"content":"            return;","lastModifiedDate":"2021-08-22"},{"lineNumber":115,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":116,"author":{"gitId":"wowsiddanth"},"content":"        FileWriter fileWriter \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":117,"author":{"gitId":"wowsiddanth"},"content":"        fileWriter.write(taskList.formatForSaving());","lastModifiedDate":"2021-08-22"},{"lineNumber":118,"author":{"gitId":"wowsiddanth"},"content":"        fileWriter.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":119,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":121,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"wowsiddanth":123}},{"path":"src/main/java/petal/components/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.components;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"import java.util.List;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"import petal.exception.EmptyDescException;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"import petal.exception.InvalidInputException;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"import petal.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"import petal.task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"import petal.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"import petal.task.Timeable;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"import petal.task.ToDo;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":" * The TaskList class represents the tasks, and handles the operations","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":" * done to the tasks","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"public class TaskList {","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"    private final Calendar calendar;","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"     * Constructs a TaskList instance","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"     * @param ui The instance of Ui used","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"    public TaskList(Ui ui) {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"        calendar \u003d new Calendar();","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"     * Adds the list of previously saved tasks to the list of tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"     * @param addTasks The arraylist of previously saved tasks","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"    public void addTask(ArrayList\u003cTask\u003e addTasks) {","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"        tasks.addAll(addTasks);","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"        ui.output(Responses.WELCOME_BACK);","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"     * Adds a task to the list of tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"     * @param task The task to be added","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"wowsiddanth"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"wowsiddanth"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"wowsiddanth"},"content":"        String plural \u003d (tasks.size() + 1) \u003e 0 ? \" tasks!\" : \" task!\";","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"wowsiddanth"},"content":"        ui.output(\"Okay. I\u0027ve added this task:\\n\" + task + \"\\nYou now have \" + tasks.size() + plural);","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"wowsiddanth"},"content":"     * Deletes a task from the list of tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"wowsiddanth"},"content":"     * @param index The message given by the user input","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"wowsiddanth"},"content":"     * @throws InvalidInputException Thrown if no index inputted by the user or","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"wowsiddanth"},"content":"     *                               when index is out-of-bounds/not valid int or when","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"wowsiddanth"},"content":"     *                               desc is empty","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"wowsiddanth"},"content":"    public void deleteTask(String index) throws InvalidInputException {","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"wowsiddanth"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"wowsiddanth"},"content":"            int indexOfTask \u003d Integer.parseInt(index) - 1;","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"wowsiddanth"},"content":"            Task toBeDeleted \u003d tasks.remove(indexOfTask);","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"wowsiddanth"},"content":"            if (toBeDeleted.isTimeable()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"wowsiddanth"},"content":"                calendar.updateCalendar(tasks);","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"wowsiddanth"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"wowsiddanth"},"content":"            ui.output(\"Okay. I\u0027ve deleted this task:\\n\" + toBeDeleted + \"\\nYou now have \" + tasks.size()","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"wowsiddanth"},"content":"                    + \" task(s)!\");","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"wowsiddanth"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"wowsiddanth"},"content":"            throw new InvalidInputException(Responses.INVALID_TASK_NUMBER, e);","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"wowsiddanth"},"content":"     * Handles the task, depending on the command given","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"wowsiddanth"},"content":"     * @param type The type of task: To.Do, deadline, event","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"wowsiddanth"},"content":"     * @param message The desc/time of the task","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"wowsiddanth"},"content":"     * @throws EmptyDescException Thrown when the task lacks a description","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"wowsiddanth"},"content":"     * @throws InvalidInputException Thrown when an invalid format is given or when a time is not given","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"wowsiddanth"},"content":"    public void handleTask(String type, String message) throws EmptyDescException, InvalidInputException {","lastModifiedDate":"2021-08-28"},{"lineNumber":88,"author":{"gitId":"wowsiddanth"},"content":"        Task task;","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"wowsiddanth"},"content":"        String[] deadlineEvent \u003d type.equals(\"deadline\") ? message.split(\"/by\")","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"wowsiddanth"},"content":"                : message.split(\"/at\");","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"wowsiddanth"},"content":"        if (message.isBlank() || deadlineEvent[0].isBlank()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"wowsiddanth"},"content":"            throw new EmptyDescException(Responses.EMPTY_DESCRIPTION);","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"wowsiddanth"},"content":"        if ((type.equals(\"deadline\") || type.equals(\"event\")) \u0026\u0026 deadlineEvent.length \u003c 2) {","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"wowsiddanth"},"content":"            //No time given or the command /by or /at wasn\u0027t given by the user","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"wowsiddanth"},"content":"            throw new InvalidInputException(Responses.INVALID_FORMAT);","lastModifiedDate":"2021-08-28"},{"lineNumber":97,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"wowsiddanth"},"content":"        switch (type) {","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"wowsiddanth"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"wowsiddanth"},"content":"            task \u003d new ToDo(message, false);","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"wowsiddanth"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"wowsiddanth"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"wowsiddanth"},"content":"            try {","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"wowsiddanth"},"content":"                task \u003d new Deadline(deadlineEvent[0], deadlineEvent[1], false);","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"wowsiddanth"},"content":"            } catch (DateTimeParseException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"wowsiddanth"},"content":"                throw new InvalidInputException(Responses.INVALID_DATE_TIME);","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"wowsiddanth"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":108,"author":{"gitId":"wowsiddanth"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":109,"author":{"gitId":"wowsiddanth"},"content":"        default: //Represents the Event task","lastModifiedDate":"2021-08-22"},{"lineNumber":110,"author":{"gitId":"wowsiddanth"},"content":"            try {","lastModifiedDate":"2021-08-22"},{"lineNumber":111,"author":{"gitId":"wowsiddanth"},"content":"                task \u003d new Event(deadlineEvent[0], deadlineEvent[1], false);","lastModifiedDate":"2021-08-22"},{"lineNumber":112,"author":{"gitId":"wowsiddanth"},"content":"            } catch (DateTimeParseException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":113,"author":{"gitId":"wowsiddanth"},"content":"                throw new InvalidInputException(Responses.INVALID_DATE_TIME);","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"wowsiddanth"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":115,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":116,"author":{"gitId":"wowsiddanth"},"content":"        addTask(task);","lastModifiedDate":"2021-08-22"},{"lineNumber":117,"author":{"gitId":"wowsiddanth"},"content":"        if (task.isTimeable()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":118,"author":{"gitId":"wowsiddanth"},"content":"            calendar.addToCalendar((Timeable) task);","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":121,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":122,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":123,"author":{"gitId":"wowsiddanth"},"content":"     * Marks a particular task as done","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"wowsiddanth"},"content":"     * @param indexOfTask String representation of the index of the task","lastModifiedDate":"2021-08-22"},{"lineNumber":126,"author":{"gitId":"wowsiddanth"},"content":"     * @throws IndexOutOfBoundsException Thrown if string is not within size of list","lastModifiedDate":"2021-08-22"},{"lineNumber":127,"author":{"gitId":"wowsiddanth"},"content":"     * @throws NumberFormatException Thrown if string cannot be converted into valid int","lastModifiedDate":"2021-08-22"},{"lineNumber":128,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":129,"author":{"gitId":"wowsiddanth"},"content":"    public void markTaskAsDone(String indexOfTask) throws InvalidInputException {","lastModifiedDate":"2021-08-23"},{"lineNumber":130,"author":{"gitId":"wowsiddanth"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":131,"author":{"gitId":"wowsiddanth"},"content":"            Task taskToBeCompleted \u003d tasks.get(Integer.parseInt(indexOfTask) - 1);","lastModifiedDate":"2021-08-22"},{"lineNumber":132,"author":{"gitId":"wowsiddanth"},"content":"            taskToBeCompleted.taskDone();","lastModifiedDate":"2021-08-22"},{"lineNumber":133,"author":{"gitId":"wowsiddanth"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":134,"author":{"gitId":"wowsiddanth"},"content":"            throw new InvalidInputException(Responses.INVALID_TASK_NO);","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":136,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":137,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":138,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":139,"author":{"gitId":"wowsiddanth"},"content":"     * Returns a string representation of the tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":141,"author":{"gitId":"wowsiddanth"},"content":"     * @return String containing the number, type, and description of tasks","lastModifiedDate":"2021-08-22"},{"lineNumber":142,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":143,"author":{"gitId":"wowsiddanth"},"content":"    public String printList() {","lastModifiedDate":"2021-08-22"},{"lineNumber":144,"author":{"gitId":"wowsiddanth"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-28"},{"lineNumber":145,"author":{"gitId":"wowsiddanth"},"content":"            return \"No items in list yet!\";","lastModifiedDate":"2021-08-22"},{"lineNumber":146,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":147,"author":{"gitId":"wowsiddanth"},"content":"        int count \u003d 1;","lastModifiedDate":"2021-08-22"},{"lineNumber":148,"author":{"gitId":"wowsiddanth"},"content":"        StringBuilder list \u003d new StringBuilder();","lastModifiedDate":"2021-08-22"},{"lineNumber":149,"author":{"gitId":"wowsiddanth"},"content":"        for (Task m : tasks) {","lastModifiedDate":"2021-08-22"},{"lineNumber":150,"author":{"gitId":"wowsiddanth"},"content":"            //To ensure there isn\u0027t a newline at the top","lastModifiedDate":"2021-08-30"},{"lineNumber":151,"author":{"gitId":"wowsiddanth"},"content":"            if (count \u003d\u003d 1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":152,"author":{"gitId":"wowsiddanth"},"content":"                list.append(count++).append(\". \").append(m);","lastModifiedDate":"2021-08-22"},{"lineNumber":153,"author":{"gitId":"wowsiddanth"},"content":"            } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":154,"author":{"gitId":"wowsiddanth"},"content":"                list.append(\"\\n\").append(count++).append(\". \").append(m);","lastModifiedDate":"2021-08-22"},{"lineNumber":155,"author":{"gitId":"wowsiddanth"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":156,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":157,"author":{"gitId":"wowsiddanth"},"content":"        return list.toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":158,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":159,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":160,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":161,"author":{"gitId":"wowsiddanth"},"content":"     * Displays the tasks on the given date","lastModifiedDate":"2021-08-24"},{"lineNumber":162,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":163,"author":{"gitId":"wowsiddanth"},"content":"     * @param date The date given","lastModifiedDate":"2021-08-23"},{"lineNumber":164,"author":{"gitId":"wowsiddanth"},"content":"     * @throws InvalidInputException Thrown if the parameter has an invalid format/input","lastModifiedDate":"2021-08-23"},{"lineNumber":165,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":166,"author":{"gitId":"wowsiddanth"},"content":"    public void showTaskOnDate(String date) throws InvalidInputException {","lastModifiedDate":"2021-08-28"},{"lineNumber":167,"author":{"gitId":"wowsiddanth"},"content":"        ui.output(calendar.showTasksOnDate(Parser.parseDate(date)));","lastModifiedDate":"2021-08-28"},{"lineNumber":168,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":169,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":170,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":171,"author":{"gitId":"wowsiddanth"},"content":"     * Displays tasks with the keyword","lastModifiedDate":"2021-08-24"},{"lineNumber":172,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":173,"author":{"gitId":"wowsiddanth"},"content":"     * @param keyword The keyword","lastModifiedDate":"2021-08-24"},{"lineNumber":174,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":175,"author":{"gitId":"wowsiddanth"},"content":"    public void findTaskWithKeyword(String keyword) throws InvalidInputException {","lastModifiedDate":"2021-08-28"},{"lineNumber":176,"author":{"gitId":"wowsiddanth"},"content":"        keyword \u003d keyword.trim();","lastModifiedDate":"2021-08-24"},{"lineNumber":177,"author":{"gitId":"wowsiddanth"},"content":"        if (keyword.equals(\"\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":178,"author":{"gitId":"wowsiddanth"},"content":"            throw new InvalidInputException(Responses.INVALID_FORMAT);","lastModifiedDate":"2021-08-24"},{"lineNumber":179,"author":{"gitId":"wowsiddanth"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":180,"author":{"gitId":"wowsiddanth"},"content":"            int count \u003d 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":181,"author":{"gitId":"wowsiddanth"},"content":"            StringBuilder result \u003d new StringBuilder(\"Here are the tasks:\");","lastModifiedDate":"2021-08-24"},{"lineNumber":182,"author":{"gitId":"wowsiddanth"},"content":"            for (Task t : tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":183,"author":{"gitId":"wowsiddanth"},"content":"                if (t.isKeyWordPresent(keyword)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":184,"author":{"gitId":"wowsiddanth"},"content":"                    result.append(\u0027\\n\u0027).append(count++).append(\". \").append(t);","lastModifiedDate":"2021-08-24"},{"lineNumber":185,"author":{"gitId":"wowsiddanth"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":186,"author":{"gitId":"wowsiddanth"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":187,"author":{"gitId":"wowsiddanth"},"content":"            if (count \u003d\u003d 1) { //No tasks appended","lastModifiedDate":"2021-08-24"},{"lineNumber":188,"author":{"gitId":"wowsiddanth"},"content":"                ui.output(\"No tasks!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":189,"author":{"gitId":"wowsiddanth"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":190,"author":{"gitId":"wowsiddanth"},"content":"                ui.output(result.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":191,"author":{"gitId":"wowsiddanth"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":192,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":193,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":194,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":195,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":196,"author":{"gitId":"wowsiddanth"},"content":"     * Returns a formatted string representation of the list of tasks that can be used for saving","lastModifiedDate":"2021-08-24"},{"lineNumber":197,"author":{"gitId":"wowsiddanth"},"content":"     * @return Formatted string representation of all the user-added tasks","lastModifiedDate":"2021-08-22"},{"lineNumber":198,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":199,"author":{"gitId":"wowsiddanth"},"content":"    public String formatForSaving() {","lastModifiedDate":"2021-08-22"},{"lineNumber":200,"author":{"gitId":"wowsiddanth"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-22"},{"lineNumber":201,"author":{"gitId":"wowsiddanth"},"content":"            return \"\";","lastModifiedDate":"2021-08-22"},{"lineNumber":202,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":203,"author":{"gitId":"wowsiddanth"},"content":"        int count \u003d 1;","lastModifiedDate":"2021-08-22"},{"lineNumber":204,"author":{"gitId":"wowsiddanth"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2021-08-22"},{"lineNumber":205,"author":{"gitId":"wowsiddanth"},"content":"        for (Task m : tasks) {","lastModifiedDate":"2021-08-22"},{"lineNumber":206,"author":{"gitId":"wowsiddanth"},"content":"            if (count \u003d\u003d 1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":207,"author":{"gitId":"wowsiddanth"},"content":"                result.append(m.formatStrForSaving());","lastModifiedDate":"2021-08-28"},{"lineNumber":208,"author":{"gitId":"wowsiddanth"},"content":"            } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":209,"author":{"gitId":"wowsiddanth"},"content":"                result.append(\"\\n\").append(m.formatStrForSaving());","lastModifiedDate":"2021-08-28"},{"lineNumber":210,"author":{"gitId":"wowsiddanth"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":211,"author":{"gitId":"wowsiddanth"},"content":"            count++;","lastModifiedDate":"2021-08-22"},{"lineNumber":212,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":213,"author":{"gitId":"wowsiddanth"},"content":"        return result.toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":214,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":215,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":216,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"wowsiddanth":216}},{"path":"src/main/java/petal/components/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.components;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":" * The Ui is responsible for handling the output, and interactions","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":" * with the user","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"public class Ui {","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"     * Terminates the Petal instance","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"    public void sayGoodbye() {","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"        output(Responses.GOODBYE);","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"     * Outputs given message with lines above and below the message","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"     * @param message Response that is converted to string that then displayed","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"    public void output(Responses message) {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"        System.out.println(message.toString());","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"     * Outputs given message with lines above and below the message","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"     * @param message String to be printed","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"    public void output(String message) {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"wowsiddanth":34}},{"path":"src/main/java/petal/exception/EmptyDescException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.exception;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Responses;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":" * EmptyDescException class. Subclass of PetalException.","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":" * Thrown when user does not give a description for Event/Deadline.","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":" * Example: \"deadline /by 8pm\"","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"public class EmptyDescException extends PetalException {","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"     * Constructs an EmptyDescException","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"     * @param message The exception message","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"    public EmptyDescException(String message) {","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"        super(message);","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"     * Constructs an EmptyDescException","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"     * @param message The exception message","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"    public EmptyDescException(Responses message) {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"        super(message.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"     * Constructs an EmptyDescException (used as a wrapper)","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"     * @param message The exception message","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"     * @param cause Initial Cause","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"    public EmptyDescException(String message, Throwable cause) {","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"        super(message, cause);","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"     * Constructs an EmptyDescException (used as a wrapper)","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"     * @param response The exception message","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"     * @param cause Initial Cause","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"    public EmptyDescException(Responses response, Throwable cause) {","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"        super(response.toString(), cause);","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"wowsiddanth":50}},{"path":"src/main/java/petal/exception/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.exception;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Responses;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":" * InvalidInputException class, subclass of PetalException.","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":" * Thrown when user enters something unintelligible (\"random command\")","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":" * or when the user enters the wrong format (\"deadline go for a run /at 6pm\")","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"public class InvalidInputException extends PetalException {","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"     * Constructs an InvalidInputException","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"     * @param message The exception message","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"    public InvalidInputException(String message) {","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"        super(message);","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"     * Constructs an InvalidInputException","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"     * @param message The exception message","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"    public InvalidInputException(Responses message) {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"        super(message.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"     * Constructs an InvalidInputException (used as a wrapper)","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"     * @param message The exception message","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"     * @param cause Initial cause","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"    public InvalidInputException(String message, Throwable cause) {","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"        super(message, cause);","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"     * Constructs an InvalidInputException (used as a wrapper)","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"     * @param response The exception message","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"     * @param cause Initial cause","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"    public InvalidInputException(Responses response, Throwable cause) {","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"        super(response.toString(), cause);","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"wowsiddanth":50}},{"path":"src/main/java/petal/exception/PetalException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.exception;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":" * The parent, PetalException. It represents all possible","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":" * exceptions in relation to the Petal bot.","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"public class PetalException extends Exception {","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"     * Constructs a PetalException","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"     * @param message The message","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"    public PetalException(String message) {","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"        super(message);","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"     * Constructs a PetalException (used as a wrapper)","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"     * @param message The exception message","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"     * @param cause Initial cause","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"    public PetalException(String message, Throwable cause) {","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"        super(message, cause);","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"wowsiddanth":28}},{"path":"src/main/java/petal/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.gui;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":" * Represents the Launcher class, through which the GUI is launched","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"public class Launcher {","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"wowsiddanth":14}},{"path":"src/main/java/petal/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.gui;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"import petal.Petal;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":" * A GUI built for Petal","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"    //The petal instance to be used","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"    private final Petal petal \u003d new Petal();","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"     * Starts the GUI for Petal","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"     * @param stage The stage to be used","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setPetal(petal);","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"            stage.show();","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"wowsiddanth":37}},{"path":"src/main/java/petal/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.gui;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"import petal.Petal;","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Responses;","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"    //FXML components","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"    //Reads the sys out","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"    private ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"    private Petal petal;","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"    //Images to be used","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"     * Initializes the nodes","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"wowsiddanth"},"content":"     * Set the Petal instance and checks if user has been greeted","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"     * If not, greets the user","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"wowsiddanth"},"content":"     * @param p Petal instance","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"wowsiddanth"},"content":"    public void setPetal(Petal p) {","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"wowsiddanth"},"content":"        petal \u003d p;","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"wowsiddanth"},"content":"        String startMsg \u003d petal.greetUser();","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"wowsiddanth"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"wowsiddanth"},"content":"                PetalDialogBox.getPetalDialog(startMsg));","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"wowsiddanth"},"content":"     * Sets up the ByetArray/Output stream so that the sysout can be read as a String","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"wowsiddanth"},"content":"    public void setUp() {","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"wowsiddanth"},"content":"        outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"wowsiddanth"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"wowsiddanth"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"wowsiddanth"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"wowsiddanth"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"wowsiddanth"},"content":"    private void handleUserInput() throws IOException {","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"wowsiddanth"},"content":"        setUp();","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"wowsiddanth"},"content":"        String input \u003d userInput.getText().trim();","lastModifiedDate":"2021-08-30"},{"lineNumber":76,"author":{"gitId":"wowsiddanth"},"content":"        petal.run(input);","lastModifiedDate":"2021-08-30"},{"lineNumber":77,"author":{"gitId":"wowsiddanth"},"content":"        String output \u003d outputStream.toString().trim();","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"wowsiddanth"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-30"},{"lineNumber":80,"author":{"gitId":"wowsiddanth"},"content":"                UserDialogBox.getUserDialog(input),","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"wowsiddanth"},"content":"                PetalDialogBox.getPetalDialog(output)","lastModifiedDate":"2021-08-30"},{"lineNumber":82,"author":{"gitId":"wowsiddanth"},"content":"        );","lastModifiedDate":"2021-08-30"},{"lineNumber":83,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":84,"author":{"gitId":"wowsiddanth"},"content":"        if (output.equals(Responses.GOODBYE.toString())) {","lastModifiedDate":"2021-08-30"},{"lineNumber":85,"author":{"gitId":"wowsiddanth"},"content":"            Platform.exit();","lastModifiedDate":"2021-08-30"},{"lineNumber":86,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":87,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":88,"author":{"gitId":"wowsiddanth"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-30"},{"lineNumber":89,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":90,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"wowsiddanth":90}},{"path":"src/main/java/petal/gui/PetalDialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.gui;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"import java.util.Objects;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":" * Represents a Petal Dialogue Box.","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":" * It has a Label that contains the Petal response to the user input and a","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":" * circle that is filled with the Petal picture.","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"public class PetalDialogBox extends HBox {","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"    private Circle circle;","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"    private final Image img \u003d new Image(Objects.requireNonNull(this.getClass()","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"                    .getResourceAsStream(\"/images/petal.jpg\")));","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"     * Constructs a PetalDialogBox instance","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"     * @param text The output","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"    private PetalDialogBox(String text) {","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/PetalDialogBox.fxml\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"        circle.setStroke(Color.CYAN);","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"        circle.setFill(new ImagePattern(img));","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"wowsiddanth"},"content":"     * Returns a PetalDialogBox instance","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"wowsiddanth"},"content":"     * @param text The output","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"wowsiddanth"},"content":"     * @return The PetalDialogBox instance with the output","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"wowsiddanth"},"content":"    public static PetalDialogBox getPetalDialog(String text) {","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"wowsiddanth"},"content":"        return new PetalDialogBox(text);","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"wowsiddanth":58}},{"path":"src/main/java/petal/gui/UserDialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.gui;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"import java.util.Objects;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":" * This represents a user dialogue box on the GUI.","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":" * It consists of a Label that contains the user input and a","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":" * circle that is filled with the user image","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"public class UserDialogBox extends HBox {","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"    private Circle circle;","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"    private final Image img \u003d new Image(Objects.requireNonNull(this.getClass()","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"            .getResourceAsStream(\"/images/user.png\")));","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"     * Constructs a UserDialogBox instance","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"     * @param text The input","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"    private UserDialogBox(String text) {","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/UserDialogBox.fxml\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"        circle.setStroke(Color.CYAN);","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"        circle.setFill(new ImagePattern(img));","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"wowsiddanth"},"content":"     * Returns a UserDialogBox instance with the input","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"wowsiddanth"},"content":"     * @param text The input","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"wowsiddanth"},"content":"     * @return The UserDialogBox instance with the input","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"wowsiddanth"},"content":"    public static UserDialogBox getUserDialog(String text) {","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"wowsiddanth"},"content":"        return new UserDialogBox(text);","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"wowsiddanth":58}},{"path":"src/main/java/petal/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Parser;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":" * Deadline class, subclass of Task","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":" * Encapsulates Task with end time","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"public class Deadline extends Task implements Timeable {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"    private final String description;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"    private final String dateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"    private final LocalDate date;","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"    private final LocalTime time;","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"     * Constructs a Deadline instance","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"     * @param description The description of the object","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"     * @param dateTime The date given by the user","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"     * @param isDone The boolean isDone, representing if the Task is done","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"    public Deadline(String description, String dateTime, boolean isDone) {","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"        super(description \u003d description.trim(), isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"        this.dateTime \u003d (dateTime \u003d dateTime.trim());","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"        String[] splitByWhiteSpace \u003d dateTime.split(\" \");","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"        this.date \u003d Parser.parseDate(splitByWhiteSpace[0]);","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"        this.time \u003d Parser.parseTime(splitByWhiteSpace[1]);","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"    public String formatStrForSaving() {","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"        return \"D|\" + this.getStatusIcon() + \"|\" + this.description + \"|\" + dateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"    public boolean isTimeable() {","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"        return true;","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"wowsiddanth"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"        return this.date;","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":51,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":52,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":53,"author":{"gitId":"wowsiddanth"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":54,"author":{"gitId":"wowsiddanth"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"wowsiddanth"},"content":"                + DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG).format(date)","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"wowsiddanth"},"content":"                + \" \" + this.time + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":58,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"wowsiddanth":58}},{"path":"src/main/java/petal/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Parser;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":" * Event class, subclass of Task.","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":" * Encapsulates a Task with a start/end time","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"public class Event extends Task implements Timeable {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"    private final String description;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"    private final String dateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"    private final LocalDate date;","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"    private final LocalTime startTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"    private final LocalTime endTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"     * Constructs an Event instance","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"     * @param description Description of the event","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"     * @param dateTime String with the date and start/end timings","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"     * @param isDone Boolean representing if the event is done or not","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"    public Event(String description, String dateTime, boolean isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"        super(description \u003d description.trim(), isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"        this.dateTime \u003d (dateTime \u003d dateTime.trim());","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"        String[] splitByWhiteSpace \u003d dateTime.split(\" \");","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"        this.date \u003d Parser.parseDate(splitByWhiteSpace[0]);","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"        this.startTime \u003d Parser.parseTime(splitByWhiteSpace[1]);","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"        this.endTime \u003d Parser.parseTime(splitByWhiteSpace[2]);","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"    public String formatStrForSaving() {","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"        return \"E|\" + this.getStatusIcon() + \"|\" + this.description + \"|\" + this.dateTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"    public boolean isTimeable() {","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"        return true;","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"wowsiddanth"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"wowsiddanth"},"content":"        return this.date;","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":53,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":54,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":55,"author":{"gitId":"wowsiddanth"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":56,"author":{"gitId":"wowsiddanth"},"content":"        return \"[E]\" + super.toString() + \" (at \" + DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG)","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"wowsiddanth"},"content":"                .format(date) + \" \" + this.startTime + \" to \" + this.endTime + \")\";","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":59,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"wowsiddanth":59}},{"path":"src/main/java/petal/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":" * The Task class that encapsulates a directive given","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":" * by the user to track a certain activity and may have","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":" * start/end timings.","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"    //Properties of a Task","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"    private final String description;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"     * Constructs a Task instance","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"     * @param description The description of the task","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"     * @param isDone  The boolean isDone, representing if the Task is done","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"     * @param localDate The date of the Task","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"    public Task(String description, boolean isDone, LocalDate localDate) {","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"        this.description \u003d capsFirstLetter(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"     * Constructs a Task instance","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"     * @param description The description of the task","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"     * @param isDone The boolean isDone, representing if the Task is done","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"        this.description \u003d capsFirstLetter(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"     * Formats string representation which is optimized for saving","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"     * e.g. To.Do go for a run (done) -\u003e T|X|go for a run","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"     * @return Formatted string representation","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"    public abstract String formatStrForSaving();","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"wowsiddanth"},"content":"     * Returns whether the Task is a Timeable","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"wowsiddanth"},"content":"     * @return boolean True if Timeable, false if not Timeable","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"wowsiddanth"},"content":"    public abstract boolean isTimeable();","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":55,"author":{"gitId":"wowsiddanth"},"content":"     * Returns whether a task is done in string representation","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"wowsiddanth"},"content":"     * @return \"X\" if done, \" \" if not","lastModifiedDate":"2021-08-15"},{"lineNumber":58,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":59,"author":{"gitId":"wowsiddanth"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-14"},{"lineNumber":60,"author":{"gitId":"wowsiddanth"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-14"},{"lineNumber":61,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":62,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":63,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":64,"author":{"gitId":"wowsiddanth"},"content":"     * Sets the task instance as done","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":66,"author":{"gitId":"wowsiddanth"},"content":"    public void taskDone() {","lastModifiedDate":"2021-08-14"},{"lineNumber":67,"author":{"gitId":"wowsiddanth"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-14"},{"lineNumber":68,"author":{"gitId":"wowsiddanth"},"content":"        System.out.println(\"\\nYou have completed the task: \"","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"wowsiddanth"},"content":"                              + \"\u0027\"","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"wowsiddanth"},"content":"                              + this.description + \"\u0027!\"","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"wowsiddanth"},"content":"                              + \"\\nI am so happy for you!\\n\");","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":73,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":74,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":75,"author":{"gitId":"wowsiddanth"},"content":"     * Capitalizes the first letter of the string","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"wowsiddanth"},"content":"     * @param str The string","lastModifiedDate":"2021-08-17"},{"lineNumber":78,"author":{"gitId":"wowsiddanth"},"content":"     * @return String but with first letter capitalized","lastModifiedDate":"2021-08-17"},{"lineNumber":79,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":80,"author":{"gitId":"wowsiddanth"},"content":"    public String capsFirstLetter(String str) {","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"wowsiddanth"},"content":"        str \u003d str.substring(0, 1).toUpperCase() + str.substring(1);","lastModifiedDate":"2021-08-17"},{"lineNumber":82,"author":{"gitId":"wowsiddanth"},"content":"        return str;","lastModifiedDate":"2021-08-17"},{"lineNumber":83,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":84,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":85,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"wowsiddanth"},"content":"     * Returns if a task description contains a keyword","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"wowsiddanth"},"content":"     * @param keyword The keyword","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"wowsiddanth"},"content":"     * @return True if contains keyword, false if not","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"wowsiddanth"},"content":"    public boolean isKeyWordPresent(String keyword) {","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"wowsiddanth"},"content":"        return description.toLowerCase().contains(keyword);","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":96,"author":{"gitId":"wowsiddanth"},"content":"     * Overridden toString method for the Task class","lastModifiedDate":"2021-08-15"},{"lineNumber":97,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"wowsiddanth"},"content":"     * @return String representation of the Task object","lastModifiedDate":"2021-08-15"},{"lineNumber":99,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":100,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":101,"author":{"gitId":"wowsiddanth"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":102,"author":{"gitId":"wowsiddanth"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-14"},{"lineNumber":103,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":104,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":105,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"wowsiddanth":105}},{"path":"src/main/java/petal/task/Timeable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":" * The Timeable interface represents Tasks that have a date/time components,","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":" * mainly the Deadline/Event tasks","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"public interface Timeable {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"     * Returns the date of that Timeable object","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"     * @return LocalDate object corresponding to the date of that object","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"    LocalDate getDate();","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wowsiddanth":18}},{"path":"src/main/java/petal/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":" * The To.Do class that is a subclass of Task","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":" * (Used a . in between to prevent IntelliJ from highlighting it)","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"    private final String description;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"     * Constructor for the To.Do class","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"     * @param description The description of the task","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"     * @param isDone The boolean isDone, representing if the Task is done","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"        super(description.trim(), isDone);","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"    public String formatStrForSaving() {","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"        return \"T|\" + this.getStatusIcon() + \"|\" + this.description;","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"    public boolean isTimeable() {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"        return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"wowsiddanth":38}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.effect.Glow?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"800.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"petal.gui.MainWindow\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"14.0\" layoutY\u003d\"554.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"673.0\" promptText\u003d\"Ask me anything!\" style\u003d\"-fx-background-color: black;\" AnchorPane.bottomAnchor\u003d\"5.0\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"            \u003cFont name\u003d\"System Italic\" size\u003d\"18.0\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"         \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"719.0\" layoutY\u003d\"555.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"35.0\" prefWidth\u003d\"67.0\" style\u003d\"-fx-background-color: #ffb7c5;\" text\u003d\"ðŸŒ¸\" textFill\u003d\"#ff5ea1\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"            \u003cFont size\u003d\"18.0\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"         \u003c/font\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"         \u003ceffect\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"            \u003cGlow /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"         \u003c/effect\u003e\u003c/Button\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"554.0\" prefWidth\u003d\"800.0\" style\u003d\"-fx-background-color: blue;\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"795.0\" style\u003d\"-fx-background-color: black;\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"wowsiddanth":30}},{"path":"src/main/resources/view/PetalDialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.effect.Glow?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"\u003cfx:root alignment\u003d\"TOP_LEFT\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" prefWidth\u003d\"225.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"        \u003cCircle fx:id\u003d\"circle\" fill\u003d\"DODGERBLUE\" radius\u003d\"23.0\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"CENTER\" text\u003d\"Label\" textFill\u003d\"#ffb7c5\" translateX\u003d\"4.0\" translateY\u003d\"7.0\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"            \u003cfont\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"                \u003cFont name\u003d\"System Bold\" size\u003d\"21.0\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"            \u003c/font\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"            \u003ceffect\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"                \u003cGlow level\u003d\"0.6\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"            \u003c/effect\u003e\u003c/Label\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"wowsiddanth":24}},{"path":"src/main/resources/view/UserDialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.effect.Glow?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" prefHeight\u003d\"115.0\" prefWidth\u003d\"225.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"CENTER\" text\u003d\"Label\" textFill\u003d\"#ffb7c5\" translateX\u003d\"-4.0\" translateY\u003d\"7.0\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"            \u003cfont\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"                \u003cFont name\u003d\"System Bold\" size\u003d\"21.0\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"            \u003c/font\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"            \u003ceffect\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"                \u003cGlow level\u003d\"0.6\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"            \u003c/effect\u003e\u003c/Label\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"        \u003cCircle fx:id\u003d\"circle\" fill\u003d\"DODGERBLUE\" radius\u003d\"23.0\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"wowsiddanth":24}},{"path":"src/test/java/petal/PetalTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"public class PetalTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"    private Petal petal;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"    public void byeBoolean_noInput_false() {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"        petal \u003d new Petal();","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wowsiddanth":14}},{"path":"src/test/java/petal/components/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.components;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"import petal.Petal;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"import petal.command.Command;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"import stubs.FormatTest;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"import stubs.StorageStub;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"import stubs.TaskListStub;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"    private final FormatTest formatTest \u003d new FormatTest();","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"    private final Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"    private final Petal petal \u003d new Petal();","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"    private final Ui ui \u003d new Ui(petal);","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"    private final TaskListStub taskListStub \u003d new TaskListStub(ui);","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"    private final StorageStub storageStub \u003d new StorageStub(taskListStub, ui);","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"    @BeforeEach","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"    public void setUp() {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"    public void parseInput_list_matchExpected() {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"        Command command \u003d parser.handleInput(\"list\");","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"        command.execute(taskListStub, ui, storageStub);","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"        assertEquals(formatTest.formatForTest(\"No items in list yet!\"), outputStream.toString().trim());","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"    public void parseInput_bye_matchExpected() {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"        Command command \u003d parser.handleInput(\"bye\");","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"        command.execute(taskListStub, ui, storageStub);","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"        assertEquals(formatTest.formatForTest(\"You\u0027re leaving :( I hope you return soon!\"),","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"                outputStream.toString().trim());","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"wowsiddanth"},"content":"    public void parseInput_todo_matchExpected() {","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"wowsiddanth"},"content":"        Command command \u003d parser.handleInput(\"todo run\");","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"wowsiddanth"},"content":"        command.execute(taskListStub, ui, storageStub);","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"wowsiddanth"},"content":"        assertEquals(\"Okay. I\u0027ve added this task:\\n\" + \"[T][ ] Run\" + \"\\nYou now have 1 task!\",","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"wowsiddanth"},"content":"                             outputStream.toString().trim());","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"wowsiddanth"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"wowsiddanth"},"content":"    public void parseInput_done_matchExpected() {","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"wowsiddanth"},"content":"        Command command \u003d parser.handleInput(\"done 1\");","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"wowsiddanth"},"content":"        command.execute(taskListStub, ui, storageStub);","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"wowsiddanth"},"content":"        String expected \u003d Responses.LINE + \"\\nYou have completed the task: \" + \"\u0027\"","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"wowsiddanth"},"content":"                                         + \"run!\"","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"wowsiddanth"},"content":"                                         + \"\\nI am so happy for you!\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"wowsiddanth"},"content":"                                         + Responses.LINE;","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"wowsiddanth"},"content":"        assertEquals(expected, outputStream.toString().trim());","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"wowsiddanth"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"wowsiddanth"},"content":"    public void parseInput_delete_matchExpected() {","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"wowsiddanth"},"content":"        Command command \u003d parser.handleInput(\"delete 1\");","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"wowsiddanth"},"content":"        command.execute(taskListStub, ui, storageStub);","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"wowsiddanth"},"content":"        String expected \u003d \"Okay. I\u0027ve deleted this task:\\n[ ] \" + \"run\" + \"\\nYou now have 1 task(s)!\";","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"wowsiddanth"},"content":"        assertEquals(expected, outputStream.toString().trim());","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wowsiddanth":76}},{"path":"src/test/java/petal/components/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.components;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"import petal.Petal;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"import stubs.TaskListStub;","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"public class StorageTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"    private final Petal petal \u003d new Petal();","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"    private final Ui ui \u003d new Ui(petal);","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"    private final TaskListStub taskListStub \u003d new TaskListStub(ui);","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"    private final Storage storage \u003d new Storage(taskListStub, ui);","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"    private final String folderPath \u003d System.getProperty(\"user.dir\") + \"/PetalData\";","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"    private final String filePath \u003d folderPath + \"/Tasks.txt\";","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"    @BeforeEach","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"    public void setUp() {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"    public void createDirectory_noInput_folderAndFileExists() {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"        storage.createDirectory();","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"        Path folder \u003d Paths.get(folderPath);","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"        Path file \u003d Paths.get(filePath);","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"        assertEquals(true, Files.exists(folder));","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"        assertEquals(true, Files.exists(file));","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"    public void retrieveTasks_noInput_returnFalse() {","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"        boolean tasksAvailable \u003d storage.retrieveTasks();","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"        assertEquals(true, tasksAvailable);","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"wowsiddanth"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"    public void saveTasks_noInput_nothingDisplayed() throws IOException {","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"wowsiddanth"},"content":"        storage.saveTasks();","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"wowsiddanth"},"content":"        assertEquals(\"\", outputStream.toString().trim());","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wowsiddanth":55}},{"path":"src/test/java/stubs/FormatTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package stubs;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Responses;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"public class FormatTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"    public String formatForTest(String message) {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"        return Responses.LINE + \"\\n\" + message.toString() + \"\\n\" + Responses.LINE;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wowsiddanth":11}},{"path":"src/test/java/stubs/StorageStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package stubs;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"public class StorageStub extends Storage {","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"    public StorageStub(TaskListStub taskListStub, Ui ui) {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"        super(taskListStub, ui);","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"    public void saveTasks() {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wowsiddanth":15}},{"path":"src/test/java/stubs/TaskListStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package stubs;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"import java.util.List;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Responses;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"import petal.task.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"public class TaskListStub extends TaskList {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"    private List\u003cTaskStub\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"     * Constructor for the TaskListStub class","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"     * @param ui The Ui instance","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"    public TaskListStub(Ui ui) {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"        super(ui);","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"        taskList.add(new TaskStub());","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"    public String printList() {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"        return \"No items in list yet!\";","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"    public void markTaskAsDone(String indexOfTask) {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"        TaskStub taskStub \u003d taskList.get(0);","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"        taskStub.taskDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"        System.out.println(Responses.LINE + \"\\nYou have completed the task: \" + \"\u0027\"","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"                                          + \"run!\"","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"                                          + \"\\nI am so happy for you!\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"                                          + Responses.LINE);","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"    public void deleteTask(String index) {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"        TaskStub toBeDeleted \u003d new TaskStub();","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"        System.out.println(\"Okay. I\u0027ve deleted this task:\\n\" + toBeDeleted + \"\\nYou now have 1 task(s)!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"wowsiddanth"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"        System.out.println(\"Okay. I\u0027ve added this task:\\n\" + task + \"\\nYou now have 1 task!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wowsiddanth":51}},{"path":"src/test/java/stubs/TaskStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package stubs;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"import petal.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"public class TaskStub extends Task {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"    public TaskStub(String description, boolean isDone, LocalDate localDate) {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"        super(description, isDone, localDate);","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"    public TaskStub() {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"        super(\"run\", false);","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"    public String formatStrForSaving() {","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"        return \"This task was saved!\";","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"    public boolean isTimeable() {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"        return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"    public void taskDone() {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"    public String toString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"        return \"[\" + super.getStatusIcon() + \"] \" + \"run\";","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wowsiddanth":39}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"deadline go for a jog /by 2/12/2021 1800","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"deadline go for a jog /by 2/12/2021 1900","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"event go for a jog /at 2/12/2021 1800 2100","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"event go for a jog /at 2/12/2021 1900 2100","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"find go","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"find for","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"find a ","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"find jog","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"date 2/12/2021","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"delete 1 ","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"delete 2","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"done 1","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"done 2","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"date 2/12/2021","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"delete 1","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"delete 1","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"date 2/12/2021","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"deadline go for a jog /by 8pm today","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"todo listening to music ","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"todo use a computer ","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"deadline","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"event","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"done 1","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"done 2","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"done 3","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"done 4","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"list","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"TODO LET\u0027S GO TO THE BEACH! ","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"DEADLINE LET\u0027S FINISH WATCHING THIS SHOW 2/12/2021 1800","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"EVENT FINISH WATCHING MOVIE /at 2/12/2021 1800 2100","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"DEADLINE LET\u0027S FINISH WATCHING THIS SHOW /at 2/12/2021 1800 2100","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"EVENT FINISH WATCHING MOVIE /by 2/12/2021 1900 2100","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"deadline go for a run /by 21/12/2021 2100","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"deadline go for a run /by 21/22/2021 2100","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"deadline go for a run /by 21/12/2021 8900","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"deadline go for a run /by 21/12/2021 2100","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"deadline go for a run 21/12/2021 2100","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"deadline go for a run /by 2100","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"deadline go for a run /by 21/12/2021 ","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"deadline go for a run /by 1/12/2021 2100","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"deadline go for a run /by 21/2/2021 2100","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"deadline go for a run /by 21/12/2021 21:00","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"bye","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wowsiddanth":43}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"REM compiles all file","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"javac -cp ..\\src\\main\\java\\petal -Xlint:none -d ..\\bin ..\\src\\main\\java\\petal\\*.java  ..\\src\\main\\java\\petal\\task\\*.java  ..\\src\\main\\java\\petal\\exception\\*.java  ..\\src\\main\\java\\petal\\components\\*.java  ..\\src\\main\\java\\petal\\command\\*.java","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"java -classpath ..\\bin petal.Petal \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"cmd \\k","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wowsiddanth":6,"-":15}}]
