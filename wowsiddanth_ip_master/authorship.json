[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"# Petal","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"\u003e *In joy or sadness, flowers are our constant friends.*","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"\u003e **Okakura Kakuzo**","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"It\u0027s okay. Petal is here. Drop your worries and sink into the petals of relief; Petal is here for you.","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"Petal has the following abetments: ","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"* Text-based ","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"* Simple commands","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"* Task tracking","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"## Installation","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"A logical thing you might do is wonderâ€”*how do I install Petal*?","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"There are two methods:","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"      ","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"### 1. Run it in an IDE","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"1. Go to this [link](https://github.com/wowsiddanth/ip).","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"2. Download the folder.","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"3. Open it in IntelliJ or your favorite IDE.","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"4. Then, under the Petal class. add the following main method:","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"```java","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"public static void main(String[] args) {","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"        Petal p \u003d new Petal();","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"        p.run(); ","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":" }","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"```","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"### 2. Run the .jar file","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"1. Go to this [link](https://github.com/wowsiddanth/ip).","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"2. Under the __Releases__ tab, open __A-Jar__ and download the .jar file.","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"3. Download the folder.","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"4. Open command prompt from that folder, or your favorite IDE.","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"5. Then, type this into the command prompt: `java -jar iP.jar`","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"## Features","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"Petal can:","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"- [X] Keep track of tasks","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"- [X] Keep track of the dates of tasks, including deadlines and events.","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"- [ ] Set reminders (coming soon)","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"wowsiddanth":35,"-":5}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"    ","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"    mainClassName \u003d \"petal.Petal\" //\"petal.Petal\"","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"wowsiddanth"},"content":"    archiveBaseName \u003d \"petal\"","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"wowsiddanth"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-09-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"wowsiddanth":18,"-":44}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"# PetalðŸŒ¸","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"\u003e _In joy or sadness, flowers are our constant friends._  ","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"\u003e **Okakura Kakuzo**","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"It\u0027s okay. Petal is here. Drop your worries and sink into the petals of relief; Petal is here for you.","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"Petal has the following abetments:","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"-   Text-based","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"- Easy-to-use and pleasing GUI","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"-   Simple commands","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"-   Todo, event, and deadline tracking","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"-  Archive events","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"- Add/delete tasks","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"## [](https://github.com/wowsiddanth/ip/blob/master/README.md#installation)Installation","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"A logical thing you might do is wonderâ€”_how do I install Petal_?","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"1. Download the .jar release under the Releases section","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"2.   Go to this  [link](https://github.com/wowsiddanth/ip).","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"3.  Under the  **Releases**  tab, open  **A-Release**  and download the .jar file.","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"4.  Create a new folder, and place the .jar file into it.","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"5.  Now, double-click the .jar file.","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"7. Voila! You are now running Petal!","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"####  Important for Mac users!","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"1. You have to install the **Segoe UI** font from Microsoft\u0027s [website](https://developer.microsoft.com/en-us/fluentui#/resources).","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"2. Scroll down to **Fonts** and click **Download Segoe UI and MDL2 external font**","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"3. Open Font Book and install the fonts.","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"4. For more information on adding fonts on  MacOS, please refer to [this](https://support.apple.com/en-sg/guide/font-book/fntbk1000/mac).","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"## [](https://github.com/wowsiddanth/ip/blob/master/README.md#features)Features","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"Petal can:","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"-   Keep track of tasks","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"-   Keep track of the dates of tasks, including deadlines and events.","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"-  Archive tasks","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"## Commands","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"The following is an exhaustive list of commands you can use with Petal.","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"*__Disclaimer__: Please use **bye** to exit the bot, or else your changes won\u0027t be saved!*","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"1. **todo (todo *description*)**","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"    ``","lastModifiedDate":"2021-09-11"},{"lineNumber":48,"author":{"gitId":"wowsiddanth"},"content":"    todo Go for a run","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"    ``","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"wowsiddanth"},"content":"    _Add a todo._","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"wowsiddanth"},"content":"2. **deadline (deadline *description* /by *date* *time*)**","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"wowsiddanth"},"content":"    ``","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"wowsiddanth"},"content":"    deadline Go for a run /by 2/12/2021 1800","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"wowsiddanth"},"content":"    ``","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"wowsiddanth"},"content":"    _Add a deadline with a date to be completed by._","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"wowsiddanth"},"content":"3. **event**","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"wowsiddanth"},"content":"    ``","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"wowsiddanth"},"content":"    event Go for a run /at 2/12/2021 1800 2100","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"wowsiddanth"},"content":"    ``","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"wowsiddanth"},"content":"    _Add an event with a date, and start/end time._","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"wowsiddanth"},"content":"4.  **list** ","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"wowsiddanth"},"content":"    ``","lastModifiedDate":"2021-09-11"},{"lineNumber":63,"author":{"gitId":"wowsiddanth"},"content":"    list","lastModifiedDate":"2021-09-11"},{"lineNumber":64,"author":{"gitId":"wowsiddanth"},"content":"    ``","lastModifiedDate":"2021-09-11"},{"lineNumber":65,"author":{"gitId":"wowsiddanth"},"content":"    _Shows all currently added tasks._","lastModifiedDate":"2021-09-11"},{"lineNumber":66,"author":{"gitId":"wowsiddanth"},"content":"5. **delete (delete *number*)**","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"wowsiddanth"},"content":"    ``","lastModifiedDate":"2021-09-11"},{"lineNumber":68,"author":{"gitId":"wowsiddanth"},"content":"    delete 1 ","lastModifiedDate":"2021-09-11"},{"lineNumber":69,"author":{"gitId":"wowsiddanth"},"content":"    ``","lastModifiedDate":"2021-09-11"},{"lineNumber":70,"author":{"gitId":"wowsiddanth"},"content":"    _Deletes the task, whose number corresponds to that in the list._","lastModifiedDate":"2021-09-11"},{"lineNumber":71,"author":{"gitId":"wowsiddanth"},"content":"6. **archive (archive *number*)**","lastModifiedDate":"2021-09-11"},{"lineNumber":72,"author":{"gitId":"wowsiddanth"},"content":"    ``","lastModifiedDate":"2021-09-11"},{"lineNumber":73,"author":{"gitId":"wowsiddanth"},"content":"    archive 1","lastModifiedDate":"2021-09-11"},{"lineNumber":74,"author":{"gitId":"wowsiddanth"},"content":"    ``","lastModifiedDate":"2021-09-11"},{"lineNumber":75,"author":{"gitId":"wowsiddanth"},"content":"    _Archives the task, whose number corresponds to that in the list._","lastModifiedDate":"2021-09-11"},{"lineNumber":76,"author":{"gitId":"wowsiddanth"},"content":"8.  **date (date *date*)** ","lastModifiedDate":"2021-09-11"},{"lineNumber":77,"author":{"gitId":"wowsiddanth"},"content":"``","lastModifiedDate":"2021-09-11"},{"lineNumber":78,"author":{"gitId":"wowsiddanth"},"content":"    date 2/12/2021","lastModifiedDate":"2021-09-11"},{"lineNumber":79,"author":{"gitId":"wowsiddanth"},"content":"    ``","lastModifiedDate":"2021-09-11"},{"lineNumber":80,"author":{"gitId":"wowsiddanth"},"content":"    _Shows all tasks on the given date._","lastModifiedDate":"2021-09-11"},{"lineNumber":81,"author":{"gitId":"wowsiddanth"},"content":"9.  **done (done *number*)** ","lastModifiedDate":"2021-09-11"},{"lineNumber":82,"author":{"gitId":"wowsiddanth"},"content":"    ``","lastModifiedDate":"2021-09-11"},{"lineNumber":83,"author":{"gitId":"wowsiddanth"},"content":"    done 1","lastModifiedDate":"2021-09-11"},{"lineNumber":84,"author":{"gitId":"wowsiddanth"},"content":"    ``","lastModifiedDate":"2021-09-11"},{"lineNumber":85,"author":{"gitId":"wowsiddanth"},"content":"    _Marks the task, whose number correpsonds to that in the list, as done._","lastModifiedDate":"2021-09-11"},{"lineNumber":86,"author":{"gitId":"wowsiddanth"},"content":"10.  **dossiers** ","lastModifiedDate":"2021-09-11"},{"lineNumber":87,"author":{"gitId":"wowsiddanth"},"content":"    ``","lastModifiedDate":"2021-09-11"},{"lineNumber":88,"author":{"gitId":"wowsiddanth"},"content":"    dossiers","lastModifiedDate":"2021-09-11"},{"lineNumber":89,"author":{"gitId":"wowsiddanth"},"content":"    ``","lastModifiedDate":"2021-09-11"},{"lineNumber":90,"author":{"gitId":"wowsiddanth"},"content":"    _Shows all items in the archive._","lastModifiedDate":"2021-09-11"},{"lineNumber":91,"author":{"gitId":"wowsiddanth"},"content":"11.  **bye** ","lastModifiedDate":"2021-09-11"},{"lineNumber":92,"author":{"gitId":"wowsiddanth"},"content":"    ``","lastModifiedDate":"2021-09-11"},{"lineNumber":93,"author":{"gitId":"wowsiddanth"},"content":"    bye","lastModifiedDate":"2021-09-11"},{"lineNumber":94,"author":{"gitId":"wowsiddanth"},"content":"    ``","lastModifiedDate":"2021-09-11"},{"lineNumber":95,"author":{"gitId":"wowsiddanth"},"content":"    _Exits the bot._","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"wowsiddanth":82,"-":13}},{"path":"src/main/java/petal/Petal.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"import petal.command.Command;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Parser;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"import petal.gui.Main;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":" * The class for the Petal bot. It is able to respond to","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":" * a certain number of pre-determined commands in order to add certain","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":" * activities and track them.","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":" * @author Siddanth","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"public class Petal {","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"    //Components of the Petal instance","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"    private final Parser parser;","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"    private final TaskList taskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"     * Constructs a Petal instance","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"    public Petal() {","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"        ui \u003d new Ui(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"        storage \u003d new Storage(taskList);","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"     * Returns either start message or welcome back message","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"    public void greetUser() {","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"        ui.sendToGui(storage.createDirectory());","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"    public Ui getUi() {","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"        return this.ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":48,"author":{"gitId":"wowsiddanth"},"content":"     * Takes the user input and sends output to ui instance","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":50,"author":{"gitId":"wowsiddanth"},"content":"    public void run(String message) {","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"wowsiddanth"},"content":"        Command command \u003d parser.handleInput(message);","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"wowsiddanth"},"content":"        String reply \u003d command.execute(taskList, storage);","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"wowsiddanth"},"content":"        ui.sendToGui(message, reply);","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"wowsiddanth"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"wowsiddanth"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-13"},{"lineNumber":60,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"wowsiddanth":60}},{"path":"src/main/java/petal/command/ArchiveCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.command;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Storage;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.TaskList;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"import petal.exception.InvalidInputException;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":" * The ArchiveCommand class implements command","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":" * and handles the archiving of tasks","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"public class ArchiveCommand implements Command {","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"    private final String index;","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"     * Constructs an ArchiveCommand instance","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"     * @param index The index of the task to be archived","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"    public ArchiveCommand(String index) {","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"            return taskList.archiveTask(index);","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"            return e.getMessage();","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"wowsiddanth":32}},{"path":"src/main/java/petal/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Responses;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":" * The ByeCommand class implements Command","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":" * and handles the termination of the Petal bot","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"public class ByeCommand implements Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"     * Terminates the running Petal instance","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"     * @param taskList TaskList instance","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"     * @param storage Storage instance","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"            storage.saveTasks();","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"            return Responses.GOODBYE.toString();","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"            return Responses.GOODBYE.toString();","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wowsiddanth":31}},{"path":"src/main/java/petal/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":" * The Command interface represents all commands","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"public interface Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"     * Executes the given command","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"     * @param taskList TaskList instance","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"     * @param storage Storage instance","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"    String execute(TaskList taskList, Storage storage);","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wowsiddanth":19}},{"path":"src/main/java/petal/command/DateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"import petal.exception.InvalidInputException;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":" * The DateCommand class implements Command","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":" * and handles displayed tasks on the given date","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"public class DateCommand implements Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"    private final String input;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"     * Constructs a DateCommand instance","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"     * @param input The given input","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"    public DateCommand(String input) {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"     * Displays all the tasks on the given date","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"     * @param taskList TaskList instance","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"     * @param storage Storage instance","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"            return taskList.showTaskOnDate(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"            return e.getMessage();","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wowsiddanth":38}},{"path":"src/main/java/petal/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"import petal.exception.InvalidInputException;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":" * The DeleteCommand class implements Command","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":" * and handles the deletion of tasks","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"    private final String input;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"     * Constructs a DeleteCommand instance","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"     * @param input The given class","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"    public DeleteCommand(String input) {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"     * Deletes the task corresponding to the input","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"     * @param taskList TaskList instance","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"     * @param storage Storage instance","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"            return taskList.deleteTask(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"            return e.getMessage();","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wowsiddanth":38}},{"path":"src/main/java/petal/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"import petal.exception.InvalidInputException;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":" * The DoneCommand class implements Command and deals","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":" * with marking the corresponding Task as done","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"public class DoneCommand implements Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"    private final String input;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"     * Constructs a DoneCommand instance","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"     * @param input The input in question","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"    public DoneCommand(String input) {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"     * Marks the given task as done","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"     * @param taskList TaskList instance","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"     * @param storage Storage instance","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"            return taskList.markTaskAsDone(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"            return e.getMessage();","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wowsiddanth":38}},{"path":"src/main/java/petal/command/DossiersCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.command;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Storage;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.TaskList;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":" * The DossiersCommand class implements Command","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":" * and handles the user input to view the archived tasks","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"public class DossiersCommand implements Command {","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"        return taskList.printArchive();","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"wowsiddanth":17}},{"path":"src/main/java/petal/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"import petal.exception.InvalidInputException;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":" * The FindCommand implements Command","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":" * and handles the finding of keywords in tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"    private final String input;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"     * Constructs a FindCommand instance","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"     * @param input The given input","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"    public FindCommand(String input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"     * Finds the task with the given keyword","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"     * @param taskList TaskList instance","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"     * @param storage Storage instance","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"            return taskList.findTaskWithKeyword(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"            return e.getMessage();","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"wowsiddanth":38}},{"path":"src/main/java/petal/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":" * The ListCommand implements Command and handles","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":" * displayed the list of tasks to the user","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"     * Prints the current list of tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"     * @param taskList TaskList instance","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"     * @param storage Storage instance","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"        return taskList.printCurrTasks();","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wowsiddanth":22}},{"path":"src/main/java/petal/command/TaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"import petal.exception.EmptyDescException;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"import petal.exception.InvalidInputException;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":" * The TaskCommand implements Command and deals","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":" * with handling commands related to task creation","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"public class TaskCommand implements Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"    private final String type;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"    private final String input;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"     * Constructs a TaskCommand instance","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"     * @param type The type of Task","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"     * @param input The input","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"    public TaskCommand(String type, String input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"     * Creates the corresponding Task object","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"     * @param taskList TaskList instance","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"     * @param storage Storage instance","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"            return taskList.handleTask(type, input);","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"        } catch (EmptyDescException | InvalidInputException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"            return e.getMessage();","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wowsiddanth":43}},{"path":"src/main/java/petal/command/UnintelligibleCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Responses;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":" * The UnintelligibleCommand implements Command and","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":" * deals with commands that cannot be made sense of","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"public class UnintelligibleCommand implements Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"     * Displays message to user informing them that the input was unintelligible","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"     * @param taskList TaskList instance","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"     * @param storage Storage instance","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"        return Responses.UNINTELLIGIBLE.toString();","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wowsiddanth":23}},{"path":"src/main/java/petal/components/Calendar.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.components;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"import java.util.List;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"import java.util.Optional;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"import petal.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"import petal.task.Timeable;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":" * The Calendar class encapsulates a calendar, where tasks","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":" * have dates, and can be retrieved and added by date","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"public class Calendar {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"    private HashMap\u003cLocalDate, ArrayList\u003cTimeable\u003e\u003e dateAndTimeables;","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"     * Constructs a Calendar instance","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"    public Calendar() {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"        dateAndTimeables \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"     * Adds a Timeable object to the calendar","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"     * @param timeable The Timeable to be added","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"    public void addToCalendar(Timeable timeable) {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"        LocalDate date \u003d timeable.getDate();","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"        Optional\u003cArrayList\u003cTimeable\u003e\u003e current \u003d Optional.ofNullable(dateAndTimeables.get(date));","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"        if (current.isPresent()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"            current.get().add(timeable);","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"            ArrayList\u003cTimeable\u003e lists \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"            lists.add(timeable);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"            dateAndTimeables.put(date, lists);","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"     * Returns the String representation of all the Timeables on that date","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"     * @param date date to be used","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"    public String showTasksOnDate(LocalDate date) {","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"wowsiddanth"},"content":"        int count \u003d 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"wowsiddanth"},"content":"        Optional\u003cArrayList\u003cTimeable\u003e\u003e current \u003d Optional.ofNullable(dateAndTimeables.get(date));","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"wowsiddanth"},"content":"        if (current.isPresent()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"wowsiddanth"},"content":"            StringBuilder result \u003d new StringBuilder(\"Here are the tasks on this date: \");","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"wowsiddanth"},"content":"            for (Timeable d: current.get()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"wowsiddanth"},"content":"                result.append(\"\\n\").append(count++).append(\". \").append(d);","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"wowsiddanth"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"wowsiddanth"},"content":"            return result.toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"wowsiddanth"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"wowsiddanth"},"content":"            return \"No tasks on this date!\";","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"wowsiddanth"},"content":"     * Updates the calendar","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"wowsiddanth"},"content":"     * @param newList The new arraylist of Tasks, which will be used to update the calendar","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"wowsiddanth"},"content":"    public void updateCalendar(List\u003cTask\u003e newList) {","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"wowsiddanth"},"content":"        dateAndTimeables \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"wowsiddanth"},"content":"        for (Task t: newList) {","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"wowsiddanth"},"content":"            if (t.isTimeable()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"wowsiddanth"},"content":"                addToCalendar((Timeable) t);","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"wowsiddanth"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":77,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wowsiddanth":77}},{"path":"src/main/java/petal/components/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.components;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"import petal.command.ArchiveCommand;","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"import petal.command.ByeCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"import petal.command.Command;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"import petal.command.DateCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"import petal.command.DeleteCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"import petal.command.DoneCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"import petal.command.DossiersCommand;","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"import petal.command.FindCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"import petal.command.ListCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"import petal.command.TaskCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"import petal.command.UnintelligibleCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":" * The Parser deals with comprehending the user\u0027s input","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"public class Parser {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"     * Comprehends the user input.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"     * It splits the input and takes the first word (assumed to be command if format followed)","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"     * and reacts accordingly.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"     * @param message User input","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"    public Command handleInput(String message) {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"        //So blank inputs can be handled","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"        message +\u003d \" \";","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"        String command \u003d message.substring(0, message.indexOf(\" \"));","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"        String formatted \u003d message.substring(message.indexOf(\u0027 \u0027) + 1).trim();","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"        switch (command) {","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"        case \"list\":","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"            return new ByeCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"        case \"dossiers\":","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"            return new DossiersCommand();","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"        case \"done\":","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"            return new DoneCommand(formatted);","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"            return new DeleteCommand(formatted);","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"wowsiddanth"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"        case \"event\":","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"wowsiddanth"},"content":"            //Fallthrough","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"wowsiddanth"},"content":"            return new TaskCommand(command, formatted);","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"wowsiddanth"},"content":"        case \"date\":","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"wowsiddanth"},"content":"            return new DateCommand(formatted);","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"wowsiddanth"},"content":"        case \"find\":","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"wowsiddanth"},"content":"            return new FindCommand(formatted);","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"wowsiddanth"},"content":"        case \"archive\":","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"wowsiddanth"},"content":"            return new ArchiveCommand(formatted);","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"wowsiddanth"},"content":"        default:","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"wowsiddanth"},"content":"            return new UnintelligibleCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"wowsiddanth"},"content":"     * Parses a given string (if given correctly), creating a LocalTime object","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"wowsiddanth"},"content":"     * It is static as it is available to any object that wants to parse time","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"wowsiddanth"},"content":"     * @param time The given String","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"wowsiddanth"},"content":"     * @return LocalTime object","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"wowsiddanth"},"content":"     * @throws DateTimeParseException Thrown if string cannot be represented as a time object","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"wowsiddanth"},"content":"    public static LocalTime parseTime(String time) throws DateTimeParseException {","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"wowsiddanth"},"content":"        String formattedTime \u003d time.indexOf(\":\") \u003e 0","lastModifiedDate":"2021-09-13"},{"lineNumber":73,"author":{"gitId":"wowsiddanth"},"content":"                ? time","lastModifiedDate":"2021-09-13"},{"lineNumber":74,"author":{"gitId":"wowsiddanth"},"content":"               : time.substring(0, 2) + \":\" + time.substring(2);","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"wowsiddanth"},"content":"        return LocalTime.parse(formattedTime);","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"wowsiddanth"},"content":"     * Parses a given string (if given correctly), creating a LocalDate","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"wowsiddanth"},"content":"     * It is static as it is available to any object that wants to parse time","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"wowsiddanth"},"content":"     * @param date The given String","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"wowsiddanth"},"content":"     * @return LocalDate Object","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"wowsiddanth"},"content":"     * @throws DateTimeParseException Thrown if string cannot be represented as a Date object","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"wowsiddanth"},"content":"    public static LocalDate parseDate(String date) {","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"wowsiddanth"},"content":"        String[] dayMonthYear \u003d date.split(\"/\");","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"wowsiddanth"},"content":"        if (dayMonthYear[0].length() \u003d\u003d 1) {","lastModifiedDate":"2021-09-04"},{"lineNumber":89,"author":{"gitId":"wowsiddanth"},"content":"            //This is done if the user inputs the day as 1 digit, rather than 2","lastModifiedDate":"2021-09-04"},{"lineNumber":90,"author":{"gitId":"wowsiddanth"},"content":"            dayMonthYear[0] \u003d \"0\" + dayMonthYear[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"wowsiddanth"},"content":"        return LocalDate.parse(dayMonthYear[2] + \"-\" + dayMonthYear[1] + \"-\" + dayMonthYear[0]);","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"wowsiddanth":95}},{"path":"src/main/java/petal/components/Responses.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.components;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":" * The Enum that holds all the responses that user might see, as these responses","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":" * remain a constant","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"public enum Responses {","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"    WELCOME_BACK(\"Welcome back! It definitely is good to see you again :D\"),","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"    START_MESSAGE(\"Welcome to Petal!\" + \"\\nI am the best chat bot you\u0027ll meet! Don\u0027t be shy, \"","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"                + \"say something! :P\\nPssss here\u0027s a disclaimer: \"","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"                + \"use the \u0027bye\u0027 command to exit or else your tasks won\u0027t save properly!\"),","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"    INVALID_FORMAT(\"Invalid format given! Please try again :(\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"    INVALID_TASK_NO(\"Invalid task number given! Please enter another value!\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"    EMPTY_DESCRIPTION(\"The description cannot be empty! Enter a valid one! :(\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"    INVALID_DATE_TIME(\"The date/time format used was wrong! Try again :(\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"    UNINTELLIGIBLE(\"I do not understand what you mean :(\"),","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"    INVALID_TASK_NUMBER(\"Invalid task number given! Please enter another value!\"),","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"    GOODBYE(\"You\u0027re leaving :( I hope you return soon!\");","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"    private final String response;","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"     * Constructs a Response instance","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"     * @param response The String response","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"    Responses(String response) {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"        this.response \u003d response;","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"    public String toString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"        return this.response;","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"wowsiddanth":37}},{"path":"src/main/java/petal/components/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.components;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import java.io.File;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"import java.util.Objects;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"import petal.task.Deadline;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"import petal.task.Event;","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"import petal.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"import petal.task.ToDo;","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":" * The Storage that handles all the operation dealing with the creation of directories,","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":" * files, saving of tasks, and the retrieval of previously saved tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"public class Storage {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"    private boolean isFolderAndFilePresent;","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"    private final String folderPath;","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"    private final String saveFilePath;","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"    private final String archiveFilePath;","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"    private final TaskList taskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"     * Constructs a Storage instance","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"     * @param taskList Instance of TaskList being used","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"    public Storage(TaskList taskList) {","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"        folderPath \u003d System.getProperty(\"user.home\") + File.separator + \"PetalData\";","lastModifiedDate":"2021-09-13"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"        saveFilePath \u003d folderPath + File.separator + \"Tasks.txt\";","lastModifiedDate":"2021-09-13"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"        archiveFilePath \u003d folderPath + File.separator + \"Archive.txt\";","lastModifiedDate":"2021-09-13"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"        isFolderAndFilePresent \u003d true;","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"wowsiddanth"},"content":"     * Creates the main PetalData folder, containing Tasks.txt and Archive.txt","lastModifiedDate":"2021-09-13"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"wowsiddanth"},"content":"     * @return String greeting the user","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"wowsiddanth"},"content":"    public String createDirectory() {","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"wowsiddanth"},"content":"        if (hasUsedPetalBefore()) {","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"wowsiddanth"},"content":"            return Responses.WELCOME_BACK.toString();","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"wowsiddanth"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":57,"author":{"gitId":"wowsiddanth"},"content":"            Path path \u003d Paths.get(folderPath);","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"wowsiddanth"},"content":"            File petalData \u003d new File(saveFilePath);","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"wowsiddanth"},"content":"            File archiveData \u003d new File(archiveFilePath);","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"wowsiddanth"},"content":"            Files.createDirectories(path);","lastModifiedDate":"2021-09-13"},{"lineNumber":62,"author":{"gitId":"wowsiddanth"},"content":"            petalData.createNewFile();","lastModifiedDate":"2021-09-13"},{"lineNumber":63,"author":{"gitId":"wowsiddanth"},"content":"            archiveData.createNewFile();","lastModifiedDate":"2021-09-13"},{"lineNumber":64,"author":{"gitId":"wowsiddanth"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"wowsiddanth"},"content":"            isFolderAndFilePresent \u003d false;","lastModifiedDate":"2021-09-04"},{"lineNumber":66,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"wowsiddanth"},"content":"        return Responses.START_MESSAGE.toString();","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"wowsiddanth"},"content":"     * Parses the text from Tasks.txt in tasks and retrieves it as tasks. If it is","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"wowsiddanth"},"content":"     * able to retrieve the tasks, this means that Petal was opened by the user at least","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"wowsiddanth"},"content":"     * once before.","lastModifiedDate":"2021-09-04"},{"lineNumber":74,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"wowsiddanth"},"content":"     * @return True if tasks were retrieved, false if no tasks (new user) or exception occurred","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"wowsiddanth"},"content":"    public boolean hasUsedPetalBefore() {","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"wowsiddanth"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"wowsiddanth"},"content":"            ArrayList\u003cTask\u003e savedTasks \u003d readFile(saveFilePath);","lastModifiedDate":"2021-09-05"},{"lineNumber":80,"author":{"gitId":"wowsiddanth"},"content":"            ArrayList\u003cTask\u003e archive \u003d readFile(archiveFilePath);","lastModifiedDate":"2021-09-05"},{"lineNumber":81,"author":{"gitId":"wowsiddanth"},"content":"            taskList.addTasks(savedTasks, archive);","lastModifiedDate":"2021-09-05"},{"lineNumber":82,"author":{"gitId":"wowsiddanth"},"content":"            return true;","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"wowsiddanth"},"content":"        } catch (FileNotFoundException | NoSuchElementException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"wowsiddanth"},"content":"            return false;","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":89,"author":{"gitId":"wowsiddanth"},"content":"     * Reads the saved tasks from the PetalData.txt file.","lastModifiedDate":"2021-09-04"},{"lineNumber":90,"author":{"gitId":"wowsiddanth"},"content":"     * Parses the text and converts them into the relevant Task objects","lastModifiedDate":"2021-09-04"},{"lineNumber":91,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":92,"author":{"gitId":"wowsiddanth"},"content":"     * @param filePath The address of the file to be read","lastModifiedDate":"2021-09-05"},{"lineNumber":93,"author":{"gitId":"wowsiddanth"},"content":"     * @return ArrayList of the saved tasks","lastModifiedDate":"2021-09-04"},{"lineNumber":94,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":95,"author":{"gitId":"wowsiddanth"},"content":"    private ArrayList\u003cTask\u003e readFile(String filePath) throws FileNotFoundException {","lastModifiedDate":"2021-09-05"},{"lineNumber":96,"author":{"gitId":"wowsiddanth"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-09-05"},{"lineNumber":97,"author":{"gitId":"wowsiddanth"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-05"},{"lineNumber":98,"author":{"gitId":"wowsiddanth"},"content":"        Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2021-09-05"},{"lineNumber":99,"author":{"gitId":"wowsiddanth"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2021-09-05"},{"lineNumber":100,"author":{"gitId":"wowsiddanth"},"content":"            String taskLine \u003d sc.nextLine();","lastModifiedDate":"2021-09-05"},{"lineNumber":101,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":102,"author":{"gitId":"wowsiddanth"},"content":"            String[] components \u003d taskLine.split(\"\\\\|\");","lastModifiedDate":"2021-09-04"},{"lineNumber":103,"author":{"gitId":"wowsiddanth"},"content":"            String typeOfTask \u003d components[0];","lastModifiedDate":"2021-09-04"},{"lineNumber":104,"author":{"gitId":"wowsiddanth"},"content":"            String descOfTask \u003d components[2];","lastModifiedDate":"2021-09-04"},{"lineNumber":105,"author":{"gitId":"wowsiddanth"},"content":"            String dateTime \u003d (typeOfTask.equals(\"D\") || typeOfTask.equals(\"E\")) ? components[3] : \"\";","lastModifiedDate":"2021-09-04"},{"lineNumber":106,"author":{"gitId":"wowsiddanth"},"content":"            boolean isDone \u003d Objects.equals(components[1], \"X\");","lastModifiedDate":"2021-09-04"},{"lineNumber":107,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":108,"author":{"gitId":"wowsiddanth"},"content":"            if (typeOfTask.equals(\"T\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":109,"author":{"gitId":"wowsiddanth"},"content":"                tasks.add(new ToDo(descOfTask, isDone));","lastModifiedDate":"2021-09-04"},{"lineNumber":110,"author":{"gitId":"wowsiddanth"},"content":"            } else if (typeOfTask.equals(\"D\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":111,"author":{"gitId":"wowsiddanth"},"content":"                tasks.add(new Deadline(descOfTask, dateTime, isDone));","lastModifiedDate":"2021-09-04"},{"lineNumber":112,"author":{"gitId":"wowsiddanth"},"content":"            } else {","lastModifiedDate":"2021-09-04"},{"lineNumber":113,"author":{"gitId":"wowsiddanth"},"content":"                tasks.add(new Event(descOfTask, dateTime, isDone));","lastModifiedDate":"2021-09-04"},{"lineNumber":114,"author":{"gitId":"wowsiddanth"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":115,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":116,"author":{"gitId":"wowsiddanth"},"content":"        return tasks;","lastModifiedDate":"2021-09-04"},{"lineNumber":117,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":118,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":119,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"wowsiddanth"},"content":"     * Saves the tasks in the task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"wowsiddanth"},"content":"     * If the folder/file couldn\u0027t be created properly, the bot doesn\u0027t save the tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":123,"author":{"gitId":"wowsiddanth"},"content":"     * @throws IOException Thrown if tasks are not saved properly","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":125,"author":{"gitId":"wowsiddanth"},"content":"    public void saveTasks() throws IOException {","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"wowsiddanth"},"content":"        if (!isFolderAndFilePresent) {","lastModifiedDate":"2021-09-04"},{"lineNumber":127,"author":{"gitId":"wowsiddanth"},"content":"            return;","lastModifiedDate":"2021-08-22"},{"lineNumber":128,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":129,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":130,"author":{"gitId":"wowsiddanth"},"content":"        FileWriter currFileWriter \u003d new FileWriter(saveFilePath);","lastModifiedDate":"2021-09-05"},{"lineNumber":131,"author":{"gitId":"wowsiddanth"},"content":"        FileWriter archiveFileWriter \u003d new FileWriter(archiveFilePath);","lastModifiedDate":"2021-09-05"},{"lineNumber":132,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":133,"author":{"gitId":"wowsiddanth"},"content":"        currFileWriter.write(taskList.formatForCurrSaving());","lastModifiedDate":"2021-09-05"},{"lineNumber":134,"author":{"gitId":"wowsiddanth"},"content":"        archiveFileWriter.write(taskList.formatForArchivesSaving());","lastModifiedDate":"2021-09-05"},{"lineNumber":135,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":136,"author":{"gitId":"wowsiddanth"},"content":"        currFileWriter.close();","lastModifiedDate":"2021-09-05"},{"lineNumber":137,"author":{"gitId":"wowsiddanth"},"content":"        archiveFileWriter.close();","lastModifiedDate":"2021-09-05"},{"lineNumber":138,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":139,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":140,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"wowsiddanth":142}},{"path":"src/main/java/petal/components/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.components;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"import java.util.List;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"import petal.exception.EmptyDescException;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"import petal.exception.InvalidInputException;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"import petal.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"import petal.task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"import petal.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"import petal.task.Timeable;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"import petal.task.ToDo;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":" * The TaskList class represents the tasks, and handles the operations","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":" * done to the tasks","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"public class TaskList {","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"    private final List\u003cTask\u003e currentTasks;","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"    private final List\u003cTask\u003e archivedTasks;","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"    private final Calendar calendar;","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"    public enum Action {","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"        TASK_ADD,","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"        TASK_DELETE,","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"        TASK_ARCHIVE;","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"     * Constructs a TaskList instance","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"    public TaskList() {","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"        currentTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"        calendar \u003d new Calendar();","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"        archivedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"     * Adds the list of previously saved tasks to the list of tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"     * @param addTasks The arraylist of previously saved tasks","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"    @SafeVarargs","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"    protected final void addTasks(ArrayList\u003cTask\u003e... addTasks) {","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"        currentTasks.addAll(addTasks[0]);","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"wowsiddanth"},"content":"        archivedTasks.addAll(addTasks[1]);","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"wowsiddanth"},"content":"     * Handles the task, depending on the command given","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"wowsiddanth"},"content":"     * @param type The type of task: To.Do, deadline, event","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"wowsiddanth"},"content":"     * @throws EmptyDescException Thrown when the task lacks a description","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"wowsiddanth"},"content":"     * @throws InvalidInputException Thrown when an invalid format is given or when a time is not given","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"wowsiddanth"},"content":"    public String handleTask(String type, String description) throws EmptyDescException, InvalidInputException {","lastModifiedDate":"2021-09-04"},{"lineNumber":59,"author":{"gitId":"wowsiddanth"},"content":"        String[] deadlineEvent \u003d (type.equals(\"deadline\"))","lastModifiedDate":"2021-09-13"},{"lineNumber":60,"author":{"gitId":"wowsiddanth"},"content":"                ? description.split(\"/by\")","lastModifiedDate":"2021-09-13"},{"lineNumber":61,"author":{"gitId":"wowsiddanth"},"content":"                : description.split(\"/at\");","lastModifiedDate":"2021-09-04"},{"lineNumber":62,"author":{"gitId":"wowsiddanth"},"content":"        checkIfValidFormat(type, description, deadlineEvent);","lastModifiedDate":"2021-09-04"},{"lineNumber":63,"author":{"gitId":"wowsiddanth"},"content":"        if (type.equals(\"todo\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":64,"author":{"gitId":"wowsiddanth"},"content":"            return handleToDo(description);","lastModifiedDate":"2021-09-04"},{"lineNumber":65,"author":{"gitId":"wowsiddanth"},"content":"        } else {","lastModifiedDate":"2021-09-04"},{"lineNumber":66,"author":{"gitId":"wowsiddanth"},"content":"            return handleTimeable(type, deadlineEvent);","lastModifiedDate":"2021-09-04"},{"lineNumber":67,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":70,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":71,"author":{"gitId":"wowsiddanth"},"content":"     * Checks if the task command was given in the correct format","lastModifiedDate":"2021-09-13"},{"lineNumber":72,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-09-13"},{"lineNumber":73,"author":{"gitId":"wowsiddanth"},"content":"     * @param type The type of task","lastModifiedDate":"2021-09-13"},{"lineNumber":74,"author":{"gitId":"wowsiddanth"},"content":"     * @param message The description of task","lastModifiedDate":"2021-09-13"},{"lineNumber":75,"author":{"gitId":"wowsiddanth"},"content":"     * @param deadlineEvent The array with the description/date (only for Timeable)","lastModifiedDate":"2021-09-13"},{"lineNumber":76,"author":{"gitId":"wowsiddanth"},"content":"     * @throws EmptyDescException Thrown if desc is empty","lastModifiedDate":"2021-09-13"},{"lineNumber":77,"author":{"gitId":"wowsiddanth"},"content":"     * @throws InvalidInputException Thrown if other components are missing from format","lastModifiedDate":"2021-09-13"},{"lineNumber":78,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":79,"author":{"gitId":"wowsiddanth"},"content":"    private void checkIfValidFormat(String type, String message, String[] deadlineEvent) throws EmptyDescException,","lastModifiedDate":"2021-09-13"},{"lineNumber":80,"author":{"gitId":"wowsiddanth"},"content":"            InvalidInputException {","lastModifiedDate":"2021-09-13"},{"lineNumber":81,"author":{"gitId":"wowsiddanth"},"content":"        boolean emptyDesc \u003d message.isBlank() || deadlineEvent[0].isBlank();","lastModifiedDate":"2021-09-13"},{"lineNumber":82,"author":{"gitId":"wowsiddanth"},"content":"        boolean invalidTimeableFormat \u003d type.equals(\"deadline\") || type.equals(\"event\") \u0026\u0026 deadlineEvent.length \u003c 2;","lastModifiedDate":"2021-09-13"},{"lineNumber":83,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":84,"author":{"gitId":"wowsiddanth"},"content":"        if (emptyDesc) {","lastModifiedDate":"2021-09-13"},{"lineNumber":85,"author":{"gitId":"wowsiddanth"},"content":"            throw new EmptyDescException(Responses.EMPTY_DESCRIPTION);","lastModifiedDate":"2021-09-13"},{"lineNumber":86,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":87,"author":{"gitId":"wowsiddanth"},"content":"        if (invalidTimeableFormat) {","lastModifiedDate":"2021-09-13"},{"lineNumber":88,"author":{"gitId":"wowsiddanth"},"content":"            throw new InvalidInputException(Responses.INVALID_FORMAT);","lastModifiedDate":"2021-09-13"},{"lineNumber":89,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":90,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":91,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":92,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":93,"author":{"gitId":"wowsiddanth"},"content":"     * Handles a To.Do task","lastModifiedDate":"2021-09-04"},{"lineNumber":94,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":95,"author":{"gitId":"wowsiddanth"},"content":"     * @param message The description","lastModifiedDate":"2021-09-04"},{"lineNumber":96,"author":{"gitId":"wowsiddanth"},"content":"     * @return The string representing that the task was added","lastModifiedDate":"2021-09-04"},{"lineNumber":97,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":98,"author":{"gitId":"wowsiddanth"},"content":"    private String handleToDo(String message) {","lastModifiedDate":"2021-09-04"},{"lineNumber":99,"author":{"gitId":"wowsiddanth"},"content":"        Task todo \u003d new ToDo(message, false);","lastModifiedDate":"2021-09-04"},{"lineNumber":100,"author":{"gitId":"wowsiddanth"},"content":"        return addTask(todo, false);","lastModifiedDate":"2021-09-13"},{"lineNumber":101,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":103,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":104,"author":{"gitId":"wowsiddanth"},"content":"     * Handles a Timeable (Deadline or Event)","lastModifiedDate":"2021-09-04"},{"lineNumber":105,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":106,"author":{"gitId":"wowsiddanth"},"content":"     * @param type The type of task (Deadline or Event)","lastModifiedDate":"2021-09-04"},{"lineNumber":107,"author":{"gitId":"wowsiddanth"},"content":"     * @param deadlineEvent The array that contains the description and date of the task","lastModifiedDate":"2021-09-04"},{"lineNumber":108,"author":{"gitId":"wowsiddanth"},"content":"     * @return The string representing that the task was added","lastModifiedDate":"2021-09-04"},{"lineNumber":109,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":110,"author":{"gitId":"wowsiddanth"},"content":"    private String handleTimeable(String type, String[] deadlineEvent) throws InvalidInputException {","lastModifiedDate":"2021-09-04"},{"lineNumber":111,"author":{"gitId":"wowsiddanth"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":112,"author":{"gitId":"wowsiddanth"},"content":"            Task timeable \u003d (type.equals(\"deadline\"))","lastModifiedDate":"2021-09-13"},{"lineNumber":113,"author":{"gitId":"wowsiddanth"},"content":"                    ? new Deadline(deadlineEvent[0], deadlineEvent[1], false)","lastModifiedDate":"2021-09-13"},{"lineNumber":114,"author":{"gitId":"wowsiddanth"},"content":"                    : new Event(deadlineEvent[0], deadlineEvent[1], false);","lastModifiedDate":"2021-09-04"},{"lineNumber":115,"author":{"gitId":"wowsiddanth"},"content":"            return addTask(timeable, true);","lastModifiedDate":"2021-09-13"},{"lineNumber":116,"author":{"gitId":"wowsiddanth"},"content":"        } catch (DateTimeParseException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":117,"author":{"gitId":"wowsiddanth"},"content":"            throw new InvalidInputException(Responses.INVALID_DATE_TIME);","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":119,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":121,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":122,"author":{"gitId":"wowsiddanth"},"content":"     * Adds a task to the list of tasks","lastModifiedDate":"2021-09-13"},{"lineNumber":123,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-09-13"},{"lineNumber":124,"author":{"gitId":"wowsiddanth"},"content":"     * @param task The task to be added","lastModifiedDate":"2021-09-13"},{"lineNumber":125,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":126,"author":{"gitId":"wowsiddanth"},"content":"    private String addTask(Task task, boolean isTimeable) {","lastModifiedDate":"2021-09-13"},{"lineNumber":127,"author":{"gitId":"wowsiddanth"},"content":"        if (isTimeable) {","lastModifiedDate":"2021-09-13"},{"lineNumber":128,"author":{"gitId":"wowsiddanth"},"content":"            calendar.addToCalendar((Timeable) task);","lastModifiedDate":"2021-09-13"},{"lineNumber":129,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":130,"author":{"gitId":"wowsiddanth"},"content":"        currentTasks.add(task);","lastModifiedDate":"2021-09-13"},{"lineNumber":131,"author":{"gitId":"wowsiddanth"},"content":"        return replyForTaskActions(task, Action.TASK_ADD);","lastModifiedDate":"2021-09-13"},{"lineNumber":132,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":133,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":134,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":135,"author":{"gitId":"wowsiddanth"},"content":"     * Deletes a task from the list of tasks","lastModifiedDate":"2021-09-13"},{"lineNumber":136,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-09-13"},{"lineNumber":137,"author":{"gitId":"wowsiddanth"},"content":"     * @param index The message given by the user input","lastModifiedDate":"2021-09-13"},{"lineNumber":138,"author":{"gitId":"wowsiddanth"},"content":"     * @throws InvalidInputException Thrown if no index inputted by the user or","lastModifiedDate":"2021-09-13"},{"lineNumber":139,"author":{"gitId":"wowsiddanth"},"content":"     *                               when index is out-of-bounds/not valid int or when","lastModifiedDate":"2021-09-13"},{"lineNumber":140,"author":{"gitId":"wowsiddanth"},"content":"     *                               desc is empty","lastModifiedDate":"2021-09-13"},{"lineNumber":141,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":142,"author":{"gitId":"wowsiddanth"},"content":"    public String deleteTask(String index) throws InvalidInputException {","lastModifiedDate":"2021-09-13"},{"lineNumber":143,"author":{"gitId":"wowsiddanth"},"content":"        try {","lastModifiedDate":"2021-09-13"},{"lineNumber":144,"author":{"gitId":"wowsiddanth"},"content":"            int indexOfTask \u003d Integer.parseInt(index) - 1;","lastModifiedDate":"2021-09-13"},{"lineNumber":145,"author":{"gitId":"wowsiddanth"},"content":"            Task toBeDeleted \u003d currentTasks.remove(indexOfTask);","lastModifiedDate":"2021-09-13"},{"lineNumber":146,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":147,"author":{"gitId":"wowsiddanth"},"content":"            if (toBeDeleted.isTimeable()) {","lastModifiedDate":"2021-09-13"},{"lineNumber":148,"author":{"gitId":"wowsiddanth"},"content":"                calendar.updateCalendar(currentTasks);","lastModifiedDate":"2021-09-13"},{"lineNumber":149,"author":{"gitId":"wowsiddanth"},"content":"            }","lastModifiedDate":"2021-09-13"},{"lineNumber":150,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":151,"author":{"gitId":"wowsiddanth"},"content":"            return replyForTaskActions(toBeDeleted, Action.TASK_DELETE);","lastModifiedDate":"2021-09-13"},{"lineNumber":152,"author":{"gitId":"wowsiddanth"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":153,"author":{"gitId":"wowsiddanth"},"content":"            throw new InvalidInputException(Responses.INVALID_TASK_NUMBER, e);","lastModifiedDate":"2021-09-13"},{"lineNumber":154,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":155,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":156,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":157,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":158,"author":{"gitId":"wowsiddanth"},"content":"     * Adds the task to the list of archived task","lastModifiedDate":"2021-09-05"},{"lineNumber":159,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":160,"author":{"gitId":"wowsiddanth"},"content":"     * @param index The index of the index","lastModifiedDate":"2021-09-05"},{"lineNumber":161,"author":{"gitId":"wowsiddanth"},"content":"     * @throws InvalidInputException If index is invalid","lastModifiedDate":"2021-09-05"},{"lineNumber":162,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":163,"author":{"gitId":"wowsiddanth"},"content":"    public String archiveTask(String index) throws InvalidInputException {","lastModifiedDate":"2021-09-06"},{"lineNumber":164,"author":{"gitId":"wowsiddanth"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":165,"author":{"gitId":"wowsiddanth"},"content":"            int indexOfTask \u003d Integer.parseInt(index) - 1;","lastModifiedDate":"2021-09-05"},{"lineNumber":166,"author":{"gitId":"wowsiddanth"},"content":"            Task toArchive \u003d currentTasks.get(indexOfTask);","lastModifiedDate":"2021-09-05"},{"lineNumber":167,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":168,"author":{"gitId":"wowsiddanth"},"content":"            deleteTask(index);","lastModifiedDate":"2021-09-05"},{"lineNumber":169,"author":{"gitId":"wowsiddanth"},"content":"            archivedTasks.add(toArchive);","lastModifiedDate":"2021-09-05"},{"lineNumber":170,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":171,"author":{"gitId":"wowsiddanth"},"content":"            return replyForTaskActions(toArchive, Action.TASK_ARCHIVE);","lastModifiedDate":"2021-09-13"},{"lineNumber":172,"author":{"gitId":"wowsiddanth"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":173,"author":{"gitId":"wowsiddanth"},"content":"            throw new InvalidInputException(Responses.INVALID_TASK_NO);","lastModifiedDate":"2021-09-05"},{"lineNumber":174,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":175,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":176,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":177,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":178,"author":{"gitId":"wowsiddanth"},"content":"     * Returns the reply for a certain action relating to a task has been","lastModifiedDate":"2021-09-13"},{"lineNumber":179,"author":{"gitId":"wowsiddanth"},"content":"     * completed","lastModifiedDate":"2021-09-13"},{"lineNumber":180,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":181,"author":{"gitId":"wowsiddanth"},"content":"     * @param task The task the action modified","lastModifiedDate":"2021-09-13"},{"lineNumber":182,"author":{"gitId":"wowsiddanth"},"content":"     * @param typeOfAction The type of action, e.g. add/delete/archive","lastModifiedDate":"2021-09-13"},{"lineNumber":183,"author":{"gitId":"wowsiddanth"},"content":"     * @return String, which represents the reply","lastModifiedDate":"2021-09-13"},{"lineNumber":184,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":185,"author":{"gitId":"wowsiddanth"},"content":"    public String replyForTaskActions(Task task, Action typeOfAction) {","lastModifiedDate":"2021-09-13"},{"lineNumber":186,"author":{"gitId":"wowsiddanth"},"content":"        String reply \u003d \"\";","lastModifiedDate":"2021-09-13"},{"lineNumber":187,"author":{"gitId":"wowsiddanth"},"content":"        String pluralCurrTasks \u003d (currentTasks.size()) !\u003d 1 ? \" tasks!\" : \" task!\";","lastModifiedDate":"2021-09-13"},{"lineNumber":188,"author":{"gitId":"wowsiddanth"},"content":"        String pluralArchivedTasks \u003d (archivedTasks.size()) \u003e 1","lastModifiedDate":"2021-09-13"},{"lineNumber":189,"author":{"gitId":"wowsiddanth"},"content":"                ? \" tasks in your archives!\"","lastModifiedDate":"2021-09-13"},{"lineNumber":190,"author":{"gitId":"wowsiddanth"},"content":"                : \" task in your archives!\";","lastModifiedDate":"2021-09-13"},{"lineNumber":191,"author":{"gitId":"wowsiddanth"},"content":"        switch (typeOfAction) {","lastModifiedDate":"2021-09-13"},{"lineNumber":192,"author":{"gitId":"wowsiddanth"},"content":"        case TASK_ADD:","lastModifiedDate":"2021-09-13"},{"lineNumber":193,"author":{"gitId":"wowsiddanth"},"content":"            reply \u003d \"Okay. I\u0027ve added this task:\\n\" + task + \"\\nYou now have \" + currentTasks.size() + pluralCurrTasks;","lastModifiedDate":"2021-09-13"},{"lineNumber":194,"author":{"gitId":"wowsiddanth"},"content":"            break;","lastModifiedDate":"2021-09-13"},{"lineNumber":195,"author":{"gitId":"wowsiddanth"},"content":"        case TASK_DELETE:","lastModifiedDate":"2021-09-13"},{"lineNumber":196,"author":{"gitId":"wowsiddanth"},"content":"            reply \u003d \"Okay. I\u0027ve deleted this task:\\n\" + task + \"\\nYou now have \" + currentTasks.size()","lastModifiedDate":"2021-09-13"},{"lineNumber":197,"author":{"gitId":"wowsiddanth"},"content":"                    + pluralCurrTasks;","lastModifiedDate":"2021-09-13"},{"lineNumber":198,"author":{"gitId":"wowsiddanth"},"content":"            break;","lastModifiedDate":"2021-09-13"},{"lineNumber":199,"author":{"gitId":"wowsiddanth"},"content":"        case TASK_ARCHIVE:","lastModifiedDate":"2021-09-13"},{"lineNumber":200,"author":{"gitId":"wowsiddanth"},"content":"            reply \u003d \"Okay. I\u0027ve added this task:\\n\" + task","lastModifiedDate":"2021-09-13"},{"lineNumber":201,"author":{"gitId":"wowsiddanth"},"content":"                    + \"\\nYou now have \" + archivedTasks.size() + pluralArchivedTasks;","lastModifiedDate":"2021-09-13"},{"lineNumber":202,"author":{"gitId":"wowsiddanth"},"content":"            break;","lastModifiedDate":"2021-09-13"},{"lineNumber":203,"author":{"gitId":"wowsiddanth"},"content":"        default: //All cases handled","lastModifiedDate":"2021-09-13"},{"lineNumber":204,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":205,"author":{"gitId":"wowsiddanth"},"content":"        return reply;","lastModifiedDate":"2021-09-13"},{"lineNumber":206,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":207,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":208,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":209,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":210,"author":{"gitId":"wowsiddanth"},"content":"     * Marks a particular task as done","lastModifiedDate":"2021-08-24"},{"lineNumber":211,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":212,"author":{"gitId":"wowsiddanth"},"content":"     * @param indexOfTask String representation of the index of the task","lastModifiedDate":"2021-08-22"},{"lineNumber":213,"author":{"gitId":"wowsiddanth"},"content":"     * @throws IndexOutOfBoundsException Thrown if string is not within size of list","lastModifiedDate":"2021-08-22"},{"lineNumber":214,"author":{"gitId":"wowsiddanth"},"content":"     * @throws NumberFormatException Thrown if string cannot be converted into valid int","lastModifiedDate":"2021-08-22"},{"lineNumber":215,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":216,"author":{"gitId":"wowsiddanth"},"content":"    public String markTaskAsDone(String indexOfTask) throws InvalidInputException {","lastModifiedDate":"2021-09-01"},{"lineNumber":217,"author":{"gitId":"wowsiddanth"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":218,"author":{"gitId":"wowsiddanth"},"content":"            int index \u003d Integer.parseInt(indexOfTask) - 1;","lastModifiedDate":"2021-09-13"},{"lineNumber":219,"author":{"gitId":"wowsiddanth"},"content":"            Task taskToBeCompleted \u003d currentTasks.get(index);","lastModifiedDate":"2021-09-13"},{"lineNumber":220,"author":{"gitId":"wowsiddanth"},"content":"            String taskDoneMessage \u003d taskToBeCompleted.taskDone();","lastModifiedDate":"2021-09-13"},{"lineNumber":221,"author":{"gitId":"wowsiddanth"},"content":"            return taskDoneMessage;","lastModifiedDate":"2021-09-13"},{"lineNumber":222,"author":{"gitId":"wowsiddanth"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":223,"author":{"gitId":"wowsiddanth"},"content":"            throw new InvalidInputException(Responses.INVALID_TASK_NO);","lastModifiedDate":"2021-08-24"},{"lineNumber":224,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":225,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":226,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":227,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":228,"author":{"gitId":"wowsiddanth"},"content":"     * Returns a string representation of the current tasks","lastModifiedDate":"2021-09-05"},{"lineNumber":229,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":230,"author":{"gitId":"wowsiddanth"},"content":"     * @return String containing the number, type, and description of the saved tasks","lastModifiedDate":"2021-09-05"},{"lineNumber":231,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":232,"author":{"gitId":"wowsiddanth"},"content":"    public String printCurrTasks() {","lastModifiedDate":"2021-09-05"},{"lineNumber":233,"author":{"gitId":"wowsiddanth"},"content":"        return printListOfTasks(currentTasks);","lastModifiedDate":"2021-09-05"},{"lineNumber":234,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":235,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":236,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":237,"author":{"gitId":"wowsiddanth"},"content":"     * Returns a string representation of the archived tasks","lastModifiedDate":"2021-09-05"},{"lineNumber":238,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":239,"author":{"gitId":"wowsiddanth"},"content":"     * @return String containing, the number, type, and description of the archived tasks","lastModifiedDate":"2021-09-05"},{"lineNumber":240,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":241,"author":{"gitId":"wowsiddanth"},"content":"    public String printArchive() {","lastModifiedDate":"2021-09-05"},{"lineNumber":242,"author":{"gitId":"wowsiddanth"},"content":"        return printListOfTasks(archivedTasks);","lastModifiedDate":"2021-09-05"},{"lineNumber":243,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":244,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":245,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":246,"author":{"gitId":"wowsiddanth"},"content":"     * Returns a string representation of the tasks in the given list","lastModifiedDate":"2021-09-05"},{"lineNumber":247,"author":{"gitId":"wowsiddanth"},"content":"     * e.g 1. [T][ ] Go for a run etc","lastModifiedDate":"2021-09-13"},{"lineNumber":248,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":249,"author":{"gitId":"wowsiddanth"},"content":"     * @param tasks The given list of tasks","lastModifiedDate":"2021-09-05"},{"lineNumber":250,"author":{"gitId":"wowsiddanth"},"content":"     * @return String containing, the number, type, and description of the archived tasks","lastModifiedDate":"2021-09-05"},{"lineNumber":251,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":252,"author":{"gitId":"wowsiddanth"},"content":"    public static String printListOfTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-05"},{"lineNumber":253,"author":{"gitId":"wowsiddanth"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-28"},{"lineNumber":254,"author":{"gitId":"wowsiddanth"},"content":"            return \"No items in list yet!\";","lastModifiedDate":"2021-08-22"},{"lineNumber":255,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":256,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":257,"author":{"gitId":"wowsiddanth"},"content":"        int count \u003d 1;","lastModifiedDate":"2021-08-22"},{"lineNumber":258,"author":{"gitId":"wowsiddanth"},"content":"        StringBuilder list \u003d new StringBuilder();","lastModifiedDate":"2021-08-22"},{"lineNumber":259,"author":{"gitId":"wowsiddanth"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2021-09-04"},{"lineNumber":260,"author":{"gitId":"wowsiddanth"},"content":"            if (count \u003d\u003d 1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":261,"author":{"gitId":"wowsiddanth"},"content":"                list.append(count++).append(\". \").append(t);","lastModifiedDate":"2021-09-04"},{"lineNumber":262,"author":{"gitId":"wowsiddanth"},"content":"            } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":263,"author":{"gitId":"wowsiddanth"},"content":"                list.append(\"\\n\").append(count++).append(\". \").append(t);","lastModifiedDate":"2021-09-04"},{"lineNumber":264,"author":{"gitId":"wowsiddanth"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":265,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":266,"author":{"gitId":"wowsiddanth"},"content":"        return list.toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":267,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":268,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":269,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":270,"author":{"gitId":"wowsiddanth"},"content":"     * Displays the tasks on the given date","lastModifiedDate":"2021-08-24"},{"lineNumber":271,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":272,"author":{"gitId":"wowsiddanth"},"content":"     * @param date The date given","lastModifiedDate":"2021-08-23"},{"lineNumber":273,"author":{"gitId":"wowsiddanth"},"content":"     * @throws InvalidInputException Thrown if the parameter has an invalid format/input","lastModifiedDate":"2021-08-23"},{"lineNumber":274,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":275,"author":{"gitId":"wowsiddanth"},"content":"    public String showTaskOnDate(String date) throws InvalidInputException {","lastModifiedDate":"2021-09-01"},{"lineNumber":276,"author":{"gitId":"wowsiddanth"},"content":"        return calendar.showTasksOnDate(Parser.parseDate(date));","lastModifiedDate":"2021-09-01"},{"lineNumber":277,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":278,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":279,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":280,"author":{"gitId":"wowsiddanth"},"content":"     * Returns string of tasks that contain the keyword","lastModifiedDate":"2021-09-01"},{"lineNumber":281,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":282,"author":{"gitId":"wowsiddanth"},"content":"     * @param keyword The keyword to be found","lastModifiedDate":"2021-09-01"},{"lineNumber":283,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":284,"author":{"gitId":"wowsiddanth"},"content":"    public String findTaskWithKeyword(String keyword) throws InvalidInputException {","lastModifiedDate":"2021-09-01"},{"lineNumber":285,"author":{"gitId":"wowsiddanth"},"content":"        final int[] count \u003d {1};","lastModifiedDate":"2021-09-04"},{"lineNumber":286,"author":{"gitId":"wowsiddanth"},"content":"        StringBuilder result \u003d new StringBuilder(\"Here are the tasks:\");","lastModifiedDate":"2021-09-04"},{"lineNumber":287,"author":{"gitId":"wowsiddanth"},"content":"        currentTasks.stream().filter(x -\u003e x.isKeyWordPresent(keyword))","lastModifiedDate":"2021-09-05"},{"lineNumber":288,"author":{"gitId":"wowsiddanth"},"content":"                             .forEach(x -\u003e result.append(\u0027\\n\u0027)","lastModifiedDate":"2021-09-13"},{"lineNumber":289,"author":{"gitId":"wowsiddanth"},"content":"                                                 .append(count[0]++)","lastModifiedDate":"2021-09-13"},{"lineNumber":290,"author":{"gitId":"wowsiddanth"},"content":"                                                 .append(\". \")","lastModifiedDate":"2021-09-13"},{"lineNumber":291,"author":{"gitId":"wowsiddanth"},"content":"                                                 .append(x));","lastModifiedDate":"2021-09-13"},{"lineNumber":292,"author":{"gitId":"wowsiddanth"},"content":"        if (count[0] \u003d\u003d 1) {","lastModifiedDate":"2021-09-04"},{"lineNumber":293,"author":{"gitId":"wowsiddanth"},"content":"            return \"No tasks!\";","lastModifiedDate":"2021-09-04"},{"lineNumber":294,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":295,"author":{"gitId":"wowsiddanth"},"content":"        return result.toString();","lastModifiedDate":"2021-09-04"},{"lineNumber":296,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":297,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":298,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":299,"author":{"gitId":"wowsiddanth"},"content":"     * Returns a formatted string representation of the archived tasks for saving","lastModifiedDate":"2021-09-06"},{"lineNumber":300,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":301,"author":{"gitId":"wowsiddanth"},"content":"     * @return Formatted string representation for saving","lastModifiedDate":"2021-09-05"},{"lineNumber":302,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":303,"author":{"gitId":"wowsiddanth"},"content":"    public String formatForCurrSaving() {","lastModifiedDate":"2021-09-06"},{"lineNumber":304,"author":{"gitId":"wowsiddanth"},"content":"        return formatTasksForSaving(currentTasks);","lastModifiedDate":"2021-09-06"},{"lineNumber":305,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":306,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":307,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":308,"author":{"gitId":"wowsiddanth"},"content":"     * Returns the string representation of the current tasks for saving","lastModifiedDate":"2021-09-06"},{"lineNumber":309,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":310,"author":{"gitId":"wowsiddanth"},"content":"     * @return Formatted string representation for saving","lastModifiedDate":"2021-09-05"},{"lineNumber":311,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":312,"author":{"gitId":"wowsiddanth"},"content":"    public String formatForArchivesSaving() {","lastModifiedDate":"2021-09-06"},{"lineNumber":313,"author":{"gitId":"wowsiddanth"},"content":"        return formatTasksForSaving(archivedTasks);","lastModifiedDate":"2021-09-06"},{"lineNumber":314,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":315,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":316,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":317,"author":{"gitId":"wowsiddanth"},"content":"     * Returns the string representation of the tasks in the list","lastModifiedDate":"2021-09-05"},{"lineNumber":318,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":319,"author":{"gitId":"wowsiddanth"},"content":"     * @param tasks The list of tasks","lastModifiedDate":"2021-09-05"},{"lineNumber":320,"author":{"gitId":"wowsiddanth"},"content":"     * @return Formatted string representation for saving","lastModifiedDate":"2021-09-05"},{"lineNumber":321,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":322,"author":{"gitId":"wowsiddanth"},"content":"    private String formatTasksForSaving(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-05"},{"lineNumber":323,"author":{"gitId":"wowsiddanth"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2021-08-22"},{"lineNumber":324,"author":{"gitId":"wowsiddanth"},"content":"        int count \u003d 1;","lastModifiedDate":"2021-09-05"},{"lineNumber":325,"author":{"gitId":"wowsiddanth"},"content":"        for (Task m : tasks) {","lastModifiedDate":"2021-08-22"},{"lineNumber":326,"author":{"gitId":"wowsiddanth"},"content":"            if (count \u003d\u003d 1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":327,"author":{"gitId":"wowsiddanth"},"content":"                result.append(m.formatStrForSaving());","lastModifiedDate":"2021-08-28"},{"lineNumber":328,"author":{"gitId":"wowsiddanth"},"content":"            } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":329,"author":{"gitId":"wowsiddanth"},"content":"                result.append(\"\\n\").append(m.formatStrForSaving());","lastModifiedDate":"2021-08-28"},{"lineNumber":330,"author":{"gitId":"wowsiddanth"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":331,"author":{"gitId":"wowsiddanth"},"content":"            count++;","lastModifiedDate":"2021-08-22"},{"lineNumber":332,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":333,"author":{"gitId":"wowsiddanth"},"content":"        return result.toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":334,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":335,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":336,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"wowsiddanth":336}},{"path":"src/main/java/petal/components/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.components;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import petal.Petal;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"import petal.gui.MainWindow;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":" * The Ui is responsible for handling the output, and interactions","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":" * with the user","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"public class Ui {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"    private final Petal petal;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"     * Constructs an Ui instance","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"    public Ui(Petal petal) {","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"        this.petal \u003d petal;","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"    public void setMainWindow(MainWindow mainWindow) {","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"        this.mainWindow \u003d mainWindow;","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"        petal.greetUser();","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"     * Reads the command and passes into Petal for comprehension","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"     * @param userInput The message the user has given","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"    public void readCommand(String userInput) {","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"        petal.run(userInput);","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"     * Sends the reply and user input back to the main window to display","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"     * @param message The user input","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"     * @param reply The reply to the message","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"    public void sendToGui(String message, String reply) {","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"        assert mainWindow !\u003d null;","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"        mainWindow.sendUserReply(message, reply);","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"        if (reply.equals(Responses.GOODBYE.toString())) {","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"            mainWindow.terminatePetal();","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"wowsiddanth"},"content":"     * Sends reply to the main window to display","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"wowsiddanth"},"content":"     * @param reply The reply to the message","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":55,"author":{"gitId":"wowsiddanth"},"content":"    public void sendToGui(String reply) {","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"wowsiddanth"},"content":"        assert mainWindow !\u003d null;","lastModifiedDate":"2021-09-04"},{"lineNumber":57,"author":{"gitId":"wowsiddanth"},"content":"        mainWindow.sendUserReply(reply);","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"wowsiddanth":60}},{"path":"src/main/java/petal/exception/EmptyDescException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.exception;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Responses;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":" * EmptyDescException class. Subclass of PetalException.","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":" * Thrown when user does not give a description for Event/Deadline.","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":" * Example: \"deadline /by 8pm\"","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"public class EmptyDescException extends PetalException {","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"     * Constructs an EmptyDescException","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"     * @param message The exception message","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"    public EmptyDescException(Responses message) {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"        super(message.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"wowsiddanth":21}},{"path":"src/main/java/petal/exception/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.exception;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Responses;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":" * InvalidInputException class, subclass of PetalException.","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":" * Thrown when user enters something unintelligible (\"random command\")","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":" * or when the user enters the wrong format (\"deadline go for a run /at 6pm\")","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"public class InvalidInputException extends PetalException {","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"     * Constructs an InvalidInputException","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"     * @param message The exception message","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"    public InvalidInputException(Responses message) {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"        super(message.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"     * Constructs an InvalidInputException (used as a wrapper)","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"     * @param response The exception message","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"     * @param cause Initial cause","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"    public InvalidInputException(Responses response, Throwable cause) {","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"        super(response.toString(), cause);","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"wowsiddanth":31}},{"path":"src/main/java/petal/exception/PetalException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.exception;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":" * The parent, PetalException. It represents all possible","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":" * exceptions in relation to the Petal bot.","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"public class PetalException extends Exception {","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"     * Constructs a PetalException","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"     * @param message The message","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"    public PetalException(String message) {","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"        super(message);","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"     * Constructs a PetalException (used as a wrapper)","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"     * @param message The exception message","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"     * @param cause Initial cause","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"    public PetalException(String message, Throwable cause) {","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"        super(message, cause);","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"wowsiddanth":28}},{"path":"src/main/java/petal/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.gui;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"import petal.Petal;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":" * Main class for the Petal\u0027s GUI","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"    //The petal instance to be used","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"    private final Petal petal \u003d new Petal();","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"     * Starts the GUI for Petal","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"     * @param stage The stage to be used","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"            //This is done to ensure that Ui is bidirectional to both Petal, and MainWindow","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setUi(petal.getUi());","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"            //Set title and icon of the window","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"            stage.getIcons().add(new Image(\"/images/picture.png\"));","lastModifiedDate":"2021-09-13"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"            stage.setTitle(\"Petal\");","lastModifiedDate":"2021-09-13"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"            stage.show();","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"wowsiddanth":46}},{"path":"src/main/java/petal/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.gui;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"    //FXML components","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"     * Initializes the nodes","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"     * Sets the Ui instance","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"     * @param ui Ui instance to be set","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"    public void setUi(Ui ui) {","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"        ui.setMainWindow(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"     * Sends the output to the interface to be read by the user","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"wowsiddanth"},"content":"     * @param input The user\u0027s input","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"     * @param output The output","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"wowsiddanth"},"content":"    public void sendUserReply(String input, String output) {","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"wowsiddanth"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"wowsiddanth"},"content":"                UserDialogBox.getUserDialog(input),","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"wowsiddanth"},"content":"                PetalDialogBox.getPetalDialog(output)","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"wowsiddanth"},"content":"        );","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"wowsiddanth"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"wowsiddanth"},"content":"     * Sends the output to the interface to be read by the user","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"wowsiddanth"},"content":"     * This method is used when it is one-sided (the user does not need","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"wowsiddanth"},"content":"     * to send an input)","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"wowsiddanth"},"content":"     * @param output The output message","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"wowsiddanth"},"content":"    public void sendUserReply(String output) {","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"wowsiddanth"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"wowsiddanth"},"content":"                PetalDialogBox.getPetalDialog(output)","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"wowsiddanth"},"content":"        );","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"wowsiddanth"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":74,"author":{"gitId":"wowsiddanth"},"content":"     * Terminates the current bot instance by exiting the GUI","lastModifiedDate":"2021-09-04"},{"lineNumber":75,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":76,"author":{"gitId":"wowsiddanth"},"content":"    public void terminatePetal() {","lastModifiedDate":"2021-09-04"},{"lineNumber":77,"author":{"gitId":"wowsiddanth"},"content":"        Platform.exit();","lastModifiedDate":"2021-09-04"},{"lineNumber":78,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":79,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":80,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":81,"author":{"gitId":"wowsiddanth"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-01"},{"lineNumber":82,"author":{"gitId":"wowsiddanth"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-01"},{"lineNumber":83,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":84,"author":{"gitId":"wowsiddanth"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":85,"author":{"gitId":"wowsiddanth"},"content":"    private void handleUserInput() throws IOException {","lastModifiedDate":"2021-09-01"},{"lineNumber":86,"author":{"gitId":"wowsiddanth"},"content":"        String input \u003d userInput.getText().trim();","lastModifiedDate":"2021-09-01"},{"lineNumber":87,"author":{"gitId":"wowsiddanth"},"content":"        ui.readCommand(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":88,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":89,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"wowsiddanth":89}},{"path":"src/main/java/petal/gui/PetalDialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.gui;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"import java.util.Objects;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":" * Represents a Petal Dialogue Box.","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":" * It has a Label that contains the Petal response to the user input and a","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":" * circle that is filled with the Petal picture.","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"public class PetalDialogBox extends HBox {","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"    private Circle profilePicture;","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"    private final Image petalPicture \u003d new Image(Objects.requireNonNull(this.getClass()","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"                .getResourceAsStream(\"/images/petal.jpg\")));","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"     * Constructs a PetalDialogBox instance","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"     * @param text The output","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"    private PetalDialogBox(String text) {","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/PetalDialogBox.fxml\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"        PictureEditor.setGlow(profilePicture, PictureEditor.COLOR_SAKURA_PINK, 60);","lastModifiedDate":"2021-09-13"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"        PictureEditor.setOutline(profilePicture, PictureEditor.COLOR_SAKURA_PINK);","lastModifiedDate":"2021-09-13"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":48,"author":{"gitId":"wowsiddanth"},"content":"        profilePicture.setFill(new ImagePattern(petalPicture));","lastModifiedDate":"2021-09-13"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"wowsiddanth"},"content":"     * Returns a PetalDialogBox instance","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"wowsiddanth"},"content":"     * @param text The output","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"wowsiddanth"},"content":"     * @return The PetalDialogBox instance with the output","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"wowsiddanth"},"content":"    public static PetalDialogBox getPetalDialog(String text) {","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"wowsiddanth"},"content":"        return new PetalDialogBox(text);","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"wowsiddanth":61}},{"path":"src/main/java/petal/gui/PictureEditor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.gui;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.effect.DropShadow;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.shape.Shape;","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":" * The PictureEditor class encompasses method that help to add","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":" * certain effects to a picture, like a glow and outline","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"public class PictureEditor {","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"    public static final Color COLOR_SAKURA_PINK \u003d Color.web(\"#ffb7c5\");","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"    public static final Color COLOR_TEAL \u003d Color.web(\"#b7fff1\");","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"     * Sets a glow to the shape","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"     * @param shape The shape being modified","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"     * @param colorOfGlow The color of the glow","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"     * @param sizeOfGlow The size of the glow","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"    public static void setGlow(Shape shape, Color colorOfGlow, int sizeOfGlow) {","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"        DropShadow borderGlow \u003d new DropShadow();","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"        borderGlow.setOffsetY(0f);","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"        borderGlow.setOffsetX(0f);","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"        borderGlow.setColor(colorOfGlow);","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"        borderGlow.setWidth(sizeOfGlow);","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"        borderGlow.setHeight(sizeOfGlow);","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"        shape.setEffect(borderGlow);","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"     * Sets an outline to the shape","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"     * @param shape The given shape","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"     * @param colorOfOutline The colour of the outline","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"    public static void setOutline(Shape shape, Color colorOfOutline) {","lastModifiedDate":"2021-09-13"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"        shape.setStroke(colorOfOutline);","lastModifiedDate":"2021-09-13"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"wowsiddanth":42}},{"path":"src/main/java/petal/gui/UserDialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.gui;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"import java.util.Objects;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":" * This represents a user dialogue box on the GUI.","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":" * It consists of a Label that contains the user input and a","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":" * circle that is filled with the user image","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"public class UserDialogBox extends HBox {","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"    private Circle profilePicture;","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"    private final Image userPicture \u003d new Image(Objects.requireNonNull(this.getClass()","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"            .getResourceAsStream(\"/images/lauren_tsai.png\")));","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"     * Constructs a UserDialogBox instance","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"     * @param text The input","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"    private UserDialogBox(String text) {","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/UserDialogBox.fxml\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"        PictureEditor.setGlow(profilePicture, PictureEditor.COLOR_TEAL, 60);","lastModifiedDate":"2021-09-13"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"        PictureEditor.setOutline(profilePicture, PictureEditor.COLOR_TEAL);","lastModifiedDate":"2021-09-13"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"        profilePicture.setFill(new ImagePattern(userPicture));","lastModifiedDate":"2021-09-13"},{"lineNumber":48,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"wowsiddanth"},"content":"     * Returns a UserDialogBox instance with the input","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"wowsiddanth"},"content":"     * @param text The input","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"wowsiddanth"},"content":"     * @return The UserDialogBox instance with the input","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"wowsiddanth"},"content":"    public static UserDialogBox getUserDialog(String text) {","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"wowsiddanth"},"content":"        return new UserDialogBox(text);","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"wowsiddanth":59}},{"path":"src/main/java/petal/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Parser;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":" * Deadline class, subclass of Task","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":" * Encapsulates Task with end time","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"public class Deadline extends Task implements Timeable {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"    private final String description;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"    private final String dateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"    private final LocalDate date;","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"    private final LocalTime time;","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"     * Constructs a Deadline instance","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"     * @param description The description of the object","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"     * @param dateTime The date given by the user","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"     * @param isDone The boolean isDone, representing if the Task is done","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"    public Deadline(String description, String dateTime, boolean isDone) {","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"        super(description.trim(), isDone);","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"        this.description \u003d description.trim();","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"        this.dateTime \u003d (dateTime \u003d dateTime.trim());","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"        String[] splitByWhiteSpace \u003d dateTime.split(\" \");","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"        this.date \u003d Parser.parseDate(splitByWhiteSpace[0]);","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"        this.time \u003d Parser.parseTime(splitByWhiteSpace[1]);","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"    public String formatStrForSaving() {","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"        return \"D|\" + this.getStatusIcon() + \"|\" + this.description + \"|\" + dateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"    public boolean isTimeable() {","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"        return true;","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"wowsiddanth"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"        return this.date;","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":51,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":52,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":53,"author":{"gitId":"wowsiddanth"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":54,"author":{"gitId":"wowsiddanth"},"content":"        String formatDate \u003d DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG).format(date);","lastModifiedDate":"2021-09-04"},{"lineNumber":55,"author":{"gitId":"wowsiddanth"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formatDate + \" \" + this.time + \")\";","lastModifiedDate":"2021-09-04"},{"lineNumber":56,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":57,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"wowsiddanth":57}},{"path":"src/main/java/petal/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Parser;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":" * Event class, subclass of Task.","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":" * Encapsulates a Task with a start/end time","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"public class Event extends Task implements Timeable {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"    private final String description;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"    private final String dateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"    private final LocalDate date;","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"    private final LocalTime startTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"    private final LocalTime endTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"     * Constructs an Event instance","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"     * @param description Description of the event","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"     * @param dateTime String with the date and start/end timings","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"     * @param isDone Boolean representing if the event is done or not","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"    public Event(String description, String dateTime, boolean isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"        super(description.trim(), isDone);","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"        this.description \u003d description.trim();","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"        this.dateTime \u003d (dateTime \u003d dateTime.trim());","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"        String[] splitByWhiteSpace \u003d dateTime.split(\" \");","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"        this.date \u003d Parser.parseDate(splitByWhiteSpace[0]);","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"        this.startTime \u003d Parser.parseTime(splitByWhiteSpace[1]);","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"        this.endTime \u003d Parser.parseTime(splitByWhiteSpace[2]);","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"    public String formatStrForSaving() {","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"        return \"E|\" + this.getStatusIcon() + \"|\" + this.description + \"|\" + this.dateTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"    public boolean isTimeable() {","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"        return true;","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"wowsiddanth"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"wowsiddanth"},"content":"        return this.date;","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":54,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":55,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":56,"author":{"gitId":"wowsiddanth"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":57,"author":{"gitId":"wowsiddanth"},"content":"        String formatDate \u003d DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG).format(date);","lastModifiedDate":"2021-09-04"},{"lineNumber":58,"author":{"gitId":"wowsiddanth"},"content":"        return \"[E]\" + super.toString() + \" (at \" + formatDate + \" \" + this.startTime + \" to \"","lastModifiedDate":"2021-09-04"},{"lineNumber":59,"author":{"gitId":"wowsiddanth"},"content":"                + this.endTime + \")\";","lastModifiedDate":"2021-09-04"},{"lineNumber":60,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":61,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"wowsiddanth":61}},{"path":"src/main/java/petal/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":" * The Task class that encapsulates a directive given","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":" * by the user to track a certain activity and may have","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":" * start/end timings.","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"    //Properties of a Task","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"    private final String description;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"     * Constructs a Task instance","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"     * @param description The description of the task","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"     * @param isDone The boolean isDone, representing if the Task is done","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"        this.description \u003d capsFirstLetter(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"     * Formats string representation which is optimized for saving","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"     * e.g. To.Do go for a run (done) -\u003e T|X|go for a run","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"     * @return Formatted string representation","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"    public abstract String formatStrForSaving();","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"     * Returns whether the Task is a Timeable","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"     * @return boolean True if Timeable, false if not Timeable","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"    public abstract boolean isTimeable();","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"     * Returns whether a task is done in string representation","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"     * @return \"X\" if done, \" \" if not","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-14"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-14"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":48,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"wowsiddanth"},"content":"     * Sets the task instance as done and returns a completion message","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"wowsiddanth"},"content":"    public String taskDone() {","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"wowsiddanth"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-14"},{"lineNumber":54,"author":{"gitId":"wowsiddanth"},"content":"        return \"You have completed the task: \u0027\" + this.description + \"\u0027!\"","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"wowsiddanth"},"content":"                + \"\\nI am so happy for you!\\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":57,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":58,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"wowsiddanth"},"content":"     * Capitalizes the first letter of the string","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"wowsiddanth"},"content":"     * @param str The string","lastModifiedDate":"2021-08-17"},{"lineNumber":62,"author":{"gitId":"wowsiddanth"},"content":"     * @return String but with first letter capitalized","lastModifiedDate":"2021-08-17"},{"lineNumber":63,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":64,"author":{"gitId":"wowsiddanth"},"content":"    private String capsFirstLetter(String str) {","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"wowsiddanth"},"content":"        return str.substring(0, 1).toUpperCase() + str.substring(1);","lastModifiedDate":"2021-09-06"},{"lineNumber":66,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":67,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":68,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"wowsiddanth"},"content":"     * Returns if a task description contains a keyword","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"wowsiddanth"},"content":"     * @param keyword The keyword","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"wowsiddanth"},"content":"     * @return True if contains keyword, false if not","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"wowsiddanth"},"content":"    public boolean isKeyWordPresent(String keyword) {","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"wowsiddanth"},"content":"        if (keyword.equals(\"\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":76,"author":{"gitId":"wowsiddanth"},"content":"            return false;","lastModifiedDate":"2021-09-04"},{"lineNumber":77,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":78,"author":{"gitId":"wowsiddanth"},"content":"        String keywordLowerCase \u003d keyword.toLowerCase();","lastModifiedDate":"2021-09-06"},{"lineNumber":79,"author":{"gitId":"wowsiddanth"},"content":"        return description.toLowerCase().contains(keywordLowerCase);","lastModifiedDate":"2021-09-06"},{"lineNumber":80,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":83,"author":{"gitId":"wowsiddanth"},"content":"     * Overridden toString method for the Task class","lastModifiedDate":"2021-08-15"},{"lineNumber":84,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"wowsiddanth"},"content":"     * @return String representation of the Task object","lastModifiedDate":"2021-08-15"},{"lineNumber":86,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":87,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":88,"author":{"gitId":"wowsiddanth"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":89,"author":{"gitId":"wowsiddanth"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-14"},{"lineNumber":90,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":91,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":92,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"wowsiddanth":92}},{"path":"src/main/java/petal/task/Timeable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":" * The Timeable interface represents Tasks that have a date/time components,","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":" * mainly the Deadline/Event tasks","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"public interface Timeable {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"     * Returns the date of that Timeable object","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"     * @return LocalDate object corresponding to the date of that object","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"    LocalDate getDate();","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wowsiddanth":18}},{"path":"src/main/java/petal/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":" * The To.Do class that is a subclass of Task","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":" * (Used a . in between to prevent IntelliJ from highlighting it)","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"    private final String description;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"     * Constructor for the To.Do class","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"     * @param description The description of the task","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"     * @param isDone The boolean isDone, representing if the Task is done","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"        super(description.trim(), isDone);","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"    public String formatStrForSaving() {","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"        return \"T|\" + this.getStatusIcon() + \"|\" + this.description;","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"    public boolean isTimeable() {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"        return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"wowsiddanth":38}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.effect.Glow?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"800.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"petal.gui.MainWindow\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"14.0\" layoutY\u003d\"554.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"673.0\" promptText\u003d\"Ask me anything!\" style\u003d\"-fx-background-color: black; -fx-text-fill: #b7fff1;\" AnchorPane.bottomAnchor\u003d\"5.0\"\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"            \u003cFont name\u003d\"Segoe UI Bold\" size\u003d\"18.0\" /\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"         \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"719.0\" layoutY\u003d\"555.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"35.0\" prefWidth\u003d\"67.0\" style\u003d\"-fx-background-color: #ffb7c5;\" text\u003d\"ðŸŒ¸\" textFill\u003d\"#ff5ea1\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"            \u003cFont size\u003d\"18.0\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"         \u003c/font\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"         \u003ceffect\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"            \u003cGlow /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"         \u003c/effect\u003e\u003c/Button\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"548.0\" prefWidth\u003d\"800.0\" style\u003d\"-fx-background-color: black;\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"            \u003cVBox fx:id\u003d\"dialogContainer\" minHeight\u003d\"552.0\" prefWidth\u003d\"784.0\" style\u003d\"-fx-background-color: black;\" /\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"wowsiddanth":28}},{"path":"src/main/resources/view/PetalDialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.effect.Glow?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"\u003cfx:root alignment\u003d\"TOP_LEFT\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" prefWidth\u003d\"225.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"        \u003cCircle fx:id\u003d\"profilePicture\" fill\u003d\"DODGERBLUE\" radius\u003d\"33.0\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\" /\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"CENTER\" text\u003d\"Label\" textFill\u003d\"#ffb7c5\" translateX\u003d\"8.0\" translateY\u003d\"20.0\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"            \u003cfont\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"                \u003cFont name\u003d\"Segoe UI Bold\" size\u003d\"21.0\" /\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"            \u003c/font\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"            \u003ceffect\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"                \u003cGlow level\u003d\"0.6\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"            \u003c/effect\u003e\u003c/Label\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"wowsiddanth":24}},{"path":"src/main/resources/view/UserDialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.effect.Glow?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" prefHeight\u003d\"115.0\" prefWidth\u003d\"225.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"CENTER\" text\u003d\"Label\" textFill\u003d\"#b7fff1\" translateX\u003d\"-4.0\" translateY\u003d\"20.0\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"            \u003cfont\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"                \u003cFont name\u003d\"Segoe UI Bold\" size\u003d\"21.0\" /\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"            \u003c/font\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"            \u003ceffect\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"                \u003cGlow level\u003d\"0.6\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"            \u003c/effect\u003e\u003c/Label\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"        \u003cCircle fx:id\u003d\"profilePicture\" fill\u003d\"DODGERBLUE\" radius\u003d\"33.0\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\" /\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"wowsiddanth":24}},{"path":"src/test/java/petal/PetalTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"public class PetalTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"    public void startProperly_noInput_noOutput() {","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"        Petal petal \u003d new Petal();","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"        assertEquals(\"\", outputStream.toString().trim());","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wowsiddanth":21}},{"path":"src/test/java/petal/components/CalendarTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.components;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"import java.util.List;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"import petal.task.Deadline;","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"import petal.task.Task;","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"public class CalendarTest {","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"    private final Calendar calendar \u003d new Calendar();","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"    @BeforeEach","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"    public void beforeEach() {","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"        Deadline deadline \u003d new Deadline(\"go for a run\", \"2/12/2021 1900\", false);","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"        calendar.addToCalendar(deadline);","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"    @Test","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"    public void addTimeable_deadline_noOutput() {","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"        Deadline deadline \u003d new Deadline(\"go for a run\", \"2/12/2021 1900\", false);","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"        calendar.addToCalendar(deadline);","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"    @Test","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"    public void showTaskOnDate_noInput_tasksOnThisDate() {","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"        LocalDate localDate \u003d LocalDate.parse(\"2021-12-02\");","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"        String tasks \u003d calendar.showTasksOnDate(localDate);","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"        assertEquals(\"Here are the tasks on this date: \"","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"                + \"\\n1. [D][ ] Go for a run (by: December 2, 2021 19:00)\", tasks);","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"    @Test","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"    public void updateCalendar_listOfTasks_noOutput() {","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"        Deadline deadline1 \u003d new Deadline(\"go\", \"2/12/2021 1900\", false);","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"        list.add(deadline1);","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"        calendar.updateCalendar(list);","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"wowsiddanth":46}},{"path":"src/test/java/petal/components/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.components;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"import petal.command.Command;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"import stubs.StorageStub;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"import stubs.TaskListStub;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"    private final Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"    private final TaskListStub taskListStub \u003d new TaskListStub();","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"    private final StorageStub storageStub \u003d new StorageStub(taskListStub);","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"    @BeforeEach","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"    public void setUp() {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"    public void parseInput_list_listCommand() {","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"        Command command \u003d parser.handleInput(\"list\");","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"        assertEquals(\"1. [T][ ] Go for a run\", command.execute(taskListStub, storageStub));","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"    public void parseInput_bye_byeCommand() {","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"        Command command \u003d parser.handleInput(\"bye\");","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"        assertEquals(Responses.GOODBYE.toString(), command.execute(taskListStub, storageStub));","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"    @Test","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"    public void parseInput_dossiers_dossiersCommand() {","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"        Command command \u003d parser.handleInput(\"dossiers\");","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"        assertEquals(\"No items in list yet!\", command.execute(taskListStub, storageStub));","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"    @Test","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"wowsiddanth"},"content":"    public void parseInput_todo_taskCommand() {","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"wowsiddanth"},"content":"        Command command \u003d parser.handleInput(\"todo go for a run\");","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"wowsiddanth"},"content":"        assertEquals(\"Okay. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"wowsiddanth"},"content":"                        + \"[T][ ] Go for a run\"","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"wowsiddanth"},"content":"                        + \"\\nYou now have \" + \"1\"","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"wowsiddanth"},"content":"                        + \" task!\",","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"wowsiddanth"},"content":"                command.execute(taskListStub, storageStub));","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"wowsiddanth"},"content":"    @Test","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"wowsiddanth"},"content":"    public void parseInput_date_dateCommand() {","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"wowsiddanth"},"content":"        Command command \u003d parser.handleInput(\"date 2/12/2021\");","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"wowsiddanth"},"content":"        assertEquals(\"No tasks on this date!\", command.execute(taskListStub, storageStub));","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"wowsiddanth"},"content":"    @Test","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"wowsiddanth"},"content":"    public void parseInput_find_findCommand() {","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"wowsiddanth"},"content":"        Command command \u003d parser.handleInput(\"find hi\");","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"wowsiddanth"},"content":"        assertEquals(\"No tasks!\", command.execute(taskListStub, storageStub));","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"wowsiddanth"},"content":"    @Test","lastModifiedDate":"2021-09-06"},{"lineNumber":72,"author":{"gitId":"wowsiddanth"},"content":"    public void parseInput_archive_archiveCommand() {","lastModifiedDate":"2021-09-06"},{"lineNumber":73,"author":{"gitId":"wowsiddanth"},"content":"        Command command \u003d parser.handleInput(\"archive 1\");","lastModifiedDate":"2021-09-06"},{"lineNumber":74,"author":{"gitId":"wowsiddanth"},"content":"        assertEquals(\"The task was archived.\", command.execute(taskListStub, storageStub));","lastModifiedDate":"2021-09-06"},{"lineNumber":75,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":76,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":77,"author":{"gitId":"wowsiddanth"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"wowsiddanth"},"content":"    public void parseInput_unintelligible_unintelligibleCommand() {","lastModifiedDate":"2021-09-01"},{"lineNumber":79,"author":{"gitId":"wowsiddanth"},"content":"        Command command \u003d parser.handleInput(\"qwndiqwndqwn\");","lastModifiedDate":"2021-09-01"},{"lineNumber":80,"author":{"gitId":"wowsiddanth"},"content":"        assertEquals(Responses.UNINTELLIGIBLE.toString(), command.execute(taskListStub, storageStub));","lastModifiedDate":"2021-09-01"},{"lineNumber":81,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"wowsiddanth"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"wowsiddanth"},"content":"    public void correctTimeReturn_time_localTime() {","lastModifiedDate":"2021-09-01"},{"lineNumber":85,"author":{"gitId":"wowsiddanth"},"content":"        assertEquals(LocalTime.parse(\"18:00\"), Parser.parseTime(\"1800\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":86,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"wowsiddanth"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"wowsiddanth"},"content":"    public void correctDateReturn_time_localDate() {","lastModifiedDate":"2021-09-01"},{"lineNumber":90,"author":{"gitId":"wowsiddanth"},"content":"        assertEquals(LocalDate.parse(\"2021-12-02\"), Parser.parseDate(\"2/12/2021\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":91,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wowsiddanth":93}},{"path":"src/test/java/petal/components/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.components;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"import petal.exception.EmptyDescException;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"import petal.exception.InvalidInputException;","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"import petal.task.Task;","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"import petal.task.ToDo;","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"public class TaskListTest {","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"    private final TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"    @Test","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"    public void addTasks_tasks_noOutput() {","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"        ArrayList\u003cTask\u003e arrayList1 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"        ArrayList\u003cTask\u003e arrayList2 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"        ToDo todo1 \u003d new ToDo(\"go for a run\", false);","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"        ToDo todo2 \u003d new ToDo(\"go for a run\", false);","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"        arrayList1.add(todo1);","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"        arrayList2.add(todo2);","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"        taskList.addTasks(arrayList1, arrayList2);","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"    @Test","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"    public void addTask_todo_taskAddOutput() {","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"        ToDo todo \u003d new ToDo(\"go for a run\", false);","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"        try {","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"            output \u003d taskList.handleTask(\"todo\", \"Go for a run\");","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"        } catch (InvalidInputException | EmptyDescException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"            //Don\u0027t do anything here","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"        assertEquals(\"Okay. I\u0027ve added this task:\\n[T][ ] Go for a run\\nYou now have 1 task!\", output);","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"    @Test","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"    public void deleteTheTask_todo_taskAddOutput() {","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"        ToDo todo \u003d new ToDo(\"go for a run\", false);","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"            taskList.handleTask(\"todo\", \"Go for a run\");","lastModifiedDate":"2021-09-13"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"            output \u003d taskList.deleteTask(\"1\");","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"wowsiddanth"},"content":"        } catch (InvalidInputException | EmptyDescException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"            //Do not do anything here","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"wowsiddanth"},"content":"        } finally {","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"wowsiddanth"},"content":"            assertEquals(\"Okay. I\u0027ve deleted this task:\\n[T][ ] Go for a run\\nYou now have 0 tasks!\", output);","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":55,"author":{"gitId":"wowsiddanth"},"content":"    @Test","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"wowsiddanth"},"content":"    public void archiveTask_index_taskArchived() {","lastModifiedDate":"2021-09-06"},{"lineNumber":57,"author":{"gitId":"wowsiddanth"},"content":"        ToDo todo \u003d new ToDo(\"go for a run\", false);","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"wowsiddanth"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-09-06"},{"lineNumber":59,"author":{"gitId":"wowsiddanth"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":60,"author":{"gitId":"wowsiddanth"},"content":"            taskList.handleTask(\"todo\", \"Go for a run\");","lastModifiedDate":"2021-09-13"},{"lineNumber":61,"author":{"gitId":"wowsiddanth"},"content":"            output \u003d taskList.archiveTask(\"1\");","lastModifiedDate":"2021-09-06"},{"lineNumber":62,"author":{"gitId":"wowsiddanth"},"content":"        } catch (InvalidInputException | EmptyDescException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":63,"author":{"gitId":"wowsiddanth"},"content":"            //Don\u0027t do anything here","lastModifiedDate":"2021-09-06"},{"lineNumber":64,"author":{"gitId":"wowsiddanth"},"content":"        } finally {","lastModifiedDate":"2021-09-06"},{"lineNumber":65,"author":{"gitId":"wowsiddanth"},"content":"            assertEquals(\"Okay. I\u0027ve added this task:\\n[T][ ] Go for a run\\nYou now have\"","lastModifiedDate":"2021-09-06"},{"lineNumber":66,"author":{"gitId":"wowsiddanth"},"content":"                    + \" 1 task in your archives!\", output);","lastModifiedDate":"2021-09-06"},{"lineNumber":67,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":68,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":69,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":70,"author":{"gitId":"wowsiddanth"},"content":"    @Test","lastModifiedDate":"2021-09-06"},{"lineNumber":71,"author":{"gitId":"wowsiddanth"},"content":"    public void markTaskAsDone_todo_taskMarkedAsDone() {","lastModifiedDate":"2021-09-06"},{"lineNumber":72,"author":{"gitId":"wowsiddanth"},"content":"        ToDo todo \u003d new ToDo(\"go for a run\", false);","lastModifiedDate":"2021-09-06"},{"lineNumber":73,"author":{"gitId":"wowsiddanth"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-09-06"},{"lineNumber":74,"author":{"gitId":"wowsiddanth"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":75,"author":{"gitId":"wowsiddanth"},"content":"            taskList.handleTask(\"todo\", \"Go for a run\");","lastModifiedDate":"2021-09-13"},{"lineNumber":76,"author":{"gitId":"wowsiddanth"},"content":"            output \u003d taskList.markTaskAsDone(\"1\");","lastModifiedDate":"2021-09-06"},{"lineNumber":77,"author":{"gitId":"wowsiddanth"},"content":"        } catch (InvalidInputException | EmptyDescException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":78,"author":{"gitId":"wowsiddanth"},"content":"            //Don\u0027t do anything here","lastModifiedDate":"2021-09-06"},{"lineNumber":79,"author":{"gitId":"wowsiddanth"},"content":"        } finally {","lastModifiedDate":"2021-09-06"},{"lineNumber":80,"author":{"gitId":"wowsiddanth"},"content":"            assertEquals(\"You have completed the task: \u0027\" + \"Go for a run\" + \"\u0027!\"","lastModifiedDate":"2021-09-13"},{"lineNumber":81,"author":{"gitId":"wowsiddanth"},"content":"                    + \"\\nI am so happy for you!\\n\", output);","lastModifiedDate":"2021-09-06"},{"lineNumber":82,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":83,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":84,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":85,"author":{"gitId":"wowsiddanth"},"content":"    @Test","lastModifiedDate":"2021-09-06"},{"lineNumber":86,"author":{"gitId":"wowsiddanth"},"content":"    public void printCurrTasks_todo_printCurrTasks() {","lastModifiedDate":"2021-09-06"},{"lineNumber":87,"author":{"gitId":"wowsiddanth"},"content":"        ToDo todo \u003d new ToDo(\"go for a run\", false);","lastModifiedDate":"2021-09-06"},{"lineNumber":88,"author":{"gitId":"wowsiddanth"},"content":"        try {","lastModifiedDate":"2021-09-13"},{"lineNumber":89,"author":{"gitId":"wowsiddanth"},"content":"            taskList.handleTask(\"todo\", \"Go for a run\");","lastModifiedDate":"2021-09-13"},{"lineNumber":90,"author":{"gitId":"wowsiddanth"},"content":"        } catch (InvalidInputException | EmptyDescException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":91,"author":{"gitId":"wowsiddanth"},"content":"            //Don\u0027t do anything here","lastModifiedDate":"2021-09-13"},{"lineNumber":92,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":93,"author":{"gitId":"wowsiddanth"},"content":"        String result \u003d taskList.printCurrTasks();","lastModifiedDate":"2021-09-13"},{"lineNumber":94,"author":{"gitId":"wowsiddanth"},"content":"        assertEquals(\"1. [T][ ] Go for a run\", result);","lastModifiedDate":"2021-09-13"},{"lineNumber":95,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":96,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":97,"author":{"gitId":"wowsiddanth"},"content":"    @Test","lastModifiedDate":"2021-09-06"},{"lineNumber":98,"author":{"gitId":"wowsiddanth"},"content":"    public void printArchive_todo_printArchive() {","lastModifiedDate":"2021-09-06"},{"lineNumber":99,"author":{"gitId":"wowsiddanth"},"content":"        ToDo todo \u003d new ToDo(\"go for a run\", false);","lastModifiedDate":"2021-09-06"},{"lineNumber":100,"author":{"gitId":"wowsiddanth"},"content":"        try {","lastModifiedDate":"2021-09-13"},{"lineNumber":101,"author":{"gitId":"wowsiddanth"},"content":"            taskList.handleTask(\"todo\", \"Go for a run\");","lastModifiedDate":"2021-09-13"},{"lineNumber":102,"author":{"gitId":"wowsiddanth"},"content":"        } catch (InvalidInputException | EmptyDescException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":103,"author":{"gitId":"wowsiddanth"},"content":"            //Don\u0027t do anything here","lastModifiedDate":"2021-09-13"},{"lineNumber":104,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":105,"author":{"gitId":"wowsiddanth"},"content":"        String output \u003d taskList.printArchive();","lastModifiedDate":"2021-09-06"},{"lineNumber":106,"author":{"gitId":"wowsiddanth"},"content":"        assertEquals(\"No items in list yet!\", output);","lastModifiedDate":"2021-09-06"},{"lineNumber":107,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":108,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":109,"author":{"gitId":"wowsiddanth"},"content":"    @Test","lastModifiedDate":"2021-09-06"},{"lineNumber":110,"author":{"gitId":"wowsiddanth"},"content":"    public void showTaskOnDate_deadline_showTask() {","lastModifiedDate":"2021-09-06"},{"lineNumber":111,"author":{"gitId":"wowsiddanth"},"content":"        String output \u003d \" \";","lastModifiedDate":"2021-09-06"},{"lineNumber":112,"author":{"gitId":"wowsiddanth"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":113,"author":{"gitId":"wowsiddanth"},"content":"            taskList.handleTask(\"deadline\", \"Go for a run /by 2/12/2021 1800\");","lastModifiedDate":"2021-09-06"},{"lineNumber":114,"author":{"gitId":"wowsiddanth"},"content":"            output \u003d taskList.showTaskOnDate(\"02/12/2021\");","lastModifiedDate":"2021-09-06"},{"lineNumber":115,"author":{"gitId":"wowsiddanth"},"content":"        } catch (InvalidInputException | EmptyDescException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":116,"author":{"gitId":"wowsiddanth"},"content":"            //Don\u0027t do anything here","lastModifiedDate":"2021-09-06"},{"lineNumber":117,"author":{"gitId":"wowsiddanth"},"content":"        } finally {","lastModifiedDate":"2021-09-06"},{"lineNumber":118,"author":{"gitId":"wowsiddanth"},"content":"            assertEquals(\"Here are the tasks on this date: \\n1. [D][ ] Go\"","lastModifiedDate":"2021-09-06"},{"lineNumber":119,"author":{"gitId":"wowsiddanth"},"content":"                    + \" for a run (by: December 2, 2021 18:00)\", output);","lastModifiedDate":"2021-09-06"},{"lineNumber":120,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":121,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":122,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":123,"author":{"gitId":"wowsiddanth"},"content":"    @Test","lastModifiedDate":"2021-09-06"},{"lineNumber":124,"author":{"gitId":"wowsiddanth"},"content":"    public void findTaskWithKeyword_todo_findTask() {","lastModifiedDate":"2021-09-06"},{"lineNumber":125,"author":{"gitId":"wowsiddanth"},"content":"        String output \u003d \" \";","lastModifiedDate":"2021-09-06"},{"lineNumber":126,"author":{"gitId":"wowsiddanth"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":127,"author":{"gitId":"wowsiddanth"},"content":"            taskList.handleTask(\"todo\", \"Go for a run\");","lastModifiedDate":"2021-09-06"},{"lineNumber":128,"author":{"gitId":"wowsiddanth"},"content":"            output \u003d taskList.findTaskWithKeyword(\"Go\");","lastModifiedDate":"2021-09-06"},{"lineNumber":129,"author":{"gitId":"wowsiddanth"},"content":"        } catch (InvalidInputException | EmptyDescException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":130,"author":{"gitId":"wowsiddanth"},"content":"            //Don\u0027t do anything here","lastModifiedDate":"2021-09-06"},{"lineNumber":131,"author":{"gitId":"wowsiddanth"},"content":"        } finally {","lastModifiedDate":"2021-09-06"},{"lineNumber":132,"author":{"gitId":"wowsiddanth"},"content":"            assertEquals(\"Here are the tasks:\\n1. [T][ ] Go for a run\", output);","lastModifiedDate":"2021-09-06"},{"lineNumber":133,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":134,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":135,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":136,"author":{"gitId":"wowsiddanth"},"content":"    @Test","lastModifiedDate":"2021-09-06"},{"lineNumber":137,"author":{"gitId":"wowsiddanth"},"content":"    public void formatForCurrSaving_todo_formatted() {","lastModifiedDate":"2021-09-06"},{"lineNumber":138,"author":{"gitId":"wowsiddanth"},"content":"        String output \u003d \" \";","lastModifiedDate":"2021-09-06"},{"lineNumber":139,"author":{"gitId":"wowsiddanth"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":140,"author":{"gitId":"wowsiddanth"},"content":"            taskList.handleTask(\"todo\", \"Go for a run\");","lastModifiedDate":"2021-09-06"},{"lineNumber":141,"author":{"gitId":"wowsiddanth"},"content":"            output \u003d taskList.formatForCurrSaving();","lastModifiedDate":"2021-09-06"},{"lineNumber":142,"author":{"gitId":"wowsiddanth"},"content":"        } catch (InvalidInputException | EmptyDescException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":143,"author":{"gitId":"wowsiddanth"},"content":"            //Don\u0027t do anything here","lastModifiedDate":"2021-09-06"},{"lineNumber":144,"author":{"gitId":"wowsiddanth"},"content":"        } finally {","lastModifiedDate":"2021-09-06"},{"lineNumber":145,"author":{"gitId":"wowsiddanth"},"content":"            assertEquals(\"T| |Go for a run\", output);","lastModifiedDate":"2021-09-06"},{"lineNumber":146,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":147,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":148,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":149,"author":{"gitId":"wowsiddanth"},"content":"    @Test","lastModifiedDate":"2021-09-06"},{"lineNumber":150,"author":{"gitId":"wowsiddanth"},"content":"    public void formatForArchivesSaving_todo_formatted() {","lastModifiedDate":"2021-09-06"},{"lineNumber":151,"author":{"gitId":"wowsiddanth"},"content":"        String output \u003d \" \";","lastModifiedDate":"2021-09-06"},{"lineNumber":152,"author":{"gitId":"wowsiddanth"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":153,"author":{"gitId":"wowsiddanth"},"content":"            taskList.handleTask(\"todo\", \"Go for a run\");","lastModifiedDate":"2021-09-06"},{"lineNumber":154,"author":{"gitId":"wowsiddanth"},"content":"            output \u003d taskList.formatForArchivesSaving();","lastModifiedDate":"2021-09-06"},{"lineNumber":155,"author":{"gitId":"wowsiddanth"},"content":"        } catch (InvalidInputException | EmptyDescException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":156,"author":{"gitId":"wowsiddanth"},"content":"            //Don\u0027t do anything here","lastModifiedDate":"2021-09-06"},{"lineNumber":157,"author":{"gitId":"wowsiddanth"},"content":"        } finally {","lastModifiedDate":"2021-09-06"},{"lineNumber":158,"author":{"gitId":"wowsiddanth"},"content":"            assertEquals(\"\", output);","lastModifiedDate":"2021-09-06"},{"lineNumber":159,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":160,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":161,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":162,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":163,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"wowsiddanth":163}},{"path":"src/test/java/petal/components/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package petal.components;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"import petal.task.Deadline;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"import petal.task.Event;","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"import petal.task.Task;","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"import petal.task.ToDo;","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"public class TaskTest {","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"    private final Task todo \u003d new ToDo(\"go for a run\", false);","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"    private final Task deadline \u003d new Deadline(\"go for a run\", \"2/12/2021 1800\", false);","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"    private final Task event \u003d new Event(\"go for a run\", \"2/12/2021 1800 2100\", false);","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"    @Test","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"    public void isTimeable_todo_false() {","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"        assertFalse(todo.isTimeable());","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"    @Test","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"    public void isTimeable_deadline_true() {","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"        assertTrue(deadline.isTimeable());","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"    @Test","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"    public void isTimeable_event_true() {","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"        assertTrue(event.isTimeable());","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"    @Test","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"    public void keywordPresent_run_true() {","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"        assertTrue(todo.isKeyWordPresent(\"run\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"    @Test","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"    public void keywordPresent_go_false() {","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"        assertTrue(todo.isKeyWordPresent(\"go\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"    @Test","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"    public void getStatusIcon_noInput_whiteSpace() {","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"        assertEquals(\" \", todo.getStatusIcon());","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"wowsiddanth"},"content":"    @Test","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"wowsiddanth"},"content":"    public void formatStrForSavingTodo_noInput_formattedSaving() {","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"wowsiddanth"},"content":"        assertEquals(\"T| |go for a run\", todo.formatStrForSaving());","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":55,"author":{"gitId":"wowsiddanth"},"content":"    @Test","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"wowsiddanth"},"content":"    public void formatStrForSavingDeadline_noInput_formattedSaving() {","lastModifiedDate":"2021-09-06"},{"lineNumber":57,"author":{"gitId":"wowsiddanth"},"content":"        assertEquals(\"D| |go for a run|2/12/2021 1800\", deadline.formatStrForSaving());","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":59,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":60,"author":{"gitId":"wowsiddanth"},"content":"    @Test","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"wowsiddanth"},"content":"    public void formatStrForSavingEvent_noInput_formattedSaving() {","lastModifiedDate":"2021-09-06"},{"lineNumber":62,"author":{"gitId":"wowsiddanth"},"content":"        assertEquals(\"E| |go for a run|2/12/2021 1800 2100\", event.formatStrForSaving());","lastModifiedDate":"2021-09-06"},{"lineNumber":63,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":64,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"wowsiddanth":64}},{"path":"src/test/java/stubs/StorageStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package stubs;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"public class StorageStub extends Storage {","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"    public StorageStub(TaskListStub taskListStub) {","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"        super(taskListStub);","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"    public void saveTasks() {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wowsiddanth":14}},{"path":"src/test/java/stubs/TaskListStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package stubs;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"import java.util.List;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"import petal.components.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"public class TaskListStub extends TaskList {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"    private final List\u003cTaskStub\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"     * Constructor for the TaskListStub class","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"    public TaskListStub() {","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"        tasks.add(new TaskStub());","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"    public String printCurrTasks() {","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"        return \"1. \" + tasks.get(0).toString();","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"    public String markTaskAsDone(String indexOfTask) {","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"        TaskStub taskStub \u003d tasks.get(0);","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"        taskStub.taskDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"        return \"\\nYou have completed the task: \"","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"                + \"\u0027\"","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"                + \"go for a run\" + \"\u0027!\"","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"                + \"\\nI am so happy for you!\\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"    public String deleteTask(String index) {","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"        TaskStub toBeDeleted \u003d new TaskStub();","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"        return \"Okay. I\u0027ve deleted this task:\\n\" + toBeDeleted + \"\\nYou now have 1 task(s)!\";","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"    public String archiveTask(String index) {","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"        return \"The task was archived.\";","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"    public String printArchive() {","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"        return \"No items in list yet!\";","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"wowsiddanth"},"content":"    public String findTaskWithKeyword(String keyword) {","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"wowsiddanth"},"content":"        return \"No tasks!\";","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"wowsiddanth"},"content":"    public String showTaskOnDate(String date) {","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"wowsiddanth"},"content":"        return \"No tasks on this date!\";","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wowsiddanth":60}},{"path":"src/test/java/stubs/TaskStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package stubs;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import petal.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"public class TaskStub extends Task {","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"    public TaskStub(String description, boolean isDone) {","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"        super(description, isDone);","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"    public TaskStub() {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"        super(\"run\", false);","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"    public String formatStrForSaving() {","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"        return \"This task was saved!\";","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"    public boolean isTimeable() {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"        return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"    public String toString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"        return \"[T][\" + super.getStatusIcon() + \"] \" + \"Go for a run\";","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wowsiddanth":32}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"deadline go for a jog /by 2/12/2021 1800","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"deadline go for a jog /by 2/12/2021 1900","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"event go for a jog /at 2/12/2021 1800 2100","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"event go for a jog /at 2/12/2021 1900 2100","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"find go","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"find for","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"find a ","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"find jog","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"date 2/12/2021","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"delete 1 ","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"delete 2","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"done 1","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"done 2","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"date 2/12/2021","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"delete 1","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"delete 1","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"date 2/12/2021","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"deadline go for a jog /by 8pm today","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"todo listening to music ","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"todo use a computer ","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"deadline","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"event","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"done 1","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"done 2","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"done 3","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"done 4","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"list","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"TODO LET\u0027S GO TO THE BEACH! ","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"DEADLINE LET\u0027S FINISH WATCHING THIS SHOW 2/12/2021 1800","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"EVENT FINISH WATCHING MOVIE /at 2/12/2021 1800 2100","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"DEADLINE LET\u0027S FINISH WATCHING THIS SHOW /at 2/12/2021 1800 2100","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"EVENT FINISH WATCHING MOVIE /by 2/12/2021 1900 2100","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"deadline go for a run /by 21/12/2021 2100","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"deadline go for a run /by 21/22/2021 2100","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"deadline go for a run /by 21/12/2021 8900","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"deadline go for a run /by 21/12/2021 2100","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"deadline go for a run 21/12/2021 2100","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"deadline go for a run /by 2100","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"deadline go for a run /by 21/12/2021 ","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"deadline go for a run /by 1/12/2021 2100","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"deadline go for a run /by 21/2/2021 2100","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"deadline go for a run /by 21/12/2021 21:00","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"bye","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wowsiddanth":43}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"REM compiles all file","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"javac -cp ..\\src\\main\\java\\petal -Xlint:none -d ..\\bin ..\\src\\main\\java\\petal\\*.java  ..\\src\\main\\java\\petal\\task\\*.java  ..\\src\\main\\java\\petal\\exception\\*.java  ..\\src\\main\\java\\petal\\components\\*.java  ..\\src\\main\\java\\petal\\command\\*.java","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"java -classpath ..\\bin petal.Petal \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"cmd \\k","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wowsiddanth":6,"-":15}}]
