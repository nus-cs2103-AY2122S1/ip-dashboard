[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"Ongzl"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"Ongzl"},"content":"    toolVersion  \u00278.29\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Ongzl":2,"-":44}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"import duke.util.List;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"    private final List list;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"    private final Parser parser;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"     * Constructor of Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"    public Duke() {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"        this.list \u003d new List();","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"        this.parser \u003d new Parser(this.list);","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"        new Duke().run();","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"     * Run the Duke program, prints out welcome statement and starts accepting input.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"    public void run() {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"        ui.welcome();","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"        parser.execute();","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Ongzl":27,"-":4}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"     * Constructor for DukeException.","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"    public DukeException() {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"        super(\"â˜¹ OOPS!!! I\u0027m sorry, you need to specify which duke.task is done :)\");","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Ongzl":11}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"    //date of deadline in format LocalDate","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"    protected LocalDate byDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"    //time of deadline in format String","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"    protected String byTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"     * Constructor for Deadline Task.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"     * @param description String input of description of Deadline Task.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"     * @param by String for Deadline due format dd/mm/yyyy HHmm.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"     * @throws DukeException if by is incomplete.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"     * @throws DateTimeParseException date is in incorrect format.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"    public Deadline(String description, String by) throws DukeException, DateTimeParseException {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"        String[] parts \u003d by.split(\" \");//split along the whitespace to get the integer","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"        if (parts.length \u003c\u003d 1) {// checking for incomplete prompts, no time provided","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"            throw new DukeException();","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"        String date \u003d parts[0].replace(\"/\", \"-\");","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"        this.byDate \u003d LocalDate.parse(date, DateTimeFormatter.ofPattern(\"d-M-yyyy\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Ongzl"},"content":"        this.byTime \u003d parts[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"Ongzl"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"Ongzl"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"Ongzl"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + byDate.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")) + \" \" + byTime + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"Ongzl"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Ongzl":39}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"    //date of event in format LocalDate","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"    protected LocalDate atDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"    //time of event in format String","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"    protected String atTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"     * Constructor for Event Task.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"     * @param description Description of Event Task.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"     * @param at Date and time when Event takes place, String format dd/mm/yyyy HHmm.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"     * @throws DukeException if at is incomplete, no time given.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"     * @throws DateTimeParseException If date is in the wrong format.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"    public Event(String description, String at) throws DukeException, DateTimeParseException {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"        String[] parts \u003d at.split(\" \");//split along the whitespace to get the integer","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"        if (parts.length \u003c\u003d 1) {// checking for incomplete prompts, no time provided","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"            throw new DukeException();","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"        String date \u003d parts[0].replace(\"/\", \"-\");","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"        this.atDate \u003d LocalDate.parse(date, DateTimeFormatter.ofPattern(\"d-M-yyyy\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"Ongzl"},"content":"        this.atTime \u003d parts[1];","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"Ongzl"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"Ongzl"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"Ongzl"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + atDate.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")) + \" \" + atTime + \")\";","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"Ongzl"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Ongzl":38}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import java.io.Serializable;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"public class Task implements Serializable {","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"    //Description of Task","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"    protected String description;","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"    //Flag for whether a task is done, default false","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"     * Constructor for Task.","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"     * @param description String description of Task.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"        return (isDone ? \"X\" : \" \"); // mark done duke.task with X","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"        return this.description;","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"    public void setDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"Ongzl"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"Ongzl"},"content":"     * toString method for Task, showing the status of completion and description.","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"Ongzl"},"content":"     * @return Status of completion and description of Task.","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"Ongzl"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"Ongzl"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"Ongzl"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"Ongzl"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"Ongzl":43}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"     * Constructor for ToDo Task.","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"     * @param description String description of ToDo task.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"     * toString method for ToDo task, overrides Task toString.","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"     * @return String representation of Todo Task.","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Ongzl":23}},{"path":"src/main/java/duke/util/List.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package duke.util;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"public class List {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"    //List that holds all the Tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"    private final ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"    //Storage to load the list and write to list,","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"    private final Storage store;","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"     * Constructor for List.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"    public List() {","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"        this.store \u003d new Storage(\"list.ser\");","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"        this.list \u003d store.loadFromFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"     * Add ToDo Task to list.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"     * @param text Description of ToDo Task.","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"Ongzl"},"content":"    public void addToDo(String text) {","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"Ongzl"},"content":"        Task newToDo \u003d new ToDo(text);","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"Ongzl"},"content":"        list.add(newToDo);","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"Ongzl"},"content":"        System.out.println(\"Got it. I\u0027ve added this duke.task: \");","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"Ongzl"},"content":"        System.out.println(newToDo);","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"Ongzl"},"content":"        System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"Ongzl"},"content":"        store.writeToFile(list);","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"Ongzl"},"content":"     * Add Deadline Task to list.","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"Ongzl"},"content":"     * @param text Description of Deadline.","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"Ongzl"},"content":"     * @param by Deadline of Deadline Task.","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"Ongzl"},"content":"    public void addDeadline(String text, String by) {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"Ongzl"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"Ongzl"},"content":"            Task newDl \u003d new Deadline(text, by);","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"Ongzl"},"content":"            list.add(newDl);","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"Ongzl"},"content":"            System.out.println(\"Got it. I\u0027ve added this duke.task: \");","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"Ongzl"},"content":"            System.out.println(newDl);","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"Ongzl"},"content":"            System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"Ongzl"},"content":"            store.writeToFile(list);","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"Ongzl"},"content":"        } catch (DukeException | DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"Ongzl"},"content":"            System.out.println(\"Please input your date and time in dd/mm/yyyy hhmm format, eg. 28/08/2021 2359\");","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"Ongzl"},"content":"     * Add Event Task to list.","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"Ongzl"},"content":"     * @param text Description of Event Task.","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"Ongzl"},"content":"     * @param at Date time of Event.","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"Ongzl"},"content":"    public void addEvent(String text, String at) {","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"Ongzl"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"Ongzl"},"content":"            Task newEvent \u003d new Event(text, at);","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"Ongzl"},"content":"            list.add(newEvent);","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"Ongzl"},"content":"            System.out.println(\"Got it. I\u0027ve added this duke.task: \");","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"Ongzl"},"content":"            System.out.println(newEvent);","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"Ongzl"},"content":"            System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"Ongzl"},"content":"            store.writeToFile(list);","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"Ongzl"},"content":"        } catch (DukeException | DateTimeParseException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"Ongzl"},"content":"            System.out.println(\"Please input your date and time in dd/mm/yyyy hhmm format, eg. 28/08/2021 2359\");","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":78,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":79,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"Ongzl"},"content":"     * Set Task to be done at list index.","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"Ongzl"},"content":"     * @param index Position of Task to be set to done.","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"Ongzl"},"content":"    public void setIndexDone(int index) {// starts from 1","lastModifiedDate":"2021-08-17"},{"lineNumber":85,"author":{"gitId":"Ongzl"},"content":"        if (index \u003e list.size() || index \u003c 1) {//check for invalid index number","lastModifiedDate":"2021-08-19"},{"lineNumber":86,"author":{"gitId":"Ongzl"},"content":"            System.out.println(\"There is no duke.task \" + index);","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"Ongzl"},"content":"            return;","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"Ongzl"},"content":"        list.get(index - 1).setDone();","lastModifiedDate":"2021-08-17"},{"lineNumber":90,"author":{"gitId":"Ongzl"},"content":"        System.out.println(\"Nice! I\u0027ve marked this duke.task as done: \");","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"Ongzl"},"content":"        System.out.println(list.get(index - 1).toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":92,"author":{"gitId":"Ongzl"},"content":"        store.writeToFile(list);","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":94,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":95,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"Ongzl"},"content":"     * Delete Task from list.","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"Ongzl"},"content":"     * @param index Index of task to be deleted in list.","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"Ongzl"},"content":"    public void deleteTask(int index) {//starts from 1","lastModifiedDate":"2021-08-19"},{"lineNumber":101,"author":{"gitId":"Ongzl"},"content":"        if (index \u003e list.size() || index \u003c 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":102,"author":{"gitId":"Ongzl"},"content":"            System.out.println(\"There is no duke.task \" + index);","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"Ongzl"},"content":"            return;","lastModifiedDate":"2021-08-19"},{"lineNumber":104,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":105,"author":{"gitId":"Ongzl"},"content":"        System.out.println(\"Noted. I\u0027ve removed this duke.task: \");","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"Ongzl"},"content":"        System.out.println(list.get(index - 1).toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":107,"author":{"gitId":"Ongzl"},"content":"        list.remove(index - 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":108,"author":{"gitId":"Ongzl"},"content":"        System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":109,"author":{"gitId":"Ongzl"},"content":"        store.writeToFile(list);","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":111,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":112,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"Ongzl"},"content":"     * Find Tasks with the input String in it.","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"Ongzl"},"content":"     * @param input Keyword to search Tasks with.","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"Ongzl"},"content":"    public void find(String input) {","lastModifiedDate":"2021-08-26"},{"lineNumber":118,"author":{"gitId":"Ongzl"},"content":"        int length \u003d list.size();","lastModifiedDate":"2021-08-26"},{"lineNumber":119,"author":{"gitId":"Ongzl"},"content":"        ArrayList\u003cInteger\u003e listOfHits \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"Ongzl"},"content":"        for (int i \u003d 0; i \u003c length; i++) {// finding the index of task with keyword input","lastModifiedDate":"2021-08-26"},{"lineNumber":121,"author":{"gitId":"Ongzl"},"content":"            if (list.get(i).getDescription().contains(input)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"Ongzl"},"content":"                listOfHits.add(i);","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"Ongzl"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":124,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"Ongzl"},"content":"        if (listOfHits.size() \u003d\u003d 0) {//no matches","lastModifiedDate":"2021-08-26"},{"lineNumber":126,"author":{"gitId":"Ongzl"},"content":"            System.out.println(\"There are no matching tasks in your list\");","lastModifiedDate":"2021-08-26"},{"lineNumber":127,"author":{"gitId":"Ongzl"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":128,"author":{"gitId":"Ongzl"},"content":"            System.out.println(\"Here are the matching tasks in your list: \");","lastModifiedDate":"2021-08-26"},{"lineNumber":129,"author":{"gitId":"Ongzl"},"content":"            for (int i \u003d 0; i \u003c listOfHits.size(); i++) {//print out matches","lastModifiedDate":"2021-08-26"},{"lineNumber":130,"author":{"gitId":"Ongzl"},"content":"                System.out.println((i + 1) + \".\" + list.get(i).toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":131,"author":{"gitId":"Ongzl"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":132,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":133,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":134,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":135,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":136,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":137,"author":{"gitId":"Ongzl"},"content":"     * Print out the entire list using the Tasks toString method.","lastModifiedDate":"2021-08-26"},{"lineNumber":138,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":139,"author":{"gitId":"Ongzl"},"content":"    public void show() {","lastModifiedDate":"2021-08-17"},{"lineNumber":140,"author":{"gitId":"Ongzl"},"content":"        int length \u003d list.size();","lastModifiedDate":"2021-08-17"},{"lineNumber":141,"author":{"gitId":"Ongzl"},"content":"        if (length \u003d\u003d 0) {","lastModifiedDate":"2021-08-19"},{"lineNumber":142,"author":{"gitId":"Ongzl"},"content":"            System.out.println(\"YAY! You have no more tasks left :)\");","lastModifiedDate":"2021-08-19"},{"lineNumber":143,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":144,"author":{"gitId":"Ongzl"},"content":"        for (int i \u003d 1; i \u003c\u003d length; i++) {","lastModifiedDate":"2021-08-17"},{"lineNumber":145,"author":{"gitId":"Ongzl"},"content":"            System.out.println(i + \".\" + list.get(i - 1).toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":146,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":147,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":148,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":149,"author":{"gitId":"Ongzl"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"Ongzl":149}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package duke.util;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"public class Parser {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"    private final Scanner sc;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"    private final List list;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"    public Parser(List list) {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"    // extract int from done and delete prompts","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"    public static int extractInt(String input) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"        String[] parts \u003d input.split(\" \");//split along the whitespace to get the integer","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"        if (parts.length \u003c\u003d 1) {// checking for incomplete prompts","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"            throw new DukeException();","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"        String numStr \u003d parts[1];","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"        return Integer.valueOf(numStr);","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"    public void execute() {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"        String input \u003d sc.nextLine(); // scan the line for the user\u0027s input","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"        boolean shouldContinue \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"        while (shouldContinue) {//create loop for the chat","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"Ongzl"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"Ongzl"},"content":"                if (input.startsWith(\"find \")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"Ongzl"},"content":"                    String desc \u003d input.replaceFirst(\"find \", \"\");//remove find from input","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"Ongzl"},"content":"                    if (desc.isBlank()) {//check for incomplete input","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"Ongzl"},"content":"                        throw new DukeException();","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"Ongzl"},"content":"                    }","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"Ongzl"},"content":"                    list.find(desc);","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"Ongzl"},"content":"                    input \u003d sc.nextLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"Ongzl"},"content":"                    continue;","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"Ongzl"},"content":"                } else if (input.startsWith(\"done \")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"Ongzl"},"content":"                    int numInt \u003d extractInt(input);","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"Ongzl"},"content":"                    list.setIndexDone(numInt);","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"Ongzl"},"content":"                    input \u003d sc.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"Ongzl"},"content":"                    continue;","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"Ongzl"},"content":"                } else if (input.startsWith(\"delete \")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"Ongzl"},"content":"                    int numInt \u003d extractInt(input);","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"Ongzl"},"content":"                    list.deleteTask(numInt);","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"Ongzl"},"content":"                    input \u003d sc.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"Ongzl"},"content":"                    continue;","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"Ongzl"},"content":"                } else if (input.startsWith(\"todo \")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"Ongzl"},"content":"                    String task \u003d input.replaceFirst(\"todo \", \"\");//remove to-do from input","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"Ongzl"},"content":"                    if (task.isBlank()) {//check for incomplete input","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"Ongzl"},"content":"                        throw new DukeException();","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"Ongzl"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"Ongzl"},"content":"                    list.addToDo(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"Ongzl"},"content":"                    input \u003d sc.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"Ongzl"},"content":"                    continue;","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"Ongzl"},"content":"                } else if (input.startsWith(\"deadline \")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"Ongzl"},"content":"                    String task \u003d input.replaceFirst(\"deadline \", \"\");//remove deadline from input","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"Ongzl"},"content":"                    if (task.isBlank()) {//checking incomplete input","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"Ongzl"},"content":"                        throw new DukeException();","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"Ongzl"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"Ongzl"},"content":"                    String[] parts \u003d task.split(\"/by \");//split string along keyword /by","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"Ongzl"},"content":"                    list.addDeadline(parts[0], parts[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"Ongzl"},"content":"                    input \u003d sc.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"Ongzl"},"content":"                    continue;","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"Ongzl"},"content":"                } else if (input.startsWith(\"event \")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"Ongzl"},"content":"                    String task \u003d input.replaceFirst(\"event \", \"\");//remove event from input","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"Ongzl"},"content":"                    if (task.isBlank()) {//checking incomplete input","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"Ongzl"},"content":"                        throw new DukeException();","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"Ongzl"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"Ongzl"},"content":"                    String[] parts \u003d task.split(\"/at\");//split string along keyword /at","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"Ongzl"},"content":"                    list.addEvent(parts[0], parts[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"Ongzl"},"content":"                    input \u003d sc.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"Ongzl"},"content":"                    continue;","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"Ongzl"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"Ongzl"},"content":"                switch (input) {","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"Ongzl"},"content":"                case \"bye\":","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"Ongzl"},"content":"                case \"Bye\":","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"Ongzl"},"content":"                case \"BYE\":","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"Ongzl"},"content":"                    System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"Ongzl"},"content":"                    shouldContinue \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"Ongzl"},"content":"                    break;","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"Ongzl"},"content":"                case \"list\":","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"Ongzl"},"content":"                    list.show();","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"Ongzl"},"content":"                    input \u003d sc.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"Ongzl"},"content":"                    break;","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"Ongzl"},"content":"                default:","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"Ongzl"},"content":"                    throw new DukeException();","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"Ongzl"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"Ongzl"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"Ongzl"},"content":"                System.out.println(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"Ongzl"},"content":"                input \u003d sc.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"Ongzl"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"Ongzl"},"content":"        sc.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"Ongzl"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Ongzl":99}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package duke.util;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"public class Storage {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"    //File name of file to be used to write and load list of task.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"    private final String fileName;","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"     * Constructor of Storage.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"     * @param fileName File name of file to write to or load from.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"    public Storage(String fileName) {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"     * Write the inputted list onto the specified file.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"     * @param list ArrayList to be written onto the file.","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"Ongzl"},"content":"    public void writeToFile(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"Ongzl"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"Ongzl"},"content":"            FileOutputStream writeData \u003d new FileOutputStream(fileName);","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"Ongzl"},"content":"            ObjectOutputStream writeStream \u003d new ObjectOutputStream(writeData);","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"Ongzl"},"content":"            writeStream.writeObject(list);","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"Ongzl"},"content":"            writeStream.flush();","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"Ongzl"},"content":"            writeStream.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"Ongzl"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"Ongzl"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"Ongzl"},"content":"     * Return an ArrayList that is loaded from the file.","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"Ongzl"},"content":"     * @return ArrayList from file, if nothing is written on file, return new ArrayList list.","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"Ongzl"},"content":"    public ArrayList\u003cTask\u003e loadFromFile() {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"Ongzl"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"Ongzl"},"content":"            FileInputStream readData \u003d new FileInputStream(fileName);","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"Ongzl"},"content":"            ObjectInputStream readStream \u003d new ObjectInputStream(readData);","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"Ongzl"},"content":"            ArrayList\u003cTask\u003e list2 \u003d (ArrayList\u003cTask\u003e) readStream.readObject();","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"Ongzl"},"content":"            readStream.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"Ongzl"},"content":"            return list2;","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"Ongzl"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"Ongzl"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"Ongzl"},"content":"        } catch (IOException | ClassNotFoundException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"Ongzl"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"Ongzl"},"content":"        return new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"Ongzl"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Ongzl":64}},{"path":"src/main/java/duke/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package duke.util;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"public class Ui {","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"    //Duke logo","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"    private static final String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"    public Ui() {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"     * Welcome statement for new user.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"    public void welcome() {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Ongzl":20}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"    public void toString_descriptionDeadline_DeadlineStringReturned() throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"        assertEquals(\"[D][ ] do iP (by: 28 Aug 2021 2359)\",","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"                new Deadline(\"do iP\", \"28-8-2021 2359\").toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"    public void deadlineConstructor_invalidTimeFormat_DukeExceptionThrown() {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"            Deadline dl \u003d new Deadline(\"do iP\", \"28-8-2021\");","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Ongzl":24}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"public class ToDoTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"    public void toString_descriptionOfToDo_toDoStringReturned() {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"        assertEquals(\"[T][ ] study\", new ToDo(\"study\").toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Ongzl":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"todo eat lunch","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"deadline finish IP /by 28/8/2021 2359","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"event sleep /at tonight 2359","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"deadline do homework /by 27/08/2021 2359","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"done 3","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"done","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"delete 5","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"delete 4","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"delete 1","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"delete","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"delete 1","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"delete 1","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Ongzl":18}}]
