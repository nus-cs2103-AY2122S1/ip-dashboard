[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"Ongzl"},"content":"    mainClassName \u003d \"Launcher\"","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"Ongzl"},"content":"    toolVersion  \u00278.29\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Ongzl":16,"-":44}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"Ongzl"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"Ongzl"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"Ongzl"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"Ongzl"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"Ongzl"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"Ongzl"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"Ongzl"},"content":"    private void flip() {","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"Ongzl"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"Ongzl"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"Ongzl"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"Ongzl"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"Ongzl"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"Ongzl"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"Ongzl"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"Ongzl"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"Ongzl"},"content":"        db.flip();","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"Ongzl"},"content":"        return db;","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"Ongzl"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"Ongzl":59}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"    private TaskList list;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"    private Parser parser;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"     * Constructor of Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"    public Duke(String fileName) {","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"        this.list \u003d new TaskList(fileName);","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"        this.parser \u003d new Parser(this.list);","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"        new Duke(\"list.ser\").run();","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"     * Gets response from Duke with the input being the prompt.","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"     * @param input Prompt for Duke, Users input.","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"     * @return Duke\u0027s reponse as a String.","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"Ongzl"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"Ongzl"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"Ongzl"},"content":"        return parser.parseAndExecute(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"Ongzl"},"content":"     * Runs the Duke program, prints out welcome statement and starts accepting input.","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"Ongzl"},"content":"    public void run() {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"Ongzl"},"content":"        ui.welcome();","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Ongzl":38,"-":4}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"public class Launcher {","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"Ongzl":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"    private Duke duke \u003d new Duke(\"list.ser\");","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"            stage.show();","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"Ongzl":29}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"Ongzl"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"Ongzl"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"Ongzl"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"Ongzl"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"Ongzl"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"Ongzl"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"Ongzl"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"Ongzl"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"Ongzl"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"Ongzl"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"Ongzl"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"Ongzl"},"content":"        );","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"Ongzl"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"Ongzl"},"content":"        if (response.equals(\"Bye. Hope to see you again soon!\")) {","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"Ongzl"},"content":"            Platform.exit();","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"Ongzl"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"Ongzl":54}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":" * Represents a general error for un-programmed prompts and behavior.","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"     * Constructs a DukeException.","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"    public DukeException() {","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"        super(\" OOPS!!! I\u0027m sorry, you need to specify which duke.task is done :)\");","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"     * Constructs a DukeException with a specific message.","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"     * @param message Error message to be printed.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"        super(message);","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Ongzl":23}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":" * Represents a Task with a Deadline(Date and Time).","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"    //date of deadline in format LocalDate","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"    protected LocalDate byDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"    //time of deadline in format String","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"    protected String byTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"     * Constructs a Task with a Deadline .","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"     * @param description String input of description of Deadline Task.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"     * @param by String for Deadline due format dd/mm/yyyy HHmm.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"     * @throws DukeException if by is incomplete.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"     * @throws DateTimeParseException date is in incorrect format.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"    public Deadline(String description, String by) throws DukeException, DateTimeParseException {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"        String[] parts \u003d by.split(\" \"); //split along the whitespace to get the integer","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"        if (parts.length \u003c\u003d 1) { // checking for incomplete prompts, no time provided","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"            throw new DukeException();","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"Ongzl"},"content":"        String date \u003d parts[0].replace(\"/\", \"-\");","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"Ongzl"},"content":"        this.byDate \u003d LocalDate.parse(date, DateTimeFormatter.ofPattern(\"d-M-yyyy\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"Ongzl"},"content":"        this.byTime \u003d parts[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"Ongzl"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"Ongzl"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"Ongzl"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + byDate.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"))","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"Ongzl"},"content":"                + \" \" + byTime + \") \\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"Ongzl"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Ongzl":43}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":" * Represents a Task Event that happens at a date and time.","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"    //date of event in format LocalDate","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"    protected LocalDate atDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"    //time of event in format String","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"    protected String atTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"     * Constructs a Event Task with date and time of when it is happening.","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"     * @param description Description of Event Task.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"     * @param at Date and time when Event takes place, String format dd/mm/yyyy HHmm.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"     * @throws DukeException if at is incomplete, no time given.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"     * @throws DateTimeParseException If date is in the wrong format.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"    public Event(String description, String at) throws DukeException, DateTimeParseException {","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"        String[] parts \u003d at.split(\" \"); //split along the whitespace to get the integer","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"        if (parts.length \u003c\u003d 1) { // checking for incomplete prompts, no time provided","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"            throw new DukeException();","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"Ongzl"},"content":"        String date \u003d parts[0].replace(\"/\", \"-\");","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"Ongzl"},"content":"        this.atDate \u003d LocalDate.parse(date, DateTimeFormatter.ofPattern(\"d-M-yyyy\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"Ongzl"},"content":"        this.atTime \u003d parts[1];","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"Ongzl"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"Ongzl"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"Ongzl"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + atDate.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"))","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"Ongzl"},"content":"                + \" \" + atTime + \") \\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"Ongzl"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Ongzl":42}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import java.io.Serializable;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":" * Represents a Task to be done.","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"public class Task implements Serializable {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"    //Description of Task","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"    protected String description;","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"    //Flag for whether a task is done, default false","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"     * Constructs a Task with a String description.","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"     * @param description String description of Task.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"        return this.description;","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"Ongzl"},"content":"    public void setDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"Ongzl"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"Ongzl"},"content":"     * Converts Task to String, showing the status of completion and description.","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"Ongzl"},"content":"     * @return Status of completion and description of Task.","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"Ongzl"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"Ongzl"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"Ongzl"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"Ongzl"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"Ongzl":45}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":" * Represents a Task that is to be done,","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":" * no date and time cutoff.","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"     * Constructs a ToDo Task.","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"     * @param description String description of ToDo task.","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"        return \"[T]\" + super.toString() + \" \\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Ongzl":22}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package duke.util;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":" * Represents an object to parse user\u0027s input and execute it.","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"public class Parser {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"    private TaskList list;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"    public Parser(TaskList list) {","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"     * Extracts an integer from a string input of format \"string integer\".","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"     * @param input String containing an integer at 2nd position.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"     * @return Integer at second position of String.","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"     * @throws DukeException If String does not have more than one word.","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"    public int extractInt(String input) throws DukeException {","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"        String[] parts \u003d input.split(\" \"); //split along the whitespace to get the integer","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"        if (parts.length !\u003d 2) { // checking for wrong format","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"            throw new DukeException();","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"        String numStr \u003d parts[1];","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"        return Integer.parseInt(numStr);","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"Ongzl"},"content":"     * Parses the input and then executes the instructions.","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"Ongzl"},"content":"     * @param input String of instructions.","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"Ongzl"},"content":"     * @return The response from Duke.","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"Ongzl"},"content":"    public String parseAndExecute(String input) {","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"Ongzl"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"Ongzl"},"content":"            if (input.startsWith(\"find \")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"Ongzl"},"content":"                String desc \u003d input.replaceFirst(\"find \", \"\"); //remove find from input","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"Ongzl"},"content":"                if (desc.isBlank()) { //check for incomplete input","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"Ongzl"},"content":"                    throw new DukeException();","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"Ongzl"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"Ongzl"},"content":"                return list.findTask(desc);","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"Ongzl"},"content":"            } else if (input.startsWith(\"done \")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"Ongzl"},"content":"                int numInt \u003d extractInt(input);","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"Ongzl"},"content":"                return list.setIndexDone(numInt);","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"Ongzl"},"content":"            } else if (input.startsWith(\"delete \")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"Ongzl"},"content":"                int numInt \u003d extractInt(input);","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"Ongzl"},"content":"                return list.deleteTask(numInt);","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"Ongzl"},"content":"            } else if (input.startsWith(\"todo \")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"Ongzl"},"content":"                String task \u003d input.replaceFirst(\"todo \", \"\"); //remove to-do from input","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"Ongzl"},"content":"                if (task.isBlank()) { //check for incomplete input","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"Ongzl"},"content":"                    throw new DukeException();","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"Ongzl"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"Ongzl"},"content":"                return list.addToDo(task);","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"Ongzl"},"content":"            } else if (input.startsWith(\"deadline \")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"Ongzl"},"content":"                String task \u003d input.replaceFirst(\"deadline \", \"\"); //remove deadline from input","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"Ongzl"},"content":"                if (task.isBlank()) { //checking incomplete input","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"Ongzl"},"content":"                    throw new DukeException();","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"Ongzl"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"Ongzl"},"content":"                String[] parts \u003d task.split(\"/by \"); //split string along keyword /by","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"Ongzl"},"content":"                return list.addDeadline(parts[0], parts[1]);","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"Ongzl"},"content":"            } else if (input.startsWith(\"event \")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"Ongzl"},"content":"                String task \u003d input.replaceFirst(\"event \", \"\"); //remove event from input","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"Ongzl"},"content":"                if (task.isBlank()) { //checking incomplete input","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"Ongzl"},"content":"                    throw new DukeException();","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"Ongzl"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"Ongzl"},"content":"                String[] parts \u003d task.split(\"/at \"); //split string along keyword /at","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"Ongzl"},"content":"                return list.addEvent(parts[0], parts[1]);","lastModifiedDate":"2021-09-02"},{"lineNumber":71,"author":{"gitId":"Ongzl"},"content":"            } else {","lastModifiedDate":"2021-09-02"},{"lineNumber":72,"author":{"gitId":"Ongzl"},"content":"                switch (input.toLowerCase()) {","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"Ongzl"},"content":"                case \"bye\":","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"Ongzl"},"content":"                    return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-09-02"},{"lineNumber":75,"author":{"gitId":"Ongzl"},"content":"                case \"list\":","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"Ongzl"},"content":"                    return list.show();","lastModifiedDate":"2021-09-02"},{"lineNumber":77,"author":{"gitId":"Ongzl"},"content":"                default:","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"Ongzl"},"content":"                    throw new DukeException();","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"Ongzl"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"Ongzl"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"Ongzl"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":82,"author":{"gitId":"Ongzl"},"content":"            return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2021-09-02"},{"lineNumber":83,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"Ongzl"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Ongzl":85}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package duke.util;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":" * Represents an object to load and store serializable into files.","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"public class Storage {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"    //File name of file to be used to write and load list of task.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"    private final String fileName;","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"     * Constructs Storage object at fileName.","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"     * @param fileName File name of file to write to or load from.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"    public Storage(String fileName) {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"     * Writes the inputted list onto the specified file.","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"Ongzl"},"content":"     * @param list ArrayList to be written onto the file.","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"Ongzl"},"content":"    public void writeToFile(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"Ongzl"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"Ongzl"},"content":"            FileOutputStream writeData \u003d new FileOutputStream(fileName);","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"Ongzl"},"content":"            ObjectOutputStream writeStream \u003d new ObjectOutputStream(writeData);","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"Ongzl"},"content":"            writeStream.writeObject(list);","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"Ongzl"},"content":"            writeStream.flush();","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"Ongzl"},"content":"            writeStream.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"Ongzl"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"Ongzl"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"Ongzl"},"content":"     * Loads an ArrayList from the file.","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"Ongzl"},"content":"     * @return ArrayList from file, if nothing is written on file, return new ArrayList list.","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"Ongzl"},"content":"    public ArrayList\u003cTask\u003e loadFromFile() {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"Ongzl"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"Ongzl"},"content":"            FileInputStream readData \u003d new FileInputStream(fileName);","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"Ongzl"},"content":"            ObjectInputStream readStream \u003d new ObjectInputStream(readData);","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"Ongzl"},"content":"            @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"Ongzl"},"content":"            ArrayList\u003cTask\u003e list2 \u003d (ArrayList\u003cTask\u003e) readStream.readObject();","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"Ongzl"},"content":"            readStream.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"Ongzl"},"content":"            return list2;","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"Ongzl"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"Ongzl"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"Ongzl"},"content":"        } catch (IOException | ClassNotFoundException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"Ongzl"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"Ongzl"},"content":"        return new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"Ongzl"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Ongzl":68}},{"path":"src/main/java/duke/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package duke.util;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":" * Represents an ArrayList of Task.","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"public class TaskList {","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"    //List that holds all the Tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"    private final ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"    //Storage to load the list and write to list.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"    private final Storage store;","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"     * Constructs List that contains Tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"     * @param fileName File to save and load existing TaskList from.","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"    public TaskList(String fileName) {","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"        this.store \u003d new Storage(fileName);","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"        this.list \u003d store.loadFromFile();","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"Ongzl"},"content":"     * Adds ToDo Task to list.","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"Ongzl"},"content":"     * @param text Description of ToDo Task.","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"Ongzl"},"content":"    public String addToDo(String text) {","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"Ongzl"},"content":"        Task newToDo \u003d new ToDo(text);","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"Ongzl"},"content":"        list.add(newToDo);","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"Ongzl"},"content":"        store.writeToFile(list);","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"Ongzl"},"content":"        return \"Got it. I\u0027ve added this duke.task: \\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"Ongzl"},"content":"                + newToDo","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"Ongzl"},"content":"                + \"Now you have \" + list.size() + \" tasks in the list. \\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"Ongzl"},"content":"     * Adds Deadline Task to list.","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"Ongzl"},"content":"     * @param text Description of Deadline.","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"Ongzl"},"content":"     * @param by Deadline of Deadline Task.","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"Ongzl"},"content":"    public String addDeadline(String text, String by) {","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"Ongzl"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"Ongzl"},"content":"            Task newDl \u003d new Deadline(text, by);","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"Ongzl"},"content":"            list.add(newDl);","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"Ongzl"},"content":"            store.writeToFile(list);","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"Ongzl"},"content":"            return \"Got it. I\u0027ve added this duke.task: \\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"Ongzl"},"content":"                    + newDl","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"Ongzl"},"content":"                    + \"Now you have \" + list.size() + \" tasks in the list. \\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"Ongzl"},"content":"        } catch (DukeException | DateTimeParseException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"Ongzl"},"content":"            return \"Please input your date and time in dd/mm/yyyy hhmm format, eg. 28/08/2021 2359\";","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":65,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":66,"author":{"gitId":"Ongzl"},"content":"     * Adds Event Task to list.","lastModifiedDate":"2021-09-02"},{"lineNumber":67,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":68,"author":{"gitId":"Ongzl"},"content":"     * @param text Description of Event Task.","lastModifiedDate":"2021-09-02"},{"lineNumber":69,"author":{"gitId":"Ongzl"},"content":"     * @param at Date time of Event.","lastModifiedDate":"2021-09-02"},{"lineNumber":70,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":71,"author":{"gitId":"Ongzl"},"content":"    public String addEvent(String text, String at) {","lastModifiedDate":"2021-09-02"},{"lineNumber":72,"author":{"gitId":"Ongzl"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"Ongzl"},"content":"            Task newEvent \u003d new Event(text, at);","lastModifiedDate":"2021-09-02"},{"lineNumber":74,"author":{"gitId":"Ongzl"},"content":"            list.add(newEvent);","lastModifiedDate":"2021-09-02"},{"lineNumber":75,"author":{"gitId":"Ongzl"},"content":"            store.writeToFile(list);","lastModifiedDate":"2021-09-02"},{"lineNumber":76,"author":{"gitId":"Ongzl"},"content":"            return \"Got it. I\u0027ve added this duke.task: \\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":77,"author":{"gitId":"Ongzl"},"content":"                    + newEvent","lastModifiedDate":"2021-09-07"},{"lineNumber":78,"author":{"gitId":"Ongzl"},"content":"                    + \"Now you have \" + list.size() + \" tasks in the list. \\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":79,"author":{"gitId":"Ongzl"},"content":"        } catch (DukeException | DateTimeParseException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":80,"author":{"gitId":"Ongzl"},"content":"            return \"Please input your date and time in dd/mm/yyyy hhmm format, eg. 28/08/2021 2359\";","lastModifiedDate":"2021-09-02"},{"lineNumber":81,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":82,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":83,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":84,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":85,"author":{"gitId":"Ongzl"},"content":"     * Sets Task at list index to done .","lastModifiedDate":"2021-09-02"},{"lineNumber":86,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":87,"author":{"gitId":"Ongzl"},"content":"     * @param index Position of Task to be set to done.","lastModifiedDate":"2021-09-02"},{"lineNumber":88,"author":{"gitId":"Ongzl"},"content":"     * @return","lastModifiedDate":"2021-09-02"},{"lineNumber":89,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":90,"author":{"gitId":"Ongzl"},"content":"    public String setIndexDone(int index) { // starts from 1","lastModifiedDate":"2021-09-02"},{"lineNumber":91,"author":{"gitId":"Ongzl"},"content":"        if (index \u003e list.size() || index \u003c 1) { //check for invalid index number","lastModifiedDate":"2021-09-02"},{"lineNumber":92,"author":{"gitId":"Ongzl"},"content":"            return \"There is no duke.task \" + index;","lastModifiedDate":"2021-09-02"},{"lineNumber":93,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":94,"author":{"gitId":"Ongzl"},"content":"        list.get(index - 1).setDone();","lastModifiedDate":"2021-09-02"},{"lineNumber":95,"author":{"gitId":"Ongzl"},"content":"        store.writeToFile(list);","lastModifiedDate":"2021-09-02"},{"lineNumber":96,"author":{"gitId":"Ongzl"},"content":"        return \"Nice! I\u0027ve marked this duke.task as done: \\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":97,"author":{"gitId":"Ongzl"},"content":"                + list.get(index - 1).toString();","lastModifiedDate":"2021-09-07"},{"lineNumber":98,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":99,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":100,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":101,"author":{"gitId":"Ongzl"},"content":"     * Deletes Task from list.","lastModifiedDate":"2021-09-02"},{"lineNumber":102,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":103,"author":{"gitId":"Ongzl"},"content":"     * @param index Index of task to be deleted in list.","lastModifiedDate":"2021-09-02"},{"lineNumber":104,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":105,"author":{"gitId":"Ongzl"},"content":"    public String deleteTask(int index) { //starts from 1","lastModifiedDate":"2021-09-02"},{"lineNumber":106,"author":{"gitId":"Ongzl"},"content":"        if (index \u003e list.size() || index \u003c 1) {","lastModifiedDate":"2021-09-02"},{"lineNumber":107,"author":{"gitId":"Ongzl"},"content":"            return \"There is no duke.task \" + index;","lastModifiedDate":"2021-09-02"},{"lineNumber":108,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":109,"author":{"gitId":"Ongzl"},"content":"        String taskDesc \u003d list.get(index - 1).toString();","lastModifiedDate":"2021-09-02"},{"lineNumber":110,"author":{"gitId":"Ongzl"},"content":"        list.remove(index - 1);","lastModifiedDate":"2021-09-02"},{"lineNumber":111,"author":{"gitId":"Ongzl"},"content":"        store.writeToFile(list);","lastModifiedDate":"2021-09-02"},{"lineNumber":112,"author":{"gitId":"Ongzl"},"content":"        return \"Noted. I\u0027ve removed this duke.task: \\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":113,"author":{"gitId":"Ongzl"},"content":"                + taskDesc","lastModifiedDate":"2021-09-07"},{"lineNumber":114,"author":{"gitId":"Ongzl"},"content":"                + \"Now you have \" + list.size() + \" tasks in the list. \\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":115,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":116,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":117,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":118,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":119,"author":{"gitId":"Ongzl"},"content":"     * Finds Tasks with the input String in it.","lastModifiedDate":"2021-09-02"},{"lineNumber":120,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":121,"author":{"gitId":"Ongzl"},"content":"     * @param input Keyword to search Tasks with.","lastModifiedDate":"2021-09-02"},{"lineNumber":122,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":123,"author":{"gitId":"Ongzl"},"content":"    public String findTask(String input) {","lastModifiedDate":"2021-09-02"},{"lineNumber":124,"author":{"gitId":"Ongzl"},"content":"        int length \u003d list.size();","lastModifiedDate":"2021-09-02"},{"lineNumber":125,"author":{"gitId":"Ongzl"},"content":"        ArrayList\u003cInteger\u003e listOfHits \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-02"},{"lineNumber":126,"author":{"gitId":"Ongzl"},"content":"        for (int i \u003d 0; i \u003c length; i++) { // finding the index of task with keyword input","lastModifiedDate":"2021-09-02"},{"lineNumber":127,"author":{"gitId":"Ongzl"},"content":"            if (list.get(i).getDescription().contains(input)) {","lastModifiedDate":"2021-09-02"},{"lineNumber":128,"author":{"gitId":"Ongzl"},"content":"                listOfHits.add(i);","lastModifiedDate":"2021-09-02"},{"lineNumber":129,"author":{"gitId":"Ongzl"},"content":"            }","lastModifiedDate":"2021-09-02"},{"lineNumber":130,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":131,"author":{"gitId":"Ongzl"},"content":"        if (listOfHits.size() \u003d\u003d 0) { //no matches","lastModifiedDate":"2021-09-02"},{"lineNumber":132,"author":{"gitId":"Ongzl"},"content":"            return \"There are no matching tasks in your list\";","lastModifiedDate":"2021-09-02"},{"lineNumber":133,"author":{"gitId":"Ongzl"},"content":"        } else {","lastModifiedDate":"2021-09-02"},{"lineNumber":134,"author":{"gitId":"Ongzl"},"content":"            StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-09-02"},{"lineNumber":135,"author":{"gitId":"Ongzl"},"content":"            stringBuilder.append(\"Here are the matching tasks in your list: \");","lastModifiedDate":"2021-09-02"},{"lineNumber":136,"author":{"gitId":"Ongzl"},"content":"            for (int i \u003d 0; i \u003c listOfHits.size(); i++) { //print out matches","lastModifiedDate":"2021-09-02"},{"lineNumber":137,"author":{"gitId":"Ongzl"},"content":"                stringBuilder.append((i + 1) + \".\" + list.get(i).toString());","lastModifiedDate":"2021-09-02"},{"lineNumber":138,"author":{"gitId":"Ongzl"},"content":"            }","lastModifiedDate":"2021-09-02"},{"lineNumber":139,"author":{"gitId":"Ongzl"},"content":"            return stringBuilder.toString();","lastModifiedDate":"2021-09-02"},{"lineNumber":140,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":141,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":142,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":143,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":144,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":145,"author":{"gitId":"Ongzl"},"content":"     * Prints out the entire list using the Tasks toString method.","lastModifiedDate":"2021-09-02"},{"lineNumber":146,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":147,"author":{"gitId":"Ongzl"},"content":"    public String show() {","lastModifiedDate":"2021-09-02"},{"lineNumber":148,"author":{"gitId":"Ongzl"},"content":"        int length \u003d list.size();","lastModifiedDate":"2021-09-02"},{"lineNumber":149,"author":{"gitId":"Ongzl"},"content":"        if (length \u003d\u003d 0) {","lastModifiedDate":"2021-09-02"},{"lineNumber":150,"author":{"gitId":"Ongzl"},"content":"            return \"YAY! You have no more tasks left :)\";","lastModifiedDate":"2021-09-02"},{"lineNumber":151,"author":{"gitId":"Ongzl"},"content":"        } else {","lastModifiedDate":"2021-09-02"},{"lineNumber":152,"author":{"gitId":"Ongzl"},"content":"            StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-09-02"},{"lineNumber":153,"author":{"gitId":"Ongzl"},"content":"            for (int i \u003d 1; i \u003c\u003d length; i++) {","lastModifiedDate":"2021-09-02"},{"lineNumber":154,"author":{"gitId":"Ongzl"},"content":"                stringBuilder.append(i + \".\" + list.get(i - 1).toString());","lastModifiedDate":"2021-09-02"},{"lineNumber":155,"author":{"gitId":"Ongzl"},"content":"            }","lastModifiedDate":"2021-09-02"},{"lineNumber":156,"author":{"gitId":"Ongzl"},"content":"            return stringBuilder.toString();","lastModifiedDate":"2021-09-02"},{"lineNumber":157,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":158,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":159,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":160,"author":{"gitId":"Ongzl"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"Ongzl":160}},{"path":"src/main/java/duke/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package duke.util;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":" * Represents the User Interface.","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"public class Ui {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"    //Duke logo","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"    private static final String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"    public Ui() {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"     * Welcome statement for new user.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"    public void welcome() {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Ongzl":23}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"Ongzl":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"Ongzl":19}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"    public void toString_descriptionDeadline_DeadlineStringReturned() throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"        assertEquals(\"[D][ ] do iP (by: 28 Aug 2021 2359)\",","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"                new Deadline(\"do iP\", \"28-8-2021 2359\").toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"    public void deadlineConstructor_invalidTimeFormat_DukeExceptionThrown() {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"            Deadline dl \u003d new Deadline(\"do iP\", \"28-8-2021\");","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Ongzl":24}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"public class ToDoTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"    public void toString_descriptionOfToDo_toDoStringReturned() {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"        assertEquals(\"[T][ ] study\", new ToDo(\"study\").toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Ongzl":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"todo eat lunch","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"deadline finish IP /by 28/8/2021 2359","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"event sleep /at tonight 2359","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"deadline do homework /by 27/08/2021 2359","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"done 3","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"done","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"delete 5","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"delete 4","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"delete 1","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"delete","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"delete 1","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"delete 1","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Ongzl":18}}]
