[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"Project Duke Chatbot will be officially known as Dukebot for short","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"Bluntsord"},"content":"For the current version up til level 10, the bot still has no gui as of yet,","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Bluntsord"},"content":"thus the Duke.java has to be ran. Inputs for the Project Duke chatbot can only","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"Bluntsord"},"content":"be input when the Duke.java script is ran.","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Bluntsord"},"content":"# Dev Guide","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Bluntsord"},"content":"This is the for the current version of Dukebot lvl 1.","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"Bluntsord"},"content":"The below is an attached image of what the architecture of the DukeBot is.","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"Bluntsord"},"content":"![DukeBotWorkFlow](Assets/DukeBotWorkFlow.png)","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"Bluntsord"},"content":"Bot should echo commands of anything entered by the user.","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"### Feature-ABC","lastModifiedDate":"2021-07-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":20,"author":{"gitId":"Bluntsord"},"content":"**Exit**","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"Bluntsord"},"content":": Bot should be able to exit when the user enters the command \"bye\" or \"BYE\"","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"### Feature-XYZ","lastModifiedDate":"2021-07-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Description of the feature.","lastModifiedDate":"2021-07-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"### `Keyword` - Describe action","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Describe the action and its outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"`keyword (optional arguments)`","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Description of the outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2021-07-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"Bluntsord":16,"-":28}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"Bluntsord"},"content":"     * Function starts the process of the dukebot, closes when the \"Bye command is issued\"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"Bluntsord"},"content":"    private static void start() {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Bluntsord"},"content":"        while (true) {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Bluntsord"},"content":"            String command \u003d Presentation.scan();","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Bluntsord"},"content":"            // Check if player has entered a command, returns the command if command is not null or bye","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Bluntsord"},"content":"            if (command.equals(\"bye\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"Bluntsord"},"content":"                System.out.println(\"See ya\");","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"Bluntsord"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"Bluntsord"},"content":"            } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"Bluntsord"},"content":"                System.out.println(\"Pass on to logic stage\");","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"Bluntsord"},"content":"                try {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"Bluntsord"},"content":"                    Logic.process(command);","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"Bluntsord"},"content":"                } catch (InvalidCommandException exception) {","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"Bluntsord"},"content":"                    System.out.println(exception.getMessage());","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"Bluntsord"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"Bluntsord"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"Bluntsord"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"Bluntsord"},"content":"     * Starting point of the dukeBot","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"Bluntsord"},"content":"        System.out.println(\"Hello from\\n\" + logo + \"\\nWhat can I do for you today?\");","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"Bluntsord"},"content":"        start();","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Bluntsord":27,"-":9}},{"path":"src/main/java/EmptyCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bluntsord"},"content":"public class EmptyCommandException extends InvalidCommandException {","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"Bluntsord"},"content":"     * Overridden method from InvalidCommandException. Constructor","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"Bluntsord"},"content":"    public EmptyCommandException() {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Bluntsord"},"content":"        super(\"Input is empty! Please enter something into the chat\");","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Bluntsord"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Bluntsord":9}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bluntsord"},"content":"public class Event extends Task{","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"Bluntsord"},"content":"    public Event(String name) {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"Bluntsord"},"content":"        super(name);","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Bluntsord"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Bluntsord":8}},{"path":"src/main/java/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bluntsord"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"Bluntsord"},"content":"     * Constructor for Invalid Command Exception","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"Bluntsord"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Bluntsord"},"content":"        super(\"Invalid command input. Please enter another input\");","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"Bluntsord"},"content":"     * Overloaded constructor for string inputs","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"Bluntsord"},"content":"     * @param errorMessage","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"Bluntsord"},"content":"    public InvalidCommandException(String errorMessage) {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"Bluntsord"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"Bluntsord"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Bluntsord":17}},{"path":"src/main/java/Logic.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bluntsord"},"content":"import java.util.Locale;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"Bluntsord"},"content":"public class Logic {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"Bluntsord"},"content":"     * The process is the main function to process the parsed string from presentation.","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Bluntsord"},"content":"     * @param command refers to the parsed string. See presentation for parsing","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Bluntsord"},"content":"     * @throws InvalidCommandException is throwed when there is an invalid command in the form of a string","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Bluntsord"},"content":"    public static void process(String command) throws InvalidCommandException{","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"Bluntsord"},"content":"        System.out.println(\"Process logic called\");","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"Bluntsord"},"content":"        //Logic to check each individual commands, checks for special commands first, then checks for other input","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"Bluntsord"},"content":"        if (command.equals(\"\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"Bluntsord"},"content":"            throw new EmptyCommandException();","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"Bluntsord"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"Bluntsord"},"content":"            String[] listOfCommandInputs \u003d command.split(\" \");","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"Bluntsord"},"content":"            String actionCommand \u003d listOfCommandInputs[0].toLowerCase();","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"Bluntsord"},"content":"            System.out.println(\"Passed on to persistence stage\");","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"Bluntsord"},"content":"            if (actionCommand.equals(\"list\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"Bluntsord"},"content":"                Persistence.printLog();","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"Bluntsord"},"content":"            } else if (actionCommand.equals(\"done\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"Bluntsord"},"content":"                int pos \u003d Integer.parseInt(listOfCommandInputs[1]);","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"Bluntsord"},"content":"                if (pos \u003e Task.getNumberOfTask()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"Bluntsord"},"content":"                    throw new InvalidCommandException();","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"Bluntsord"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"Bluntsord"},"content":"                Task currentTask \u003d Persistence.getTask(pos - 1 );","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"Bluntsord"},"content":"                currentTask.completeTask();","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"Bluntsord"},"content":"                System.out.println(\"Ohhhh myyyy. I have been waiting for this quest to complete for ages.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"Bluntsord"},"content":"            } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"Bluntsord"},"content":"                Persistence.addToLog(new Task(command));","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"Bluntsord"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"Bluntsord"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"Bluntsord"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Bluntsord":35}},{"path":"src/main/java/Persistence.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bluntsord"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"Bluntsord"},"content":"import java.io.OutputStreamWriter;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"Bluntsord"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Bluntsord"},"content":"import java.util.List;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Bluntsord"},"content":"public class Persistence {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Bluntsord"},"content":"     * In memory storage for log, for history, refer to the history variable","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"Bluntsord"},"content":"    private static ArrayList\u003cTask\u003e log \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"Bluntsord"},"content":"     * Adds the command to the log.","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"Bluntsord"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"Bluntsord"},"content":"     * @param task Command to be added to the log","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"Bluntsord"},"content":"    public static void addToLog(Task task) {","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"Bluntsord"},"content":"        log.add(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"Bluntsord"},"content":"     * Returns the task at the specific log postion","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"Bluntsord"},"content":"     * @param position","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"Bluntsord"},"content":"     * @return Task","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"Bluntsord"},"content":"    public static Task getTask(int position) {","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"Bluntsord"},"content":"        return log.get(position);","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"Bluntsord"},"content":"     * Prints log of tasks. No parameters needed. To change task representation, see Task.","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"Bluntsord"},"content":"    public static void printLog() {","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"Bluntsord"},"content":"        for (int i \u003d 0; i \u003c log.size(); i++) {","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"Bluntsord"},"content":"            Task currentTask \u003d log.get(i);","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"Bluntsord"},"content":"            int taskNumber \u003d i + 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"Bluntsord"},"content":"            System.out.println(taskNumber + \". \" + currentTask.toString());","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"Bluntsord"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"Bluntsord"},"content":"     * Prints a log of tasks that are filtered. True for completed and False for not completed","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"Bluntsord"},"content":"    public static void print_filtered_log(boolean cond) {","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"Bluntsord"},"content":"        int taskNumber \u003d 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"Bluntsord"},"content":"        for (Task temp : log) {","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"Bluntsord"},"content":"            if (temp.getCompletedStatus() \u003d\u003d cond) {","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"Bluntsord"},"content":"                System.out.println(taskNumber + \". \" + temp.toString());","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"Bluntsord"},"content":"                taskNumber ++;","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"Bluntsord"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"Bluntsord"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"Bluntsord"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Bluntsord":55}},{"path":"src/main/java/Presentation.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bluntsord"},"content":"import java.io.BufferedInputStream;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"Bluntsord"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"Bluntsord"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"Bluntsord"},"content":"public class Presentation {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Bluntsord"},"content":"    private static BufferedReader reader \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Bluntsord"},"content":"     * Used to scan and parse the commands entered by the user","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"Bluntsord"},"content":"     * @return the command as one string","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"Bluntsord"},"content":"    public static String scan() {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"Bluntsord"},"content":"        String command \u003d new String();","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"Bluntsord"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"Bluntsord"},"content":"            command \u003d reader.readLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"Bluntsord"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"Bluntsord"},"content":"            exception.printStackTrace();","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"Bluntsord"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"Bluntsord"},"content":"        return command;","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"Bluntsord"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Bluntsord":22}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bluntsord"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"Bluntsord"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Bluntsord"},"content":"    private boolean completedStatus \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"Bluntsord"},"content":"    private String name;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Bluntsord"},"content":"    private int taskNumber;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Bluntsord"},"content":"    private static int numberOfTask \u003d 0;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"Bluntsord"},"content":"    public Task(String name) {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"Bluntsord"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"Bluntsord"},"content":"        numberOfTask +\u003d 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"Bluntsord"},"content":"        this.taskNumber \u003d numberOfTask;","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"Bluntsord"},"content":"    public void completeTask() {","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"Bluntsord"},"content":"        this.completedStatus \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"Bluntsord"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"Bluntsord"},"content":"        String status;","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"Bluntsord"},"content":"        if (completedStatus) {","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"Bluntsord"},"content":"            status \u003d \"[✓] \";","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"Bluntsord"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"Bluntsord"},"content":"            status \u003d \"[X] \";","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"Bluntsord"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"Bluntsord"},"content":"       return status + name;","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"Bluntsord"},"content":"    public boolean getCompletedStatus() {","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"Bluntsord"},"content":"        return this.completedStatus;","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"Bluntsord"},"content":"    public static int getNumberOfTask() {","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"Bluntsord"},"content":"        return numberOfTask;","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"Bluntsord"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Bluntsord":38}}]
