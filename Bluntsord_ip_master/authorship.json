[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"Project Duke Chatbot will be officially known as Dukebot for short","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"Bluntsord"},"content":"For the current version up til level 10, the bot still has no gui as of yet,","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Bluntsord"},"content":"thus the Duke.java has to be ran. Inputs for the Project Duke chatbot can only","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"Bluntsord"},"content":"be input when the Duke.java script is ran.","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Bluntsord"},"content":"# Dev Guide","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Bluntsord"},"content":"This is the for the current version of Dukebot lvl 1.","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"Bluntsord"},"content":"The below is an attached image of what the architecture of the DukeBot is.","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"Bluntsord"},"content":"![DukeBotWorkFlow](Assets/DukeBotWorkFlow.png)","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"Bluntsord"},"content":"Bot should echo commands of anything entered by the user.","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"### Feature-ABC","lastModifiedDate":"2021-07-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":20,"author":{"gitId":"Bluntsord"},"content":"**Exit**","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"Bluntsord"},"content":": Bot should be able to exit when the user enters the command \"bye\" or \"BYE\"","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"### Feature-XYZ","lastModifiedDate":"2021-07-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Description of the feature.","lastModifiedDate":"2021-07-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"### `Keyword` - Describe action","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Describe the action and its outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"`keyword (optional arguments)`","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Description of the outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2021-07-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"Bluntsord":16,"-":28}},{"path":"src/main/java/BotReplies.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bluntsord"},"content":"public class BotReplies {","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"Bluntsord"},"content":"   public enum Greetings {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"Bluntsord"},"content":"   }","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"Bluntsord"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Bluntsord":6}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bluntsord"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"Bluntsord"},"content":"public class Command {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"Bluntsord"},"content":"    private Task.TaskType taskType;","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"Bluntsord"},"content":"    private ArrayList\u003cString\u003e listOfCommandInputs;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"Bluntsord"},"content":"    private String log;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"Bluntsord"},"content":"     * Constructor for packaged command made by parser","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"Bluntsord"},"content":"     * @param taskType Task type","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"Bluntsord"},"content":"     * @param listOfCommandInputs The entire input entered by the user","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"Bluntsord"},"content":"     * @param log The logged statement. Used to update log since there are keywords that are not supposed to","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"Bluntsord"},"content":"     *            appear in the log statement","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"Bluntsord"},"content":"    public Command(Task.TaskType taskType, ArrayList\u003cString\u003e listOfCommandInputs, String log) {","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"Bluntsord"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"Bluntsord"},"content":"        this.listOfCommandInputs \u003d listOfCommandInputs;","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"Bluntsord"},"content":"        this.log \u003d log;","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"Bluntsord"},"content":"     * Returns tasktype","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"Bluntsord"},"content":"     * @return Task type. Made task type into an enum for ease","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"Bluntsord"},"content":"    public Task.TaskType getTaskType() {","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"Bluntsord"},"content":"        return this.taskType;","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"Bluntsord"},"content":"     * Returns list of command inputs","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"Bluntsord"},"content":"     * @return ArrayList of strings, split by \" \". Makes it easier to access individual words","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"Bluntsord"},"content":"    public ArrayList\u003cString\u003e getListOfCommandInputs() {","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"Bluntsord"},"content":"        return this.listOfCommandInputs;","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"Bluntsord"},"content":"     * Returns log statement","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"Bluntsord"},"content":"     * @return String for logging later","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"Bluntsord"},"content":"    public String getLog() {","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"Bluntsord"},"content":"        return this.log;","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"Bluntsord"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Bluntsord":45}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bluntsord"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"Bluntsord"},"content":"    private String deadline;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"Bluntsord"},"content":"     * Constructor for Deadline task","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"Bluntsord"},"content":"     * @param name name of task","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"Bluntsord"},"content":"     * @param deadline Use to indicate the deadline of the task","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"Bluntsord"},"content":"    public Deadline(String name, String deadline) {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"Bluntsord"},"content":"           super(name);","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"Bluntsord"},"content":"           this.deadline \u003d deadline;","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"Bluntsord"},"content":"     * String representation of the Deadline class","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"Bluntsord"},"content":"     * @return String. See above","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"Bluntsord"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"Bluntsord"},"content":"        return \"[D]\" + super.toString() + String.format(\" (by: %s)\", deadline);","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"Bluntsord"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Bluntsord":23}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"Bluntsord"},"content":"     * Function starts the process of the dukebot, closes when the \"Bye command is issued\"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"Bluntsord"},"content":"    private static void start() {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Bluntsord"},"content":"        while (true) {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Bluntsord"},"content":"            String command \u003d Presentation.scan();","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Bluntsord"},"content":"            // Check if player has entered a command, returns the command if command is not null or bye","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Bluntsord"},"content":"            if (command.equals(\"bye\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"Bluntsord"},"content":"                System.out.println(\"See ya\");","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"Bluntsord"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"Bluntsord"},"content":"            } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"Bluntsord"},"content":"                try {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"Bluntsord"},"content":"                    Logic.process(command);","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"Bluntsord"},"content":"                } catch (InvalidCommandException exception) {","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"Bluntsord"},"content":"                    System.out.println(exception.getMessage());","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"Bluntsord"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"Bluntsord"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"Bluntsord"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"Bluntsord"},"content":"     * Starting point of the dukeBot","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"Bluntsord"},"content":"        System.out.println(\"Hello from\\n\" + logo + \"\\nWhat can I do for you today?\");","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"Bluntsord"},"content":"        start();","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Bluntsord":26,"-":9}},{"path":"src/main/java/EmptyCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bluntsord"},"content":"public class EmptyCommandException extends InvalidCommandException {","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"Bluntsord"},"content":"     * Overridden method from InvalidCommandException. Constructor","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"Bluntsord"},"content":"    public EmptyCommandException() {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Bluntsord"},"content":"        super(\"Input is empty! Please enter something into the chat\");","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Bluntsord"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Bluntsord":9}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bluntsord"},"content":"public class Event extends Task{","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"Bluntsord"},"content":"    private String date;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"Bluntsord"},"content":"    private String time;","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"Bluntsord"},"content":"     * Constructor for event class","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"Bluntsord"},"content":"     * @param name Name for the event","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"Bluntsord"},"content":"     * @param date date the event is held","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"Bluntsord"},"content":"     * @param time time the event is held","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"Bluntsord"},"content":"    public Event(String name, String date, String time) {","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"Bluntsord"},"content":"        super(name);","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"Bluntsord"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"Bluntsord"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"Bluntsord"},"content":"     * String representation of the event class","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"Bluntsord"},"content":"     * @return String. See above.","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"Bluntsord"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"Bluntsord"},"content":"        return \"[E]\" + super.toString() + String.format(\" (at: %s %s)\", this.date, this.time);","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"Bluntsord"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Bluntsord":25}},{"path":"src/main/java/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bluntsord"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"Bluntsord"},"content":"     * Constructor for Invalid Command Exception","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"Bluntsord"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Bluntsord"},"content":"        super(\"Invalid command input. Please enter another input\");","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"Bluntsord"},"content":"     * Overloaded constructor for string inputs","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"Bluntsord"},"content":"     * @param errorMessage","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"Bluntsord"},"content":"    public InvalidCommandException(String errorMessage) {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"Bluntsord"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"Bluntsord"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Bluntsord":17}},{"path":"src/main/java/Logic.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bluntsord"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"import java.util.Locale;","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"Bluntsord"},"content":"public class Logic {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Bluntsord"},"content":"     * The process is the main function to process the parsed string from presentation.","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Bluntsord"},"content":"     * @param command refers to the parsed string. See presentation for parsing","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Bluntsord"},"content":"     * @throws InvalidCommandException is throwed when there is an invalid command in the form of a string","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"Bluntsord"},"content":"    public static void process(String command) throws InvalidCommandException{","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"Bluntsord"},"content":"        //Logic to check each individual commands, checks for special commands first, then checks for other input","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"Bluntsord"},"content":"        //Use Parser to package command into a packaged command","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"Bluntsord"},"content":"        Command packagedCommand \u003d Parser.parse(command);","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"Bluntsord"},"content":"        ArrayList\u003cString\u003e listOfCommandInputs \u003d packagedCommand.getListOfCommandInputs();","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"Bluntsord"},"content":"        String loggedCommand \u003d packagedCommand.getLog();","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"Bluntsord"},"content":"        if (command.equals(\"\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"Bluntsord"},"content":"            throw new EmptyCommandException();","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"Bluntsord"},"content":"        } else if (listOfCommandInputs.size() \u003d\u003d 1 \u0026\u0026 listOfCommandInputs.get(0).equals(\"list\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"Bluntsord"},"content":"            Persistence.printLog();","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"Bluntsord"},"content":"        } else if (listOfCommandInputs.contains(\"delete\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"Bluntsord"},"content":"            int position \u003d Integer.parseInt(listOfCommandInputs.get(listOfCommandInputs.indexOf(\"delete\") + 1));","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"Bluntsord"},"content":"            try {","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"Bluntsord"},"content":"                Persistence.delete(position);","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"Bluntsord"},"content":"            } catch (IndexOutOfBoundsException exception) {","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"Bluntsord"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"Bluntsord"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"Bluntsord"},"content":"        } else if (listOfCommandInputs.contains(\"done\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"Bluntsord"},"content":"            int pos \u003d Integer.parseInt(listOfCommandInputs.get(1));","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"Bluntsord"},"content":"            if (pos \u003e Task.getNumberOfTask()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"Bluntsord"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"Bluntsord"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"Bluntsord"},"content":"            Task currentTask \u003d Persistence.getTask(pos - 1 );","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"Bluntsord"},"content":"            currentTask.completeTask();","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"Bluntsord"},"content":"            System.out.println(\"Ohhhh myyyy. I have been waiting for this quest to complete for ages.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"Bluntsord"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"Bluntsord"},"content":"            switch (packagedCommand.getTaskType()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"Bluntsord"},"content":"                case TODO:","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"Bluntsord"},"content":"                    Persistence.addToLog(new Todo(loggedCommand));","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"Bluntsord"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"Bluntsord"},"content":"                case DEADLINE:","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"Bluntsord"},"content":"                    int indicatorDeadline \u003d listOfCommandInputs.indexOf(\"/by\");","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"Bluntsord"},"content":"                    String tempDeadline \u003d new String();","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"Bluntsord"},"content":"                    String deadline \u003d listOfCommandInputs.get(indicatorDeadline + 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"Bluntsord"},"content":"                    for (int i \u003d 0; i \u003c indicatorDeadline; i++) {","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"Bluntsord"},"content":"                        tempDeadline \u003d tempDeadline + listOfCommandInputs.get(i);","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"Bluntsord"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"Bluntsord"},"content":"                    Persistence.addToLog(new Deadline(tempDeadline, deadline));","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"Bluntsord"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"Bluntsord"},"content":"                case EVENT:","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"Bluntsord"},"content":"                    int indicatorEvent \u003d listOfCommandInputs.indexOf(\"/at\");","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"Bluntsord"},"content":"                    String date \u003d listOfCommandInputs.get(indicatorEvent + 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"Bluntsord"},"content":"                    String time \u003d listOfCommandInputs.get(indicatorEvent + 2);","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"Bluntsord"},"content":"                    String temp \u003d new String();","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"Bluntsord"},"content":"                    for (int i \u003d 0; i \u003c indicatorEvent; i++) {","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"Bluntsord"},"content":"                        temp \u003d temp + listOfCommandInputs.get(i);","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"Bluntsord"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"Bluntsord"},"content":"                    Persistence.addToLog(new Event(temp, date, time));","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"Bluntsord"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"Bluntsord"},"content":"                case NOTAPPLICABLE:","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"Bluntsord"},"content":"                    //For echoing commands","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"Bluntsord"},"content":"                    throw new InvalidCommandException();","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"Bluntsord"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"Bluntsord"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"Bluntsord"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Bluntsord":70}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bluntsord"},"content":"import java.util.*;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"Bluntsord"},"content":"public class Parser {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"Bluntsord"},"content":"     * Function that handles all the parsing of the Parser system","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"Bluntsord"},"content":"     * @param command Refers to the entire line of strings the user entered. The line is then process here","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"Bluntsord"},"content":"     *                and packaged into Command. See Command for more.","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"Bluntsord"},"content":"     * @return A packaged command for ease of access of infomation","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"Bluntsord"},"content":"    public static Command parse(String command) {","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"Bluntsord"},"content":"        //Remove TaskType from the command first","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"Bluntsord"},"content":"        Task.TaskType taskType \u003d Task.TaskType.NOTAPPLICABLE;","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"Bluntsord"},"content":"        String stringTaskType \u003d new String();","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"Bluntsord"},"content":"        if (command.contains(\"todo \")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"Bluntsord"},"content":"            taskType \u003d Task.TaskType.TODO;","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"Bluntsord"},"content":"            stringTaskType \u003d \"todo\";","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"Bluntsord"},"content":"        } else if (command.contains(\"deadline \")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"Bluntsord"},"content":"            taskType \u003d Task.TaskType.DEADLINE;","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"Bluntsord"},"content":"            stringTaskType \u003d \"deadline \";","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"Bluntsord"},"content":"        } else if (command.contains(\"event\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"Bluntsord"},"content":"            taskType \u003d Task.TaskType.EVENT;","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"Bluntsord"},"content":"            stringTaskType \u003d \"event\";","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"Bluntsord"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"Bluntsord"},"content":"        //command \u003d command.replaceAll(stringTaskType, \"\");","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"Bluntsord"},"content":"        //Split the list of commands","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"Bluntsord"},"content":"        Command packagedCommand;","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"Bluntsord"},"content":"        ArrayList\u003cString\u003e listOfCommandInputs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"Bluntsord"},"content":"        Collections.addAll(listOfCommandInputs,command.split(\" \"));","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"Bluntsord"},"content":"        if (listOfCommandInputs.contains(stringTaskType)) {","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"Bluntsord"},"content":"            int redundantIndicator \u003d listOfCommandInputs.indexOf(stringTaskType);","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"Bluntsord"},"content":"            for (int i \u003d 0; i \u003c\u003d redundantIndicator; i++) {","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"Bluntsord"},"content":"                listOfCommandInputs.remove(0);","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"Bluntsord"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"Bluntsord"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"Bluntsord"},"content":"        String tempCommand \u003d new String();","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"Bluntsord"},"content":"        for (String commandsLeft: listOfCommandInputs) {","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"Bluntsord"},"content":"            commandsLeft +\u003d \" \";","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"Bluntsord"},"content":"            tempCommand +\u003d commandsLeft;","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"Bluntsord"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"Bluntsord"},"content":"        packagedCommand \u003d new Command(taskType, listOfCommandInputs, tempCommand);","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"Bluntsord"},"content":"        return packagedCommand;","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"Bluntsord"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Bluntsord":47}},{"path":"src/main/java/Persistence.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bluntsord"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"Bluntsord"},"content":"import java.io.OutputStreamWriter;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"Bluntsord"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Bluntsord"},"content":"import java.util.List;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Bluntsord"},"content":"public class Persistence {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Bluntsord"},"content":"     * In memory storage for log, for history, refer to the history variable","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"Bluntsord"},"content":"    private static ArrayList\u003cTask\u003e log \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"Bluntsord"},"content":"     * Adds the command to the log.","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"Bluntsord"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"Bluntsord"},"content":"     * @param task Command to be added to the log","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"Bluntsord"},"content":"    public static void addToLog(Task task) {","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"Bluntsord"},"content":"        log.add(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"Bluntsord"},"content":"     * Returns the task at the specific log postion","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"Bluntsord"},"content":"     * @param position","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"Bluntsord"},"content":"     * @return Task","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"Bluntsord"},"content":"    public static Task getTask(int position) {","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"Bluntsord"},"content":"        return log.get(position);","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"Bluntsord"},"content":"     * Prints log of tasks. No parameters needed. To change task representation, see Task.","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"Bluntsord"},"content":"    public static void printLog() {","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"Bluntsord"},"content":"        System.out.println(\"Here are your tasks summoner. Please do complete them as fast as possible. I have\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"Bluntsord"},"content":"                \"been waiting for so many others for countless of centuries. Perhaps I am just an npc\");","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"Bluntsord"},"content":"        for (int i \u003d 0; i \u003c log.size(); i++) {","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"Bluntsord"},"content":"            Task currentTask \u003d log.get(i);","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"Bluntsord"},"content":"            int taskNumber \u003d i + 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"Bluntsord"},"content":"            System.out.println(taskNumber + \". \" + currentTask.toString());","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"Bluntsord"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"Bluntsord"},"content":"     * Prints a log of tasks that are filtered. True for completed and False for not completed","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"Bluntsord"},"content":"    public static void print_filtered_log(boolean cond) {","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"Bluntsord"},"content":"        int taskNumber \u003d 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"Bluntsord"},"content":"        for (Task temp : log) {","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"Bluntsord"},"content":"            if (temp.getCompletedStatus() \u003d\u003d cond) {","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"Bluntsord"},"content":"                System.out.println(taskNumber + \". \" + temp.toString());","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"Bluntsord"},"content":"                taskNumber ++;","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"Bluntsord"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"Bluntsord"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"Bluntsord"},"content":"    public static void delete(int position) throws IndexOutOfBoundsException {","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"Bluntsord"},"content":"        if (position \u003d\u003d 0) {","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"Bluntsord"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"Bluntsord"},"content":"        };","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"Bluntsord"},"content":"        log.remove(position - 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"Bluntsord"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Bluntsord":64}},{"path":"src/main/java/Presentation.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bluntsord"},"content":"import java.io.BufferedInputStream;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"Bluntsord"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"Bluntsord"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"Bluntsord"},"content":"public class Presentation {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Bluntsord"},"content":"    private static BufferedReader reader \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Bluntsord"},"content":"     * Used to scan and parse the commands entered by the user","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"Bluntsord"},"content":"     * @return the command as one string","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"Bluntsord"},"content":"    public static String scan() {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"Bluntsord"},"content":"        String command \u003d new String();","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"Bluntsord"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"Bluntsord"},"content":"            command \u003d reader.readLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"Bluntsord"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"Bluntsord"},"content":"            exception.printStackTrace();","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"Bluntsord"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"Bluntsord"},"content":"        return command;","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"Bluntsord"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Bluntsord":22}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bluntsord"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"Bluntsord"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Bluntsord"},"content":"    private boolean completedStatus \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"Bluntsord"},"content":"    private String name;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Bluntsord"},"content":"    private int taskNumber;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Bluntsord"},"content":"    private static int numberOfTask \u003d 0;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"Bluntsord"},"content":"     * Task type enum","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"Bluntsord"},"content":"    public enum TaskType {","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"Bluntsord"},"content":"        TODO,","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"Bluntsord"},"content":"        DEADLINE,","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"Bluntsord"},"content":"        EVENT,","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"Bluntsord"},"content":"        NOTAPPLICABLE","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"Bluntsord"},"content":"     * Constructor for task type","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"Bluntsord"},"content":"     * @param name name of task","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"Bluntsord"},"content":"    public Task(String name) {","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"Bluntsord"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"Bluntsord"},"content":"        numberOfTask +\u003d 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"Bluntsord"},"content":"        this.taskNumber \u003d numberOfTask;","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"Bluntsord"},"content":"     *  Function used to make a task complete","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"Bluntsord"},"content":"    public void completeTask() {","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"Bluntsord"},"content":"        this.completedStatus \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"Bluntsord"},"content":"     * String representation of task.","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"Bluntsord"},"content":"     * @return String. See above","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"Bluntsord"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"Bluntsord"},"content":"        String status;","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"Bluntsord"},"content":"        if (completedStatus) {","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"Bluntsord"},"content":"            status \u003d \"[✓] \";","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"Bluntsord"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"Bluntsord"},"content":"            status \u003d \"[X] \";","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"Bluntsord"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"Bluntsord"},"content":"       return status + name;","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"Bluntsord"},"content":"     * Getter for the completion status of a task","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"Bluntsord"},"content":"     * @return","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"Bluntsord"},"content":"    public boolean getCompletedStatus() {","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"Bluntsord"},"content":"        return this.completedStatus;","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"Bluntsord"},"content":"     * Getter for the total number of task","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"Bluntsord"},"content":"     * @return","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"Bluntsord"},"content":"    public static int getNumberOfTask() {","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"Bluntsord"},"content":"        return numberOfTask;","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"Bluntsord"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Bluntsord":66}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bluntsord"},"content":"public class Todo extends Task{","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"Bluntsord"},"content":"     * Constructor for todo class","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"Bluntsord"},"content":"     * @param name","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"Bluntsord"},"content":"    public Todo(String name) {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"Bluntsord"},"content":"        super(name);","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"Bluntsord"},"content":"     * String representation of the todo class","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"Bluntsord"},"content":"     * @return String. See above.","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"Bluntsord"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"Bluntsord"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"Bluntsord"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Bluntsord":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Bluntsord"},"content":"add todo one","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"add todo two","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"Bluntsord"},"content":"add todo three","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"Bluntsord"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"Bluntsord"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"Bluntsord"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"Bluntsord"},"content":"done 3","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"Bluntsord"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"Bluntsord"},"content":"deadline one /by Sunday","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"Bluntsord"},"content":"deadline two /by Monday","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"Bluntsord"},"content":"deadline three /by Tuesday","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"Bluntsord"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"Bluntsord"},"content":"done 4","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"Bluntsord"},"content":"done 5","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"Bluntsord"},"content":"done 6","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"Bluntsord"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"Bluntsord"},"content":"event one /at Mon 2-4pm","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"Bluntsord"},"content":"event two /at Tues 2-4pm","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"Bluntsord"},"content":"event three /at Wed 2-4pm","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"Bluntsord"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"Bluntsord"},"content":"done 7","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"Bluntsord"},"content":"done 8","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"Bluntsord"},"content":"done 9","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"Bluntsord"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"Bluntsord"},"content":"delete 10","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"Bluntsord"},"content":"delete 9","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"Bluntsord"},"content":"delete 8","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"Bluntsord"},"content":"delete 7","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"Bluntsord"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"Bluntsord"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Bluntsord":30}}]
