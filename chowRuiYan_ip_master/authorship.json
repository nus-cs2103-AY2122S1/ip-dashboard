[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"chowRuiYan"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"chowRuiYan":16,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"### Types of Task","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"- Todo","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"- Deadline","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":"- Event","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"### Adding tasks","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":"Allows user to add different tasks.","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"### Completing tasks","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"Allows user to mark task as completed.","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"### Deleting tasks","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"Allows user to delete task.","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"### Finding tasks","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"Allows user to find task.","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"### Displaying tasks","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"Allows user to see all recorded tasks.","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":"### `Add` - Adds tasks","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"There are three different types of tasks and each has its own format when adding these tasks. To add the respective tasks,","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"please follow these format:","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"#### Todo:","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"`todo \u003ctask_description\u003e`","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"chowRuiYan"},"content":"Expected outcome:","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"chowRuiYan"},"content":"A `Todo` task named `\u003ctask_description\u003e` will be added.","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"chowRuiYan"},"content":"#### Deadline:","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"chowRuiYan"},"content":"`deadline \u003ctask_description\u003e /by \u003cdate_and_time\u003e`","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"chowRuiYan"},"content":"Expected outcome:","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"chowRuiYan"},"content":"A `Deadline` task named `\u003ctask_description\u003e` with deadline `date_and_time` will be added.","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"chowRuiYan"},"content":"#### Event:","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"chowRuiYan"},"content":"`event \u003ctask_description\u003e /at \u003cdate_and_time\u003e`","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"chowRuiYan"},"content":"Expected outcome:","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"chowRuiYan"},"content":"A `Event` task named `\u003ctask_description\u003e` at `date_and_time` will be added.","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"chowRuiYan"},"content":"### `Done` - Marks task as done","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"chowRuiYan"},"content":"To mark the specific task as done, please follow this format:","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"chowRuiYan"},"content":"#### Done","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"chowRuiYan"},"content":"`done \u003ctask_number\u003e`","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":62,"author":{"gitId":"chowRuiYan"},"content":"The task with the specific `\u003ctask_number\u003e` will be marked as done, as indicated by a [x] beside the task description.","lastModifiedDate":"2021-09-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":64,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":65,"author":{"gitId":"chowRuiYan"},"content":"### `Delete` - Deletes a task from the list","lastModifiedDate":"2021-09-11"},{"lineNumber":66,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"chowRuiYan"},"content":"To delete a specific task from the list, please follow this format:","lastModifiedDate":"2021-09-11"},{"lineNumber":68,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":69,"author":{"gitId":"chowRuiYan"},"content":"#### Delete","lastModifiedDate":"2021-09-11"},{"lineNumber":70,"author":{"gitId":"chowRuiYan"},"content":"`delete \u003ctask_number\u003e`","lastModifiedDate":"2021-09-11"},{"lineNumber":71,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":72,"author":{"gitId":"chowRuiYan"},"content":"Expected outcome:","lastModifiedDate":"2021-09-11"},{"lineNumber":73,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":74,"author":{"gitId":"chowRuiYan"},"content":"The task with the specific `\u003ctask_number\u003e` will be deleted.","lastModifiedDate":"2021-09-11"},{"lineNumber":75,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":76,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":77,"author":{"gitId":"chowRuiYan"},"content":"### `Find` - Finds a task","lastModifiedDate":"2021-09-11"},{"lineNumber":78,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":79,"author":{"gitId":"chowRuiYan"},"content":"To find tasks using a specific keyword, please follow this format:","lastModifiedDate":"2021-09-11"},{"lineNumber":80,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":81,"author":{"gitId":"chowRuiYan"},"content":"#### Find","lastModifiedDate":"2021-09-11"},{"lineNumber":82,"author":{"gitId":"chowRuiYan"},"content":"`Find \u003ckeyword\u003e`","lastModifiedDate":"2021-09-11"},{"lineNumber":83,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":84,"author":{"gitId":"chowRuiYan"},"content":"Expected outcome:","lastModifiedDate":"2021-09-11"},{"lineNumber":85,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":86,"author":{"gitId":"chowRuiYan"},"content":"Task(s) with `\u003ckeyword\u003e` will be found and displayed.","lastModifiedDate":"2021-09-11"},{"lineNumber":87,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":88,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":89,"author":{"gitId":"chowRuiYan"},"content":"### `List` - Displays all the tasks","lastModifiedDate":"2021-09-11"},{"lineNumber":90,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":91,"author":{"gitId":"chowRuiYan"},"content":"To view all the tasks, please follow this format:","lastModifiedDate":"2021-09-11"},{"lineNumber":92,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":93,"author":{"gitId":"chowRuiYan"},"content":"#### List","lastModifiedDate":"2021-09-11"},{"lineNumber":94,"author":{"gitId":"chowRuiYan"},"content":"`list`","lastModifiedDate":"2021-09-11"},{"lineNumber":95,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":96,"author":{"gitId":"chowRuiYan"},"content":"Expected outcome:","lastModifiedDate":"2021-09-11"},{"lineNumber":97,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":98,"author":{"gitId":"chowRuiYan"},"content":"All the tasks will be displayed.","lastModifiedDate":"2021-09-11"},{"lineNumber":99,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":100,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":101,"author":{"gitId":"chowRuiYan"},"content":"### `Bye` - Saves the current tasks and exit","lastModifiedDate":"2021-09-11"},{"lineNumber":102,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":103,"author":{"gitId":"chowRuiYan"},"content":"To save all the current tasks and exit, please follow this format:","lastModifiedDate":"2021-09-11"},{"lineNumber":104,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":105,"author":{"gitId":"chowRuiYan"},"content":"#### Bye","lastModifiedDate":"2021-09-11"},{"lineNumber":106,"author":{"gitId":"chowRuiYan"},"content":"`bye`","lastModifiedDate":"2021-09-11"},{"lineNumber":107,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":108,"author":{"gitId":"chowRuiYan"},"content":"Expected outcome:","lastModifiedDate":"2021-09-11"},{"lineNumber":109,"author":{"gitId":"chowRuiYan"},"content":"Current tasks will be saved and exits. Saved tasks will be displayed when `Duke` is run.","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"chowRuiYan":93,"-":16}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chowRuiYan"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"import duke.ui.Gui;","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":" * This is Duke, a program that serves as a ToDo-List.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"    private final Storage storage;","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"    private final Ui ui;","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"     * Constructor for Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"     * Used to initialise Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":"     * @param filePath String representation of the path where Duke will be run from.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"            taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"chowRuiYan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"chowRuiYan"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"chowRuiYan"},"content":"     * Returns the start-up message.","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"chowRuiYan"},"content":"     * If there is saved tasks, display the tasks. Otherwise, start a new ToDo List.","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"chowRuiYan"},"content":"     * @return the start-up message.","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"chowRuiYan"},"content":"    public String startUp() {","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"chowRuiYan"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"chowRuiYan"},"content":"            return ui.greetNewUser();","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"chowRuiYan"},"content":"        } else {","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"chowRuiYan"},"content":"            return ui.greetExistingUser(taskList);","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"chowRuiYan"},"content":"    public String getResponse(String input) throws DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"chowRuiYan"},"content":"        return run(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"chowRuiYan"},"content":"     * Runs the command given by the user.","lastModifiedDate":"2021-09-03"},{"lineNumber":56,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":57,"author":{"gitId":"chowRuiYan"},"content":"     * @return String representation of the program\u0027s respond to the given command.","lastModifiedDate":"2021-09-03"},{"lineNumber":58,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"chowRuiYan"},"content":"    public String run(String input) throws DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"chowRuiYan"},"content":"        Command c \u003d Parser.parse(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"chowRuiYan"},"content":"        return c.execute(taskList, ui, storage);","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":63,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":64,"author":{"gitId":"chowRuiYan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-15"},{"lineNumber":65,"author":{"gitId":"chowRuiYan"},"content":"        Application.launch(Gui.class, args);","lastModifiedDate":"2021-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"chowRuiYan":64,"-":3}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chowRuiYan"},"content":"package duke.command;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":" * Deals with the Command given by user and implement the corresponding actions.","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"     * Indicates the actions taken for different command.","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"     * @param taskList The TaskList that is saved in Duke.","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"     * @param ui The Ui of Duke.","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"     * @param storage The Storage of Duke.","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"    public abstract String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"     * Returns if the current command is an exit command.","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":"     * @return If current command is an exit command.","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"        return false;","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"chowRuiYan":29}},{"path":"src/main/java/duke/command/CommandAdd.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chowRuiYan"},"content":"package duke.command;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":" * Handles the adding of new task into Duke.","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"public class CommandAdd extends Command {","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"     * Contains the String representation of task description","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"    private final String[] input;","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"     * Contains the int representation of task type","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"    private final int taskType;","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"     * Constructor for the AddCommand.","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"     * @param input The String representation of task description.","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"     * @param type  The type of task.","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"    public CommandAdd(int type, String... input) {","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"chowRuiYan"},"content":"        this.taskType \u003d type;","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"chowRuiYan"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"chowRuiYan"},"content":"     * Adds the corresponding task into Duke.","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"chowRuiYan"},"content":"     * @param taskList The TaskList that is saved in Duke.","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"chowRuiYan"},"content":"     * @param ui       The Ui of Duke.","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"chowRuiYan"},"content":"     * @param storage  The Storage of Duke.","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"chowRuiYan"},"content":"     * @return String from UI.","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"chowRuiYan"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"chowRuiYan"},"content":"        Task task \u003d taskList.add(taskType, input);","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"chowRuiYan"},"content":"        return ui.displayAddUi(taskList, task);","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":50,"author":{"gitId":"chowRuiYan"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-09-03"},{"lineNumber":51,"author":{"gitId":"chowRuiYan"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"chowRuiYan"},"content":"            return true;","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":54,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":55,"author":{"gitId":"chowRuiYan"},"content":"        if (obj instanceof CommandAdd) {","lastModifiedDate":"2021-09-03"},{"lineNumber":56,"author":{"gitId":"chowRuiYan"},"content":"            CommandAdd o \u003d (CommandAdd) obj;","lastModifiedDate":"2021-09-03"},{"lineNumber":57,"author":{"gitId":"chowRuiYan"},"content":"            return this.taskType \u003d\u003d o.taskType \u0026\u0026 Arrays.equals(this.input, o.input);","lastModifiedDate":"2021-09-03"},{"lineNumber":58,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":59,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":60,"author":{"gitId":"chowRuiYan"},"content":"        return false;","lastModifiedDate":"2021-09-03"},{"lineNumber":61,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":62,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"chowRuiYan":62}},{"path":"src/main/java/duke/command/CommandDelete.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chowRuiYan"},"content":"package duke.command;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":" * Handles deleting specific task from Duke.","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"public class CommandDelete extends Command {","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"     * The task number that is to be deleted","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"    private final int taskNumber;","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"     * Constructor for the DeleteCommand.","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"     * @param taskNumber The task number that is to be deleted.","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"    public CommandDelete(int taskNumber) {","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"     * Deletes the specified task.","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"     * @param taskList The TaskList that is saved in Duke.","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"     * @param ui       The Ui of Duke.","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"chowRuiYan"},"content":"     * @param storage  The Storage of Duke.","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"chowRuiYan"},"content":"     * @return String from UI.","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"chowRuiYan"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"chowRuiYan"},"content":"        return ui.displayDeleteUi(taskList, taskList.delete(taskNumber));","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"chowRuiYan"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"chowRuiYan"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"chowRuiYan"},"content":"            return true;","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"chowRuiYan"},"content":"        if (obj instanceof CommandDelete) {","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"chowRuiYan"},"content":"            CommandDelete o \u003d (CommandDelete) obj;","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"chowRuiYan"},"content":"            return this.taskNumber \u003d\u003d o.taskNumber;","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":50,"author":{"gitId":"chowRuiYan"},"content":"        return false;","lastModifiedDate":"2021-09-03"},{"lineNumber":51,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"chowRuiYan":52}},{"path":"src/main/java/duke/command/CommandDone.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chowRuiYan"},"content":"package duke.command;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":" * Handles marking task as done in Duke.","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"public class CommandDone extends Command {","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"     * The task number that is to be marked as done","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"    private final int taskNumber;","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"     * Constructor for the DoneCommand.","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"     * @param taskNumber The task number that is to be marked as done.","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"    public CommandDone(int taskNumber) {","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"     * Marks the specified task as done.","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"     * @param taskList The TaskList that is saved in Duke.","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"     * @param ui       The Ui of Duke.","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"chowRuiYan"},"content":"     * @param storage  The Storage of Duke.","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"chowRuiYan"},"content":"     * @return String from UI.","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"chowRuiYan"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"chowRuiYan"},"content":"        return ui.displayDoneUi(taskList.done(taskNumber));","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"chowRuiYan"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"chowRuiYan"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"chowRuiYan"},"content":"            return true;","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"chowRuiYan"},"content":"        if (obj instanceof CommandDone) {","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"chowRuiYan"},"content":"            CommandDone o \u003d (CommandDone) obj;","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"chowRuiYan"},"content":"            return this.taskNumber \u003d\u003d o.taskNumber;","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":50,"author":{"gitId":"chowRuiYan"},"content":"        return false;","lastModifiedDate":"2021-09-03"},{"lineNumber":51,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"chowRuiYan":52}},{"path":"src/main/java/duke/command/CommandExit.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chowRuiYan"},"content":"package duke.command;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":" * Handles closing and exiting Duke.","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":"public class CommandExit extends Command {","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":"     * Constructor for the ExitCommand.","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"    public CommandExit() {}","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"     * Closes and exits Duke.","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"     * Saving the tasks in Duke to Storage.","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"     * @param taskList The TaskList that is saved in Duke.","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"     * @param ui       The Ui of Duke.","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"     * @param storage  The Storage of Duke.","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":"     * @return String from UI.","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"        storage.write(taskList);","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"        return ui.displayExitUi();","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"chowRuiYan"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"chowRuiYan"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"chowRuiYan"},"content":"            return true;","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"chowRuiYan"},"content":"        return obj instanceof CommandExit;","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"chowRuiYan"},"content":"     * Returns true as an exit command.","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"chowRuiYan"},"content":"     * @return True.","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"chowRuiYan"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"chowRuiYan"},"content":"        return true;","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"chowRuiYan":49}},{"path":"src/main/java/duke/command/CommandFind.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chowRuiYan"},"content":"package duke.command;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":" * Handles finding keyword in task description of task in TaskList.","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"public class CommandFind extends Command {","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"     * The list that tasks with keyword are added to","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"    private final ArrayList\u003cTask\u003e relatedList;","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"     * The keyword used to find tasks","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"    private final String keyword;","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":"     * Constructor for the FindCommand.","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"     * @param keyword The keyword used to find tasks.","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"    public CommandFind(String keyword) {","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"        this.relatedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"chowRuiYan"},"content":"     * Finds tasks with keyword and add them into a list.","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"chowRuiYan"},"content":"     * @param taskList The TaskList that is saved in Duke.","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"chowRuiYan"},"content":"     * @param ui       The Ui of Duke.","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"chowRuiYan"},"content":"     * @param storage  The Storage of Duke.","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"chowRuiYan"},"content":"     * @return String from UI.","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"chowRuiYan"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"chowRuiYan"},"content":"        taskList.find(relatedList, keyword);","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"chowRuiYan"},"content":"        return ui.displayFindUi(relatedList);","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"chowRuiYan"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"chowRuiYan"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2021-09-03"},{"lineNumber":50,"author":{"gitId":"chowRuiYan"},"content":"            return true;","lastModifiedDate":"2021-09-03"},{"lineNumber":51,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"chowRuiYan"},"content":"        if (obj instanceof CommandFind) {","lastModifiedDate":"2021-09-03"},{"lineNumber":54,"author":{"gitId":"chowRuiYan"},"content":"            return this.keyword.equals(((CommandFind) obj).keyword);","lastModifiedDate":"2021-09-03"},{"lineNumber":55,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":56,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":57,"author":{"gitId":"chowRuiYan"},"content":"        return false;","lastModifiedDate":"2021-09-03"},{"lineNumber":58,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":59,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"chowRuiYan":59}},{"path":"src/main/java/duke/command/CommandList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chowRuiYan"},"content":"package duke.command;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":" * Handles displaying the task recorded in Duke.","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":"public class CommandList extends Command {","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":"     * Constructor for the ListCommand.","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"    public CommandList() {}","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"     * Displays the recorded tasks in Duke.","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"     * @param taskList The TaskList that is saved in Duke.","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"     * @param ui       The Ui of Duke.","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"     * @param storage  The Storage of Duke.","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"     * @return String from UI.","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"        return ui.displayListUi(taskList);","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"chowRuiYan"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"chowRuiYan"},"content":"            return true;","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"chowRuiYan"},"content":"        return obj instanceof CommandList;","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"chowRuiYan":37}},{"path":"src/main/java/duke/command/CommandUnknown.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chowRuiYan"},"content":"package duke.command;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":" * Handles when Duke do not understand the command given.","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"public class CommandUnknown extends Command {","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"     * Constructor for the UnknownCommand.","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"    public CommandUnknown() {}","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"     * Informs user that command given is not understood.","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"     * @param taskList The TaskList that is saved in Duke.","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"     * @param ui       The Ui of Duke.","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"     * @param storage  The Storage of Duke.","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":"     * @return String from UI.","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"        throw new DukeException(ui.displayUnknownUi());","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"chowRuiYan"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"chowRuiYan"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"chowRuiYan"},"content":"            return true;","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"chowRuiYan"},"content":"        return obj instanceof CommandUnknown;","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"chowRuiYan":38}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chowRuiYan"},"content":"package duke.exception;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":" * Exception specific to Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"     * Constructor for DukeException.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":"     * @param message String representation of the exception that is thrown.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"        super(message);","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"chowRuiYan":15}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chowRuiYan"},"content":"package duke.parser;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"import duke.command.CommandAdd;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"import duke.command.CommandDelete;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"import duke.command.CommandDone;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"import duke.command.CommandExit;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"import duke.command.CommandFind;","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":"import duke.command.CommandList;","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":"import duke.command.CommandUnknown;","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":" * Deals with the input given by the user and making sense of it.","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"public class Parser {","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"    private static final String ADD_FORMAT \u003d \"Please enter the `%s` task in this format:\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"            + \"%s \u003ctask_description\u003e /%s \u003cdate_and_time\u003e\";","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"    private static final String INSUFFICIENT_INPUT_ADD \u003d \"Insufficient input received!\"","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"            + \" Please add in description of the `%s` task.\";","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"    private static final String INSUFFICIENT_INPUT_D \u003d \"Insufficient input received! \"","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"            + \"Please indicate the task number of the %s\";","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":"    private static final String INVALID_INPUT_ADD \u003d \"Invalid input! Please add in %s\";","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":"    private static final String INVALID_INPUT_D \u003d \"Invalid input! Please enter the task number after \u0027%s\u0027.\";","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"     * Processes the input given by the user.","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"     * Returns the corresponding Command afterwards.","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"     * @param input String representation of the input given by user.","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"chowRuiYan"},"content":"     * @return The corresponding Command.","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"chowRuiYan"},"content":"     * @throws DukeException Throw DukeException.","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"chowRuiYan"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"chowRuiYan"},"content":"        input \u003d input.strip();","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"chowRuiYan"},"content":"        String[] inputs \u003d input.split(\" \");","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"chowRuiYan"},"content":"        assert !inputs[0].equals(\"\") : \"input should not be empty!\";","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"chowRuiYan"},"content":"        String command \u003d inputs[0];","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"chowRuiYan"},"content":"        switch (command.toLowerCase()) {","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"chowRuiYan"},"content":"        case \"bye\":","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"chowRuiYan"},"content":"            return new CommandExit();","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"chowRuiYan"},"content":"        case \"list\":","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"chowRuiYan"},"content":"            return new CommandList();","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"chowRuiYan"},"content":"        case \"done\":","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"chowRuiYan"},"content":"            ParseError doneError \u003d checkForError(input);","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"chowRuiYan"},"content":"            if (doneError \u003d\u003d ParseError.INSUFFICIENT_INPUT) {","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"chowRuiYan"},"content":"                throw new DukeException(String.format(INSUFFICIENT_INPUT_D, \"completed task.\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"chowRuiYan"},"content":"            } else if (doneError \u003d\u003d ParseError.INVALID_INPUT) {","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"chowRuiYan"},"content":"                throw new DukeException(String.format(INVALID_INPUT_D, \"done\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"chowRuiYan"},"content":"            } else {","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"chowRuiYan"},"content":"                int index \u003d Integer.parseInt(inputs[1]);","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":54,"author":{"gitId":"chowRuiYan"},"content":"                return new CommandDone(index);","lastModifiedDate":"2021-09-03"},{"lineNumber":55,"author":{"gitId":"chowRuiYan"},"content":"            }","lastModifiedDate":"2021-09-03"},{"lineNumber":56,"author":{"gitId":"chowRuiYan"},"content":"        case \"delete\":","lastModifiedDate":"2021-09-03"},{"lineNumber":57,"author":{"gitId":"chowRuiYan"},"content":"            ParseError deleteError \u003d checkForError(input);","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"chowRuiYan"},"content":"            if (deleteError \u003d\u003d ParseError.INSUFFICIENT_INPUT) {","lastModifiedDate":"2021-09-06"},{"lineNumber":59,"author":{"gitId":"chowRuiYan"},"content":"                throw new DukeException(String.format(INSUFFICIENT_INPUT_D, \"task you wish to delete.\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":60,"author":{"gitId":"chowRuiYan"},"content":"            } else if (deleteError \u003d\u003d ParseError.INVALID_INPUT) {","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"chowRuiYan"},"content":"                throw new DukeException(String.format(INVALID_INPUT_D, \"delete\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":62,"author":{"gitId":"chowRuiYan"},"content":"            } else {","lastModifiedDate":"2021-09-06"},{"lineNumber":63,"author":{"gitId":"chowRuiYan"},"content":"                int index \u003d Integer.parseInt(inputs[1]);","lastModifiedDate":"2021-09-03"},{"lineNumber":64,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":65,"author":{"gitId":"chowRuiYan"},"content":"                return new CommandDelete(index);","lastModifiedDate":"2021-09-03"},{"lineNumber":66,"author":{"gitId":"chowRuiYan"},"content":"            }","lastModifiedDate":"2021-09-03"},{"lineNumber":67,"author":{"gitId":"chowRuiYan"},"content":"        case \"find\":","lastModifiedDate":"2021-09-03"},{"lineNumber":68,"author":{"gitId":"chowRuiYan"},"content":"            ParseError findError \u003d checkForError(input);","lastModifiedDate":"2021-09-06"},{"lineNumber":69,"author":{"gitId":"chowRuiYan"},"content":"            if (findError \u003d\u003d ParseError.INSUFFICIENT_INPUT) {","lastModifiedDate":"2021-09-06"},{"lineNumber":70,"author":{"gitId":"chowRuiYan"},"content":"                throw new DukeException(\"Insufficient input received! Please add in keyword after \u0027find\u0027.\");","lastModifiedDate":"2021-09-06"},{"lineNumber":71,"author":{"gitId":"chowRuiYan"},"content":"            } else {","lastModifiedDate":"2021-09-06"},{"lineNumber":72,"author":{"gitId":"chowRuiYan"},"content":"                String keyword \u003d input.substring(5);","lastModifiedDate":"2021-09-03"},{"lineNumber":73,"author":{"gitId":"chowRuiYan"},"content":"                return new CommandFind(keyword);","lastModifiedDate":"2021-09-03"},{"lineNumber":74,"author":{"gitId":"chowRuiYan"},"content":"            }","lastModifiedDate":"2021-09-03"},{"lineNumber":75,"author":{"gitId":"chowRuiYan"},"content":"        case \"todo\":","lastModifiedDate":"2021-09-03"},{"lineNumber":76,"author":{"gitId":"chowRuiYan"},"content":"            ParseError tError \u003d checkForErrorAdd(input);","lastModifiedDate":"2021-09-06"},{"lineNumber":77,"author":{"gitId":"chowRuiYan"},"content":"            if (tError \u003d\u003d ParseError.INSUFFICIENT_INPUT) {","lastModifiedDate":"2021-09-06"},{"lineNumber":78,"author":{"gitId":"chowRuiYan"},"content":"                throw new DukeException(String.format(INSUFFICIENT_INPUT_ADD, \"Todo\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":79,"author":{"gitId":"chowRuiYan"},"content":"            } else {","lastModifiedDate":"2021-09-06"},{"lineNumber":80,"author":{"gitId":"chowRuiYan"},"content":"                int tFirst \u003d input.indexOf(\" \");","lastModifiedDate":"2021-09-03"},{"lineNumber":81,"author":{"gitId":"chowRuiYan"},"content":"                String tDescription \u003d input.substring(tFirst + 1);","lastModifiedDate":"2021-09-03"},{"lineNumber":82,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":83,"author":{"gitId":"chowRuiYan"},"content":"                return new CommandAdd(0, tDescription);","lastModifiedDate":"2021-09-03"},{"lineNumber":84,"author":{"gitId":"chowRuiYan"},"content":"            }","lastModifiedDate":"2021-09-03"},{"lineNumber":85,"author":{"gitId":"chowRuiYan"},"content":"        case \"deadline\":","lastModifiedDate":"2021-09-06"},{"lineNumber":86,"author":{"gitId":"chowRuiYan"},"content":"            ParseError dError \u003d checkForErrorAdd(input);","lastModifiedDate":"2021-09-06"},{"lineNumber":87,"author":{"gitId":"chowRuiYan"},"content":"            if (dError \u003d\u003d ParseError.INSUFFICIENT_INPUT) {","lastModifiedDate":"2021-09-06"},{"lineNumber":88,"author":{"gitId":"chowRuiYan"},"content":"                throw new DukeException(String.format(INSUFFICIENT_INPUT_ADD, \"Deadline\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":89,"author":{"gitId":"chowRuiYan"},"content":"            } else if (dError \u003d\u003d ParseError.INVALID_INPUT) {","lastModifiedDate":"2021-09-06"},{"lineNumber":90,"author":{"gitId":"chowRuiYan"},"content":"                throw new DukeException(String.format(INVALID_INPUT_ADD, \"the deadline for the task.\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":91,"author":{"gitId":"chowRuiYan"},"content":"            } else if (dError \u003d\u003d ParseError.WRONG_FORMAT) {","lastModifiedDate":"2021-09-06"},{"lineNumber":92,"author":{"gitId":"chowRuiYan"},"content":"                throw new DukeException(String.format(ADD_FORMAT, \"Deadline\", \"Deadline\", \"by\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":93,"author":{"gitId":"chowRuiYan"},"content":"            } else {","lastModifiedDate":"2021-09-06"},{"lineNumber":94,"author":{"gitId":"chowRuiYan"},"content":"                int dFirst \u003d input.indexOf(\" \");","lastModifiedDate":"2021-09-03"},{"lineNumber":95,"author":{"gitId":"chowRuiYan"},"content":"                int dSecond \u003d input.indexOf(\"/\");","lastModifiedDate":"2021-09-03"},{"lineNumber":96,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":97,"author":{"gitId":"chowRuiYan"},"content":"                String dDescription \u003d input.substring(dFirst + 1, dSecond - 1);","lastModifiedDate":"2021-09-03"},{"lineNumber":98,"author":{"gitId":"chowRuiYan"},"content":"                String by \u003d input.substring(dSecond + 4);","lastModifiedDate":"2021-09-03"},{"lineNumber":99,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":100,"author":{"gitId":"chowRuiYan"},"content":"                return new CommandAdd(1, dDescription, by);","lastModifiedDate":"2021-09-03"},{"lineNumber":101,"author":{"gitId":"chowRuiYan"},"content":"            }","lastModifiedDate":"2021-09-03"},{"lineNumber":102,"author":{"gitId":"chowRuiYan"},"content":"        case \"event\":","lastModifiedDate":"2021-09-03"},{"lineNumber":103,"author":{"gitId":"chowRuiYan"},"content":"            ParseError eError \u003d checkForErrorAdd(input);","lastModifiedDate":"2021-09-06"},{"lineNumber":104,"author":{"gitId":"chowRuiYan"},"content":"            if (eError \u003d\u003d ParseError.INSUFFICIENT_INPUT) {","lastModifiedDate":"2021-09-06"},{"lineNumber":105,"author":{"gitId":"chowRuiYan"},"content":"                throw new DukeException(String.format(INSUFFICIENT_INPUT_ADD, \"Event\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":106,"author":{"gitId":"chowRuiYan"},"content":"            } else if (eError \u003d\u003d ParseError.INVALID_INPUT) {","lastModifiedDate":"2021-09-06"},{"lineNumber":107,"author":{"gitId":"chowRuiYan"},"content":"                throw new DukeException(String.format(INVALID_INPUT_ADD, \"information about the event.\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":108,"author":{"gitId":"chowRuiYan"},"content":"            } else if (eError \u003d\u003d ParseError.WRONG_FORMAT) {","lastModifiedDate":"2021-09-06"},{"lineNumber":109,"author":{"gitId":"chowRuiYan"},"content":"                throw new DukeException(String.format(ADD_FORMAT, \"Event\", \"Event\", \"at\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":110,"author":{"gitId":"chowRuiYan"},"content":"            } else {","lastModifiedDate":"2021-09-06"},{"lineNumber":111,"author":{"gitId":"chowRuiYan"},"content":"                int eFirst \u003d input.indexOf(\" \");","lastModifiedDate":"2021-09-03"},{"lineNumber":112,"author":{"gitId":"chowRuiYan"},"content":"                int eSecond \u003d input.indexOf(\"/\");","lastModifiedDate":"2021-09-03"},{"lineNumber":113,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":114,"author":{"gitId":"chowRuiYan"},"content":"                String eDescription \u003d input.substring(eFirst + 1, eSecond - 1);","lastModifiedDate":"2021-09-03"},{"lineNumber":115,"author":{"gitId":"chowRuiYan"},"content":"                String at \u003d input.substring(eSecond + 4);","lastModifiedDate":"2021-09-03"},{"lineNumber":116,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":117,"author":{"gitId":"chowRuiYan"},"content":"                return new CommandAdd(2, eDescription, at);","lastModifiedDate":"2021-09-07"},{"lineNumber":118,"author":{"gitId":"chowRuiYan"},"content":"            }","lastModifiedDate":"2021-09-03"},{"lineNumber":119,"author":{"gitId":"chowRuiYan"},"content":"        default:","lastModifiedDate":"2021-09-03"},{"lineNumber":120,"author":{"gitId":"chowRuiYan"},"content":"            return new CommandUnknown();","lastModifiedDate":"2021-09-03"},{"lineNumber":121,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":122,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":123,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":124,"author":{"gitId":"chowRuiYan"},"content":"    enum ParseError {","lastModifiedDate":"2021-09-06"},{"lineNumber":125,"author":{"gitId":"chowRuiYan"},"content":"        INSUFFICIENT_INPUT,","lastModifiedDate":"2021-09-06"},{"lineNumber":126,"author":{"gitId":"chowRuiYan"},"content":"        INVALID_INPUT,","lastModifiedDate":"2021-09-06"},{"lineNumber":127,"author":{"gitId":"chowRuiYan"},"content":"        WRONG_FORMAT","lastModifiedDate":"2021-09-06"},{"lineNumber":128,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":129,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":130,"author":{"gitId":"chowRuiYan"},"content":"    private static ParseError checkForErrorAdd(String input) {","lastModifiedDate":"2021-09-06"},{"lineNumber":131,"author":{"gitId":"chowRuiYan"},"content":"        String[] inputs \u003d input.split(\" \");","lastModifiedDate":"2021-09-06"},{"lineNumber":132,"author":{"gitId":"chowRuiYan"},"content":"        if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-06"},{"lineNumber":133,"author":{"gitId":"chowRuiYan"},"content":"            return ParseError.INSUFFICIENT_INPUT;","lastModifiedDate":"2021-09-06"},{"lineNumber":134,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":135,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":136,"author":{"gitId":"chowRuiYan"},"content":"        if (!input.contains(\"/by\") \u0026\u0026 !input.contains(\"/at\")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":137,"author":{"gitId":"chowRuiYan"},"content":"            return ParseError.INVALID_INPUT;","lastModifiedDate":"2021-09-06"},{"lineNumber":138,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":139,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":140,"author":{"gitId":"chowRuiYan"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":141,"author":{"gitId":"chowRuiYan"},"content":"            int first \u003d input.indexOf(\" \");","lastModifiedDate":"2021-09-06"},{"lineNumber":142,"author":{"gitId":"chowRuiYan"},"content":"            int second \u003d input.indexOf(\"/\");","lastModifiedDate":"2021-09-06"},{"lineNumber":143,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":144,"author":{"gitId":"chowRuiYan"},"content":"            String description \u003d input.substring(first + 1, second - 1);","lastModifiedDate":"2021-09-06"},{"lineNumber":145,"author":{"gitId":"chowRuiYan"},"content":"            String additionalInfo \u003d input.substring(second + 4);","lastModifiedDate":"2021-09-06"},{"lineNumber":146,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":147,"author":{"gitId":"chowRuiYan"},"content":"            return null;","lastModifiedDate":"2021-09-06"},{"lineNumber":148,"author":{"gitId":"chowRuiYan"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":149,"author":{"gitId":"chowRuiYan"},"content":"            return ParseError.WRONG_FORMAT;","lastModifiedDate":"2021-09-06"},{"lineNumber":150,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":151,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":152,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":153,"author":{"gitId":"chowRuiYan"},"content":"    private static ParseError checkForError(String input) {","lastModifiedDate":"2021-09-06"},{"lineNumber":154,"author":{"gitId":"chowRuiYan"},"content":"        String[] inputs \u003d input.split(\" \");","lastModifiedDate":"2021-09-06"},{"lineNumber":155,"author":{"gitId":"chowRuiYan"},"content":"        if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-06"},{"lineNumber":156,"author":{"gitId":"chowRuiYan"},"content":"            return ParseError.INSUFFICIENT_INPUT;","lastModifiedDate":"2021-09-06"},{"lineNumber":157,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":158,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":159,"author":{"gitId":"chowRuiYan"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":160,"author":{"gitId":"chowRuiYan"},"content":"            int index \u003d Integer.parseInt(inputs[1]);","lastModifiedDate":"2021-09-06"},{"lineNumber":161,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":162,"author":{"gitId":"chowRuiYan"},"content":"            return null;","lastModifiedDate":"2021-09-06"},{"lineNumber":163,"author":{"gitId":"chowRuiYan"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":164,"author":{"gitId":"chowRuiYan"},"content":"            return ParseError.INVALID_INPUT;","lastModifiedDate":"2021-09-06"},{"lineNumber":165,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":166,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":167,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"chowRuiYan":167}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chowRuiYan"},"content":"package duke.storage;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"import java.io.File;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":" * Deals with loading tasks from file and saving tasks in file.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"public class Storage {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"    /** String representation of the path to the file */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"    private final String filePath;","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"     * Constructor for Storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"     * @param filePath String representation of the path to the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"     * Loads the tasks from the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"     * Returns task as String representation.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"chowRuiYan"},"content":"     * @return String representation of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"chowRuiYan"},"content":"    public String load() {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"chowRuiYan"},"content":"        String str \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"chowRuiYan"},"content":"        File dukeDataFile \u003d new File(filePath);","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"chowRuiYan"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"chowRuiYan"},"content":"            if (!dukeDataFile.exists()) {","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"chowRuiYan"},"content":"                dukeDataFile.getParentFile().mkdirs();","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"chowRuiYan"},"content":"                dukeDataFile.createNewFile();","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"chowRuiYan"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"chowRuiYan"},"content":"                Scanner sc \u003d new Scanner(dukeDataFile);","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"chowRuiYan"},"content":"                while (sc.hasNext()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"chowRuiYan"},"content":"                    str +\u003d sc.nextLine() + \"\\n\";","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"chowRuiYan"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"chowRuiYan"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"chowRuiYan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"chowRuiYan"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"chowRuiYan"},"content":"        return str;","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"chowRuiYan"},"content":"     * Saves the tasks into a file.","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"chowRuiYan"},"content":"     * @param list Contain the tasks that needs to be saved.","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"chowRuiYan"},"content":"    public void write(TaskList list) {","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"chowRuiYan"},"content":"        String dataToBeSaved \u003d list.checkOut();","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"chowRuiYan"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"chowRuiYan"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath));","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"chowRuiYan"},"content":"            writer.write(dataToBeSaved);","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"chowRuiYan"},"content":"            writer.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"chowRuiYan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"chowRuiYan"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"chowRuiYan":72}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chowRuiYan"},"content":"package duke.task;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"     * Date and time representation of deadline","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":"    private LocalDateTime by;","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"     * Constructor for a `Deadline` task.","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"     * @param isDone      Indicates whether the task has been completed.","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"     * @param description Task description.","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"     * @param by          Date and time representation of deadline.","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"    public Deadline(boolean isDone, String description, String by) {","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"        super(isDone, description);","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"        this.by \u003d LocalDateTime.parse(by, INPUT_FORMAT);","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"    public String toString() {","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(OUTPUT_FORMAT) + \")\";","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"    public String saveAsData() {","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"chowRuiYan"},"content":"        return 1 + \"\\n\" + super.saveAsData() + \"\\n\" + by.format(INPUT_FORMAT) + \"\\n\";","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"chowRuiYan"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"chowRuiYan"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"chowRuiYan"},"content":"            return true;","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"chowRuiYan"},"content":"        if (obj instanceof Deadline) {","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"chowRuiYan"},"content":"            Deadline o \u003d (Deadline) obj;","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"chowRuiYan"},"content":"            return super.equals(obj) \u0026\u0026 this.by.equals(o.by);","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"chowRuiYan"},"content":"        return false;","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"chowRuiYan"},"content":"    public boolean checkIfAlreadyAdded(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"chowRuiYan"},"content":"        boolean hasBeenAdded \u003d false;","lastModifiedDate":"2021-09-14"},{"lineNumber":52,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"chowRuiYan"},"content":"        for (Task task : list) {","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"chowRuiYan"},"content":"            if (this.equals(task)) {","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"chowRuiYan"},"content":"                hasBeenAdded \u003d true;","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"chowRuiYan"},"content":"                break;","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"chowRuiYan"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"chowRuiYan"},"content":"        return hasBeenAdded;","lastModifiedDate":"2021-09-14"},{"lineNumber":60,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"chowRuiYan":61}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chowRuiYan"},"content":"package duke.task;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"public class Event extends Task {","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"     * Date and time representation of event","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":"    private LocalDateTime at;","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"     * Constructor for an `Event` task.","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"     * @param isDone      Indicates whether the task has been completed.","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"     * @param description Task description.","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"     * @param at          Date and time representation of event.","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"    public Event(boolean isDone, String description, String at) {","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"        super(isDone, description);","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"        this.at \u003d LocalDateTime.parse(at, INPUT_FORMAT);","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"    public String toString() {","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at.format(OUTPUT_FORMAT) + \")\";","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"    public String saveAsData() {","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"chowRuiYan"},"content":"        return 2 + \"\\n\" + super.saveAsData() + \"\\n\" + at.format(INPUT_FORMAT) + \"\\n\";","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"chowRuiYan"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"chowRuiYan"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"chowRuiYan"},"content":"            return true;","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"chowRuiYan"},"content":"        if (obj instanceof Event) {","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"chowRuiYan"},"content":"            Event o \u003d (Event) obj;","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"chowRuiYan"},"content":"            return super.equals(obj) \u0026\u0026 this.at.equals(o.at);","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"chowRuiYan"},"content":"        return false;","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"chowRuiYan"},"content":"    public boolean checkIfAlreadyAdded(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"chowRuiYan"},"content":"        boolean hasBeenAdded \u003d false;","lastModifiedDate":"2021-09-14"},{"lineNumber":52,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"chowRuiYan"},"content":"        for (Task task : list) {","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"chowRuiYan"},"content":"            if (this.equals(task)) {","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"chowRuiYan"},"content":"                hasBeenAdded \u003d true;","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"chowRuiYan"},"content":"                break;","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"chowRuiYan"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"chowRuiYan"},"content":"        return hasBeenAdded;","lastModifiedDate":"2021-09-14"},{"lineNumber":60,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"chowRuiYan":61}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chowRuiYan"},"content":"package duke.task;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":" * Represents a task.","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":"public abstract class Task {","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":"    public static final DateTimeFormatter INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"    public static final DateTimeFormatter OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy hh:mma\");","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"     * Description of the task","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"    private final String description;","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"     * Checks if the task has been completed","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"    private boolean isDone;","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":"     * Constructor for `Task`.","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"     * @param isDone Indicates if the `Task` has been done.","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"     * @param description Name for the `Task`.","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"    public Task(boolean isDone, String description) {","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"chowRuiYan"},"content":"    private String isDone() {","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"chowRuiYan"},"content":"        return (this.isDone ? \"X\" : \"  \");","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"chowRuiYan"},"content":"     * Returns false if current `Task` is done. Otherwise, mark current `Task` as done and return true.","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"chowRuiYan"},"content":"     * @return Whether the `Task` has been successfully marked as done.","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"chowRuiYan"},"content":"    public boolean markAsDone() {","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"chowRuiYan"},"content":"        if (isDone) {","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"chowRuiYan"},"content":"            return false;","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"chowRuiYan"},"content":"        } else {","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"chowRuiYan"},"content":"            isDone \u003d true;","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"chowRuiYan"},"content":"            return true;","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":50,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":51,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"chowRuiYan"},"content":"     * Checks if Task contains a certain keyword in its description.","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":54,"author":{"gitId":"chowRuiYan"},"content":"     * @param keyword The keyword.","lastModifiedDate":"2021-09-03"},{"lineNumber":55,"author":{"gitId":"chowRuiYan"},"content":"     * @return True is task contains keyword in its description. Returns false otherwise.","lastModifiedDate":"2021-09-03"},{"lineNumber":56,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":57,"author":{"gitId":"chowRuiYan"},"content":"    public boolean hasKeyword(String keyword) {","lastModifiedDate":"2021-09-03"},{"lineNumber":58,"author":{"gitId":"chowRuiYan"},"content":"        return description.contains(keyword);","lastModifiedDate":"2021-09-03"},{"lineNumber":59,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":60,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":61,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":62,"author":{"gitId":"chowRuiYan"},"content":"    public String toString() {","lastModifiedDate":"2021-09-03"},{"lineNumber":63,"author":{"gitId":"chowRuiYan"},"content":"        return String.format(\"[%s] %s\", this.isDone(), this.description);","lastModifiedDate":"2021-09-03"},{"lineNumber":64,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":65,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":66,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":67,"author":{"gitId":"chowRuiYan"},"content":"     * Returns the String format that represent the `Task` object when saved as data.","lastModifiedDate":"2021-09-03"},{"lineNumber":68,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":69,"author":{"gitId":"chowRuiYan"},"content":"     * @return The String representation of `Task` object in data.","lastModifiedDate":"2021-09-03"},{"lineNumber":70,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":71,"author":{"gitId":"chowRuiYan"},"content":"    public String saveAsData() {","lastModifiedDate":"2021-09-05"},{"lineNumber":72,"author":{"gitId":"chowRuiYan"},"content":"        return isDone + \"\\n\" + description;","lastModifiedDate":"2021-09-03"},{"lineNumber":73,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":74,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":75,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":76,"author":{"gitId":"chowRuiYan"},"content":"     * Checks if the current `Task` has already been added to the list.","lastModifiedDate":"2021-09-07"},{"lineNumber":77,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":78,"author":{"gitId":"chowRuiYan"},"content":"     * @param list List of `Task` objects.","lastModifiedDate":"2021-09-07"},{"lineNumber":79,"author":{"gitId":"chowRuiYan"},"content":"     * @return True if already added. False otherwise.","lastModifiedDate":"2021-09-07"},{"lineNumber":80,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":81,"author":{"gitId":"chowRuiYan"},"content":"    public abstract boolean checkIfAlreadyAdded(ArrayList\u003cTask\u003e list);","lastModifiedDate":"2021-09-07"},{"lineNumber":82,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":83,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-09-07"},{"lineNumber":84,"author":{"gitId":"chowRuiYan"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-09-07"},{"lineNumber":85,"author":{"gitId":"chowRuiYan"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2021-09-07"},{"lineNumber":86,"author":{"gitId":"chowRuiYan"},"content":"            return true;","lastModifiedDate":"2021-09-07"},{"lineNumber":87,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":88,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":89,"author":{"gitId":"chowRuiYan"},"content":"        if (obj instanceof Task) {","lastModifiedDate":"2021-09-07"},{"lineNumber":90,"author":{"gitId":"chowRuiYan"},"content":"            Task o \u003d (Task) obj;","lastModifiedDate":"2021-09-07"},{"lineNumber":91,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":92,"author":{"gitId":"chowRuiYan"},"content":"            return this.description.equals(o.description);","lastModifiedDate":"2021-09-07"},{"lineNumber":93,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":94,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":95,"author":{"gitId":"chowRuiYan"},"content":"        return false;","lastModifiedDate":"2021-09-07"},{"lineNumber":96,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":97,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"chowRuiYan":97}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chowRuiYan"},"content":"package duke.task;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":" * Contains the task list.","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":"public class TaskList {","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"    private static final String ALREADY_EXIST \u003d \"This task has already been added! Please add another task.\";","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"    private static final String DATE_TIME_FORMAT \u003d \"Please follow this format when entering date and time:\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"            + \"DD/MM/YYYY 24-Hour Time Format\" + \" e.g. (01/01/2020 2359)\";","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"    private static final String EMPTY_TASKLIST \u003d \"You do not have any task. Please add a task first!\";","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"    private static final String INVALID_INDEX \u003d \"Please enter a valid task number between 1 and %d!\";","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"    /** A collection of the task */","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":"     * Constructor of TaskList.","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":"     * Initialises TaskList according to a file loaded by Storage.","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"     * @param data String representation of task given by Storage.","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"     * @throws DukeException Throw DukeException.","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"    public TaskList(String data) throws DukeException {","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"        if (data.isEmpty()) {","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"chowRuiYan"},"content":"            throw new DukeException(\"No previous data found.\\nLet\u0027s start a new To-Do List!\");","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"chowRuiYan"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"chowRuiYan"},"content":"        Scanner sc \u003d new Scanner(data);","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"chowRuiYan"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"chowRuiYan"},"content":"            int taskType \u003d Integer.parseInt(sc.nextLine());","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"chowRuiYan"},"content":"            boolean isDone \u003d Boolean.parseBoolean(sc.nextLine());","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"chowRuiYan"},"content":"            assert taskType \u003c 3 \u0026\u0026 taskType \u003e\u003d 0 : \"File is corrupted!\";","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"chowRuiYan"},"content":"            switch (taskType) {","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"chowRuiYan"},"content":"            case 0:","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"chowRuiYan"},"content":"                String tDescription \u003d sc.nextLine();","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"chowRuiYan"},"content":"                Todo tTask \u003d new Todo(isDone, tDescription);","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"chowRuiYan"},"content":"                taskList.add(tTask);","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"chowRuiYan"},"content":"                break;","lastModifiedDate":"2021-09-03"},{"lineNumber":50,"author":{"gitId":"chowRuiYan"},"content":"            case 1:","lastModifiedDate":"2021-09-03"},{"lineNumber":51,"author":{"gitId":"chowRuiYan"},"content":"                String dDescription \u003d sc.nextLine();","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"chowRuiYan"},"content":"                String by \u003d sc.nextLine();","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"chowRuiYan"},"content":"                Deadline dTask \u003d new Deadline(isDone, dDescription, by);","lastModifiedDate":"2021-09-03"},{"lineNumber":54,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":55,"author":{"gitId":"chowRuiYan"},"content":"                taskList.add(dTask);","lastModifiedDate":"2021-09-03"},{"lineNumber":56,"author":{"gitId":"chowRuiYan"},"content":"                break;","lastModifiedDate":"2021-09-03"},{"lineNumber":57,"author":{"gitId":"chowRuiYan"},"content":"            case 2:","lastModifiedDate":"2021-09-03"},{"lineNumber":58,"author":{"gitId":"chowRuiYan"},"content":"                String eDescription \u003d sc.nextLine();","lastModifiedDate":"2021-09-03"},{"lineNumber":59,"author":{"gitId":"chowRuiYan"},"content":"                String at \u003d sc.nextLine();","lastModifiedDate":"2021-09-03"},{"lineNumber":60,"author":{"gitId":"chowRuiYan"},"content":"                Event eTask \u003d new Event(isDone, eDescription, at);","lastModifiedDate":"2021-09-03"},{"lineNumber":61,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":62,"author":{"gitId":"chowRuiYan"},"content":"                taskList.add(eTask);","lastModifiedDate":"2021-09-03"},{"lineNumber":63,"author":{"gitId":"chowRuiYan"},"content":"                break;","lastModifiedDate":"2021-09-03"},{"lineNumber":64,"author":{"gitId":"chowRuiYan"},"content":"            default:","lastModifiedDate":"2021-09-03"},{"lineNumber":65,"author":{"gitId":"chowRuiYan"},"content":"                throw new DukeException(\"File is corrupted!\");","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"chowRuiYan"},"content":"            }","lastModifiedDate":"2021-09-03"},{"lineNumber":67,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":68,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":69,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":70,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":71,"author":{"gitId":"chowRuiYan"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2021-09-03"},{"lineNumber":72,"author":{"gitId":"chowRuiYan"},"content":"     * Starts a new task list.","lastModifiedDate":"2021-09-03"},{"lineNumber":73,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":74,"author":{"gitId":"chowRuiYan"},"content":"    public TaskList() {","lastModifiedDate":"2021-09-03"},{"lineNumber":75,"author":{"gitId":"chowRuiYan"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-03"},{"lineNumber":76,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":77,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":78,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":79,"author":{"gitId":"chowRuiYan"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2021-09-03"},{"lineNumber":80,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":81,"author":{"gitId":"chowRuiYan"},"content":"     * @param input String representation of task description.","lastModifiedDate":"2021-09-03"},{"lineNumber":82,"author":{"gitId":"chowRuiYan"},"content":"     * @param taskType Type of task.","lastModifiedDate":"2021-09-03"},{"lineNumber":83,"author":{"gitId":"chowRuiYan"},"content":"     * @return The Task object added to task list.","lastModifiedDate":"2021-09-03"},{"lineNumber":84,"author":{"gitId":"chowRuiYan"},"content":"     * @throws DukeException Throw DukeException.","lastModifiedDate":"2021-09-03"},{"lineNumber":85,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":86,"author":{"gitId":"chowRuiYan"},"content":"    public Task add(int taskType, String... input) throws DukeException {","lastModifiedDate":"2021-09-03"},{"lineNumber":87,"author":{"gitId":"chowRuiYan"},"content":"        Task task;","lastModifiedDate":"2021-09-03"},{"lineNumber":88,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":89,"author":{"gitId":"chowRuiYan"},"content":"        assert taskType \u003c 3 \u0026\u0026 taskType \u003e\u003d 0 : \"TaskType is invalid!\";","lastModifiedDate":"2021-09-05"},{"lineNumber":90,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":91,"author":{"gitId":"chowRuiYan"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":92,"author":{"gitId":"chowRuiYan"},"content":"            switch (taskType) {","lastModifiedDate":"2021-09-03"},{"lineNumber":93,"author":{"gitId":"chowRuiYan"},"content":"            case 0:","lastModifiedDate":"2021-09-03"},{"lineNumber":94,"author":{"gitId":"chowRuiYan"},"content":"                String tDescription \u003d input[0];","lastModifiedDate":"2021-09-03"},{"lineNumber":95,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":96,"author":{"gitId":"chowRuiYan"},"content":"                Todo todo \u003d new Todo(false, tDescription);","lastModifiedDate":"2021-09-07"},{"lineNumber":97,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":98,"author":{"gitId":"chowRuiYan"},"content":"                if (todo.checkIfAlreadyAdded(taskList)) {","lastModifiedDate":"2021-09-07"},{"lineNumber":99,"author":{"gitId":"chowRuiYan"},"content":"                    throw new DukeException(ALREADY_EXIST + \"todo\");","lastModifiedDate":"2021-09-07"},{"lineNumber":100,"author":{"gitId":"chowRuiYan"},"content":"                } else {","lastModifiedDate":"2021-09-07"},{"lineNumber":101,"author":{"gitId":"chowRuiYan"},"content":"                    task \u003d todo;","lastModifiedDate":"2021-09-07"},{"lineNumber":102,"author":{"gitId":"chowRuiYan"},"content":"                }","lastModifiedDate":"2021-09-07"},{"lineNumber":103,"author":{"gitId":"chowRuiYan"},"content":"                break;","lastModifiedDate":"2021-09-03"},{"lineNumber":104,"author":{"gitId":"chowRuiYan"},"content":"            case 1:","lastModifiedDate":"2021-09-03"},{"lineNumber":105,"author":{"gitId":"chowRuiYan"},"content":"                String dDescription \u003d input[0];","lastModifiedDate":"2021-09-03"},{"lineNumber":106,"author":{"gitId":"chowRuiYan"},"content":"                String by \u003d input[1];","lastModifiedDate":"2021-09-03"},{"lineNumber":107,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":108,"author":{"gitId":"chowRuiYan"},"content":"                Deadline deadline \u003d new Deadline(false, dDescription, by);","lastModifiedDate":"2021-09-07"},{"lineNumber":109,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":110,"author":{"gitId":"chowRuiYan"},"content":"                if (deadline.checkIfAlreadyAdded(taskList)) {","lastModifiedDate":"2021-09-07"},{"lineNumber":111,"author":{"gitId":"chowRuiYan"},"content":"                    throw new DukeException(ALREADY_EXIST + \"deadline\");","lastModifiedDate":"2021-09-07"},{"lineNumber":112,"author":{"gitId":"chowRuiYan"},"content":"                } else {","lastModifiedDate":"2021-09-07"},{"lineNumber":113,"author":{"gitId":"chowRuiYan"},"content":"                    task \u003d deadline;","lastModifiedDate":"2021-09-07"},{"lineNumber":114,"author":{"gitId":"chowRuiYan"},"content":"                }","lastModifiedDate":"2021-09-07"},{"lineNumber":115,"author":{"gitId":"chowRuiYan"},"content":"                break;","lastModifiedDate":"2021-09-03"},{"lineNumber":116,"author":{"gitId":"chowRuiYan"},"content":"            case 2:","lastModifiedDate":"2021-09-03"},{"lineNumber":117,"author":{"gitId":"chowRuiYan"},"content":"                String eDescription \u003d input[0];","lastModifiedDate":"2021-09-03"},{"lineNumber":118,"author":{"gitId":"chowRuiYan"},"content":"                String at \u003d input[1];","lastModifiedDate":"2021-09-03"},{"lineNumber":119,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":120,"author":{"gitId":"chowRuiYan"},"content":"                Event event \u003d new Event(false, eDescription, at);","lastModifiedDate":"2021-09-07"},{"lineNumber":121,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":122,"author":{"gitId":"chowRuiYan"},"content":"                if (event.checkIfAlreadyAdded(taskList)) {","lastModifiedDate":"2021-09-07"},{"lineNumber":123,"author":{"gitId":"chowRuiYan"},"content":"                    throw new DukeException(ALREADY_EXIST + \"event\");","lastModifiedDate":"2021-09-07"},{"lineNumber":124,"author":{"gitId":"chowRuiYan"},"content":"                } else {","lastModifiedDate":"2021-09-07"},{"lineNumber":125,"author":{"gitId":"chowRuiYan"},"content":"                    task \u003d event;","lastModifiedDate":"2021-09-07"},{"lineNumber":126,"author":{"gitId":"chowRuiYan"},"content":"                }","lastModifiedDate":"2021-09-07"},{"lineNumber":127,"author":{"gitId":"chowRuiYan"},"content":"                break;","lastModifiedDate":"2021-09-03"},{"lineNumber":128,"author":{"gitId":"chowRuiYan"},"content":"            default:","lastModifiedDate":"2021-09-03"},{"lineNumber":129,"author":{"gitId":"chowRuiYan"},"content":"                throw new DukeException(\"Not a valid Task!!\");","lastModifiedDate":"2021-09-03"},{"lineNumber":130,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":131,"author":{"gitId":"chowRuiYan"},"content":"            }","lastModifiedDate":"2021-09-06"},{"lineNumber":132,"author":{"gitId":"chowRuiYan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":133,"author":{"gitId":"chowRuiYan"},"content":"            throw new DukeException(DATE_TIME_FORMAT);","lastModifiedDate":"2021-09-07"},{"lineNumber":134,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":135,"author":{"gitId":"chowRuiYan"},"content":"        taskList.add(task);","lastModifiedDate":"2021-09-03"},{"lineNumber":136,"author":{"gitId":"chowRuiYan"},"content":"        return task;","lastModifiedDate":"2021-09-03"},{"lineNumber":137,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":138,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":139,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":140,"author":{"gitId":"chowRuiYan"},"content":"     * Marks the specified task as done.","lastModifiedDate":"2021-09-03"},{"lineNumber":141,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":142,"author":{"gitId":"chowRuiYan"},"content":"     * @param i The task number of the task that is to be marked as done.","lastModifiedDate":"2021-09-03"},{"lineNumber":143,"author":{"gitId":"chowRuiYan"},"content":"     * @return The Task object that is marked as done.","lastModifiedDate":"2021-09-03"},{"lineNumber":144,"author":{"gitId":"chowRuiYan"},"content":"     * @throws DukeException Throw DukeException.","lastModifiedDate":"2021-09-03"},{"lineNumber":145,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":146,"author":{"gitId":"chowRuiYan"},"content":"    public Task done(int i) throws DukeException {","lastModifiedDate":"2021-09-03"},{"lineNumber":147,"author":{"gitId":"chowRuiYan"},"content":"        checkForIndex(i);","lastModifiedDate":"2021-09-06"},{"lineNumber":148,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":149,"author":{"gitId":"chowRuiYan"},"content":"        if (!taskList.get(i - 1).markAsDone()) {","lastModifiedDate":"2021-09-03"},{"lineNumber":150,"author":{"gitId":"chowRuiYan"},"content":"            return null;","lastModifiedDate":"2021-09-03"},{"lineNumber":151,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":152,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":153,"author":{"gitId":"chowRuiYan"},"content":"        return taskList.get(i - 1);","lastModifiedDate":"2021-09-03"},{"lineNumber":154,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":155,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":156,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":157,"author":{"gitId":"chowRuiYan"},"content":"     * Deletes the specified task.","lastModifiedDate":"2021-09-03"},{"lineNumber":158,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":159,"author":{"gitId":"chowRuiYan"},"content":"     * @param i The task number of the task that is to be deleted.","lastModifiedDate":"2021-09-03"},{"lineNumber":160,"author":{"gitId":"chowRuiYan"},"content":"     * @return The Task object that is deleted.","lastModifiedDate":"2021-09-03"},{"lineNumber":161,"author":{"gitId":"chowRuiYan"},"content":"     * @throws DukeException Throw DukeException.","lastModifiedDate":"2021-09-03"},{"lineNumber":162,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":163,"author":{"gitId":"chowRuiYan"},"content":"    public Task delete(int i) throws DukeException {","lastModifiedDate":"2021-09-03"},{"lineNumber":164,"author":{"gitId":"chowRuiYan"},"content":"        checkForIndex(i);","lastModifiedDate":"2021-09-06"},{"lineNumber":165,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":166,"author":{"gitId":"chowRuiYan"},"content":"        return taskList.remove(i - 1);","lastModifiedDate":"2021-09-06"},{"lineNumber":167,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":168,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":169,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":170,"author":{"gitId":"chowRuiYan"},"content":"     * Throws a `DukeException` is the index is invalid.","lastModifiedDate":"2021-09-06"},{"lineNumber":171,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":172,"author":{"gitId":"chowRuiYan"},"content":"     * @param i Index of the task.","lastModifiedDate":"2021-09-06"},{"lineNumber":173,"author":{"gitId":"chowRuiYan"},"content":"     * @throws DukeException Throw a DukeException is index is invalid.","lastModifiedDate":"2021-09-06"},{"lineNumber":174,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":175,"author":{"gitId":"chowRuiYan"},"content":"    public void checkForIndex(int i) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":176,"author":{"gitId":"chowRuiYan"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2021-09-03"},{"lineNumber":177,"author":{"gitId":"chowRuiYan"},"content":"            throw new DukeException(EMPTY_TASKLIST);","lastModifiedDate":"2021-09-07"},{"lineNumber":178,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":179,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":180,"author":{"gitId":"chowRuiYan"},"content":"        if (i \u003e taskList.size() || i \u003c 1) {","lastModifiedDate":"2021-09-03"},{"lineNumber":181,"author":{"gitId":"chowRuiYan"},"content":"            throw new DukeException(String.format(INVALID_INDEX,","lastModifiedDate":"2021-09-07"},{"lineNumber":182,"author":{"gitId":"chowRuiYan"},"content":"                    taskList.size()));","lastModifiedDate":"2021-09-03"},{"lineNumber":183,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":184,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":185,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":186,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":187,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":188,"author":{"gitId":"chowRuiYan"},"content":"     * Looks for keyword in TaskList.","lastModifiedDate":"2021-09-03"},{"lineNumber":189,"author":{"gitId":"chowRuiYan"},"content":"     * Adds `Task` object with keyword into a list.","lastModifiedDate":"2021-09-05"},{"lineNumber":190,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":191,"author":{"gitId":"chowRuiYan"},"content":"     * @param relatedList The list that tasks with keyword are added to.","lastModifiedDate":"2021-09-03"},{"lineNumber":192,"author":{"gitId":"chowRuiYan"},"content":"     * @param keyword The keyword.","lastModifiedDate":"2021-09-03"},{"lineNumber":193,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":194,"author":{"gitId":"chowRuiYan"},"content":"    public void find(ArrayList\u003cTask\u003e relatedList, String keyword) {","lastModifiedDate":"2021-09-03"},{"lineNumber":195,"author":{"gitId":"chowRuiYan"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-09-03"},{"lineNumber":196,"author":{"gitId":"chowRuiYan"},"content":"            if (taskList.get(i).hasKeyword(keyword)) {","lastModifiedDate":"2021-09-03"},{"lineNumber":197,"author":{"gitId":"chowRuiYan"},"content":"                relatedList.add(taskList.get(i));","lastModifiedDate":"2021-09-03"},{"lineNumber":198,"author":{"gitId":"chowRuiYan"},"content":"            }","lastModifiedDate":"2021-09-03"},{"lineNumber":199,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":200,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":201,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":202,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":203,"author":{"gitId":"chowRuiYan"},"content":"     * Converts all the tasks in TaskList into String representation.","lastModifiedDate":"2021-09-03"},{"lineNumber":204,"author":{"gitId":"chowRuiYan"},"content":"     * Given to Storage to be saved into a file.","lastModifiedDate":"2021-09-03"},{"lineNumber":205,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":206,"author":{"gitId":"chowRuiYan"},"content":"     * @return String representation of all the tasks in task list.","lastModifiedDate":"2021-09-03"},{"lineNumber":207,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":208,"author":{"gitId":"chowRuiYan"},"content":"    public String checkOut() {","lastModifiedDate":"2021-09-03"},{"lineNumber":209,"author":{"gitId":"chowRuiYan"},"content":"        String str \u003d \"\";","lastModifiedDate":"2021-09-03"},{"lineNumber":210,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":211,"author":{"gitId":"chowRuiYan"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-09-03"},{"lineNumber":212,"author":{"gitId":"chowRuiYan"},"content":"            str +\u003d taskList.get(i).saveAsData();","lastModifiedDate":"2021-09-05"},{"lineNumber":213,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":214,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":215,"author":{"gitId":"chowRuiYan"},"content":"        return str;","lastModifiedDate":"2021-09-03"},{"lineNumber":216,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":217,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":218,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":219,"author":{"gitId":"chowRuiYan"},"content":"     * Returns the number of tasks in TaskList.","lastModifiedDate":"2021-09-03"},{"lineNumber":220,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":221,"author":{"gitId":"chowRuiYan"},"content":"     * @return The number of tasks in task list.","lastModifiedDate":"2021-09-03"},{"lineNumber":222,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":223,"author":{"gitId":"chowRuiYan"},"content":"    public int size() {","lastModifiedDate":"2021-09-03"},{"lineNumber":224,"author":{"gitId":"chowRuiYan"},"content":"        return taskList.size();","lastModifiedDate":"2021-09-03"},{"lineNumber":225,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":226,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":227,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":228,"author":{"gitId":"chowRuiYan"},"content":"     * Checks if TaskList is empty/","lastModifiedDate":"2021-09-03"},{"lineNumber":229,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":230,"author":{"gitId":"chowRuiYan"},"content":"     * @return True if task list is empty. Returns false otherwise.","lastModifiedDate":"2021-09-03"},{"lineNumber":231,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":232,"author":{"gitId":"chowRuiYan"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-09-03"},{"lineNumber":233,"author":{"gitId":"chowRuiYan"},"content":"        return taskList.isEmpty();","lastModifiedDate":"2021-09-03"},{"lineNumber":234,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":235,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":236,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":237,"author":{"gitId":"chowRuiYan"},"content":"     * Returns a String representation of all the Task objects in TaskList.","lastModifiedDate":"2021-09-03"},{"lineNumber":238,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":239,"author":{"gitId":"chowRuiYan"},"content":"     * @return String representation of all the tasks in task list.","lastModifiedDate":"2021-09-03"},{"lineNumber":240,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":241,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":242,"author":{"gitId":"chowRuiYan"},"content":"    public String toString() {","lastModifiedDate":"2021-09-03"},{"lineNumber":243,"author":{"gitId":"chowRuiYan"},"content":"        String str \u003d \"\";","lastModifiedDate":"2021-09-03"},{"lineNumber":244,"author":{"gitId":"chowRuiYan"},"content":"        int size \u003d taskList.size();","lastModifiedDate":"2021-09-03"},{"lineNumber":245,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":246,"author":{"gitId":"chowRuiYan"},"content":"        for (int i \u003d 0; i \u003c size - 1; i++) {","lastModifiedDate":"2021-09-03"},{"lineNumber":247,"author":{"gitId":"chowRuiYan"},"content":"            str +\u003d String.format(\"%d.%s\\n\", i + 1, taskList.get(i));","lastModifiedDate":"2021-09-03"},{"lineNumber":248,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":249,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":250,"author":{"gitId":"chowRuiYan"},"content":"        str +\u003d String.format(\"%d.%s\", size, taskList.get(size - 1));","lastModifiedDate":"2021-09-03"},{"lineNumber":251,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":252,"author":{"gitId":"chowRuiYan"},"content":"        return str;","lastModifiedDate":"2021-09-03"},{"lineNumber":253,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":254,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":255,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"chowRuiYan":255}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chowRuiYan"},"content":"package duke.task;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"     * Constructor for a `Todo` task.","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":"     * @param isDone      Indicates whether the task has been completed.","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":"     * @param description Task description.","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":"    public Todo(boolean isDone, String description) {","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"        super(isDone, description);","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"    public String toString() {","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"    public String saveAsData() {","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":"        return 0 + \"\\n\" + super.saveAsData() + \"\\n\";","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"    public boolean checkIfAlreadyAdded(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"        boolean hasBeenAdded \u003d false;","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"        for (Task task : list) {","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"chowRuiYan"},"content":"            if (this.equals(task)) {","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"chowRuiYan"},"content":"                hasBeenAdded \u003d true;","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"chowRuiYan"},"content":"                break;","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"chowRuiYan"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"chowRuiYan"},"content":"        return hasBeenAdded;","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"chowRuiYan":38}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chowRuiYan"},"content":"package duke.ui;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"chowRuiYan"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"chowRuiYan"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"chowRuiYan"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"chowRuiYan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"chowRuiYan"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"chowRuiYan"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"chowRuiYan"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"chowRuiYan"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"chowRuiYan"},"content":"    private void flip() {","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"chowRuiYan"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"chowRuiYan"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"chowRuiYan"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"chowRuiYan"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"chowRuiYan"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"chowRuiYan"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"chowRuiYan"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"chowRuiYan"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"chowRuiYan"},"content":"        db.flip();","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"chowRuiYan"},"content":"        return db;","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"chowRuiYan":61}},{"path":"src/main/java/duke/ui/Gui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chowRuiYan"},"content":"package duke.ui;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"public class Gui extends Application {","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"    private Duke duke \u003d new Duke(\"src/data/Duke.txt\");","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"    private Scene scene;","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"chowRuiYan"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"chowRuiYan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Gui.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"chowRuiYan"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"chowRuiYan"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"chowRuiYan"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"chowRuiYan"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"chowRuiYan"},"content":"            stage.show();","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"chowRuiYan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"chowRuiYan"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"chowRuiYan":42}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chowRuiYan"},"content":"package duke.ui;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"chowRuiYan"},"content":"    private Image dukeShockImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDukeShocked.png\"));","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"chowRuiYan"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"chowRuiYan"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"chowRuiYan"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"chowRuiYan"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"chowRuiYan"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"chowRuiYan"},"content":"        String startUpMessage \u003d duke.startUp();","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"chowRuiYan"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(startUpMessage, dukeImage));","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"chowRuiYan"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"chowRuiYan"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"chowRuiYan"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"chowRuiYan"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"chowRuiYan"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"chowRuiYan"},"content":"        DialogBox inputDialogBox \u003d DialogBox.getUserDialog(input, userImage);","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"chowRuiYan"},"content":"        DialogBox responseDialogBox \u003d null;","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"chowRuiYan"},"content":"        String response;","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"chowRuiYan"},"content":"        try {","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"chowRuiYan"},"content":"            response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"chowRuiYan"},"content":"            responseDialogBox \u003d DialogBox.getDukeDialog(response, dukeImage);","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"chowRuiYan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"chowRuiYan"},"content":"            Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"chowRuiYan"},"content":"            response \u003d ui.displayDukeExceptionMessage(e);","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"chowRuiYan"},"content":"            responseDialogBox \u003d DialogBox.getDukeDialog(response + \"\\nYour input is: \" + input,","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"chowRuiYan"},"content":"                    dukeShockImage);","lastModifiedDate":"2021-09-11"},{"lineNumber":63,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":64,"author":{"gitId":"chowRuiYan"},"content":"        dialogContainer.getChildren().addAll(inputDialogBox, responseDialogBox);","lastModifiedDate":"2021-09-11"},{"lineNumber":65,"author":{"gitId":"chowRuiYan"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-02"},{"lineNumber":66,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":67,"author":{"gitId":"chowRuiYan"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":68,"author":{"gitId":"chowRuiYan"},"content":"            Stage stage \u003d (Stage) dialogContainer.getScene().getWindow();","lastModifiedDate":"2021-09-16"},{"lineNumber":69,"author":{"gitId":"chowRuiYan"},"content":"            stage.close();","lastModifiedDate":"2021-09-16"},{"lineNumber":70,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":71,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":72,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"chowRuiYan":72}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chowRuiYan"},"content":"package duke.ui;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":" * Deals with interactions with the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":"public class Ui {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"     * Constructor for a UI.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"    public Ui() {}","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"     * Displays UI when a task has been added.","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"     * @param taskList The TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":"     * @param task The Task that has been added.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":"     * @return String representation of addUi.","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"    public String displayAddUi(TaskList taskList, Task task) {","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + \"  \" + task + \"\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"                + \"Now you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"chowRuiYan"},"content":"     * Displays UI when a task has been marked as done.","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"chowRuiYan"},"content":"     * @param task The Task that has been marked as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"chowRuiYan"},"content":"     * @return String representation of doneUi.","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"chowRuiYan"},"content":"    public String displayDoneUi(Task task) {","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"chowRuiYan"},"content":"        if (task !\u003d null) {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"chowRuiYan"},"content":"            return \"Nice! I\u0027ve marked this task as done:\\n  \" + task;","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"chowRuiYan"},"content":"        } else {","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"chowRuiYan"},"content":"            return \"This task has already been done.\";","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"chowRuiYan"},"content":"     * Displays UI when a task has been deleted.","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"chowRuiYan"},"content":"     * @param taskList The TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"chowRuiYan"},"content":"     * @param task The Task that has been deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"chowRuiYan"},"content":"     * @return String representation of deleteUi.","lastModifiedDate":"2021-09-03"},{"lineNumber":51,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"chowRuiYan"},"content":"    public String displayDeleteUi(TaskList taskList, Task task) {","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"chowRuiYan"},"content":"        assert task !\u003d null : \"Task should not be null\";","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"chowRuiYan"},"content":"        return \"Noted. I\u0027ve removed this task:\\n  \" + task + \"\\nNow you have \"","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"chowRuiYan"},"content":"                + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"chowRuiYan"},"content":"     * Displays UI when a command to display TaskList has been given.","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"chowRuiYan"},"content":"     * @param taskList The TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"chowRuiYan"},"content":"     * @return String representation of listUi.","lastModifiedDate":"2021-09-03"},{"lineNumber":64,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"chowRuiYan"},"content":"    public String displayListUi(TaskList taskList) {","lastModifiedDate":"2021-09-02"},{"lineNumber":66,"author":{"gitId":"chowRuiYan"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"chowRuiYan"},"content":"            return \"You do not have any outstanding task. Yay!\";","lastModifiedDate":"2021-09-02"},{"lineNumber":68,"author":{"gitId":"chowRuiYan"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"chowRuiYan"},"content":"            return \"Here are the tasks in your list:\\n\" + taskList;","lastModifiedDate":"2021-09-05"},{"lineNumber":70,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"chowRuiYan"},"content":"     * Displays UI when a command to exit Duke has been given.","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":76,"author":{"gitId":"chowRuiYan"},"content":"     * @return String representation of exitUi.","lastModifiedDate":"2021-09-03"},{"lineNumber":77,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"chowRuiYan"},"content":"    public String displayExitUi() {","lastModifiedDate":"2021-09-02"},{"lineNumber":79,"author":{"gitId":"chowRuiYan"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-09-02"},{"lineNumber":80,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"chowRuiYan"},"content":"     * Displays UI when an unknown command has been given.","lastModifiedDate":"2021-08-31"},{"lineNumber":84,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":85,"author":{"gitId":"chowRuiYan"},"content":"     * @return String representation of unknownUi.","lastModifiedDate":"2021-09-03"},{"lineNumber":86,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"chowRuiYan"},"content":"    public String displayUnknownUi() {","lastModifiedDate":"2021-09-02"},{"lineNumber":88,"author":{"gitId":"chowRuiYan"},"content":"        return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2021-09-03"},{"lineNumber":89,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"chowRuiYan"},"content":"     * Displays UI when a command to find a keyword has been given.","lastModifiedDate":"2021-08-31"},{"lineNumber":93,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"chowRuiYan"},"content":"     * @param relatedList The list of related tasks found in TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"chowRuiYan"},"content":"     * @return String representation of findUi.","lastModifiedDate":"2021-09-03"},{"lineNumber":96,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"chowRuiYan"},"content":"    public String displayFindUi(ArrayList\u003cTask\u003e relatedList) {","lastModifiedDate":"2021-09-03"},{"lineNumber":98,"author":{"gitId":"chowRuiYan"},"content":"        if (relatedList.isEmpty()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"chowRuiYan"},"content":"            return \"Unfortunately, there\u0027s no task that matches your keyword :-(\";","lastModifiedDate":"2021-09-02"},{"lineNumber":100,"author":{"gitId":"chowRuiYan"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"chowRuiYan"},"content":"            String header \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":102,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"chowRuiYan"},"content":"            String list \u003d \"\";","lastModifiedDate":"2021-09-02"},{"lineNumber":104,"author":{"gitId":"chowRuiYan"},"content":"            int size \u003d relatedList.size();","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"chowRuiYan"},"content":"            for (int i \u003d 0; i \u003c size - 1; i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"chowRuiYan"},"content":"                list +\u003d String.format(\"%d.%s\\n\", i + 1, relatedList.get(i));","lastModifiedDate":"2021-09-02"},{"lineNumber":108,"author":{"gitId":"chowRuiYan"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"chowRuiYan"},"content":"            list +\u003d String.format(\"%d.%s\", size, relatedList.get(size - 1));","lastModifiedDate":"2021-09-02"},{"lineNumber":110,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"chowRuiYan"},"content":"            return header + list;","lastModifiedDate":"2021-09-02"},{"lineNumber":112,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":117,"author":{"gitId":"chowRuiYan"},"content":"     * Displays UI when a `DukeException` is thrown.","lastModifiedDate":"2021-09-03"},{"lineNumber":118,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":119,"author":{"gitId":"chowRuiYan"},"content":"     * @param e The DukeException thrown.","lastModifiedDate":"2021-09-03"},{"lineNumber":120,"author":{"gitId":"chowRuiYan"},"content":"     * @return String representation of the `DukeException`.","lastModifiedDate":"2021-09-03"},{"lineNumber":121,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":122,"author":{"gitId":"chowRuiYan"},"content":"    public String displayDukeExceptionMessage(DukeException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":123,"author":{"gitId":"chowRuiYan"},"content":"        return e.getMessage();","lastModifiedDate":"2021-09-02"},{"lineNumber":124,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":127,"author":{"gitId":"chowRuiYan"},"content":"     * Greets the user.","lastModifiedDate":"2021-09-03"},{"lineNumber":128,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":129,"author":{"gitId":"chowRuiYan"},"content":"     * @return A simple greeting.","lastModifiedDate":"2021-09-03"},{"lineNumber":130,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":131,"author":{"gitId":"chowRuiYan"},"content":"    public String greetNewUser() {","lastModifiedDate":"2021-09-06"},{"lineNumber":132,"author":{"gitId":"chowRuiYan"},"content":"        return \"No previous data found.\\nLet\u0027s start a new To-Do List!\\n\\nHello! I\u0027m Duke\\nWhat can I do for you?\";","lastModifiedDate":"2021-09-06"},{"lineNumber":133,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":136,"author":{"gitId":"chowRuiYan"},"content":"     * Greets existing user.","lastModifiedDate":"2021-09-03"},{"lineNumber":137,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":138,"author":{"gitId":"chowRuiYan"},"content":"     * @return A greeting for existing user.","lastModifiedDate":"2021-09-03"},{"lineNumber":139,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":140,"author":{"gitId":"chowRuiYan"},"content":"    public String greetExistingUser(TaskList taskList) {","lastModifiedDate":"2021-09-06"},{"lineNumber":141,"author":{"gitId":"chowRuiYan"},"content":"        return \"Welcome back! :-)\\nAs far as I can recall...\\n\" + displayListUi(taskList);","lastModifiedDate":"2021-09-06"},{"lineNumber":142,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":143,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"chowRuiYan":143}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"chowRuiYan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.scene.image.*?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.2\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":"        \u003cLabel fx:id\u003d\"dialog\" snapToPixel\u003d\"false\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"chowRuiYan":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"chowRuiYan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.2\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"557.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"chowRuiYan":16}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chowRuiYan"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"import duke.command.CommandUnknown;","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"    public void parse_incompleteStringInput_dukeExceptionThrown() {","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"            Parser.parse(\"done\");","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"            fail();","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"            assertEquals(\"Insufficient input received! Please indicate the task number of the completed task.\",","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"                    e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"    public void parse_unknownCommand_success() {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"            assertEquals(new CommandUnknown(), Parser.parse(\"blah\"));","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"            fail();","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"chowRuiYan":33}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chowRuiYan"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"    public void taskListConstructor_emptyString_dukeExceptionThrown() {","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"            TaskList taskList \u003d new TaskList(\"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"            fail();","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"            assertEquals(\"No previous data found.\\nLet\u0027s start a new To-Do List!\", e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":"    public void size_emptyTaskList_success() {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"        assertEquals(0, taskList.size());","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"    public void isEmpty_emptyTaskList_success() {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"chowRuiYan"},"content":"        assertEquals(true, taskList.isEmpty());","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"chowRuiYan":33}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chowRuiYan"},"content":"todo","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"Deadline submit homework /by Wednesday","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"toDo make supper","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"blah","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"done 1","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"evenT Sun Down Marathon /at 4 April 6pm","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"todo return borrowed books from the library","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":"deadline copy homework /by 5 minutes later","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"delete","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":"delete 1","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"done 8","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"todo fly in the sky","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"done","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"done 4","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"delete 4","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"ByE","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"chowRuiYan":20}}]
