[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Zenlzb":1,"-":23}},{"path":"src/main/java/duke/DateTimeHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":" * Encapsulates a class that handles parsing of date-time inputs","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":"public class DateTimeHandler {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":"    String[] formats \u003d {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":"            \"dd-MM-yyyy hh:mm a\",","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":"            \"dd-MM-yyyy HHmm\",","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"            \"dd/MM/yyyy hh:mm a\",","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"            \"dd/MM/yyyy HHmm\"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"    };","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":"    private final DateTimeFormatter[] dtfList \u003d new DateTimeFormatter[formats.length];","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Zenlzb"},"content":"    public DateTimeHandler() {","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Zenlzb"},"content":"        for(int i\u003d0; i\u003cformats.length; i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Zenlzb"},"content":"            dtfList[i] \u003d DateTimeFormatter.ofPattern(formats[i]);","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Zenlzb"},"content":"     * Returns whether or not the input string can be parsed by the given formatter","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Zenlzb"},"content":"     * @param dtf The DateTimeFormatter object","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"Zenlzb"},"content":"     * @param s The string to be parsed","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"Zenlzb"},"content":"     * @return Whether or not the string can be parsed","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"Zenlzb"},"content":"    private boolean tryToParse(DateTimeFormatter dtf, String s) {","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Zenlzb"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Zenlzb"},"content":"            LocalDateTime.parse(s, dtf);","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Zenlzb"},"content":"        } catch(DateTimeParseException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Zenlzb"},"content":"            return false;","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Zenlzb"},"content":"        return true;","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"Zenlzb"},"content":"     * Returns a LocalDateTime if able to parse the given string using one of the DateTimeFormatters in dtfList","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"Zenlzb"},"content":"     * @param s String to be parsed","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"Zenlzb"},"content":"     * @return The created LocalDateTime object if the string can be parsed, null if it cannot be parsed.","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"Zenlzb"},"content":"    public LocalDateTime parseDate(String s) {","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"Zenlzb"},"content":"        for (DateTimeFormatter dateTimeFormatter : dtfList) {","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"Zenlzb"},"content":"            if (tryToParse(dateTimeFormatter, s)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"Zenlzb"},"content":"                return LocalDateTime.parse(s, dateTimeFormatter);","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"Zenlzb"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"Zenlzb"},"content":"        return null;","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"Zenlzb"},"content":"     * Returns a String array of valid date formats","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"Zenlzb"},"content":"     * @return The String array containing the valid date formats","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"Zenlzb"},"content":"    public String[] getFormatList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"Zenlzb"},"content":"        String[] res \u003d new String[formats.length+1];","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"Zenlzb"},"content":"        res[0] \u003d \"Valid date formats:\";","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"Zenlzb"},"content":"        System.arraycopy(formats, 0, res, 1, formats.length);","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"Zenlzb"},"content":"        return res;","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"Zenlzb"},"content":"     * Returns a String to be printed when an invalid format is entered","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"Zenlzb"},"content":"     * @return The String to be printed","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"Zenlzb"},"content":"    public String invalidFormat() {","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"Zenlzb"},"content":"        return \"Please enter a valid date-time format. Type formats to see valid formats\";","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"Zenlzb"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Zenlzb":77}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":" * Encapsulates a deadline task with a deadline","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":"    private LocalDateTime deadlineDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":"    public Deadline(String description, Boolean completionStatus, LocalDateTime deadlineDate) {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":"        super(description, completionStatus);","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":"        this.deadlineDate \u003d deadlineDate;","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":"    public String typeIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"        return \"[D]\";","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"Zenlzb"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"Zenlzb"},"content":"        return super.toString() + \" (by: \" + deadlineDate + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"Zenlzb"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Zenlzb":25}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":" * Encapsulates the main Duke class which contains the main function to run the chat bot","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":"    private final UI ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":"    private final DateTimeHandler dth;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":"    private final TaskList taskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":"    private final Parser parser;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"    public Duke() {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"        ui \u003d new UI();","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Zenlzb"},"content":"        dth \u003d new DateTimeHandler();","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Zenlzb"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Zenlzb"},"content":"     * Runs the duke chat bot","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Zenlzb"},"content":"    public void run() {","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Zenlzb"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Zenlzb"},"content":"            storage.loadFile();","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Zenlzb"},"content":"            storage.readFromFile(taskList);","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Zenlzb"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Zenlzb"},"content":"            ui.print(\"The file could not be created\");","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Zenlzb"},"content":"        ui.welcomeMessage();","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Zenlzb"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"Zenlzb"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"Zenlzb"},"content":"            String input \u003d ui.readCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"Zenlzb"},"content":"            Command command \u003d parser.parse(input);","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"Zenlzb"},"content":"            if (command \u003d\u003d null) {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"Zenlzb"},"content":"                ui.unrecognisedCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"Zenlzb"},"content":"                continue;","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"Zenlzb"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"Zenlzb"},"content":"            command.execute(taskList, storage, ui, dth);","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"Zenlzb"},"content":"            isExit \u003d command.isExit();","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"Zenlzb"},"content":"            try {","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Zenlzb"},"content":"                storage.writeToFile(taskList);","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"Zenlzb"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"Zenlzb"},"content":"                ui.print(\"Write Error\");","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"Zenlzb"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"Zenlzb"},"content":"        ui.goodByeMessage();","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"Zenlzb"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"Zenlzb"},"content":"        new Duke().run();","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Zenlzb":53,"-":3}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":" * Encapsulates an event task with a start date","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":"    private LocalDateTime startDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":"    public Event(String description, Boolean completionStatus, LocalDateTime startDate) {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":"        super(description, completionStatus);","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"    public String typeIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":"        return \"[E]\";","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"Zenlzb"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"Zenlzb"},"content":"        return super.toString() + \" (at: \" + startDate + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"Zenlzb"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Zenlzb":24}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"import duke.commands.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":" * Encapsulates a parser class which parses user input","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":" * and creates a different command object depending on the input","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":"public class Parser {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":"    private final Command[] commandList \u003d {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":"            new ListCommand(\"\"),","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":"            new ByeCommand(\"\"),","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":"            new TodoCommand(\"\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"            new FormatsCommand(\"\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"            new DoneCommand(\"\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"            new DeleteCommand(\"\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":"            new DeadlineCommand(\"\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"            new EventCommand(\"\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Zenlzb"},"content":"            new FindCommand(\"\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Zenlzb"},"content":"    };","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"Zenlzb"},"content":"     * Takes in a string input from the user and returns the invoked command object.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Zenlzb"},"content":"     * @param input The string input by the user","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Zenlzb"},"content":"     * @return The created command object","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Zenlzb"},"content":"    public Command parse(String input) {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"Zenlzb"},"content":"        for(Command c : commandList) {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"Zenlzb"},"content":"            if(input.startsWith(c.startsWith())) {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Zenlzb"},"content":"                if (input.equals(c.startsWith())) {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"Zenlzb"},"content":"                    return c.of(\"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"Zenlzb"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"Zenlzb"},"content":"                return c.of(input.substring(c.startsWith().length()+1));","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"Zenlzb"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"Zenlzb"},"content":"        return null;","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"Zenlzb"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"Zenlzb":40}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"import java.io.*;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":" * Encapsulates a class which interacts with the output file to save data after","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":"public class Storage {","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":"    private File txt;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"     * Loads file to save task list data","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"     * @throws Exception IO or Security Exception thrown by createNewFile","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Zenlzb"},"content":"    public void loadFile() throws Exception {","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Zenlzb"},"content":"        Path p \u003d Paths.get(\"data\");","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Zenlzb"},"content":"        if (!Files.exists(p)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Zenlzb"},"content":"            Files.createDirectories(p);","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Zenlzb"},"content":"        File f \u003d Paths.get(\"data\", \"duke.txt\").toFile();","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Zenlzb"},"content":"        f.createNewFile();","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Zenlzb"},"content":"        txt \u003d f;","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Zenlzb"},"content":"     * Reads the output file and loads any saved tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"Zenlzb"},"content":"     * @param t the TaskList object to save the list of tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"Zenlzb"},"content":"    public void readFromFile(TaskList t) {","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Zenlzb"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Zenlzb"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(txt));","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Zenlzb"},"content":"            String curLine;","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Zenlzb"},"content":"            while ((curLine \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Zenlzb"},"content":"                String[] parts \u003d curLine.split(\" \", 3);","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"Zenlzb"},"content":"                String[] descriptionParts;","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"Zenlzb"},"content":"                char taskType \u003d parts[0].charAt(1);","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"Zenlzb"},"content":"                boolean completionStatus \u003d parts[1].charAt(1) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"Zenlzb"},"content":"                switch(taskType){","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Zenlzb"},"content":"                case \u0027T\u0027:","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"Zenlzb"},"content":"                    t.addToList(new Todo(parts[2], completionStatus));","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"Zenlzb"},"content":"                    break;","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"Zenlzb"},"content":"                case \u0027D\u0027:","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"Zenlzb"},"content":"                    descriptionParts \u003d parts[2].split(\" \\\\(by: \");","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"Zenlzb"},"content":"                    Deadline d \u003d new Deadline(descriptionParts[0], completionStatus, LocalDateTime.parse(descriptionParts[1].substring(0, descriptionParts[1].length()-1)));","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"Zenlzb"},"content":"                    t.addToList(d);","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"Zenlzb"},"content":"                    break;","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"Zenlzb"},"content":"                case \u0027E\u0027:","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"Zenlzb"},"content":"                    descriptionParts \u003d parts[2].split(\" \\\\(at: \");","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"Zenlzb"},"content":"                    Event e \u003d new Event(descriptionParts[0], completionStatus, LocalDateTime.parse(descriptionParts[1].substring(0, descriptionParts[1].length()-1)));","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"Zenlzb"},"content":"                    t.addToList(e);","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"Zenlzb"},"content":"                    break;","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"Zenlzb"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"Zenlzb"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"Zenlzb"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"Zenlzb"},"content":"            System.out.println(\"Read error: \" + e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"Zenlzb"},"content":"     * Writes the task list stored to an output file to persist its data","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"Zenlzb"},"content":"     * @param t The TaskList object that stores the task list to be written to the file","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"Zenlzb"},"content":"     * @throws Exception IO Exception from BufferedWriter","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"Zenlzb"},"content":"    public void writeToFile(TaskList t) throws Exception {","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"Zenlzb"},"content":"        BufferedWriter bw \u003d new BufferedWriter(new FileWriter(txt));","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"Zenlzb"},"content":"        String curLine;","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"Zenlzb"},"content":"        for(int i\u003d0; i\u003ct.size(); i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"Zenlzb"},"content":"            curLine \u003d t.getTask(i).toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"Zenlzb"},"content":"            bw.write(curLine + \"\\n\");","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"Zenlzb"},"content":"        bw.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"Zenlzb"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Zenlzb":81}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":" * Encapsulates the abstract task class that concrete task implementations extend from","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":"    private final String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":"    private Boolean completionStatus;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":"    public Task(String description, Boolean completionStatus) {","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":"        this.completionStatus \u003d completionStatus;","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"    public void completeTask() {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"        completionStatus \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Zenlzb"},"content":"     * Returns a String icon depending on whether the task is complete or not","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Zenlzb"},"content":"     * @return The String icon","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Zenlzb"},"content":"    public String completionIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"Zenlzb"},"content":"        return completionStatus ? \"[X]\" : \"[-]\";","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"Zenlzb"},"content":"     * Returns a String icon depending on what type the task is","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Zenlzb"},"content":"     * @return The String icon","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"Zenlzb"},"content":"    public abstract String typeIcon();","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"Zenlzb"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"Zenlzb"},"content":"        return typeIcon() + \" \" + completionIcon() + \" \" + description;","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"Zenlzb"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Zenlzb":39}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"import java.util.List;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":" * Encapsulates a class that stores the array list of tasks and methods that operate on it","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":"public class TaskList {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":"    private final List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":"     * Adds the provided task to list","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"     * @param t The Provided Task object","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":"    public void addToList(Task t) {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"        list.add(t);","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Zenlzb"},"content":"     * Returns a String that describes how many tasks are in the list","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Zenlzb"},"content":"     * @return The String that describes how many tasks are in the list","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Zenlzb"},"content":"    public String numOfTasks() {","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Zenlzb"},"content":"        return \"Now you have \" + list.size() + \" task\" + (list.size() !\u003d 1 ? \"s\" : \"\") + \" in the list\";","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Zenlzb"},"content":"     * Returns a String containing all the tasks in the task list","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"Zenlzb"},"content":"     * @return The String containing all the tasks in the task list","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"Zenlzb"},"content":"    public String printList() {","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Zenlzb"},"content":"        StringBuilder res \u003d new StringBuilder();","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Zenlzb"},"content":"        for (int counter \u003d 1; counter\u003c\u003dlist.size(); counter++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Zenlzb"},"content":"            res.append(counter).append(\". \").append(list.get(counter - 1));","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Zenlzb"},"content":"            if (counter !\u003d list.size()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Zenlzb"},"content":"                res.append(\"\\n     \");","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"Zenlzb"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"Zenlzb"},"content":"        return res.toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"Zenlzb"},"content":"     * Returns a String array to be printed by the UI when a new task is added","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"Zenlzb"},"content":"     * @param t The Task that was added","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"Zenlzb"},"content":"     * @return The String array to be printed","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"Zenlzb"},"content":"    public String[] taskAddedMessage(Task t) {","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"Zenlzb"},"content":"        return new String[]{","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"Zenlzb"},"content":"                \"Got it, I\u0027ve added this task:\",","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"Zenlzb"},"content":"                t.toString(),","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"Zenlzb"},"content":"                numOfTasks()","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"Zenlzb"},"content":"        };","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"Zenlzb"},"content":"     * Returns a String array to be printed by the UI when a task is completed","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"Zenlzb"},"content":"     * @param t The Task that was completed","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"Zenlzb"},"content":"     * @return The String array to be printed","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"Zenlzb"},"content":"    public String[] taskCompletedMessage(Task t) {","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"Zenlzb"},"content":"        return new String[]{","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"Zenlzb"},"content":"                \"Nice! I\u0027ve marked this task as done:\",","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"Zenlzb"},"content":"                t.toString(),","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"Zenlzb"},"content":"                numOfTasks()","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"Zenlzb"},"content":"        };","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"Zenlzb"},"content":"     * Returns a String array to be printed by the UI when a task is deleted","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"Zenlzb"},"content":"     * @param t The Task that was deleted","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"Zenlzb"},"content":"     * @return The String array to be printed","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"Zenlzb"},"content":"    public String[] taskDeletedMessage(Task t) {","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"Zenlzb"},"content":"        return new String[]{","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"Zenlzb"},"content":"                \"Noted. I\u0027ve removed this task:\",","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"Zenlzb"},"content":"                t.toString(),","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"Zenlzb"},"content":"                numOfTasks()","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"Zenlzb"},"content":"        };","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"Zenlzb"},"content":"    public int size() {","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"Zenlzb"},"content":"        return list.size();","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"Zenlzb"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"Zenlzb"},"content":"        return list.get(index);","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"Zenlzb"},"content":"     * Removes the task at the give index in the task list","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"Zenlzb"},"content":"     * @param index The index at which the task should be deleted","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"Zenlzb"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"Zenlzb"},"content":"        list.remove(index);","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"Zenlzb"},"content":"    public String[] findInTasks(String s) {","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"Zenlzb"},"content":"        List\u003cString\u003e res \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"Zenlzb"},"content":"        res.add(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"Zenlzb"},"content":"        for (Task t : list) {","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"Zenlzb"},"content":"            if(t.toString().contains(s)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"Zenlzb"},"content":"                res.add(t.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"Zenlzb"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"Zenlzb"},"content":"        String[] result \u003d  new String[res.size()];","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"Zenlzb"},"content":"        result \u003d res.toArray(result);","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"Zenlzb"},"content":"        return result;","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"Zenlzb"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Zenlzb":118}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":" * Encapsulates a task that only contains a description, classified as a todo","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":"    public Todo(String description, boolean completionStatus) {","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":"        super(description, completionStatus);","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":"    public String typeIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"        return \"[T]\";","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Zenlzb":16}},{"path":"src/main/java/duke/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":" * Encapsulates a class that contains methods for interacting with the user","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":"public class UI {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":"    private final Scanner sc;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":"    public UI() {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"     * Reads the next user input","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"     * @return The user input as a String","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Zenlzb"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"Zenlzb"},"content":"        return sc.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Zenlzb"},"content":"     * Returns a String that is the provided String wrapped with divider lines","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Zenlzb"},"content":"     * @param s The provided String","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Zenlzb"},"content":"     * @return The new String that is formatted","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"Zenlzb"},"content":"    public String formatMessage(String s) {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Zenlzb"},"content":"        return \"    ____________________________________________________________\\n     \" +","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Zenlzb"},"content":"                s + \"\\n\" +","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Zenlzb"},"content":"                \"    ____________________________________________________________\";","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"Zenlzb"},"content":"     * Returns a String that is all the Strings in the provided array wrapped with divider lines","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"Zenlzb"},"content":"     * @param messages The provided String Array","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"Zenlzb"},"content":"     * @return The new String that is formatted","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"Zenlzb"},"content":"    public String formatMessage(String[] messages) {","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"Zenlzb"},"content":"        StringBuilder res \u003d new StringBuilder(\"    ____________________________________________________________\" );","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"Zenlzb"},"content":"        for(String s : messages) {","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Zenlzb"},"content":"            res.append(\"\\n    \").append(s);","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"Zenlzb"},"content":"        res.append(\"\\n    ____________________________________________________________\");","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"Zenlzb"},"content":"        return res.toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"Zenlzb"},"content":"     * Prints the welcome message","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"Zenlzb"},"content":"    public void welcomeMessage() {","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"Zenlzb"},"content":"        print(\"Hello! I\u0027m duke.Duke\\n\" + \"     What can I do for you?\");","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"Zenlzb"},"content":"     * Prints the good bye message","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"Zenlzb"},"content":"    public void goodByeMessage() {","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"Zenlzb"},"content":"        print(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"Zenlzb"},"content":"     * Prints an error message upon receiving an unrecognised command","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"Zenlzb"},"content":"    public void unrecognisedCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"Zenlzb"},"content":"        print(\"That is not a recognised command\");","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"Zenlzb"},"content":"     * Prints out the given string after formatting it with formatMessage","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"Zenlzb"},"content":"     * @param s The provided String Array","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"Zenlzb"},"content":"    public void print(String s) {","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"Zenlzb"},"content":"        System.out.println(formatMessage(s));","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"Zenlzb"},"content":"     * Prints out the given string array after formatting it with formatMessage","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"Zenlzb"},"content":"     * @param s The provided String Array","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"Zenlzb"},"content":"    public void print(String[] s) {","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"Zenlzb"},"content":"        System.out.println(formatMessage(s));","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"Zenlzb"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Zenlzb":89}},{"path":"src/main/java/duke/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"package duke.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"import duke.DateTimeHandler;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":"import duke.UI;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":" * Encapsulates the bye command, for terminating the program.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":"    public ByeCommand(String arguments) {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"        super(\"\");","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"    public Command of(String arguments) {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"Zenlzb"},"content":"        return new ByeCommand(\"\");","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"Zenlzb"},"content":"    public void execute(TaskList tl, Storage s, UI ui, DateTimeHandler dth) {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"Zenlzb"},"content":"    public String startsWith() {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"Zenlzb"},"content":"        return \"bye\";","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"Zenlzb"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"Zenlzb"},"content":"        return true;","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"Zenlzb"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"Zenlzb":36}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"package duke.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"import duke.DateTimeHandler;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":"import duke.UI;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":" * Encapsulates the abstract command class that concrete command implementations extend from","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":"    private String arguments;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"    public Command(String arguments) {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Zenlzb"},"content":"     * Returns a new command with the provided String as argument. Factory method","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Zenlzb"},"content":"     * @param arguments Arguments to be passed into new Command object","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Zenlzb"},"content":"     * @return The created Command","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Zenlzb"},"content":"    public abstract Command of(String arguments);","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Zenlzb"},"content":"     * Executes the command","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"Zenlzb"},"content":"     * @param tl The TaskList object to interact with the list of tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"Zenlzb"},"content":"     * @param s The Storage object to interact with the output file","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Zenlzb"},"content":"     * @param ui The UI object to interact with the user interface","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"Zenlzb"},"content":"     * @param dth The DateTimeHandler object to interact with date-times.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"Zenlzb"},"content":"    public abstract void execute(TaskList tl, Storage s, UI ui, DateTimeHandler dth);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"Zenlzb"},"content":"     * Returns the prefix of the command","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"Zenlzb"},"content":"     * @return The command prefix","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"Zenlzb"},"content":"    public abstract String startsWith();","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"Zenlzb"},"content":"     * Closes the program if true","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"Zenlzb"},"content":"     * @return Boolean to determine whether or not to close the program","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"Zenlzb"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"Zenlzb"},"content":"        return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"Zenlzb"},"content":"     * Returns the arguments for the command","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"Zenlzb"},"content":"     * @return The command arguments","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"Zenlzb"},"content":"    public String getArguments() {","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"Zenlzb"},"content":"        return arguments;","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"Zenlzb"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"Zenlzb":60}},{"path":"src/main/java/duke/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"package duke.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"import duke.DateTimeHandler;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"import duke.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":"import duke.UI;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":" * Encapsulates the deadline command, used to create a deadline task","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"    public DeadlineCommand(String arguments) {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":"        super(arguments);","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Zenlzb"},"content":"    public Command of(String arguments) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Zenlzb"},"content":"        return new DeadlineCommand(arguments);","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Zenlzb"},"content":"    public void execute(TaskList tl, Storage s, UI ui, DateTimeHandler dth) {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Zenlzb"},"content":"        String args \u003d super.getArguments();","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Zenlzb"},"content":"        if (args.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"Zenlzb"},"content":"            ui.print(\"Please enter the name of the task after deadline\");","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"Zenlzb"},"content":"            return;","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"Zenlzb"},"content":"        if (!args.contains(\"/by\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"Zenlzb"},"content":"            ui.print(\"Please enter the deadline of the task after /by\");","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"Zenlzb"},"content":"            return;","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"Zenlzb"},"content":"        String[] parts \u003d args.split(\" /by \");","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"Zenlzb"},"content":"        LocalDateTime deadlineDate \u003d dth.parseDate(parts[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"Zenlzb"},"content":"        if (deadlineDate \u003d\u003d null) {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"Zenlzb"},"content":"            ui.print(dth.invalidFormat());","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"Zenlzb"},"content":"            return;","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"Zenlzb"},"content":"        Deadline d \u003d new Deadline(parts[0], false, deadlineDate);","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"Zenlzb"},"content":"        tl.addToList(d);","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"Zenlzb"},"content":"        ui.print(tl.taskAddedMessage(d));","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"Zenlzb"},"content":"    public String startsWith() {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"Zenlzb"},"content":"        return \"deadline\";","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"Zenlzb"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Zenlzb":51}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"package duke.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"import duke.DateTimeHandler;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"import duke.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":"import duke.UI;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":" * Encapsulates the delete command, used to delete tasks from the task list","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"    public DeleteCommand(String arguments) {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"        super(arguments);","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Zenlzb"},"content":"    public Command of(String arguments) {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Zenlzb"},"content":"        return new DeleteCommand(arguments);","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Zenlzb"},"content":"    public void execute(TaskList tl, Storage s, UI ui, DateTimeHandler dth) {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Zenlzb"},"content":"        String args \u003d super.getArguments();","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Zenlzb"},"content":"        if (args.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Zenlzb"},"content":"            ui.print(\"Please enter a number after delete\");","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Zenlzb"},"content":"            return;","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"Zenlzb"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Zenlzb"},"content":"            int index \u003d Integer.parseInt(args);","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"Zenlzb"},"content":"            if (index \u003e tl.size()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"Zenlzb"},"content":"                ui.print(\"There are only \" + tl.size() + \" tasks\");","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"Zenlzb"},"content":"                return;","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"Zenlzb"},"content":"            } else if (index \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"Zenlzb"},"content":"                ui.print(\"There is no task 0\");","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"Zenlzb"},"content":"                return;","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"Zenlzb"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"Zenlzb"},"content":"            Task t \u003d tl.getTask(index - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"Zenlzb"},"content":"            tl.removeTask(index - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"Zenlzb"},"content":"            ui.print(tl.taskDeletedMessage(t));","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"Zenlzb"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"Zenlzb"},"content":"            ui.print(\"Please enter a number after delete\");","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"Zenlzb"},"content":"    public String startsWith() {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"Zenlzb"},"content":"        return \"delete\";","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"Zenlzb"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Zenlzb":52}},{"path":"src/main/java/duke/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"package duke.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"import duke.DateTimeHandler;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"import duke.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":"import duke.UI;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":" * Encapsulates the done command, used to complete tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"    public DoneCommand(String arguments) {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"        super(arguments);","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Zenlzb"},"content":"    public Command of(String arguments) {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Zenlzb"},"content":"        return new DoneCommand(arguments);","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Zenlzb"},"content":"    public void execute(TaskList tl, Storage s, UI ui, DateTimeHandler dth) {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Zenlzb"},"content":"        String args \u003d super.getArguments();","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Zenlzb"},"content":"        if (args.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Zenlzb"},"content":"            ui.print(\"Please enter a number after done\");","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Zenlzb"},"content":"            return;","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"Zenlzb"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Zenlzb"},"content":"            int index \u003d Integer.parseInt(args);","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"Zenlzb"},"content":"            if (index \u003e tl.size()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"Zenlzb"},"content":"                ui.print(\"There are only \" + tl.size() + \" tasks\");","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"Zenlzb"},"content":"                return;","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"Zenlzb"},"content":"            } else if (index \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"Zenlzb"},"content":"                ui.print(\"There is no task 0\");","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"Zenlzb"},"content":"                return;","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"Zenlzb"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"Zenlzb"},"content":"            Task t \u003d tl.getTask(index - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"Zenlzb"},"content":"            t.completeTask();","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"Zenlzb"},"content":"            ui.print(tl.taskCompletedMessage(t));","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"Zenlzb"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"Zenlzb"},"content":"            ui.print(\"Please enter a number after done\");","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"Zenlzb"},"content":"    public String startsWith() {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"Zenlzb"},"content":"        return \"done\";","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"Zenlzb"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Zenlzb":52}},{"path":"src/main/java/duke/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"package duke.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"import duke.DateTimeHandler;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"import duke.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":"import duke.UI;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":" * Encapsulates the event command, used to create event tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":"    public EventCommand(String arguments) {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"        super(arguments);","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Zenlzb"},"content":"    public Command of(String arguments) {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"Zenlzb"},"content":"        return new EventCommand(arguments);","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Zenlzb"},"content":"    public void execute(TaskList tl, Storage s, UI ui, DateTimeHandler dth) {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Zenlzb"},"content":"        String args \u003d super.getArguments();","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"Zenlzb"},"content":"        if (args.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"Zenlzb"},"content":"            ui.print(\"Please enter the name of the task after event\");","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Zenlzb"},"content":"            return;","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"Zenlzb"},"content":"        if (!args.contains(\"/at\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"Zenlzb"},"content":"            ui.print(\"Please enter the start date of the task after /at\");","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"Zenlzb"},"content":"            return;","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"Zenlzb"},"content":"        String[] parts \u003d args.split(\" /at \");","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"Zenlzb"},"content":"        LocalDateTime startDate \u003d dth.parseDate(parts[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"Zenlzb"},"content":"        if (startDate \u003d\u003d null) {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"Zenlzb"},"content":"            ui.print(dth.invalidFormat());","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"Zenlzb"},"content":"            return;","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"Zenlzb"},"content":"        Event e \u003d new Event(parts[0], false, startDate);","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"Zenlzb"},"content":"        tl.addToList(e);","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"Zenlzb"},"content":"        ui.print(tl.taskAddedMessage(e));","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"Zenlzb"},"content":"    public String startsWith() {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"Zenlzb"},"content":"        return \"event\";","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"Zenlzb"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Zenlzb":53}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"package duke.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"import duke.DateTimeHandler;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":"import duke.UI;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":"    public FindCommand(String arguments) {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":"        super(arguments);","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"    public Command of(String arguments) {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"        return new FindCommand(arguments);","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Zenlzb"},"content":"    public void execute(TaskList tl, Storage s, UI ui, DateTimeHandler dth) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Zenlzb"},"content":"        String args \u003d super.getArguments();","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Zenlzb"},"content":"        if (args.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"Zenlzb"},"content":"            ui.print(\"Please enter a search term after find\");","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Zenlzb"},"content":"            return;","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Zenlzb"},"content":"        String[] results \u003d tl.findInTasks(args);","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Zenlzb"},"content":"        ui.print(results);","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Zenlzb"},"content":"    public String startsWith() {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"Zenlzb"},"content":"        return \"find\";","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"Zenlzb"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Zenlzb":34}},{"path":"src/main/java/duke/commands/FormatsCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"package duke.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"import duke.DateTimeHandler;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":"import duke.UI;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":" * Encapsulates the formats command, used to print the valid date-time formats","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":"public class FormatsCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":"    public FormatsCommand(String arguments) {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"        super(arguments);","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"    public Command of(String arguments) {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Zenlzb"},"content":"        return new FormatsCommand(\"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"Zenlzb"},"content":"    public void execute(TaskList tl, Storage s, UI ui, DateTimeHandler dth) {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Zenlzb"},"content":"        ui.print(dth.getFormatList());","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Zenlzb"},"content":"    public String startsWith() {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"Zenlzb"},"content":"        return \"formats\";","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Zenlzb"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Zenlzb":31}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"package duke.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"import duke.DateTimeHandler;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":"import duke.UI;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":" * Encapsulates the list command, used to list out all the tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":"    public ListCommand(String arguments) {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"        super(\"\");","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"    public void execute(TaskList tl, Storage s, UI ui, DateTimeHandler dth) {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Zenlzb"},"content":"        ui.print(tl.printList());","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"Zenlzb"},"content":"    public String startsWith() {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"Zenlzb"},"content":"        return \"list\";","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"Zenlzb"},"content":"    public Command of(String arguments) {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"Zenlzb"},"content":"        return new ListCommand(arguments);","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"Zenlzb"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"Zenlzb":31}},{"path":"src/main/java/duke/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"package duke.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"import duke.DateTimeHandler;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":"import duke.Todo;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":"import duke.UI;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":" * Encapsulates the todo command, used to create a todo task","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"    public TodoCommand(String arguments) {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"        super(arguments);","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Zenlzb"},"content":"    public Command of(String arguments) {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Zenlzb"},"content":"        return new TodoCommand(arguments);","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Zenlzb"},"content":"    public void execute(TaskList tl, Storage s, UI ui, DateTimeHandler dth) {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Zenlzb"},"content":"        String args \u003d super.getArguments();","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Zenlzb"},"content":"        if (args.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Zenlzb"},"content":"            ui.print(\"Please enter the name of the task after todo\");","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Zenlzb"},"content":"            return;","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"Zenlzb"},"content":"        Todo t \u003d new Todo(args, false);","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Zenlzb"},"content":"        tl.addToList(t);","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"Zenlzb"},"content":"        ui.print(tl.taskAddedMessage(t));","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"Zenlzb"},"content":"    public String startsWith() {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"Zenlzb"},"content":"        return \"todo\";","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"Zenlzb"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Zenlzb":39}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":"class DeadlineTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":"    DateTimeHandler dth \u003d new DateTimeHandler();","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":"    Deadline d \u003d new Deadline(\"test1\", false, dth.parseDate(\"22/08/2021 1500\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":"    public void testDeadline() {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":"        assertEquals(d.typeIcon(), \"[D]\");","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":"        assertEquals(d.toString(), \"[D] [-] test1 (by: 2021-08-22T15:00)\");","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"        d.completeTask();","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"        assertEquals(d.toString(), \"[D] [X] test1 (by: 2021-08-22T15:00)\");","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Zenlzb"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Zenlzb":19}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":"public class EventTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":"    DateTimeHandler dth \u003d new DateTimeHandler();","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":"    Event e \u003d new Event(\"test1\", false, dth.parseDate(\"22/08/2021 1500\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":"    public void testEvent() {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":"        assertEquals(e.typeIcon(), \"[E]\");","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":"        assertEquals(e.toString(), \"[E] [-] test1 (at: 2021-08-22T15:00)\");","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"        e.completeTask();","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"        assertEquals(e.toString(), \"[E] [X] test1 (at: 2021-08-22T15:00)\");","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Zenlzb":18}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":"    Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":"    public void testOneWord() {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"        assertEquals(parser.parse(\"list\").startsWith(), \"list\");","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"        assertEquals(parser.parse(\"list 5\").startsWith(), \"list\");","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"        assertFalse(parser.parse(\"list\").isExit());","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"        assertEquals(parser.parse(\"formats\").startsWith(), \"formats\");","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Zenlzb"},"content":"        assertEquals(parser.parse(\"formats 5\").startsWith(), \"formats\");","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Zenlzb"},"content":"        assertFalse(parser.parse(\"formats\").isExit());","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Zenlzb"},"content":"        assertEquals(parser.parse(\"bye\").startsWith(), \"bye\");","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"Zenlzb"},"content":"        assertEquals(parser.parse(\"bye 5\").startsWith(), \"bye\");","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Zenlzb"},"content":"        assertTrue(parser.parse(\"bye\").isExit());","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Zenlzb"},"content":"    @Test void testOneArg() {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Zenlzb"},"content":"        assertEquals(parser.parse(\"done\").startsWith(), \"done\");","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"Zenlzb"},"content":"        assertEquals(parser.parse(\"done 5\").startsWith(), \"done\");","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"Zenlzb"},"content":"        assertEquals(parser.parse(\"done 5\").getArguments(), \"5\");","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Zenlzb"},"content":"        assertFalse(parser.parse(\"done 5\").isExit());","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"Zenlzb"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Zenlzb":33}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"todo test","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"deadline","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"deadline test1","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"deadline test1 /by 3pm","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":"event","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":"event test2","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":"event test2 /at monday","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":"done 0","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":"done 4","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":"done asd","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"delete 3","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":"asd","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Zenlzb":18}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Zenlzb":1,"-":20}}]
