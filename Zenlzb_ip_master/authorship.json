[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Zenlzb":1,"-":23}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"Zenlzb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"Zenlzb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"Zenlzb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"Zenlzb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"Zenlzb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"Zenlzb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"Zenlzb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"Zenlzb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"Zenlzb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"Zenlzb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"Zenlzb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"Zenlzb"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2021-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Zenlzb":16,"-":45}},{"path":"src/main/java/duke/DateTimeHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":" * Encapsulates a class that handles parsing of date-time inputs.","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":"public class DateTimeHandler {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":"     * Array of valid formats as Strings.","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"    private final String[] FORMATS \u003d {","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"        \"dd-MM-yyyy hh:mm a\",","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"        \"dd-MM-yyyy HHmm\",","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":"        \"MMM dd yyyy hh:mm a\"","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"    };","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"Zenlzb"},"content":"     * Array of DateTimeFormatters converted from Strings in FORMATS.","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"Zenlzb"},"content":"    private final DateTimeFormatter[] dtfList \u003d new DateTimeFormatter[FORMATS.length];","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"Zenlzb"},"content":"     * Constructs a DateTimeHandler object and populates dtfList.","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"Zenlzb"},"content":"    public DateTimeHandler() {","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Zenlzb"},"content":"        assert FORMATS.length \u003d\u003d dtfList.length : \"DateTimeFormatter array should be same length as FORMATS array\";","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"Zenlzb"},"content":"        for (int i \u003d 0; i \u003c FORMATS.length; i++) {","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"Zenlzb"},"content":"            dtfList[i] \u003d DateTimeFormatter.ofPattern(FORMATS[i]);","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"Zenlzb"},"content":"     * Returns whether or not the input string can be parsed by the given formatter.","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"Zenlzb"},"content":"     * @param dtf The DateTimeFormatter object.","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"Zenlzb"},"content":"     * @param s The string to be parsed.","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"Zenlzb"},"content":"     * @return Whether or not the string can be parsed.","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"Zenlzb"},"content":"    private boolean tryToParse(DateTimeFormatter dtf, String s) {","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"Zenlzb"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"Zenlzb"},"content":"            LocalDateTime.parse(s, dtf);","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Zenlzb"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"Zenlzb"},"content":"            return false;","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"Zenlzb"},"content":"        return true;","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"Zenlzb"},"content":"     * Returns a LocalDateTime if able to parse the given string using one of the DateTimeFormatters in dtfList.","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"Zenlzb"},"content":"     * @param s String to be parsed.","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"Zenlzb"},"content":"     * @return The created LocalDateTime object if the string can be parsed, null if it cannot be parsed.","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"Zenlzb"},"content":"    public LocalDateTime parseDate(String s) {","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"Zenlzb"},"content":"        for (DateTimeFormatter dateTimeFormatter : dtfList) {","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"Zenlzb"},"content":"            if (tryToParse(dateTimeFormatter, s)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"Zenlzb"},"content":"                return LocalDateTime.parse(s, dateTimeFormatter);","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"Zenlzb"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"Zenlzb"},"content":"        return null;","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"Zenlzb"},"content":"     * Returns a String array of valid date formats.","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"Zenlzb"},"content":"     * @return The String array containing the valid date formats.","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"Zenlzb"},"content":"    public String[] getFormatList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"Zenlzb"},"content":"        String[] res \u003d new String[FORMATS.length + 1];","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"Zenlzb"},"content":"        res[0] \u003d \"Valid date formats:\";","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"Zenlzb"},"content":"        System.arraycopy(FORMATS, 0, res, 1, FORMATS.length);","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"Zenlzb"},"content":"        return res;","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"Zenlzb"},"content":"     * Returns a String to be printed when an invalid format is entered.","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"Zenlzb"},"content":"     * @return The String to be printed.","lastModifiedDate":"2021-08-31"},{"lineNumber":82,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"Zenlzb"},"content":"    public String invalidFormat() {","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"Zenlzb"},"content":"        return \"Please enter a valid date-time format. Type formats to see valid formats\";","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"Zenlzb"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Zenlzb":87}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":" * Encapsulates a deadline task with a deadline.","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":"    private LocalDateTime deadlineDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"     * Constructs a Deadline task object.","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"     * @param description Task description.","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":"     * @param isCompleted Completion status of task.","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"     * @param deadlineDate Deadline of task.","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"Zenlzb"},"content":"    public Deadline(String description, Boolean isCompleted, LocalDateTime deadlineDate, ArrayList\u003cString\u003e tags) {","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"Zenlzb"},"content":"        super(description, isCompleted, tags);","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"Zenlzb"},"content":"        this.deadlineDate \u003d deadlineDate;","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"Zenlzb"},"content":"    public String typeIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"Zenlzb"},"content":"        return \"[D]\";","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"Zenlzb"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"Zenlzb"},"content":"        return super.toString()","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"Zenlzb"},"content":"                + \" (by: \"","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"Zenlzb"},"content":"                + deadlineDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm a\"))","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"Zenlzb"},"content":"                + \")\" + super.getTags();","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":37,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":38,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-09-10"},{"lineNumber":39,"author":{"gitId":"Zenlzb"},"content":"    public String toFileString() {","lastModifiedDate":"2021-09-10"},{"lineNumber":40,"author":{"gitId":"Zenlzb"},"content":"        return super.toString() + \" (by: \" + deadlineDate + \")\" + super.getTags();","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"Zenlzb"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Zenlzb":42}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"import duke.gui.Main;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":" * Encapsulates the main Duke class which contains the main function to run the chat bot","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":"    private final Ui ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":"    private final DateTimeHandler dth;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"    private final TaskList taskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"    private final Parser parser;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"     * Constructs a Duke object.","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"Zenlzb"},"content":"    public Duke() {","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Zenlzb"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"Zenlzb"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Zenlzb"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Zenlzb"},"content":"        dth \u003d new DateTimeHandler();","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Zenlzb"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"Zenlzb"},"content":"        initialize();","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"Zenlzb"},"content":"     * Loads the output file if it exists, and reads the tasks from it.","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"Zenlzb"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"Zenlzb"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Zenlzb"},"content":"            storage.loadFile();","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Zenlzb"},"content":"            storage.readFromFile(taskList);","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Zenlzb"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Zenlzb"},"content":"            System.out.println(\"The file could not be created\");","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"Zenlzb"},"content":"     * Returns a String to be displayed to the user after processing the given input as a command.","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"Zenlzb"},"content":"     * @param input The given String input to be processed as a command.","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"Zenlzb"},"content":"     * @return The String to be displayed to the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"Zenlzb"},"content":"    public String getResponse(String input) throws DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":48,"author":{"gitId":"Zenlzb"},"content":"        Command command \u003d parser.parse(input);","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"Zenlzb"},"content":"        if (command \u003d\u003d null) {","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"Zenlzb"},"content":"            return ui.getUnrecognisedCommandMessage();","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"Zenlzb"},"content":"        String returnString \u003d command.execute(taskList, storage, ui, dth);","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"Zenlzb"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"Zenlzb"},"content":"            storage.writeToFile(taskList);","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"Zenlzb"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"Zenlzb"},"content":"            System.out.println(\"Write error\");","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"Zenlzb"},"content":"        if (command.isExit()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"Zenlzb"},"content":"            System.exit(0);","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"Zenlzb"},"content":"        return returnString;","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"Zenlzb"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"Zenlzb"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Zenlzb":64,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"package duke;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"    public DukeException(String s) {","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"        super(s);","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":"}","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"Zenlzb":7}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":" * Encapsulates an event task with a start date.","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":"    private LocalDateTime startDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"     * Constructs an Event task object.","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"     * @param description Task description.","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":"     * @param isCompleted Completion status of task.","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"     * @param startDate Start date of task.","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"Zenlzb"},"content":"    public Event(String description, Boolean isCompleted, LocalDateTime startDate, ArrayList\u003cString\u003e tags) {","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"Zenlzb"},"content":"        super(description, isCompleted, tags);","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"Zenlzb"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"Zenlzb"},"content":"    public String typeIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"Zenlzb"},"content":"        return \"[E]\";","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"Zenlzb"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"Zenlzb"},"content":"        return super.toString()","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"Zenlzb"},"content":"                + \" (at: \"","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"Zenlzb"},"content":"                + startDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm a\"))","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"Zenlzb"},"content":"                + \")\" + super.getTags();","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":37,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":38,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-09-10"},{"lineNumber":39,"author":{"gitId":"Zenlzb"},"content":"    public String toFileString() {","lastModifiedDate":"2021-09-10"},{"lineNumber":40,"author":{"gitId":"Zenlzb"},"content":"        return super.toString() + \" (at: \" + startDate + \")\" + super.getTags();","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"Zenlzb"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Zenlzb":42}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"import duke.commands.*;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":" * Encapsulates a parser class which parses user input","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":" * and creates a different command object depending on the input.","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":"public class Parser {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":"    private final Command[] COMMAND_LIST \u003d {","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":"        new ListCommand(\"\"),","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"        new ByeCommand(\"\"),","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"        new TodoCommand(\"\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"        new FormatsCommand(\"\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":"        new DoneCommand(\"\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"        new DeleteCommand(\"\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Zenlzb"},"content":"        new DeadlineCommand(\"\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Zenlzb"},"content":"        new EventCommand(\"\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Zenlzb"},"content":"        new FindCommand(\"\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Zenlzb"},"content":"        new TagCommand(\"\")","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"Zenlzb"},"content":"    };","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Zenlzb"},"content":"     * Takes in a string input from the user and returns the invoked command object.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Zenlzb"},"content":"     * @param input The string input by the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"Zenlzb"},"content":"     * @return The created command object.","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Zenlzb"},"content":"    public Command parse(String input) {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"Zenlzb"},"content":"        for (Command c : COMMAND_LIST) {","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"Zenlzb"},"content":"            if (input.startsWith(c.getCommandPrefix())) {","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"Zenlzb"},"content":"                if (input.equals(c.getCommandPrefix())) {","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"Zenlzb"},"content":"                    return c.of(\"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"Zenlzb"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"Zenlzb"},"content":"                return c.of(input.substring(c.getCommandPrefix().length() + 1));","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"Zenlzb"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"Zenlzb"},"content":"        return null;","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"Zenlzb"},"content":"     * Parses the command input by the user and splits it based on the given splitters","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"Zenlzb"},"content":"     * into distinct arguments.","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"Zenlzb"},"content":"     * @param command The command input by the user.","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"Zenlzb"},"content":"     * @param splitters The String array of given splitters.","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"Zenlzb"},"content":"     * @return The ArrayList of arguments.","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"Zenlzb"},"content":"    public static ArrayList\u003cString\u003e parseCommandArguments(String command, String ... splitters) {","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"Zenlzb"},"content":"        ArrayList\u003cString\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"Zenlzb"},"content":"        int firstSplitterIndex \u003d command.indexOf(\"/\");","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"Zenlzb"},"content":"        if (firstSplitterIndex \u003d\u003d -1) {","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"Zenlzb"},"content":"            result.add(command);","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"Zenlzb"},"content":"            return result;","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"Zenlzb"},"content":"        result.add(command.substring(0, firstSplitterIndex));","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"Zenlzb"},"content":"        for (String s : splitters) {","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"Zenlzb"},"content":"            String[] argument \u003d command.split(\" /\" + s + \" \");","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"Zenlzb"},"content":"            int nextSplitterIndex \u003d argument[1].indexOf(\"/\");","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"Zenlzb"},"content":"            if (nextSplitterIndex \u003d\u003d -1) {","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"Zenlzb"},"content":"                result.add(argument[1]);","lastModifiedDate":"2021-09-05"},{"lineNumber":67,"author":{"gitId":"Zenlzb"},"content":"            } else {","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"Zenlzb"},"content":"                result.add(argument[1].substring(0, nextSplitterIndex - 1));","lastModifiedDate":"2021-09-05"},{"lineNumber":69,"author":{"gitId":"Zenlzb"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":70,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":71,"author":{"gitId":"Zenlzb"},"content":"        return result;","lastModifiedDate":"2021-09-05"},{"lineNumber":72,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":73,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":74,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":75,"author":{"gitId":"Zenlzb"},"content":"     * Parses the Strings that are read from the output file and splits it based on the given splitters","lastModifiedDate":"2021-09-05"},{"lineNumber":76,"author":{"gitId":"Zenlzb"},"content":"     * into distinct arguments.","lastModifiedDate":"2021-09-05"},{"lineNumber":77,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":78,"author":{"gitId":"Zenlzb"},"content":"     * @param outputString The line read from the output file.","lastModifiedDate":"2021-09-05"},{"lineNumber":79,"author":{"gitId":"Zenlzb"},"content":"     * @param splitters The given splitters.","lastModifiedDate":"2021-09-05"},{"lineNumber":80,"author":{"gitId":"Zenlzb"},"content":"     * @return The ArrayList of arguments.","lastModifiedDate":"2021-09-05"},{"lineNumber":81,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":82,"author":{"gitId":"Zenlzb"},"content":"    public static ArrayList\u003cString\u003e parseFileOutputArguments(String outputString, String ... splitters) {","lastModifiedDate":"2021-09-05"},{"lineNumber":83,"author":{"gitId":"Zenlzb"},"content":"        ArrayList\u003cString\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-05"},{"lineNumber":84,"author":{"gitId":"Zenlzb"},"content":"        int firstSplitterIndex \u003d outputString.indexOf(\"(\");","lastModifiedDate":"2021-09-05"},{"lineNumber":85,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":86,"author":{"gitId":"Zenlzb"},"content":"        if (firstSplitterIndex \u003d\u003d -1) {","lastModifiedDate":"2021-09-05"},{"lineNumber":87,"author":{"gitId":"Zenlzb"},"content":"            result.add(outputString);","lastModifiedDate":"2021-09-05"},{"lineNumber":88,"author":{"gitId":"Zenlzb"},"content":"            return result;","lastModifiedDate":"2021-09-05"},{"lineNumber":89,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":90,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":91,"author":{"gitId":"Zenlzb"},"content":"        result.add(outputString.substring(0, firstSplitterIndex - 1));","lastModifiedDate":"2021-09-05"},{"lineNumber":92,"author":{"gitId":"Zenlzb"},"content":"        for (String s : splitters) {","lastModifiedDate":"2021-09-05"},{"lineNumber":93,"author":{"gitId":"Zenlzb"},"content":"            String[] argument \u003d outputString.split(\" \\\\(\" + s + \": \");","lastModifiedDate":"2021-09-05"},{"lineNumber":94,"author":{"gitId":"Zenlzb"},"content":"            int closeParenIndex \u003d argument[1].indexOf(\")\");","lastModifiedDate":"2021-09-05"},{"lineNumber":95,"author":{"gitId":"Zenlzb"},"content":"            result.add(argument[1].substring(0, closeParenIndex));","lastModifiedDate":"2021-09-05"},{"lineNumber":96,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":97,"author":{"gitId":"Zenlzb"},"content":"        return result;","lastModifiedDate":"2021-09-05"},{"lineNumber":98,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":99,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":100,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":101,"author":{"gitId":"Zenlzb"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"Zenlzb":101}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"import java.io.File;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":" * Encapsulates a class which interacts with the output file to save data after.","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"public class Storage {","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Zenlzb"},"content":"    private File txt;","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Zenlzb"},"content":"     * Loads file to save task list data.","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Zenlzb"},"content":"     * @throws Exception IO or Security Exception thrown by createNewFile.","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Zenlzb"},"content":"    public void loadFile() throws Exception {","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Zenlzb"},"content":"        Path p \u003d Paths.get(\"data\");","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Zenlzb"},"content":"        if (!Files.exists(p)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Zenlzb"},"content":"            Files.createDirectories(p);","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Zenlzb"},"content":"        File f \u003d Paths.get(\"data\", \"duke.txt\").toFile();","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Zenlzb"},"content":"        f.createNewFile();","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Zenlzb"},"content":"        txt \u003d f;","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"Zenlzb"},"content":"     * Reads the output file and loads any saved tasks.","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"Zenlzb"},"content":"     * @param t the TaskList object to save the list of tasks.","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"Zenlzb"},"content":"    public void readFromFile(TaskList t) {","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"Zenlzb"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"Zenlzb"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(txt));","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"Zenlzb"},"content":"            String curLine;","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Zenlzb"},"content":"            while ((curLine \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"Zenlzb"},"content":"                String[] parts \u003d curLine.split(\" \", 3);","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"Zenlzb"},"content":"                char taskType \u003d parts[0].charAt(1);","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"Zenlzb"},"content":"                boolean isCompleted \u003d parts[1].charAt(1) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"Zenlzb"},"content":"                ArrayList\u003cString\u003e argumentParts;","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"Zenlzb"},"content":"                String description;","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"Zenlzb"},"content":"                LocalDateTime dateTime;","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"Zenlzb"},"content":"                ArrayList\u003cString\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"Zenlzb"},"content":"                switch(taskType) {","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"Zenlzb"},"content":"                case \u0027T\u0027:","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"Zenlzb"},"content":"                    if (parts[2].contains(\" (Tags: \")) {","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"Zenlzb"},"content":"                        argumentParts \u003d Parser.parseFileOutputArguments(parts[2], \"Tags\");","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"Zenlzb"},"content":"                        description \u003d argumentParts.get(0);","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"Zenlzb"},"content":"                        tags \u003d new ArrayList\u003c\u003e(Arrays.asList(argumentParts.get(1).split(\" \")));","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"Zenlzb"},"content":"                        t.addToList(new Todo(description, isCompleted, tags));","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"Zenlzb"},"content":"                    } else {","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"Zenlzb"},"content":"                        t.addToList(new Todo(parts[2], isCompleted, tags));","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"Zenlzb"},"content":"                    }","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"Zenlzb"},"content":"                    break;","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"Zenlzb"},"content":"                case \u0027D\u0027:","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"Zenlzb"},"content":"                    if (parts[2].contains(\" (Tags: \")) {","lastModifiedDate":"2021-09-05"},{"lineNumber":67,"author":{"gitId":"Zenlzb"},"content":"                        argumentParts \u003d Parser.parseFileOutputArguments(parts[2], \"by\", \"Tags\");","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"Zenlzb"},"content":"                        description \u003d argumentParts.get(0);","lastModifiedDate":"2021-09-05"},{"lineNumber":69,"author":{"gitId":"Zenlzb"},"content":"                        dateTime \u003d LocalDateTime.parse(argumentParts.get(1));","lastModifiedDate":"2021-09-05"},{"lineNumber":70,"author":{"gitId":"Zenlzb"},"content":"                        tags \u003d new ArrayList\u003c\u003e(Arrays.asList(argumentParts.get(2).split(\" \")));","lastModifiedDate":"2021-09-08"},{"lineNumber":71,"author":{"gitId":"Zenlzb"},"content":"                    } else {","lastModifiedDate":"2021-09-05"},{"lineNumber":72,"author":{"gitId":"Zenlzb"},"content":"                        argumentParts \u003d Parser.parseFileOutputArguments(parts[2], \"by\");","lastModifiedDate":"2021-09-05"},{"lineNumber":73,"author":{"gitId":"Zenlzb"},"content":"                        description \u003d argumentParts.get(0);","lastModifiedDate":"2021-09-05"},{"lineNumber":74,"author":{"gitId":"Zenlzb"},"content":"                        dateTime \u003d LocalDateTime.parse(argumentParts.get(1));","lastModifiedDate":"2021-09-05"},{"lineNumber":75,"author":{"gitId":"Zenlzb"},"content":"                    }","lastModifiedDate":"2021-09-05"},{"lineNumber":76,"author":{"gitId":"Zenlzb"},"content":"                    t.addToList(new Deadline(description, isCompleted, dateTime, tags));","lastModifiedDate":"2021-09-05"},{"lineNumber":77,"author":{"gitId":"Zenlzb"},"content":"                    break;","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"Zenlzb"},"content":"                case \u0027E\u0027:","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"Zenlzb"},"content":"                    if (parts[2].contains(\" (Tags: \")) {","lastModifiedDate":"2021-09-05"},{"lineNumber":80,"author":{"gitId":"Zenlzb"},"content":"                        argumentParts \u003d Parser.parseFileOutputArguments(parts[2], \"at\", \"Tags\");","lastModifiedDate":"2021-09-05"},{"lineNumber":81,"author":{"gitId":"Zenlzb"},"content":"                        description \u003d argumentParts.get(0);","lastModifiedDate":"2021-09-05"},{"lineNumber":82,"author":{"gitId":"Zenlzb"},"content":"                        dateTime \u003d LocalDateTime.parse(argumentParts.get(1));","lastModifiedDate":"2021-09-05"},{"lineNumber":83,"author":{"gitId":"Zenlzb"},"content":"                        tags \u003d new ArrayList\u003c\u003e(Arrays.asList(argumentParts.get(2).split(\" \")));","lastModifiedDate":"2021-09-08"},{"lineNumber":84,"author":{"gitId":"Zenlzb"},"content":"                    } else {","lastModifiedDate":"2021-09-05"},{"lineNumber":85,"author":{"gitId":"Zenlzb"},"content":"                        argumentParts \u003d Parser.parseFileOutputArguments(parts[2], \"at\");","lastModifiedDate":"2021-09-05"},{"lineNumber":86,"author":{"gitId":"Zenlzb"},"content":"                        description \u003d argumentParts.get(0);","lastModifiedDate":"2021-09-05"},{"lineNumber":87,"author":{"gitId":"Zenlzb"},"content":"                        dateTime \u003d LocalDateTime.parse(argumentParts.get(1));","lastModifiedDate":"2021-09-05"},{"lineNumber":88,"author":{"gitId":"Zenlzb"},"content":"                    }","lastModifiedDate":"2021-09-05"},{"lineNumber":89,"author":{"gitId":"Zenlzb"},"content":"                    t.addToList(new Event(description, isCompleted, dateTime, tags));","lastModifiedDate":"2021-09-05"},{"lineNumber":90,"author":{"gitId":"Zenlzb"},"content":"                    break;","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"Zenlzb"},"content":"                default:","lastModifiedDate":"2021-09-03"},{"lineNumber":92,"author":{"gitId":"Zenlzb"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"Zenlzb"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"Zenlzb"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"Zenlzb"},"content":"            System.out.println(\"Read error: \" + e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"Zenlzb"},"content":"     * Writes the task list stored to an output file to persist its data.","lastModifiedDate":"2021-08-31"},{"lineNumber":101,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"Zenlzb"},"content":"     * @param t The TaskList object that stores the task list to be written to the file.","lastModifiedDate":"2021-08-31"},{"lineNumber":103,"author":{"gitId":"Zenlzb"},"content":"     * @throws Exception IO Exception from BufferedWriter.","lastModifiedDate":"2021-08-31"},{"lineNumber":104,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"Zenlzb"},"content":"    public void writeToFile(TaskList t) throws Exception {","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"Zenlzb"},"content":"        BufferedWriter bw \u003d new BufferedWriter(new FileWriter(txt));","lastModifiedDate":"2021-08-22"},{"lineNumber":107,"author":{"gitId":"Zenlzb"},"content":"        String curLine;","lastModifiedDate":"2021-08-22"},{"lineNumber":108,"author":{"gitId":"Zenlzb"},"content":"        for (int i \u003d 0; i \u003c t.size(); i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":109,"author":{"gitId":"Zenlzb"},"content":"            curLine \u003d t.getTask(i).toFileString();","lastModifiedDate":"2021-09-10"},{"lineNumber":110,"author":{"gitId":"Zenlzb"},"content":"            bw.write(curLine + \"\\n\");","lastModifiedDate":"2021-08-22"},{"lineNumber":111,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":112,"author":{"gitId":"Zenlzb"},"content":"        bw.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":113,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":114,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":115,"author":{"gitId":"Zenlzb"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Zenlzb":115}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":" * Encapsulates the abstract task class that concrete task implementations extend from.","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":"    private final String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":"    private Boolean completionStatus;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":"    private ArrayList\u003cString\u003e tags;","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"     * Constructs a Task object. Only for use with extended classes.","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"     * @param description Task description.","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":"     * @param isCompleted Completion status of task.","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"Zenlzb"},"content":"    public Task(String description, Boolean isCompleted, ArrayList\u003cString\u003e tags) {","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"Zenlzb"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"Zenlzb"},"content":"        this.completionStatus \u003d isCompleted;","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"Zenlzb"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"Zenlzb"},"content":"    public void completeTask() {","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"Zenlzb"},"content":"        completionStatus \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"Zenlzb"},"content":"     * Returns a String icon depending on whether the task is complete or not.","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"Zenlzb"},"content":"     * @return The String icon.","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"Zenlzb"},"content":"    public String completionIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"Zenlzb"},"content":"        return completionStatus ? \"[X]\" : \"[-]\";","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"Zenlzb"},"content":"     * Returns a String icon depending on what type the task is.","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"Zenlzb"},"content":"     * @return The String icon.","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"Zenlzb"},"content":"    public abstract String typeIcon();","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"Zenlzb"},"content":"     * Returns a String consisting of the tags attached to the current task.","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"Zenlzb"},"content":"     * @return The String of tags.","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"Zenlzb"},"content":"    public String getTags() {","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"Zenlzb"},"content":"        if (tags.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"Zenlzb"},"content":"            return \"\";","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"Zenlzb"},"content":"        StringBuilder result \u003d new StringBuilder(\" (Tags:\");","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"Zenlzb"},"content":"        for (String t : tags) {","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"Zenlzb"},"content":"            result.append(\" \").append(t);","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"Zenlzb"},"content":"        result.append(\")\");","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"Zenlzb"},"content":"        return result.toString();","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"Zenlzb"},"content":"     * Adds a string to tags ArrayList.","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":65,"author":{"gitId":"Zenlzb"},"content":"     * @param s Tag to be added.","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":67,"author":{"gitId":"Zenlzb"},"content":"    public void addTag(String s) {","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"Zenlzb"},"content":"        tags.add(s);","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":70,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":71,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"Zenlzb"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"Zenlzb"},"content":"        return typeIcon() + \" \" + completionIcon() + \" \" + description;","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":76,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":77,"author":{"gitId":"Zenlzb"},"content":"     * Returns a String to be written to the output file.","lastModifiedDate":"2021-09-10"},{"lineNumber":78,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":79,"author":{"gitId":"Zenlzb"},"content":"     * @return The String.","lastModifiedDate":"2021-09-10"},{"lineNumber":80,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":81,"author":{"gitId":"Zenlzb"},"content":"    public String toFileString() {","lastModifiedDate":"2021-09-10"},{"lineNumber":82,"author":{"gitId":"Zenlzb"},"content":"        return typeIcon() + \" \" + completionIcon() + \" \" + description;","lastModifiedDate":"2021-09-10"},{"lineNumber":83,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":84,"author":{"gitId":"Zenlzb"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Zenlzb":84}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"import java.util.List;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":" * Encapsulates a class that stores the array list of tasks and methods that operate on it.","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":"public class TaskList {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":"    private final List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":"     * Adds the provided task to list.","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"     * @param t The Provided Task object.","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":"    public void addToList(Task t) {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"        list.add(t);","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Zenlzb"},"content":"     * Returns a String that describes how many tasks are in the list.","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Zenlzb"},"content":"     * @return The String that describes how many tasks are in the list.","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Zenlzb"},"content":"    public String numOfTasks() {","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Zenlzb"},"content":"        return \"Now you have \" + list.size() + \" task\" + (list.size() !\u003d 1 ? \"s\" : \"\") + \" in the list\";","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Zenlzb"},"content":"     * Returns a String containing all the tasks in the task list.","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"Zenlzb"},"content":"     * @return The String containing all the tasks in the task list.","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"Zenlzb"},"content":"    public String[] printList() {","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"Zenlzb"},"content":"        String[] res \u003d new String[list.size()];","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"Zenlzb"},"content":"        for (int counter \u003d 1; counter \u003c\u003d list.size(); counter++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Zenlzb"},"content":"            res[counter - 1] \u003d counter + \". \" + list.get(counter - 1);","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Zenlzb"},"content":"        return res;","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"Zenlzb"},"content":"     * Returns a String array to be printed by the UI when a new task is added.","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"Zenlzb"},"content":"     * @param t The Task that was added.","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"Zenlzb"},"content":"     * @return The String array to be printed.","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"Zenlzb"},"content":"    public String[] taskAddedMessage(Task t) {","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"Zenlzb"},"content":"        return new String[]{","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"Zenlzb"},"content":"            \"Got it, I\u0027ve added this task:\",","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"Zenlzb"},"content":"            t.toString(),","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"Zenlzb"},"content":"            numOfTasks()","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"Zenlzb"},"content":"        };","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"Zenlzb"},"content":"     * Returns a String array to be printed by the UI when a task is completed.","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"Zenlzb"},"content":"     * @param t The Task that was completed.","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"Zenlzb"},"content":"     * @return The String array to be printed.","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"Zenlzb"},"content":"    public String[] taskCompletedMessage(Task t) {","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"Zenlzb"},"content":"        return new String[]{","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"Zenlzb"},"content":"            \"Nice! I\u0027ve marked this task as done:\",","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"Zenlzb"},"content":"            t.toString(),","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"Zenlzb"},"content":"            numOfTasks()","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"Zenlzb"},"content":"        };","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"Zenlzb"},"content":"     * Returns a String array to be printed by the UI when a task is deleted.","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"Zenlzb"},"content":"     * @param t The Task that was deleted.","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"Zenlzb"},"content":"     * @return The String array to be printed.","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"Zenlzb"},"content":"    public String[] taskDeletedMessage(Task t) {","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"Zenlzb"},"content":"        return new String[]{","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"Zenlzb"},"content":"            \"Noted. I\u0027ve removed this task:\",","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"Zenlzb"},"content":"            t.toString(),","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"Zenlzb"},"content":"            numOfTasks()","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"Zenlzb"},"content":"        };","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"Zenlzb"},"content":"    public int size() {","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"Zenlzb"},"content":"        return list.size();","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"Zenlzb"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"Zenlzb"},"content":"        assert list.size() \u003e index : \"List size should be larger than index\";","lastModifiedDate":"2021-09-03"},{"lineNumber":91,"author":{"gitId":"Zenlzb"},"content":"        return list.get(index);","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"Zenlzb"},"content":"     * Removes the task at the give index in the task list.","lastModifiedDate":"2021-08-31"},{"lineNumber":96,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"Zenlzb"},"content":"     * @param index The index at which the task should be deleted.","lastModifiedDate":"2021-08-31"},{"lineNumber":98,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"Zenlzb"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"Zenlzb"},"content":"        assert list.size() \u003e index : \"List size should be larger than index\";","lastModifiedDate":"2021-09-03"},{"lineNumber":101,"author":{"gitId":"Zenlzb"},"content":"        list.remove(index);","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":105,"author":{"gitId":"Zenlzb"},"content":"     * Returns a String array of tasks which contain the provided search term.","lastModifiedDate":"2021-08-31"},{"lineNumber":106,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":107,"author":{"gitId":"Zenlzb"},"content":"     * @param searchTerm The provided search term.","lastModifiedDate":"2021-08-31"},{"lineNumber":108,"author":{"gitId":"Zenlzb"},"content":"     * @return The String array of tasks.","lastModifiedDate":"2021-08-31"},{"lineNumber":109,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":110,"author":{"gitId":"Zenlzb"},"content":"    public String[] findInTasks(String searchTerm) {","lastModifiedDate":"2021-08-31"},{"lineNumber":111,"author":{"gitId":"Zenlzb"},"content":"        List\u003cString\u003e res \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"Zenlzb"},"content":"        res.add(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"Zenlzb"},"content":"        for (Task t : list) {","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"Zenlzb"},"content":"            if (t.toString().contains(searchTerm)) {","lastModifiedDate":"2021-08-31"},{"lineNumber":115,"author":{"gitId":"Zenlzb"},"content":"                res.add(t.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"Zenlzb"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"Zenlzb"},"content":"        String[] result \u003d new String[res.size()];","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"Zenlzb"},"content":"        result \u003d res.toArray(result);","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"Zenlzb"},"content":"        return result;","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"Zenlzb"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Zenlzb":123}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":" * Encapsulates a task that only contains a description, classified as a todo.","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":"    public Todo(String description, boolean completionStatus, ArrayList\u003cString\u003e tags) {","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":"        super(description, completionStatus, tags);","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"    public String typeIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"        return \"[T]\";","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"Zenlzb"},"content":"    public String toString() {","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"Zenlzb"},"content":"        return super.toString() + super.getTags();","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"Zenlzb"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Zenlzb":23}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":" * Encapsulates a class that contains methods for interacting with the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":"public class Ui {","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":"     * Returns a single String that is multiple Strings from a string array appended with new lines.","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":"     * @param messages The provided String Array.","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":"     * @return The new String that is formatted.","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"    public String formatMessage(String[] messages) {","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"        assert messages.length \u003e 0 : \"Messages array should not be empty\";","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"        StringBuilder res \u003d new StringBuilder();","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":"        for (String s : messages) {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"            res.append(s).append(\"\\n\");","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Zenlzb"},"content":"        return res.toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Zenlzb"},"content":"     * Returns a String as a response to an unrecognised command.","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Zenlzb"},"content":"     * @return the String response.","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Zenlzb"},"content":"    public String getUnrecognisedCommandMessage() {","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"Zenlzb"},"content":"        return \"That is not a recognised command\";","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"Zenlzb"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Zenlzb":32}},{"path":"src/main/java/duke/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"package duke.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"import duke.DateTimeHandler;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":" * Encapsulates the bye command, for terminating the program.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":"    public ByeCommand(String arguments) {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"        super(\"\");","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"    public Command of(String arguments) {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"Zenlzb"},"content":"        return new ByeCommand(\"\");","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"Zenlzb"},"content":"    public String execute(TaskList tl, Storage s, Ui ui, DateTimeHandler dth) {","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"Zenlzb"},"content":"        return \"\";","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"Zenlzb"},"content":"    public String getCommandPrefix() {","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"Zenlzb"},"content":"        return \"bye\";","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"Zenlzb"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"Zenlzb"},"content":"        return true;","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"Zenlzb"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"Zenlzb":36}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"package duke.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"import duke.DateTimeHandler;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":" * Encapsulates the abstract command class that concrete command implementations extend from","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":"    private String arguments;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"    public Command(String arguments) {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Zenlzb"},"content":"     * Returns a new command with the provided String as argument. Factory method","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Zenlzb"},"content":"     * @param arguments Arguments to be passed into new Command object","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"Zenlzb"},"content":"     * @return The created Command","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Zenlzb"},"content":"    public abstract Command of(String arguments);","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"Zenlzb"},"content":"     * Executes the command and returns a String to be printed by Duke","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Zenlzb"},"content":"     * @param tl The TaskList object to interact with the list of tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"Zenlzb"},"content":"     * @param s The Storage object to interact with the output file","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"Zenlzb"},"content":"     * @param ui The UI object to interact with the user interface","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"Zenlzb"},"content":"     * @param dth The DateTimeHandler object to interact with date-times.","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"Zenlzb"},"content":"     * @return The String to be printed.","lastModifiedDate":"2021-09-10"},{"lineNumber":36,"author":{"gitId":"Zenlzb"},"content":"     * @throws DukeException Contains the error message.","lastModifiedDate":"2021-09-10"},{"lineNumber":37,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"Zenlzb"},"content":"    public abstract String execute(TaskList tl, Storage s, Ui ui, DateTimeHandler dth) throws DukeException;","lastModifiedDate":"2021-09-10"},{"lineNumber":39,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"Zenlzb"},"content":"     * Returns the prefix of the command","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"Zenlzb"},"content":"     * @return The command prefix","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"Zenlzb"},"content":"    public abstract String getCommandPrefix();","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"Zenlzb"},"content":"     * Closes the program if true","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"Zenlzb"},"content":"     * @return Boolean to determine whether or not to close the program","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"Zenlzb"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"Zenlzb"},"content":"        return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"Zenlzb"},"content":"     * Returns the arguments for the command","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"Zenlzb"},"content":"     * @return The command arguments","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"Zenlzb"},"content":"    public String getArguments() {","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"Zenlzb"},"content":"        return arguments;","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"Zenlzb"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"Zenlzb":64}},{"path":"src/main/java/duke/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"package duke.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":"import duke.DateTimeHandler;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":"import duke.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":"import duke.Parser;","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":" * Encapsulates the deadline command, used to create a deadline task","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Zenlzb"},"content":"    public DeadlineCommand(String arguments) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Zenlzb"},"content":"        super(arguments);","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Zenlzb"},"content":"    public Command of(String arguments) {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Zenlzb"},"content":"        return new DeadlineCommand(arguments);","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"Zenlzb"},"content":"    public String execute(TaskList tl, Storage s, Ui ui, DateTimeHandler dth) throws DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":31,"author":{"gitId":"Zenlzb"},"content":"        String args \u003d super.getArguments();","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"Zenlzb"},"content":"        if (args.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"Zenlzb"},"content":"            throw new DukeException(\"Please enter the name of the task after deadline\");","lastModifiedDate":"2021-09-10"},{"lineNumber":34,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"Zenlzb"},"content":"        if (!args.contains(\"/by\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"Zenlzb"},"content":"            throw new DukeException(\"Please enter the deadline of the task after /by\");","lastModifiedDate":"2021-09-10"},{"lineNumber":38,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"Zenlzb"},"content":"        String description;","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"Zenlzb"},"content":"        String dateString;","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"Zenlzb"},"content":"        ArrayList\u003cString\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"Zenlzb"},"content":"        if (args.contains(\"/t\")) {","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"Zenlzb"},"content":"            ArrayList\u003cString\u003e parts \u003d Parser.parseCommandArguments(args, \"by\", \"t\");","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"Zenlzb"},"content":"            description \u003d parts.get(0);","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"Zenlzb"},"content":"            dateString \u003d parts.get(1);","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"Zenlzb"},"content":"            tags \u003d new ArrayList\u003c\u003e(Arrays.asList(parts.get(2).split(\" \")));","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"Zenlzb"},"content":"            System.out.print(description + \" \" + dateString);","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"Zenlzb"},"content":"        } else {","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"Zenlzb"},"content":"            ArrayList\u003cString\u003e parts \u003d Parser.parseCommandArguments(args, \"by\");","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"Zenlzb"},"content":"            description \u003d parts.get(0);","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"Zenlzb"},"content":"            dateString \u003d parts.get(1);","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"Zenlzb"},"content":"        LocalDateTime deadlineDate \u003d dth.parseDate(dateString);","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"Zenlzb"},"content":"        if (deadlineDate \u003d\u003d null) {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"Zenlzb"},"content":"            throw new DukeException(dth.invalidFormat());","lastModifiedDate":"2021-09-10"},{"lineNumber":57,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"Zenlzb"},"content":"        Deadline d \u003d new Deadline(description, false, deadlineDate, tags);","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"Zenlzb"},"content":"        tl.addToList(d);","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"Zenlzb"},"content":"        return ui.formatMessage(tl.taskAddedMessage(d));","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"Zenlzb"},"content":"    public String getCommandPrefix() {","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"Zenlzb"},"content":"        return \"deadline\";","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"Zenlzb"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Zenlzb":67}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"package duke.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"import duke.DateTimeHandler;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":"import duke.Task;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":" * Encapsulates the delete command, used to delete tasks from the task list","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"    public DeleteCommand(String arguments) {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"        super(arguments);","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Zenlzb"},"content":"    public Command of(String arguments) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Zenlzb"},"content":"        return new DeleteCommand(arguments);","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Zenlzb"},"content":"    public String execute(TaskList tl, Storage s, Ui ui, DateTimeHandler dth) throws DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"Zenlzb"},"content":"        String args \u003d super.getArguments();","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Zenlzb"},"content":"        if (args.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Zenlzb"},"content":"            throw new DukeException(\"Please enter a number after delete\");","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"Zenlzb"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Zenlzb"},"content":"            int index \u003d Integer.parseInt(args);","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"Zenlzb"},"content":"            if (index \u003e tl.size()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"Zenlzb"},"content":"                throw new DukeException(\"There are only \" + tl.size() + \" tasks\");","lastModifiedDate":"2021-09-10"},{"lineNumber":34,"author":{"gitId":"Zenlzb"},"content":"            } else if (index \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"Zenlzb"},"content":"                throw new DukeException(\"There is no task 0\");","lastModifiedDate":"2021-09-10"},{"lineNumber":36,"author":{"gitId":"Zenlzb"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"Zenlzb"},"content":"            Task t \u003d tl.getTask(index - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"Zenlzb"},"content":"            tl.removeTask(index - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"Zenlzb"},"content":"            return ui.formatMessage(tl.taskDeletedMessage(t));","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"Zenlzb"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"Zenlzb"},"content":"            throw new DukeException(\"Please enter a number after delete\");","lastModifiedDate":"2021-09-10"},{"lineNumber":43,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"Zenlzb"},"content":"    public String getCommandPrefix() {","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"Zenlzb"},"content":"        return \"delete\";","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"Zenlzb"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Zenlzb":50}},{"path":"src/main/java/duke/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"package duke.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"import duke.DateTimeHandler;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":"import duke.Task;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":" * Encapsulates the done command, used to complete tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"    public DoneCommand(String arguments) {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"        super(arguments);","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Zenlzb"},"content":"    public Command of(String arguments) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Zenlzb"},"content":"        return new DoneCommand(arguments);","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Zenlzb"},"content":"    public String execute(TaskList tl, Storage s, Ui ui, DateTimeHandler dth) throws DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"Zenlzb"},"content":"        String args \u003d super.getArguments();","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Zenlzb"},"content":"        if (args.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Zenlzb"},"content":"            throw new DukeException(\"Please enter a number after done\");","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"Zenlzb"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Zenlzb"},"content":"            int index \u003d Integer.parseInt(args);","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"Zenlzb"},"content":"            if (index \u003e tl.size()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"Zenlzb"},"content":"                throw new DukeException(\"There are only \" + tl.size() + \" tasks\");","lastModifiedDate":"2021-09-10"},{"lineNumber":34,"author":{"gitId":"Zenlzb"},"content":"            } else if (index \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"Zenlzb"},"content":"                throw new DukeException(\"There is no task 0\");","lastModifiedDate":"2021-09-10"},{"lineNumber":36,"author":{"gitId":"Zenlzb"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"Zenlzb"},"content":"            Task t \u003d tl.getTask(index - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"Zenlzb"},"content":"            t.completeTask();","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"Zenlzb"},"content":"            return ui.formatMessage(tl.taskCompletedMessage(t));","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"Zenlzb"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"Zenlzb"},"content":"            throw new DukeException(\"Please enter a number after done\");","lastModifiedDate":"2021-09-10"},{"lineNumber":43,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"Zenlzb"},"content":"    public String getCommandPrefix() {","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"Zenlzb"},"content":"        return \"done\";","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"Zenlzb"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Zenlzb":50}},{"path":"src/main/java/duke/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"package duke.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":"import duke.DateTimeHandler;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":"import duke.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":"import duke.Parser;","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":" * Encapsulates the event command, used to create event tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Zenlzb"},"content":"    public EventCommand(String arguments) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Zenlzb"},"content":"        super(arguments);","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Zenlzb"},"content":"    public Command of(String arguments) {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Zenlzb"},"content":"        return new EventCommand(arguments);","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"Zenlzb"},"content":"    public String execute(TaskList tl, Storage s, Ui ui, DateTimeHandler dth) throws DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":31,"author":{"gitId":"Zenlzb"},"content":"        String args \u003d super.getArguments();","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"Zenlzb"},"content":"        if (args.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"Zenlzb"},"content":"            throw new DukeException(\"Please enter the name of the task after event\");","lastModifiedDate":"2021-09-10"},{"lineNumber":34,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"Zenlzb"},"content":"        if (!args.contains(\"/at\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"Zenlzb"},"content":"            throw new DukeException(\"Please enter the start date of the task after /at\");","lastModifiedDate":"2021-09-10"},{"lineNumber":38,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"Zenlzb"},"content":"        String description;","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"Zenlzb"},"content":"        String dateString;","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"Zenlzb"},"content":"        ArrayList\u003cString\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"Zenlzb"},"content":"        if (args.contains(\"/t\")) {","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"Zenlzb"},"content":"            ArrayList\u003cString\u003e parts \u003d Parser.parseCommandArguments(args, \"at\", \"t\");","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"Zenlzb"},"content":"            description \u003d parts.get(0);","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"Zenlzb"},"content":"            dateString \u003d parts.get(1);","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"Zenlzb"},"content":"            tags \u003d new ArrayList\u003c\u003e(Arrays.asList(parts.get(2).split(\" \")));","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"Zenlzb"},"content":"        } else {","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"Zenlzb"},"content":"            ArrayList\u003cString\u003e parts \u003d Parser.parseCommandArguments(args, \"at\");","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"Zenlzb"},"content":"            description \u003d parts.get(0);","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"Zenlzb"},"content":"            dateString \u003d parts.get(1);","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"Zenlzb"},"content":"        LocalDateTime startDate \u003d dth.parseDate(dateString);","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"Zenlzb"},"content":"        if (startDate \u003d\u003d null) {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"Zenlzb"},"content":"            throw new DukeException(dth.invalidFormat());","lastModifiedDate":"2021-09-10"},{"lineNumber":55,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"Zenlzb"},"content":"        Event e \u003d new Event(description, false, startDate, tags);","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"Zenlzb"},"content":"        tl.addToList(e);","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"Zenlzb"},"content":"        return ui.formatMessage(tl.taskAddedMessage(e));","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"Zenlzb"},"content":"    public String getCommandPrefix() {","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"Zenlzb"},"content":"        return \"event\";","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"Zenlzb"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Zenlzb":65}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"package duke.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"import duke.DateTimeHandler;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":"    public FindCommand(String arguments) {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":"        super(arguments);","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"    public Command of(String arguments) {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":"        return new FindCommand(arguments);","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Zenlzb"},"content":"    public String execute(TaskList tl, Storage s, Ui ui, DateTimeHandler dth) throws DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"Zenlzb"},"content":"        String args \u003d super.getArguments();","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"Zenlzb"},"content":"        if (args.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Zenlzb"},"content":"            throw new DukeException(\"Please enter a search term after find\");","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Zenlzb"},"content":"        String[] results \u003d tl.findInTasks(args);","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Zenlzb"},"content":"        return ui.formatMessage(results);","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"Zenlzb"},"content":"    public String getCommandPrefix() {","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"Zenlzb"},"content":"        return \"find\";","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"Zenlzb"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Zenlzb":35}},{"path":"src/main/java/duke/commands/FormatsCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"package duke.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"import duke.DateTimeHandler;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":" * Encapsulates the formats command, used to print the valid date-time formats.","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":"public class FormatsCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":"    public FormatsCommand(String arguments) {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"        super(arguments);","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"    public Command of(String arguments) {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Zenlzb"},"content":"        return new FormatsCommand(\"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"Zenlzb"},"content":"    public String execute(TaskList tl, Storage s, Ui ui, DateTimeHandler dth) {","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"Zenlzb"},"content":"        return ui.formatMessage(dth.getFormatList());","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Zenlzb"},"content":"    public String getCommandPrefix() {","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"Zenlzb"},"content":"        return \"formats\";","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Zenlzb"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Zenlzb":31}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"package duke.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"import duke.DateTimeHandler;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":" * Encapsulates the list command, used to list out all the tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":"    public ListCommand(String arguments) {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"        super(\"\");","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"    public String execute(TaskList tl, Storage s, Ui ui, DateTimeHandler dth) {","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"Zenlzb"},"content":"        return ui.formatMessage(tl.printList());","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"Zenlzb"},"content":"    public String getCommandPrefix() {","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"Zenlzb"},"content":"        return \"list\";","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"Zenlzb"},"content":"    public Command of(String arguments) {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"Zenlzb"},"content":"        return new ListCommand(arguments);","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"Zenlzb"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"Zenlzb":31}},{"path":"src/main/java/duke/commands/TagCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"package duke.commands;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"import duke.DateTimeHandler;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":"import duke.Task;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":"public class TagCommand extends Command {","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":"    public TagCommand(String arguments) {","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":"        super(arguments);","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":"    public Command of(String arguments) {","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"        return new TagCommand(arguments);","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"Zenlzb"},"content":"    public String execute(TaskList tl, Storage s, Ui ui, DateTimeHandler dth) throws DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"Zenlzb"},"content":"        String args \u003d super.getArguments();","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"Zenlzb"},"content":"        if (args.equals(\"\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"Zenlzb"},"content":"            throw new DukeException(\"Input which task you want to add tags to, followed by the tags\");","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"Zenlzb"},"content":"        String[] parts \u003d args.split(\" \");","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"Zenlzb"},"content":"        try {","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"Zenlzb"},"content":"            int index \u003d Integer.parseInt(parts[0]);","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"Zenlzb"},"content":"            if (index \u003e tl.size()) {","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"Zenlzb"},"content":"                throw new DukeException(\"There are only \" + tl.size() + \" tasks\");","lastModifiedDate":"2021-09-10"},{"lineNumber":32,"author":{"gitId":"Zenlzb"},"content":"            } else if (index \u003d\u003d 0) {","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"Zenlzb"},"content":"                throw new DukeException(\"There is no task 0\");","lastModifiedDate":"2021-09-10"},{"lineNumber":34,"author":{"gitId":"Zenlzb"},"content":"            } else if (parts.length \u003c 2) {","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"Zenlzb"},"content":"                throw new DukeException(\"Input tags after the number\");","lastModifiedDate":"2021-09-10"},{"lineNumber":36,"author":{"gitId":"Zenlzb"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"Zenlzb"},"content":"            Task t \u003d tl.getTask(index - 1);","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"Zenlzb"},"content":"            for (int i \u003d 1; i \u003c parts.length; i++) {","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"Zenlzb"},"content":"                t.addTag(parts[i]);","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"Zenlzb"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"Zenlzb"},"content":"            return \"Tags successfully added\";","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"Zenlzb"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"Zenlzb"},"content":"            throw new DukeException(\"Please enter a number after tag\");","lastModifiedDate":"2021-09-10"},{"lineNumber":46,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"Zenlzb"},"content":"    public String getCommandPrefix() {","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"Zenlzb"},"content":"        return \"tag\";","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"Zenlzb"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"Zenlzb":53}},{"path":"src/main/java/duke/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"package duke.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":"import duke.DateTimeHandler;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":"import duke.Parser;","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":"import duke.Todo;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":" * Encapsulates the todo command, used to create a todo task","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Zenlzb"},"content":"    public TodoCommand(String arguments) {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Zenlzb"},"content":"        super(arguments);","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Zenlzb"},"content":"    public Command of(String arguments) {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Zenlzb"},"content":"        return new TodoCommand(arguments);","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"Zenlzb"},"content":"    public String execute(TaskList tl, Storage s, Ui ui, DateTimeHandler dth) throws DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"Zenlzb"},"content":"        String args \u003d super.getArguments();","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Zenlzb"},"content":"        if (args.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"Zenlzb"},"content":"            throw new DukeException(\"Please enter the name of the task after todo\");","lastModifiedDate":"2021-09-10"},{"lineNumber":33,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"Zenlzb"},"content":"        String description;","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"Zenlzb"},"content":"        ArrayList\u003cString\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"Zenlzb"},"content":"        if (args.contains(\"/t\")) {","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"Zenlzb"},"content":"            ArrayList\u003cString\u003e parts \u003d Parser.parseCommandArguments(args, \"t\");","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"Zenlzb"},"content":"            description \u003d parts.get(0);","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"Zenlzb"},"content":"            tags \u003d new ArrayList\u003c\u003e(Arrays.asList(parts.get(1).split(\" \")));","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"Zenlzb"},"content":"        } else {","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"Zenlzb"},"content":"            description \u003d args;","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"Zenlzb"},"content":"        Todo t \u003d new Todo(description, false, tags);","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"Zenlzb"},"content":"        tl.addToList(t);","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"Zenlzb"},"content":"        return ui.formatMessage(tl.taskAddedMessage(t));","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"Zenlzb"},"content":"    public String getCommandPrefix() {","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"Zenlzb"},"content":"        return \"todo\";","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"Zenlzb"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Zenlzb":52}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"package duke.gui;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":" * Encapsulates a DialogBox object which consists of a profile picture and text.","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"Zenlzb"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"Zenlzb"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"Zenlzb"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"Zenlzb"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"Zenlzb"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"Zenlzb"},"content":"    private Circle circle;","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"Zenlzb"},"content":"    private DialogBox(String text, int height, boolean isDuke) {","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"Zenlzb"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"Zenlzb"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"Zenlzb"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"Zenlzb"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"Zenlzb"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"Zenlzb"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"Zenlzb"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"Zenlzb"},"content":"        if (isDuke) {","lastModifiedDate":"2021-09-10"},{"lineNumber":37,"author":{"gitId":"Zenlzb"},"content":"            circle.setFill(Color.web(\"#eb5a52\"));","lastModifiedDate":"2021-09-10"},{"lineNumber":38,"author":{"gitId":"Zenlzb"},"content":"            dialog.setAlignment(Pos.CENTER_LEFT);","lastModifiedDate":"2021-09-10"},{"lineNumber":39,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":40,"author":{"gitId":"Zenlzb"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"Zenlzb"},"content":"        dialog.setPrefHeight(height);","lastModifiedDate":"2021-09-10"},{"lineNumber":42,"author":{"gitId":"Zenlzb"},"content":"        dialog.setMinHeight(height);","lastModifiedDate":"2021-09-10"},{"lineNumber":43,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"Zenlzb"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"Zenlzb"},"content":"    private void flip() {","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"Zenlzb"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"Zenlzb"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"Zenlzb"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"Zenlzb"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":56,"author":{"gitId":"Zenlzb"},"content":"     * Counts the number of lines in a string.","lastModifiedDate":"2021-09-10"},{"lineNumber":57,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":58,"author":{"gitId":"Zenlzb"},"content":"     * @param str The string.","lastModifiedDate":"2021-09-10"},{"lineNumber":59,"author":{"gitId":"Zenlzb"},"content":"     * @return The number of lines.","lastModifiedDate":"2021-09-10"},{"lineNumber":60,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":61,"author":{"gitId":"Zenlzb"},"content":"    public static int countLines(String str) {","lastModifiedDate":"2021-09-10"},{"lineNumber":62,"author":{"gitId":"Zenlzb"},"content":"        if (str \u003d\u003d null || str.isEmpty()) {","lastModifiedDate":"2021-09-10"},{"lineNumber":63,"author":{"gitId":"Zenlzb"},"content":"            return 0;","lastModifiedDate":"2021-09-10"},{"lineNumber":64,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":65,"author":{"gitId":"Zenlzb"},"content":"        int lines \u003d 1;","lastModifiedDate":"2021-09-10"},{"lineNumber":66,"author":{"gitId":"Zenlzb"},"content":"        int pos \u003d 0;","lastModifiedDate":"2021-09-10"},{"lineNumber":67,"author":{"gitId":"Zenlzb"},"content":"        while ((pos \u003d str.indexOf(\"\\n\", pos) + 1) !\u003d 0) {","lastModifiedDate":"2021-09-10"},{"lineNumber":68,"author":{"gitId":"Zenlzb"},"content":"            lines++;","lastModifiedDate":"2021-09-10"},{"lineNumber":69,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":70,"author":{"gitId":"Zenlzb"},"content":"        return lines;","lastModifiedDate":"2021-09-10"},{"lineNumber":71,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":72,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":73,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":74,"author":{"gitId":"Zenlzb"},"content":"     * Creates a DialogBox for the user.","lastModifiedDate":"2021-09-10"},{"lineNumber":75,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":76,"author":{"gitId":"Zenlzb"},"content":"     * @param text The text in the dialog box.","lastModifiedDate":"2021-09-10"},{"lineNumber":77,"author":{"gitId":"Zenlzb"},"content":"     * @return The created DialogBox.","lastModifiedDate":"2021-09-10"},{"lineNumber":78,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":79,"author":{"gitId":"Zenlzb"},"content":"    public static DialogBox getUserDialog(String text) {","lastModifiedDate":"2021-09-10"},{"lineNumber":80,"author":{"gitId":"Zenlzb"},"content":"        int numOfLines \u003d countLines(text);","lastModifiedDate":"2021-09-10"},{"lineNumber":81,"author":{"gitId":"Zenlzb"},"content":"        var db \u003d new DialogBox(text, numOfLines * 20 + 20, false);","lastModifiedDate":"2021-09-10"},{"lineNumber":82,"author":{"gitId":"Zenlzb"},"content":"        return db;","lastModifiedDate":"2021-09-10"},{"lineNumber":83,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":86,"author":{"gitId":"Zenlzb"},"content":"     * Creates a DialogBox for Duke.","lastModifiedDate":"2021-09-10"},{"lineNumber":87,"author":{"gitId":"Zenlzb"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":88,"author":{"gitId":"Zenlzb"},"content":"     * @param text The text in the dialog box.","lastModifiedDate":"2021-09-10"},{"lineNumber":89,"author":{"gitId":"Zenlzb"},"content":"     * @param isError Whether the response is an error message or not.","lastModifiedDate":"2021-09-10"},{"lineNumber":90,"author":{"gitId":"Zenlzb"},"content":"     * @return The created DialogBox.","lastModifiedDate":"2021-09-10"},{"lineNumber":91,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":92,"author":{"gitId":"Zenlzb"},"content":"    public static DialogBox getDukeDialog(String text, boolean isError) {","lastModifiedDate":"2021-09-10"},{"lineNumber":93,"author":{"gitId":"Zenlzb"},"content":"        if (isError) {","lastModifiedDate":"2021-09-10"},{"lineNumber":94,"author":{"gitId":"Zenlzb"},"content":"            text \u003d \"ERROR: \\n\" + text;","lastModifiedDate":"2021-09-10"},{"lineNumber":95,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":96,"author":{"gitId":"Zenlzb"},"content":"        int numOfLines \u003d countLines(text);","lastModifiedDate":"2021-09-10"},{"lineNumber":97,"author":{"gitId":"Zenlzb"},"content":"        var db \u003d new DialogBox(text, numOfLines * 20 + 20, true);","lastModifiedDate":"2021-09-10"},{"lineNumber":98,"author":{"gitId":"Zenlzb"},"content":"        db.setPrefHeight(numOfLines * 20 + 20);","lastModifiedDate":"2021-09-10"},{"lineNumber":99,"author":{"gitId":"Zenlzb"},"content":"        db.getChildren().get(0).setStyle(\"-fx-background-color: #eb5a52; -fx-background-radius: 10;\");","lastModifiedDate":"2021-09-09"},{"lineNumber":100,"author":{"gitId":"Zenlzb"},"content":"        db.flip();","lastModifiedDate":"2021-08-28"},{"lineNumber":101,"author":{"gitId":"Zenlzb"},"content":"        return db;","lastModifiedDate":"2021-08-28"},{"lineNumber":102,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":103,"author":{"gitId":"Zenlzb"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"Zenlzb":103}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"package duke.gui;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"Zenlzb"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"Zenlzb"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"Zenlzb"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"Zenlzb"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"Zenlzb"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"Zenlzb"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"Zenlzb"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"Zenlzb"},"content":"            stage.setTitle(\"Duke++\");","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"Zenlzb"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"Zenlzb"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setWelcomeMessage();","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"Zenlzb"},"content":"            stage.show();","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"Zenlzb"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"Zenlzb"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"Zenlzb"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"Zenlzb":35}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"package duke.gui;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"Zenlzb"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"Zenlzb"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"Zenlzb"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"Zenlzb"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"Zenlzb"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"Zenlzb"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"Zenlzb"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"Zenlzb"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"Zenlzb"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"Zenlzb"},"content":"        duke \u003d d;","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":36,"author":{"gitId":"Zenlzb"},"content":"     * Sends a welcome message dialog box.","lastModifiedDate":"2021-09-10"},{"lineNumber":37,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":38,"author":{"gitId":"Zenlzb"},"content":"    public void setWelcomeMessage() {","lastModifiedDate":"2021-09-10"},{"lineNumber":39,"author":{"gitId":"Zenlzb"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(","lastModifiedDate":"2021-09-10"},{"lineNumber":40,"author":{"gitId":"Zenlzb"},"content":"                \"Welcome, I am Duke++\\nHow may I help you?\",","lastModifiedDate":"2021-09-10"},{"lineNumber":41,"author":{"gitId":"Zenlzb"},"content":"                false)","lastModifiedDate":"2021-09-10"},{"lineNumber":42,"author":{"gitId":"Zenlzb"},"content":"        );","lastModifiedDate":"2021-09-10"},{"lineNumber":43,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":44,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":45,"author":{"gitId":"Zenlzb"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"Zenlzb"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"Zenlzb"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"Zenlzb"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"Zenlzb"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"Zenlzb"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"Zenlzb"},"content":"        boolean isError \u003d false;","lastModifiedDate":"2021-09-10"},{"lineNumber":52,"author":{"gitId":"Zenlzb"},"content":"        String response;","lastModifiedDate":"2021-09-10"},{"lineNumber":53,"author":{"gitId":"Zenlzb"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"Zenlzb"},"content":"        try {","lastModifiedDate":"2021-09-10"},{"lineNumber":55,"author":{"gitId":"Zenlzb"},"content":"            response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-10"},{"lineNumber":56,"author":{"gitId":"Zenlzb"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-10"},{"lineNumber":57,"author":{"gitId":"Zenlzb"},"content":"            response \u003d e.getMessage();","lastModifiedDate":"2021-09-10"},{"lineNumber":58,"author":{"gitId":"Zenlzb"},"content":"            isError \u003d true;","lastModifiedDate":"2021-09-10"},{"lineNumber":59,"author":{"gitId":"Zenlzb"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":60,"author":{"gitId":"Zenlzb"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"Zenlzb"},"content":"                DialogBox.getUserDialog(input),","lastModifiedDate":"2021-09-10"},{"lineNumber":62,"author":{"gitId":"Zenlzb"},"content":"                DialogBox.getDukeDialog(response, isError)","lastModifiedDate":"2021-09-10"},{"lineNumber":63,"author":{"gitId":"Zenlzb"},"content":"        );","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"Zenlzb"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"Zenlzb"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"Zenlzb":67}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":"        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"CENTER_RIGHT\" prefWidth\u003d\"325.0\" style\u003d\"-fx-background-color: #3db5f5#3db5f5; -fx-background-radius: 10;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":"            \u003cInsets left\u003d\"15.0\" right\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"            \u003cFont name\u003d\"Arial\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":"         \u003c/font\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"      \u003c/Label\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":19,"author":{"gitId":"Zenlzb"},"content":"      \u003cCircle fx:id\u003d\"circle\" fill\u003d\"#3db5f5\" radius\u003d\"20.0\" stroke\u003d\"TRANSPARENT\" strokeType\u003d\"INSIDE\"\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"Zenlzb"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":21,"author":{"gitId":"Zenlzb"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"Zenlzb"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":23,"author":{"gitId":"Zenlzb"},"content":"      \u003c/Circle\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"Zenlzb"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"Zenlzb"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"Zenlzb"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"Zenlzb"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"Zenlzb"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"Zenlzb":28}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"557.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-image: url(\u0026quot;/images/bg.png\u0026quot;);\" /\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"Zenlzb"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"Zenlzb":19}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":"class DeadlineTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":"    DateTimeHandler dth \u003d new DateTimeHandler();","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":"    Deadline d \u003d new Deadline(\"test1\", false, dth.parseDate(\"22/08/2021 1500\"), new ArrayList\u003c\u003e());","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":"    public void testDeadline() {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"        assertEquals(d.typeIcon(), \"[D]\");","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"        assertEquals(d.toString(), \"[D] [-] test1 (by: 2021-08-22T15:00)\");","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":"        d.completeTask();","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"        assertEquals(d.toString(), \"[D] [X] test1 (by: 2021-08-22T15:00)\");","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Zenlzb"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Zenlzb":21}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":"public class EventTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":"    DateTimeHandler dth \u003d new DateTimeHandler();","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":"    Event e \u003d new Event(\"test1\", false, dth.parseDate(\"22/08/2021 1500\"), new ArrayList\u003c\u003e());","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":"    public void testEvent() {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"        assertEquals(e.typeIcon(), \"[E]\");","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"        assertEquals(e.toString(), \"[E] [-] test1 (at: 2021-08-22T15:00)\");","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":"        e.completeTask();","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"        assertEquals(e.toString(), \"[E] [X] test1 (at: 2021-08-22T15:00)\");","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Zenlzb"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Zenlzb":20}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":"    Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":"    public void testOneWord() {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"        assertEquals(parser.parse(\"list\").getCommandPrefix(), \"list\");","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"        assertEquals(parser.parse(\"list 5\").getCommandPrefix(), \"list\");","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"        assertFalse(parser.parse(\"list\").isExit());","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"        assertEquals(parser.parse(\"formats\").getCommandPrefix(), \"formats\");","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"Zenlzb"},"content":"        assertEquals(parser.parse(\"formats 5\").getCommandPrefix(), \"formats\");","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"Zenlzb"},"content":"        assertFalse(parser.parse(\"formats\").isExit());","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Zenlzb"},"content":"        assertEquals(parser.parse(\"bye\").getCommandPrefix(), \"bye\");","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"Zenlzb"},"content":"        assertEquals(parser.parse(\"bye 5\").getCommandPrefix(), \"bye\");","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"Zenlzb"},"content":"        assertTrue(parser.parse(\"bye\").isExit());","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Zenlzb"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Zenlzb"},"content":"    @Test void testOneArg() {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Zenlzb"},"content":"        assertEquals(parser.parse(\"done\").getCommandPrefix(), \"done\");","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"Zenlzb"},"content":"        assertEquals(parser.parse(\"done 5\").getCommandPrefix(), \"done\");","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"Zenlzb"},"content":"        assertEquals(parser.parse(\"done 5\").getArguments(), \"5\");","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Zenlzb"},"content":"        assertFalse(parser.parse(\"done 5\").isExit());","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"Zenlzb"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"Zenlzb"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Zenlzb":33}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Zenlzb"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"Zenlzb"},"content":"todo test","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"Zenlzb"},"content":"deadline","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"Zenlzb"},"content":"deadline test1","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Zenlzb"},"content":"deadline test1 /by 3pm","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"Zenlzb"},"content":"event","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Zenlzb"},"content":"event test2","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Zenlzb"},"content":"event test2 /at monday","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Zenlzb"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Zenlzb"},"content":"done 0","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"Zenlzb"},"content":"done 4","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"Zenlzb"},"content":"done asd","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"Zenlzb"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"Zenlzb"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"Zenlzb"},"content":"delete 3","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"Zenlzb"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"Zenlzb"},"content":"asd","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Zenlzb":18}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Zenlzb"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Zenlzb":1,"-":20}}]
