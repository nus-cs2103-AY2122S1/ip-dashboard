[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joenzkimchan"},"content":"import duke.Parser;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"joenzkimchan"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"joenzkimchan"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"joenzkimchan"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"joenzkimchan"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"joenzkimchan"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"joenzkimchan"},"content":" * This class represents Duke who runs the main program.","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"joenzkimchan"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"joenzkimchan"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"joenzkimchan"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"joenzkimchan"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"joenzkimchan"},"content":"     * Constructor for Duke.","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"joenzkimchan"},"content":"     * @param filePath filePath to the save file.","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"joenzkimchan"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"joenzkimchan"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"joenzkimchan"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"joenzkimchan"},"content":"        this.tasks \u003d this.storage.load();","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"joenzkimchan"},"content":"     * Runs the program.","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"joenzkimchan"},"content":"    public void run() {","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"joenzkimchan"},"content":"        Ui.showWelcome();","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"joenzkimchan"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"joenzkimchan"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"joenzkimchan"},"content":"            try {","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"joenzkimchan"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"joenzkimchan"},"content":"                Ui.showLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"joenzkimchan"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"joenzkimchan"},"content":"                c.execute(tasks, storage, ui);","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"joenzkimchan"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"joenzkimchan"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"joenzkimchan"},"content":"            } finally {","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"joenzkimchan"},"content":"                Ui.showLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"joenzkimchan"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"joenzkimchan"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"joenzkimchan"},"content":"     * Main method which starts the program by calling run().","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"joenzkimchan"},"content":"     * @param args main method parameters.","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"joenzkimchan"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"joenzkimchan":55,"-":4}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joenzkimchan"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"joenzkimchan"},"content":"import duke.command.*;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"joenzkimchan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"joenzkimchan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"joenzkimchan"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"joenzkimchan"},"content":" * This class represents a Parser, which parses the input given by the user.","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"joenzkimchan"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"joenzkimchan"},"content":"public class Parser {","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"joenzkimchan"},"content":"     * Parses the input given by the user and returns the necessary command to be executed.","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"joenzkimchan"},"content":"     * @param input input given by user.","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"joenzkimchan"},"content":"     * @return necessary command to be executed.","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"joenzkimchan"},"content":"    public static Command parse(String input) {","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"joenzkimchan"},"content":"        String[] splitText \u003d input.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"joenzkimchan"},"content":"        String command \u003d splitText[0];","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"joenzkimchan"},"content":"        Command output;","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"joenzkimchan"},"content":"        output \u003d new EmptyCommand();","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"joenzkimchan"},"content":"        switch (command) {","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"joenzkimchan"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"joenzkimchan"},"content":"            try {","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"joenzkimchan"},"content":"                String toDoTask \u003d splitText[1];","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"joenzkimchan"},"content":"                output \u003d new ToDoCommand(toDoTask);","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"joenzkimchan"},"content":"                break;","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"joenzkimchan"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"joenzkimchan"},"content":"                Ui.arrayIndexOutOfBoundsExceptionMessage();","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"joenzkimchan"},"content":"                Ui.toDoHint();","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"joenzkimchan"},"content":"                throw e;","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"joenzkimchan"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"joenzkimchan"},"content":"        case \"event\":","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"joenzkimchan"},"content":"            try {","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"joenzkimchan"},"content":"                String[] furtherSplitEvent \u003d splitText[1].trim().split(\"/at \");","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"joenzkimchan"},"content":"                String eventTask \u003d furtherSplitEvent[0];","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"joenzkimchan"},"content":"                LocalDateTime eventTime \u003d LocalDateTime.parse(furtherSplitEvent[1], Ui.TIME_FORMATTER);","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"joenzkimchan"},"content":"                output \u003d new EventCommand(eventTask, eventTime);","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"joenzkimchan"},"content":"                break;","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"joenzkimchan"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"joenzkimchan"},"content":"                Ui.dateTimeParseExceptionMessage();","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"joenzkimchan"},"content":"                throw e;","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"joenzkimchan"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"joenzkimchan"},"content":"                Ui.arrayIndexOutOfBoundsExceptionMessage();","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"joenzkimchan"},"content":"                Ui.eventHint();","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"joenzkimchan"},"content":"                throw e;","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"joenzkimchan"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"joenzkimchan"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"joenzkimchan"},"content":"            try {","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"joenzkimchan"},"content":"                String[] furtherSplitDeadline \u003d splitText[1].trim().split(\"/by \");","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"joenzkimchan"},"content":"                String deadlineTask \u003d furtherSplitDeadline[0];","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"joenzkimchan"},"content":"                LocalDateTime deadlineBy \u003d LocalDateTime.parse(furtherSplitDeadline[1], Ui.TIME_FORMATTER);","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"joenzkimchan"},"content":"                output \u003d new DeadlineCommand(deadlineTask, deadlineBy);","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"joenzkimchan"},"content":"                break;","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"joenzkimchan"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"joenzkimchan"},"content":"                Ui.dateTimeParseExceptionMessage();","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"joenzkimchan"},"content":"                throw e;","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"joenzkimchan"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"joenzkimchan"},"content":"                Ui.arrayIndexOutOfBoundsExceptionMessage();","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"joenzkimchan"},"content":"                Ui.deadlineHint();","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"joenzkimchan"},"content":"                throw e;","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"joenzkimchan"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"joenzkimchan"},"content":"        case \"list\":","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"joenzkimchan"},"content":"            output \u003d new ListCommand();","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"joenzkimchan"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"joenzkimchan"},"content":"        case \"done\":","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"joenzkimchan"},"content":"            try {","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"joenzkimchan"},"content":"                int index \u003d Integer.parseInt(splitText[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"joenzkimchan"},"content":"                output \u003d new DoneCommand(index);","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"joenzkimchan"},"content":"                break;","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"joenzkimchan"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"joenzkimchan"},"content":"                Ui.numberFormatExceptionMessage();","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"joenzkimchan"},"content":"                throw e;","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"joenzkimchan"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"joenzkimchan"},"content":"                Ui.arrayIndexOutOfBoundsExceptionMessage();","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"joenzkimchan"},"content":"                throw e;","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"joenzkimchan"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"joenzkimchan"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"joenzkimchan"},"content":"            try {","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"joenzkimchan"},"content":"                int index \u003d Integer.parseInt(splitText[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"joenzkimchan"},"content":"                output \u003d new DeleteCommand(index);","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"joenzkimchan"},"content":"                break;","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"joenzkimchan"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"joenzkimchan"},"content":"                Ui.numberFormatExceptionMessage();","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"joenzkimchan"},"content":"                throw e;","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"joenzkimchan"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"joenzkimchan"},"content":"                Ui.arrayIndexOutOfBoundsExceptionMessage();","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"joenzkimchan"},"content":"                throw e;","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"joenzkimchan"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"joenzkimchan"},"content":"        case \"find\":","lastModifiedDate":"2021-08-27"},{"lineNumber":93,"author":{"gitId":"joenzkimchan"},"content":"            try {","lastModifiedDate":"2021-08-27"},{"lineNumber":94,"author":{"gitId":"joenzkimchan"},"content":"                String keyword \u003d splitText[1];","lastModifiedDate":"2021-08-27"},{"lineNumber":95,"author":{"gitId":"joenzkimchan"},"content":"                output \u003d new FindCommand(keyword);","lastModifiedDate":"2021-08-27"},{"lineNumber":96,"author":{"gitId":"joenzkimchan"},"content":"                break;","lastModifiedDate":"2021-08-27"},{"lineNumber":97,"author":{"gitId":"joenzkimchan"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":98,"author":{"gitId":"joenzkimchan"},"content":"                Ui.arrayIndexOutOfBoundsExceptionMessage();","lastModifiedDate":"2021-08-27"},{"lineNumber":99,"author":{"gitId":"joenzkimchan"},"content":"                Ui.findHint();","lastModifiedDate":"2021-08-27"},{"lineNumber":100,"author":{"gitId":"joenzkimchan"},"content":"                throw e;","lastModifiedDate":"2021-08-27"},{"lineNumber":101,"author":{"gitId":"joenzkimchan"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":102,"author":{"gitId":"joenzkimchan"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"joenzkimchan"},"content":"            output \u003d new ByeCommand();","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"joenzkimchan"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"joenzkimchan"},"content":"        default:","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"joenzkimchan"},"content":"            Ui.defaultMessage();","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"joenzkimchan"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"joenzkimchan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"joenzkimchan"},"content":"        return output;","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"joenzkimchan"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"joenzkimchan":112}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joenzkimchan"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"joenzkimchan"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"joenzkimchan"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"joenzkimchan"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"joenzkimchan"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"joenzkimchan"},"content":"import java.io.File;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"joenzkimchan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"joenzkimchan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"joenzkimchan"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"joenzkimchan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"joenzkimchan"},"content":"import java.util.Objects;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"joenzkimchan"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"joenzkimchan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"joenzkimchan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"joenzkimchan"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"joenzkimchan"},"content":" * This class takes in a saved file and loads whatever tasks were saved in it.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"joenzkimchan"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"joenzkimchan"},"content":"public class Storage {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"joenzkimchan"},"content":"    String filePath;","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"joenzkimchan"},"content":"    Scanner saveFile;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"joenzkimchan"},"content":"    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"joenzkimchan"},"content":"     * Constructor for Storage taking in a Scanner file","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"joenzkimchan"},"content":"     * @param saveFile scanner file","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"joenzkimchan"},"content":"    public Storage(Scanner saveFile) {","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"joenzkimchan"},"content":"        this.saveFile \u003d saveFile;","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"joenzkimchan"},"content":"     * Constructor for Storage taking in a filePath","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"joenzkimchan"},"content":"     * @param filePath filePath to the save file","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"joenzkimchan"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"joenzkimchan"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"joenzkimchan"},"content":"        File directory \u003d new File(filePath);","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"joenzkimchan"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"joenzkimchan"},"content":"            File dataFile \u003d directory.getParentFile();","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"joenzkimchan"},"content":"            if (dataFile.mkdir()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"joenzkimchan"},"content":"                Ui.createNewDirectory();","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"joenzkimchan"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"joenzkimchan"},"content":"            if (directory.createNewFile()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"joenzkimchan"},"content":"                Ui.createNewFile();","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"joenzkimchan"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"joenzkimchan"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"joenzkimchan"},"content":"            this.saveFile \u003d new Scanner(file);","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"joenzkimchan"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"joenzkimchan"},"content":"            Ui.fileNotFoundError();","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"joenzkimchan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"joenzkimchan"},"content":"            System.out.println(\"Input error!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"joenzkimchan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"joenzkimchan"},"content":"     * Saved file should be structured in this manner:","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"joenzkimchan"},"content":"     * - In each line, start with a T(odo), D(eadline), E(vent)","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"joenzkimchan"},"content":"     * - Space out each detail with a \"|\u0027","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"joenzkimchan"},"content":"     * - If empty line, assume end of file","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"joenzkimchan"},"content":"     * @return a TaskList with all the saved details.","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"joenzkimchan"},"content":"    public TaskList load() {","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"joenzkimchan"},"content":"        TaskList lst \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"joenzkimchan"},"content":"        while (saveFile.hasNextLine()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"joenzkimchan"},"content":"            String fullLine \u003d saveFile.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"joenzkimchan"},"content":"            if (Objects.equals(fullLine, \"\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"joenzkimchan"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"joenzkimchan"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"joenzkimchan"},"content":"            String[] data \u003d fullLine.split(\"\\\\|\", 4);","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"joenzkimchan"},"content":"            String task \u003d data[0].substring(0, 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"joenzkimchan"},"content":"            String state \u003d data[1].substring(1, 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"joenzkimchan"},"content":"            String taskName \u003d data[2].substring(1);","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"joenzkimchan"},"content":"            switch (task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"joenzkimchan"},"content":"            case \"T\":","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"joenzkimchan"},"content":"                ToDo eventTodo \u003d new ToDo(taskName);","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"joenzkimchan"},"content":"                if (state.contains(\"1\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"joenzkimchan"},"content":"                    eventTodo.doneTask(false);","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"joenzkimchan"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"joenzkimchan"},"content":"                lst.add(eventTodo, false);","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"joenzkimchan"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"joenzkimchan"},"content":"            case \"D\":","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"joenzkimchan"},"content":"                String deadline \u003d data[3].substring(1);","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"joenzkimchan"},"content":"                Deadline eventDeadline \u003d new Deadline(taskName, LocalDateTime.parse(deadline, formatter));","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"joenzkimchan"},"content":"                if (state.contains(\"1\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"joenzkimchan"},"content":"                    eventDeadline.doneTask(false);","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"joenzkimchan"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"joenzkimchan"},"content":"                lst.add(eventDeadline, false);","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"joenzkimchan"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"joenzkimchan"},"content":"            case \"E\":","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"joenzkimchan"},"content":"                String time \u003d data[3].substring(1);","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"joenzkimchan"},"content":"                Event eventEvent \u003d new Event(taskName, LocalDateTime.parse(time, formatter));","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"joenzkimchan"},"content":"                if (state.contains(\"1\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"joenzkimchan"},"content":"                    eventEvent.doneTask(false);","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"joenzkimchan"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"joenzkimchan"},"content":"                lst.add(eventEvent, false);","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"joenzkimchan"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"joenzkimchan"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"joenzkimchan"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"joenzkimchan"},"content":"        return lst;","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":109,"author":{"gitId":"joenzkimchan"},"content":"     * Saves the current storage file based on the input given.","lastModifiedDate":"2021-08-27"},{"lineNumber":110,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":111,"author":{"gitId":"joenzkimchan"},"content":"     * @param input input given, typically the full string of whatever tasks are on the task list.","lastModifiedDate":"2021-08-27"},{"lineNumber":112,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":113,"author":{"gitId":"joenzkimchan"},"content":"    public void save(String input) {","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"joenzkimchan"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"joenzkimchan"},"content":"            PrintWriter newFile \u003d new PrintWriter(this.filePath);","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"joenzkimchan"},"content":"            newFile.println(input);","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"joenzkimchan"},"content":"            newFile.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":118,"author":{"gitId":"joenzkimchan"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":119,"author":{"gitId":"joenzkimchan"},"content":"            Ui.fileNotFoundError();","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"joenzkimchan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":121,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"joenzkimchan"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"joenzkimchan":122}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joenzkimchan"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"joenzkimchan"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"joenzkimchan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"joenzkimchan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"joenzkimchan"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"joenzkimchan"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"joenzkimchan"},"content":" * This class represents the User Interface, which is responsible for all the inputting and printing of","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"joenzkimchan"},"content":" * statements which the user will see.","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"joenzkimchan"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"joenzkimchan"},"content":"public class Ui {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"joenzkimchan"},"content":"    public static final String DEFAULT_SPACES \u003d \"    \";","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"joenzkimchan"},"content":"    public static final String INDENTED_SPACES \u003d \"     \";","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"joenzkimchan"},"content":"    public static final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"joenzkimchan"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"joenzkimchan"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"joenzkimchan"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"joenzkimchan"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"joenzkimchan"},"content":"    private Scanner input;","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"joenzkimchan"},"content":"    public static final DateTimeFormatter TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"joenzkimchan"},"content":"     * Constructor for Ui. Initialises the input scanner.","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"joenzkimchan"},"content":"    public Ui() {","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"joenzkimchan"},"content":"        this.input \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"joenzkimchan"},"content":"     * Shows the welcome message.","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"joenzkimchan"},"content":"    public static void showWelcome() {","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"joenzkimchan"},"content":"        Ui.showLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"joenzkimchan"},"content":"        System.out.println(DEFAULT_SPACES + \"Hello! I\u0027m Duke\");","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"joenzkimchan"},"content":"        System.out.println(DEFAULT_SPACES + \"What can I do for you?\");","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"joenzkimchan"},"content":"        Ui.showLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"joenzkimchan"},"content":"     * Gives the program the next line which was input by the user.","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"joenzkimchan"},"content":"     * @return string of the input.","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"joenzkimchan"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"joenzkimchan"},"content":"        return input.nextLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"joenzkimchan"},"content":"     * Displays the tasks currently in the task list.","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"joenzkimchan"},"content":"     * @param taskList the current task list.","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"joenzkimchan"},"content":"    public static void listTasks(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"joenzkimchan"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"joenzkimchan"},"content":"            System.out.println(DEFAULT_SPACES + \"You have no tasks in your list!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"joenzkimchan"},"content":"            System.out.println(DEFAULT_SPACES + \"Try adding some tasks with todo, event, or deadline\");","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"joenzkimchan"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"joenzkimchan"},"content":"            System.out.println(DEFAULT_SPACES + \"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"joenzkimchan"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"joenzkimchan"},"content":"                System.out.println(INDENTED_SPACES + (i + 1) + \".\" + taskList.get(i));","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"joenzkimchan"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"joenzkimchan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"joenzkimchan"},"content":"     * Displays the message when a user finishes a task.","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"joenzkimchan"},"content":"     * @param task the task to be completed.","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"joenzkimchan"},"content":"    public static void finishTask(Task task) {","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"joenzkimchan"},"content":"        System.out.println(DEFAULT_SPACES + \"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"joenzkimchan"},"content":"        System.out.println(INDENTED_SPACES + task);","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"joenzkimchan"},"content":"     * Displays the remaining tasks in the list.","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"joenzkimchan"},"content":"     * @param tasks task list.","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"joenzkimchan"},"content":"    public static void remainingTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"joenzkimchan"},"content":"        System.out.printf(DEFAULT_SPACES + \"Now you have %d tasks in the list.%n\", tasks.size());","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":87,"author":{"gitId":"joenzkimchan"},"content":"     * Displays a message when a task is deleted.","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"joenzkimchan"},"content":"     * @param task task to be deleted.","lastModifiedDate":"2021-08-27"},{"lineNumber":90,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":91,"author":{"gitId":"joenzkimchan"},"content":"    public static void deleteTask(Task task) {","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"joenzkimchan"},"content":"        System.out.println(DEFAULT_SPACES + \"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"joenzkimchan"},"content":"        System.out.println(INDENTED_SPACES + task);","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":97,"author":{"gitId":"joenzkimchan"},"content":"     * Displays the exit message for Duke.","lastModifiedDate":"2021-08-27"},{"lineNumber":98,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":99,"author":{"gitId":"joenzkimchan"},"content":"    public static void endDuke() {","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"joenzkimchan"},"content":"        System.out.println(DEFAULT_SPACES + \"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":104,"author":{"gitId":"joenzkimchan"},"content":"     * Displays the error message for a number format exception.","lastModifiedDate":"2021-08-27"},{"lineNumber":105,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":106,"author":{"gitId":"joenzkimchan"},"content":"    public static void numberFormatExceptionMessage() {","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"joenzkimchan"},"content":"        System.out.println(DEFAULT_SPACES + \"☹ OOPS!!! The value you inputted is not valid!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":111,"author":{"gitId":"joenzkimchan"},"content":"     * Displays the error message for a date time parse exception.","lastModifiedDate":"2021-08-27"},{"lineNumber":112,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":113,"author":{"gitId":"joenzkimchan"},"content":"    public static void dateTimeParseExceptionMessage() {","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"joenzkimchan"},"content":"        System.out.println(DEFAULT_SPACES + \"☹ OOPS!!!  You used an invalid date! Hint: Use \u0027YYYY-MM-DD HH:mm\u0027\");","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":118,"author":{"gitId":"joenzkimchan"},"content":"     * Displays the error message for an array index out of bounds exception.","lastModifiedDate":"2021-08-27"},{"lineNumber":119,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":120,"author":{"gitId":"joenzkimchan"},"content":"    public static void arrayIndexOutOfBoundsExceptionMessage() {","lastModifiedDate":"2021-08-26"},{"lineNumber":121,"author":{"gitId":"joenzkimchan"},"content":"        System.out.println(DEFAULT_SPACES + \"☹ OOPS!!!  Did you miss a term?\");","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":124,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":125,"author":{"gitId":"joenzkimchan"},"content":"     * Displays the hint when there is an error message for a the creation of a todo.","lastModifiedDate":"2021-08-27"},{"lineNumber":126,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":127,"author":{"gitId":"joenzkimchan"},"content":"    public static void toDoHint() {","lastModifiedDate":"2021-08-26"},{"lineNumber":128,"author":{"gitId":"joenzkimchan"},"content":"        System.out.println(DEFAULT_SPACES + \"Hint: add a description!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":129,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":130,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":131,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":132,"author":{"gitId":"joenzkimchan"},"content":"     * Displays the hint when there is an error message for a the creation of a deadline.","lastModifiedDate":"2021-08-27"},{"lineNumber":133,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":134,"author":{"gitId":"joenzkimchan"},"content":"    public static void deadlineHint() {","lastModifiedDate":"2021-08-26"},{"lineNumber":135,"author":{"gitId":"joenzkimchan"},"content":"        System.out.println(DEFAULT_SPACES + \"Hint: Use /by to add a deadline!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":136,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":137,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":138,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":139,"author":{"gitId":"joenzkimchan"},"content":"     * Displays the hint when there is an error message for a the creation of a event.","lastModifiedDate":"2021-08-27"},{"lineNumber":140,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":141,"author":{"gitId":"joenzkimchan"},"content":"    public static void eventHint() {","lastModifiedDate":"2021-08-26"},{"lineNumber":142,"author":{"gitId":"joenzkimchan"},"content":"        System.out.println(DEFAULT_SPACES + \"Hint: Use /at to add a timing for the event!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":143,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":144,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":145,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":146,"author":{"gitId":"joenzkimchan"},"content":"     * Displays the error message for when there is a file not found exception.","lastModifiedDate":"2021-08-27"},{"lineNumber":147,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":148,"author":{"gitId":"joenzkimchan"},"content":"    public static void fileNotFoundError() {","lastModifiedDate":"2021-08-26"},{"lineNumber":149,"author":{"gitId":"joenzkimchan"},"content":"        System.out.println(\"File not found! Please create an empty file in /ip/data named duke.txt to get started\");","lastModifiedDate":"2021-08-26"},{"lineNumber":150,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":151,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":152,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":153,"author":{"gitId":"joenzkimchan"},"content":"     * Displays a message stating that there was no saved file, so one is created for them.","lastModifiedDate":"2021-08-27"},{"lineNumber":154,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":155,"author":{"gitId":"joenzkimchan"},"content":"    public static void createNewFile() {","lastModifiedDate":"2021-08-26"},{"lineNumber":156,"author":{"gitId":"joenzkimchan"},"content":"        System.out.println(DEFAULT_SPACES + \"Saved file not found! Creating a new file for you...\");","lastModifiedDate":"2021-08-26"},{"lineNumber":157,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":158,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":159,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":160,"author":{"gitId":"joenzkimchan"},"content":"     * Displays a message stating that the directory did not exist, so one is created for them.","lastModifiedDate":"2021-08-27"},{"lineNumber":161,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":162,"author":{"gitId":"joenzkimchan"},"content":"    public static void createNewDirectory() {","lastModifiedDate":"2021-08-26"},{"lineNumber":163,"author":{"gitId":"joenzkimchan"},"content":"        System.out.println(DEFAULT_SPACES + \"Directory does not exist! Creating a new directory for you...\");","lastModifiedDate":"2021-08-26"},{"lineNumber":164,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":165,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":166,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":167,"author":{"gitId":"joenzkimchan"},"content":"     * Displays a message when a task is added.","lastModifiedDate":"2021-08-27"},{"lineNumber":168,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":169,"author":{"gitId":"joenzkimchan"},"content":"     * @param task task to be added","lastModifiedDate":"2021-08-27"},{"lineNumber":170,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":171,"author":{"gitId":"joenzkimchan"},"content":"    public static void addTask(Task task) {","lastModifiedDate":"2021-08-26"},{"lineNumber":172,"author":{"gitId":"joenzkimchan"},"content":"        System.out.println(DEFAULT_SPACES + \"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-26"},{"lineNumber":173,"author":{"gitId":"joenzkimchan"},"content":"        System.out.println(INDENTED_SPACES + task);","lastModifiedDate":"2021-08-26"},{"lineNumber":174,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":175,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":176,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":177,"author":{"gitId":"joenzkimchan"},"content":"     * Displays the number of tasks in the task list.","lastModifiedDate":"2021-08-27"},{"lineNumber":178,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":179,"author":{"gitId":"joenzkimchan"},"content":"     * @param tasks the task list","lastModifiedDate":"2021-08-27"},{"lineNumber":180,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":181,"author":{"gitId":"joenzkimchan"},"content":"    public static void numberOfTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-26"},{"lineNumber":182,"author":{"gitId":"joenzkimchan"},"content":"        System.out.printf(DEFAULT_SPACES + \"Now you have %d tasks in the list.%n\", tasks.size());","lastModifiedDate":"2021-08-26"},{"lineNumber":183,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":184,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":185,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":186,"author":{"gitId":"joenzkimchan"},"content":"     * Displays the default message when an input is not understood.","lastModifiedDate":"2021-08-27"},{"lineNumber":187,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":188,"author":{"gitId":"joenzkimchan"},"content":"    public static void defaultMessage() {","lastModifiedDate":"2021-08-26"},{"lineNumber":189,"author":{"gitId":"joenzkimchan"},"content":"        System.out.println(DEFAULT_SPACES + \"OOPS I did not quite understand that :(\");","lastModifiedDate":"2021-08-26"},{"lineNumber":190,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":191,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":192,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":193,"author":{"gitId":"joenzkimchan"},"content":"     * Displays a straight line used for dividing commands and inputs.","lastModifiedDate":"2021-08-27"},{"lineNumber":194,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":195,"author":{"gitId":"joenzkimchan"},"content":"    public static void showLine() {","lastModifiedDate":"2021-08-26"},{"lineNumber":196,"author":{"gitId":"joenzkimchan"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-08-26"},{"lineNumber":197,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":198,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":199,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":200,"author":{"gitId":"joenzkimchan"},"content":"     * Given a task list which is the result of a search operation, prints out the results.","lastModifiedDate":"2021-08-27"},{"lineNumber":201,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":202,"author":{"gitId":"joenzkimchan"},"content":"     * @param taskList task list comprising matching search terms.","lastModifiedDate":"2021-08-27"},{"lineNumber":203,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":204,"author":{"gitId":"joenzkimchan"},"content":"    public static void listTasksSearchResults(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-27"},{"lineNumber":205,"author":{"gitId":"joenzkimchan"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-27"},{"lineNumber":206,"author":{"gitId":"joenzkimchan"},"content":"            System.out.println(DEFAULT_SPACES + \"There were no search results. Try another keyword!\");","lastModifiedDate":"2021-08-27"},{"lineNumber":207,"author":{"gitId":"joenzkimchan"},"content":"        } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":208,"author":{"gitId":"joenzkimchan"},"content":"            System.out.println(DEFAULT_SPACES + \"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-08-27"},{"lineNumber":209,"author":{"gitId":"joenzkimchan"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-27"},{"lineNumber":210,"author":{"gitId":"joenzkimchan"},"content":"                System.out.println(INDENTED_SPACES + (i + 1) + \".\" + taskList.get(i));","lastModifiedDate":"2021-08-27"},{"lineNumber":211,"author":{"gitId":"joenzkimchan"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":212,"author":{"gitId":"joenzkimchan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":213,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":214,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":215,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":216,"author":{"gitId":"joenzkimchan"},"content":"     * Provides the hint for users when they use the find command.","lastModifiedDate":"2021-08-27"},{"lineNumber":217,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":218,"author":{"gitId":"joenzkimchan"},"content":"    public static void findHint() {","lastModifiedDate":"2021-08-27"},{"lineNumber":219,"author":{"gitId":"joenzkimchan"},"content":"        System.out.println(DEFAULT_SPACES + \"Add the keyword at the back of find!\");","lastModifiedDate":"2021-08-27"},{"lineNumber":220,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":221,"author":{"gitId":"joenzkimchan"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"joenzkimchan":221}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joenzkimchan"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"joenzkimchan"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"joenzkimchan"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"joenzkimchan"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"joenzkimchan"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"joenzkimchan"},"content":" * This class represents a ByeCommand, which is when the user inputs \"bye\".","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"joenzkimchan"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"joenzkimchan"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"joenzkimchan"},"content":"     * Saves the storage file only, since the user is quitting Duke.","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"joenzkimchan"},"content":"     * @param tasks task list","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"joenzkimchan"},"content":"     * @param storage storage","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"joenzkimchan"},"content":"     * @param ui ui","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"joenzkimchan"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"joenzkimchan"},"content":"    public void execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"joenzkimchan"},"content":"        String saveFileString \u003d tasks.save();","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"joenzkimchan"},"content":"        storage.save(saveFileString);","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"joenzkimchan"},"content":"        Ui.endDuke();","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"joenzkimchan"},"content":"     * Returns true as the program should quit after \"bye\" is input.","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"joenzkimchan"},"content":"     * @return false.","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"joenzkimchan"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"joenzkimchan"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"joenzkimchan"},"content":"        return true;","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"joenzkimchan"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"joenzkimchan":35}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joenzkimchan"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"joenzkimchan"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"joenzkimchan"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"joenzkimchan"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"joenzkimchan"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"joenzkimchan"},"content":" * This class represents the abstract Command class, which provides the skeleton","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"joenzkimchan"},"content":" * for all Commands.","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"joenzkimchan"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"joenzkimchan"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"joenzkimchan"},"content":"     * This method determines what the command should do.","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"joenzkimchan"},"content":"     * @param tasks task list","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"joenzkimchan"},"content":"     * @param storage storage","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"joenzkimchan"},"content":"     * @param ui ui","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"joenzkimchan"},"content":"    public abstract void execute(TaskList tasks, Storage storage, Ui ui);","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"joenzkimchan"},"content":"     * This method determines if the scanner should keep scanning inputs.","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"joenzkimchan"},"content":"     * @return true if yes, false if no.","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"joenzkimchan"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"joenzkimchan"},"content":"}","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"joenzkimchan":29}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joenzkimchan"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"joenzkimchan"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"joenzkimchan"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"joenzkimchan"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"joenzkimchan"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"joenzkimchan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"joenzkimchan"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"joenzkimchan"},"content":" * This class represents the Command when a user inputs \"deadline\" validly.","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"joenzkimchan"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"joenzkimchan"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"joenzkimchan"},"content":"    private String task;","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"joenzkimchan"},"content":"    private LocalDateTime time;","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"joenzkimchan"},"content":"     * Constructor for a deadline command.","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"joenzkimchan"},"content":"     * @param task detail of deadline task","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"joenzkimchan"},"content":"     * @param time time of deadline","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"joenzkimchan"},"content":"    public DeadlineCommand(String task, LocalDateTime time) {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"joenzkimchan"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"joenzkimchan"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"joenzkimchan"},"content":"     * Adds a new deadline to the task list, and saves the current task list.","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"joenzkimchan"},"content":"     * @param tasks task list","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"joenzkimchan"},"content":"     * @param storage storage","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"joenzkimchan"},"content":"     * @param ui ui","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"joenzkimchan"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"joenzkimchan"},"content":"    public void execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"joenzkimchan"},"content":"        Deadline deadline \u003d new Deadline(task, time);","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"joenzkimchan"},"content":"        tasks.add(deadline, true);","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"joenzkimchan"},"content":"        String saveFileString \u003d tasks.save();","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"joenzkimchan"},"content":"        storage.save(saveFileString);","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"joenzkimchan"},"content":"     * Returns false as the program should not terminate.","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"joenzkimchan"},"content":"     * @return false.","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"joenzkimchan"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"joenzkimchan"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"joenzkimchan"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"joenzkimchan"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"joenzkimchan":52}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joenzkimchan"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"joenzkimchan"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"joenzkimchan"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"joenzkimchan"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"joenzkimchan"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"joenzkimchan"},"content":" * This class represents the command when the user types \"delete\" validly.","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"joenzkimchan"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"joenzkimchan"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"joenzkimchan"},"content":"    private int index;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"joenzkimchan"},"content":"     * Constructor for DeleteCommand, which takes in the index of the task on the array list.","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"joenzkimchan"},"content":"     * @param index","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"joenzkimchan"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"joenzkimchan"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"joenzkimchan"},"content":"     * Deletes the necessary task on the task list, and saves.","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"joenzkimchan"},"content":"     * @param tasks task list","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"joenzkimchan"},"content":"     * @param storage storage","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"joenzkimchan"},"content":"     * @param ui ui","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"joenzkimchan"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"joenzkimchan"},"content":"    public void execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"joenzkimchan"},"content":"        tasks.deleteTask(index);","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"joenzkimchan"},"content":"        String saveFileString \u003d tasks.save();","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"joenzkimchan"},"content":"        storage.save(saveFileString);","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"joenzkimchan"},"content":"     * Returns false as the program should not terminate.","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"joenzkimchan"},"content":"     * @return false.","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"joenzkimchan"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"joenzkimchan"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"joenzkimchan"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"joenzkimchan"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"joenzkimchan":45}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joenzkimchan"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"joenzkimchan"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"joenzkimchan"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"joenzkimchan"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"joenzkimchan"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"joenzkimchan"},"content":" * This class represents the command when a user types \"done\" validly.","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"joenzkimchan"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"joenzkimchan"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"joenzkimchan"},"content":"    private int index;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"joenzkimchan"},"content":"     * Constructor for DoneCommand, which takes in the index of the task to be done on the list.","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"joenzkimchan"},"content":"     * @param index index on the list","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"joenzkimchan"},"content":"    public DoneCommand(int index) {","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"joenzkimchan"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"joenzkimchan"},"content":"     * Finishes the task at the index, and saves.","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"joenzkimchan"},"content":"     * @param tasks task list","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"joenzkimchan"},"content":"     * @param storage storage","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"joenzkimchan"},"content":"     * @param ui ui","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"joenzkimchan"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"joenzkimchan"},"content":"    public void execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"joenzkimchan"},"content":"        tasks.finishTask(index);","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"joenzkimchan"},"content":"        String saveFileString \u003d tasks.save();","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"joenzkimchan"},"content":"        storage.save(saveFileString);","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"joenzkimchan"},"content":"     * Returns false as the program should not terminate.","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"joenzkimchan"},"content":"     * @return false.","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"joenzkimchan"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"joenzkimchan"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"joenzkimchan"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"joenzkimchan"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"joenzkimchan":45}},{"path":"src/main/java/duke/command/EmptyCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joenzkimchan"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"joenzkimchan"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"joenzkimchan"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"joenzkimchan"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"joenzkimchan"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"joenzkimchan"},"content":" * This class represents an EmptyCommand, when nothing should be done.","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"joenzkimchan"},"content":" * Main purpose of this class is so the default case is this, and the while loop does not terminate.","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"joenzkimchan"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"joenzkimchan"},"content":"public class EmptyCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"joenzkimchan"},"content":"     * Does nothing.","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"joenzkimchan"},"content":"     * @param tasks task list","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"joenzkimchan"},"content":"     * @param storage storage","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"joenzkimchan"},"content":"     * @param ui ui","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"joenzkimchan"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"joenzkimchan"},"content":"    public void execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"joenzkimchan"},"content":"        // Do nothing","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"joenzkimchan"},"content":"     * Should not terminate.","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"joenzkimchan"},"content":"     * @return false.","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"joenzkimchan"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"joenzkimchan"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"joenzkimchan"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"joenzkimchan"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"joenzkimchan":33}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joenzkimchan"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"joenzkimchan"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"joenzkimchan"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"joenzkimchan"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"joenzkimchan"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"joenzkimchan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"joenzkimchan"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"joenzkimchan"},"content":" * This class represents the Command when the user types \"event\" validly.","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"joenzkimchan"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"joenzkimchan"},"content":"public class EventCommand extends Command{","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"joenzkimchan"},"content":"    private String task;","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"joenzkimchan"},"content":"    private LocalDateTime time;","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"joenzkimchan"},"content":"     * Constructor for EventCommand which takes in the task details and the time of the event.","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"joenzkimchan"},"content":"     * @param task task details.","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"joenzkimchan"},"content":"     * @param time time of the event.","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"joenzkimchan"},"content":"    public EventCommand(String task, LocalDateTime time) {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"joenzkimchan"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"joenzkimchan"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"joenzkimchan"},"content":"     * Adds an event to the list and saves the task list.","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"joenzkimchan"},"content":"     * @param tasks task list","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"joenzkimchan"},"content":"     * @param storage storage","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"joenzkimchan"},"content":"     * @param ui ui","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"joenzkimchan"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"joenzkimchan"},"content":"    public void execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"joenzkimchan"},"content":"        Event event \u003d new Event(task, time);","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"joenzkimchan"},"content":"        tasks.add(event, true);","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"joenzkimchan"},"content":"        String saveFileString \u003d tasks.save();","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"joenzkimchan"},"content":"        storage.save(saveFileString);","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"joenzkimchan"},"content":"     * Returns false as the program should not terminate.","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"joenzkimchan"},"content":"     * @return false.","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"joenzkimchan"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"joenzkimchan"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"joenzkimchan"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"joenzkimchan"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"joenzkimchan":52}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joenzkimchan"},"content":"package duke.command;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"joenzkimchan"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"joenzkimchan"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"joenzkimchan"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"joenzkimchan"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"joenzkimchan"},"content":" * This class represents the command when a user inputs \"find\".","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"joenzkimchan"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"joenzkimchan"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"joenzkimchan"},"content":"    String keyword;","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"joenzkimchan"},"content":"     * Constructor for find, which takes in the keyword to be found.","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"joenzkimchan"},"content":"     * @param keyword keyword to be searched for","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"joenzkimchan"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"joenzkimchan"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"joenzkimchan"},"content":"     * Searches for the keyword in the task list.","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"joenzkimchan"},"content":"     * @param tasks task list.","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"joenzkimchan"},"content":"     * @param storage storage.","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"joenzkimchan"},"content":"     * @param ui ui.","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"joenzkimchan"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"joenzkimchan"},"content":"    public void execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"joenzkimchan"},"content":"        tasks.searchTask(keyword);","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"joenzkimchan"},"content":"     * Returns false as the program should not terminate.","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"joenzkimchan"},"content":"     * @return false.","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"joenzkimchan"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"joenzkimchan"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"joenzkimchan"},"content":"        return false;","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"joenzkimchan"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"joenzkimchan":43}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joenzkimchan"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"joenzkimchan"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"joenzkimchan"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"joenzkimchan"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"joenzkimchan"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"joenzkimchan"},"content":" * This class represents the command when the user types \"list\" validly.","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"joenzkimchan"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"joenzkimchan"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"joenzkimchan"},"content":"     * Lists out the tasks in the task list.","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"joenzkimchan"},"content":"     * @param tasks task list","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"joenzkimchan"},"content":"     * @param storage storage","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"joenzkimchan"},"content":"     * @param ui ui","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"joenzkimchan"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"joenzkimchan"},"content":"    public void execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"joenzkimchan"},"content":"        tasks.listOut();","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"joenzkimchan"},"content":"     * Returns false as the program should not terminate.","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"joenzkimchan"},"content":"     * @return false.","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"joenzkimchan"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"joenzkimchan"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"joenzkimchan"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"joenzkimchan"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"joenzkimchan":32}},{"path":"src/main/java/duke/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joenzkimchan"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"joenzkimchan"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"joenzkimchan"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"joenzkimchan"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"joenzkimchan"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"joenzkimchan"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"joenzkimchan"},"content":" * This class represents the command when the user types \"todo\" validly.","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"joenzkimchan"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"joenzkimchan"},"content":"public class ToDoCommand extends Command{","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"joenzkimchan"},"content":"    String task;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"joenzkimchan"},"content":"     * Constructor for ToDoCommand which takes in the task details.","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"joenzkimchan"},"content":"     * @param task task details.","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"joenzkimchan"},"content":"    public ToDoCommand(String task) {","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"joenzkimchan"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"joenzkimchan"},"content":"     * Adds a ToDo to the task list and saves the file.","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"joenzkimchan"},"content":"     * @param tasks task list","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"joenzkimchan"},"content":"     * @param storage storage","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"joenzkimchan"},"content":"     * @param ui ui","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"joenzkimchan"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"joenzkimchan"},"content":"    public void execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"joenzkimchan"},"content":"        ToDo item \u003d new ToDo(this.task);","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"joenzkimchan"},"content":"        tasks.add(item, true);","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"joenzkimchan"},"content":"        String saveFileString \u003d tasks.save();","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"joenzkimchan"},"content":"        storage.save(saveFileString);","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"joenzkimchan"},"content":"     * Returns false as the program should not terminate.","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"joenzkimchan"},"content":"     * @return false.","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"joenzkimchan"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"joenzkimchan"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"joenzkimchan"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"joenzkimchan"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"joenzkimchan":47}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joenzkimchan"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"joenzkimchan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"joenzkimchan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"joenzkimchan"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"joenzkimchan"},"content":" * This class represents a deadline, a task with a deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"joenzkimchan"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"joenzkimchan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"joenzkimchan"},"content":"    LocalDateTime deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"joenzkimchan"},"content":"     * Constructor for Deadline, which takes in a task name and a deadline.","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"joenzkimchan"},"content":"     * @param taskName name of task.","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"joenzkimchan"},"content":"     * @param deadline deadline of the task.","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"joenzkimchan"},"content":"    public Deadline(String taskName, LocalDateTime deadline) {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"joenzkimchan"},"content":"        super(taskName);","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"joenzkimchan"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"joenzkimchan"},"content":"     * Gives the type of task.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"joenzkimchan"},"content":"     * @return D for Deadline","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"joenzkimchan"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"joenzkimchan"},"content":"    public String getType() {","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"joenzkimchan"},"content":"        return \"D\";","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"joenzkimchan"},"content":"     * Gives save-friendly information.","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"joenzkimchan"},"content":"     * @return save-friendly information.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"joenzkimchan"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"joenzkimchan"},"content":"    public String getSaveInfo() {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"joenzkimchan"},"content":"        return super.getSaveInfo() + \"| \"","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"joenzkimchan"},"content":"                + this.deadline.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"joenzkimchan"},"content":"     * Overriden toString method.","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"joenzkimchan"},"content":"     * @return string representation of the task.","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"joenzkimchan"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"joenzkimchan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"joenzkimchan"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"joenzkimchan"},"content":"                + \"(by: \" + this.deadline.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")) + \")\";","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"joenzkimchan"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"joenzkimchan":54}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joenzkimchan"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"joenzkimchan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"joenzkimchan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"joenzkimchan"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"joenzkimchan"},"content":" * This class represents an Event, which is a Task with a timing.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"joenzkimchan"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"joenzkimchan"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"joenzkimchan"},"content":"    LocalDateTime time;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"joenzkimchan"},"content":"     * Constructor for Event, which takes in a task name and a time for the event.","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"joenzkimchan"},"content":"     * @param taskName name of task.","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"joenzkimchan"},"content":"     * @param time time of event.","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"joenzkimchan"},"content":"    public Event(String taskName, LocalDateTime time) {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"joenzkimchan"},"content":"        super(taskName);","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"joenzkimchan"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"joenzkimchan"},"content":"     * Gives the type of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"joenzkimchan"},"content":"     * @return E for event.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"joenzkimchan"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"joenzkimchan"},"content":"    public String getType() {","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"joenzkimchan"},"content":"        return \"E\";","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"joenzkimchan"},"content":"     * Gives save-friendly information.","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"joenzkimchan"},"content":"     * @return save-friendly information.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"joenzkimchan"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"joenzkimchan"},"content":"    public String getSaveInfo() {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"joenzkimchan"},"content":"        return super.getSaveInfo() + \"| \" + this.time.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"joenzkimchan"},"content":"     * Overriden toString method.","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"joenzkimchan"},"content":"     * @return string representation of the task.","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"joenzkimchan"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"joenzkimchan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"joenzkimchan"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + this.time.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")) + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"joenzkimchan"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"joenzkimchan":52}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joenzkimchan"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"joenzkimchan"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"joenzkimchan"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"joenzkimchan"},"content":" * This class represents a task to be done in the TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"joenzkimchan"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"joenzkimchan"},"content":"public class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"joenzkimchan"},"content":"    private String taskName;","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"joenzkimchan"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"joenzkimchan"},"content":"     * Constructor for a task, which takes in a task name.","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"joenzkimchan"},"content":"     * @param taskName name of task.","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"joenzkimchan"},"content":"    public Task(String taskName) {","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"joenzkimchan"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"joenzkimchan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"joenzkimchan"},"content":"     * Gives the type of the Task (i.e Event, ToDo, Deadline). To be overriden.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"joenzkimchan"},"content":"     * @return empty string","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"joenzkimchan"},"content":"    public String getType() {","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"joenzkimchan"},"content":"        return \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"joenzkimchan"},"content":"     * Gives the description of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"joenzkimchan"},"content":"     * @return description of the task","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"joenzkimchan"},"content":"    public String getTaskName() {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"joenzkimchan"},"content":"        return this.taskName;","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"joenzkimchan"},"content":"     * Shows the state of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"joenzkimchan"},"content":"     * @return the state of the task","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"joenzkimchan"},"content":"    public boolean getDone() {","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"joenzkimchan"},"content":"        return this.isDone;","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"joenzkimchan"},"content":"     * Gives a save-file friendly version of the task. To be overriden in child classes.","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"joenzkimchan"},"content":"     * @return save information","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"joenzkimchan"},"content":"    public String getSaveInfo() {","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"joenzkimchan"},"content":"        return this.taskName;","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"joenzkimchan"},"content":"     * Marks the task as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"joenzkimchan"},"content":"     * @param shouldPrint determines if the task being marked as done should be printed.","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"joenzkimchan"},"content":"    public void doneTask(boolean shouldPrint) {","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"joenzkimchan"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"joenzkimchan"},"content":"        if (shouldPrint) {","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"joenzkimchan"},"content":"            Ui.finishTask(this);","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"joenzkimchan"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":68,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":70,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"joenzkimchan"},"content":"     * Returns whether the name contains the keyword. Note this matches the keyword with anything infront","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"joenzkimchan"},"content":"     * and behind it. (e.g. four in fourteen will return true)","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"joenzkimchan"},"content":"     * @param keyword to be searched in the task name.","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"joenzkimchan"},"content":"     * @return true if the task name contains the keyword, false if not.","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"joenzkimchan"},"content":"    public boolean doesNameContain(String keyword) {","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"joenzkimchan"},"content":"        return taskName.matches(\"(.*)\" + keyword + \"(.*)\");","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"joenzkimchan"},"content":"     * Overriden toString method.","lastModifiedDate":"2021-08-27"},{"lineNumber":83,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"joenzkimchan"},"content":"     * @return string representation of the task.","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":86,"author":{"gitId":"joenzkimchan"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":87,"author":{"gitId":"joenzkimchan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":88,"author":{"gitId":"joenzkimchan"},"content":"        return (isDone ? \"[X] \" : \"[ ] \") +  this.taskName;","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":90,"author":{"gitId":"joenzkimchan"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"joenzkimchan":90}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joenzkimchan"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"joenzkimchan"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"joenzkimchan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"joenzkimchan"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"joenzkimchan"},"content":" * This class represents a TaskList, which is the list of tasks that Duke refers to to carry out commands provided","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"joenzkimchan"},"content":" * to him.","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"joenzkimchan"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"joenzkimchan"},"content":"public class TaskList {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"joenzkimchan"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"joenzkimchan"},"content":"     * Constructor for TaskList, which creates a new array of Tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"joenzkimchan"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"joenzkimchan"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"joenzkimchan"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"joenzkimchan"},"content":"     * @param task task to be added.","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"joenzkimchan"},"content":"     * @param shouldPrint true if should print, false if should not print","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"joenzkimchan"},"content":"    public void add(Task task, boolean shouldPrint) {","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"joenzkimchan"},"content":"        this.tasks.add(task);","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"joenzkimchan"},"content":"        if (shouldPrint) {","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"joenzkimchan"},"content":"            Ui.addTask(task);","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"joenzkimchan"},"content":"            Ui.numberOfTasks(tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"joenzkimchan"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"joenzkimchan"},"content":"     * Finishes a task at a given index.","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"joenzkimchan"},"content":"     * @param index index from 1 (i.e lowest index is 1, so subtract 1 to get real index)","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"joenzkimchan"},"content":"    public void finishTask(int index) {","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"joenzkimchan"},"content":"        Task task \u003d this.tasks.get(index - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"joenzkimchan"},"content":"        task.doneTask(true);","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"joenzkimchan"},"content":"     * Lists out the current items in the TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"joenzkimchan"},"content":"    public void listOut() {","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"joenzkimchan"},"content":"        Ui.listTasks(tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"joenzkimchan"},"content":"     * This method is to be used when quitting and saving the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"joenzkimchan"},"content":"     * @return the resulting string containing save-friendly information","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"joenzkimchan"},"content":"    public String save() {","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"joenzkimchan"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"joenzkimchan"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"joenzkimchan"},"content":"            output +\u003d task.getType() + \" | \" + (task.getDone() ? \"1 | \" : \"0 | \") + task.getSaveInfo() + \"\\n\";","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"joenzkimchan"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"joenzkimchan"},"content":"        return output;","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":67,"author":{"gitId":"joenzkimchan"},"content":"     * Deletes a task at a certain index","lastModifiedDate":"2021-08-17"},{"lineNumber":68,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":69,"author":{"gitId":"joenzkimchan"},"content":"     * @param index index from 1 (i.e lowest index is 1, so subtract 1 to get real index)","lastModifiedDate":"2021-08-17"},{"lineNumber":70,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":71,"author":{"gitId":"joenzkimchan"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2021-08-17"},{"lineNumber":72,"author":{"gitId":"joenzkimchan"},"content":"        Task item \u003d this.tasks.remove(index - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"joenzkimchan"},"content":"        Ui.deleteTask(item);","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"joenzkimchan"},"content":"        Ui.remainingTasks(tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":76,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"joenzkimchan"},"content":"     * Searches for a task given a keyword.","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"joenzkimchan"},"content":"    public void searchTask(String keyword) {","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"joenzkimchan"},"content":"        TaskList matches \u003d new TaskList();","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"joenzkimchan"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2021-08-27"},{"lineNumber":83,"author":{"gitId":"joenzkimchan"},"content":"            if (t.doesNameContain(keyword)) {","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"joenzkimchan"},"content":"                matches.add(t, false);","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"joenzkimchan"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":86,"author":{"gitId":"joenzkimchan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":87,"author":{"gitId":"joenzkimchan"},"content":"        matches.displaySearchResults();","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":90,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":91,"author":{"gitId":"joenzkimchan"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2021-08-27"},{"lineNumber":92,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":93,"author":{"gitId":"joenzkimchan"},"content":"     * @return number of tasks in the list.","lastModifiedDate":"2021-08-27"},{"lineNumber":94,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":95,"author":{"gitId":"joenzkimchan"},"content":"    private int numTasks() {","lastModifiedDate":"2021-08-27"},{"lineNumber":96,"author":{"gitId":"joenzkimchan"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-27"},{"lineNumber":97,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":98,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":99,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":100,"author":{"gitId":"joenzkimchan"},"content":"     * Displays search results.","lastModifiedDate":"2021-08-27"},{"lineNumber":101,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":102,"author":{"gitId":"joenzkimchan"},"content":"    public void displaySearchResults() {","lastModifiedDate":"2021-08-27"},{"lineNumber":103,"author":{"gitId":"joenzkimchan"},"content":"        Ui.listTasksSearchResults(tasks);","lastModifiedDate":"2021-08-27"},{"lineNumber":104,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":105,"author":{"gitId":"joenzkimchan"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"joenzkimchan":105}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joenzkimchan"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"joenzkimchan"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"joenzkimchan"},"content":" * Represents a ToDo, which is the simplest of Tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"joenzkimchan"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"joenzkimchan"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"joenzkimchan"},"content":"     * Constructor for ToDo, which takes in a task name.","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"joenzkimchan"},"content":"     * @param taskName name of task.","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"joenzkimchan"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"joenzkimchan"},"content":"        super(taskName);","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"joenzkimchan"},"content":"     * Gives the type of task.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"joenzkimchan"},"content":"     * @return T for ToDo","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"joenzkimchan"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"joenzkimchan"},"content":"    public String getType() {","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"joenzkimchan"},"content":"     return \"T\";","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"joenzkimchan"},"content":"     * Gives save-friendly information.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"joenzkimchan"},"content":"     * @return save-friendly information.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"joenzkimchan"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"joenzkimchan"},"content":"    public String getSaveInfo() {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"joenzkimchan"},"content":"        return super.getSaveInfo();","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"joenzkimchan"},"content":"     * Overriden toString method.","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"joenzkimchan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"joenzkimchan"},"content":"     * @return string representation of the task.","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"joenzkimchan"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"joenzkimchan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"joenzkimchan"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"joenzkimchan"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"joenzkimchan":45}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joenzkimchan"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"joenzkimchan"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"joenzkimchan"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"joenzkimchan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"joenzkimchan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"joenzkimchan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"joenzkimchan"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"joenzkimchan"},"content":"     * Tests when todo is not followed by a task name.","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"joenzkimchan"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"joenzkimchan"},"content":"    void testParse_incorrectInput_exceptionThrown() {","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"joenzkimchan"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"joenzkimchan"},"content":"            Command c \u003d Parser.parse(\"todo\");","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"joenzkimchan"},"content":"            Assertions.fail();","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"joenzkimchan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"joenzkimchan"},"content":"            assertTrue(true);","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"joenzkimchan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"joenzkimchan"},"content":"     * Tests when event is not proceeded with a /at keyword.","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"joenzkimchan"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"joenzkimchan"},"content":"    void testParse_eventWithoutAt_exceptionThrown() {","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"joenzkimchan"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"joenzkimchan"},"content":"            Command c \u003d Parser.parse(\"event wrongInput 2021-10-19\");","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"joenzkimchan"},"content":"            Assertions.fail();","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"joenzkimchan"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"joenzkimchan"},"content":"            assertTrue(true);","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"joenzkimchan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"joenzkimchan"},"content":"     * Tests when deadline is not given a deadline.","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"joenzkimchan"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"joenzkimchan"},"content":"    void testParse_deadlineWithoutDeadline_exceptionThrown() {","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"joenzkimchan"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"joenzkimchan"},"content":"            Command c \u003d Parser.parse(\"deadline wrongINput 213\");","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"joenzkimchan"},"content":"            Assertions.fail();","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"joenzkimchan"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"joenzkimchan"},"content":"            assertTrue(true);","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"joenzkimchan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"joenzkimchan"},"content":"     * Tests when deadline is given an incorrect date format.","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"joenzkimchan"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"joenzkimchan"},"content":"    void testParse_deadlineIncorrectDateFormat_exceptionThrown() {","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"joenzkimchan"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"joenzkimchan"},"content":"            Command c \u003d Parser.parse(\"deadline a /by 20-10-2012 06:20\");","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"joenzkimchan"},"content":"            Assertions.fail();","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"joenzkimchan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"joenzkimchan"},"content":"            assertTrue(true);","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"joenzkimchan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"joenzkimchan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"joenzkimchan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"joenzkimchan"},"content":"     * Tests when delete is not given a valid integer.","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"joenzkimchan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"joenzkimchan"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"joenzkimchan"},"content":"    void testParse_deleteInvalidInput_exceptionThrown() {","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"joenzkimchan"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"joenzkimchan"},"content":"            Command c \u003d Parser.parse(\"delete hello\");","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"joenzkimchan"},"content":"            Assertions.fail();","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"joenzkimchan"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"joenzkimchan"},"content":"            assertTrue(true);","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"joenzkimchan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"joenzkimchan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"joenzkimchan"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"joenzkimchan":77}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"joenzkimchan"},"content":"todo read book","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"joenzkimchan"},"content":"deadline return book /by June 6th","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"joenzkimchan"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"joenzkimchan"},"content":"todo join sports club","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"joenzkimchan"},"content":"todo borrow book","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"joenzkimchan"},"content":"done 1","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"joenzkimchan"},"content":"done 4","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"joenzkimchan"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"joenzkimchan"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"joenzkimchan"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"joenzkimchan"},"content":"todo","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"joenzkimchan"},"content":"deadline return","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"joenzkimchan"},"content":"bye","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"joenzkimchan":13}}]
