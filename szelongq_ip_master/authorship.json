[{"path":"src/main/java/duke/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szelongq"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"szelongq"},"content":"public enum CommandType {","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"szelongq"},"content":"    EXIT, LIST, ADD_TASK, COMPLETE_TASK, DELETE_TASK, FIND_TASK","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"szelongq"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"szelongq":5}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szelongq"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"szelongq"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"szelongq"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"szelongq"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"szelongq"},"content":"    private LocalDate taskDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"szelongq"},"content":"    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"szelongq"},"content":"    public Deadline(String taskName, LocalDate taskDate, boolean isDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"szelongq"},"content":"        super(taskName, TaskType.DEADLINE, isDone);","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"szelongq"},"content":"        this.taskDate \u003d taskDate;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"szelongq"},"content":"    public Deadline(String taskName, LocalDate taskDate) {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"szelongq"},"content":"        this(taskName, taskDate, false);","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"szelongq"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"szelongq"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"szelongq"},"content":"        return String.format(\"D, %d, %s, %s\", isDone() ? 1 : 0, getTaskName(), taskDate);","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"szelongq"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"szelongq"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"szelongq"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), taskDate.format(formatter));","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"szelongq"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"szelongq":28}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szelongq"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"szelongq"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"szelongq"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"szelongq"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"szelongq"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"szelongq"},"content":"    public Duke(String filepath) {","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"szelongq"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"szelongq"},"content":"        storage \u003d new Storage(filepath);","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"szelongq"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"szelongq"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"szelongq"},"content":"            if (tasks.getSize() \u003e 0) {","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"szelongq"},"content":"                ui.printLoadTasks(tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"szelongq"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"szelongq"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"szelongq"},"content":"            ui.printErrorMessage(e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"szelongq"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"szelongq"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"szelongq"},"content":"    public void run() {","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"szelongq"},"content":"        ui.printStartInteractionsMessage();","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"szelongq"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"szelongq"},"content":"        String userInput;","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"szelongq"},"content":"        do {","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"szelongq"},"content":"            ui.printWaitingUserInput();","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"szelongq"},"content":"            userInput \u003d scanner.nextLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"szelongq"},"content":"            try {","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"szelongq"},"content":"                executeCommand(userInput);","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"szelongq"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"szelongq"},"content":"                ui.printErrorMessage(e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"szelongq"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"szelongq"},"content":"        // Duke will keep accepting user input until user inputs \"bye\",","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"szelongq"},"content":"        // which will lead to executeCommand() exiting the program.","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"szelongq"},"content":"        } while (true);","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"szelongq"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"szelongq"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"szelongq"},"content":"    private void executeCommand(String userInput) throws DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"szelongq"},"content":"        // First, extract the command type inputted by the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"szelongq"},"content":"        // parseCommandType() will throw an UnsupportedOperationException if","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"szelongq"},"content":"        // no valid command types was inputted by the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"szelongq"},"content":"        CommandType commandType \u003d Parser.parseCommandType(userInput);","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"szelongq"},"content":"        // Decide the action to take depending on command type given.","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"szelongq"},"content":"        // parseNewTask() and parseTaskNum() will throw MissingInputException","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"szelongq"},"content":"        // if no valid further input is entered by the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"szelongq"},"content":"        switch (commandType) {","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"szelongq"},"content":"        case EXIT:","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"szelongq"},"content":"            ui.printExitMessage();","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"szelongq"},"content":"            System.exit(0);","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"szelongq"},"content":"        case LIST:","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"szelongq"},"content":"            ui.printTaskList(tasks);","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"szelongq"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"szelongq"},"content":"        case ADD_TASK:","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"szelongq"},"content":"            addNewTask(Parser.parseNewTask(userInput));","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"szelongq"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"szelongq"},"content":"        case COMPLETE_TASK:","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"szelongq"},"content":"            completeTask(Parser.parseTaskNum(userInput));","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"szelongq"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"szelongq"},"content":"        case DELETE_TASK:","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"szelongq"},"content":"            deleteTask(Parser.parseTaskNum(userInput));","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"szelongq"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"szelongq"},"content":"        case FIND_TASK:","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"szelongq"},"content":"            findTask(Parser.parseSearchSubject(userInput));","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"szelongq"},"content":"            break;","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"szelongq"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"szelongq"},"content":"    private void addNewTask(Task newTask) {","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"szelongq"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"szelongq"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"szelongq"},"content":"        ui.printAddTask(tasks, newTask);","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":86,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"szelongq"},"content":"    private void completeTask(int taskNum) {","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"szelongq"},"content":"        tasks.completeTask(taskNum);","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"szelongq"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"szelongq"},"content":"        ui.printCompleteTask(tasks.getTask(taskNum));","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"szelongq"},"content":"    private void deleteTask(int taskNum) {","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"szelongq"},"content":"        Task deletedTask \u003d tasks.deleteTask(taskNum);","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"szelongq"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"szelongq"},"content":"        ui.printDeleteTask(tasks, deletedTask);","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":99,"author":{"gitId":"szelongq"},"content":"    private void findTask(String subject) {","lastModifiedDate":"2021-08-28"},{"lineNumber":100,"author":{"gitId":"szelongq"},"content":"        ui.printTasksWithSubject(tasks, subject);","lastModifiedDate":"2021-08-28"},{"lineNumber":101,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"szelongq":99,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szelongq"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"szelongq"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"szelongq"},"content":" * DukeException is the class that represents exceptions in the","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"szelongq"},"content":" * logic of the script components in Duke.","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"szelongq"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"szelongq"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"szelongq"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"szelongq"},"content":"     * @param message the message describing the error that occurred.","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"szelongq"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"szelongq"},"content":"        super(message);","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"szelongq"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"szelongq":16}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szelongq"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"szelongq"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"szelongq"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"szelongq"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"szelongq"},"content":"    private LocalDate taskDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"szelongq"},"content":"    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd LLLL yyyy\");","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"szelongq"},"content":"    public Event(String taskName, LocalDate taskDate, boolean isDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"szelongq"},"content":"        super(taskName, TaskType.EVENT, isDone);","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"szelongq"},"content":"        this.taskDate \u003d taskDate;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"szelongq"},"content":"    public Event(String taskName, LocalDate taskDate) {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"szelongq"},"content":"        this(taskName, taskDate, false);","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"szelongq"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"szelongq"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"szelongq"},"content":"        return String.format(\"E, %d, %s, %s\", isDone() ? 1 : 0, getTaskName(), taskDate);","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"szelongq"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"szelongq"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"szelongq"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), taskDate.format(formatter));","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"szelongq"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"szelongq":28}},{"path":"src/main/java/duke/LoadingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szelongq"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"szelongq"},"content":"public class LoadingException extends DukeException{","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"szelongq"},"content":"    public LoadingException() {","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"szelongq"},"content":"        super(\"An error with loading has occurred\");","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"szelongq"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"szelongq":7}},{"path":"src/main/java/duke/MissingInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szelongq"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"szelongq"},"content":"public class MissingInputException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"szelongq"},"content":"    public MissingInputException(TaskType taskType) {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"szelongq"},"content":"        super(\"The description for \" + taskType + \" cannot be empty\");","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"szelongq"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"szelongq":7}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szelongq"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"szelongq"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"szelongq"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"szelongq"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"szelongq"},"content":" * Parser is the class that deals with making sense of the user commands.","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"szelongq"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"szelongq"},"content":"public class Parser {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"szelongq"},"content":"     * Returns type of command given in the specified user input.","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"szelongq"},"content":"     * @param userInput the whole line of command from the user.","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"szelongq"},"content":"     * @return the type of command requested.","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"szelongq"},"content":"     * @throws UnsupportedOperationException  if the user entered a","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"szelongq"},"content":"     *                command that is not recognized.","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"szelongq"},"content":"    public static CommandType parseCommandType(String userInput)","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"szelongq"},"content":"            throws UnsupportedOperationException {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"szelongq"},"content":"        Scanner userInputScanner \u003d new Scanner(userInput);","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"szelongq"},"content":"        String operation \u003d userInputScanner.next();","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"szelongq"},"content":"        switch (operation.toLowerCase()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"szelongq"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"szelongq"},"content":"            return CommandType.EXIT;","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"szelongq"},"content":"        case \"list\":","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"szelongq"},"content":"            return CommandType.LIST;","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"szelongq"},"content":"        case \"done\":","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"szelongq"},"content":"            return CommandType.COMPLETE_TASK;","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"szelongq"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"szelongq"},"content":"            // Fallthrough","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"szelongq"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"szelongq"},"content":"            // Fallthrough","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"szelongq"},"content":"        case \"event\":","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"szelongq"},"content":"            return CommandType.ADD_TASK;","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"szelongq"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"szelongq"},"content":"            return CommandType.DELETE_TASK;","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"szelongq"},"content":"        case \"find\":","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"szelongq"},"content":"            return CommandType.FIND_TASK;","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"szelongq"},"content":"        default:","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"szelongq"},"content":"            throw new UnsupportedOperationException();","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"szelongq"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"szelongq"},"content":"     * Creates a new task based on the user\u0027s inputs.","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"szelongq"},"content":"     * The user command given is expected to be \"todo\", \"deadline\"","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"szelongq"},"content":"     * or \"event\".","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"szelongq"},"content":"     * @param userInput the whole line of command from the user.","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"szelongq"},"content":"     * @return the new task that was requested.","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"szelongq"},"content":"     * @throws MissingInputException  if the user did not enter any","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"szelongq"},"content":"     *                other task details after the command word.","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"szelongq"},"content":"    public static Task parseNewTask(String userInput) throws MissingInputException {","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"szelongq"},"content":"        Scanner userInputScanner \u003d new Scanner((userInput));","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"szelongq"},"content":"        TaskType taskType \u003d null;","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"szelongq"},"content":"        switch (userInputScanner.next().toLowerCase()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"szelongq"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"szelongq"},"content":"            taskType \u003d TaskType.TODO;","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"szelongq"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"szelongq"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"szelongq"},"content":"            taskType \u003d TaskType.DEADLINE;","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"szelongq"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"szelongq"},"content":"        case \"event\":","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"szelongq"},"content":"            taskType \u003d TaskType.EVENT;","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"szelongq"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"szelongq"},"content":"        default:","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"szelongq"},"content":"            return null;    // Invalid input","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"szelongq"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"szelongq"},"content":"        if (!userInputScanner.hasNext()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"szelongq"},"content":"            throw new MissingInputException(taskType);","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"szelongq"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"szelongq"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"szelongq"},"content":"        case TODO:","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"szelongq"},"content":"            return new ToDo(userInputScanner.nextLine().trim());","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"szelongq"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"szelongq"},"content":"            userInputScanner.useDelimiter(\" /by \");","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"szelongq"},"content":"            return new Deadline(userInputScanner.next().trim(),","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"szelongq"},"content":"                    LocalDate.parse(userInputScanner.next().trim()));","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"szelongq"},"content":"        case EVENT:","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"szelongq"},"content":"            userInputScanner.useDelimiter(\" /at \");","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"szelongq"},"content":"            return new Event(userInputScanner.next().trim(),","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"szelongq"},"content":"                    LocalDate.parse(userInputScanner.next().trim()));","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"szelongq"},"content":"        default:","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"szelongq"},"content":"            return null;    // Error","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"szelongq"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":95,"author":{"gitId":"szelongq"},"content":"     * Returns the task number specified in the user command.","lastModifiedDate":"2021-08-27"},{"lineNumber":96,"author":{"gitId":"szelongq"},"content":"     * The user command given is expected to be \"done\" or \"delete\".","lastModifiedDate":"2021-08-27"},{"lineNumber":97,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":98,"author":{"gitId":"szelongq"},"content":"     * @param userInput the whole line of command from the user.","lastModifiedDate":"2021-08-27"},{"lineNumber":99,"author":{"gitId":"szelongq"},"content":"     * @return the number of the task to execute the command on.","lastModifiedDate":"2021-08-27"},{"lineNumber":100,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":101,"author":{"gitId":"szelongq"},"content":"    public static int parseTaskNum(String userInput) {","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"szelongq"},"content":"        Scanner userInputScanner \u003d new Scanner(userInput);","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"szelongq"},"content":"        userInputScanner.next();","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"szelongq"},"content":"        return userInputScanner.nextInt();","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":107,"author":{"gitId":"szelongq"},"content":"    public static String parseSearchSubject(String userInput) {","lastModifiedDate":"2021-08-28"},{"lineNumber":108,"author":{"gitId":"szelongq"},"content":"        Scanner userInputScanner \u003d new Scanner(userInput);","lastModifiedDate":"2021-08-28"},{"lineNumber":109,"author":{"gitId":"szelongq"},"content":"        userInputScanner.next();","lastModifiedDate":"2021-08-28"},{"lineNumber":110,"author":{"gitId":"szelongq"},"content":"        return userInputScanner.nextLine().trim();","lastModifiedDate":"2021-08-28"},{"lineNumber":111,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":112,"author":{"gitId":"szelongq"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"szelongq":112}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szelongq"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"szelongq"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"szelongq"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"szelongq"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"szelongq"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"szelongq"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"szelongq"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"szelongq"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"szelongq"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"szelongq"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"szelongq"},"content":" * Storage is the class that deals with loading tasks from the file","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"szelongq"},"content":" * on the hard drive and saving tasks to the file on the hard drive.","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"szelongq"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"szelongq"},"content":"public class Storage {","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"szelongq"},"content":"    private Path savePath;","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"szelongq"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"szelongq"},"content":"     * @param filepath  filepath to the save file.","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"szelongq"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"szelongq"},"content":"        savePath \u003d Path.of(System.getProperty(\"user.dir\"), filepath);","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"szelongq"},"content":"     * Loads save data from the save file, if it exists.","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"szelongq"},"content":"     * If a save file does not exist, then a new save file","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"szelongq"},"content":"     * will be created.","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"szelongq"},"content":"     * @return ArrayList of saved Tasks if save file exists, otherwise","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"szelongq"},"content":"     *                returns an empty ArrayList instead.","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"szelongq"},"content":"     * @throws LoadingException  if an IOException occurs while loading","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"szelongq"},"content":"     *                the save file.","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"szelongq"},"content":"    public ArrayList\u003cTask\u003e load() throws LoadingException {","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"szelongq"},"content":"        if (Files.exists(savePath)) {","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"szelongq"},"content":"            return loadTasks(savePath);","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"szelongq"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"szelongq"},"content":"        else {","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"szelongq"},"content":"            try {","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"szelongq"},"content":"                Files.createDirectories(savePath.getParent());","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"szelongq"},"content":"                Files.createFile(savePath);","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"szelongq"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"szelongq"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"szelongq"},"content":"                throw new LoadingException();","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"szelongq"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"szelongq"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"szelongq"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"szelongq"},"content":"    private ArrayList\u003cTask\u003e loadTasks(Path savePath) {","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"szelongq"},"content":"        try (BufferedReader reader \u003d Files.newBufferedReader(savePath)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"szelongq"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"szelongq"},"content":"            String line \u003d null;","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"szelongq"},"content":"            Scanner saveDataScanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"szelongq"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"szelongq"},"content":"                saveDataScanner \u003d new Scanner(line).useDelimiter(\", \");","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"szelongq"},"content":"                String taskType \u003d saveDataScanner.next();","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"szelongq"},"content":"                boolean isTaskDone \u003d saveDataScanner.nextInt() \u003d\u003d 1;","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"szelongq"},"content":"                String taskDesc \u003d saveDataScanner.next();","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"szelongq"},"content":"                switch (taskType) {","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"szelongq"},"content":"                case \"T\":","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"szelongq"},"content":"                    tasks.add(new ToDo(taskDesc, isTaskDone));","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"szelongq"},"content":"                    break;","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"szelongq"},"content":"                case \"D\":","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"szelongq"},"content":"                    tasks.add(new Deadline(taskDesc,","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"szelongq"},"content":"                            LocalDate.parse(saveDataScanner.next()), isTaskDone));","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"szelongq"},"content":"                    break;","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"szelongq"},"content":"                case \"E\":","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"szelongq"},"content":"                    tasks.add(new Event(taskDesc,","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"szelongq"},"content":"                            LocalDate.parse(saveDataScanner.next()), isTaskDone));","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"szelongq"},"content":"                    break;","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"szelongq"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"szelongq"},"content":"                saveDataScanner.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"szelongq"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"szelongq"},"content":"            return tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"szelongq"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"szelongq"},"content":"            ex.printStackTrace();","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"szelongq"},"content":"            return null;","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"szelongq"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":90,"author":{"gitId":"szelongq"},"content":"     * Saves all the tasks and their information onto the save file.","lastModifiedDate":"2021-08-27"},{"lineNumber":91,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":92,"author":{"gitId":"szelongq"},"content":"     * @param tasks  TaskList containing the tasks to be saved.","lastModifiedDate":"2021-08-27"},{"lineNumber":93,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":94,"author":{"gitId":"szelongq"},"content":"    public void saveTasks(TaskList tasks) {","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"szelongq"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"szelongq"},"content":"            BufferedWriter writer \u003d Files.newBufferedWriter(savePath);","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"szelongq"},"content":"            for (int i \u003d 1; i \u003c\u003d tasks.getSize(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"szelongq"},"content":"                writer.write(tasks.getTask(i).toSaveFormat() + \"\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"szelongq"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"szelongq"},"content":"            writer.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"szelongq"},"content":"        } catch(IOException ex){","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"szelongq"},"content":"            ex.printStackTrace();","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"szelongq"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"szelongq"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"szelongq":105}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szelongq"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"szelongq"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"szelongq"},"content":" * Task is the abstract class that describes the basic details of all tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"szelongq"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"szelongq"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"szelongq"},"content":"    private String taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"szelongq"},"content":"    private TaskType taskType;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"szelongq"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"szelongq"},"content":"     * Creates a String object that contains all the task details","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"szelongq"},"content":"     * that is to be saved in the save file.","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"szelongq"},"content":"     * @return the String object containing the task details.","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"szelongq"},"content":"    public abstract String toSaveFormat();","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"szelongq"},"content":"     * Class constructor specifying the name and type of the task","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"szelongq"},"content":"     * and whether the task is done.","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"szelongq"},"content":"     * @param taskName the name of the task.","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"szelongq"},"content":"     * @param taskType the type of task.","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"szelongq"},"content":"     * @param isDone whether the task is done.","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"szelongq"},"content":"    public Task(String taskName, TaskType taskType, boolean isDone) {","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"szelongq"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"szelongq"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"szelongq"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"szelongq"},"content":"     * Class constructor specifying the name and type of the task.","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"szelongq"},"content":"     * The task is initialised as not done.","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"szelongq"},"content":"     * @param taskName the name of the task.","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"szelongq"},"content":"     * @param taskType the type of task.","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"szelongq"},"content":"    public Task(String taskName, TaskType taskType) {","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"szelongq"},"content":"        this(taskName, taskType, false);","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"szelongq"},"content":"    public String getTaskName() {","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"szelongq"},"content":"        return taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"szelongq"},"content":"    public void setTaskName(String taskName) {","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"szelongq"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"szelongq"},"content":"    public TaskType getTaskType() {","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"szelongq"},"content":"        return taskType;","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"szelongq"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"szelongq"},"content":"        return isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"szelongq"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"szelongq"},"content":"        isDone \u003d done;","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"szelongq"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"szelongq"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"szelongq"},"content":"        String checked \u003d isDone ? \"X\" : \" \";","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"szelongq"},"content":"        return String.format(\"[%s] %s\", checked, taskName);","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"szelongq"},"content":"}","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"szelongq"},"content":";","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"szelongq":71}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szelongq"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"szelongq"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"szelongq"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"szelongq"},"content":" * TaskList is the class that contains the list of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"szelongq"},"content":" * It provides operations to add and delete tasks from the list,","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"szelongq"},"content":" * and mark tasks as complete.","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"szelongq"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"szelongq"},"content":"public class TaskList {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"szelongq"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"szelongq"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"szelongq"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"szelongq"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"szelongq"},"content":"     * Class constructor specifying an initial list of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"szelongq"},"content":"     * @param tasks the list of tasks to initialise with.","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"szelongq"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"szelongq"},"content":"        if (tasks !\u003d null) {","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"szelongq"},"content":"            this.tasks \u003d tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"szelongq"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"szelongq"},"content":"        else {","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"szelongq"},"content":"            this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"szelongq"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"szelongq"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"szelongq"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"szelongq"},"content":"     * Retrieves the task of the specified index from the list.","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"szelongq"},"content":"     * Uses 1-based indexing.","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"szelongq"},"content":"     * @param taskIndex the new task to be added.","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"szelongq"},"content":"     * @return the task with the specified index.","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"szelongq"},"content":"    public Task getTask(int taskIndex) {","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"szelongq"},"content":"        return tasks.get(taskIndex - 1);","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"szelongq"},"content":"     * Adds a task to the list of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"szelongq"},"content":"     * @param newTask the new task to be added.","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"szelongq"},"content":"    public void addTask(Task newTask) {","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"szelongq"},"content":"        tasks.add(newTask);","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"szelongq"},"content":"     * Marks the task of the specified index in the list as done.","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"szelongq"},"content":"     * Uses 1-based indexing.","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"szelongq"},"content":"     * @param taskIndex the index of the task to be marked as done.","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"szelongq"},"content":"     * @return the task that has been marked as done.","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"szelongq"},"content":"    public Task completeTask(int taskIndex) {","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"szelongq"},"content":"        tasks.get(taskIndex - 1).setDone(true);","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"szelongq"},"content":"        return tasks.get(taskIndex - 1);","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"szelongq"},"content":"     * Deletes a task of the specified index from the list.","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"szelongq"},"content":"     * Uses 1-based indexing.","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"szelongq"},"content":"     * @param taskIndex the index of the task to be deleted from the list.","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"szelongq"},"content":"     * @return the task that has been deleted from the list.","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"szelongq"},"content":"    public Task deleteTask(int taskIndex) {","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"szelongq"},"content":"        return tasks.remove(taskIndex - 1);","lastModifiedDate":"2021-08-31"},{"lineNumber":79,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"szelongq"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"szelongq":80}},{"path":"src/main/java/duke/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szelongq"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"szelongq"},"content":"public enum TaskType {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"szelongq"},"content":"    TODO, DEADLINE, EVENT","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"szelongq"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"szelongq":5}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szelongq"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"szelongq"},"content":"public class ToDo extends Task{","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"szelongq"},"content":"    public ToDo(String taskName, boolean isDone) {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"szelongq"},"content":"        super(taskName, TaskType.TODO, isDone);","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"szelongq"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"szelongq"},"content":"        this(taskName, false);","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"szelongq"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"szelongq"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"szelongq"},"content":"        return String.format(\"T, %d, %s\", isDone() ? 1 : 0, getTaskName());","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"szelongq"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"szelongq"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"szelongq"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"szelongq"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"szelongq":21}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szelongq"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"szelongq"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"szelongq"},"content":" * Ui is the class that deals with all output to the user.","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"szelongq"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"szelongq"},"content":"public class Ui {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"szelongq"},"content":"    private final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"szelongq"},"content":"                              + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"szelongq"},"content":"                              + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"szelongq"},"content":"                              + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"szelongq"},"content":"                              + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"szelongq"},"content":"    private final String DUKE \u003d \"\\nDuke:\";","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"szelongq"},"content":"    private final String USER \u003d \"\\nUser:\";","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"szelongq"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"szelongq"},"content":"    public Ui() {","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"szelongq"},"content":"        printStartUpMessage();","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"szelongq"},"content":"     * Prints the message when starting up the program.","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"szelongq"},"content":"    public void printStartUpMessage() {","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"szelongq"},"content":"        System.out.println(\"Hello from\\n\" + LOGO);","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"szelongq"},"content":"     * Prints the message when the program is ready to accept user commands.","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"szelongq"},"content":"    public void printStartInteractionsMessage() {","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"szelongq"},"content":"        System.out.println(DUKE + \"Hi, what do you want from me?\");","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"szelongq"},"content":"     * Prints the message when waiting for the user\u0027s next command.","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"szelongq"},"content":"    public void printWaitingUserInput() {","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"szelongq"},"content":"        System.out.print(USER);","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"szelongq"},"content":"     * Prints the current list of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"szelongq"},"content":"     * @param tasks the TaskList containing all the current tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"szelongq"},"content":"    public void printTaskList(TaskList tasks) {","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"szelongq"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.getSize(); i++) {","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"szelongq"},"content":"            System.out.printf(\"\\t\\t%d.%s\\n\", i, tasks.getTask(i));","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"szelongq"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"szelongq"},"content":"        System.out.println(\"\\tNow you have \" + tasks.getSize() + \" tasks in the list.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"szelongq"},"content":"     * Prints the message when the program has added a task to the list.","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"szelongq"},"content":"     * @param tasks the TaskList containing all the current tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"szelongq"},"content":"     * @param newTask the task that was added to the list.","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"szelongq"},"content":"    public void printAddTask(TaskList tasks, Task newTask) {","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"szelongq"},"content":"        System.out.println(DUKE + \"\\n\\tAdded:\\n\\t\\t\" + newTask);","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"szelongq"},"content":"        System.out.println(\"\\tNow you have \" + tasks.getSize() + \" tasks in the list.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"szelongq"},"content":"     * Prints the message when the program has marked a task as completed.","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"szelongq"},"content":"     * @param completedTask the task that was marked as completed.","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"szelongq"},"content":"    public void printCompleteTask(Task completedTask) {","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"szelongq"},"content":"        System.out.println(DUKE + \"\\n\\tMarking task as completed:\");","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"szelongq"},"content":"        System.out.printf(\"\\t\\t%s\\n\", completedTask);","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"szelongq"},"content":"     * Prints the message when the program has deleted a task from the list.","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"szelongq"},"content":"     * @param tasks the TaskList containing all the current tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"szelongq"},"content":"     * @param deletedTask the task that was deleted from the list.","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"szelongq"},"content":"    public void printDeleteTask(TaskList tasks, Task deletedTask) {","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"szelongq"},"content":"        System.out.println(DUKE + \"\\n\\tRemoving task:\");","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"szelongq"},"content":"        System.out.printf(\"\\t\\t%s\\n\", deletedTask);","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"szelongq"},"content":"        System.out.println(\"\\tNow you have \" + tasks.getSize() + \" tasks in the list.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"szelongq"},"content":"     * Prints a list of tasks whose names contain the subject.","lastModifiedDate":"2021-08-28"},{"lineNumber":90,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":91,"author":{"gitId":"szelongq"},"content":"     * @param tasks the TaskList containing all the current tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":92,"author":{"gitId":"szelongq"},"content":"     * @param subject the keyword that is being searched for.","lastModifiedDate":"2021-08-28"},{"lineNumber":93,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":94,"author":{"gitId":"szelongq"},"content":"    public void printTasksWithSubject(TaskList tasks, String subject) {","lastModifiedDate":"2021-08-28"},{"lineNumber":95,"author":{"gitId":"szelongq"},"content":"        int nResults \u003d 0;","lastModifiedDate":"2021-08-28"},{"lineNumber":96,"author":{"gitId":"szelongq"},"content":"        System.out.println(\"\\tTasks with \\\"\" + subject + \"\\\":\");","lastModifiedDate":"2021-08-28"},{"lineNumber":97,"author":{"gitId":"szelongq"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.getSize(); i++) {","lastModifiedDate":"2021-08-28"},{"lineNumber":98,"author":{"gitId":"szelongq"},"content":"            if (tasks.getTask(i).getTaskName().contains(subject)) {","lastModifiedDate":"2021-08-28"},{"lineNumber":99,"author":{"gitId":"szelongq"},"content":"                nResults++;","lastModifiedDate":"2021-08-28"},{"lineNumber":100,"author":{"gitId":"szelongq"},"content":"                System.out.printf(\"\\t\\t%d.%s\\n\", i, tasks.getTask(i));","lastModifiedDate":"2021-08-28"},{"lineNumber":101,"author":{"gitId":"szelongq"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":102,"author":{"gitId":"szelongq"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":103,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":104,"author":{"gitId":"szelongq"},"content":"        if (nResults \u003d\u003d 0) {","lastModifiedDate":"2021-08-28"},{"lineNumber":105,"author":{"gitId":"szelongq"},"content":"            System.out.println(\"\\n\\tNo results found.\");","lastModifiedDate":"2021-08-28"},{"lineNumber":106,"author":{"gitId":"szelongq"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":107,"author":{"gitId":"szelongq"},"content":"        else if (nResults \u003d\u003d 1) {","lastModifiedDate":"2021-08-28"},{"lineNumber":108,"author":{"gitId":"szelongq"},"content":"            System.out.println(\"\\tTotal of 1 result found.\");","lastModifiedDate":"2021-08-28"},{"lineNumber":109,"author":{"gitId":"szelongq"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":110,"author":{"gitId":"szelongq"},"content":"        else {","lastModifiedDate":"2021-08-28"},{"lineNumber":111,"author":{"gitId":"szelongq"},"content":"            System.out.println(\"\\tTotal of \" + nResults + \" results found.\");","lastModifiedDate":"2021-08-28"},{"lineNumber":112,"author":{"gitId":"szelongq"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":113,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":114,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":115,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":116,"author":{"gitId":"szelongq"},"content":"     * Prints the message when the program has loaded the list of tasks","lastModifiedDate":"2021-08-27"},{"lineNumber":117,"author":{"gitId":"szelongq"},"content":"     * from a previous save file.","lastModifiedDate":"2021-08-27"},{"lineNumber":118,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":119,"author":{"gitId":"szelongq"},"content":"     * @param tasks the TaskList containing all the current tasks","lastModifiedDate":"2021-08-27"},{"lineNumber":120,"author":{"gitId":"szelongq"},"content":"     *             that was loaded.","lastModifiedDate":"2021-08-27"},{"lineNumber":121,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":122,"author":{"gitId":"szelongq"},"content":"    public void printLoadTasks(TaskList tasks) {","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"szelongq"},"content":"        System.out.println(DUKE + \"I have loaded your past tasks list!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":124,"author":{"gitId":"szelongq"},"content":"        printTaskList(tasks);","lastModifiedDate":"2021-08-28"},{"lineNumber":125,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":126,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":127,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":128,"author":{"gitId":"szelongq"},"content":"     * Prints the error message when the program encountered an error.","lastModifiedDate":"2021-08-27"},{"lineNumber":129,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":130,"author":{"gitId":"szelongq"},"content":"     * @param message the error message from the exception.","lastModifiedDate":"2021-08-27"},{"lineNumber":131,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":132,"author":{"gitId":"szelongq"},"content":"    public void printErrorMessage(String message) {","lastModifiedDate":"2021-08-26"},{"lineNumber":133,"author":{"gitId":"szelongq"},"content":"        System.out.println(DUKE);","lastModifiedDate":"2021-08-26"},{"lineNumber":134,"author":{"gitId":"szelongq"},"content":"        System.out.println(\"\\tError: \" + message + \".\");","lastModifiedDate":"2021-08-26"},{"lineNumber":135,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":136,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":137,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":138,"author":{"gitId":"szelongq"},"content":"     * Prints the message when the program is being exited.","lastModifiedDate":"2021-08-27"},{"lineNumber":139,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":140,"author":{"gitId":"szelongq"},"content":"    public void printExitMessage() {","lastModifiedDate":"2021-08-28"},{"lineNumber":141,"author":{"gitId":"szelongq"},"content":"        System.out.println(DUKE + \"Bye. Have a nice day.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":142,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":143,"author":{"gitId":"szelongq"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"szelongq":143}},{"path":"src/main/java/duke/UnsupportedOperationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szelongq"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"szelongq"},"content":"public class UnsupportedOperationException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"szelongq"},"content":"    public UnsupportedOperationException() {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"szelongq"},"content":"        super(\"No such operation supported\");","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"szelongq"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"szelongq":7}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szelongq"},"content":"import duke.CommandType;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"szelongq"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"szelongq"},"content":"import duke.MissingInputException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"szelongq"},"content":"import duke.Parser;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"szelongq"},"content":"import duke.Task;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"szelongq"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"szelongq"},"content":"import duke.ToDo;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"szelongq"},"content":"import duke.UnsupportedOperationException;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"szelongq"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"szelongq"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"szelongq"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"szelongq"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"szelongq"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"szelongq"},"content":"    public void taskListTest(){","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"szelongq"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"szelongq"},"content":"        assertEquals(taskList.getSize(), 0);","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"szelongq"},"content":"        Task task1 \u003d new ToDo(\"test task 1\");","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"szelongq"},"content":"        Task task2 \u003d new ToDo(\"test task 2\");","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"szelongq"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"szelongq"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"szelongq"},"content":"        assertEquals(taskList.getSize(), 2);","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"szelongq"},"content":"        assertEquals(taskList.getTask(1), task1);","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"szelongq"},"content":"        taskList.completeTask(1);","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"szelongq"},"content":"        assertEquals(taskList.getTask(1).isDone(), true);","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"szelongq"},"content":"        assertEquals(taskList.getTask(2).isDone(), false);","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"szelongq"},"content":"        taskList.deleteTask(1);","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"szelongq"},"content":"        assertEquals(taskList.getSize(), 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"szelongq"},"content":"        assertEquals(taskList.getTask(1), task2);","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"szelongq"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"szelongq"},"content":"    public void parserTestCommands() {","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"szelongq"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"szelongq"},"content":"            assertEquals(Parser.parseCommandType(\"ByE   \"), CommandType.EXIT);","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"szelongq"},"content":"            assertEquals(Parser.parseCommandType(\"DeadLine :((( \"), CommandType.ADD_TASK);","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"szelongq"},"content":"            assertEquals(Parser.parseCommandType(\" delete afeascs\"), CommandType.DELETE_TASK);","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"szelongq"},"content":"            assertThrows(UnsupportedOperationException.class, () -\u003e Parser.parseCommandType(\" bleh\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"szelongq"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"szelongq"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"szelongq"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"szelongq"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"szelongq"},"content":"    public void parserTestTasks() {","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"szelongq"},"content":"        assertThrows(MissingInputException.class, () -\u003e Parser.parseNewTask(\"deadline \"));","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"szelongq"},"content":"        assertEquals(Parser.parseTaskNum(\"deleTe         23\"), 23);","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"szelongq"},"content":"        assertEquals(Parser.parseTaskNum(\" dOnE 3\"), 3);","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"szelongq"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"szelongq":56}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"szelongq"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"szelongq"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"szelongq"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"szelongq"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"szelongq"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"szelongq"},"content":"blah","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"szelongq"},"content":"delete 2","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"szelongq"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"szelongq"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"szelongq":9}}]
