[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"szelongq"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"szelongq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"szelongq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"szelongq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"szelongq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"szelongq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"szelongq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"szelongq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"szelongq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"szelongq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"szelongq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"szelongq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"szelongq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"szelongq"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"szelongq":16,"-":45}},{"path":"src/main/Resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"szelongq"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"szelongq"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"szelongq"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"szelongq"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"szelongq"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"szelongq"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"szelongq"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"szelongq"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: aliceblue; -fx-border-color: aquamarine; -fx-padding: 10;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"szelongq"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"szelongq"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"szelongq"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"szelongq"},"content":"            \u003cFont name\u003d\"Chalkboard\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"szelongq"},"content":"         \u003c/font\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"szelongq"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"szelongq"},"content":"            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"szelongq"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"szelongq"},"content":"      \u003cStackPane style\u003d\"-fx-background-color: cadetblue;\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"szelongq"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"szelongq"},"content":"          \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"szelongq"},"content":"         \u003c/children\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"szelongq"},"content":"      \u003c/StackPane\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"szelongq"},"content":"  \u003c/children\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"szelongq"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"szelongq"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"szelongq"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"szelongq"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"szelongq":28}},{"path":"src/main/Resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"szelongq"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"szelongq"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"szelongq"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"szelongq"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"szelongq"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"szelongq"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"szelongq"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"szelongq"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"szelongq"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"szelongq"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"szelongq"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"szelongq"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"szelongq"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: gray;\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"szelongq"},"content":"      \u003c/content\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"szelongq"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"szelongq"},"content":"  \u003c/children\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"szelongq"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"szelongq":19}},{"path":"src/main/java/duke/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szelongq"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"szelongq"},"content":"public enum CommandType {","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"szelongq"},"content":"    EXIT, LIST, ADD_TASK, COMPLETE_TASK, DELETE_TASK, FIND_TASK,","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"szelongq"},"content":"    SHOW_PATH, SET_PATH,","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"szelongq"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"szelongq":6}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szelongq"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"szelongq"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"szelongq"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"szelongq"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"szelongq"},"content":"    private LocalDate taskDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"szelongq"},"content":"    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"szelongq"},"content":"     * Class constructor.","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"szelongq"},"content":"     * @param taskName The name and description of task.","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"szelongq"},"content":"     * @param taskDate The date and time of the deadline of the task.","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"szelongq"},"content":"     * @param isDone Whether the task is done or not.","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"szelongq"},"content":"    public Deadline(String taskName, LocalDate taskDate, boolean isDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"szelongq"},"content":"        super(taskName, TaskType.DEADLINE, isDone);","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"szelongq"},"content":"        this.taskDate \u003d taskDate;","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"szelongq"},"content":"    public Deadline(String taskName, LocalDate taskDate) {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"szelongq"},"content":"        this(taskName, taskDate, false);","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"szelongq"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"szelongq"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"szelongq"},"content":"        return String.format(\"D, %d, %s, %s\", isDone() ? 1 : 0, getTaskName(), taskDate);","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"szelongq"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"szelongq"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"szelongq"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), taskDate.format(formatter));","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"szelongq"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"szelongq":35}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szelongq"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"szelongq"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"szelongq"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"szelongq"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"szelongq"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"szelongq"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"szelongq"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"szelongq"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"szelongq"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"szelongq"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"szelongq"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"szelongq"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"szelongq"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"szelongq"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"szelongq"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"szelongq"},"content":" * This control represents a dialog box consisting of an ImageView","lastModifiedDate":"2021-09-09"},{"lineNumber":20,"author":{"gitId":"szelongq"},"content":" * to represent the speaker\u0027s face and a label containing text","lastModifiedDate":"2021-09-09"},{"lineNumber":21,"author":{"gitId":"szelongq"},"content":" * from the speaker.","lastModifiedDate":"2021-09-09"},{"lineNumber":22,"author":{"gitId":"szelongq"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"szelongq"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"szelongq"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"szelongq"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"szelongq"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"szelongq"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"szelongq"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"szelongq"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"szelongq"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(","lastModifiedDate":"2021-09-09"},{"lineNumber":32,"author":{"gitId":"szelongq"},"content":"                    MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-09"},{"lineNumber":33,"author":{"gitId":"szelongq"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"szelongq"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"szelongq"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"szelongq"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"szelongq"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"szelongq"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"szelongq"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"szelongq"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"szelongq"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"szelongq"},"content":"    private void flip() {","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"szelongq"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"szelongq"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"szelongq"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"szelongq"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"szelongq"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"szelongq"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"szelongq"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"szelongq"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"szelongq"},"content":"        db.flip();","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"szelongq"},"content":"        return db;","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"szelongq"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"szelongq":63}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szelongq"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"szelongq"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"szelongq"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"szelongq"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"szelongq"},"content":"     * Class constructor.","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"szelongq"},"content":"     * Sets save file path to \"./data/duke.txt\" by default.","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"szelongq"},"content":"    public Duke() {","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"szelongq"},"content":"        this(\"data/duke.txt\");","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"szelongq"},"content":"     * Class constructor specifying the save file\u0027s path.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"szelongq"},"content":"     * @param filepath The file path to the save file for Duke.","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"szelongq"},"content":"    public Duke(String filepath) {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"szelongq"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"szelongq"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"szelongq"},"content":"            setStoragePath(filepath);","lastModifiedDate":"2021-09-09"},{"lineNumber":27,"author":{"gitId":"szelongq"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"szelongq"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"szelongq"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"szelongq"},"content":"     * Returns the message informing that Duke has started up.","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"szelongq"},"content":"     * @return A String object containing the start-up message.","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"szelongq"},"content":"    public String getStartUpMessage() {","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"szelongq"},"content":"        return ui.printStartInteractionsMessage();","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"szelongq"},"content":"     * Returns a printout of loaded tasks from the save file, if any.","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"szelongq"},"content":"     * @return A String object containing a printout of the loaded tasks","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"szelongq"},"content":"     *           or an empty String object if no tasks were loaded.","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"szelongq"},"content":"    public String getTasksLoadedMessage() {","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"szelongq"},"content":"        if (tasks.getSize() \u003e 0) {","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"szelongq"},"content":"            return ui.printLoadTasks(tasks);","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"szelongq"},"content":"        } else {","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"szelongq"},"content":"            return \"\";","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"szelongq"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"szelongq"},"content":"     * Gets the response from Duke to the command inputted by the user.","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"szelongq"},"content":"     * @return A String object containing Duke\u0027s response.","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"szelongq"},"content":"    public String getResponse(String userInput) {","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"szelongq"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"szelongq"},"content":"            return executeCommand(userInput);","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"szelongq"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"szelongq"},"content":"            return ui.printErrorMessage(e.getMessage());","lastModifiedDate":"2021-09-02"},{"lineNumber":65,"author":{"gitId":"szelongq"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"szelongq"},"content":"    private String executeCommand(String userInput) throws DukeException {","lastModifiedDate":"2021-09-02"},{"lineNumber":69,"author":{"gitId":"szelongq"},"content":"        // First, extract the command type inputted by the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"szelongq"},"content":"        // parseCommandType() will throw an UnsupportedOperationException if","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"szelongq"},"content":"        // no valid command types was inputted by the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"szelongq"},"content":"        CommandType commandType \u003d Parser.parseCommandType(userInput);","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"szelongq"},"content":"        // Decide the action to take depending on command type given.","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"szelongq"},"content":"        // parseNewTask() and parseTaskNum() will throw MissingInputException","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"szelongq"},"content":"        // if no valid further input is entered by the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":77,"author":{"gitId":"szelongq"},"content":"        switch (commandType) {","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"szelongq"},"content":"        case EXIT:","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"szelongq"},"content":"            System.exit(0);","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"szelongq"},"content":"            break;","lastModifiedDate":"2021-09-01"},{"lineNumber":81,"author":{"gitId":"szelongq"},"content":"        case LIST:","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"szelongq"},"content":"            return ui.printTaskList(tasks);","lastModifiedDate":"2021-09-02"},{"lineNumber":83,"author":{"gitId":"szelongq"},"content":"        case ADD_TASK:","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"szelongq"},"content":"            return addNewTask(Parser.parseNewTask(userInput));","lastModifiedDate":"2021-09-02"},{"lineNumber":85,"author":{"gitId":"szelongq"},"content":"        case COMPLETE_TASK:","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"szelongq"},"content":"            return completeTask(Parser.parseTaskNum(userInput));","lastModifiedDate":"2021-09-02"},{"lineNumber":87,"author":{"gitId":"szelongq"},"content":"        case DELETE_TASK:","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"szelongq"},"content":"            return deleteTask(Parser.parseTaskNum(userInput));","lastModifiedDate":"2021-09-02"},{"lineNumber":89,"author":{"gitId":"szelongq"},"content":"        case FIND_TASK:","lastModifiedDate":"2021-08-28"},{"lineNumber":90,"author":{"gitId":"szelongq"},"content":"            return findTask(Parser.parseSearchSubject(userInput));","lastModifiedDate":"2021-09-02"},{"lineNumber":91,"author":{"gitId":"szelongq"},"content":"        case SHOW_PATH:","lastModifiedDate":"2021-09-09"},{"lineNumber":92,"author":{"gitId":"szelongq"},"content":"            return ui.printCurrentStoragePath(storage);","lastModifiedDate":"2021-09-09"},{"lineNumber":93,"author":{"gitId":"szelongq"},"content":"        case SET_PATH:","lastModifiedDate":"2021-09-09"},{"lineNumber":94,"author":{"gitId":"szelongq"},"content":"            return setNewStoragePath(Parser.parseNewPath(userInput));","lastModifiedDate":"2021-09-09"},{"lineNumber":95,"author":{"gitId":"szelongq"},"content":"        default:","lastModifiedDate":"2021-09-01"},{"lineNumber":96,"author":{"gitId":"szelongq"},"content":"            throw new UnsupportedOperationException(); // Error","lastModifiedDate":"2021-09-01"},{"lineNumber":97,"author":{"gitId":"szelongq"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"szelongq"},"content":"        assert false; // Execution should not reach this point","lastModifiedDate":"2021-09-08"},{"lineNumber":99,"author":{"gitId":"szelongq"},"content":"        return \"\";","lastModifiedDate":"2021-09-02"},{"lineNumber":100,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":101,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":102,"author":{"gitId":"szelongq"},"content":"    private String addNewTask(Task newTask) {","lastModifiedDate":"2021-09-02"},{"lineNumber":103,"author":{"gitId":"szelongq"},"content":"        assert newTask !\u003d null; // Task to be added cannot be null","lastModifiedDate":"2021-09-08"},{"lineNumber":104,"author":{"gitId":"szelongq"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"szelongq"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"szelongq"},"content":"        return ui.printAddTask(tasks, newTask);","lastModifiedDate":"2021-09-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":108,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":109,"author":{"gitId":"szelongq"},"content":"    private String completeTask(int taskNum) {","lastModifiedDate":"2021-09-02"},{"lineNumber":110,"author":{"gitId":"szelongq"},"content":"        // TaskNum should be within 1 to the size of the TaskList","lastModifiedDate":"2021-09-08"},{"lineNumber":111,"author":{"gitId":"szelongq"},"content":"        assert taskNum \u003e 0 \u0026\u0026 taskNum \u003c\u003d tasks.getSize() : taskNum;","lastModifiedDate":"2021-09-08"},{"lineNumber":112,"author":{"gitId":"szelongq"},"content":"        tasks.completeTask(taskNum);","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"szelongq"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"szelongq"},"content":"        return ui.printCompleteTask(tasks.getTask(taskNum));","lastModifiedDate":"2021-09-02"},{"lineNumber":115,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"szelongq"},"content":"    private String deleteTask(int taskNum) {","lastModifiedDate":"2021-09-02"},{"lineNumber":118,"author":{"gitId":"szelongq"},"content":"        // TaskNum should be within 1 to the size of the TaskList","lastModifiedDate":"2021-09-08"},{"lineNumber":119,"author":{"gitId":"szelongq"},"content":"        assert taskNum \u003e 0 \u0026\u0026 taskNum \u003c\u003d tasks.getSize() : taskNum;","lastModifiedDate":"2021-09-08"},{"lineNumber":120,"author":{"gitId":"szelongq"},"content":"        Task deletedTask \u003d tasks.deleteTask(taskNum);","lastModifiedDate":"2021-08-26"},{"lineNumber":121,"author":{"gitId":"szelongq"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"szelongq"},"content":"        return ui.printDeleteTask(tasks, deletedTask);","lastModifiedDate":"2021-09-02"},{"lineNumber":123,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":124,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":125,"author":{"gitId":"szelongq"},"content":"    private String findTask(String subject) {","lastModifiedDate":"2021-09-02"},{"lineNumber":126,"author":{"gitId":"szelongq"},"content":"        return ui.printTasksWithSubject(tasks, subject);","lastModifiedDate":"2021-09-02"},{"lineNumber":127,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":128,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":129,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":130,"author":{"gitId":"szelongq"},"content":"     * Sets a new save file location given a new file path and loads any saved","lastModifiedDate":"2021-09-09"},{"lineNumber":131,"author":{"gitId":"szelongq"},"content":"     * TaskList from the given location, or otherwise starts a new TaskList.","lastModifiedDate":"2021-09-09"},{"lineNumber":132,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":133,"author":{"gitId":"szelongq"},"content":"     * @param newPath A String object describing the new path of the save file.","lastModifiedDate":"2021-09-09"},{"lineNumber":134,"author":{"gitId":"szelongq"},"content":"     *                The path should be the relative path from the working","lastModifiedDate":"2021-09-09"},{"lineNumber":135,"author":{"gitId":"szelongq"},"content":"     *                directory of the program.","lastModifiedDate":"2021-09-09"},{"lineNumber":136,"author":{"gitId":"szelongq"},"content":"     * @throws LoadingException If an IOException occurs while loading the new","lastModifiedDate":"2021-09-09"},{"lineNumber":137,"author":{"gitId":"szelongq"},"content":"     *                save file.","lastModifiedDate":"2021-09-09"},{"lineNumber":138,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":139,"author":{"gitId":"szelongq"},"content":"    private void setStoragePath(String newPath) throws LoadingException {","lastModifiedDate":"2021-09-09"},{"lineNumber":140,"author":{"gitId":"szelongq"},"content":"        Storage newStorage \u003d new Storage(newPath);","lastModifiedDate":"2021-09-09"},{"lineNumber":141,"author":{"gitId":"szelongq"},"content":"        TaskList newTasks \u003d new TaskList(newStorage.load());","lastModifiedDate":"2021-09-09"},{"lineNumber":142,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":143,"author":{"gitId":"szelongq"},"content":"        storage \u003d newStorage;","lastModifiedDate":"2021-09-09"},{"lineNumber":144,"author":{"gitId":"szelongq"},"content":"        tasks \u003d newTasks;","lastModifiedDate":"2021-09-09"},{"lineNumber":145,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":146,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":147,"author":{"gitId":"szelongq"},"content":"    private String setNewStoragePath(String newPath) {","lastModifiedDate":"2021-09-09"},{"lineNumber":148,"author":{"gitId":"szelongq"},"content":"        try {","lastModifiedDate":"2021-09-09"},{"lineNumber":149,"author":{"gitId":"szelongq"},"content":"            setStoragePath(newPath);","lastModifiedDate":"2021-09-09"},{"lineNumber":150,"author":{"gitId":"szelongq"},"content":"            return ui.printNewStoragePath(storage, tasks);","lastModifiedDate":"2021-09-09"},{"lineNumber":151,"author":{"gitId":"szelongq"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-09"},{"lineNumber":152,"author":{"gitId":"szelongq"},"content":"            return ui.printErrorMessage(e.getMessage());","lastModifiedDate":"2021-09-09"},{"lineNumber":153,"author":{"gitId":"szelongq"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":154,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"szelongq":152,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szelongq"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"szelongq"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"szelongq"},"content":" * DukeException is the class that represents exceptions in the","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"szelongq"},"content":" * logic of the script components in Duke.","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"szelongq"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"szelongq"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"szelongq"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"szelongq"},"content":"     * @param message the message describing the error that occurred.","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"szelongq"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"szelongq"},"content":"        super(message);","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"szelongq"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"szelongq":16}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szelongq"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"szelongq"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"szelongq"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"szelongq"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"szelongq"},"content":"    private LocalDate taskDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"szelongq"},"content":"    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd LLLL yyyy\");","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"szelongq"},"content":"     * Class constructor.","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"szelongq"},"content":"     * @param taskName The name and description of task.","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"szelongq"},"content":"     * @param taskDate The date and time of the event in the task.","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"szelongq"},"content":"     * @param isDone Whether the task is done or not.","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"szelongq"},"content":"    public Event(String taskName, LocalDate taskDate, boolean isDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"szelongq"},"content":"        super(taskName, TaskType.EVENT, isDone);","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"szelongq"},"content":"        this.taskDate \u003d taskDate;","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"szelongq"},"content":"    public Event(String taskName, LocalDate taskDate) {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"szelongq"},"content":"        this(taskName, taskDate, false);","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"szelongq"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"szelongq"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"szelongq"},"content":"        return String.format(\"E, %d, %s, %s\", isDone() ? 1 : 0, getTaskName(), taskDate);","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"szelongq"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"szelongq"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"szelongq"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), taskDate.format(formatter));","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"szelongq"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"szelongq":35}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szelongq"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"szelongq"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"szelongq"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"szelongq"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"szelongq"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"szelongq"},"content":"public class Launcher {","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"szelongq"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"szelongq"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"szelongq"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"szelongq":12}},{"path":"src/main/java/duke/LoadingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szelongq"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"szelongq"},"content":"public class LoadingException extends DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"szelongq"},"content":"    public LoadingException() {","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"szelongq"},"content":"        super(\"An error with loading has occurred\");","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"szelongq"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"szelongq":7}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szelongq"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"szelongq"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"szelongq"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"szelongq"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"szelongq"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"szelongq"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"szelongq"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"szelongq"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"szelongq"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"szelongq"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"szelongq"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"szelongq"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"szelongq"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"szelongq"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"szelongq"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"szelongq"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"szelongq"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"szelongq"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"szelongq"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"szelongq"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"szelongq"},"content":"            stage.show();","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"szelongq"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"szelongq"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"szelongq"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"szelongq"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"szelongq":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szelongq"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"szelongq"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"szelongq"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"szelongq"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"szelongq"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"szelongq"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"szelongq"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"szelongq"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"szelongq"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"szelongq"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"szelongq"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"szelongq"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"szelongq"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"szelongq"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"szelongq"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"szelongq"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"szelongq"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"szelongq"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"szelongq"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"szelongq"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"szelongq"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"szelongq"},"content":"    // Image credits to Rhaennys from https://rhaennys.itch.io/pixel-art","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"szelongq"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/Images/Cecilia.png\"));","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"szelongq"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/Images/ItemShopNPC.png\"));","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"szelongq"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"szelongq"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"szelongq"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"szelongq"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"szelongq"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"szelongq"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"szelongq"},"content":"                DialogBox.getDukeDialog(d.getStartUpMessage(), dukeImage));","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"szelongq"},"content":"        if (!d.getTasksLoadedMessage().equals(\"\")) {","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"szelongq"},"content":"            dialogContainer.getChildren().add(","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"szelongq"},"content":"                    DialogBox.getDukeDialog(d.getTasksLoadedMessage(), dukeImage));","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"szelongq"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"szelongq"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"szelongq"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"szelongq"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"szelongq"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"szelongq"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"szelongq"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"szelongq"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"szelongq"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"szelongq"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"szelongq"},"content":"        );","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"szelongq"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"szelongq"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"szelongq":61}},{"path":"src/main/java/duke/MissingInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szelongq"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"szelongq"},"content":"public class MissingInputException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"szelongq"},"content":"    public MissingInputException(TaskType taskType) {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"szelongq"},"content":"        super(\"The description for \" + taskType + \" cannot be empty\");","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"szelongq"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"szelongq":7}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szelongq"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"szelongq"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"szelongq"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"szelongq"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"szelongq"},"content":" * Parser is the class that deals with making sense of the user commands.","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"szelongq"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"szelongq"},"content":"public class Parser {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"szelongq"},"content":"     * Returns type of command given in the specified user input.","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"szelongq"},"content":"     * @param userInput The whole line of command from the user.","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"szelongq"},"content":"     * @return The type of command requested.","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"szelongq"},"content":"     * @throws UnsupportedOperationException  If the user entered a","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"szelongq"},"content":"     *                command that is not recognized.","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"szelongq"},"content":"    public static CommandType parseCommandType(String userInput)","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"szelongq"},"content":"            throws UnsupportedOperationException {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"szelongq"},"content":"        Scanner userInputScanner \u003d new Scanner(userInput);","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"szelongq"},"content":"        String operation \u003d userInputScanner.next();","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"szelongq"},"content":"        switch (operation.toLowerCase()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"szelongq"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"szelongq"},"content":"            return CommandType.EXIT;","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"szelongq"},"content":"        case \"list\":","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"szelongq"},"content":"            return CommandType.LIST;","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"szelongq"},"content":"        case \"done\":","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"szelongq"},"content":"            return CommandType.COMPLETE_TASK;","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"szelongq"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"szelongq"},"content":"            // Fallthrough","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"szelongq"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"szelongq"},"content":"            // Fallthrough","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"szelongq"},"content":"        case \"event\":","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"szelongq"},"content":"            return CommandType.ADD_TASK;","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"szelongq"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"szelongq"},"content":"            return CommandType.DELETE_TASK;","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"szelongq"},"content":"        case \"find\":","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"szelongq"},"content":"            return CommandType.FIND_TASK;","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"szelongq"},"content":"        case \"showpath\":","lastModifiedDate":"2021-09-09"},{"lineNumber":43,"author":{"gitId":"szelongq"},"content":"            return CommandType.SHOW_PATH;","lastModifiedDate":"2021-09-09"},{"lineNumber":44,"author":{"gitId":"szelongq"},"content":"        case \"setpath\":","lastModifiedDate":"2021-09-09"},{"lineNumber":45,"author":{"gitId":"szelongq"},"content":"            return CommandType.SET_PATH;","lastModifiedDate":"2021-09-09"},{"lineNumber":46,"author":{"gitId":"szelongq"},"content":"        default:","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"szelongq"},"content":"            throw new UnsupportedOperationException();","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"szelongq"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"szelongq"},"content":"     * Creates a new task based on the user\u0027s inputs.","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"szelongq"},"content":"     * The user command given is expected to be \"todo\", \"deadline\"","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"szelongq"},"content":"     * or \"event\".","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"szelongq"},"content":"     * @param userInput The whole line of command from the user.","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"szelongq"},"content":"     * @return The new task that was requested.","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"szelongq"},"content":"     * @throws MissingInputException  If the user did not enter any","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"szelongq"},"content":"     *                other task details after the command word.","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"szelongq"},"content":"    public static Task parseNewTask(String userInput) throws MissingInputException {","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"szelongq"},"content":"        Scanner userInputScanner \u003d new Scanner((userInput));","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"szelongq"},"content":"        TaskType taskType \u003d TaskType.getTaskType(userInputScanner.next().toLowerCase());","lastModifiedDate":"2021-09-09"},{"lineNumber":64,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"szelongq"},"content":"        if (!userInputScanner.hasNext()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"szelongq"},"content":"            throw new MissingInputException(taskType);","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"szelongq"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"szelongq"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"szelongq"},"content":"        case TODO:","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"szelongq"},"content":"            String todoName \u003d userInputScanner.nextLine().trim();","lastModifiedDate":"2021-09-09"},{"lineNumber":72,"author":{"gitId":"szelongq"},"content":"            return new ToDo(todoName);","lastModifiedDate":"2021-09-09"},{"lineNumber":73,"author":{"gitId":"szelongq"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"szelongq"},"content":"            userInputScanner.useDelimiter(\" /by \");","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"szelongq"},"content":"            String deadlineName \u003d userInputScanner.next().trim();","lastModifiedDate":"2021-09-09"},{"lineNumber":76,"author":{"gitId":"szelongq"},"content":"            LocalDate deadlineDateTime \u003d","lastModifiedDate":"2021-09-09"},{"lineNumber":77,"author":{"gitId":"szelongq"},"content":"                    LocalDate.parse(userInputScanner.next().trim());","lastModifiedDate":"2021-09-09"},{"lineNumber":78,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":79,"author":{"gitId":"szelongq"},"content":"            return new Deadline(deadlineName, deadlineDateTime);","lastModifiedDate":"2021-09-09"},{"lineNumber":80,"author":{"gitId":"szelongq"},"content":"        case EVENT:","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"szelongq"},"content":"            userInputScanner.useDelimiter(\" /at \");","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"szelongq"},"content":"            String eventName \u003d userInputScanner.next().trim();","lastModifiedDate":"2021-09-09"},{"lineNumber":83,"author":{"gitId":"szelongq"},"content":"            LocalDate eventDateTime \u003d","lastModifiedDate":"2021-09-09"},{"lineNumber":84,"author":{"gitId":"szelongq"},"content":"                    LocalDate.parse(userInputScanner.next().trim());","lastModifiedDate":"2021-09-09"},{"lineNumber":85,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":86,"author":{"gitId":"szelongq"},"content":"            return new Event(eventName, eventDateTime);","lastModifiedDate":"2021-09-09"},{"lineNumber":87,"author":{"gitId":"szelongq"},"content":"        default:","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"szelongq"},"content":"            assert false; // Undefined task type input","lastModifiedDate":"2021-09-08"},{"lineNumber":89,"author":{"gitId":"szelongq"},"content":"            return null;","lastModifiedDate":"2021-09-08"},{"lineNumber":90,"author":{"gitId":"szelongq"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":94,"author":{"gitId":"szelongq"},"content":"     * Returns the task number specified in the user command.","lastModifiedDate":"2021-08-27"},{"lineNumber":95,"author":{"gitId":"szelongq"},"content":"     * The user command given is expected to be \"done\" or \"delete\".","lastModifiedDate":"2021-08-27"},{"lineNumber":96,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":97,"author":{"gitId":"szelongq"},"content":"     * @param userInput The whole line of command from the user.","lastModifiedDate":"2021-09-01"},{"lineNumber":98,"author":{"gitId":"szelongq"},"content":"     * @return The number of the task to execute the command on.","lastModifiedDate":"2021-09-01"},{"lineNumber":99,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":100,"author":{"gitId":"szelongq"},"content":"    public static int parseTaskNum(String userInput) {","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"szelongq"},"content":"        Scanner userInputScanner \u003d new Scanner(userInput);","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"szelongq"},"content":"        userInputScanner.next();","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"szelongq"},"content":"        return userInputScanner.nextInt();","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":106,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":107,"author":{"gitId":"szelongq"},"content":"     * Returns the search term to be searched for among the names","lastModifiedDate":"2021-09-01"},{"lineNumber":108,"author":{"gitId":"szelongq"},"content":"     * of tasks in the list.","lastModifiedDate":"2021-09-01"},{"lineNumber":109,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":110,"author":{"gitId":"szelongq"},"content":"     * @param userInput The whole line of command from the user.","lastModifiedDate":"2021-09-01"},{"lineNumber":111,"author":{"gitId":"szelongq"},"content":"     * @return The search term specified in the user command.","lastModifiedDate":"2021-09-01"},{"lineNumber":112,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":113,"author":{"gitId":"szelongq"},"content":"    public static String parseSearchSubject(String userInput) {","lastModifiedDate":"2021-08-28"},{"lineNumber":114,"author":{"gitId":"szelongq"},"content":"        Scanner userInputScanner \u003d new Scanner(userInput);","lastModifiedDate":"2021-08-28"},{"lineNumber":115,"author":{"gitId":"szelongq"},"content":"        userInputScanner.next();","lastModifiedDate":"2021-08-28"},{"lineNumber":116,"author":{"gitId":"szelongq"},"content":"        return userInputScanner.nextLine().trim();","lastModifiedDate":"2021-08-28"},{"lineNumber":117,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":118,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":119,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":120,"author":{"gitId":"szelongq"},"content":"     * Returns the new path to be set as the save file location.","lastModifiedDate":"2021-09-09"},{"lineNumber":121,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":122,"author":{"gitId":"szelongq"},"content":"     * @param userInput The whole line of command from the user.","lastModifiedDate":"2021-09-09"},{"lineNumber":123,"author":{"gitId":"szelongq"},"content":"     * @return The new save file path.","lastModifiedDate":"2021-09-09"},{"lineNumber":124,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":125,"author":{"gitId":"szelongq"},"content":"    public static String parseNewPath(String userInput) {","lastModifiedDate":"2021-09-09"},{"lineNumber":126,"author":{"gitId":"szelongq"},"content":"        Scanner userInputScanner \u003d new Scanner(userInput);","lastModifiedDate":"2021-09-09"},{"lineNumber":127,"author":{"gitId":"szelongq"},"content":"        userInputScanner.next();","lastModifiedDate":"2021-09-09"},{"lineNumber":128,"author":{"gitId":"szelongq"},"content":"        return userInputScanner.nextLine().trim();","lastModifiedDate":"2021-09-09"},{"lineNumber":129,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":130,"author":{"gitId":"szelongq"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"szelongq":130}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szelongq"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"szelongq"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"szelongq"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"szelongq"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"szelongq"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"szelongq"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"szelongq"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"szelongq"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"szelongq"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"szelongq"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"szelongq"},"content":" * Storage is the class that deals with loading tasks from the file","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"szelongq"},"content":" * on the hard drive and saving tasks to the file on the hard drive.","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"szelongq"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"szelongq"},"content":"public class Storage {","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"szelongq"},"content":"    private Path savePath;","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"szelongq"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"szelongq"},"content":"     * @param filepath  Filepath to the save file.","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"szelongq"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"szelongq"},"content":"        savePath \u003d Path.of(System.getProperty(\"user.dir\"), filepath);","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"szelongq"},"content":"     * Loads save data from the save file, if it exists.","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"szelongq"},"content":"     * If a save file does not exist, then a new save file","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"szelongq"},"content":"     * will be created.","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"szelongq"},"content":"     * @return ArrayList of saved Tasks if save file exists, otherwise","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"szelongq"},"content":"     *                returns an empty ArrayList instead.","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"szelongq"},"content":"     * @throws LoadingException  If an IOException occurs while loading","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"szelongq"},"content":"     *                the save file.","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"szelongq"},"content":"    public ArrayList\u003cTask\u003e load() throws LoadingException {","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"szelongq"},"content":"        if (Files.exists(savePath)) {","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"szelongq"},"content":"            return loadTasks(savePath);","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"szelongq"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"szelongq"},"content":"            try {","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"szelongq"},"content":"                Files.createDirectories(savePath.getParent());","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"szelongq"},"content":"                Files.createFile(savePath);","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"szelongq"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"szelongq"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"szelongq"},"content":"                throw new LoadingException();","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"szelongq"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"szelongq"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"szelongq"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"szelongq"},"content":"    private ArrayList\u003cTask\u003e loadTasks(Path savePath) {","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"szelongq"},"content":"        try (BufferedReader reader \u003d Files.newBufferedReader(savePath)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"szelongq"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"szelongq"},"content":"            String line \u003d reader.readLine();","lastModifiedDate":"2021-09-09"},{"lineNumber":58,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"szelongq"},"content":"            while (line !\u003d null) {","lastModifiedDate":"2021-09-09"},{"lineNumber":60,"author":{"gitId":"szelongq"},"content":"                tasks.add(loadTask(line));","lastModifiedDate":"2021-09-09"},{"lineNumber":61,"author":{"gitId":"szelongq"},"content":"                line \u003d reader.readLine();","lastModifiedDate":"2021-09-09"},{"lineNumber":62,"author":{"gitId":"szelongq"},"content":"            }","lastModifiedDate":"2021-09-09"},{"lineNumber":63,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":64,"author":{"gitId":"szelongq"},"content":"            return tasks;","lastModifiedDate":"2021-09-09"},{"lineNumber":65,"author":{"gitId":"szelongq"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2021-09-09"},{"lineNumber":66,"author":{"gitId":"szelongq"},"content":"            ex.printStackTrace();","lastModifiedDate":"2021-09-09"},{"lineNumber":67,"author":{"gitId":"szelongq"},"content":"            return null;","lastModifiedDate":"2021-09-09"},{"lineNumber":68,"author":{"gitId":"szelongq"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":69,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":70,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":71,"author":{"gitId":"szelongq"},"content":"    private Task loadTask(String savedTask) {","lastModifiedDate":"2021-09-09"},{"lineNumber":72,"author":{"gitId":"szelongq"},"content":"        Scanner saveDataScanner \u003d new Scanner(savedTask).useDelimiter(\", \");","lastModifiedDate":"2021-09-09"},{"lineNumber":73,"author":{"gitId":"szelongq"},"content":"        String taskType \u003d saveDataScanner.next();","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"szelongq"},"content":"        boolean isTaskDone \u003d saveDataScanner.nextInt() \u003d\u003d 1;","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"szelongq"},"content":"        String taskDesc \u003d saveDataScanner.next();","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"szelongq"},"content":"        Task loadedTask \u003d null;","lastModifiedDate":"2021-09-09"},{"lineNumber":77,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"szelongq"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"szelongq"},"content":"        case \"T\":","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"szelongq"},"content":"            loadedTask \u003d new ToDo(taskDesc, isTaskDone);","lastModifiedDate":"2021-09-09"},{"lineNumber":81,"author":{"gitId":"szelongq"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"szelongq"},"content":"        case \"D\":","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"szelongq"},"content":"            LocalDate deadlineDateTime \u003d LocalDate.parse(saveDataScanner.next());","lastModifiedDate":"2021-09-09"},{"lineNumber":84,"author":{"gitId":"szelongq"},"content":"            loadedTask \u003d new Deadline(taskDesc, deadlineDateTime, isTaskDone);","lastModifiedDate":"2021-09-09"},{"lineNumber":85,"author":{"gitId":"szelongq"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"szelongq"},"content":"        case \"E\":","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"szelongq"},"content":"            LocalDate eventDateTime \u003d LocalDate.parse(saveDataScanner.next());","lastModifiedDate":"2021-09-09"},{"lineNumber":88,"author":{"gitId":"szelongq"},"content":"            loadedTask \u003d new Event(taskDesc, eventDateTime, isTaskDone);","lastModifiedDate":"2021-09-09"},{"lineNumber":89,"author":{"gitId":"szelongq"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"szelongq"},"content":"        default:","lastModifiedDate":"2021-09-01"},{"lineNumber":91,"author":{"gitId":"szelongq"},"content":"            assert false; // Undefined task type input","lastModifiedDate":"2021-09-08"},{"lineNumber":92,"author":{"gitId":"szelongq"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"szelongq"},"content":"        saveDataScanner.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":95,"author":{"gitId":"szelongq"},"content":"        return loadedTask;","lastModifiedDate":"2021-09-09"},{"lineNumber":96,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":99,"author":{"gitId":"szelongq"},"content":"     * Saves all the tasks and their information onto the save file.","lastModifiedDate":"2021-08-27"},{"lineNumber":100,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":101,"author":{"gitId":"szelongq"},"content":"     * @param tasks TaskList containing the tasks to be saved.","lastModifiedDate":"2021-08-27"},{"lineNumber":102,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":103,"author":{"gitId":"szelongq"},"content":"    public void saveTasks(TaskList tasks) {","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"szelongq"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"szelongq"},"content":"            BufferedWriter writer \u003d Files.newBufferedWriter(savePath);","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"szelongq"},"content":"            for (int i \u003d 1; i \u003c\u003d tasks.getSize(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"szelongq"},"content":"                writer.write(tasks.getTask(i).toSaveFormat() + \"\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"szelongq"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"szelongq"},"content":"            writer.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"szelongq"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"szelongq"},"content":"            ex.printStackTrace();","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"szelongq"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":115,"author":{"gitId":"szelongq"},"content":"    public String getPath() {","lastModifiedDate":"2021-09-09"},{"lineNumber":116,"author":{"gitId":"szelongq"},"content":"        return savePath.toString();","lastModifiedDate":"2021-09-09"},{"lineNumber":117,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":118,"author":{"gitId":"szelongq"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"szelongq":118}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szelongq"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"szelongq"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"szelongq"},"content":" * Task is the abstract class that describes the basic details of all tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"szelongq"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"szelongq"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"szelongq"},"content":"    private String taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"szelongq"},"content":"    private TaskType taskType;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"szelongq"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"szelongq"},"content":"     * Class constructor specifying the name and type of the task","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"szelongq"},"content":"     * and whether the task is done.","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"szelongq"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"szelongq"},"content":"     * @param taskType The type of task.","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"szelongq"},"content":"     * @param isDone Whether the task is done.","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"szelongq"},"content":"    public Task(String taskName, TaskType taskType, boolean isDone) {","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"szelongq"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"szelongq"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"szelongq"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"szelongq"},"content":"     * Class constructor specifying the name and type of the task.","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"szelongq"},"content":"     * The task is initialised as not done.","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"szelongq"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"szelongq"},"content":"     * @param taskType The type of task.","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"szelongq"},"content":"    public Task(String taskName, TaskType taskType) {","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"szelongq"},"content":"        this(taskName, taskType, false);","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"szelongq"},"content":"     * Creates a String object that contains all the task details","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"szelongq"},"content":"     * that is to be saved in the save file.","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"szelongq"},"content":"     * @return The String object containing the task details.","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"szelongq"},"content":"    public abstract String toSaveFormat();","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"szelongq"},"content":"    public String getTaskName() {","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"szelongq"},"content":"        return taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"szelongq"},"content":"    public void setTaskName(String taskName) {","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"szelongq"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"szelongq"},"content":"    public TaskType getTaskType() {","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"szelongq"},"content":"        return taskType;","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"szelongq"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"szelongq"},"content":"        return isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"szelongq"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"szelongq"},"content":"        isDone \u003d done;","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"szelongq"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"szelongq"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"szelongq"},"content":"        String checked \u003d isDone ? \"X\" : \" \";","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"szelongq"},"content":"        return String.format(\"[%s] %s\", checked, taskName);","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"szelongq"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"szelongq":69}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szelongq"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"szelongq"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"szelongq"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"szelongq"},"content":" * TaskList is the class that contains the list of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"szelongq"},"content":" * It provides operations to add and delete tasks from the list,","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"szelongq"},"content":" * and mark tasks as complete.","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"szelongq"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"szelongq"},"content":"public class TaskList {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"szelongq"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"szelongq"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"szelongq"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"szelongq"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"szelongq"},"content":"     * Class constructor specifying an initial list of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"szelongq"},"content":"     * @param tasks The list of tasks to initialise with.","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"szelongq"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"szelongq"},"content":"        if (tasks !\u003d null) {","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"szelongq"},"content":"            this.tasks \u003d tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"szelongq"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"szelongq"},"content":"            this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"szelongq"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"szelongq"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"szelongq"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"szelongq"},"content":"     * Retrieves the task of the specified index from the list.","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"szelongq"},"content":"     * Uses 1-based indexing.","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"szelongq"},"content":"     * @param taskIndex The new task to be added.","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"szelongq"},"content":"     * @return The task with the specified index.","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"szelongq"},"content":"    public Task getTask(int taskIndex) {","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"szelongq"},"content":"        return tasks.get(taskIndex - 1);","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"szelongq"},"content":"     * Adds a task to the list of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"szelongq"},"content":"     * @param newTask The new task to be added.","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"szelongq"},"content":"    public void addTask(Task newTask) {","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"szelongq"},"content":"        tasks.add(newTask);","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"szelongq"},"content":"     * Marks the task of the specified index in the list as done.","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"szelongq"},"content":"     * Uses 1-based indexing.","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"szelongq"},"content":"     * @param taskIndex The index of the task to be marked as done.","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"szelongq"},"content":"     * @return The task that has been marked as done.","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"szelongq"},"content":"    public Task completeTask(int taskIndex) {","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"szelongq"},"content":"        tasks.get(taskIndex - 1).setDone(true);","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"szelongq"},"content":"        return tasks.get(taskIndex - 1);","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"szelongq"},"content":"     * Deletes a task of the specified index from the list.","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"szelongq"},"content":"     * Uses 1-based indexing.","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"szelongq"},"content":"     * @param taskIndex The index of the task to be deleted from the list.","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"szelongq"},"content":"     * @return The task that has been deleted from the list.","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"szelongq"},"content":"    public Task deleteTask(int taskIndex) {","lastModifiedDate":"2021-08-31"},{"lineNumber":77,"author":{"gitId":"szelongq"},"content":"        return tasks.remove(taskIndex - 1);","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"szelongq"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"szelongq":79}},{"path":"src/main/java/duke/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szelongq"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"szelongq"},"content":"public enum TaskType {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"szelongq"},"content":"    TODO, DEADLINE, EVENT;","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"szelongq"},"content":"    public static TaskType getTaskType(String taskTypeString) {","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"szelongq"},"content":"        switch (taskTypeString.toLowerCase()) {","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"szelongq"},"content":"        case \"todo\":","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"szelongq"},"content":"            return TaskType.TODO;","lastModifiedDate":"2021-09-09"},{"lineNumber":10,"author":{"gitId":"szelongq"},"content":"        case \"deadline\":","lastModifiedDate":"2021-09-09"},{"lineNumber":11,"author":{"gitId":"szelongq"},"content":"            return TaskType.DEADLINE;","lastModifiedDate":"2021-09-09"},{"lineNumber":12,"author":{"gitId":"szelongq"},"content":"        case \"event\":","lastModifiedDate":"2021-09-09"},{"lineNumber":13,"author":{"gitId":"szelongq"},"content":"            return TaskType.EVENT;","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"szelongq"},"content":"        default:","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"szelongq"},"content":"            assert false; // Invalid input","lastModifiedDate":"2021-09-09"},{"lineNumber":16,"author":{"gitId":"szelongq"},"content":"            return null;","lastModifiedDate":"2021-09-09"},{"lineNumber":17,"author":{"gitId":"szelongq"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":18,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":19,"author":{"gitId":"szelongq"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"szelongq":19}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szelongq"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"szelongq"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"szelongq"},"content":"    public ToDo(String taskName, boolean isDone) {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"szelongq"},"content":"        super(taskName, TaskType.TODO, isDone);","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"szelongq"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"szelongq"},"content":"        this(taskName, false);","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"szelongq"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"szelongq"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"szelongq"},"content":"        return String.format(\"T, %d, %s\", isDone() ? 1 : 0, getTaskName());","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"szelongq"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"szelongq"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"szelongq"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"szelongq"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"szelongq":21}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szelongq"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"szelongq"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"szelongq"},"content":" * Ui is the class that deals with all output messages to the user.","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"szelongq"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"szelongq"},"content":"public class Ui {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"szelongq"},"content":"     * Returns the message when the program is ready to accept user commands.","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"szelongq"},"content":"     * @return A String object containing the start-up message.","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"szelongq"},"content":"    public String printStartInteractionsMessage() {","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"szelongq"},"content":"        return \"Hello, I\u0027m Duke. What may I do for you?\";","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"szelongq"},"content":"     * Returns a printout the current list of tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"szelongq"},"content":"     * @param tasks The TaskList containing all the current tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"szelongq"},"content":"     * @return A String object containing the text printout of the TaskList.","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"szelongq"},"content":"    public String printTaskList(TaskList tasks) {","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"szelongq"},"content":"        StringBuilder taskListSummary \u003d new StringBuilder();","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"szelongq"},"content":"        taskListSummary.append(\"Current list of tasks:\\n\");","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"szelongq"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.getSize(); i++) {","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"szelongq"},"content":"            taskListSummary.append(String.format(\"\\t%d.%s\\n\", i, tasks.getTask(i)));","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"szelongq"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"szelongq"},"content":"        taskListSummary.append(\"Now you have \" + tasks.getSize() + \" tasks in the list.\");","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"szelongq"},"content":"        return taskListSummary.toString();","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"szelongq"},"content":"     * Returns the message when the program has added a task to the list.","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"szelongq"},"content":"     * @param tasks The TaskList containing all the current tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"szelongq"},"content":"     * @param newTask The task that was added to the list.","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"szelongq"},"content":"     * @return A String object containing the message.","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"szelongq"},"content":"    public String printAddTask(TaskList tasks, Task newTask) {","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"szelongq"},"content":"        return \"Added:\\n\\t\" + newTask + \"\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"szelongq"},"content":"                + \"Now you have \" + tasks.getSize() + \" tasks in the list.\";","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"szelongq"},"content":"     * Returns the message when the program has marked a task as completed.","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"szelongq"},"content":"     * @param completedTask The task that was marked as completed.","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"szelongq"},"content":"     * @return A String object containing the message.","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"szelongq"},"content":"    public String printCompleteTask(Task completedTask) {","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"szelongq"},"content":"        return \"Marking task as completed:\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"szelongq"},"content":"                + \"\\t\" + completedTask;","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"szelongq"},"content":"     * Returns the message when the program has deleted a task from the list.","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"szelongq"},"content":"     * @param tasks The TaskList containing all the current tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"szelongq"},"content":"     * @param deletedTask The task that was deleted from the list.","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"szelongq"},"content":"     * @return A String object containing the message.","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"szelongq"},"content":"    public String printDeleteTask(TaskList tasks, Task deletedTask) {","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"szelongq"},"content":"        return \"Removing task:\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":65,"author":{"gitId":"szelongq"},"content":"                + \"\\t\" + deletedTask + \"\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":66,"author":{"gitId":"szelongq"},"content":"                + \"Now you have \" + tasks.getSize() + \" tasks in the list.\";","lastModifiedDate":"2021-09-02"},{"lineNumber":67,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"szelongq"},"content":"     * Returns a printout of the list of tasks whose names contain the subject.","lastModifiedDate":"2021-09-02"},{"lineNumber":71,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"szelongq"},"content":"     * @param tasks The TaskList containing all the current tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"szelongq"},"content":"     * @param subject The keyword that is being searched for.","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"szelongq"},"content":"     * @return A String object containing the printout of the search results.","lastModifiedDate":"2021-09-02"},{"lineNumber":75,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"szelongq"},"content":"    public String printTasksWithSubject(TaskList tasks, String subject) {","lastModifiedDate":"2021-09-02"},{"lineNumber":77,"author":{"gitId":"szelongq"},"content":"        StringBuilder searchResults \u003d new StringBuilder();","lastModifiedDate":"2021-09-02"},{"lineNumber":78,"author":{"gitId":"szelongq"},"content":"        int numOfResults \u003d 0;","lastModifiedDate":"2021-09-01"},{"lineNumber":79,"author":{"gitId":"szelongq"},"content":"        searchResults.append(\"Tasks with \\\"\" + subject + \"\\\":\\n\");","lastModifiedDate":"2021-09-02"},{"lineNumber":80,"author":{"gitId":"szelongq"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.getSize(); i++) {","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"szelongq"},"content":"            if (tasks.getTask(i).getTaskName().contains(subject)) {","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"szelongq"},"content":"                numOfResults++;","lastModifiedDate":"2021-09-01"},{"lineNumber":83,"author":{"gitId":"szelongq"},"content":"                searchResults.append(String.format(\"\\t%d.%s\\n\", i, tasks.getTask(i)));","lastModifiedDate":"2021-09-02"},{"lineNumber":84,"author":{"gitId":"szelongq"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"szelongq"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":87,"author":{"gitId":"szelongq"},"content":"        if (numOfResults \u003d\u003d 0) {","lastModifiedDate":"2021-09-01"},{"lineNumber":88,"author":{"gitId":"szelongq"},"content":"            searchResults.append(\"\\nNo results found.\");","lastModifiedDate":"2021-09-02"},{"lineNumber":89,"author":{"gitId":"szelongq"},"content":"        } else if (numOfResults \u003d\u003d 1) {","lastModifiedDate":"2021-09-01"},{"lineNumber":90,"author":{"gitId":"szelongq"},"content":"            searchResults.append(\"Total of 1 result found.\");","lastModifiedDate":"2021-09-02"},{"lineNumber":91,"author":{"gitId":"szelongq"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":92,"author":{"gitId":"szelongq"},"content":"            searchResults.append(\"Total of \" + numOfResults + \" results found.\");","lastModifiedDate":"2021-09-02"},{"lineNumber":93,"author":{"gitId":"szelongq"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":94,"author":{"gitId":"szelongq"},"content":"        return searchResults.toString();","lastModifiedDate":"2021-09-02"},{"lineNumber":95,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":96,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":97,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":98,"author":{"gitId":"szelongq"},"content":"     * Returns the message when the program has loaded the list of tasks","lastModifiedDate":"2021-09-02"},{"lineNumber":99,"author":{"gitId":"szelongq"},"content":"     * from a previous save file.","lastModifiedDate":"2021-08-27"},{"lineNumber":100,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":101,"author":{"gitId":"szelongq"},"content":"     * @param tasks The TaskList containing all the current tasks","lastModifiedDate":"2021-09-01"},{"lineNumber":102,"author":{"gitId":"szelongq"},"content":"     *             that was loaded.","lastModifiedDate":"2021-08-27"},{"lineNumber":103,"author":{"gitId":"szelongq"},"content":"     * @return A String object containing the message.","lastModifiedDate":"2021-09-02"},{"lineNumber":104,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":105,"author":{"gitId":"szelongq"},"content":"    public String printLoadTasks(TaskList tasks) {","lastModifiedDate":"2021-09-02"},{"lineNumber":106,"author":{"gitId":"szelongq"},"content":"        return \"I have loaded your past tasks list!\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":107,"author":{"gitId":"szelongq"},"content":"                + printTaskList(tasks);","lastModifiedDate":"2021-09-02"},{"lineNumber":108,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":111,"author":{"gitId":"szelongq"},"content":"     * Returns the error message when the program encountered an error.","lastModifiedDate":"2021-09-02"},{"lineNumber":112,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":113,"author":{"gitId":"szelongq"},"content":"     * @param message The error message from the exception.","lastModifiedDate":"2021-09-01"},{"lineNumber":114,"author":{"gitId":"szelongq"},"content":"     * @return A String object containing the error message.","lastModifiedDate":"2021-09-02"},{"lineNumber":115,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":116,"author":{"gitId":"szelongq"},"content":"    public String printErrorMessage(String message) {","lastModifiedDate":"2021-09-02"},{"lineNumber":117,"author":{"gitId":"szelongq"},"content":"        return \"Error: \" + message + \".\";","lastModifiedDate":"2021-09-02"},{"lineNumber":118,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":119,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":120,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":121,"author":{"gitId":"szelongq"},"content":"     * Returns the message describing the current path of the","lastModifiedDate":"2021-09-09"},{"lineNumber":122,"author":{"gitId":"szelongq"},"content":"     * save file location.","lastModifiedDate":"2021-09-09"},{"lineNumber":123,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":124,"author":{"gitId":"szelongq"},"content":"     * @param storage The Storage object whose path is to be returned.","lastModifiedDate":"2021-09-09"},{"lineNumber":125,"author":{"gitId":"szelongq"},"content":"     * @return The current save file path.","lastModifiedDate":"2021-09-09"},{"lineNumber":126,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":127,"author":{"gitId":"szelongq"},"content":"    public String printCurrentStoragePath(Storage storage) {","lastModifiedDate":"2021-09-09"},{"lineNumber":128,"author":{"gitId":"szelongq"},"content":"        return \"Current path is:\\n\" + storage.getPath();","lastModifiedDate":"2021-09-09"},{"lineNumber":129,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":130,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":131,"author":{"gitId":"szelongq"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":132,"author":{"gitId":"szelongq"},"content":"     * Returns the message describing the new path of the save file","lastModifiedDate":"2021-09-09"},{"lineNumber":133,"author":{"gitId":"szelongq"},"content":"     * location and also print out the loaded task list.","lastModifiedDate":"2021-09-09"},{"lineNumber":134,"author":{"gitId":"szelongq"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":135,"author":{"gitId":"szelongq"},"content":"     * @param storage The Storage object whose new path is to be returned.","lastModifiedDate":"2021-09-09"},{"lineNumber":136,"author":{"gitId":"szelongq"},"content":"     * @param tasks The TaskList object containing the loaded tasks.","lastModifiedDate":"2021-09-09"},{"lineNumber":137,"author":{"gitId":"szelongq"},"content":"     * @return The new save file path and the list of loaded tasks.","lastModifiedDate":"2021-09-09"},{"lineNumber":138,"author":{"gitId":"szelongq"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":139,"author":{"gitId":"szelongq"},"content":"    public String printNewStoragePath(Storage storage, TaskList tasks) {","lastModifiedDate":"2021-09-09"},{"lineNumber":140,"author":{"gitId":"szelongq"},"content":"        return \"New path set:\\n\" + storage.getPath() + \"\\n\\n\"","lastModifiedDate":"2021-09-09"},{"lineNumber":141,"author":{"gitId":"szelongq"},"content":"                + printLoadTasks(tasks);","lastModifiedDate":"2021-09-09"},{"lineNumber":142,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":143,"author":{"gitId":"szelongq"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"szelongq":143}},{"path":"src/main/java/duke/UnsupportedOperationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szelongq"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"szelongq"},"content":"public class UnsupportedOperationException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"szelongq"},"content":"    public UnsupportedOperationException() {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"szelongq"},"content":"        super(\"No such operation supported\");","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"szelongq"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"szelongq":7}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szelongq"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"szelongq"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"szelongq"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"szelongq"},"content":"import duke.CommandType;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"szelongq"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"szelongq"},"content":"import duke.MissingInputException;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"szelongq"},"content":"import duke.Parser;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"szelongq"},"content":"import duke.Task;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"szelongq"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"szelongq"},"content":"import duke.ToDo;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"szelongq"},"content":"import duke.UnsupportedOperationException;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"szelongq"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"szelongq"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"szelongq"},"content":"    public void taskListTest() {","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"szelongq"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"szelongq"},"content":"        assertEquals(taskList.getSize(), 0);","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"szelongq"},"content":"        Task task1 \u003d new ToDo(\"test task 1\");","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"szelongq"},"content":"        Task task2 \u003d new ToDo(\"test task 2\");","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"szelongq"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"szelongq"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"szelongq"},"content":"        assertEquals(taskList.getSize(), 2);","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"szelongq"},"content":"        assertEquals(taskList.getTask(1), task1);","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"szelongq"},"content":"        taskList.completeTask(1);","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"szelongq"},"content":"        assertEquals(taskList.getTask(1).isDone(), true);","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"szelongq"},"content":"        assertEquals(taskList.getTask(2).isDone(), false);","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"szelongq"},"content":"        taskList.deleteTask(1);","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"szelongq"},"content":"        assertEquals(taskList.getSize(), 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"szelongq"},"content":"        assertEquals(taskList.getTask(1), task2);","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"szelongq"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"szelongq"},"content":"    public void parserTestCommands() {","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"szelongq"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"szelongq"},"content":"            assertEquals(Parser.parseCommandType(\"ByE   \"), CommandType.EXIT);","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"szelongq"},"content":"            assertEquals(Parser.parseCommandType(\"DeadLine :((( \"), CommandType.ADD_TASK);","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"szelongq"},"content":"            assertEquals(Parser.parseCommandType(\" delete afeascs\"), CommandType.DELETE_TASK);","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"szelongq"},"content":"            assertThrows(UnsupportedOperationException.class, () -\u003e Parser.parseCommandType(\" bleh\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"szelongq"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"szelongq"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"szelongq"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"szelongq"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"szelongq"},"content":"    public void parserTestTasks() {","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"szelongq"},"content":"        assertThrows(MissingInputException.class, () -\u003e Parser.parseNewTask(\"deadline \"));","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"szelongq"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"szelongq"},"content":"        assertEquals(Parser.parseTaskNum(\"deleTe         23\"), 23);","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"szelongq"},"content":"        assertEquals(Parser.parseTaskNum(\" dOnE 3\"), 3);","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"szelongq"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"szelongq"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"szelongq":57}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"szelongq"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"szelongq"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"szelongq"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"szelongq"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"szelongq"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"szelongq"},"content":"blah","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"szelongq"},"content":"delete 2","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"szelongq"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"szelongq"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"szelongq":9}}]
