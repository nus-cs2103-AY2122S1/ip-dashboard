{"authorDailyContributionsMap":{"Yukun99":[{"date":"2021-08-14","commitResults":[{"hash":"7cec7197fdf6f658e1464407b23fba8fb0c468e8","messageTitle":"Make Duke follow OOP","messageBody":"To follow OOP, we make the Duke bot an Object, which can be instantiated multiple times. This allows us to create instances of the Duke bot elsewhere, even from other applications.\n\nTo further improve code clarity, I moved the entry point of the program to the Main class, along with the Main method. The Duke class has further been renamed to HelpBot to allow anyone to name the bot however they like.\n\nIn my case, I have specified the logo in the main class as a constant, that I now pass through to the HelpBot class as the bot\u0027s name.\n\nFinally, javadocs have been added to the classes for documentation purposes, and the test batch file has been edited to run the new main class.\n","fileTypesAndContributionMap":{"java":{"insertions":42,"deletions":10},"bat":{"insertions":1,"deletions":1}}},{"hash":"6abaf7416f97ebf983f15baa12cecc56caef5a14","messageTitle":"HelpBot: Add simple reply and exit","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":47,"deletions":8}}},{"hash":"da8b48122787bc0118da110ea924078d375e2a09","messageTitle":"HelpBot: add ability to add/list task","messageBody":"Test files have also been updated to reflect the actual code.\n","tags":["Level-2"],"fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":0},"java":{"insertions":36,"deletions":5}}},{"hash":"042283cf0c8cb6109d010baae2cbc9095a621644","messageTitle":"Add ability to mark tasks as done","messageBody":"Right now, the tasks are kept track of in a List of Strings, and the number of commands has increased to 3, with new and more complex commands being added.\n\nTo allow us to easily keep track of tasks and their status, it is easier to create a new Task object to keep track of this information, instead of storing the tasks in a List. We therefore add Task.java to create these objects, instantiating them with a name and completion value of false.\n\nSince the number of commands is starting to grow as well, an enum containing all the types of commands is now a better way of keeping the user command input method easy to understand. To use this enum, we add getCommand to HelpBot.java to parse the text inputs for command variables. In future, we can easily edit this method if we ever want to add more command parsing to our bot, and we can easily edit the enum to add more commands.\n\nWith the new command requiring us to get an integer from the second word of the command, and future commands possibly needing this too, we add a new class Methods.java to contain commonly used methods across multiple classes. The first method we add here is isInt(String message), which checks if a given String is an int.\n","tags":["Level-3","A-Classes"],"fileTypesAndContributionMap":{"txt":{"insertions":8,"deletions":3},"java":{"insertions":131,"deletions":22}}}]},{"date":"2021-08-15","commitResults":[{"hash":"d964f325f86aade3647ef814c21bf965447a0a30","messageTitle":"Add multiple types of tasks","messageBody":"Currently, we have one type of task, which may not be enough for users who want to set deadlines for their tasks, or plan their time better.\n\nTo make sure that the code is readable, we create three classes, one for each of the new task types. They all extend the main Task.java class, so we can easily call methods from the main class to access the other classes.\n\nSince users now have access to tasks that have dates as well, users may change their mind on when they want these tasks to be fulfilled. To allow this, we add the ability to update the deadline and date for the deadlines and events respectively.\n\nTo keep track of tasks to edit, we use our List of all the tasks, which we can use to easily reference tasks in the correct index to update. An abstract method updateDate in Task.java is added to allow its children to inherit the method. The Todo.java class throws an IllegalStateException when this method is called since it does not have the date field required to be updated.\n\nWe add the method getTaskAmount to return us the number of total tasks when we add a new task. We also add the method onEnableMessage to handle sending the welcome message to new users, now with instructions on how to use the bot, of course with the same passive aggressive spin.\n","tags":["Level-4","A-Inheritance","A-Enums"],"fileTypesAndContributionMap":{"txt":{"insertions":11,"deletions":4},"java":{"insertions":416,"deletions":184}}},{"hash":"a93d03c239bd439c3d1607e8404cf1bfcd5af1f1","messageTitle":"Amend testing files","messageBody":"Presently, javac is used to compile the files and test them. This was easier when the app was not in multiple packages, however with the splitting of classes into different packages, it has become easier to build an artifact and use the java -jar command to run that instead.\n\nTo do this, I build the project artifact in the IDE, which gives me the updated ip.jar. This allows me to run the script test.bat on it, which takes in the input and creates the file ACTUAL.TXT. Finally, the FC results are saved to results.txt to allow us to view it afterwards.\n","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":0},"java":{"insertions":0,"deletions":2},"bat":{"insertions":4,"deletions":21},"sh":{"insertions":0,"deletions":38}}},{"hash":"45d02cb56bc3c1a415e9c7ac33a7ce0f4bcd8ae3","messageTitle":"Add error handling","messageBody":"Currently, error handling uses some of Java\u0027s own errors, as well as methods situated in the Methods.java class. To make errors more useful and informative to users, we should create new errors specific to the bot.\n\nTo do this, we create the class HelpBotException.java, which is the overarching class for all of the errors the bot may face. We divide this into two cases for now, the InvalidTaskType and InvalidTask exceptions. The former is called if the user tries to perform an action on the wrong task type, while the latter is called if the user tries to perform an action on a task that does not exist.\n\nFollowing the changes, we remove Methods.java as error handling has been moved elsewhere. Update EXPECTED.TXT to reflect new messages related to errors.\n","tags":["Level-5","A-Exceptions"],"fileTypesAndContributionMap":{"java":{"insertions":96,"deletions":36}}},{"hash":"bf8dfaf5d201c132de01c82a8f91e4bf429faeb3","messageTitle":"Improve commands and errors","messageBody":"Presently, we do not have a command for the default case of adding tasks to the bot. This could result in confusing cases where users type something wrong into the bot and the typo gets added as a task.\n\nTo fix this, we add a new command \"todo\" to handle the case where users want to add a todo item to their task list. The default case for user messages to the bot is now an error telling the user that the entered command is invalid.\n\nWe also add other error classes to help differentiate between the new errors users may face. We add a new HelpBotIllegalArgumentException as a general error that refers to commands with wrong arguments, with InvalidTaskException being a more specific form relating to the task specified by a command being invalid.\n\nUpdate onEnableMessage to reflect new command and add documentation to the method. Update test cases to reflect the changes. Update .gitignore to stop pushing results.txt to remote.\n","fileTypesAndContributionMap":{"txt":{"insertions":9,"deletions":5},"java":{"insertions":118,"deletions":53}}},{"hash":"4ae95b06e2a0859fd19042a98310342c979c3ac0","messageTitle":"Add task deleting functionality","messageBody":"With the ability to mark tasks as completed a few updates ago, users can now keep track of their tasks. However, this could result in clutter if the completed tasks remain on the list of tasks.\n\nAdd deleteTask method to Task.java to allow users to delete tasks, as well as handle messaging users for a reply. Move getTaskAmount method to Task.java since the tasks are stored there.\n\nRename IllegalCommandException to InvalidCommandException to more accurately reflect the nature of the exception. Rewrote reply message for InvalidTaskException for more clarity when debugging.\n\nUpdated test files to match updates.\n","fileTypesAndContributionMap":{"txt":{"insertions":5,"deletions":0},"java":{"insertions":93,"deletions":23}}}]}]},"authorFileTypeContributionMap":{"Yukun99":{"java":646,"md":0,"fxml":0,"sh":0,"bat":4,"gradle":0,"txt":28}},"authorContributionVariance":{"Yukun99":151706.83},"authorDisplayNameMap":{"Yukun99":"XU Y..UKUN"}}
