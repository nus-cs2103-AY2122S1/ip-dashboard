[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"    protected LocalDate by;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"    public String toData() {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"        return \"D \" + super.toData() + \" \" + this.by + \"\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"El0hime"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format((DateTimeFormatter.ofPattern(\"MMM d yyyy\"))) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"El0hime"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"El0hime":22}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"    //To check if input is an integer, used as a helper function when user inputs \"done 2\"","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":"    public static boolean isInteger(String userInput) {","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":"        if (userInput \u003d\u003d null) {","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":"            return false;","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"        try {","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"            int d \u003d Integer.parseInt(userInput);","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"            return false;","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"        return true;","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"        //Statement to show the user upon exit","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"El0hime"},"content":"        String byeStatement \u003d \"    ____________________________________________________________\\n\" +","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"El0hime"},"content":"            \"     Bye. Hope to see you again soon!\\n\" +","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"El0hime"},"content":"            \"    ____________________________________________________________\";","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"El0hime"},"content":"        //Statement to show the user upon running Duke","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"El0hime"},"content":"        String greetingStatement \u003d \"    ____________________________________________________________\\n\" +","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"El0hime"},"content":"            \"     Hello! I\u0027m Duke\\n\" +","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"El0hime"},"content":"            \"     What can I do for you?\\n\" +","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"El0hime"},"content":"            \"    ____________________________________________________________\";","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"El0hime"},"content":"        //ArrayList to store whatever text entered by the user","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"El0hime"},"content":"        UserDataManager userFile \u003d new UserDataManager();","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"El0hime"},"content":"        ArrayList\u003cTask\u003e userList \u003d userFile.getUserDataFromFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"El0hime"},"content":"        Scanner userInput \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"El0hime"},"content":"        System.out.println(greetingStatement);","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"El0hime"},"content":"        while (true) {","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"El0hime"},"content":"            String description \u003d userInput.nextLine();","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"El0hime"},"content":"            String[] descriptionArray \u003d description.split(\" \");","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"El0hime"},"content":"            String keyword \u003d descriptionArray[0];","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"El0hime"},"content":"            try {","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"El0hime"},"content":"                //Added a check to ensure only valid inputs are recorded","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"El0hime"},"content":"                if (description.equals(\"\")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"El0hime"},"content":"                    throw new DukeException(\"Please insert a valid input!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"El0hime"},"content":"                }","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"El0hime"},"content":"                //Stop duke if user types \"bye\"","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"El0hime"},"content":"                else if (keyword.equals(\"bye\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"El0hime"},"content":"                    //Checks if description is left empty","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"El0hime"},"content":"                    if (descriptionArray.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"El0hime"},"content":"                        break;","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"El0hime"},"content":"                    } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"El0hime"},"content":"                        throw new DukeException(\"The description of a bye MUST be empty.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"El0hime"},"content":"                    }","lastModifiedDate":"2021-08-17"},{"lineNumber":55,"author":{"gitId":"El0hime"},"content":"                }","lastModifiedDate":"2021-08-15"},{"lineNumber":56,"author":{"gitId":"El0hime"},"content":"                //prints out all the stored tasks if user types \"list\"","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"El0hime"},"content":"                else if (keyword.equals(\"list\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"El0hime"},"content":"                    //Checks if description is left empty","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"El0hime"},"content":"                    if (descriptionArray.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":60,"author":{"gitId":"El0hime"},"content":"                        if (userList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"El0hime"},"content":"                            System.out.println(\"    ____________________________________________________________\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":62,"author":{"gitId":"El0hime"},"content":"                                \"    Oops, you have no tasks currently.\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":63,"author":{"gitId":"El0hime"},"content":"                                \"    ____________________________________________________________\");","lastModifiedDate":"2021-08-17"},{"lineNumber":64,"author":{"gitId":"El0hime"},"content":"                        } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":65,"author":{"gitId":"El0hime"},"content":"                            System.out.println(\"    ____________________________________________________________\\n    \" + \"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-16"},{"lineNumber":66,"author":{"gitId":"El0hime"},"content":"                            for (int i \u003d 0; i \u003c userList.size(); i++) {","lastModifiedDate":"2021-08-17"},{"lineNumber":67,"author":{"gitId":"El0hime"},"content":"                                System.out.println(\"    \" + (i + 1) + \". \" + userList.get(i).toString());","lastModifiedDate":"2021-08-17"},{"lineNumber":68,"author":{"gitId":"El0hime"},"content":"                            }","lastModifiedDate":"2021-08-16"},{"lineNumber":69,"author":{"gitId":"El0hime"},"content":"                            System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-08-16"},{"lineNumber":70,"author":{"gitId":"El0hime"},"content":"                        }","lastModifiedDate":"2021-08-16"},{"lineNumber":71,"author":{"gitId":"El0hime"},"content":"                    } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":72,"author":{"gitId":"El0hime"},"content":"                        throw new DukeException(\"The description of a list MUST be empty.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":73,"author":{"gitId":"El0hime"},"content":"                    }","lastModifiedDate":"2021-08-17"},{"lineNumber":74,"author":{"gitId":"El0hime"},"content":"                }","lastModifiedDate":"2021-08-17"},{"lineNumber":75,"author":{"gitId":"El0hime"},"content":"                //checks if keyword is todo and there is a description of the todo","lastModifiedDate":"2021-08-17"},{"lineNumber":76,"author":{"gitId":"El0hime"},"content":"                else if (keyword.equals(\"todo\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":77,"author":{"gitId":"El0hime"},"content":"                    //checks if description is empty","lastModifiedDate":"2021-08-17"},{"lineNumber":78,"author":{"gitId":"El0hime"},"content":"                    if (descriptionArray.length \u003e 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":79,"author":{"gitId":"El0hime"},"content":"                        ToDo newToDo \u003d new ToDo(description.replace(keyword, \"\").replaceFirst(\" \", \"\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"El0hime"},"content":"                        userList.add(newToDo);","lastModifiedDate":"2021-08-17"},{"lineNumber":81,"author":{"gitId":"El0hime"},"content":"                        System.out.println(\"    ____________________________________________________________\\n    \" +","lastModifiedDate":"2021-08-17"},{"lineNumber":82,"author":{"gitId":"El0hime"},"content":"                            \"Got it. I\u0027ve added this task:\\n    \" + newToDo.toString() + \"\\n    \" + \"Now you have \" + userList.size() + \" tasks in the list.\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":83,"author":{"gitId":"El0hime"},"content":"                            \"    ____________________________________________________________\");","lastModifiedDate":"2021-08-17"},{"lineNumber":84,"author":{"gitId":"El0hime"},"content":"                        userFile.updateFile(userList);","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"El0hime"},"content":"                    } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":86,"author":{"gitId":"El0hime"},"content":"                        throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":87,"author":{"gitId":"El0hime"},"content":"                    }","lastModifiedDate":"2021-08-17"},{"lineNumber":88,"author":{"gitId":"El0hime"},"content":"                }","lastModifiedDate":"2021-08-17"},{"lineNumber":89,"author":{"gitId":"El0hime"},"content":"                //checks if keyword is deadline and there is a description of the deadline","lastModifiedDate":"2021-08-17"},{"lineNumber":90,"author":{"gitId":"El0hime"},"content":"                else if (keyword.equals(\"deadline\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":91,"author":{"gitId":"El0hime"},"content":"                    //checks if description is empty","lastModifiedDate":"2021-08-17"},{"lineNumber":92,"author":{"gitId":"El0hime"},"content":"                    if (descriptionArray.length \u003d\u003d 1 || description.endsWith(\"/by\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":93,"author":{"gitId":"El0hime"},"content":"                        throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":94,"author":{"gitId":"El0hime"},"content":"                    } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":95,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":96,"author":{"gitId":"El0hime"},"content":"                        //checks if there is a \"/by\" to separate the description","lastModifiedDate":"2021-08-17"},{"lineNumber":97,"author":{"gitId":"El0hime"},"content":"                        if (description.contains(\"/by\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":98,"author":{"gitId":"El0hime"},"content":"                            //Removes the \"deadline\" string and splits the description using \"/by\"","lastModifiedDate":"2021-08-17"},{"lineNumber":99,"author":{"gitId":"El0hime"},"content":"                            String[] updatedDeadline \u003d description.replace(keyword, \"\").split(\" /by\");","lastModifiedDate":"2021-08-17"},{"lineNumber":100,"author":{"gitId":"El0hime"},"content":"                            //Returns error if user enters more than one \"/by\"","lastModifiedDate":"2021-08-17"},{"lineNumber":101,"author":{"gitId":"El0hime"},"content":"                            if (updatedDeadline.length \u003e 2) {","lastModifiedDate":"2021-08-17"},{"lineNumber":102,"author":{"gitId":"El0hime"},"content":"                                throw new DukeException(\"I\u0027m sorry, please only have ONE \u0027/by\u0027 in your description!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":103,"author":{"gitId":"El0hime"},"content":"                            } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":104,"author":{"gitId":"El0hime"},"content":"                                String deadlineDescription \u003d updatedDeadline[0].replaceFirst(\" \", \"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"El0hime"},"content":"                                String deadlineBy \u003d updatedDeadline[1].replaceFirst(\" \", \"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"El0hime"},"content":"                                try {","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"El0hime"},"content":"                                    LocalDate.parse(deadlineBy);","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"El0hime"},"content":"                                } catch (DateTimeParseException e){","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"El0hime"},"content":"                                    throw new DukeException(\"Please enter a valid date!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"El0hime"},"content":"                                }","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"El0hime"},"content":"                                Deadline newDeadline \u003d new Deadline(deadlineDescription, LocalDate.parse(deadlineBy));","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"El0hime"},"content":"                                userList.add(newDeadline);","lastModifiedDate":"2021-08-17"},{"lineNumber":113,"author":{"gitId":"El0hime"},"content":"                                System.out.println(\"    ____________________________________________________________\\n    \" +","lastModifiedDate":"2021-08-17"},{"lineNumber":114,"author":{"gitId":"El0hime"},"content":"                                    \"Got it. I\u0027ve added this task:\\n    \" + newDeadline.toString() + \"\\n    \" + \"Now you have \" + userList.size() + \" tasks in the list.\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":115,"author":{"gitId":"El0hime"},"content":"                                    \"    ____________________________________________________________\");","lastModifiedDate":"2021-08-17"},{"lineNumber":116,"author":{"gitId":"El0hime"},"content":"                                userFile.updateFile(userList);","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"El0hime"},"content":"                            }","lastModifiedDate":"2021-08-17"},{"lineNumber":118,"author":{"gitId":"El0hime"},"content":"                        } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":119,"author":{"gitId":"El0hime"},"content":"                            throw new DukeException(\"I\u0027m sorry, please add a \u0027/by\u0027 in your description!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":120,"author":{"gitId":"El0hime"},"content":"                        }","lastModifiedDate":"2021-08-17"},{"lineNumber":121,"author":{"gitId":"El0hime"},"content":"                    }","lastModifiedDate":"2021-08-17"},{"lineNumber":122,"author":{"gitId":"El0hime"},"content":"                }","lastModifiedDate":"2021-08-17"},{"lineNumber":123,"author":{"gitId":"El0hime"},"content":"                //checks if keyword is event and there is a description of the event","lastModifiedDate":"2021-08-17"},{"lineNumber":124,"author":{"gitId":"El0hime"},"content":"                else if (keyword.equals(\"event\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":125,"author":{"gitId":"El0hime"},"content":"                    //checks if description is empty","lastModifiedDate":"2021-08-17"},{"lineNumber":126,"author":{"gitId":"El0hime"},"content":"                    if (descriptionArray.length \u003d\u003d 1 || description.endsWith(\"/at\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":127,"author":{"gitId":"El0hime"},"content":"                        throw new DukeException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":128,"author":{"gitId":"El0hime"},"content":"                    } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":129,"author":{"gitId":"El0hime"},"content":"                        //checks if there is an \"/at\" to separate the description","lastModifiedDate":"2021-08-17"},{"lineNumber":130,"author":{"gitId":"El0hime"},"content":"                        if (description.contains(\"/at\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":131,"author":{"gitId":"El0hime"},"content":"                            //Removes the \"event\" string and splits the description using \"/at\"","lastModifiedDate":"2021-08-17"},{"lineNumber":132,"author":{"gitId":"El0hime"},"content":"                            String[] updatedEvent \u003d description.replace(keyword, \"\").split(\" /at\");","lastModifiedDate":"2021-08-17"},{"lineNumber":133,"author":{"gitId":"El0hime"},"content":"                            //Returns error if user enters more than one \"/at\"","lastModifiedDate":"2021-08-17"},{"lineNumber":134,"author":{"gitId":"El0hime"},"content":"                            if (updatedEvent.length \u003e 2) {","lastModifiedDate":"2021-08-17"},{"lineNumber":135,"author":{"gitId":"El0hime"},"content":"                                throw new DukeException(\"I\u0027m sorry, please only have ONE \u0027/at\u0027 in your description!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":136,"author":{"gitId":"El0hime"},"content":"                            } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":137,"author":{"gitId":"El0hime"},"content":"                                String eventDescription \u003d updatedEvent[0].replaceFirst(\" \", \"\");;","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"El0hime"},"content":"                                String eventBy \u003d updatedEvent[1];","lastModifiedDate":"2021-08-17"},{"lineNumber":139,"author":{"gitId":"El0hime"},"content":"                                Event newEvent \u003d new Event(eventDescription, eventBy);","lastModifiedDate":"2021-08-17"},{"lineNumber":140,"author":{"gitId":"El0hime"},"content":"                                userList.add(newEvent);","lastModifiedDate":"2021-08-17"},{"lineNumber":141,"author":{"gitId":"El0hime"},"content":"                                System.out.println(\"    ____________________________________________________________\\n    \" +","lastModifiedDate":"2021-08-17"},{"lineNumber":142,"author":{"gitId":"El0hime"},"content":"                                    \"Got it. I\u0027ve added this task:\\n    \" + newEvent.toString() + \"\\n    \" + \"Now you have \" + userList.size() + \" tasks in the list.\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":143,"author":{"gitId":"El0hime"},"content":"                                    \"    ____________________________________________________________\");","lastModifiedDate":"2021-08-17"},{"lineNumber":144,"author":{"gitId":"El0hime"},"content":"                                userFile.updateFile(userList);","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"El0hime"},"content":"                            }","lastModifiedDate":"2021-08-17"},{"lineNumber":146,"author":{"gitId":"El0hime"},"content":"                        } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":147,"author":{"gitId":"El0hime"},"content":"                            throw new DukeException(\"I\u0027m sorry, please add an \u0027/at\u0027 in your description!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":148,"author":{"gitId":"El0hime"},"content":"                        }","lastModifiedDate":"2021-08-17"},{"lineNumber":149,"author":{"gitId":"El0hime"},"content":"                    }","lastModifiedDate":"2021-08-17"},{"lineNumber":150,"author":{"gitId":"El0hime"},"content":"                }","lastModifiedDate":"2021-08-17"},{"lineNumber":151,"author":{"gitId":"El0hime"},"content":"                //marks task as done if user types \"done\" and a number","lastModifiedDate":"2021-08-16"},{"lineNumber":152,"author":{"gitId":"El0hime"},"content":"                else if (keyword.equals(\"done\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":153,"author":{"gitId":"El0hime"},"content":"                    //checks if there is a 2nd input(completed task number)","lastModifiedDate":"2021-08-17"},{"lineNumber":154,"author":{"gitId":"El0hime"},"content":"                    if (descriptionArray.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-17"},{"lineNumber":155,"author":{"gitId":"El0hime"},"content":"                        //check if 2nd input is an integer","lastModifiedDate":"2021-08-16"},{"lineNumber":156,"author":{"gitId":"El0hime"},"content":"                        if (isInteger(descriptionArray[1])) {","lastModifiedDate":"2021-08-16"},{"lineNumber":157,"author":{"gitId":"El0hime"},"content":"                            int taskNumber \u003d Integer.parseInt(descriptionArray[1]);","lastModifiedDate":"2021-08-16"},{"lineNumber":158,"author":{"gitId":"El0hime"},"content":"                            //Checks for a valid task number","lastModifiedDate":"2021-08-16"},{"lineNumber":159,"author":{"gitId":"El0hime"},"content":"                            if (taskNumber \u003e userList.size() || taskNumber \u003c\u003d 0) {","lastModifiedDate":"2021-08-17"},{"lineNumber":160,"author":{"gitId":"El0hime"},"content":"                                throw new DukeException(\"Please insert a valid Task Number!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":161,"author":{"gitId":"El0hime"},"content":"                            }","lastModifiedDate":"2021-08-16"},{"lineNumber":162,"author":{"gitId":"El0hime"},"content":"                            //If task number is valid mark task as done","lastModifiedDate":"2021-08-16"},{"lineNumber":163,"author":{"gitId":"El0hime"},"content":"                            else {","lastModifiedDate":"2021-08-16"},{"lineNumber":164,"author":{"gitId":"El0hime"},"content":"                                userList.get(taskNumber - 1).markAsDone();","lastModifiedDate":"2021-08-17"},{"lineNumber":165,"author":{"gitId":"El0hime"},"content":"                                System.out.println(\"    ____________________________________________________________\\n    \" + \"Nice! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":166,"author":{"gitId":"El0hime"},"content":"                                \"    \" + userList.get(taskNumber - 1).toString() +","lastModifiedDate":"2021-08-17"},{"lineNumber":167,"author":{"gitId":"El0hime"},"content":"                                \"\\n    ____________________________________________________________\");","lastModifiedDate":"2021-08-17"},{"lineNumber":168,"author":{"gitId":"El0hime"},"content":"                                userFile.updateFile(userList);","lastModifiedDate":"2021-08-24"},{"lineNumber":169,"author":{"gitId":"El0hime"},"content":"                            }","lastModifiedDate":"2021-08-16"},{"lineNumber":170,"author":{"gitId":"El0hime"},"content":"                        }","lastModifiedDate":"2021-08-16"},{"lineNumber":171,"author":{"gitId":"El0hime"},"content":"                        //else throw DukeException for invalid scenarios ie \"done two\" instead of \"done 2\"","lastModifiedDate":"2021-08-17"},{"lineNumber":172,"author":{"gitId":"El0hime"},"content":"                        else {","lastModifiedDate":"2021-08-16"},{"lineNumber":173,"author":{"gitId":"El0hime"},"content":"                            throw new DukeException(\"I\u0027m sorry, please input a number instead!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":174,"author":{"gitId":"El0hime"},"content":"                        }","lastModifiedDate":"2021-08-16"},{"lineNumber":175,"author":{"gitId":"El0hime"},"content":"                    } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":176,"author":{"gitId":"El0hime"},"content":"                        throw new DukeException(\"I\u0027m sorry, please input the number of the completed task\");","lastModifiedDate":"2021-08-17"},{"lineNumber":177,"author":{"gitId":"El0hime"},"content":"                    }","lastModifiedDate":"2021-08-17"},{"lineNumber":178,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":179,"author":{"gitId":"El0hime"},"content":"                }","lastModifiedDate":"2021-08-17"},{"lineNumber":180,"author":{"gitId":"El0hime"},"content":"                //deletes task if user types \"delete\" and a number","lastModifiedDate":"2021-08-17"},{"lineNumber":181,"author":{"gitId":"El0hime"},"content":"                else if (keyword.equals(\"delete\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":182,"author":{"gitId":"El0hime"},"content":"                    //checks if there is a 2nd input(task number to be deleted)","lastModifiedDate":"2021-08-17"},{"lineNumber":183,"author":{"gitId":"El0hime"},"content":"                    if (descriptionArray.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-17"},{"lineNumber":184,"author":{"gitId":"El0hime"},"content":"                        //check if 2nd input is an integer","lastModifiedDate":"2021-08-17"},{"lineNumber":185,"author":{"gitId":"El0hime"},"content":"                        if (isInteger(descriptionArray[1])) {","lastModifiedDate":"2021-08-17"},{"lineNumber":186,"author":{"gitId":"El0hime"},"content":"                            int taskNumber \u003d Integer.parseInt(descriptionArray[1]);","lastModifiedDate":"2021-08-17"},{"lineNumber":187,"author":{"gitId":"El0hime"},"content":"                            //Checks for a valid task number","lastModifiedDate":"2021-08-17"},{"lineNumber":188,"author":{"gitId":"El0hime"},"content":"                            if (taskNumber \u003e userList.size() || taskNumber \u003c\u003d 0) {","lastModifiedDate":"2021-08-17"},{"lineNumber":189,"author":{"gitId":"El0hime"},"content":"                                throw new DukeException(\"Please insert a valid Task Number!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":190,"author":{"gitId":"El0hime"},"content":"                            }","lastModifiedDate":"2021-08-17"},{"lineNumber":191,"author":{"gitId":"El0hime"},"content":"                            //If task number is valid, delete task","lastModifiedDate":"2021-08-17"},{"lineNumber":192,"author":{"gitId":"El0hime"},"content":"                            else {","lastModifiedDate":"2021-08-17"},{"lineNumber":193,"author":{"gitId":"El0hime"},"content":"                                System.out.println(\"    ____________________________________________________________\\n    \" + \"Noted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":194,"author":{"gitId":"El0hime"},"content":"                                    \"    \" + userList.get(taskNumber - 1).toString() +","lastModifiedDate":"2021-08-17"},{"lineNumber":195,"author":{"gitId":"El0hime"},"content":"                                    \"\\n    ____________________________________________________________\");","lastModifiedDate":"2021-08-17"},{"lineNumber":196,"author":{"gitId":"El0hime"},"content":"                                userList.remove(taskNumber - 1);","lastModifiedDate":"2021-08-17"},{"lineNumber":197,"author":{"gitId":"El0hime"},"content":"                                userFile.updateFile(userList);","lastModifiedDate":"2021-08-24"},{"lineNumber":198,"author":{"gitId":"El0hime"},"content":"                            }","lastModifiedDate":"2021-08-17"},{"lineNumber":199,"author":{"gitId":"El0hime"},"content":"                        }","lastModifiedDate":"2021-08-17"},{"lineNumber":200,"author":{"gitId":"El0hime"},"content":"                        //else throw DukeException for invalid scenarios ie \"delete two\" instead of \"delete 2\"","lastModifiedDate":"2021-08-17"},{"lineNumber":201,"author":{"gitId":"El0hime"},"content":"                        else {","lastModifiedDate":"2021-08-17"},{"lineNumber":202,"author":{"gitId":"El0hime"},"content":"                            throw new DukeException(\"I\u0027m sorry, please input a number instead!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":203,"author":{"gitId":"El0hime"},"content":"                        }","lastModifiedDate":"2021-08-17"},{"lineNumber":204,"author":{"gitId":"El0hime"},"content":"                    } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":205,"author":{"gitId":"El0hime"},"content":"                        throw new DukeException(\"I\u0027m sorry, please input the number of the task you wish to delete.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":206,"author":{"gitId":"El0hime"},"content":"                    }","lastModifiedDate":"2021-08-17"},{"lineNumber":207,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":208,"author":{"gitId":"El0hime"},"content":"                }","lastModifiedDate":"2021-08-16"},{"lineNumber":209,"author":{"gitId":"El0hime"},"content":"                //else throw DukeException for invalid keyword","lastModifiedDate":"2021-08-17"},{"lineNumber":210,"author":{"gitId":"El0hime"},"content":"                else {","lastModifiedDate":"2021-08-16"},{"lineNumber":211,"author":{"gitId":"El0hime"},"content":"                    throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-17"},{"lineNumber":212,"author":{"gitId":"El0hime"},"content":"                }","lastModifiedDate":"2021-08-17"},{"lineNumber":213,"author":{"gitId":"El0hime"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":214,"author":{"gitId":"El0hime"},"content":"                System.out.println(\"    ____________________________________________________________\\n\" +","lastModifiedDate":"2021-08-15"},{"lineNumber":215,"author":{"gitId":"El0hime"},"content":"                    \"     ☹ OOPS!!! \" + e.getMessage() + \"\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":216,"author":{"gitId":"El0hime"},"content":"                    \"    ____________________________________________________________\");","lastModifiedDate":"2021-08-15"},{"lineNumber":217,"author":{"gitId":"El0hime"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":218,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":219,"author":{"gitId":"El0hime"},"content":"        System.out.println(byeStatement);","lastModifiedDate":"2021-08-15"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"El0hime":217,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"public class DukeException extends RuntimeException{","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"        super(message);","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"El0hime":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"    protected String at;","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"    public String toData() {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"        return \"E \" + super.toData() + \" \" + this.at + \"\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"El0hime":19}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"public class Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"    protected String description;","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"    public String toData() {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":"        return (isDone ? \"1 \" : \"0 \") + this.description;","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"El0hime"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"El0hime"},"content":"        System.out.println(this.description);","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"El0hime"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"El0hime"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"El0hime":26}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":"    public String toData() {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":"        return \"T \" + super.toData() + \"\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"El0hime":16}},{"path":"src/main/java/UserDataManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":" * Class that loads and saves a user\u0027s file.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"public class UserDataManager {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"    /** File containing the user\u0027s saved tasks */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"    private File userData;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"    public UserDataManager() {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"            userData \u003d new File(\"./src/main/data/USERDATA.TXT\");","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"            userData.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"El0hime"},"content":"            System.out.println(\"File not created\");","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"El0hime"},"content":"     * Returns an ArrayList containing the user\u0027s saved tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"El0hime"},"content":"     * If user has no saved tasks, returns empty ArrayList.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"El0hime"},"content":"     * @return an ArrayList of tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"El0hime"},"content":"     * @throws DukeException If file is not found","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"El0hime"},"content":"    public ArrayList getUserDataFromFile() throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"El0hime"},"content":"        ArrayList\u003cTask\u003e userDataList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"El0hime"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"El0hime"},"content":"            Scanner sc \u003d new Scanner(userData);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"El0hime"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"El0hime"},"content":"                String[] newTaskArray \u003d sc.nextLine().split(\" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"El0hime"},"content":"                String taskType \u003d newTaskArray[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"El0hime"},"content":"                boolean isDone \u003d newTaskArray[1].equals(\"1\");","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"El0hime"},"content":"                Task newTask \u003d taskType.equals(\"D\") ? new Deadline(newTaskArray[2], newTaskArray[3])","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"El0hime"},"content":"                        : taskType.equals(\"E\") ? new Event(newTaskArray[2], newTaskArray[3])","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"El0hime"},"content":"                        : new ToDo(newTaskArray[2]);","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"El0hime"},"content":"                if (isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"El0hime"},"content":"                    newTask.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"El0hime"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"El0hime"},"content":"                userDataList.add(newTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"El0hime"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"El0hime"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"El0hime"},"content":"            throw new DukeException(\"Save file is not found\");","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"El0hime"},"content":"        return userDataList;","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"El0hime"},"content":"     * Updates the USERDATA.TXT to reflect changes that the user made.","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"El0hime"},"content":"     * @param listOfUserTasks Updated ArrayList","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"El0hime"},"content":"    public void updateFile(ArrayList\u003cTask\u003e listOfUserTasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"El0hime"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"El0hime"},"content":"            FileWriter newFile \u003d new FileWriter(\"./src/main/data/USERDATA.TXT\");","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"El0hime"},"content":"            for (int i \u003d 0; i \u003c listOfUserTasks.size(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"El0hime"},"content":"                newFile.write(listOfUserTasks.get(i).toData());","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"El0hime"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"El0hime"},"content":"            newFile.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"El0hime"},"content":"            if (listOfUserTasks.size() \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"El0hime"},"content":"                System.out.println(\"Your task has been updated\");","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"El0hime"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"El0hime"},"content":"                System.out.println(\"Your tasks has been updated\");","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"El0hime"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"El0hime"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"El0hime"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"El0hime"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"El0hime":74}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"todo read books","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"todo sleep","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"todo","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":"list 2 ","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":"done","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"produce ERROR","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"deadline run it down /by Thursday","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":"event birthday party /at IDK where","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":"event WRONG ADDED","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"event","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"deadline fake","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"deadline","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"event birthday party /at IDK /at where","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"deadline run it down /by Thursday /by","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"done 3","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":"delete 3","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"El0hime"},"content":"done 4","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"El0hime"},"content":"delete 5","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"El0hime"},"content":"delete","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"El0hime"},"content":"bye","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"El0hime":24}}]
