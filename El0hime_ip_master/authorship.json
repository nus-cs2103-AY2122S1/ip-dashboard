[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":"//    id \u0027checkstyle\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"El0hime"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"El0hime"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"El0hime"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"El0hime"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"El0hime"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"El0hime"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"El0hime"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"El0hime"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"El0hime"},"content":"    mainClassName \u003d \"duke.gui.Launcher\"","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"El0hime"},"content":"//checkstyle {","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"El0hime"},"content":"//    toolVersion \u003d \u00278.45\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"El0hime"},"content":"//}","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"El0hime":19,"-":41}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"# Cynthius User Guide","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"This is a greenfield Java project based on the generic project called","lastModifiedDate":"2021-09-14"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"[***Project Duke***](https://nus-cs2103-ay2021s1.github.io/website/se-book-adapted/projectDuke/index.html).","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":"The result of this project is a personal assistant chat-bot named *Cynthius*","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"capable of keeping track of tasks and contacts given by the user.","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":"- [x]  Managing tasks(todo, deadline, event)","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"- [x]  Autosave","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"- [x]  Manage contacts","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"## Usage","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"\u003chr\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"### Help: `help`","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"Displays a guide of all commands.","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":"\u003chr\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"### Adding a todo: `todo`","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"El0hime"},"content":"Adds a todo task to the task list.","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"El0hime"},"content":"Format: `todo TASK`","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"El0hime"},"content":"Example: `todo homework`","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"El0hime"},"content":"Expected outcome: ","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"El0hime"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"El0hime"},"content":"Information added successfully!","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"El0hime"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"El0hime"},"content":"\u003chr\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"El0hime"},"content":"### Adding an event: `event`","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"El0hime"},"content":"Adds an event task to the task list.","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"El0hime"},"content":"Format: `event TASK /at TASK_LOCATION`","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"El0hime"},"content":"Example: `event birthday party /at Calvin\u0027s house`","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"El0hime"},"content":"Expected outcome: ","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"El0hime"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"El0hime"},"content":"Information added successfully!","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"El0hime"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"El0hime"},"content":"\u003chr\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":47,"author":{"gitId":"El0hime"},"content":"### Adding a deadline: `deadline`","lastModifiedDate":"2021-09-14"},{"lineNumber":48,"author":{"gitId":"El0hime"},"content":"Adds a deadline task to the task list.","lastModifiedDate":"2021-09-14"},{"lineNumber":49,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":50,"author":{"gitId":"El0hime"},"content":"Format: `deadline TASK /by TASK_DATE_TIME`","lastModifiedDate":"2021-09-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":52,"author":{"gitId":"El0hime"},"content":"Example: `deadline ES2660 draft /by tonight`","lastModifiedDate":"2021-09-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"El0hime"},"content":"Expected outcome: ","lastModifiedDate":"2021-09-14"},{"lineNumber":55,"author":{"gitId":"El0hime"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"El0hime"},"content":"Information added successfully!","lastModifiedDate":"2021-09-14"},{"lineNumber":57,"author":{"gitId":"El0hime"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":58,"author":{"gitId":"El0hime"},"content":"\u003chr\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":60,"author":{"gitId":"El0hime"},"content":"### Adding a contact: `contact`","lastModifiedDate":"2021-09-14"},{"lineNumber":61,"author":{"gitId":"El0hime"},"content":"Adds a contact to the contact list.","lastModifiedDate":"2021-09-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":63,"author":{"gitId":"El0hime"},"content":"Format: `contact NAME (/about NAME_DESCRIPTION)`","lastModifiedDate":"2021-09-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":65,"author":{"gitId":"El0hime"},"content":"Do note that `(/about NAME_DESCRIPTION)` is optional","lastModifiedDate":"2021-09-14"},{"lineNumber":66,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":67,"author":{"gitId":"El0hime"},"content":"Example: `contact Calvin /about orbital partner`","lastModifiedDate":"2021-09-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"Expected outcome: ","lastModifiedDate":"2019-07-29"},{"lineNumber":70,"author":{"gitId":"El0hime"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":71,"author":{"gitId":"El0hime"},"content":"Information added successfully!","lastModifiedDate":"2021-09-14"},{"lineNumber":72,"author":{"gitId":"El0hime"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":73,"author":{"gitId":"El0hime"},"content":"\u003chr\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":74,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":75,"author":{"gitId":"El0hime"},"content":"### Deleting a task/contact: `delete`","lastModifiedDate":"2021-09-14"},{"lineNumber":76,"author":{"gitId":"El0hime"},"content":"Removes a task/contact from the list.","lastModifiedDate":"2021-09-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":78,"author":{"gitId":"El0hime"},"content":"Format: `delete CONTACT/TASK INDEX`","lastModifiedDate":"2021-09-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":80,"author":{"gitId":"El0hime"},"content":"For `CONTACT/TASK`, `c` represents deleting from the contact list ","lastModifiedDate":"2021-09-14"},{"lineNumber":81,"author":{"gitId":"El0hime"},"content":"while `t` represents deleting from the task list","lastModifiedDate":"2021-09-14"},{"lineNumber":82,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":83,"author":{"gitId":"El0hime"},"content":"Example 1: `delete c 1` (delete first contact)","lastModifiedDate":"2021-09-14"},{"lineNumber":84,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":85,"author":{"gitId":"El0hime"},"content":"Example 2: `delete t 3` (delete third task)","lastModifiedDate":"2021-09-14"},{"lineNumber":86,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":87,"author":{"gitId":"El0hime"},"content":"Expected outcome: ","lastModifiedDate":"2021-09-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":89,"author":{"gitId":"El0hime"},"content":"Information deleted successfully!","lastModifiedDate":"2021-09-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":91,"author":{"gitId":"El0hime"},"content":"\u003chr\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":92,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":93,"author":{"gitId":"El0hime"},"content":"### Mark task as done: `done`","lastModifiedDate":"2021-09-14"},{"lineNumber":94,"author":{"gitId":"El0hime"},"content":"Marks a task in task list as done.","lastModifiedDate":"2021-09-14"},{"lineNumber":95,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":96,"author":{"gitId":"El0hime"},"content":"Format: `done INDEX`","lastModifiedDate":"2021-09-14"},{"lineNumber":97,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":98,"author":{"gitId":"El0hime"},"content":"Example: `done 2` (marks second task in task list as done)","lastModifiedDate":"2021-09-14"},{"lineNumber":99,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":100,"author":{"gitId":"El0hime"},"content":"Expected outcome: ","lastModifiedDate":"2021-09-14"},{"lineNumber":101,"author":{"gitId":"El0hime"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":102,"author":{"gitId":"El0hime"},"content":"Task marked as done!","lastModifiedDate":"2021-09-14"},{"lineNumber":103,"author":{"gitId":"El0hime"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":104,"author":{"gitId":"El0hime"},"content":"\u003chr\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":105,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":106,"author":{"gitId":"El0hime"},"content":"### Finding task(s): `find`","lastModifiedDate":"2021-09-14"},{"lineNumber":107,"author":{"gitId":"El0hime"},"content":"Searches for task(s) and contact(s) that contain the keyword(s)","lastModifiedDate":"2021-09-14"},{"lineNumber":108,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":109,"author":{"gitId":"El0hime"},"content":"Format: `find KEYWORD(S)`","lastModifiedDate":"2021-09-14"},{"lineNumber":110,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":111,"author":{"gitId":"El0hime"},"content":"Example: `find k3soju`","lastModifiedDate":"2021-09-14"},{"lineNumber":112,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":113,"author":{"gitId":"El0hime"},"content":"Expected outcome (if tasks/contacts were found):","lastModifiedDate":"2021-09-14"},{"lineNumber":114,"author":{"gitId":"El0hime"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":115,"author":{"gitId":"El0hime"},"content":"Here are your tasks:","lastModifiedDate":"2021-09-14"},{"lineNumber":116,"author":{"gitId":"El0hime"},"content":"[T][ ] twitch sub to k3soju","lastModifiedDate":"2021-09-14"},{"lineNumber":117,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":118,"author":{"gitId":"El0hime"},"content":"Here are your contacts:","lastModifiedDate":"2021-09-14"},{"lineNumber":119,"author":{"gitId":"El0hime"},"content":"[C] k3soju (detail: twitch sub)","lastModifiedDate":"2021-09-14"},{"lineNumber":120,"author":{"gitId":"El0hime"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":121,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":122,"author":{"gitId":"El0hime"},"content":"Expected outcome (if NO tasks/contacts were found):","lastModifiedDate":"2021-09-14"},{"lineNumber":123,"author":{"gitId":"El0hime"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":124,"author":{"gitId":"El0hime"},"content":"No tasks found!","lastModifiedDate":"2021-09-14"},{"lineNumber":125,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":126,"author":{"gitId":"El0hime"},"content":"No contacts found!","lastModifiedDate":"2021-09-14"},{"lineNumber":127,"author":{"gitId":"El0hime"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":128,"author":{"gitId":"El0hime"},"content":"\u003chr\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":129,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":130,"author":{"gitId":"El0hime"},"content":"### List tasks/contacts: `list`","lastModifiedDate":"2021-09-14"},{"lineNumber":131,"author":{"gitId":"El0hime"},"content":"Lists all tasks/contacts currently saved.","lastModifiedDate":"2021-09-14"},{"lineNumber":132,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":133,"author":{"gitId":"El0hime"},"content":"Format: `list`","lastModifiedDate":"2021-09-14"},{"lineNumber":134,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":135,"author":{"gitId":"El0hime"},"content":"Example: `list`","lastModifiedDate":"2021-09-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2021-09-14"},{"lineNumber":138,"author":{"gitId":"El0hime"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":139,"author":{"gitId":"El0hime"},"content":"Here are your tasks:","lastModifiedDate":"2021-09-14"},{"lineNumber":140,"author":{"gitId":"El0hime"},"content":"[T][ ] homework","lastModifiedDate":"2021-09-14"},{"lineNumber":141,"author":{"gitId":"El0hime"},"content":"[D][X] CS2103T review (by: Sep 15 2021)","lastModifiedDate":"2021-09-14"},{"lineNumber":142,"author":{"gitId":"El0hime"},"content":"[E][ ] sleep (at: home)","lastModifiedDate":"2021-09-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":144,"author":{"gitId":"El0hime"},"content":"Here are your contacts:","lastModifiedDate":"2021-09-14"},{"lineNumber":145,"author":{"gitId":"El0hime"},"content":"[C] Calvin (detail: im sponsored by him)","lastModifiedDate":"2021-09-14"},{"lineNumber":146,"author":{"gitId":"El0hime"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":147,"author":{"gitId":"El0hime"},"content":"\u003chr\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":148,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":149,"author":{"gitId":"El0hime"},"content":"### Saving data","lastModifiedDate":"2021-09-14"},{"lineNumber":150,"author":{"gitId":"El0hime"},"content":"__Cynthius__ automatically saves any changes made once a user has inputted a valid command.","lastModifiedDate":"2021-09-14"},{"lineNumber":151,"author":{"gitId":"El0hime"},"content":"\u003chr\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":152,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":153,"author":{"gitId":"El0hime"},"content":"### Exiting Cynthius: `bye`","lastModifiedDate":"2021-09-14"},{"lineNumber":154,"author":{"gitId":"El0hime"},"content":"Closes Cynthius.","lastModifiedDate":"2021-09-14"},{"lineNumber":155,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":156,"author":{"gitId":"El0hime"},"content":"Format: `bye`","lastModifiedDate":"2021-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":158,"author":{"gitId":"El0hime"},"content":"Example: `bye`","lastModifiedDate":"2021-09-14"},{"lineNumber":159,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":160,"author":{"gitId":"El0hime"},"content":"Expected outcome:","lastModifiedDate":"2021-09-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":162,"author":{"gitId":"El0hime"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2021-09-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":164,"author":{"gitId":"El0hime"},"content":"\u003chr\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":165,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"El0hime":138,"-":27}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":"import duke.data.DukeException;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"import duke.data.Parser;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"import duke.data.Storage;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":"import duke.data.InformationList;","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":"import duke.data.Ui;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":" * The Duke iP Program.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"    private InformationList tasks;","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"     * Constructs Duke class.","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"El0hime"},"content":"     * @param filePath path of the file used for loading and saving the user\u0027s tasks.","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"El0hime"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"El0hime"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"El0hime"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"El0hime"},"content":"        try {","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"El0hime"},"content":"            tasks \u003d storage.load();","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"El0hime"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"El0hime"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"El0hime"},"content":"            tasks \u003d new InformationList();","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"El0hime"},"content":"     * Generates the appropriate response based on the input of the user.","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"El0hime"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"El0hime"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"El0hime"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"El0hime"},"content":"            assert ui !\u003d null : \"Ui should have been initialised first!\";","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"El0hime"},"content":"            assert storage !\u003d null : \"Storage should have been initialised first!\";","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"El0hime"},"content":"            return c.execute(tasks, ui, storage);","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"El0hime"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"El0hime"},"content":"            return e.getMessage();","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"El0hime":47,"-":2}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"package duke.command;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"import duke.data.Storage;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":"import duke.data.InformationList;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":"import duke.data.Ui;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"import duke.information.Task;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":" * Command that adds a new Task to InformationList when executed.","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"    /** Task to be added to InformationList. */","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"    private Task task;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"     * Constructs AddCommand class.","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"     * @param task Task to be added to InformationList.","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"El0hime"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"El0hime"},"content":"     * Adds a task to the InformationList.","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"El0hime"},"content":"     * @param tasks The list of tasks that a user has.","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"El0hime"},"content":"     * @param ui The ui that sends a message to the user once the task is added.","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"El0hime"},"content":"     * @param storage Saves the updated TaskList to disk.","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"El0hime"},"content":"     * @return The message produced by ui.","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"El0hime"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"El0hime"},"content":"    public String execute(InformationList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"El0hime"},"content":"        tasks.addTask(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"El0hime"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"El0hime"},"content":"        return ui.showAddedInformation();","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"El0hime"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"El0hime":38}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"package duke.command;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"import duke.data.Storage;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":"import duke.data.InformationList;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":"import duke.data.Ui;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":" * An abstract command that contains an execute and isExit method.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"     * Executes the command and returns a string to be displayed to the user.","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"     * @param tasks The user\u0027s tasks.","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"     * @param ui The ui that generates the string depending on the type of command.","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"     * @param storage The class that reads and writes to the user\u0027s txt file.","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"     * @return A response that is displayed to the user.","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"El0hime"},"content":"    public abstract String execute(InformationList tasks, Ui ui, Storage storage);","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"El0hime":21}},{"path":"src/main/java/duke/command/ContactCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"package duke.command;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"import duke.data.Storage;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":"import duke.data.InformationList;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":"import duke.data.Ui;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"import duke.information.Contact;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":"/**","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":" * Command that adds a new Contact to InformationList when executed.","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":" */","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"public class ContactCommand extends Command {","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"    /** Contact to be added to InformationList. */","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"    private Contact contact;","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"     * Constructs ContactCommand class.","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"     * @param contact Contact to be added to InformationList.","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"El0hime"},"content":"    public ContactCommand(Contact contact) {","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"        this.contact \u003d contact;","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"El0hime"},"content":"     * Adds a contact to the InformationList.","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"El0hime"},"content":"     * @param tasks The list of tasks that a user has.","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"El0hime"},"content":"     * @param ui The ui that sends a message to the user once the contact is added.","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"El0hime"},"content":"     * @param storage Saves the updated TaskList to disk.","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"El0hime"},"content":"     * @return The message produced by ui.","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"El0hime"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"El0hime"},"content":"    public String execute(InformationList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"El0hime"},"content":"        tasks.addContact(contact);","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"El0hime"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"El0hime"},"content":"        return ui.showAddedInformation();","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"El0hime"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"El0hime":38}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"package duke.command;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"import duke.data.DukeException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":"import duke.data.Storage;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":"import duke.data.InformationList;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"import duke.data.Ui;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":" * Command that deletes a Task from InformationList when executed.","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"    /** Index of the task in TaskList. */","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"    private int taskNumber;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"    /** Integer to choose which list to delete from, 0 to delete a task, 1 to delete a contact*/","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"    private int listToDeleteFrom;","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"     * Constructs DeleteCommand class.","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"El0hime"},"content":"     * @param taskNumber Index of task in InformationList that is to be deleted.","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"     * @param listToDeleteFrom Integer to specify which list of InformationList to delete from","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"El0hime"},"content":"    public DeleteCommand(int taskNumber, int listToDeleteFrom) {","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"El0hime"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"El0hime"},"content":"        this.listToDeleteFrom \u003d listToDeleteFrom;","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"El0hime"},"content":"     * Deletes a task from the InformationList.","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"El0hime"},"content":"     * @param tasks The list of tasks that a user has.","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"El0hime"},"content":"     * @param ui The ui that sends a message to the user once the task is deleted.","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"El0hime"},"content":"     * @param storage Saves the updated TaskList to disk.","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"El0hime"},"content":"     * @return The message produced by ui.","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"El0hime"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"El0hime"},"content":"    public String execute(InformationList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"El0hime"},"content":"        if (this.listToDeleteFrom \u003d\u003d 0) {","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"El0hime"},"content":"            if (taskNumber \u003e tasks.getTasksSize() || taskNumber \u003c\u003d 0) {","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"El0hime"},"content":"                throw new DukeException(\"Please insert a valid Task Number!\");","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"El0hime"},"content":"            }","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"El0hime"},"content":"            tasks.deleteTask(taskNumber);","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"El0hime"},"content":"        } else {","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"El0hime"},"content":"            if (taskNumber \u003e tasks.getContactsSize() || taskNumber \u003c\u003d 0) {","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"El0hime"},"content":"                throw new DukeException(\"Please insert a valid Contact Number!\");","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"El0hime"},"content":"            }","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"El0hime"},"content":"            tasks.deleteContact(taskNumber);","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"El0hime"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"El0hime"},"content":"        return ui.showDeletedInformation();","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"El0hime"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"El0hime":52}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"package duke.command;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"import duke.data.DukeException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":"import duke.data.Storage;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":"import duke.data.InformationList;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"import duke.data.Ui;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":" * Command that marks a task as done when executed.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"public class DoneCommand extends Command{","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"    /** Index of the task in TaskList. */","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"    private int taskNumber;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"     * Constructs DoneCommand class.","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"     * @param taskNumber Index of task in InformationList that is to be mark as done.","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"El0hime"},"content":"    public DoneCommand(int taskNumber) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"El0hime"},"content":"     * Marks a task from InformationList as done.","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"El0hime"},"content":"     * @param tasks The list of tasks that a user has.","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"El0hime"},"content":"     * @param ui The ui that sends a message to the user once the task is marked as done.","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"El0hime"},"content":"     * @param storage Saves the updated TaskList to disk.","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"El0hime"},"content":"     * @return The message produced by ui.","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"El0hime"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"El0hime"},"content":"    public String execute(InformationList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"El0hime"},"content":"        if (taskNumber \u003e tasks.getTasksSize() || taskNumber \u003c 0) {","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"El0hime"},"content":"            throw new DukeException(\"Please insert a valid Task Number!\");","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"El0hime"},"content":"        } else if (tasks.getTask(taskNumber).getIsDone()){","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"El0hime"},"content":"            throw new DukeException(\"Task has already been completed!\");","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"El0hime"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"El0hime"},"content":"            tasks.markTaskAsDone(taskNumber);","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"El0hime"},"content":"            storage.save(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"El0hime"},"content":"            return ui.showDoneTask();","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"El0hime"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"El0hime":44}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"package duke.command;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"import duke.data.Storage;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":"import duke.data.InformationList;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":"import duke.data.Ui;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":" * Command that exits Duke when executed.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"     * Saves the current tasks to disk and displays exit message.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"     * @param tasks The list of tasks that a user has.","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"     * @param ui The ui that sends a message to the user once the tasks are saved.","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"     * @param storage Saves the updated TaskList to disk.","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"     * @return The message produced by ui.","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"El0hime"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"    public String execute(InformationList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"El0hime"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"El0hime"},"content":"        return ui.showGoodbye();","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"El0hime"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"El0hime":25}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"package duke.command;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"import duke.data.Storage;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":"import duke.data.InformationList;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":"import duke.data.Ui;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":" * Command that displays a filtered InformationList when executed.","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"    /** Keyword that the InformationList will be filtered by. */","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"    private String keyword;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"     * Constructs FindCommand class.","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"     * @param keyword String that is used to filter through InformationList.","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"El0hime"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"El0hime"},"content":"     * Displays a user\u0027s saved tasks containing the keyword.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"El0hime"},"content":"     * @param tasks The list of tasks that a user has.","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"El0hime"},"content":"     * @param ui The ui that sends a filtered InformationList as a string to the user.","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"El0hime"},"content":"     * @param storage Not used for this command.","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"El0hime"},"content":"     * @return The message produced by ui.","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"El0hime"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"El0hime"},"content":"    public String execute(InformationList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"El0hime"},"content":"        return ui.showTasks(tasks.searchTaskByKeyword(keyword)) + ui.showContacts(tasks.searchContactByKeyword(keyword));","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"El0hime"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"El0hime":35}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"package duke.command;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"import duke.data.Storage;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":"import duke.data.InformationList;","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":"import duke.data.Ui;","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"/**","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":" * Command that displays a brief summary of the features of Cynthius.","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":" */","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"     * Displays a guide on how to use each keyword.","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"     * @param tasks   Not used for this command.","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"     * @param ui      The ui that sends the information as a string to the user.","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"     * @param storage Not used for this command.","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"     * @return The message produced by ui.","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":"    @Override","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"El0hime"},"content":"    public String execute(InformationList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"        return Ui.showHelp();","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"El0hime"},"content":"}","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"El0hime":23}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"package duke.command;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"import duke.data.Storage;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":"import duke.data.InformationList;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":"import duke.data.Ui;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":" * Command that displays a user\u0027s saved tasks and contacts when executed.","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"     * Displays a user\u0027s saved tasks and contacts.","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"     * @param tasks   The list of tasks that a user has.","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"     * @param ui      The ui that sends InformationList as a string to the user.","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"     * @param storage Not used for this command.","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"     * @return The message produced by ui.","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"El0hime"},"content":"    public String execute(InformationList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"        return ui.showTasks(tasks.searchTaskByKeyword(\"\")) + ui.showContacts(tasks.searchContactByKeyword(\"\"));","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"El0hime"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"El0hime":23}},{"path":"src/main/java/duke/data/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"package duke.data;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":" * Class that contains errors that are specific to Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"public class DukeException extends RuntimeException{","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":"        super(\"ERROR: \\n\" + message);","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"El0hime":10}},{"path":"src/main/java/duke/data/InformationList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"package duke.data;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"import duke.information.Contact;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":"import duke.information.Task;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":" * Class that deals with updating the ArrayLists of information.","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"public class InformationList {","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"    /** Arraylist that contains the user\u0027s saved tasks. */","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"    /** Arraylist that contains the user\u0027s saved contacts. */","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"    private ArrayList\u003cContact\u003e contacts;","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"     * Constructs InformationList class.","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":"     * Creates a InformationList with 0 saved tasks and 0 saved contacts.","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"El0hime"},"content":"    public InformationList() {","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"El0hime"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"El0hime"},"content":"        this.contacts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"El0hime"},"content":"     * Adds a new task into the ArrayList.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"El0hime"},"content":"     * @param newTask The task to be added.","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"El0hime"},"content":"    public void addTask(Task newTask) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"El0hime"},"content":"        tasks.add(newTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"El0hime"},"content":"     * Adds a new contact into the ArrayList.","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"El0hime"},"content":"     * @param newContact The task to be added.","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"El0hime"},"content":"    public void addContact(Contact newContact) {","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"El0hime"},"content":"        contacts.add(newContact);","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"El0hime"},"content":"     * Deletes a task from the ArrayList.","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"El0hime"},"content":"     * @param oldTaskIndex The task to be deleted.","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"El0hime"},"content":"    public void deleteTask(int oldTaskIndex) {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"El0hime"},"content":"        tasks.remove(oldTaskIndex);","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"El0hime"},"content":"     * Deletes a new contact into the ArrayList.","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"El0hime"},"content":"     * @param oldContactIndex The contact to be deleted.","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"El0hime"},"content":"    public void deleteContact(int oldContactIndex) {","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"El0hime"},"content":"        contacts.remove(oldContactIndex);","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"El0hime"},"content":"     * Marks a task in the ArrayList as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"El0hime"},"content":"     * @param index Index of the task.","lastModifiedDate":"2021-09-04"},{"lineNumber":67,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"El0hime"},"content":"    public void markTaskAsDone(int index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"El0hime"},"content":"        tasks.get(index).markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"El0hime"},"content":"     * Gets the total size of all ArrayLists in InformationList.","lastModifiedDate":"2021-09-05"},{"lineNumber":74,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":75,"author":{"gitId":"El0hime"},"content":"     * @return The total length of all ArrayLists.","lastModifiedDate":"2021-09-05"},{"lineNumber":76,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":77,"author":{"gitId":"El0hime"},"content":"    public int getTotalSize() {","lastModifiedDate":"2021-09-05"},{"lineNumber":78,"author":{"gitId":"El0hime"},"content":"        return tasks.size() + contacts.size();","lastModifiedDate":"2021-09-05"},{"lineNumber":79,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":80,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":81,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":82,"author":{"gitId":"El0hime"},"content":"     * Gets the size of the ArrayList storing tasks.","lastModifiedDate":"2021-09-05"},{"lineNumber":83,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"El0hime"},"content":"     * @return The length of the ArrayList storing tasks.","lastModifiedDate":"2021-09-05"},{"lineNumber":85,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"El0hime"},"content":"    public int getTasksSize() {","lastModifiedDate":"2021-09-05"},{"lineNumber":87,"author":{"gitId":"El0hime"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":91,"author":{"gitId":"El0hime"},"content":"     * Gets the size of the ArrayList storing contacts.","lastModifiedDate":"2021-09-05"},{"lineNumber":92,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":93,"author":{"gitId":"El0hime"},"content":"     * @return The length of the ArrayList storing contacts.","lastModifiedDate":"2021-09-05"},{"lineNumber":94,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":95,"author":{"gitId":"El0hime"},"content":"    public int getContactsSize() {","lastModifiedDate":"2021-09-05"},{"lineNumber":96,"author":{"gitId":"El0hime"},"content":"        return contacts.size();","lastModifiedDate":"2021-09-05"},{"lineNumber":97,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":98,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":99,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"El0hime"},"content":"     * Gets the Task at the specified index.","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"El0hime"},"content":"     * @param index Index of the Task in the Task ArrayList.","lastModifiedDate":"2021-09-05"},{"lineNumber":103,"author":{"gitId":"El0hime"},"content":"     * @return Task at the specified index.","lastModifiedDate":"2021-09-04"},{"lineNumber":104,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"El0hime"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"El0hime"},"content":"        return tasks.get(index);","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"El0hime"},"content":"     * Gets the Contact at the specified index.","lastModifiedDate":"2021-09-05"},{"lineNumber":111,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":112,"author":{"gitId":"El0hime"},"content":"     * @param index Index of the Contact in the Contact ArrayList.","lastModifiedDate":"2021-09-05"},{"lineNumber":113,"author":{"gitId":"El0hime"},"content":"     * @return Contact at the specified index.","lastModifiedDate":"2021-09-05"},{"lineNumber":114,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":115,"author":{"gitId":"El0hime"},"content":"    public Contact getContact(int index) {","lastModifiedDate":"2021-09-05"},{"lineNumber":116,"author":{"gitId":"El0hime"},"content":"        return contacts.get(index);","lastModifiedDate":"2021-09-05"},{"lineNumber":117,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":118,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":119,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":120,"author":{"gitId":"El0hime"},"content":"     * Filters through the ArrayList\u003cTask\u003e and returns a new String with tasks containing the keyword.","lastModifiedDate":"2021-09-05"},{"lineNumber":121,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"El0hime"},"content":"     * @param keyword Keyword to be searched by.","lastModifiedDate":"2021-09-04"},{"lineNumber":123,"author":{"gitId":"El0hime"},"content":"     * @return A new String of tasks that contain the keyword.","lastModifiedDate":"2021-09-05"},{"lineNumber":124,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"El0hime"},"content":"    public String searchTaskByKeyword(String keyword) {","lastModifiedDate":"2021-09-05"},{"lineNumber":126,"author":{"gitId":"El0hime"},"content":"        String filteredTaskList \u003d \"\";","lastModifiedDate":"2021-09-05"},{"lineNumber":127,"author":{"gitId":"El0hime"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":128,"author":{"gitId":"El0hime"},"content":"            if (task.toString().contains(keyword)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"El0hime"},"content":"                filteredTaskList +\u003d (task + \"\\n\");","lastModifiedDate":"2021-09-05"},{"lineNumber":130,"author":{"gitId":"El0hime"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"El0hime"},"content":"        return filteredTaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":133,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":134,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":135,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":136,"author":{"gitId":"El0hime"},"content":"     * Filters through the ArrayList\u003cContact\u003e and returns a new String with contacts containing the keyword.","lastModifiedDate":"2021-09-05"},{"lineNumber":137,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":138,"author":{"gitId":"El0hime"},"content":"     * @param keyword Keyword to be searched by.","lastModifiedDate":"2021-09-05"},{"lineNumber":139,"author":{"gitId":"El0hime"},"content":"     * @return A new String of contacts that contain the keyword.","lastModifiedDate":"2021-09-05"},{"lineNumber":140,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":141,"author":{"gitId":"El0hime"},"content":"    public String searchContactByKeyword(String keyword) {","lastModifiedDate":"2021-09-05"},{"lineNumber":142,"author":{"gitId":"El0hime"},"content":"        String filteredContactList \u003d \"\";","lastModifiedDate":"2021-09-05"},{"lineNumber":143,"author":{"gitId":"El0hime"},"content":"        for (Contact contact : this.contacts) {","lastModifiedDate":"2021-09-05"},{"lineNumber":144,"author":{"gitId":"El0hime"},"content":"            if (contact.toString().contains(keyword)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":145,"author":{"gitId":"El0hime"},"content":"                filteredContactList +\u003d (contact + \"\\n\");","lastModifiedDate":"2021-09-05"},{"lineNumber":146,"author":{"gitId":"El0hime"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":147,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":148,"author":{"gitId":"El0hime"},"content":"        return filteredContactList;","lastModifiedDate":"2021-09-05"},{"lineNumber":149,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":150,"author":{"gitId":"El0hime"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"El0hime":150}},{"path":"src/main/java/duke/data/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"package duke.data;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":"import duke.command.ContactCommand;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":"import duke.command.HelpCommand;","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"import duke.information.Contact;","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"import duke.information.Deadline;","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"import duke.information.Event;","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"import duke.information.ToDo;","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":"import java.time.YearMonth;","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"El0hime"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"El0hime"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"El0hime"},"content":" * Class that parses a user\u0027s input.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"El0hime"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"El0hime"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"El0hime"},"content":"    /** The different formats of date/time allowed as input */","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"El0hime"},"content":"    private final static String DATE_AND_TIME_FORMAT[] \u003d {","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"El0hime"},"content":"        \"M/y\", \"d/M/y\", \"d-M-y\", \"M/y HHmm\", \"d/M/y HHmm\", \"d-M-y HHmm\"","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"El0hime"},"content":"    };","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    //@@author addressbook-level2-reused","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    //Reused from https://github.com/se-edu/addressbook-level2","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // with minor modifications","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /** Format of a comment input line. Comment lines are silently consumed when reading user input. */","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String COMMENT_LINE_FORMAT_REGEX \u003d \"#.*\";","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns true if the user input line should be ignored.","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Input should be ignored if it is parsed as a comment, is only whitespace, or is empty.","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param rawInputLine full raw user input line.","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @return true if the entire user input line should be ignored.","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static boolean shouldIgnore(String rawInputLine) {","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return rawInputLine.trim().isEmpty() || isCommentLine(rawInputLine);","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns true if the user input line is a comment line.","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @param rawInputLine full raw user input line.","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @return true if input line is a comment.","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private static boolean isCommentLine(String rawInputLine) {","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return rawInputLine.trim().matches(COMMENT_LINE_FORMAT_REGEX);","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2021-09-13"},{"lineNumber":59,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"El0hime"},"content":"     * Checks the keyword of the input and return the corresponding command.","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"El0hime"},"content":"     * @param userInput The text that the user inputs.","lastModifiedDate":"2021-09-04"},{"lineNumber":64,"author":{"gitId":"El0hime"},"content":"     * @return A Command that does what the keyword intended when executed.","lastModifiedDate":"2021-09-04"},{"lineNumber":65,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"El0hime"},"content":"    public static Command parse(String userInput) {","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"El0hime"},"content":"        if (shouldIgnore(userInput)) {","lastModifiedDate":"2021-09-02"},{"lineNumber":68,"author":{"gitId":"El0hime"},"content":"            throw new DukeException(\"Invalid Keyword.\");","lastModifiedDate":"2021-09-02"},{"lineNumber":69,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":70,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":71,"author":{"gitId":"El0hime"},"content":"        String[] userInputArray \u003d userInput.split(\" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"El0hime"},"content":"        String keyword \u003d userInputArray[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"El0hime"},"content":"        assert keyword !\u003d null : \"Keyword should not be null\";","lastModifiedDate":"2021-09-04"},{"lineNumber":74,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"El0hime"},"content":"        switch (keyword) {","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"El0hime"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"El0hime"},"content":"            return prepareAddCommand(\"deadline \", userInput, userInputArray, \"/by\");","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"El0hime"},"content":"        case \"event\":","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"El0hime"},"content":"            return prepareAddCommand(\"event \", userInput, userInputArray, \"/at\");","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"El0hime"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"El0hime"},"content":"            return prepareAddCommand(\"todo \", userInput, userInputArray, \"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"El0hime"},"content":"        case \"done\":","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"El0hime"},"content":"            return prepareDoneCommand(userInputArray);","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"El0hime"},"content":"        case \"list\":","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"El0hime"},"content":"            return prepareListCommand(userInputArray);","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"El0hime"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"El0hime"},"content":"            return prepareDeleteCommand(userInputArray);","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"El0hime"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"El0hime"},"content":"            return prepareExitCommand(userInputArray);","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"El0hime"},"content":"        case \"find\":","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"El0hime"},"content":"            return prepareFindCommand(userInputArray);","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"El0hime"},"content":"        case \"contact\":","lastModifiedDate":"2021-09-05"},{"lineNumber":102,"author":{"gitId":"El0hime"},"content":"            return prepareContactCommand( userInput, \"/about\");","lastModifiedDate":"2021-09-06"},{"lineNumber":103,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":104,"author":{"gitId":"El0hime"},"content":"        case \"help\":","lastModifiedDate":"2021-09-14"},{"lineNumber":105,"author":{"gitId":"El0hime"},"content":"            return prepareHelpCommand(userInputArray);","lastModifiedDate":"2021-09-14"},{"lineNumber":106,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":107,"author":{"gitId":"El0hime"},"content":"        default:","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"El0hime"},"content":"            throw new DukeException(\"Invalid Keyword.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"El0hime"},"content":"     * Checks for invalid inputs and returns an add command if input is valid.","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"El0hime"},"content":"     * @param keyword The type of task.","lastModifiedDate":"2021-09-04"},{"lineNumber":116,"author":{"gitId":"El0hime"},"content":"     * @param userInput userInput from parse method.","lastModifiedDate":"2021-09-04"},{"lineNumber":117,"author":{"gitId":"El0hime"},"content":"     * @param userInputArray userInputArray from parse method.","lastModifiedDate":"2021-09-04"},{"lineNumber":118,"author":{"gitId":"El0hime"},"content":"     * @param specialPhrase The string to split the task description(if any).","lastModifiedDate":"2021-09-04"},{"lineNumber":119,"author":{"gitId":"El0hime"},"content":"     * @return An AddCommand.","lastModifiedDate":"2021-09-04"},{"lineNumber":120,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"El0hime"},"content":"    private static Command prepareAddCommand(String keyword,","lastModifiedDate":"2021-09-02"},{"lineNumber":122,"author":{"gitId":"El0hime"},"content":"            String userInput, String[] userInputArray, String specialPhrase) {","lastModifiedDate":"2021-09-02"},{"lineNumber":123,"author":{"gitId":"El0hime"},"content":"        String userInputWithoutKeyword \u003d userInput.replace(keyword, \"\");","lastModifiedDate":"2021-09-04"},{"lineNumber":124,"author":{"gitId":"El0hime"},"content":"        switch (keyword) {","lastModifiedDate":"2021-08-27"},{"lineNumber":125,"author":{"gitId":"El0hime"},"content":"        case \"todo \":","lastModifiedDate":"2021-08-27"},{"lineNumber":126,"author":{"gitId":"El0hime"},"content":"            //checks if description is empty","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"El0hime"},"content":"            if (userInputArray.length \u003e 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"El0hime"},"content":"                ToDo newToDo \u003d new ToDo(userInputWithoutKeyword);","lastModifiedDate":"2021-09-04"},{"lineNumber":129,"author":{"gitId":"El0hime"},"content":"                return new AddCommand(newToDo);","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"El0hime"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"El0hime"},"content":"                throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"El0hime"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":134,"author":{"gitId":"El0hime"},"content":"        case \"deadline \":","lastModifiedDate":"2021-08-27"},{"lineNumber":135,"author":{"gitId":"El0hime"},"content":"            //Checks if there is a description","lastModifiedDate":"2021-08-25"},{"lineNumber":136,"author":{"gitId":"El0hime"},"content":"            if (userInputArray.length \u003d\u003d 1 || userInput.endsWith(specialPhrase)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"El0hime"},"content":"                throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"El0hime"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":139,"author":{"gitId":"El0hime"},"content":"            userInputWithoutKeyword \u003d userInput.replace(keyword, \"\");","lastModifiedDate":"2021-09-04"},{"lineNumber":140,"author":{"gitId":"El0hime"},"content":"            String[] updatedDeadline \u003d userInputWithoutKeyword.split(\" \" + specialPhrase + \" \");","lastModifiedDate":"2021-09-04"},{"lineNumber":141,"author":{"gitId":"El0hime"},"content":"            //Returns error if user enters less/more than one special phrase","lastModifiedDate":"2021-08-27"},{"lineNumber":142,"author":{"gitId":"El0hime"},"content":"            if (updatedDeadline.length !\u003d 2) {","lastModifiedDate":"2021-08-27"},{"lineNumber":143,"author":{"gitId":"El0hime"},"content":"                throw new DukeException(\"I\u0027m sorry, please have ONE \" + specialPhrase + \" in your description!\");","lastModifiedDate":"2021-08-27"},{"lineNumber":144,"author":{"gitId":"El0hime"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":145,"author":{"gitId":"El0hime"},"content":"            String deadlineDescription \u003d updatedDeadline[0];","lastModifiedDate":"2021-08-27"},{"lineNumber":146,"author":{"gitId":"El0hime"},"content":"            String deadlineDetail \u003d updatedDeadline[1];","lastModifiedDate":"2021-08-27"},{"lineNumber":147,"author":{"gitId":"El0hime"},"content":"            return new AddCommand(prepareDeadline(deadlineDescription, deadlineDetail));","lastModifiedDate":"2021-08-27"},{"lineNumber":148,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":149,"author":{"gitId":"El0hime"},"content":"        //Default will be for \"event\" keyword","lastModifiedDate":"2021-09-04"},{"lineNumber":150,"author":{"gitId":"El0hime"},"content":"        default:","lastModifiedDate":"2021-09-04"},{"lineNumber":151,"author":{"gitId":"El0hime"},"content":"            //Checks if there is a description","lastModifiedDate":"2021-08-27"},{"lineNumber":152,"author":{"gitId":"El0hime"},"content":"            if (userInputArray.length \u003d\u003d 1 || userInput.endsWith(specialPhrase)) {","lastModifiedDate":"2021-08-27"},{"lineNumber":153,"author":{"gitId":"El0hime"},"content":"                throw new DukeException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2021-09-04"},{"lineNumber":154,"author":{"gitId":"El0hime"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":155,"author":{"gitId":"El0hime"},"content":"            userInputWithoutKeyword \u003d userInput.replace(keyword, \"\");","lastModifiedDate":"2021-09-04"},{"lineNumber":156,"author":{"gitId":"El0hime"},"content":"            String[] updatedEvent \u003d userInputWithoutKeyword.split(\" \" + specialPhrase + \" \");","lastModifiedDate":"2021-09-04"},{"lineNumber":157,"author":{"gitId":"El0hime"},"content":"            //Returns error if user enters less/more than one special phrase","lastModifiedDate":"2021-08-25"},{"lineNumber":158,"author":{"gitId":"El0hime"},"content":"            if (updatedEvent.length !\u003d 2) {","lastModifiedDate":"2021-08-27"},{"lineNumber":159,"author":{"gitId":"El0hime"},"content":"                throw new DukeException(\"I\u0027m sorry, please have ONE \" + specialPhrase + \" in your description!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":160,"author":{"gitId":"El0hime"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":161,"author":{"gitId":"El0hime"},"content":"                String eventDescription \u003d updatedEvent[0];","lastModifiedDate":"2021-08-27"},{"lineNumber":162,"author":{"gitId":"El0hime"},"content":"                String eventDetail \u003d updatedEvent[1];","lastModifiedDate":"2021-08-27"},{"lineNumber":163,"author":{"gitId":"El0hime"},"content":"                Event newEvent \u003d new Event(eventDescription, eventDetail);","lastModifiedDate":"2021-08-27"},{"lineNumber":164,"author":{"gitId":"El0hime"},"content":"                return new AddCommand(newEvent);","lastModifiedDate":"2021-08-27"},{"lineNumber":165,"author":{"gitId":"El0hime"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":166,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":167,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":168,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":169,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":170,"author":{"gitId":"El0hime"},"content":"     * Checks if the date and time inputted by the user follows any of the formats allowed.","lastModifiedDate":"2021-08-27"},{"lineNumber":171,"author":{"gitId":"El0hime"},"content":"     * To be used only in prepareAddCommand method.","lastModifiedDate":"2021-08-27"},{"lineNumber":172,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":173,"author":{"gitId":"El0hime"},"content":"     * @param description Deadline description.","lastModifiedDate":"2021-09-04"},{"lineNumber":174,"author":{"gitId":"El0hime"},"content":"     * @param dateTime The date and time input as a string.","lastModifiedDate":"2021-09-04"},{"lineNumber":175,"author":{"gitId":"El0hime"},"content":"     * @return A deadline if input is valid, else throws a DukeException.","lastModifiedDate":"2021-09-04"},{"lineNumber":176,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":177,"author":{"gitId":"El0hime"},"content":"    private static Deadline prepareDeadline(String description, String dateTime) {","lastModifiedDate":"2021-08-27"},{"lineNumber":178,"author":{"gitId":"El0hime"},"content":"        for (String dateTimeFormat : DATE_AND_TIME_FORMAT) {","lastModifiedDate":"2021-08-27"},{"lineNumber":179,"author":{"gitId":"El0hime"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":180,"author":{"gitId":"El0hime"},"content":"                if (dateTimeFormat.equals(\"M/y\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":181,"author":{"gitId":"El0hime"},"content":"                    YearMonth userInput \u003d YearMonth.parse(dateTime,","lastModifiedDate":"2021-09-04"},{"lineNumber":182,"author":{"gitId":"El0hime"},"content":"                            DateTimeFormatter.ofPattern(dateTimeFormat));","lastModifiedDate":"2021-09-04"},{"lineNumber":183,"author":{"gitId":"El0hime"},"content":"                    if (userInput.getYear() \u003c 2000) {","lastModifiedDate":"2021-08-27"},{"lineNumber":184,"author":{"gitId":"El0hime"},"content":"                        userInput \u003d userInput.plusYears(2000);","lastModifiedDate":"2021-08-27"},{"lineNumber":185,"author":{"gitId":"El0hime"},"content":"                    }","lastModifiedDate":"2021-08-27"},{"lineNumber":186,"author":{"gitId":"El0hime"},"content":"                    return new Deadline(description, userInput);","lastModifiedDate":"2021-08-27"},{"lineNumber":187,"author":{"gitId":"El0hime"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":188,"author":{"gitId":"El0hime"},"content":"                if (dateTimeFormat.split(\" \").length \u003e 1) {","lastModifiedDate":"2021-08-27"},{"lineNumber":189,"author":{"gitId":"El0hime"},"content":"                    LocalDateTime userInput \u003d LocalDateTime.parse(dateTime,","lastModifiedDate":"2021-09-04"},{"lineNumber":190,"author":{"gitId":"El0hime"},"content":"                            DateTimeFormatter.ofPattern(dateTimeFormat));","lastModifiedDate":"2021-09-04"},{"lineNumber":191,"author":{"gitId":"El0hime"},"content":"                    if (userInput.getYear() \u003c 2000) {","lastModifiedDate":"2021-08-27"},{"lineNumber":192,"author":{"gitId":"El0hime"},"content":"                        userInput \u003d userInput.plusYears(2000);","lastModifiedDate":"2021-08-27"},{"lineNumber":193,"author":{"gitId":"El0hime"},"content":"                    }","lastModifiedDate":"2021-08-27"},{"lineNumber":194,"author":{"gitId":"El0hime"},"content":"                    return new Deadline(description, userInput);","lastModifiedDate":"2021-08-27"},{"lineNumber":195,"author":{"gitId":"El0hime"},"content":"                } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":196,"author":{"gitId":"El0hime"},"content":"                    LocalDate userInput \u003d LocalDate.parse(dateTime,","lastModifiedDate":"2021-09-04"},{"lineNumber":197,"author":{"gitId":"El0hime"},"content":"                            DateTimeFormatter.ofPattern(dateTimeFormat));","lastModifiedDate":"2021-09-04"},{"lineNumber":198,"author":{"gitId":"El0hime"},"content":"                    if (userInput.getYear() \u003c 2000) {","lastModifiedDate":"2021-08-27"},{"lineNumber":199,"author":{"gitId":"El0hime"},"content":"                        userInput \u003d userInput.plusYears(2000);","lastModifiedDate":"2021-08-27"},{"lineNumber":200,"author":{"gitId":"El0hime"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":201,"author":{"gitId":"El0hime"},"content":"                    return new Deadline(description, userInput);","lastModifiedDate":"2021-08-27"},{"lineNumber":202,"author":{"gitId":"El0hime"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":203,"author":{"gitId":"El0hime"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":204,"author":{"gitId":"El0hime"},"content":"                //Have to loop through all the different date and time formats to check if the user input","lastModifiedDate":"2021-09-04"},{"lineNumber":205,"author":{"gitId":"El0hime"},"content":"                //is of a valid format, DateTimeParseException will be thrown whenever the format doesn\u0027t fit.","lastModifiedDate":"2021-09-04"},{"lineNumber":206,"author":{"gitId":"El0hime"},"content":"                //If an input does not fit any format, a DukeException will be thrown after the loop has finished.","lastModifiedDate":"2021-09-04"},{"lineNumber":207,"author":{"gitId":"El0hime"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":208,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":209,"author":{"gitId":"El0hime"},"content":"        throw new DukeException(\"Please enter a date of the following format:\\n \" +","lastModifiedDate":"2021-09-14"},{"lineNumber":210,"author":{"gitId":"El0hime"},"content":"                \"\\\"Month/Year\\\"\\n \\\"Day/Month/Year\\\"\\n \\\"Day-Month-Year\\\"\\n\" +","lastModifiedDate":"2021-09-14"},{"lineNumber":211,"author":{"gitId":"El0hime"},"content":"                \" \\\"Month/Year HourMinutes\\\"\\n \\\"Day/Month/Year HourMinute\\\"\\n \\\"Day-Month-Year HourMinute\\\"\\n\");","lastModifiedDate":"2021-09-14"},{"lineNumber":212,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":213,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":214,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":215,"author":{"gitId":"El0hime"},"content":"     * Checks for invalid inputs and returns a list command if input is valid.","lastModifiedDate":"2021-08-25"},{"lineNumber":216,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":217,"author":{"gitId":"El0hime"},"content":"     * @param userInputArray userInputArray from parse method.","lastModifiedDate":"2021-09-04"},{"lineNumber":218,"author":{"gitId":"El0hime"},"content":"     * @return A ListCommand.","lastModifiedDate":"2021-09-04"},{"lineNumber":219,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":220,"author":{"gitId":"El0hime"},"content":"    private static Command prepareListCommand(String[] userInputArray) {","lastModifiedDate":"2021-08-24"},{"lineNumber":221,"author":{"gitId":"El0hime"},"content":"        if (userInputArray.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":222,"author":{"gitId":"El0hime"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":223,"author":{"gitId":"El0hime"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":224,"author":{"gitId":"El0hime"},"content":"            throw new DukeException(\"The description of a list MUST be empty.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":225,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":226,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":227,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":228,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":229,"author":{"gitId":"El0hime"},"content":"     * Checks for invalid inputs and returns a done command if input is valid.","lastModifiedDate":"2021-08-25"},{"lineNumber":230,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":231,"author":{"gitId":"El0hime"},"content":"     * @param userInputArray userInputArray from parse method.","lastModifiedDate":"2021-09-04"},{"lineNumber":232,"author":{"gitId":"El0hime"},"content":"     * @return A DoneCommand.","lastModifiedDate":"2021-09-04"},{"lineNumber":233,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":234,"author":{"gitId":"El0hime"},"content":"    private static Command prepareDoneCommand(String[] userInputArray) {","lastModifiedDate":"2021-08-24"},{"lineNumber":235,"author":{"gitId":"El0hime"},"content":"        //checks if there is a 2nd input(completed task number)","lastModifiedDate":"2021-08-24"},{"lineNumber":236,"author":{"gitId":"El0hime"},"content":"        if (userInputArray.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":237,"author":{"gitId":"El0hime"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":238,"author":{"gitId":"El0hime"},"content":"                int taskNumber \u003d Integer.parseInt(userInputArray[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":239,"author":{"gitId":"El0hime"},"content":"                return new DoneCommand(taskNumber - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":240,"author":{"gitId":"El0hime"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":241,"author":{"gitId":"El0hime"},"content":"                throw new DukeException(\"I\u0027m sorry, please input a number instead!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":242,"author":{"gitId":"El0hime"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":243,"author":{"gitId":"El0hime"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":244,"author":{"gitId":"El0hime"},"content":"            throw new DukeException(\"I\u0027m sorry, please input the number of the completed task\");","lastModifiedDate":"2021-08-24"},{"lineNumber":245,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":246,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":247,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":248,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":249,"author":{"gitId":"El0hime"},"content":"     * Checks for invalid inputs and returns a delete command if input is valid.","lastModifiedDate":"2021-08-25"},{"lineNumber":250,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":251,"author":{"gitId":"El0hime"},"content":"     * @param userInputArray userInputArray from parse method.","lastModifiedDate":"2021-09-04"},{"lineNumber":252,"author":{"gitId":"El0hime"},"content":"     * @return A DeleteCommand.","lastModifiedDate":"2021-09-04"},{"lineNumber":253,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":254,"author":{"gitId":"El0hime"},"content":"    private static Command prepareDeleteCommand(String[] userInputArray) {","lastModifiedDate":"2021-08-24"},{"lineNumber":255,"author":{"gitId":"El0hime"},"content":"        if (userInputArray.length \u003d\u003d 3) {","lastModifiedDate":"2021-09-06"},{"lineNumber":256,"author":{"gitId":"El0hime"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":257,"author":{"gitId":"El0hime"},"content":"                int taskNumber \u003d Integer.parseInt(userInputArray[2]);","lastModifiedDate":"2021-09-06"},{"lineNumber":258,"author":{"gitId":"El0hime"},"content":"                switch (userInputArray[1]) {","lastModifiedDate":"2021-09-06"},{"lineNumber":259,"author":{"gitId":"El0hime"},"content":"                case \"t\" :","lastModifiedDate":"2021-09-06"},{"lineNumber":260,"author":{"gitId":"El0hime"},"content":"                    return new DeleteCommand(taskNumber - 1, 0);","lastModifiedDate":"2021-09-06"},{"lineNumber":261,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":262,"author":{"gitId":"El0hime"},"content":"                case \"c\" :","lastModifiedDate":"2021-09-06"},{"lineNumber":263,"author":{"gitId":"El0hime"},"content":"                    return new DeleteCommand(taskNumber - 1, 1);","lastModifiedDate":"2021-09-06"},{"lineNumber":264,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":265,"author":{"gitId":"El0hime"},"content":"                default:","lastModifiedDate":"2021-09-06"},{"lineNumber":266,"author":{"gitId":"El0hime"},"content":"                    throw new DukeException(\"I\u0027m sorry, please specify with list to delete from!\");","lastModifiedDate":"2021-09-06"},{"lineNumber":267,"author":{"gitId":"El0hime"},"content":"                }","lastModifiedDate":"2021-09-06"},{"lineNumber":268,"author":{"gitId":"El0hime"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":269,"author":{"gitId":"El0hime"},"content":"                throw new DukeException(\"I\u0027m sorry, please input a number instead!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":270,"author":{"gitId":"El0hime"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":271,"author":{"gitId":"El0hime"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":272,"author":{"gitId":"El0hime"},"content":"            throw new DukeException(\"I\u0027m sorry, please input the number of the task you wish to delete.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":273,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":274,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":275,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":276,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":277,"author":{"gitId":"El0hime"},"content":"     * Checks for invalid inputs and returns an exit command if input is valid.","lastModifiedDate":"2021-08-25"},{"lineNumber":278,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":279,"author":{"gitId":"El0hime"},"content":"     * @param userInputArray userInputArray from parse method.","lastModifiedDate":"2021-09-04"},{"lineNumber":280,"author":{"gitId":"El0hime"},"content":"     * @return An ExitCommand.","lastModifiedDate":"2021-09-04"},{"lineNumber":281,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":282,"author":{"gitId":"El0hime"},"content":"    private static Command prepareExitCommand(String[] userInputArray) {","lastModifiedDate":"2021-08-24"},{"lineNumber":283,"author":{"gitId":"El0hime"},"content":"        //Checks if description is left empty","lastModifiedDate":"2021-08-24"},{"lineNumber":284,"author":{"gitId":"El0hime"},"content":"        if (userInputArray.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":285,"author":{"gitId":"El0hime"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":286,"author":{"gitId":"El0hime"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":287,"author":{"gitId":"El0hime"},"content":"            throw new DukeException(\"The description of a bye MUST be empty.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":288,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":289,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":290,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":291,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":292,"author":{"gitId":"El0hime"},"content":"     * Checks for invalid inputs and returns a find command if input is valid.","lastModifiedDate":"2021-08-25"},{"lineNumber":293,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":294,"author":{"gitId":"El0hime"},"content":"     * @param userInputArray userInputArray from parse method.","lastModifiedDate":"2021-09-04"},{"lineNumber":295,"author":{"gitId":"El0hime"},"content":"     * @return a FindCommand.","lastModifiedDate":"2021-09-04"},{"lineNumber":296,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":297,"author":{"gitId":"El0hime"},"content":"    private static Command prepareFindCommand(String[] userInputArray) {","lastModifiedDate":"2021-08-25"},{"lineNumber":298,"author":{"gitId":"El0hime"},"content":"        //checks if there is a 2nd input(word to be searched)","lastModifiedDate":"2021-08-25"},{"lineNumber":299,"author":{"gitId":"El0hime"},"content":"        if (userInputArray.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-25"},{"lineNumber":300,"author":{"gitId":"El0hime"},"content":"            return new FindCommand(userInputArray[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":301,"author":{"gitId":"El0hime"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":302,"author":{"gitId":"El0hime"},"content":"            throw new DukeException(\"Please enter the word to search for\");","lastModifiedDate":"2021-08-25"},{"lineNumber":303,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":304,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":305,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":306,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":307,"author":{"gitId":"El0hime"},"content":"     * Checks for invalid inputs and returns a contact command if input is valid.","lastModifiedDate":"2021-09-05"},{"lineNumber":308,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":309,"author":{"gitId":"El0hime"},"content":"     * @param userInput userInput from parse method.","lastModifiedDate":"2021-09-05"},{"lineNumber":310,"author":{"gitId":"El0hime"},"content":"     * @param specialPhrase The string to split the task description(if any).","lastModifiedDate":"2021-09-05"},{"lineNumber":311,"author":{"gitId":"El0hime"},"content":"     * @return A ContactCommand.","lastModifiedDate":"2021-09-05"},{"lineNumber":312,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":313,"author":{"gitId":"El0hime"},"content":"    private static Command prepareContactCommand (String userInput, String specialPhrase) {","lastModifiedDate":"2021-09-06"},{"lineNumber":314,"author":{"gitId":"El0hime"},"content":"        String userInputWithoutKeyword \u003d userInput.replace(\"contact \", \"\");","lastModifiedDate":"2021-09-06"},{"lineNumber":315,"author":{"gitId":"El0hime"},"content":"        //For contacts without details","lastModifiedDate":"2021-09-06"},{"lineNumber":316,"author":{"gitId":"El0hime"},"content":"        if(!userInputWithoutKeyword.contains(specialPhrase)) {","lastModifiedDate":"2021-09-06"},{"lineNumber":317,"author":{"gitId":"El0hime"},"content":"            return new ContactCommand(new Contact(userInputWithoutKeyword, \" \"));","lastModifiedDate":"2021-09-06"},{"lineNumber":318,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":319,"author":{"gitId":"El0hime"},"content":"        String[] updatedContact \u003d userInputWithoutKeyword.split(\" \" + specialPhrase + \" \");","lastModifiedDate":"2021-09-06"},{"lineNumber":320,"author":{"gitId":"El0hime"},"content":"        //Returns error if user enters less/more than one special phrase","lastModifiedDate":"2021-09-05"},{"lineNumber":321,"author":{"gitId":"El0hime"},"content":"        if (updatedContact.length !\u003d 2) {","lastModifiedDate":"2021-09-06"},{"lineNumber":322,"author":{"gitId":"El0hime"},"content":"            throw new DukeException(\"I\u0027m sorry, please have ONE \" + specialPhrase + \" in your description!\");","lastModifiedDate":"2021-09-05"},{"lineNumber":323,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":324,"author":{"gitId":"El0hime"},"content":"        String contactName \u003d updatedContact[0];","lastModifiedDate":"2021-09-06"},{"lineNumber":325,"author":{"gitId":"El0hime"},"content":"        String contactDetail \u003d updatedContact[1];","lastModifiedDate":"2021-09-06"},{"lineNumber":326,"author":{"gitId":"El0hime"},"content":"        return new ContactCommand(new Contact(contactName, contactDetail));","lastModifiedDate":"2021-09-06"},{"lineNumber":327,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":328,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":329,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":330,"author":{"gitId":"El0hime"},"content":"     * Checks for invalid inputs and returns a help command if input is valid.","lastModifiedDate":"2021-09-14"},{"lineNumber":331,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":332,"author":{"gitId":"El0hime"},"content":"     * @param userInputArray userInputArray from parse method.","lastModifiedDate":"2021-09-14"},{"lineNumber":333,"author":{"gitId":"El0hime"},"content":"     * @return A HelpCommand.","lastModifiedDate":"2021-09-14"},{"lineNumber":334,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":335,"author":{"gitId":"El0hime"},"content":"    private static Command prepareHelpCommand(String[] userInputArray) {","lastModifiedDate":"2021-09-14"},{"lineNumber":336,"author":{"gitId":"El0hime"},"content":"        if (userInputArray.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-14"},{"lineNumber":337,"author":{"gitId":"El0hime"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-09-14"},{"lineNumber":338,"author":{"gitId":"El0hime"},"content":"        } else {","lastModifiedDate":"2021-09-14"},{"lineNumber":339,"author":{"gitId":"El0hime"},"content":"            throw new DukeException(\"The description of a help MUST be empty.\");","lastModifiedDate":"2021-09-14"},{"lineNumber":340,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":341,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":342,"author":{"gitId":"El0hime"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"El0hime":315,"-":27}},{"path":"src/main/java/duke/data/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"package duke.data;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"import duke.information.Contact;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":"import duke.information.Deadline;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":"import duke.information.Event;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"import duke.information.Task;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"import duke.information.ToDo;","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"import java.time.YearMonth;","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":" * Class that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"El0hime"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"El0hime"},"content":"    /** File containing the user\u0027s saved tasks. */","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"El0hime"},"content":"    private File userData;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"El0hime"},"content":"    /** Path to locate the save file. */","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"El0hime"},"content":"    private String pathname;","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"El0hime"},"content":"     * Constructs Storage class that contains the user\u0027s save file.","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"El0hime"},"content":"     * @param pathname Path to locate the save file.","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"El0hime"},"content":"    public Storage(String pathname) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"El0hime"},"content":"        this.pathname \u003d pathname;","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"El0hime"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"El0hime"},"content":"            userData \u003d new File(pathname);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"El0hime"},"content":"            userData.getParentFile().mkdirs();","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"El0hime"},"content":"            userData.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"El0hime"},"content":"            assert userData !\u003d null : \"User\u0027s file data should not be null!\";","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"El0hime"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"El0hime"},"content":"            System.out.println(\"File not created\");","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"El0hime"},"content":"     * Returns an InformationList containing the user\u0027s saved tasks and contacts.","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"El0hime"},"content":"     * If user has no saved tasks nor contacts, returns an empty InformationList.","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"El0hime"},"content":"     * @return An InformationList.","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"El0hime"},"content":"     * @throws DukeException If file is not found or file path cannot be accessed.","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"El0hime"},"content":"    public InformationList load() throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"El0hime"},"content":"        InformationList userDataList \u003d new InformationList();","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"El0hime"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"El0hime"},"content":"            Scanner sc \u003d new Scanner(userData);","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"El0hime"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"El0hime"},"content":"                String[] newTaskArray \u003d sc.nextLine().split(\"\\\\|\");","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"El0hime"},"content":"                assert newTaskArray.length \u003e 3 : \"Invalid data found in file!\";","lastModifiedDate":"2021-09-04"},{"lineNumber":58,"author":{"gitId":"El0hime"},"content":"                Task newTask;","lastModifiedDate":"2021-09-04"},{"lineNumber":59,"author":{"gitId":"El0hime"},"content":"                String taskType \u003d newTaskArray[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"El0hime"},"content":"                if (taskType.equals(\"C\")) {","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"El0hime"},"content":"                    userDataList.addContact(new Contact(newTaskArray[1], newTaskArray[2]));","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"El0hime"},"content":"                    continue;","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"El0hime"},"content":"                }","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"El0hime"},"content":"                boolean isDone \u003d newTaskArray[1].equals(\"1\");","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"El0hime"},"content":"                switch (taskType) {","lastModifiedDate":"2021-09-04"},{"lineNumber":66,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":67,"author":{"gitId":"El0hime"},"content":"                case \"D\":","lastModifiedDate":"2021-09-04"},{"lineNumber":68,"author":{"gitId":"El0hime"},"content":"                    newTask \u003d loadDeadline(newTaskArray);","lastModifiedDate":"2021-09-04"},{"lineNumber":69,"author":{"gitId":"El0hime"},"content":"                    break;","lastModifiedDate":"2021-09-04"},{"lineNumber":70,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":71,"author":{"gitId":"El0hime"},"content":"                case \"E\":","lastModifiedDate":"2021-09-04"},{"lineNumber":72,"author":{"gitId":"El0hime"},"content":"                    newTask \u003d new Event(newTaskArray[2], newTaskArray[3]);","lastModifiedDate":"2021-09-04"},{"lineNumber":73,"author":{"gitId":"El0hime"},"content":"                    break;","lastModifiedDate":"2021-09-04"},{"lineNumber":74,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":75,"author":{"gitId":"El0hime"},"content":"                default:","lastModifiedDate":"2021-09-04"},{"lineNumber":76,"author":{"gitId":"El0hime"},"content":"                    newTask \u003d new ToDo(newTaskArray[2]);","lastModifiedDate":"2021-09-04"},{"lineNumber":77,"author":{"gitId":"El0hime"},"content":"                }","lastModifiedDate":"2021-09-04"},{"lineNumber":78,"author":{"gitId":"El0hime"},"content":"                if (isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"El0hime"},"content":"                    newTask.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"El0hime"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"El0hime"},"content":"                userDataList.addTask(newTask);","lastModifiedDate":"2021-09-04"},{"lineNumber":82,"author":{"gitId":"El0hime"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"El0hime"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"El0hime"},"content":"            throw new DukeException(\"Save file is not found\");","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"El0hime"},"content":"        return userDataList;","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":90,"author":{"gitId":"El0hime"},"content":"     * Loads a Deadline from a txt file based on the format of the date and time.","lastModifiedDate":"2021-09-04"},{"lineNumber":91,"author":{"gitId":"El0hime"},"content":"     * To be used when loading deadlines in the load method.","lastModifiedDate":"2021-09-04"},{"lineNumber":92,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":93,"author":{"gitId":"El0hime"},"content":"     * @param newTaskArray Information of a deadline stored in an array.","lastModifiedDate":"2021-09-04"},{"lineNumber":94,"author":{"gitId":"El0hime"},"content":"     * @return A deadline based on the information in the array.","lastModifiedDate":"2021-09-04"},{"lineNumber":95,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":96,"author":{"gitId":"El0hime"},"content":"    public Deadline loadDeadline(String[] newTaskArray) {","lastModifiedDate":"2021-09-04"},{"lineNumber":97,"author":{"gitId":"El0hime"},"content":"        int maximumYearMonthLength \u003d 7; //eg: MM/yyyy","lastModifiedDate":"2021-09-04"},{"lineNumber":98,"author":{"gitId":"El0hime"},"content":"        int maximumLocalDateLength \u003d 10; //eg: dd-MM-yyyy","lastModifiedDate":"2021-09-04"},{"lineNumber":99,"author":{"gitId":"El0hime"},"content":"        if (newTaskArray[3].length() \u003c\u003d maximumYearMonthLength) {","lastModifiedDate":"2021-09-04"},{"lineNumber":100,"author":{"gitId":"El0hime"},"content":"            return new Deadline(newTaskArray[2],YearMonth.parse(newTaskArray[3]));","lastModifiedDate":"2021-09-04"},{"lineNumber":101,"author":{"gitId":"El0hime"},"content":"        } else if (newTaskArray[3].length() \u003c\u003d maximumLocalDateLength) {","lastModifiedDate":"2021-09-04"},{"lineNumber":102,"author":{"gitId":"El0hime"},"content":"            return new Deadline(newTaskArray[2],LocalDate.parse(newTaskArray[3]));","lastModifiedDate":"2021-09-04"},{"lineNumber":103,"author":{"gitId":"El0hime"},"content":"        } else {","lastModifiedDate":"2021-09-04"},{"lineNumber":104,"author":{"gitId":"El0hime"},"content":"            return new Deadline(newTaskArray[2],LocalDateTime.parse(newTaskArray[3]));","lastModifiedDate":"2021-09-04"},{"lineNumber":105,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":106,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":107,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":108,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"El0hime"},"content":"     * Updates the USERDATA.TXT to reflect changes that the user made.","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"El0hime"},"content":"     * @param listOfUserInformation Updated InformationList.","lastModifiedDate":"2021-09-05"},{"lineNumber":112,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"El0hime"},"content":"    public void save(InformationList listOfUserInformation) {","lastModifiedDate":"2021-09-05"},{"lineNumber":114,"author":{"gitId":"El0hime"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"El0hime"},"content":"            FileWriter newFile \u003d new FileWriter(pathname);","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"El0hime"},"content":"            for (int j \u003d 0; j \u003c listOfUserInformation.getTasksSize(); j++) {","lastModifiedDate":"2021-09-05"},{"lineNumber":117,"author":{"gitId":"El0hime"},"content":"                newFile.write(listOfUserInformation.getTask(j).toData());","lastModifiedDate":"2021-09-05"},{"lineNumber":118,"author":{"gitId":"El0hime"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":119,"author":{"gitId":"El0hime"},"content":"            for (int i \u003d 0; i \u003c listOfUserInformation.getContactsSize(); i++) {","lastModifiedDate":"2021-09-05"},{"lineNumber":120,"author":{"gitId":"El0hime"},"content":"                newFile.write(listOfUserInformation.getContact(i).toData());","lastModifiedDate":"2021-09-05"},{"lineNumber":121,"author":{"gitId":"El0hime"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"El0hime"},"content":"            newFile.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"El0hime"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"El0hime"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"El0hime"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"El0hime":127}},{"path":"src/main/java/duke/data/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"package duke.data;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":" * Class that deals with receiving input from the user and sending output to the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"    /** Statement to show the user upon exit */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":"    private static final String MESSAGE_WELCOME \u003d \"Hello! I\u0027m Cynthius\\n\"","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":"            + \"What can I do for you?\\n\"","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":"            + \"Type \u0027help\u0027 for the list of commands\";","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"    /** Statement to show the user upon running Duke */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"    private static final String MESSAGE_EXIT \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"    /** Statement to show the user upon finding no saved file */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"    private static final String MESSAGE_LOADING_ERROR \u003d \"No saved tasks were found.\";","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"    /** Statement to show the user when a help keyword is called */","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":"    private static final String MESSAGE_HELP \u003d \"Commands: \\n\"","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"El0hime"},"content":"            + \"1) help: Displays a summary of all commands \\n\"","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"            + \"   eg:\u0027help\u0027 \\n\"","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"El0hime"},"content":"            + \"2) todo: Adds a todo task \\n\"","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"El0hime"},"content":"            + \"   eg:\u0027todo\u0027 + \u0027description of todo\u0027 \\n\"","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"El0hime"},"content":"            + \"3) event: Adds an event task \\n\"","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"El0hime"},"content":"            + \"   eg:\u0027event\u0027 + \u0027title\u0027 + \u0027/at\u0027 + \u0027location\u0027 \\n\"","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"El0hime"},"content":"            + \"4) deadline: Adds a deadline task \\n\"","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"El0hime"},"content":"            + \"   eg:\u0027deadline\u0027 + \u0027title\u0027 + \u0027/by\u0027 + \u0027date\u0027 \\n\"","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"El0hime"},"content":"            + \"5) contact: Adds a contact \\n\"","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"El0hime"},"content":"            + \"   eg:\u0027contact\u0027 + \u0027contact name\u0027 + \u0027/about(optional)\u0027 + \u0027description(optional)\u0027 \\n\"","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"El0hime"},"content":"            + \"6) delete: Deletes a specific task or contact \\n\"","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"El0hime"},"content":"            + \"   eg:\u0027delete\u0027 + \u0027t/c\u0027 + \u0027number\u0027 \\n\"","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"El0hime"},"content":"            + \"7) done: Marks a task as done \\n\"","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"El0hime"},"content":"            + \"   eg:\u0027done + number\u0027 \\n\"","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"El0hime"},"content":"            + \"8) find: Finds contacts/tasks related to keyword \\n\"","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"El0hime"},"content":"            + \"   eg:\u0027find\u0027 + \u0027keyword\u0027 \\n\"","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"El0hime"},"content":"            + \"9) list: Lists all tasks and contacts \\n\"","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"El0hime"},"content":"            + \"   eg:\u0027list\u0027 \\n\"","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"El0hime"},"content":"            + \"10) bye: Exits Cynthius \\n\"","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"El0hime"},"content":"            + \"   eg:\u0027bye\u0027 \\n\";","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"El0hime"},"content":"    /** Shows message(s) to the user */","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"El0hime"},"content":"    public static String showToUser(String... message) {","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"El0hime"},"content":"        String displayedMessage \u003d \"\";","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"El0hime"},"content":"        for (String m : message) {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"El0hime"},"content":"            displayedMessage +\u003d (m + \"\\n\");","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"El0hime"},"content":"        return displayedMessage;","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"El0hime"},"content":"    /** Displays welcome message to the user. */","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"El0hime"},"content":"    public static String showWelcome() {","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"El0hime"},"content":"        return showToUser(MESSAGE_WELCOME);","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"El0hime"},"content":"    /** Displays goodbye message to the user. */","lastModifiedDate":"2021-09-04"},{"lineNumber":57,"author":{"gitId":"El0hime"},"content":"    public static String showGoodbye() {","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"El0hime"},"content":"        return showToUser(MESSAGE_EXIT);","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"El0hime"},"content":"    /** Displays error message to the user when user file is not loaded. */","lastModifiedDate":"2021-09-04"},{"lineNumber":62,"author":{"gitId":"El0hime"},"content":"    public static String showLoadingError() {","lastModifiedDate":"2021-09-04"},{"lineNumber":63,"author":{"gitId":"El0hime"},"content":"        return showToUser(MESSAGE_LOADING_ERROR);","lastModifiedDate":"2021-09-04"},{"lineNumber":64,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"El0hime"},"content":"    /** Displays confirmation message to the user when task is added. */","lastModifiedDate":"2021-09-04"},{"lineNumber":67,"author":{"gitId":"El0hime"},"content":"    public static String showAddedInformation() {","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"El0hime"},"content":"        return showToUser(\"Information added successfully!\");","lastModifiedDate":"2021-09-05"},{"lineNumber":69,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":70,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":71,"author":{"gitId":"El0hime"},"content":"    /** Displays confirmation message to the user when task is deleted. */","lastModifiedDate":"2021-09-04"},{"lineNumber":72,"author":{"gitId":"El0hime"},"content":"    public static String showDeletedInformation() {","lastModifiedDate":"2021-09-05"},{"lineNumber":73,"author":{"gitId":"El0hime"},"content":"        return showToUser(\"Information deleted successfully!\");","lastModifiedDate":"2021-09-05"},{"lineNumber":74,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":75,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":76,"author":{"gitId":"El0hime"},"content":"    /** Displays confirmation message to the user when task is marked as done. */","lastModifiedDate":"2021-09-04"},{"lineNumber":77,"author":{"gitId":"El0hime"},"content":"    public static String showDoneTask() {","lastModifiedDate":"2021-09-04"},{"lineNumber":78,"author":{"gitId":"El0hime"},"content":"        return showToUser(\"Task marked as done!\");","lastModifiedDate":"2021-09-04"},{"lineNumber":79,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":80,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":81,"author":{"gitId":"El0hime"},"content":"    /** Displays message to the user. */","lastModifiedDate":"2021-09-04"},{"lineNumber":82,"author":{"gitId":"El0hime"},"content":"    public static String showMessage(String message) {","lastModifiedDate":"2021-09-04"},{"lineNumber":83,"author":{"gitId":"El0hime"},"content":"        return showToUser(message);","lastModifiedDate":"2021-09-02"},{"lineNumber":84,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":87,"author":{"gitId":"El0hime"},"content":"     * Displays the user\u0027s saved task(s) to the user.","lastModifiedDate":"2021-09-04"},{"lineNumber":88,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":89,"author":{"gitId":"El0hime"},"content":"     * @param tasks String containing the user\u0027s saved tasks.","lastModifiedDate":"2021-09-05"},{"lineNumber":90,"author":{"gitId":"El0hime"},"content":"     * @return A string of the user\u0027s saved task(s).","lastModifiedDate":"2021-09-04"},{"lineNumber":91,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":92,"author":{"gitId":"El0hime"},"content":"    public static String showTasks(String tasks) {","lastModifiedDate":"2021-09-05"},{"lineNumber":93,"author":{"gitId":"El0hime"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2021-09-14"},{"lineNumber":94,"author":{"gitId":"El0hime"},"content":"            return showToUser(\"No tasks found!\\n\");","lastModifiedDate":"2021-09-14"},{"lineNumber":95,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":96,"author":{"gitId":"El0hime"},"content":"        return showToUser(\"Here are your tasks:\\n\" + tasks);","lastModifiedDate":"2021-09-05"},{"lineNumber":97,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":99,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":100,"author":{"gitId":"El0hime"},"content":"     * Displays the user\u0027s saved contact(s) to the user.","lastModifiedDate":"2021-09-05"},{"lineNumber":101,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":102,"author":{"gitId":"El0hime"},"content":"     * @param contacts String containing the user\u0027s saved contacts.","lastModifiedDate":"2021-09-05"},{"lineNumber":103,"author":{"gitId":"El0hime"},"content":"     * @return A string of the user\u0027s saved task(s).","lastModifiedDate":"2021-09-05"},{"lineNumber":104,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":105,"author":{"gitId":"El0hime"},"content":"    public static String showContacts(String contacts) {","lastModifiedDate":"2021-09-05"},{"lineNumber":106,"author":{"gitId":"El0hime"},"content":"        if (contacts.isEmpty()) {","lastModifiedDate":"2021-09-14"},{"lineNumber":107,"author":{"gitId":"El0hime"},"content":"            return showToUser(\"No contacts found!\\n\");","lastModifiedDate":"2021-09-14"},{"lineNumber":108,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":109,"author":{"gitId":"El0hime"},"content":"        return showToUser(\"Here are your contacts:\\n\" + contacts);","lastModifiedDate":"2021-09-05"},{"lineNumber":110,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":112,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":113,"author":{"gitId":"El0hime"},"content":"     * Displays a summary of all the keywords in Cynthius to the user.","lastModifiedDate":"2021-09-14"},{"lineNumber":114,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":115,"author":{"gitId":"El0hime"},"content":"     * @return HELP_MESSAGE.","lastModifiedDate":"2021-09-14"},{"lineNumber":116,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":117,"author":{"gitId":"El0hime"},"content":"    public static String showHelp() {","lastModifiedDate":"2021-09-14"},{"lineNumber":118,"author":{"gitId":"El0hime"},"content":"        return MESSAGE_HELP;","lastModifiedDate":"2021-09-14"},{"lineNumber":119,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":120,"author":{"gitId":"El0hime"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"El0hime":120}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"package duke.gui;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"El0hime"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"El0hime"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"El0hime"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"El0hime"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"El0hime"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"El0hime"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"El0hime"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    //@@author erinmayg-reused","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    //Reused from https://github.com/erinmayg/ip/blob/master/src/main/java/duke/gui/DialogBox.java","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // with minor modifications","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final Color DUKE_COLOR \u003d Color.valueOf(\"#33383b\");","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final CornerRadii DUKE_CORNER \u003d new CornerRadii(0, 10, 10, 10, false);","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final Background DUKE_BACKGROUND \u003d new Background(new BackgroundFill(DUKE_COLOR, DUKE_CORNER, Insets.EMPTY));","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final Color USER_COLOR \u003d Color.valueOf(\"#000640\");","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final CornerRadii USER_CORNER \u003d new CornerRadii(10, 0, 10, 10, false);","lastModifiedDate":"2021-09-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final Background USER_BACKGROUND \u003d new Background(new BackgroundFill(USER_COLOR, USER_CORNER, Insets.EMPTY));","lastModifiedDate":"2021-09-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":43,"author":{"gitId":"El0hime"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"El0hime"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"El0hime"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"El0hime"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"El0hime"},"content":"    @FXML","lastModifiedDate":"2021-09-13"},{"lineNumber":48,"author":{"gitId":"El0hime"},"content":"    private Circle avatarIcon;","lastModifiedDate":"2021-09-13"},{"lineNumber":49,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":50,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"El0hime"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"El0hime"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"El0hime"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"El0hime"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"El0hime"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"El0hime"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"El0hime"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"El0hime"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"El0hime"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"El0hime"},"content":"        dialog.setStyle(\"-fx-text-fill: white\");","lastModifiedDate":"2021-09-13"},{"lineNumber":63,"author":{"gitId":"El0hime"},"content":"        avatarIcon.setFill(new ImagePattern(img));","lastModifiedDate":"2021-09-13"},{"lineNumber":64,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"El0hime"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"El0hime"},"content":"    private void flip() {","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"El0hime"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"El0hime"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"El0hime"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"El0hime"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"El0hime"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"El0hime"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-13"},{"lineNumber":78,"author":{"gitId":"El0hime"},"content":"        db.dialog.setBackground(USER_BACKGROUND);","lastModifiedDate":"2021-09-13"},{"lineNumber":79,"author":{"gitId":"El0hime"},"content":"        return db;","lastModifiedDate":"2021-09-13"},{"lineNumber":80,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":81,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":82,"author":{"gitId":"El0hime"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":83,"author":{"gitId":"El0hime"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-01"},{"lineNumber":84,"author":{"gitId":"El0hime"},"content":"        db.flip();","lastModifiedDate":"2021-09-01"},{"lineNumber":85,"author":{"gitId":"El0hime"},"content":"        db.dialog.setBackground(DUKE_BACKGROUND);","lastModifiedDate":"2021-09-13"},{"lineNumber":86,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":87,"author":{"gitId":"El0hime"},"content":"        if (text.contains(\"ERROR:\")) {","lastModifiedDate":"2021-09-14"},{"lineNumber":88,"author":{"gitId":"El0hime"},"content":"            db.dialog.setStyle(\"-fx-text-fill: #ff0000;\");","lastModifiedDate":"2021-09-14"},{"lineNumber":89,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":90,"author":{"gitId":"El0hime"},"content":"        return db;","lastModifiedDate":"2021-09-01"},{"lineNumber":91,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":92,"author":{"gitId":"El0hime"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"El0hime":81,"-":11}},{"path":"src/main/java/duke/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"package duke.gui;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":"public class Launcher {","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"El0hime":12}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"package duke.gui;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"    private Duke duke \u003d new Duke(\"data/tasks.txt\");","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"El0hime"},"content":"    private Image dukeIcon \u003d new Image(this.getClass().getResourceAsStream(\"/images/CoffeeSip.png\"));","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"El0hime"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"El0hime"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"El0hime"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"El0hime"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"El0hime"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"El0hime"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"El0hime"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"El0hime"},"content":"            stage.setTitle(\"Cynthius\");","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"El0hime"},"content":"            stage.getIcons().add(dukeIcon);","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"El0hime"},"content":"            stage.setResizable(false);","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"El0hime"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"El0hime"},"content":"            stage.show();","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"El0hime"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"El0hime"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"El0hime"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"El0hime":38}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"package duke.gui;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":"import duke.data.Ui;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"import javafx.scene.layout.BackgroundImage;","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"import javafx.scene.layout.BackgroundPosition;","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"import javafx.scene.layout.BackgroundRepeat;","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"import javafx.scene.layout.BackgroundSize;","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"El0hime"},"content":"import javafx.util.Duration;","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"El0hime"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"El0hime"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"El0hime"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"El0hime"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"El0hime"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"El0hime"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"El0hime"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"El0hime"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"El0hime"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"El0hime"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"El0hime"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"El0hime"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"El0hime"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"El0hime"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/PaperFace.jpg\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"El0hime"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/CoffeeSip.png\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"El0hime"},"content":"    private Image bgImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Wallpaper.jpg\"));","lastModifiedDate":"2021-09-13"},{"lineNumber":40,"author":{"gitId":"El0hime"},"content":"    private Image sendIcon \u003d new Image(this.getClass().getResourceAsStream(\"/images/Send.jpg\"));","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"El0hime"},"content":"    private ImageView view \u003d new ImageView(sendIcon);","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":43,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"El0hime"},"content":"    @FXML","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"El0hime"},"content":"    private void sendIntroMessage() {","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"El0hime"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(Ui.showWelcome(), dukeImage));","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"El0hime"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"El0hime"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        //@@author erinmayg-reused","lastModifiedDate":"2021-09-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        //Reused from https://github.com/erinmayg/ip/blob/master/src/main/java/duke/gui/MainWindow.java (For initialize)","lastModifiedDate":"2021-09-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        //Reused from https://github.com/erinmayg/ip/blob/master/src/main/resources/view/scrollbar.css (For css)","lastModifiedDate":"2021-09-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // with minor modifications","lastModifiedDate":"2021-09-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Background","lastModifiedDate":"2021-09-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        BackgroundSize bgSize \u003d new BackgroundSize(100, 100, true, true, true, false);","lastModifiedDate":"2021-09-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        BackgroundImage bg \u003d new BackgroundImage(bgImage,","lastModifiedDate":"2021-09-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            BackgroundRepeat.REPEAT, BackgroundRepeat.REPEAT,","lastModifiedDate":"2021-09-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            BackgroundPosition.DEFAULT, bgSize);","lastModifiedDate":"2021-09-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        dialogContainer.setBackground(new Background(bg));","lastModifiedDate":"2021-09-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Scroll Pane and Scroll Bar","lastModifiedDate":"2021-09-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        scrollPane.getStylesheets().add(this.getClass().getResource(\"/view/scrollbar.css\").toString());","lastModifiedDate":"2021-09-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Button","lastModifiedDate":"2021-09-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        view.setFitHeight(25);","lastModifiedDate":"2021-09-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        view.setFitWidth(25);","lastModifiedDate":"2021-09-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        sendButton.setGraphic(view);","lastModifiedDate":"2021-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        //@@author","lastModifiedDate":"2021-09-13"},{"lineNumber":72,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":73,"author":{"gitId":"El0hime"},"content":"        sendIntroMessage();","lastModifiedDate":"2021-09-04"},{"lineNumber":74,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"El0hime"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"El0hime"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":79,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":80,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":81,"author":{"gitId":"El0hime"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-01"},{"lineNumber":82,"author":{"gitId":"El0hime"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-01"},{"lineNumber":83,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":84,"author":{"gitId":"El0hime"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":85,"author":{"gitId":"El0hime"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-01"},{"lineNumber":86,"author":{"gitId":"El0hime"},"content":"        assert duke !\u003d null : \"Duke should have been initialised first!\";","lastModifiedDate":"2021-09-04"},{"lineNumber":87,"author":{"gitId":"El0hime"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-01"},{"lineNumber":88,"author":{"gitId":"El0hime"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":89,"author":{"gitId":"El0hime"},"content":"        //Does not show a visual response when a user enters nothing","lastModifiedDate":"2021-09-14"},{"lineNumber":90,"author":{"gitId":"El0hime"},"content":"        if (!input.isEmpty()) {","lastModifiedDate":"2021-09-14"},{"lineNumber":91,"author":{"gitId":"El0hime"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-01"},{"lineNumber":92,"author":{"gitId":"El0hime"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-01"},{"lineNumber":93,"author":{"gitId":"El0hime"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-01"},{"lineNumber":94,"author":{"gitId":"El0hime"},"content":"            );","lastModifiedDate":"2021-09-01"},{"lineNumber":95,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":96,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":97,"author":{"gitId":"El0hime"},"content":"        // Referenced from https://github.com/zihaooo9/ip/commit/a9528849baeb23011b8225029e4ed8ea2b17235e","lastModifiedDate":"2021-09-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // @@author CheyanneSim-reused","lastModifiedDate":"2021-09-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (response.contains(Ui.showGoodbye())) {","lastModifiedDate":"2021-09-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            PauseTransition pause \u003d new PauseTransition(Duration.seconds(1.5));","lastModifiedDate":"2021-09-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            pause.setOnFinished(event -\u003e {","lastModifiedDate":"2021-09-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                Platform.exit();","lastModifiedDate":"2021-09-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            });","lastModifiedDate":"2021-09-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            pause.play();","lastModifiedDate":"2021-09-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        //@@author","lastModifiedDate":"2021-09-12"},{"lineNumber":107,"author":{"gitId":"El0hime"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-01"},{"lineNumber":108,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":109,"author":{"gitId":"El0hime"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"El0hime":80,"-":29}},{"path":"src/main/java/duke/information/Contact.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"package duke.information;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"/**","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":" * Class that stores a Contact.","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":" */","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"public class Contact {","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":"    /** Name of the contact. */","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":"    protected String name;","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":"    /** Details of the contact. */","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"    protected String detail;","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"     * Constructs Contact class.","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"     * @param name Name of the contact.","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"     * @param detail Details of the contact.","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":"    public Contact(String name, String detail) {","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"El0hime"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"        this.detail \u003d detail;","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"El0hime"},"content":"     * Converts the contact\u0027s information into a string.","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"El0hime"},"content":"     * To be stored in the user\u0027s dedicated txt file.","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"El0hime"},"content":"     * @return String of the contact information.","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"El0hime"},"content":"    public String toData() {","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"El0hime"},"content":"        return \"C|\" + this.name + \"|\" + this.detail + \"\\n\";","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"El0hime"},"content":"     * Converts the contact\u0027s information into a string.","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"El0hime"},"content":"     * To be used to display the contact information to the user.","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"El0hime"},"content":"     * @return String of the contact information.","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"El0hime"},"content":"    public String toString() {","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"El0hime"},"content":"        return \"[C] \" + this.name + \" (detail: \" + this.detail + \" )\";","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"El0hime"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"El0hime":43}},{"path":"src/main/java/duke/information/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"package duke.information;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":"import java.time.YearMonth;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":" * Class that stores a Task that contains a date(deadline).","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"    /** Class of the deadline\u0027s date. */","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"    public enum DeadlineDateType {","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"        LocalDate,","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"        LocalDateTime,","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"        YearMonth","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"El0hime"},"content":"    protected DeadlineDateType deadlineDateType;","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"    /** Types of possible deadlineDate, only 1 of the 3 will be used whenever a deadline is initialised. */","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"El0hime"},"content":"    protected LocalDate deadlineDate;","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"El0hime"},"content":"    protected LocalDateTime deadlineDateTime;","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"El0hime"},"content":"    protected YearMonth deadlineYearMonth;","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"El0hime"},"content":"     * Constructs Deadline class if deadline is a LocalDate.","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"El0hime"},"content":"     * @param description Deadline description.","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"El0hime"},"content":"     * @param deadlineDate Date of the deadline.","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"El0hime"},"content":"    public Deadline(String description, LocalDate deadlineDate) {","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"El0hime"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"El0hime"},"content":"        this.deadlineDate \u003d deadlineDate;","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"El0hime"},"content":"        this.deadlineDateType \u003d DeadlineDateType.LocalDate;","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"El0hime"},"content":"     * Constructs Deadline class if deadline is a LocalDateTime.","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"El0hime"},"content":"     * @param description Deadline description.","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"El0hime"},"content":"     * @param deadlineDateTime Date and time of the deadline.","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"El0hime"},"content":"    public Deadline(String description, LocalDateTime deadlineDateTime) {","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"El0hime"},"content":"        super(description);","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"El0hime"},"content":"        this.deadlineDateTime \u003d deadlineDateTime;","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"El0hime"},"content":"        this.deadlineDateType \u003d DeadlineDateType.LocalDateTime;","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":51,"author":{"gitId":"El0hime"},"content":"     * Constructs Deadline class if deadline is a YearMonth.","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"El0hime"},"content":"     * @param description Deadline description.","lastModifiedDate":"2021-09-03"},{"lineNumber":54,"author":{"gitId":"El0hime"},"content":"     * @param deadlineYearMonth Year and month of the deadline.","lastModifiedDate":"2021-09-03"},{"lineNumber":55,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":56,"author":{"gitId":"El0hime"},"content":"    public Deadline(String description, YearMonth deadlineYearMonth) {","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"El0hime"},"content":"        super(description);","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"El0hime"},"content":"        this.deadlineYearMonth \u003d deadlineYearMonth;","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"El0hime"},"content":"        this.deadlineDateType \u003d DeadlineDateType.YearMonth;","lastModifiedDate":"2021-09-03"},{"lineNumber":60,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":62,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":63,"author":{"gitId":"El0hime"},"content":"     * Converts the deadline\u0027s information into a string.","lastModifiedDate":"2021-09-03"},{"lineNumber":64,"author":{"gitId":"El0hime"},"content":"     * To be stored in the user\u0027s dedicated txt file.","lastModifiedDate":"2021-09-03"},{"lineNumber":65,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":66,"author":{"gitId":"El0hime"},"content":"     * @return String of the deadline information.","lastModifiedDate":"2021-09-03"},{"lineNumber":67,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":68,"author":{"gitId":"El0hime"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"El0hime"},"content":"    public String toData() {","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"El0hime"},"content":"        String dateInData;","lastModifiedDate":"2021-09-03"},{"lineNumber":71,"author":{"gitId":"El0hime"},"content":"        switch (deadlineDateType) {","lastModifiedDate":"2021-09-03"},{"lineNumber":72,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":73,"author":{"gitId":"El0hime"},"content":"        case LocalDate:","lastModifiedDate":"2021-09-03"},{"lineNumber":74,"author":{"gitId":"El0hime"},"content":"            dateInData \u003d this.deadlineDate.toString();","lastModifiedDate":"2021-09-03"},{"lineNumber":75,"author":{"gitId":"El0hime"},"content":"            break;","lastModifiedDate":"2021-09-03"},{"lineNumber":76,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":77,"author":{"gitId":"El0hime"},"content":"        case LocalDateTime:","lastModifiedDate":"2021-09-03"},{"lineNumber":78,"author":{"gitId":"El0hime"},"content":"            dateInData \u003d this.deadlineDateTime.toString();","lastModifiedDate":"2021-09-03"},{"lineNumber":79,"author":{"gitId":"El0hime"},"content":"            break;","lastModifiedDate":"2021-09-03"},{"lineNumber":80,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":81,"author":{"gitId":"El0hime"},"content":"        default:","lastModifiedDate":"2021-09-03"},{"lineNumber":82,"author":{"gitId":"El0hime"},"content":"            dateInData \u003d this.deadlineYearMonth.toString();","lastModifiedDate":"2021-09-03"},{"lineNumber":83,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":84,"author":{"gitId":"El0hime"},"content":"        return \"D|\" + super.toData() + \"|\" + dateInData + \"\\n\";","lastModifiedDate":"2021-09-03"},{"lineNumber":85,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":88,"author":{"gitId":"El0hime"},"content":"     * Converts the deadline\u0027s information into a string.","lastModifiedDate":"2021-09-03"},{"lineNumber":89,"author":{"gitId":"El0hime"},"content":"     * To be used to display the deadline information to the user.","lastModifiedDate":"2021-09-03"},{"lineNumber":90,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":91,"author":{"gitId":"El0hime"},"content":"     * @return String of the deadline information.","lastModifiedDate":"2021-09-03"},{"lineNumber":92,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":93,"author":{"gitId":"El0hime"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":94,"author":{"gitId":"El0hime"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":95,"author":{"gitId":"El0hime"},"content":"        switch (deadlineDateType) {","lastModifiedDate":"2021-09-03"},{"lineNumber":96,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":97,"author":{"gitId":"El0hime"},"content":"        case LocalDate:","lastModifiedDate":"2021-09-03"},{"lineNumber":98,"author":{"gitId":"El0hime"},"content":"            return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2021-09-03"},{"lineNumber":99,"author":{"gitId":"El0hime"},"content":"                        + this.deadlineDate.format((DateTimeFormatter.ofPattern(\"MMM d yyyy\"))) + \")\";","lastModifiedDate":"2021-09-03"},{"lineNumber":100,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":101,"author":{"gitId":"El0hime"},"content":"        case LocalDateTime:","lastModifiedDate":"2021-09-03"},{"lineNumber":102,"author":{"gitId":"El0hime"},"content":"            return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2021-09-03"},{"lineNumber":103,"author":{"gitId":"El0hime"},"content":"                        + this.deadlineDateTime.format((DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\")))+ \")\";","lastModifiedDate":"2021-09-03"},{"lineNumber":104,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":105,"author":{"gitId":"El0hime"},"content":"        default:","lastModifiedDate":"2021-09-03"},{"lineNumber":106,"author":{"gitId":"El0hime"},"content":"            return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2021-09-03"},{"lineNumber":107,"author":{"gitId":"El0hime"},"content":"                        + this.deadlineYearMonth.format((DateTimeFormatter.ofPattern(\"MMM yyyy\"))) + \")\";","lastModifiedDate":"2021-09-03"},{"lineNumber":108,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":109,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":110,"author":{"gitId":"El0hime"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"El0hime":110}},{"path":"src/main/java/duke/information/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"package duke.information;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":" * Class that stores a Task that contains a location.","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":"    /** Location of the event. */","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":"    protected String location;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"     * Constructs Event class.","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"     * @param description Event description.","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"     * @param location Location of the event.","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"    public Event(String description, String location) {","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":"        this.location \u003d location;","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"El0hime"},"content":"     * Converts the event\u0027s information into a string.","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"El0hime"},"content":"     * To be stored in the user\u0027s dedicated txt file.","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"El0hime"},"content":"     * @return String of the event information.","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"El0hime"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"El0hime"},"content":"    public String toData() {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"El0hime"},"content":"        return \"E|\" + super.toData() + \"|\" + this.location + \"\\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"El0hime"},"content":"     * Converts the event\u0027s information into a string.","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"El0hime"},"content":"     * To be used to display the event information to the user.","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"El0hime"},"content":"     * @return String of the event information.","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"El0hime"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"El0hime"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"El0hime"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + location + \")\";","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"El0hime"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"El0hime":43}},{"path":"src/main/java/duke/information/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"package duke.information;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":" * Class that stores a user\u0027s task description and whether the task is done or not.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"public class Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":"    /** Description of the task. */","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":"    protected String description;","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":"    /** Boolean to check if the task has been completed. */","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"     * Constructs Task class.","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"     * @param description Task description.","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"El0hime"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"El0hime"},"content":"     * Gets the status of the Task.","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"El0hime"},"content":"     * @return Cross if completed and blank if not completed.","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"El0hime"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"El0hime"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"El0hime"},"content":"     * Marks the task as completed.","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"El0hime"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"El0hime"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"El0hime"},"content":"     * Gets the completion status of the Task.","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"El0hime"},"content":"     * @return True if task is completed or False if it is not completed.","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"El0hime"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"El0hime"},"content":"        return isDone;","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":47,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":48,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"El0hime"},"content":"     * Converts the task\u0027s information into a string.","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"El0hime"},"content":"     * To be stored in the user\u0027s dedicated txt file.","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"El0hime"},"content":"     * @return String of the task information.","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"El0hime"},"content":"    public String toData() {","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"El0hime"},"content":"        return (isDone ? \"1|\" : \"0|\") + this.description;","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":58,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"El0hime"},"content":"     * Converts the task\u0027s information into a string.","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"El0hime"},"content":"     * To be used to display the task information to the user.","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"El0hime"},"content":"     * @return String of the task information.","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"El0hime"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":65,"author":{"gitId":"El0hime"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-17"},{"lineNumber":66,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":67,"author":{"gitId":"El0hime"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"El0hime":67}},{"path":"src/main/java/duke/information/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"package duke.information;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":" * Class that stores a task.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":"     * Constructs ToDo class.","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"     * @param description ToDo description.","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"     * Converts the task\u0027s information into a string.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":"     * To be stored in the user\u0027s dedicated txt file.","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"     * @return String of the task information.","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"El0hime"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"El0hime"},"content":"    public String toData() {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"El0hime"},"content":"        return \"T|\" + super.toData() + \"\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"El0hime"},"content":"     * Converts the task\u0027s information into a string.","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"El0hime"},"content":"     * To be used to display the task information to the user.","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"El0hime"},"content":"     * @return String of the task information.","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"El0hime"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"El0hime"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"El0hime"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"El0hime"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"El0hime":38}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":"\u003c?import javafx.scene.layout.Priority?\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\"","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"         prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\"","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"        \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"260\" text\u003d\"Label\" wrapText\u003d\"true\"","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"               HBox.hgrow\u003d\"ALWAYS\" lineSpacing\u003d\"1\"\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"            \u003cfont\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"                \u003cFont name\u003d\"Consolas\" size\u003d\"12.0\"/\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"            \u003c/font\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"El0hime"},"content":"                \u003cInsets right\u003d\"10.0\"/\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"El0hime"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"El0hime"},"content":"                \u003cInsets left\u003d\"10.0\" top\u003d\"5.0\" bottom\u003d\"5.0\" right\u003d\"5.0\"/\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"El0hime"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"El0hime"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"El0hime"},"content":"        \u003cCircle fx:id\u003d\"avatarIcon\" fill\u003d\"DODGERBLUE\" radius\u003d\"35.0\" stroke\u003d\"TRANSPARENT\" strokeType\u003d\"INSIDE\"\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"El0hime"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"El0hime"},"content":"                \u003cInsets/\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"El0hime"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"El0hime"},"content":"        \u003c/Circle\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"El0hime"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"El0hime"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"El0hime"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"El0hime"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"El0hime"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"El0hime":35}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"            prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #1f2428;\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\"","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"3.0\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\"","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"                   prefWidth\u003d\"356.0\" promptText\u003d\"Say something to Cynthius!\"","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"                   style\u003d\"-fx-background-color: #33383b; -fx-background-radius: 10; -fx-text-fill: #cdd1d4; -fx-prompt-text-fill: #cdd1d4; -fx-prompt-text-font-style: italic;\"","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"            \u003cfont\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":"                \u003cFont name\u003d\"Consolas\" size\u003d\"12.0\"/\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"El0hime"},"content":"            \u003c/font\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"        \u003c/TextField\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"El0hime"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"361.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"El0hime"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"39.0\" style\u003d\"-fx-background-color: transparent;\" text\u003d\"\"","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"El0hime"},"content":"                textFill\u003d\"#ffffff5d\"/\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"El0hime"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutX\u003d\"2.0\" layoutY\u003d\"2.0\" prefHeight\u003d\"557.0\"","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"El0hime"},"content":"                    prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #54545c;\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"El0hime"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"El0hime"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"556.0\" prefWidth\u003d\"383.0\"/\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"El0hime"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"El0hime"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"El0hime"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"El0hime"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"El0hime":32}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"import duke.information.Deadline;","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"import java.time.YearMonth;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"    public void testDateInput(){","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"        Deadline test \u003d new Deadline(\"something\", LocalDate.parse(\"2011-10-11\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"        assertEquals(\"[D][ ] something (by: Oct 11 2011)\", test.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"    public void testMarkAsDone(){","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":"        Deadline test \u003d new Deadline(\"something\", LocalDate.parse(\"2011-10-11\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"El0hime"},"content":"        test.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"        assertEquals(\"[D][X] something (by: Oct 11 2011)\", test.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"El0hime"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"El0hime"},"content":"    public void testToData() {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"El0hime"},"content":"        Deadline test \u003d new Deadline(\"something\", LocalDate.parse(\"2011-10-11\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"El0hime"},"content":"        test.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"El0hime"},"content":"        assertEquals(\"D|1|something|2011-10-11\\n\", test.toData());","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"El0hime"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"El0hime"},"content":"    public void testDateTimeInput() {","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"El0hime"},"content":"        Deadline test \u003d new Deadline(\"something\",","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"El0hime"},"content":"                LocalDateTime.parse(\"11-10-2019 1800\", DateTimeFormatter.ofPattern(\"d-M-y HHmm\")));","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"El0hime"},"content":"        test.markAsDone();","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"El0hime"},"content":"        assertEquals(\"[D][X] something (by: Oct 11 2019 1800)\", test.toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"El0hime"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"El0hime"},"content":"    public void testYearMonthInput() {","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"El0hime"},"content":"        Deadline test \u003d new Deadline(\"something\",","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"El0hime"},"content":"                YearMonth.parse(\"11/19\", DateTimeFormatter.ofPattern(\"M/y\")));","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"El0hime"},"content":"        test.markAsDone();","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"El0hime"},"content":"        assertEquals(\"[D][X] something (by: Nov 0019)\", test.toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"El0hime"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"El0hime":47}},{"path":"src/test/java/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"import duke.information.Event;","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"public class EventTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":"    public void testInput(){","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":"        Event test \u003d new Event(\"something\", \"somewhere\");","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"        assertEquals(\"[E][ ] something (at: somewhere)\", test.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"    public void testMarkAsDone(){","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"        Event test \u003d new Event(\"something\", \"somewhere\");","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"        test.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"        assertEquals(\"[E][X] something (at: somewhere)\", test.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"El0hime"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"    public void testToData() {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"El0hime"},"content":"        Event test \u003d new Event(\"something\", \"somewhere\");","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"El0hime"},"content":"        test.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"El0hime"},"content":"        assertEquals(\"E|1|something|somewhere\\n\", test.toData());","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"El0hime"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"El0hime":27}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"todo read books","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"todo sleep","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"todo","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":"list 2 ","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":"done","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"produce ERROR","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"deadline run it down /by Thursday","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":"event birthday party /at IDK where","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":"event WRONG ADDED","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"event","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"deadline fake","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"deadline","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"event birthday party /at IDK /at where","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"deadline run it down /by Thursday /by","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"done 3","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":"delete 3","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"El0hime"},"content":"done 4","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"El0hime"},"content":"delete 5","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"El0hime"},"content":"delete","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"El0hime"},"content":"bye","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"El0hime":24}}]
