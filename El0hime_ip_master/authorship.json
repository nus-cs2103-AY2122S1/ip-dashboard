[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"El0hime"},"content":"    mainClassName \u003d \"Duke\"","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"El0hime"},"content":"    toolVersion \u003d \u00278.45\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"El0hime":2,"-":44}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"import command.Command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"import data.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":" * The Duke iP Program.","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"        try {","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"El0hime"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"El0hime"},"content":"     * Starts the program.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"El0hime"},"content":"    public void run() {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"El0hime"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"El0hime"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"El0hime"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"El0hime"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"El0hime"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"El0hime"},"content":"                ui.showLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"El0hime"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"El0hime"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"El0hime"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"El0hime"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"El0hime"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"El0hime"},"content":"            } finally {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"El0hime"},"content":"                ui.showLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"El0hime"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"El0hime"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"El0hime":44,"-":4}},{"path":"src/main/java/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"package command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"import data.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":"import data.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":"import data.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"import task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":" * Command that adds a new Task to Tasklist when executed.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"    private Task task;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":"     * Adds a task to the Tasklist.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"     * @param tasks The list of tasks that a user has","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"El0hime"},"content":"     * @param ui The ui that sends a message to the user once the task is added","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"El0hime"},"content":"     * @param storage Saves the updated TaskList to disk","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"El0hime"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"El0hime"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"El0hime"},"content":"        tasks.addTask(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"El0hime"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"El0hime"},"content":"        ui.showMessage(\"Task added successfully!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"El0hime"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"El0hime"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"El0hime"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"El0hime"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"El0hime":36}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"package command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"import data.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":"import data.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":"import data.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":" * An abstract command that contains an execute and isExit method.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"El0hime":14}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"package command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"import data.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":"import data.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":"import data.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"import data.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":" * Command that deletes a Task from Tasklist when executed.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"     * Index of the task in TaskList","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"    private int taskNumber;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"El0hime"},"content":"     * Deletes a task from the Tasklist.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"El0hime"},"content":"     * @param tasks The list of tasks that a user has","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"El0hime"},"content":"     * @param ui The ui that sends a message to the user once the task is deleted","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"El0hime"},"content":"     * @param storage Saves the updated TaskList to disk","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"El0hime"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"El0hime"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"El0hime"},"content":"        if (taskNumber \u003e tasks.getSize() || taskNumber \u003c\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"El0hime"},"content":"            throw new DukeException(\"Please insert a valid task.Task Number!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"El0hime"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"El0hime"},"content":"            tasks.deleteTask(taskNumber);","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"El0hime"},"content":"            storage.save(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"El0hime"},"content":"            ui.showMessage(\"Task deleted!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"El0hime"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"El0hime"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"El0hime"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"El0hime"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"El0hime":43}},{"path":"src/main/java/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"package command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"import data.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":"import data.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":"import data.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"import data.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":" * Command that marks a task as done when executed.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"public class DoneCommand extends Command{","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"     * Index of the task in TaskList","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"    private int taskNumber;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"    public DoneCommand(int taskNumber) {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"El0hime"},"content":"     * Marks a task from Tasklist as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"El0hime"},"content":"     * @param tasks The list of tasks that a user has","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"El0hime"},"content":"     * @param ui The ui that sends a message to the user once the task is marked as done","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"El0hime"},"content":"     * @param storage Saves the updated TaskList to disk","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"El0hime"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"El0hime"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"El0hime"},"content":"        if (taskNumber \u003e tasks.getSize() || taskNumber \u003c 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"El0hime"},"content":"            throw new DukeException(\"Please insert a valid task.Task Number!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"El0hime"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"El0hime"},"content":"            tasks.getTask(taskNumber).markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"El0hime"},"content":"            storage.save(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"El0hime"},"content":"            ui.showMessage(\"Task marked as done!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"El0hime"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"El0hime"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"El0hime"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"El0hime"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"El0hime":43}},{"path":"src/main/java/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"package command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"import data.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":"import data.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":"import data.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":" * Command that exits Duke when executed.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"     * Saves the current tasks to disk and displays exit message.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"     * @param tasks The list of tasks that a user has","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"     * @param ui The ui that sends a message to the user once the tasks are saved","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"     * @param storage Saves the updated TaskList to disk","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"El0hime"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"El0hime"},"content":"        ui.showGoodbye();","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"El0hime"},"content":"     * Allows the program to be exited.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"El0hime"},"content":"     * @return True","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"El0hime"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"El0hime"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"El0hime"},"content":"        return true;","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"El0hime"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"El0hime":34}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"package command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"import data.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":"import data.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":"import data.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":" * Command that displays a filtered Tasklist when executed.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"    private String keyword;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"     * Displays a user\u0027s saved tasks containing the keyword.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"El0hime"},"content":"     * @param tasks The list of tasks that a user has","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"     * @param ui The ui that sends TaskList to the user","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"El0hime"},"content":"     * @param storage Not used for this command","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"El0hime"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"El0hime"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"El0hime"},"content":"        ui.showTasks(tasks.searchByKeyword(keyword));","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"El0hime"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"El0hime"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"El0hime"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"El0hime"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"El0hime":33}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"package command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"import data.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":"import data.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":"import data.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":" * Command that displays a user\u0027s saved tasks when executed.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"     * Displays a user\u0027s saved tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"     * @param tasks The list of tasks that a user has","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"     * @param ui The ui that sends TaskList to the user","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"     * @param storage Not used for this command","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"El0hime"},"content":"        if (tasks.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"            ui.showMessage(\"You have no tasks saved!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"El0hime"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"El0hime"},"content":"            ui.showTasks(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"El0hime"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"El0hime"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"El0hime"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"El0hime"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"El0hime":31}},{"path":"src/main/java/data/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"package data;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":" * Class that contains errors that are specific to Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"public class DukeException extends RuntimeException{","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":"        super(message);","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"El0hime":10}},{"path":"src/main/java/data/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"package data;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"import command.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":"import task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":"import task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"import task.ToDo;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":"import java.time.YearMonth;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":" * Class that parses a user\u0027s input.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"    /** The different formats of date/time allowed as input */","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":"    private final static String DATE_AND_TIME_FORMAT[] \u003d {","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"El0hime"},"content":"        \"M/y\", \"d/M/y\", \"d-M-y\", \"M/y HHmm\", \"d/M/y HHmm\", \"d-M-y HHmm\"","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"    };","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"El0hime"},"content":"     * Checks the keyword of the input and return the corresponding command.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"El0hime"},"content":"     * @param userInput The text that the user inputs","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"El0hime"},"content":"     * @return A Command that does what the keyword intended when executed","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"El0hime"},"content":"    public static Command parse(String userInput) {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"El0hime"},"content":"        String[] userInputArray \u003d userInput.split(\" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"El0hime"},"content":"        String keyword \u003d userInputArray[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"El0hime"},"content":"        switch (keyword) {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"El0hime"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"El0hime"},"content":"            return prepareAddCommand(\"deadline\", userInput, userInputArray, \"/by\");","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"El0hime"},"content":"        case \"event\":","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"El0hime"},"content":"            return prepareAddCommand(\"event\", userInput, userInputArray, \"/at\");","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"El0hime"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"El0hime"},"content":"            return prepareAddCommand(\"todo\", userInput, userInputArray, \"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"El0hime"},"content":"        case \"done\":","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"El0hime"},"content":"            return prepareDoneCommand(userInputArray);","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"El0hime"},"content":"        case \"list\":","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"El0hime"},"content":"            return prepareListCommand(userInputArray);","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"El0hime"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"El0hime"},"content":"            return prepareDeleteCommand(userInputArray);","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"El0hime"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"El0hime"},"content":"            return prepareExitCommand(userInputArray);","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"El0hime"},"content":"        case \"find\":","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"El0hime"},"content":"            return prepareFindCommand(userInputArray);","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"El0hime"},"content":"        default:","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"El0hime"},"content":"            throw new DukeException(\"Invalid Keyword.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"El0hime"},"content":"     * Checks for invalid inputs and returns an add command if input is valid.","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"El0hime"},"content":"     * @param keyword The type of task","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"El0hime"},"content":"     * @param userInput userInput from parse method","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"El0hime"},"content":"     * @param userInputArray userInputArray from parse method","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"El0hime"},"content":"     * @param specialPhrase The string to split the task description(if any)","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"El0hime"},"content":"     * @return An AddCommand","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"El0hime"},"content":"    private static Command prepareAddCommand(String keyword, String userInput, String[] userInputArray, String specialPhrase) {","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"El0hime"},"content":"        switch (keyword) {","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"El0hime"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"El0hime"},"content":"            //checks if description is empty","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"El0hime"},"content":"            if (userInputArray.length \u003e 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"El0hime"},"content":"                ToDo newToDo \u003d new ToDo(userInput.replace(keyword, \"\").replaceFirst(\" \", \"\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"El0hime"},"content":"                return new AddCommand(newToDo);","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"El0hime"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"El0hime"},"content":"                throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"El0hime"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"El0hime"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"El0hime"},"content":"            //Checks if there is a description","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"El0hime"},"content":"            if (userInputArray.length \u003d\u003d 1 || userInput.endsWith(specialPhrase)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"El0hime"},"content":"                throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"El0hime"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"El0hime"},"content":"            //Removes the keyword and splits the description using specialPhrase","lastModifiedDate":"2021-08-27"},{"lineNumber":90,"author":{"gitId":"El0hime"},"content":"            String[] updatedDeadline \u003d userInput.replace(keyword + \" \", \"\").split(\" \" + specialPhrase + \" \");","lastModifiedDate":"2021-08-27"},{"lineNumber":91,"author":{"gitId":"El0hime"},"content":"            //Returns error if user enters less/more than one special phrase","lastModifiedDate":"2021-08-27"},{"lineNumber":92,"author":{"gitId":"El0hime"},"content":"            if (updatedDeadline.length !\u003d 2) {","lastModifiedDate":"2021-08-27"},{"lineNumber":93,"author":{"gitId":"El0hime"},"content":"                throw new DukeException(\"I\u0027m sorry, please have ONE \" + specialPhrase + \" in your description!\");","lastModifiedDate":"2021-08-27"},{"lineNumber":94,"author":{"gitId":"El0hime"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":95,"author":{"gitId":"El0hime"},"content":"            String deadlineDescription \u003d updatedDeadline[0];","lastModifiedDate":"2021-08-27"},{"lineNumber":96,"author":{"gitId":"El0hime"},"content":"            String deadlineDetail \u003d updatedDeadline[1];","lastModifiedDate":"2021-08-27"},{"lineNumber":97,"author":{"gitId":"El0hime"},"content":"            return new AddCommand(prepareDeadline(deadlineDescription, deadlineDetail));","lastModifiedDate":"2021-08-27"},{"lineNumber":98,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":99,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":100,"author":{"gitId":"El0hime"},"content":"        case \"event\":","lastModifiedDate":"2021-08-27"},{"lineNumber":101,"author":{"gitId":"El0hime"},"content":"            //Checks if there is a description","lastModifiedDate":"2021-08-27"},{"lineNumber":102,"author":{"gitId":"El0hime"},"content":"            if (userInputArray.length \u003d\u003d 1 || userInput.endsWith(specialPhrase)) {","lastModifiedDate":"2021-08-27"},{"lineNumber":103,"author":{"gitId":"El0hime"},"content":"                throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2021-08-27"},{"lineNumber":104,"author":{"gitId":"El0hime"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":105,"author":{"gitId":"El0hime"},"content":"            //Removes the keyword and splits the description using specialPhrase","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"El0hime"},"content":"            String[] updatedEvent \u003d userInput.replace(keyword + \" \", \"\").split(\" \" + specialPhrase + \" \");","lastModifiedDate":"2021-08-27"},{"lineNumber":107,"author":{"gitId":"El0hime"},"content":"            //Returns error if user enters less/more than one special phrase","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"El0hime"},"content":"            if (updatedEvent.length !\u003d 2) {","lastModifiedDate":"2021-08-27"},{"lineNumber":109,"author":{"gitId":"El0hime"},"content":"                throw new DukeException(\"I\u0027m sorry, please have ONE \" + specialPhrase + \" in your description!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"El0hime"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"El0hime"},"content":"                String eventDescription \u003d updatedEvent[0];","lastModifiedDate":"2021-08-27"},{"lineNumber":112,"author":{"gitId":"El0hime"},"content":"                String eventDetail \u003d updatedEvent[1];","lastModifiedDate":"2021-08-27"},{"lineNumber":113,"author":{"gitId":"El0hime"},"content":"                Event newEvent \u003d new Event(eventDescription, eventDetail);","lastModifiedDate":"2021-08-27"},{"lineNumber":114,"author":{"gitId":"El0hime"},"content":"                return new AddCommand(newEvent);","lastModifiedDate":"2021-08-27"},{"lineNumber":115,"author":{"gitId":"El0hime"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":116,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":117,"author":{"gitId":"El0hime"},"content":"        default:","lastModifiedDate":"2021-08-27"},{"lineNumber":118,"author":{"gitId":"El0hime"},"content":"            throw new DukeException(\"This error should never occur!\");","lastModifiedDate":"2021-08-27"},{"lineNumber":119,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":120,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":121,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":122,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":123,"author":{"gitId":"El0hime"},"content":"     * Checks if the date and time inputted by the user follows any of the formats allowed.","lastModifiedDate":"2021-08-27"},{"lineNumber":124,"author":{"gitId":"El0hime"},"content":"     * To be used only in prepareAddCommand method.","lastModifiedDate":"2021-08-27"},{"lineNumber":125,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":126,"author":{"gitId":"El0hime"},"content":"     * @param description Deadline description","lastModifiedDate":"2021-08-27"},{"lineNumber":127,"author":{"gitId":"El0hime"},"content":"     * @param dateTime The date and time input as a string","lastModifiedDate":"2021-08-27"},{"lineNumber":128,"author":{"gitId":"El0hime"},"content":"     * @return A deadline if input is valid, else throws a DukeException","lastModifiedDate":"2021-08-27"},{"lineNumber":129,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":130,"author":{"gitId":"El0hime"},"content":"    private static Deadline prepareDeadline(String description, String dateTime) {","lastModifiedDate":"2021-08-27"},{"lineNumber":131,"author":{"gitId":"El0hime"},"content":"        for (String dateTimeFormat : DATE_AND_TIME_FORMAT) {","lastModifiedDate":"2021-08-27"},{"lineNumber":132,"author":{"gitId":"El0hime"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"El0hime"},"content":"                if (dateTimeFormat \u003d\u003d \"M/y\") {","lastModifiedDate":"2021-08-27"},{"lineNumber":134,"author":{"gitId":"El0hime"},"content":"                    YearMonth userInput \u003d YearMonth.parse(dateTime, DateTimeFormatter.ofPattern(dateTimeFormat));","lastModifiedDate":"2021-08-27"},{"lineNumber":135,"author":{"gitId":"El0hime"},"content":"                    if (userInput.getYear() \u003c 2000) {","lastModifiedDate":"2021-08-27"},{"lineNumber":136,"author":{"gitId":"El0hime"},"content":"                        userInput \u003d userInput.plusYears(2000);","lastModifiedDate":"2021-08-27"},{"lineNumber":137,"author":{"gitId":"El0hime"},"content":"                    }","lastModifiedDate":"2021-08-27"},{"lineNumber":138,"author":{"gitId":"El0hime"},"content":"                    return new Deadline(description, userInput);","lastModifiedDate":"2021-08-27"},{"lineNumber":139,"author":{"gitId":"El0hime"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"El0hime"},"content":"                if (dateTimeFormat.split(\" \").length \u003e 1) {","lastModifiedDate":"2021-08-27"},{"lineNumber":141,"author":{"gitId":"El0hime"},"content":"                    LocalDateTime userInput \u003d LocalDateTime.parse(dateTime, DateTimeFormatter.ofPattern(dateTimeFormat));","lastModifiedDate":"2021-08-27"},{"lineNumber":142,"author":{"gitId":"El0hime"},"content":"                    if (userInput.getYear() \u003c 2000) {","lastModifiedDate":"2021-08-27"},{"lineNumber":143,"author":{"gitId":"El0hime"},"content":"                        userInput \u003d userInput.plusYears(2000);","lastModifiedDate":"2021-08-27"},{"lineNumber":144,"author":{"gitId":"El0hime"},"content":"                    }","lastModifiedDate":"2021-08-27"},{"lineNumber":145,"author":{"gitId":"El0hime"},"content":"                    return new Deadline(description, userInput);","lastModifiedDate":"2021-08-27"},{"lineNumber":146,"author":{"gitId":"El0hime"},"content":"                } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":147,"author":{"gitId":"El0hime"},"content":"                    LocalDate userInput \u003d LocalDate.parse(dateTime, DateTimeFormatter.ofPattern(dateTimeFormat));","lastModifiedDate":"2021-08-27"},{"lineNumber":148,"author":{"gitId":"El0hime"},"content":"                    if (userInput.getYear() \u003c 2000) {","lastModifiedDate":"2021-08-27"},{"lineNumber":149,"author":{"gitId":"El0hime"},"content":"                        userInput \u003d userInput.plusYears(2000);","lastModifiedDate":"2021-08-27"},{"lineNumber":150,"author":{"gitId":"El0hime"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":151,"author":{"gitId":"El0hime"},"content":"                    return new Deadline(description, userInput);","lastModifiedDate":"2021-08-27"},{"lineNumber":152,"author":{"gitId":"El0hime"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":153,"author":{"gitId":"El0hime"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":154,"author":{"gitId":"El0hime"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":155,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":156,"author":{"gitId":"El0hime"},"content":"        throw new DukeException(\"Please enter a valid date!\");","lastModifiedDate":"2021-08-27"},{"lineNumber":157,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":158,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":159,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":160,"author":{"gitId":"El0hime"},"content":"     * Checks for invalid inputs and returns a list command if input is valid.","lastModifiedDate":"2021-08-25"},{"lineNumber":161,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":162,"author":{"gitId":"El0hime"},"content":"     * @param userInputArray userInputArray from parse method","lastModifiedDate":"2021-08-25"},{"lineNumber":163,"author":{"gitId":"El0hime"},"content":"     * @return A ListCommand","lastModifiedDate":"2021-08-25"},{"lineNumber":164,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":165,"author":{"gitId":"El0hime"},"content":"    private static Command prepareListCommand(String[] userInputArray) {","lastModifiedDate":"2021-08-24"},{"lineNumber":166,"author":{"gitId":"El0hime"},"content":"        if (userInputArray.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":167,"author":{"gitId":"El0hime"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":168,"author":{"gitId":"El0hime"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":169,"author":{"gitId":"El0hime"},"content":"            throw new DukeException(\"The description of a list MUST be empty.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":170,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":171,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":172,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":173,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":174,"author":{"gitId":"El0hime"},"content":"     * Checks for invalid inputs and returns a done command if input is valid.","lastModifiedDate":"2021-08-25"},{"lineNumber":175,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":176,"author":{"gitId":"El0hime"},"content":"     * @param userInputArray userInputArray from parse method","lastModifiedDate":"2021-08-25"},{"lineNumber":177,"author":{"gitId":"El0hime"},"content":"     * @return A DoneCommand","lastModifiedDate":"2021-08-25"},{"lineNumber":178,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":179,"author":{"gitId":"El0hime"},"content":"    private static Command prepareDoneCommand(String[] userInputArray) {","lastModifiedDate":"2021-08-24"},{"lineNumber":180,"author":{"gitId":"El0hime"},"content":"        //checks if there is a 2nd input(completed task number)","lastModifiedDate":"2021-08-24"},{"lineNumber":181,"author":{"gitId":"El0hime"},"content":"        if (userInputArray.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":182,"author":{"gitId":"El0hime"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":183,"author":{"gitId":"El0hime"},"content":"                int taskNumber \u003d Integer.parseInt(userInputArray[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":184,"author":{"gitId":"El0hime"},"content":"                return new DoneCommand(taskNumber - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":185,"author":{"gitId":"El0hime"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":186,"author":{"gitId":"El0hime"},"content":"                throw new DukeException(\"I\u0027m sorry, please input a number instead!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":187,"author":{"gitId":"El0hime"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":188,"author":{"gitId":"El0hime"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":189,"author":{"gitId":"El0hime"},"content":"            throw new DukeException(\"I\u0027m sorry, please input the number of the completed task\");","lastModifiedDate":"2021-08-24"},{"lineNumber":190,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":191,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":192,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":193,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":194,"author":{"gitId":"El0hime"},"content":"     * Checks for invalid inputs and returns a delete command if input is valid.","lastModifiedDate":"2021-08-25"},{"lineNumber":195,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":196,"author":{"gitId":"El0hime"},"content":"     * @param userInputArray userInputArray from parse method","lastModifiedDate":"2021-08-25"},{"lineNumber":197,"author":{"gitId":"El0hime"},"content":"     * @return A DeleteCommand","lastModifiedDate":"2021-08-25"},{"lineNumber":198,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":199,"author":{"gitId":"El0hime"},"content":"    private static Command prepareDeleteCommand(String[] userInputArray) {","lastModifiedDate":"2021-08-24"},{"lineNumber":200,"author":{"gitId":"El0hime"},"content":"        //checks if there is a 2nd input(task number to be deleted)","lastModifiedDate":"2021-08-24"},{"lineNumber":201,"author":{"gitId":"El0hime"},"content":"        if (userInputArray.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":202,"author":{"gitId":"El0hime"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":203,"author":{"gitId":"El0hime"},"content":"                int taskNumber \u003d Integer.parseInt(userInputArray[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":204,"author":{"gitId":"El0hime"},"content":"                return new DeleteCommand(taskNumber - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":205,"author":{"gitId":"El0hime"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":206,"author":{"gitId":"El0hime"},"content":"                throw new DukeException(\"I\u0027m sorry, please input a number instead!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":207,"author":{"gitId":"El0hime"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":208,"author":{"gitId":"El0hime"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":209,"author":{"gitId":"El0hime"},"content":"            throw new DukeException(\"I\u0027m sorry, please input the number of the task you wish to delete.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":210,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":211,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":212,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":213,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":214,"author":{"gitId":"El0hime"},"content":"     * Checks for invalid inputs and returns an exit command if input is valid.","lastModifiedDate":"2021-08-25"},{"lineNumber":215,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":216,"author":{"gitId":"El0hime"},"content":"     * @param userInputArray userInputArray from parse method","lastModifiedDate":"2021-08-25"},{"lineNumber":217,"author":{"gitId":"El0hime"},"content":"     * @return An ExitCommand","lastModifiedDate":"2021-08-25"},{"lineNumber":218,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":219,"author":{"gitId":"El0hime"},"content":"    private static Command prepareExitCommand(String[] userInputArray) {","lastModifiedDate":"2021-08-24"},{"lineNumber":220,"author":{"gitId":"El0hime"},"content":"        //Checks if description is left empty","lastModifiedDate":"2021-08-24"},{"lineNumber":221,"author":{"gitId":"El0hime"},"content":"        if (userInputArray.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":222,"author":{"gitId":"El0hime"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":223,"author":{"gitId":"El0hime"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":224,"author":{"gitId":"El0hime"},"content":"            throw new DukeException(\"The description of a bye MUST be empty.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":225,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":226,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":227,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":228,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":229,"author":{"gitId":"El0hime"},"content":"     * Checks for invalid inputs and returns a find command if input is valid.","lastModifiedDate":"2021-08-25"},{"lineNumber":230,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":231,"author":{"gitId":"El0hime"},"content":"     * @param userInputArray userInputArray from parse method","lastModifiedDate":"2021-08-25"},{"lineNumber":232,"author":{"gitId":"El0hime"},"content":"     * @return a FindCommand","lastModifiedDate":"2021-08-25"},{"lineNumber":233,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":234,"author":{"gitId":"El0hime"},"content":"    private static Command prepareFindCommand(String[] userInputArray) {","lastModifiedDate":"2021-08-25"},{"lineNumber":235,"author":{"gitId":"El0hime"},"content":"        //checks if there is a 2nd input(word to be searched)","lastModifiedDate":"2021-08-25"},{"lineNumber":236,"author":{"gitId":"El0hime"},"content":"        if (userInputArray.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-25"},{"lineNumber":237,"author":{"gitId":"El0hime"},"content":"            return new FindCommand(userInputArray[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":238,"author":{"gitId":"El0hime"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":239,"author":{"gitId":"El0hime"},"content":"            throw new DukeException(\"Please enter the word to search for\");","lastModifiedDate":"2021-08-25"},{"lineNumber":240,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":241,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":242,"author":{"gitId":"El0hime"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"El0hime":242}},{"path":"src/main/java/data/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"package data;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"import task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":"import task.Event;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":"import task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"import task.ToDo;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"import java.time.YearMonth;","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":" * Class that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"El0hime"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"El0hime"},"content":"    /** File containing the user\u0027s saved tasks */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"El0hime"},"content":"    private File userData;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"El0hime"},"content":"    private String pathname;","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"El0hime"},"content":"    public Storage(String pathname) {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"El0hime"},"content":"        this.pathname \u003d pathname;","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"El0hime"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"El0hime"},"content":"            userData \u003d new File(pathname);","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"El0hime"},"content":"            userData.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"El0hime"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"El0hime"},"content":"            System.out.println(\"File not created\");","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"El0hime"},"content":"     * Returns an ArrayList containing the user\u0027s saved tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"El0hime"},"content":"     * If user has no saved tasks, returns empty ArrayList.","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"El0hime"},"content":"     * @return an ArrayList of tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"El0hime"},"content":"     * @throws DukeException If file is not found","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"El0hime"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"El0hime"},"content":"        ArrayList\u003cTask\u003e userDataList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"El0hime"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"El0hime"},"content":"            Scanner sc \u003d new Scanner(userData);","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"El0hime"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"El0hime"},"content":"                String[] newTaskArray \u003d sc.nextLine().split(\"\\\\|\");","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"El0hime"},"content":"                String taskType \u003d newTaskArray[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"El0hime"},"content":"                boolean isDone \u003d newTaskArray[1].equals(\"1\");","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"El0hime"},"content":"                Task newTask \u003d taskType.equals(\"D\") ?","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"El0hime"},"content":"                        newTaskArray[3].length() \u003e 7 ? newTaskArray[3].length() \u003e 10","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"El0hime"},"content":"                                ? new Deadline(newTaskArray[2],LocalDateTime.parse(newTaskArray[3]))","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"El0hime"},"content":"                                : new Deadline(newTaskArray[2],LocalDate.parse(newTaskArray[3]))","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"El0hime"},"content":"                                : new Deadline(newTaskArray[2],YearMonth.parse(newTaskArray[3]))","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"El0hime"},"content":"                        : taskType.equals(\"E\") ? new Event(newTaskArray[2], newTaskArray[3])","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"El0hime"},"content":"                        : new ToDo(newTaskArray[2]);","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"El0hime"},"content":"                if (isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"El0hime"},"content":"                    newTask.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"El0hime"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"El0hime"},"content":"                userDataList.add(newTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"El0hime"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"El0hime"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"El0hime"},"content":"            throw new DukeException(\"Save file is not found\");","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"El0hime"},"content":"        return userDataList;","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"El0hime"},"content":"     * Updates the USERDATA.TXT to reflect changes that the user made.","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"El0hime"},"content":"     * @param listOfUserTasks Updated ArrayList","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"El0hime"},"content":"    public void save(TaskList listOfUserTasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"El0hime"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"El0hime"},"content":"            FileWriter newFile \u003d new FileWriter(pathname);","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"El0hime"},"content":"            for (int i \u003d 0; i \u003c listOfUserTasks.getSize(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"El0hime"},"content":"                newFile.write(listOfUserTasks.getTask(i).toData());","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"El0hime"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"El0hime"},"content":"            newFile.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"El0hime"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"El0hime"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"El0hime"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"El0hime":85}},{"path":"src/main/java/data/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"package data;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"import task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":" * Class that deals with updating the ArrayList of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"El0hime"},"content":"     * Adds a new task into the ArrayList.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"El0hime"},"content":"     * @param newTask The task to be added","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"El0hime"},"content":"    public void addTask(Task newTask) {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"El0hime"},"content":"        tasks.add(newTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"El0hime"},"content":"     * Deletes a task from the ArrayList.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"El0hime"},"content":"     * @param oldTaskIndex The task to be deleted","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"El0hime"},"content":"    public void deleteTask(int oldTaskIndex) {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"El0hime"},"content":"        tasks.remove(oldTaskIndex);","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"El0hime"},"content":"     * Marks a task in the ArrayList as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"El0hime"},"content":"     * @param index Index of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"El0hime"},"content":"    public void markTaskAsDone(int index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"El0hime"},"content":"        tasks.get(index).markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"El0hime"},"content":"     * Gets the size of the ArrayList.","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"El0hime"},"content":"     * @return The length of the ArrayList","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"El0hime"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"El0hime"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"El0hime"},"content":"     * Gets the Task at the specified index.","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"El0hime"},"content":"     * @param index Index of the Task in the ArrayList","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"El0hime"},"content":"     * @return Task at the specified index","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"El0hime"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"El0hime"},"content":"        return tasks.get(index);","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"El0hime"},"content":"     * Filters through the TaskList and returns a new TaskList with tasks containing the keyword.","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"El0hime"},"content":"     * @param keyword Keyword to be searched by","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"El0hime"},"content":"     * @return A new TaskList of tasks that contain the keyword.","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"El0hime"},"content":"    public TaskList searchByKeyword(String keyword) {","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"El0hime"},"content":"        TaskList filteredTaskList \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"El0hime"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"El0hime"},"content":"            if (task.toString().contains(keyword)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"El0hime"},"content":"                filteredTaskList.addTask(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"El0hime"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"El0hime"},"content":"        return filteredTaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"El0hime"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"El0hime":82}},{"path":"src/main/java/data/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"package data;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":" * Class that deals with receiving input from the user and sending output to the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":"    /** Statement to show the user upon exit */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":"    private static final String MESSAGE_WELCOME \u003d \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\";","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"    /** Statement to show the user upon running Duke */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"    private static final String MESSAGE_EXIT \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"    /** Statement to show the user upon finding no saved file */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"    private static final String MESSAGE_LOADING_ERROR \u003d \"No saved tasks were found.\";","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"    private static Scanner userInput \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"El0hime"},"content":"    private static final String DIVIDER \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"El0hime"},"content":"    /** Shows message(s) to the user */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"El0hime"},"content":"    public void showToUser(String... message) {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"El0hime"},"content":"        for (String m : message) {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"El0hime"},"content":"            System.out.println(m + \"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"El0hime"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"El0hime"},"content":"        showToUser(","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"El0hime"},"content":"            DIVIDER,","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"El0hime"},"content":"            MESSAGE_WELCOME,","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"El0hime"},"content":"            DIVIDER);","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"El0hime"},"content":"    public void showGoodbye() {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"El0hime"},"content":"        showToUser(MESSAGE_EXIT);","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"El0hime"},"content":"    public void showLine() {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"El0hime"},"content":"        showToUser(DIVIDER);","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"El0hime"},"content":"    public void showLoadingError() {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"El0hime"},"content":"        showToUser(","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"El0hime"},"content":"            DIVIDER,","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"El0hime"},"content":"            MESSAGE_LOADING_ERROR,","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"El0hime"},"content":"            DIVIDER);","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"El0hime"},"content":"    public void showError(String e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"El0hime"},"content":"        showToUser(e);","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"El0hime"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"El0hime"},"content":"        showToUser(message);","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"El0hime"},"content":"    public void showTasks(TaskList tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"El0hime"},"content":"        showToUser(\"Here are your tasks:\");","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"El0hime"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"El0hime"},"content":"            System.out.println(tasks.getTask(i).toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"El0hime"},"content":"     * The following methods shouldIgnore, isCommentLine, readCommand and the string COMMENT_LINE_FORMAT_REGEX","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"El0hime"},"content":"     * were taken from addressbook-level2(https://github.com/se-edu/addressbook-level2) and edited slightly","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"El0hime"},"content":"     * to fit into iP","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"El0hime"},"content":"    /** Format of a comment input line. Comment lines are silently consumed when reading user input. */","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"El0hime"},"content":"    private static final String COMMENT_LINE_FORMAT_REGEX \u003d \"#.*\";","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"El0hime"},"content":"     * Returns true if the user input line should be ignored.","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"El0hime"},"content":"     * Input should be ignored if it is parsed as a comment, is only whitespace, or is empty.","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"El0hime"},"content":"     * @param rawInputLine full raw user input line.","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"El0hime"},"content":"     * @return true if the entire user input line should be ignored.","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"El0hime"},"content":"    private boolean shouldIgnore(String rawInputLine) {","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"El0hime"},"content":"        return rawInputLine.trim().isEmpty() || isCommentLine(rawInputLine);","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"El0hime"},"content":"     * Returns true if the user input line is a comment line.","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"El0hime"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"El0hime"},"content":"     * @param rawInputLine full raw user input line.","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"El0hime"},"content":"     * @return true if input line is a comment.","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"El0hime"},"content":"    private boolean isCommentLine(String rawInputLine) {","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"El0hime"},"content":"        return rawInputLine.trim().matches(COMMENT_LINE_FORMAT_REGEX);","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"El0hime"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"El0hime"},"content":"     * Prompts for the command and reads the text entered by the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"El0hime"},"content":"     * Ignores empty, pure whitespace, and comment lines.","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"El0hime"},"content":"     * Echos the task back to the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"El0hime"},"content":"     * @return task (full line) entered by the user","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"El0hime"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"El0hime"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"El0hime"},"content":"        System.out.println(\"Enter task: \");","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"El0hime"},"content":"        String userInputLine \u003d userInput.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"El0hime"},"content":"        // silently consume all ignored lines","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"El0hime"},"content":"        while (shouldIgnore(userInputLine)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"El0hime"},"content":"            userInputLine \u003d userInput.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"El0hime"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"El0hime"},"content":"        return userInputLine;","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"El0hime"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"El0hime":112}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"package task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":"import java.time.YearMonth;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":" * Class that stores a Task that contains a date(by).","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"    protected LocalDate deadlineDate \u003d null;","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"    protected LocalDateTime deadlineDateTime \u003d null;","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"    protected YearMonth deadlineYearMonth \u003d null;","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"    public Deadline(String description, LocalDate deadlineDate) {","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":"        this.deadlineDate \u003d deadlineDate;","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"El0hime"},"content":"    public Deadline(String description, LocalDateTime deadlineDateTime) {","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"El0hime"},"content":"        super(description);","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"El0hime"},"content":"        this.deadlineDateTime \u003d deadlineDateTime;","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"El0hime"},"content":"    public Deadline(String description, YearMonth deadlineYearMonth) {","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"El0hime"},"content":"        super(description);","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"El0hime"},"content":"        this.deadlineYearMonth \u003d deadlineYearMonth;","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"El0hime"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"El0hime"},"content":"    public String toData() {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"El0hime"},"content":"        return \"D|\" + super.toData() + \"|\" + (deadlineDateTime \u003d\u003d null","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"El0hime"},"content":"                ? (this.deadlineDate \u003d\u003d null ? this.deadlineYearMonth : this.deadlineDate)","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"El0hime"},"content":"                : this.deadlineDateTime) + \"\\n\";","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"El0hime"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"El0hime"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"El0hime"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + (deadlineDateTime \u003d\u003d null","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"El0hime"},"content":"                ? (deadlineDate \u003d\u003d null ? this.deadlineYearMonth.format((DateTimeFormatter.ofPattern(\"MMM yyyy\")))","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"El0hime"},"content":"                : this.deadlineDate.format((DateTimeFormatter.ofPattern(\"MMM d yyyy\"))))","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"El0hime"},"content":"                : deadlineDateTime.format((DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\"))))+ \")\";","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"El0hime"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"El0hime":46}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"package task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":" * Class that stores a Task that contains a location(at).","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":"    protected String at;","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"    public String toData() {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"        return \"E|\" + super.toData() + \"|\" + this.at + \"\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"El0hime"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"El0hime"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"El0hime"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"El0hime":24}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"package task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":" * Class that stores a user\u0027s task description and whether the task is done or not.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"public class Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"    protected String description;","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"El0hime"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"El0hime"},"content":"    public String toData() {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"El0hime"},"content":"        return (isDone ? \"1|\" : \"0|\") + this.description;","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"El0hime"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"El0hime"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"El0hime"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"El0hime":30}},{"path":"src/main/java/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"package task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":" * Class that stores a task.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"    public String toData() {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"        return \"T|\" + super.toData() + \"\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"El0hime":21}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"import task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"import java.time.YearMonth;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"    public void testDateInput(){","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"        Deadline test \u003d new Deadline(\"something\", LocalDate.parse(\"2011-10-11\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"        assertEquals(\"[D][ ] something (by: Oct 11 2011)\", test.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"    public void testMarkAsDone(){","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":"        Deadline test \u003d new Deadline(\"something\", LocalDate.parse(\"2011-10-11\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"El0hime"},"content":"        test.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"        assertEquals(\"[D][X] something (by: Oct 11 2011)\", test.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"El0hime"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"El0hime"},"content":"    public void testToData() {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"El0hime"},"content":"        Deadline test \u003d new Deadline(\"something\", LocalDate.parse(\"2011-10-11\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"El0hime"},"content":"        test.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"El0hime"},"content":"        assertEquals(\"D|1|something|2011-10-11\\n\", test.toData());","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"El0hime"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"El0hime"},"content":"    public void testDateTimeInput() {","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"El0hime"},"content":"        Deadline test \u003d new Deadline(\"something\", LocalDateTime.parse(\"11-10-2019 1800\", DateTimeFormatter.ofPattern(\"d-M-y HHmm\")));","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"El0hime"},"content":"        test.markAsDone();","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"El0hime"},"content":"        assertEquals(\"[D][X] something (by: Oct 11 2019 1800)\", test.toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"El0hime"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"El0hime"},"content":"    public void testYearMonthInput() {","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"El0hime"},"content":"        Deadline test \u003d new Deadline(\"something\", YearMonth.parse(\"11/19\", DateTimeFormatter.ofPattern(\"M/y\")));","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"El0hime"},"content":"        test.markAsDone();","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"El0hime"},"content":"        assertEquals(\"[D][X] something (by: Nov 0019)\", test.toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"El0hime"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"El0hime":44}},{"path":"src/test/java/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"import task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"public class EventTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":"    public void testInput(){","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":"        Event test \u003d new Event(\"something\", \"somewhere\");","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"        assertEquals(\"[E][ ] something (at: somewhere)\", test.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"    public void testMarkAsDone(){","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"        Event test \u003d new Event(\"something\", \"somewhere\");","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"        test.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"        assertEquals(\"[E][X] something (at: somewhere)\", test.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"El0hime"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"    public void testToData() {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"El0hime"},"content":"        Event test \u003d new Event(\"something\", \"somewhere\");","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"El0hime"},"content":"        test.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"El0hime"},"content":"        assertEquals(\"E|1|something|somewhere\\n\", test.toData());","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"El0hime"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"El0hime"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"El0hime"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"El0hime":27}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"El0hime"},"content":"todo read books","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"El0hime"},"content":"todo sleep","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"El0hime"},"content":"todo","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"El0hime"},"content":"list 2 ","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"El0hime"},"content":"done","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"El0hime"},"content":"produce ERROR","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"El0hime"},"content":"deadline run it down /by Thursday","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"El0hime"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"El0hime"},"content":"event birthday party /at IDK where","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"El0hime"},"content":"event WRONG ADDED","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"El0hime"},"content":"event","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"El0hime"},"content":"deadline fake","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"El0hime"},"content":"deadline","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"El0hime"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"El0hime"},"content":"event birthday party /at IDK /at where","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"El0hime"},"content":"deadline run it down /by Thursday /by","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"El0hime"},"content":"done 3","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"El0hime"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"El0hime"},"content":"delete 3","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"El0hime"},"content":"done 4","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"El0hime"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"El0hime"},"content":"delete 5","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"El0hime"},"content":"delete","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"El0hime"},"content":"bye","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"El0hime":24}}]
