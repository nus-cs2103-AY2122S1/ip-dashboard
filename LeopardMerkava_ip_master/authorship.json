[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"LeopardMerkava"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"LeopardMerkava"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"LeopardMerkava":2,"-":22}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LeopardMerkava"},"content":"T%% %%playgames","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"LeopardMerkava"},"content":"E%% %%play games%%2020-12-21 15:00","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"LeopardMerkava"},"content":"T%% %%read","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"LeopardMerkava":3}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeopardMerkava"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"LeopardMerkava"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"LeopardMerkava"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":" * Main class of the program","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"LeopardMerkava"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":"     * Main function of the duke program","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"     * Loops taking user input and converting it into commands to","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"LeopardMerkava"},"content":"     * execute until look is broken (using bye command)","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"LeopardMerkava"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"LeopardMerkava"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"LeopardMerkava"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"LeopardMerkava"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"LeopardMerkava"},"content":"        storage.open();","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"LeopardMerkava"},"content":"        boolean isLoopBroken \u003d false;","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"LeopardMerkava"},"content":"        ui.greet(true);","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"LeopardMerkava"},"content":"        while (!isLoopBroken) {","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"LeopardMerkava"},"content":"            try {","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"LeopardMerkava"},"content":"                Command c \u003d parser.parse(ui.getInput());","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"LeopardMerkava"},"content":"                isLoopBroken \u003d c.execute(ui, storage);","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"LeopardMerkava"},"content":"            } catch (DukeExceptions e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"LeopardMerkava"},"content":"                ui.printException(e);","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"LeopardMerkava"},"content":"                isLoopBroken \u003d false;","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"LeopardMerkava"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"LeopardMerkava":33,"-":3}},{"path":"src/main/java/duke/DukeExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeopardMerkava"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"LeopardMerkava"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"LeopardMerkava"},"content":"public class DukeExceptions extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"LeopardMerkava"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":" * An exception class for Duke program","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":" **/","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"LeopardMerkava"},"content":"public class DukeExceptions extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"LeopardMerkava"},"content":"     * Create a new DukeException with the specified string as the message","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":"     **/","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e branch-A-JavaDoc","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"    public DukeExceptions(String msg) {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"LeopardMerkava"},"content":"        super(msg);","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"LeopardMerkava"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"LeopardMerkava":17}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeopardMerkava"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"LeopardMerkava"},"content":"import duke.commands.ByeCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"LeopardMerkava"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"LeopardMerkava"},"content":"import duke.commands.DeadlineCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":"import duke.commands.DoneCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":"import duke.commands.EventCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"LeopardMerkava"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"import duke.commands.ToDoCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"LeopardMerkava"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"LeopardMerkava"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"LeopardMerkava"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"LeopardMerkava"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"LeopardMerkava"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"LeopardMerkava"},"content":" * Main function to breakdown the input of the user","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"LeopardMerkava"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"LeopardMerkava"},"content":"public class Parser {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"LeopardMerkava"},"content":"    private static final String TIME_PARSE_ERROR \u003d \"Hmm.. Seems like the time format is foreign to me. \\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"LeopardMerkava"},"content":"            + \"Please use the following format:\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"LeopardMerkava"},"content":"            + \"yyyy-MM-dd HH:MM (e.g 2020-05-19 15:30)\";","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"LeopardMerkava"},"content":"     * Interprets user input and returns the appropriate command","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"LeopardMerkava"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"LeopardMerkava"},"content":"     * @param userInput The string which the user typed in.","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"LeopardMerkava"},"content":"     * @return Appropriate command the input represents for the main function to execute.","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"LeopardMerkava"},"content":"     * @throws DukeExceptions if the input is lacking argument.","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"LeopardMerkava"},"content":"     * @throws DukeExceptions if the input has too much argument.","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"LeopardMerkava"},"content":"     * @throws DukeExceptions if the input is not properly formatted.","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"LeopardMerkava"},"content":"     * @throws DukeExceptions if the input is empty.","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"LeopardMerkava"},"content":"     * @throws DukeExceptions if the first word of the input is not a recognisable command.","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"LeopardMerkava"},"content":"    public Command parse(String userInput) throws DukeExceptions {","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"LeopardMerkava"},"content":"        String[] splitUserInput \u003d userInput.split(\" \", 2);","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"LeopardMerkava"},"content":"        String command \u003d splitUserInput[0].strip();","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"LeopardMerkava"},"content":"        switch (command) {","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"LeopardMerkava"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"LeopardMerkava"},"content":"            if (splitUserInput.length \u003e 1 \u0026\u0026 !(splitUserInput[1].equals(\"\"))) {","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"LeopardMerkava"},"content":"                throw new DukeExceptions(\"What was that? You weren\u0027t suppose to say anything after bye!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"LeopardMerkava"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"LeopardMerkava"},"content":"            return new ByeCommand();","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"LeopardMerkava"},"content":"        case \"list\":","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"LeopardMerkava"},"content":"            if (splitUserInput.length \u003e 1 \u0026\u0026 !(splitUserInput[1].equals(\"\"))) {","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"LeopardMerkava"},"content":"                throw new DukeExceptions(\"List command cannot take any arguements\");","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"LeopardMerkava"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"LeopardMerkava"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"LeopardMerkava"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"LeopardMerkava"},"content":"            try {","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"LeopardMerkava"},"content":"                if (splitUserInput.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"LeopardMerkava"},"content":"                    throw new DukeExceptions(\"I need to know which task you want to delete\");","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"LeopardMerkava"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"LeopardMerkava"},"content":"                int index \u003d Integer.parseInt(splitUserInput[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"LeopardMerkava"},"content":"                return new DeleteCommand(index);","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"LeopardMerkava"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"LeopardMerkava"},"content":"                throw new DukeExceptions(\"Oops, delete command can only take a single integer as the argument!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"LeopardMerkava"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"LeopardMerkava"},"content":"        case \"done\":","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"LeopardMerkava"},"content":"            try {","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"LeopardMerkava"},"content":"                if (splitUserInput.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"LeopardMerkava"},"content":"                    throw new DukeExceptions(\"I need to know which task you want to mark as finished\");","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"LeopardMerkava"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"LeopardMerkava"},"content":"                int index \u003d Integer.parseInt(splitUserInput[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"LeopardMerkava"},"content":"                return new DoneCommand(index);","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"LeopardMerkava"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"LeopardMerkava"},"content":"                throw new DukeExceptions(\"Oops, done command can only take a single integer as the argument!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"LeopardMerkava"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"LeopardMerkava"},"content":"        case \"event\":","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"LeopardMerkava"},"content":"            try {","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"LeopardMerkava"},"content":"                if (splitUserInput.length \u003d\u003d 1 || splitUserInput[1].equals(\"\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"LeopardMerkava"},"content":"                    throw new DukeExceptions(\"Oops,\" +","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"LeopardMerkava"},"content":"                            \"you need to tell me the description and the time of the event\");","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"LeopardMerkava"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"LeopardMerkava"},"content":"                String[] splitBody \u003d splitUserInput[1].split(\"/at\", 2);","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"LeopardMerkava"},"content":"                if (splitBody[0].equals(\"\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"LeopardMerkava"},"content":"                    throw new DukeExceptions(\"Oops,\" +","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"LeopardMerkava"},"content":"                            \"you need to tell me the description and the time of the event\");","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"LeopardMerkava"},"content":"                } else if (splitBody.length \u003d\u003d 1 || splitBody[1].strip().equals(\"\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"LeopardMerkava"},"content":"                    throw new DukeExceptions(\"Oops! I need to know when the event is. \\n\" +","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"LeopardMerkava"},"content":"                            \"Use the /at argument followed by yyyy-MM-dd HH:mm please\");","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"LeopardMerkava"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"LeopardMerkava"},"content":"                String desc \u003d splitBody[0].strip();","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"LeopardMerkava"},"content":"                LocalDateTime time \u003d LocalDateTime.parse(splitBody[1].strip(),","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"LeopardMerkava"},"content":"                        DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"LeopardMerkava"},"content":"                Event event \u003d Event.create(desc, time);","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"LeopardMerkava"},"content":"                return new EventCommand(event);","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"LeopardMerkava"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"LeopardMerkava"},"content":"                throw new DukeExceptions(TIME_PARSE_ERROR);","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"LeopardMerkava"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"LeopardMerkava"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"LeopardMerkava"},"content":"            if (splitUserInput.length \u003d\u003d 1 || splitUserInput[1].equals(\"\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"LeopardMerkava"},"content":"                throw new DukeExceptions(\"Oops, \" +","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"LeopardMerkava"},"content":"                        \"you need to tell me the description and the time of the deadline\");","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"LeopardMerkava"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"LeopardMerkava"},"content":"            try {","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"LeopardMerkava"},"content":"                String[] splitBody \u003d splitUserInput[1].split(\"/by\", 2);","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"LeopardMerkava"},"content":"                if (splitBody[0].equals(\"\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"LeopardMerkava"},"content":"                    throw new DukeExceptions(\"Oops,\" +","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"LeopardMerkava"},"content":"                            \"you need to tell me the description and the time of the deadline\");","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"LeopardMerkava"},"content":"                } else if (splitBody.length \u003d\u003d 1 || splitBody[1].strip().equals(\"\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"LeopardMerkava"},"content":"                    throw new DukeExceptions(\"Oops! I need to know when the deadline is. \\n\" +","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"LeopardMerkava"},"content":"                            \"Use the /by argument followed by yyyy-MM-dd HH:mm please\");","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"LeopardMerkava"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":118,"author":{"gitId":"LeopardMerkava"},"content":"                String desc \u003d splitBody[0].strip();","lastModifiedDate":"2021-08-26"},{"lineNumber":119,"author":{"gitId":"LeopardMerkava"},"content":"                LocalDateTime time \u003d LocalDateTime.parse(splitBody[1].strip(),","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"LeopardMerkava"},"content":"                        DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")","lastModifiedDate":"2021-08-26"},{"lineNumber":121,"author":{"gitId":"LeopardMerkava"},"content":"                );","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"LeopardMerkava"},"content":"                Deadline deadline \u003d Deadline.create(desc, time);","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"LeopardMerkava"},"content":"                return new DeadlineCommand(deadline);","lastModifiedDate":"2021-08-26"},{"lineNumber":124,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"LeopardMerkava"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":126,"author":{"gitId":"LeopardMerkava"},"content":"                throw new DukeExceptions(TIME_PARSE_ERROR);","lastModifiedDate":"2021-08-26"},{"lineNumber":127,"author":{"gitId":"LeopardMerkava"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":128,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":129,"author":{"gitId":"LeopardMerkava"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-26"},{"lineNumber":130,"author":{"gitId":"LeopardMerkava"},"content":"            if (splitUserInput.length \u003d\u003d 1 || splitUserInput[1].equals(\"\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":131,"author":{"gitId":"LeopardMerkava"},"content":"                throw new DukeExceptions(\"Oops, \" +","lastModifiedDate":"2021-08-26"},{"lineNumber":132,"author":{"gitId":"LeopardMerkava"},"content":"                        \"you need to tell me the description of the task on hand\");","lastModifiedDate":"2021-08-26"},{"lineNumber":133,"author":{"gitId":"LeopardMerkava"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":134,"author":{"gitId":"LeopardMerkava"},"content":"            ToDo toDo \u003d ToDo.create(splitUserInput[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":135,"author":{"gitId":"LeopardMerkava"},"content":"            return new ToDoCommand(toDo);","lastModifiedDate":"2021-08-26"},{"lineNumber":136,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":137,"author":{"gitId":"LeopardMerkava"},"content":"        case \"find\":","lastModifiedDate":"2021-08-26"},{"lineNumber":138,"author":{"gitId":"LeopardMerkava"},"content":"            if (splitUserInput.length \u003d\u003d 1 || splitUserInput[1].equals(\"\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":139,"author":{"gitId":"LeopardMerkava"},"content":"                throw new DukeExceptions(\"Oops, \" +","lastModifiedDate":"2021-08-26"},{"lineNumber":140,"author":{"gitId":"LeopardMerkava"},"content":"                        \"you need to tell me the keyword you are looking for\");","lastModifiedDate":"2021-08-26"},{"lineNumber":141,"author":{"gitId":"LeopardMerkava"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":142,"author":{"gitId":"LeopardMerkava"},"content":"            return new FindCommand(splitUserInput[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":143,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":144,"author":{"gitId":"LeopardMerkava"},"content":"        case \"\":","lastModifiedDate":"2021-08-26"},{"lineNumber":145,"author":{"gitId":"LeopardMerkava"},"content":"            throw new DukeExceptions(\"Can you type louder .. I mean.. input anything? I got nothing\");","lastModifiedDate":"2021-08-26"},{"lineNumber":146,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":147,"author":{"gitId":"LeopardMerkava"},"content":"        default:","lastModifiedDate":"2021-08-26"},{"lineNumber":148,"author":{"gitId":"LeopardMerkava"},"content":"            throw new DukeExceptions(\"Sorry.. I don\u0027t know what your command means\");","lastModifiedDate":"2021-08-26"},{"lineNumber":149,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":150,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":151,"author":{"gitId":"LeopardMerkava"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"LeopardMerkava":151}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeopardMerkava"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"LeopardMerkava"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"LeopardMerkava"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":" * A class to handle the input and output of user.","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":"public class Ui {","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"    private static final String HORIZONTAL_LINE \u003d \"_____________________________________________________________________\";","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"LeopardMerkava"},"content":"    private static final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"LeopardMerkava"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"LeopardMerkava"},"content":"    private static final String GREETING \u003d \"Hello! I am \\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"LeopardMerkava"},"content":"            + LOGO","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"LeopardMerkava"},"content":"            + \"The awesome bot helper! \\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"LeopardMerkava"},"content":"            + \"How can I help you today?\";","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"LeopardMerkava"},"content":"    private static final String GOODBYE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"LeopardMerkava"},"content":"    private final Scanner myScanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"LeopardMerkava"},"content":"     * Creates a new Ui instance with a new scanner instance","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"LeopardMerkava"},"content":"     **/","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"LeopardMerkava"},"content":"    public Ui() {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"LeopardMerkava"},"content":"        myScanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"LeopardMerkava"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"LeopardMerkava"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"LeopardMerkava"},"content":"     * Add the top an bottom border to the output.","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"LeopardMerkava"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"LeopardMerkava"},"content":"     * @param output The message which should be displayed in the output.","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"LeopardMerkava"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e branch-A-JavaDoc","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"LeopardMerkava"},"content":"    private static void reply(String output) {","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"LeopardMerkava"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"LeopardMerkava"},"content":"        System.out.println(output);","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"LeopardMerkava"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"LeopardMerkava"},"content":"     * Prints greetings \u0026 goodbyes","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"LeopardMerkava"},"content":"     **/","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"LeopardMerkava"},"content":"    public void greet(Boolean isGreeting) {","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"LeopardMerkava"},"content":"        String printMessage \u003d isGreeting","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"LeopardMerkava"},"content":"                ? GREETING","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"LeopardMerkava"},"content":"                : GOODBYE;","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"LeopardMerkava"},"content":"        reply(printMessage);","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"LeopardMerkava"},"content":"     * Returns the next line of user input","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"LeopardMerkava"},"content":"     **/","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"LeopardMerkava"},"content":"    public String getInput() {","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"LeopardMerkava"},"content":"        String userInput \u003d myScanner.nextLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"LeopardMerkava"},"content":"        return userInput;","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"LeopardMerkava"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"LeopardMerkava"},"content":"     * Prints a string","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"LeopardMerkava"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"LeopardMerkava"},"content":"     * Prints a string with proper format","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"LeopardMerkava"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e branch-A-JavaDoc","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"LeopardMerkava"},"content":"     **/","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"LeopardMerkava"},"content":"    public void print(String s) {","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"LeopardMerkava"},"content":"        reply(s);","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"LeopardMerkava"},"content":"     * Prints error message of an exception","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"LeopardMerkava"},"content":"     **/","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"LeopardMerkava"},"content":"    public void printException(Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"LeopardMerkava"},"content":"        reply(e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"LeopardMerkava"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"LeopardMerkava":82}},{"path":"src/main/java/duke/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeopardMerkava"},"content":"package duke.commands;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"LeopardMerkava"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"LeopardMerkava"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"     * Call duke.Ui to print goodbye","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"LeopardMerkava"},"content":"     * Returns true to break main loop","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"LeopardMerkava"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"LeopardMerkava"},"content":" * Class to handle the bye command.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"LeopardMerkava"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"LeopardMerkava"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"LeopardMerkava"},"content":"     * Call duke.Ui to print goodbye.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"LeopardMerkava"},"content":"     * Returns true to break main loop.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"LeopardMerkava"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e branch-A-JavaDoc","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"LeopardMerkava"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"LeopardMerkava"},"content":"    public boolean execute(Ui ui, Storage storage) {","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"LeopardMerkava"},"content":"        ui.greet(false);","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"LeopardMerkava"},"content":"        return true;","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"LeopardMerkava"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"LeopardMerkava":30}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeopardMerkava"},"content":"package duke.commands;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"LeopardMerkava"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"LeopardMerkava"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":" * Abstract command class to ensure execute is implemented by other command class.","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"LeopardMerkava"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"    public abstract boolean execute(Ui ui, Storage storage);","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"LeopardMerkava"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"LeopardMerkava":11}},{"path":"src/main/java/duke/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeopardMerkava"},"content":"package duke.commands;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"LeopardMerkava"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"LeopardMerkava"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"LeopardMerkava"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"LeopardMerkava"},"content":"    Deadline deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"LeopardMerkava"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":" * Class to handle the deadline command.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"LeopardMerkava"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"LeopardMerkava"},"content":"    Deadline deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"LeopardMerkava"},"content":"     * Public constructor for the DeadlineCommand class","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"LeopardMerkava"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"LeopardMerkava"},"content":"     * @param deadline The deadline task.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"LeopardMerkava"},"content":"     * @return A new DeadlineCommand instance with the specified deadline task stored.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"LeopardMerkava"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e branch-A-JavaDoc","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"LeopardMerkava"},"content":"    public DeadlineCommand(Deadline deadline) {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"LeopardMerkava"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"LeopardMerkava"},"content":"     * Add the task to the list, print out reply, and save the change to file","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"LeopardMerkava"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"LeopardMerkava"},"content":"     * @param ui The Ui instance for printing","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"LeopardMerkava"},"content":"     * @param storage The Storage instance to add the task to","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"LeopardMerkava"},"content":"     * @return A boolean of false to indicate the main while loop should not be broken","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"LeopardMerkava"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"LeopardMerkava"},"content":"    public boolean execute(Ui ui, Storage storage) {","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"LeopardMerkava"},"content":"        storage.addToList(deadline);","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"LeopardMerkava"},"content":"        ui.print(\"Got it! I\u0027ve added this deadline to the list: \\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"LeopardMerkava"},"content":"                + \"  \" + deadline.toString() + \u0027\\n\u0027","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"LeopardMerkava"},"content":"                + String.format(\"Now you have %d tasks in the list\", storage.getSize()));","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"LeopardMerkava"},"content":"        storage.save();","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"LeopardMerkava"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"LeopardMerkava"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"LeopardMerkava":46}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeopardMerkava"},"content":"package duke.commands;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"LeopardMerkava"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"LeopardMerkava"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":"    int index;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"LeopardMerkava"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":" * Class to handle the delete command.","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"LeopardMerkava"},"content":"    int index;","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"LeopardMerkava"},"content":"     * Public constructor for the DeleteCommand class","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"LeopardMerkava"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"LeopardMerkava"},"content":"     * @param input The index of the task to delete in the list","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"LeopardMerkava"},"content":"     * @return A new DeleteCommand instance with the specified index stored.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"LeopardMerkava"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e branch-A-JavaDoc","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"LeopardMerkava"},"content":"    public DeleteCommand(int input) {","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"LeopardMerkava"},"content":"        this.index \u003d input - 1;","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"LeopardMerkava"},"content":"     * Delete the task in the index.","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"LeopardMerkava"},"content":"     * Print out confirmation and Saves after.","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"LeopardMerkava"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"LeopardMerkava"},"content":"     * @param ui The Ui instance for printing messages","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"LeopardMerkava"},"content":"     * @param storage The Storage instance delete the task from","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"LeopardMerkava"},"content":"     * @return A boolean of false to indicate the main while loop should not be broken","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"LeopardMerkava"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"LeopardMerkava"},"content":"    public boolean execute(Ui ui, Storage storage) {","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"LeopardMerkava"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"LeopardMerkava"},"content":"            ui.print(\"Okay! I have deleted this task from your list: \\n\" + storage.getTask(index));","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"LeopardMerkava"},"content":"            storage.deleteFromList(index);","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"LeopardMerkava"},"content":"            storage.save();","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"LeopardMerkava"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"LeopardMerkava"},"content":"            ui.print(\"Oops, the list is not that big!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"LeopardMerkava"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"LeopardMerkava"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"LeopardMerkava":47}},{"path":"src/main/java/duke/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeopardMerkava"},"content":"package duke.commands;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"LeopardMerkava"},"content":"import duke.DukeExceptions;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"LeopardMerkava"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"LeopardMerkava"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"LeopardMerkava"},"content":"    int index;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"LeopardMerkava"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":" * Class to handle the done command.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"LeopardMerkava"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"LeopardMerkava"},"content":"    int index;","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"LeopardMerkava"},"content":"     * Public constructor for the DoneCommand class","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"LeopardMerkava"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"LeopardMerkava"},"content":"     * @param input The index of the task to mark as done in the list","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"LeopardMerkava"},"content":"     * @return A new DoneCommand instance with the specified inex stored.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"LeopardMerkava"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e branch-A-JavaDoc","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"LeopardMerkava"},"content":"    public DoneCommand(int input) {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"LeopardMerkava"},"content":"        this.index \u003d input - 1;","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"LeopardMerkava"},"content":"     * Mark the task in the index as done.","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"LeopardMerkava"},"content":"     * Prints out reply message and saves to file after.","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"LeopardMerkava"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"LeopardMerkava"},"content":"     * @param ui The Ui instance for printing","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"LeopardMerkava"},"content":"     * @param storage The Storage instance to get the task","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"LeopardMerkava"},"content":"     * @return A boolean of false to indicate the main while loop should not be broken","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"LeopardMerkava"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"LeopardMerkava"},"content":"    public boolean execute(Ui ui, Storage storage) {","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"LeopardMerkava"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"LeopardMerkava"},"content":"            storage.markAsFinished(index);","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"LeopardMerkava"},"content":"            ui.print(\"Well done! I have marked the following as finished: \\n\" + storage.getTask(index));","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"LeopardMerkava"},"content":"            storage.save();","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"LeopardMerkava"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"LeopardMerkava"},"content":"            ui.print(\"Oops, the list is not that big!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"LeopardMerkava"},"content":"        } catch (DukeExceptions e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"LeopardMerkava"},"content":"            ui.printException(e);","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"LeopardMerkava"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"LeopardMerkava"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"LeopardMerkava":50}},{"path":"src/main/java/duke/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeopardMerkava"},"content":"package duke.commands;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"LeopardMerkava"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"LeopardMerkava"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"LeopardMerkava"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":" * Class to handle the event command.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"LeopardMerkava"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"LeopardMerkava"},"content":"    Event event;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"LeopardMerkava"},"content":"     * Public constructor for the EventCommand class","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"LeopardMerkava"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"LeopardMerkava"},"content":"     * @param event The Event task.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"LeopardMerkava"},"content":"     * @return A new EventCommand instance with the specified event task stored.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"LeopardMerkava"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e branch-A-JavaDoc","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"LeopardMerkava"},"content":"    public EventCommand(Event event) {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"LeopardMerkava"},"content":"        this.event \u003d event;","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"LeopardMerkava"},"content":"     * Add the task to the list and print out reply message","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"LeopardMerkava"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"LeopardMerkava"},"content":"     * @param ui The Ui instance for printing","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"LeopardMerkava"},"content":"     * @param storage The Storage instance to add the task to","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"LeopardMerkava"},"content":"     * @return A boolean of false to indicate the main while loop should not be broken","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"LeopardMerkava"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"LeopardMerkava"},"content":"    public boolean execute(Ui ui, Storage storage) {","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"LeopardMerkava"},"content":"        storage.addToList(event);","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"LeopardMerkava"},"content":"        ui.print(\"Got it! I\u0027ve added this event to the list: \\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"LeopardMerkava"},"content":"                + \"  \" + event.toString() + \u0027\\n\u0027","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"LeopardMerkava"},"content":"                + String.format(\"Now you have %d tasks in the list\", storage.getSize()));","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"LeopardMerkava"},"content":"        storage.save();","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"LeopardMerkava"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"LeopardMerkava"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"LeopardMerkava":42}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeopardMerkava"},"content":"package duke.commands;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"LeopardMerkava"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"LeopardMerkava"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":" * Class to handle Find command","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"LeopardMerkava"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"    String keyword;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":"     * Public constructor to create a new FindCommand with the keyword stored","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"LeopardMerkava"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"LeopardMerkava"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"LeopardMerkava"},"content":"     * Find task which contains keyword in the storage and prints it out","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"LeopardMerkava"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"LeopardMerkava"},"content":"     * @param ui The Ui instance for printing","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"LeopardMerkava"},"content":"     * @param storage The Storage instance to find the task from","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"LeopardMerkava"},"content":"     * @return A boolean of false to indicate the main while loop should not be broken","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"LeopardMerkava"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"LeopardMerkava"},"content":"    public boolean execute(Ui ui, Storage storage) {","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"LeopardMerkava"},"content":"        ui.print(storage.find(keyword));","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"LeopardMerkava"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"LeopardMerkava"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"LeopardMerkava":31}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeopardMerkava"},"content":"package duke.commands;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"LeopardMerkava"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"LeopardMerkava"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":" * Class to handle the list command.","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"LeopardMerkava"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":"     * Prints out current list of task","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"     * @param ui The Ui instance for printing","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"LeopardMerkava"},"content":"     * @param storage The Storage instance to get the list","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"LeopardMerkava"},"content":"     * @return A boolean of false to indicate the main while loop should not be broken","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"LeopardMerkava"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"LeopardMerkava"},"content":"    public boolean execute(Ui ui, Storage storage) {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"LeopardMerkava"},"content":"        ui.print(storage.getList());","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"LeopardMerkava"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"LeopardMerkava"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"LeopardMerkava":24}},{"path":"src/main/java/duke/commands/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeopardMerkava"},"content":"package duke.commands;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"LeopardMerkava"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"LeopardMerkava"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"LeopardMerkava"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":" * Class to handle the todo command.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"LeopardMerkava"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"LeopardMerkava"},"content":"    ToDo toDo;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"LeopardMerkava"},"content":"     * Public constructor for the ToDoCommand class","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"LeopardMerkava"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"LeopardMerkava"},"content":"     * @param toDo The toDo task.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"LeopardMerkava"},"content":"     * @return A new ToDoCommand instance with the specified toDo task stored.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"LeopardMerkava"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e branch-A-JavaDoc","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"LeopardMerkava"},"content":"    public ToDoCommand(ToDo toDo) {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"LeopardMerkava"},"content":"        this.toDo \u003d toDo;","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"LeopardMerkava"},"content":"     * Add the task to the list and print out reply message","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"LeopardMerkava"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"LeopardMerkava"},"content":"     * @param ui The Ui instance for printing","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"LeopardMerkava"},"content":"     * @param storage The Storage instance to add the task to","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"LeopardMerkava"},"content":"     * @return A boolean of false to indicate the main while loop should not be broken","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"LeopardMerkava"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"LeopardMerkava"},"content":"    public boolean execute(Ui ui, Storage storage) {","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"LeopardMerkava"},"content":"        storage.addToList(toDo);","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"LeopardMerkava"},"content":"        ui.print(\"Got it! I\u0027ve added this task to the list: \\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"LeopardMerkava"},"content":"                + \"  \" + toDo.toString() + \u0027\\n\u0027","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"LeopardMerkava"},"content":"                + String.format(\"Now you have %d tasks in the list\", storage.getSize()));","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"LeopardMerkava"},"content":"        storage.save();","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"LeopardMerkava"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"LeopardMerkava"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"LeopardMerkava":42}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeopardMerkava"},"content":"package duke.storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"LeopardMerkava"},"content":"import duke.DukeExceptions;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"LeopardMerkava"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":"import java.nio.file.FileAlreadyExistsException;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"LeopardMerkava"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"LeopardMerkava"},"content":"import java.util.List;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"LeopardMerkava"},"content":" * Class to handle all about storage. This includes creating, reading, and writing to file.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"LeopardMerkava"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"LeopardMerkava"},"content":"public class Storage {","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"LeopardMerkava"},"content":"    private static final Path DIRECTORY \u003d Paths.get(\"data\");","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"LeopardMerkava"},"content":"    private static final Path FILE_PATH \u003d Paths.get(\"data\", \"duke.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"LeopardMerkava"},"content":"    private final TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"LeopardMerkava"},"content":"     * Tries to create the data directory if it does not exist.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"LeopardMerkava"},"content":"    private static void directoryCreator() {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"LeopardMerkava"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"LeopardMerkava"},"content":"            Files.createDirectories(DIRECTORY);","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"LeopardMerkava"},"content":"        } catch (FileAlreadyExistsException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"LeopardMerkava"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"LeopardMerkava"},"content":"            System.out.println(ioe.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"LeopardMerkava"},"content":"     * Tries to create the data file if it does not exist.","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"LeopardMerkava"},"content":"    private static void fileCreator() {","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"LeopardMerkava"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"LeopardMerkava"},"content":"            Files.createFile(FILE_PATH);","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"LeopardMerkava"},"content":"        } catch (FileAlreadyExistsException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"LeopardMerkava"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"LeopardMerkava"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"LeopardMerkava"},"content":"     * Opens the file and import the data into the current TaskList.","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"LeopardMerkava"},"content":"    public void open() {","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"LeopardMerkava"},"content":"        directoryCreator();","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"LeopardMerkava"},"content":"        fileCreator();","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"LeopardMerkava"},"content":"        List\u003cString\u003e saveFile \u003d null;","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"LeopardMerkava"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"LeopardMerkava"},"content":"            saveFile \u003d Files.readAllLines(FILE_PATH);","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"LeopardMerkava"},"content":"        } catch (IOException io) {","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"LeopardMerkava"},"content":"            System.out.println(io.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"LeopardMerkava"},"content":"        tasks.importFromList(saveFile);","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"LeopardMerkava"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"LeopardMerkava"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"LeopardMerkava"},"content":"     * Writes the current tasklisk data into the file.","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"LeopardMerkava"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e branch-A-JavaDoc","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"LeopardMerkava"},"content":"    public void save() {","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"LeopardMerkava"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"LeopardMerkava"},"content":"            Files.write(FILE_PATH, tasks.exportToText().getBytes());","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"LeopardMerkava"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"LeopardMerkava"},"content":"            System.out.println(ioe.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"LeopardMerkava"},"content":"     * Returns string representation of the current task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"LeopardMerkava"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"LeopardMerkava"},"content":"     * @return String of the current list.","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"LeopardMerkava"},"content":"    public String getList() {","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"LeopardMerkava"},"content":"        return tasks.toString();","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"LeopardMerkava"},"content":"     * Adds the task to the current list.","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"LeopardMerkava"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"LeopardMerkava"},"content":"     * @param task Task to be added to the list.","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"LeopardMerkava"},"content":"    public void addToList(Task task) {","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"LeopardMerkava"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"LeopardMerkava"},"content":"     * Deletes the task in the specified index.","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"LeopardMerkava"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"LeopardMerkava"},"content":"     * @param index Index of task to be deleted from the list.","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"LeopardMerkava"},"content":"    public void deleteFromList(int index) {","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"LeopardMerkava"},"content":"        tasks.remove(index);","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"LeopardMerkava"},"content":"     * Marks specified task as finished.","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"LeopardMerkava"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"LeopardMerkava"},"content":"     * @param index Index of task to be marked as finished from the list.","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"LeopardMerkava"},"content":"     * @throws DukeExceptions if the task is already marked as finished.","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"LeopardMerkava"},"content":"    public void markAsFinished(int index) throws DukeExceptions {","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"LeopardMerkava"},"content":"        tasks.markAsFinished(index);","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":118,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":119,"author":{"gitId":"LeopardMerkava"},"content":"     * Returns the task in the specified index.","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"LeopardMerkava"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":121,"author":{"gitId":"LeopardMerkava"},"content":"     * @param index Index of task to be marked pulled.","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"LeopardMerkava"},"content":"     * @return Task in the index.","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":124,"author":{"gitId":"LeopardMerkava"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"LeopardMerkava"},"content":"        return tasks.get(index);","lastModifiedDate":"2021-08-26"},{"lineNumber":126,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":127,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":128,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":129,"author":{"gitId":"LeopardMerkava"},"content":"     * Returns the tsize of the list.","lastModifiedDate":"2021-08-26"},{"lineNumber":130,"author":{"gitId":"LeopardMerkava"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":131,"author":{"gitId":"LeopardMerkava"},"content":"     * @return Size of the TaskList.","lastModifiedDate":"2021-08-26"},{"lineNumber":132,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":133,"author":{"gitId":"LeopardMerkava"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-26"},{"lineNumber":134,"author":{"gitId":"LeopardMerkava"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-26"},{"lineNumber":135,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":136,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":137,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":138,"author":{"gitId":"LeopardMerkava"},"content":"     * Find task which has the keyword in the list.","lastModifiedDate":"2021-08-26"},{"lineNumber":139,"author":{"gitId":"LeopardMerkava"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":140,"author":{"gitId":"LeopardMerkava"},"content":"     * @param keyword The keyword to look for.","lastModifiedDate":"2021-08-26"},{"lineNumber":141,"author":{"gitId":"LeopardMerkava"},"content":"     * @return String representation of a list of task that has the keyword in the description.","lastModifiedDate":"2021-08-26"},{"lineNumber":142,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":143,"author":{"gitId":"LeopardMerkava"},"content":"    public String find(String keyword) {","lastModifiedDate":"2021-08-26"},{"lineNumber":144,"author":{"gitId":"LeopardMerkava"},"content":"        return tasks.find(keyword);","lastModifiedDate":"2021-08-26"},{"lineNumber":145,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":146,"author":{"gitId":"LeopardMerkava"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"LeopardMerkava":146}},{"path":"src/main/java/duke/storage/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeopardMerkava"},"content":"package duke.storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"LeopardMerkava"},"content":"import duke.DukeExceptions;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"LeopardMerkava"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"LeopardMerkava"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"LeopardMerkava"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"LeopardMerkava"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":"import java.util.List;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"LeopardMerkava"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"LeopardMerkava"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"LeopardMerkava"},"content":" * List class to hold the listed Tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"LeopardMerkava"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"LeopardMerkava"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e branch-A-JavaDoc","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"LeopardMerkava"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"LeopardMerkava"},"content":"    private static final String DIVIDER \u003d \"%%\";","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"LeopardMerkava"},"content":"    private final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"LeopardMerkava"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"LeopardMerkava"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"LeopardMerkava"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"LeopardMerkava"},"content":"        result.append(\"Here are the tasks in your list! \\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"LeopardMerkava"},"content":"        int index \u003d 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"LeopardMerkava"},"content":"        for (Task task : this) {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"LeopardMerkava"},"content":"            result.append(index)","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"LeopardMerkava"},"content":"                    .append(\". \")","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"LeopardMerkava"},"content":"                    .append(task.toString())","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"LeopardMerkava"},"content":"                    .append(\u0027\\n\u0027);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"LeopardMerkava"},"content":"            index++;","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"LeopardMerkava"},"content":"        return (result.toString().stripTrailing());","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"LeopardMerkava"},"content":"     * Add all of the task in the List of String.","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"LeopardMerkava"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"LeopardMerkava"},"content":"     * @param inputString The list of lines of string.","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"LeopardMerkava"},"content":"    public void importFromList(List\u003cString\u003e inputString) {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"LeopardMerkava"},"content":"        this.clear();","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"LeopardMerkava"},"content":"        for (String line : inputString) {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"LeopardMerkava"},"content":"            String[] splitString \u003d line.split(DIVIDER, 0);","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"LeopardMerkava"},"content":"            Task task;","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"LeopardMerkava"},"content":"            if (splitString[0].equals(\"T\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"LeopardMerkava"},"content":"                task \u003d ToDo.create(splitString[2]);","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"LeopardMerkava"},"content":"            } else if (splitString[0].equals(\"E\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"LeopardMerkava"},"content":"                task \u003d Event.create(splitString[2], LocalDateTime.parse(splitString[3],","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"LeopardMerkava"},"content":"                        formatter));","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"LeopardMerkava"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"LeopardMerkava"},"content":"                task \u003d Deadline.create(splitString[2], LocalDateTime.parse(splitString[3],","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"LeopardMerkava"},"content":"                        formatter));","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"LeopardMerkava"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"LeopardMerkava"},"content":"            task.markFinished(splitString[1].equals(\"X\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"LeopardMerkava"},"content":"            this.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"LeopardMerkava"},"content":"     * Exports the current list into a format to be written into a file.","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"LeopardMerkava"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"LeopardMerkava"},"content":"     * @return Formatted string using specified divider.","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"LeopardMerkava"},"content":"    public String exportToText() {","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"LeopardMerkava"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"LeopardMerkava"},"content":"        for (Task currTask : this) {","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"LeopardMerkava"},"content":"            result.append(currTask.getTaskType())","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"LeopardMerkava"},"content":"                    .append(DIVIDER)","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"LeopardMerkava"},"content":"                    .append(currTask.getStatusIcon())","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"LeopardMerkava"},"content":"                    .append(DIVIDER)","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"LeopardMerkava"},"content":"                    .append(currTask.getDescription());","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"LeopardMerkava"},"content":"            if (!(currTask.getTaskType().equals(\"T\"))) {","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"LeopardMerkava"},"content":"                result.append(DIVIDER)","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"LeopardMerkava"},"content":"                        .append(currTask.getTime());","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"LeopardMerkava"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"LeopardMerkava"},"content":"            result.append(\u0027\\n\u0027);","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"LeopardMerkava"},"content":"        return result.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"LeopardMerkava"},"content":"     * Marks specified task as finished.","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"LeopardMerkava"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"LeopardMerkava"},"content":"     * @param index Index of task to be marked as finished from the list.","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"LeopardMerkava"},"content":"     * @throws DukeExceptions if the task is already marked as finished.","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"LeopardMerkava"},"content":"    public void markAsFinished(int index) throws DukeExceptions {","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"LeopardMerkava"},"content":"        Task task \u003d this.get(index);","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"LeopardMerkava"},"content":"        if (task.getStatusIcon().equals(\"X\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"LeopardMerkava"},"content":"            throw new DukeExceptions(\"That task was already marked as done\");","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"LeopardMerkava"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"LeopardMerkava"},"content":"            task.markFinished(true);","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"LeopardMerkava"},"content":"     * Looks through all the task and outputs the tasks which contains the keyword.","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"LeopardMerkava"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"LeopardMerkava"},"content":"     * @param keyword The keyword to look for.","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"LeopardMerkava"},"content":"     * @return The list of tasks which contains the keyword.","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"LeopardMerkava"},"content":"    public String find(String keyword) {","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"LeopardMerkava"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"LeopardMerkava"},"content":"        result.append(\"Here are the matching tasks in your list! \\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"LeopardMerkava"},"content":"        int index \u003d 1;","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"LeopardMerkava"},"content":"        for (Task task : this) {","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"LeopardMerkava"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"LeopardMerkava"},"content":"                result.append(index)","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"LeopardMerkava"},"content":"                        .append(\". \")","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"LeopardMerkava"},"content":"                        .append(task.toString())","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"LeopardMerkava"},"content":"                        .append(\u0027\\n\u0027);","lastModifiedDate":"2021-08-26"},{"lineNumber":118,"author":{"gitId":"LeopardMerkava"},"content":"                index++;","lastModifiedDate":"2021-08-26"},{"lineNumber":119,"author":{"gitId":"LeopardMerkava"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":121,"author":{"gitId":"LeopardMerkava"},"content":"        return (result.toString().stripTrailing());","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"LeopardMerkava"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"LeopardMerkava":123}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeopardMerkava"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"LeopardMerkava"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"LeopardMerkava"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":" * Class to handle the Deadline task.","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"    private Deadline(String description, LocalDateTime deadline) {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"LeopardMerkava"},"content":"        super(description, \"D\", deadline);","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"LeopardMerkava"},"content":"     * Factory method to create a new deadline","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"LeopardMerkava"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"LeopardMerkava"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"LeopardMerkava"},"content":"     * @param time The time of the deadline.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"LeopardMerkava"},"content":"     * @return A new instance of Deadline.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"LeopardMerkava"},"content":"    public static Deadline create(String description, LocalDateTime time) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"LeopardMerkava"},"content":"        return new Deadline(description, time);","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"LeopardMerkava"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"LeopardMerkava"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"LeopardMerkava"},"content":"        return \u0027[\u0027 + this.taskType + \u0027]\u0027 + \u0027[\u0027 + getStatusIcon()","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"LeopardMerkava"},"content":"                + \u0027]\u0027 + \u0027 \u0027 + this.description","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"LeopardMerkava"},"content":"                + String.format(\" (by: %s)\", this.time.format(formatter));","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"LeopardMerkava"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"LeopardMerkava":31}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeopardMerkava"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"LeopardMerkava"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"LeopardMerkava"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":" * Class to handle the Event task.","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"    private Event(String description, LocalDateTime time) {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"LeopardMerkava"},"content":"        super(description, \"E\", time);","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"LeopardMerkava"},"content":"     * Factory method to create a new event.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"LeopardMerkava"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"LeopardMerkava"},"content":"     * @param description Description of the event.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"LeopardMerkava"},"content":"     * @param time Time of the event.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"LeopardMerkava"},"content":"     * @return a new instance of Event.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"LeopardMerkava"},"content":"    public static Event create(String description, LocalDateTime time) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"LeopardMerkava"},"content":"        return new Event(description, time);","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"LeopardMerkava"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"LeopardMerkava"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"LeopardMerkava"},"content":"        return \"[\" + this.taskType + \"]\" + \"[\" + getStatusIcon() + \"]\" + \" \" + this.description","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"LeopardMerkava"},"content":"                + String.format(\" (at: %s)\", this.time.format(formatter));","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"LeopardMerkava"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"LeopardMerkava":30}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeopardMerkava"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"LeopardMerkava"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"LeopardMerkava"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":" * A base class for all the task which can be put into the TaskList.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"LeopardMerkava"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"public class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"LeopardMerkava"},"content":"    protected String taskType;","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":"    protected String description;","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"    protected LocalDateTime time;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"LeopardMerkava"},"content":"    protected DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd, yyyy HH:mm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"LeopardMerkava"},"content":"     * Construct an instance of Task with only a description.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"LeopardMerkava"},"content":"     * Automatically sets isDone to false.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"LeopardMerkava"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"LeopardMerkava"},"content":"     * @param description Description of the task","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"LeopardMerkava"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"LeopardMerkava"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"LeopardMerkava"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"LeopardMerkava"},"content":"     * Construct an instance of Task with only a description and a taskType.","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"LeopardMerkava"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"LeopardMerkava"},"content":"     * @param description Description of the task","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"LeopardMerkava"},"content":"     * @param taskType Type of the task (event, deadline, etc)","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"LeopardMerkava"},"content":"    public Task(String description, String taskType) {","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"LeopardMerkava"},"content":"        this(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"LeopardMerkava"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"LeopardMerkava"},"content":"     * Construct an instance of Task with description, taskType and a time","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"LeopardMerkava"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"LeopardMerkava"},"content":"     * @param description Description of the task","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"LeopardMerkava"},"content":"     * @param taskType Type of the task (event, deadline, etc)","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"LeopardMerkava"},"content":"     * @param time The time associated with the task","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"LeopardMerkava"},"content":"    public Task(String description, String taskType, LocalDateTime time) {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"LeopardMerkava"},"content":"        this(description, taskType);","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"LeopardMerkava"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"LeopardMerkava"},"content":"    /** Returns \u0027X\u0027 if the task is mark as done, a black space if not **/","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"LeopardMerkava"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"LeopardMerkava"},"content":"        return (isDone? \"X\" : \" \");","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":55,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":56,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"LeopardMerkava"},"content":"     * Changes the isDone of this task to the boolean input","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"LeopardMerkava"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"LeopardMerkava"},"content":"     * @param t boolean input for the isDone property to follow","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"LeopardMerkava"},"content":"    public void markFinished(boolean t){","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"LeopardMerkava"},"content":"        this.isDone \u003d t;","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"LeopardMerkava"},"content":"     * Returns the taskType of the task","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"LeopardMerkava"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"LeopardMerkava"},"content":"     * @return the task type","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"LeopardMerkava"},"content":"    public String getTaskType() {","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"LeopardMerkava"},"content":"        return taskType;","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"LeopardMerkava"},"content":"     * Returns the description of the task","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"LeopardMerkava"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"LeopardMerkava"},"content":"     * @return the description","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"LeopardMerkava"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"LeopardMerkava"},"content":"        return description;","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"LeopardMerkava"},"content":"     * Returns the time associated to the task","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"LeopardMerkava"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"LeopardMerkava"},"content":"     * @return the time in the format of yyyy-MM-dd HH:mm","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"LeopardMerkava"},"content":"    public String getTime() {","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"LeopardMerkava"},"content":"        return time.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":91,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":92,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"LeopardMerkava"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":94,"author":{"gitId":"LeopardMerkava"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":95,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"LeopardMerkava"},"content":"        return \"[\" + taskType + \"]\" + \"[\" + getStatusIcon() + \"]\" + \" \" + this.description;","lastModifiedDate":"2021-08-17"},{"lineNumber":97,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":98,"author":{"gitId":"LeopardMerkava"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"LeopardMerkava":98}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeopardMerkava"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"LeopardMerkava"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"LeopardMerkava"},"content":" * Class to handle ToDo tasks","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"LeopardMerkava"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":"public class ToDo extends Task{","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":"    private ToDo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"LeopardMerkava"},"content":"        super(description, \"T\");","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":"     * Factory method to create a new ToDo.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"LeopardMerkava"},"content":"     * @param description Description of the event.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"LeopardMerkava"},"content":"     * @return a new instance of Event.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"LeopardMerkava"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"LeopardMerkava"},"content":"    public static ToDo create(String description) {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"LeopardMerkava"},"content":"        return new ToDo(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"LeopardMerkava"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"LeopardMerkava":21}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeopardMerkava"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"LeopardMerkava"},"content":"import duke.commands.ToDoCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"LeopardMerkava"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"LeopardMerkava"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"LeopardMerkava"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"    Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"LeopardMerkava"},"content":"    String input1 \u003d \"\";","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":"    String input2 \u003d \"bob\";","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":"    String input3 \u003d \"todo playgames\";","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"LeopardMerkava"},"content":"    void parseTestNullInput() {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"LeopardMerkava"},"content":"        Assertions.assertThrows(DukeExceptions.class, ()-\u003e parser.parse(input1));","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"LeopardMerkava"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"LeopardMerkava"},"content":"    void parseTestUnknownInput() {","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"LeopardMerkava"},"content":"        Assertions.assertThrows(DukeExceptions.class, ()-\u003e parser.parse(input2));","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"LeopardMerkava"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"LeopardMerkava"},"content":"    void parseTestToDoInputNoException() {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"LeopardMerkava"},"content":"        Assertions.assertDoesNotThrow(()-\u003e parser.parse(input3));","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"LeopardMerkava"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"LeopardMerkava"},"content":"    void parseTestToDoInputReturnsToDo() {","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"LeopardMerkava"},"content":"        Object o \u003d new Object();","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"LeopardMerkava"},"content":"        ToDoCommand toDoCommand \u003d new ToDoCommand(ToDo.create(\"t\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"LeopardMerkava"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"LeopardMerkava"},"content":"            o \u003d parser.parse(input3);","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"LeopardMerkava"},"content":"        } catch (DukeExceptions e){","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"LeopardMerkava"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"LeopardMerkava"},"content":"        Assertions.assertEquals(o.getClass(), toDoCommand.getClass());","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"LeopardMerkava"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"LeopardMerkava":39}},{"path":"src/test/java/duke/storage/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeopardMerkava"},"content":"package duke.storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"LeopardMerkava"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"LeopardMerkava"},"content":"import duke.DukeExceptions;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"LeopardMerkava"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"    Task task \u003d new Task(\"desc\", \"s\");","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"LeopardMerkava"},"content":"    TaskList taskList\u003d new TaskList();","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"    //Test to ensure first mark as finished does not throw exception","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"LeopardMerkava"},"content":"    void markAsFinishedTestFirst() {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"LeopardMerkava"},"content":"        taskList.clear();","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"LeopardMerkava"},"content":"        taskList.add(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"LeopardMerkava"},"content":"        Assertions.assertDoesNotThrow(() -\u003e taskList.markAsFinished(0));","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"LeopardMerkava"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"LeopardMerkava"},"content":"    //Test to ensure second mark as finished does throw a DukeException","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"LeopardMerkava"},"content":"    void markAsFinishedTestSecond() {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"LeopardMerkava"},"content":"        taskList.clear();","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"LeopardMerkava"},"content":"        taskList.add(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"LeopardMerkava"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"LeopardMerkava"},"content":"            taskList.markAsFinished(0);","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"LeopardMerkava"},"content":"        } catch (DukeExceptions e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"LeopardMerkava"},"content":"            System.out.println(\"First test must\u0027ve failed\");","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"LeopardMerkava"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"LeopardMerkava"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"LeopardMerkava"},"content":"        Assertions.assertThrows(DukeExceptions.class, ()-\u003e taskList.markAsFinished(0));","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"LeopardMerkava"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"LeopardMerkava"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"LeopardMerkava":37}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"LeopardMerkava"},"content":"todo think wisely","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"LeopardMerkava"},"content":"event playgames /at 2021-11-21 14:34","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"LeopardMerkava"},"content":"deadline make bro happy /by 2024-01-01 00:00","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"LeopardMerkava"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"LeopardMerkava"},"content":"done 1","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"LeopardMerkava"},"content":"done 2","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"LeopardMerkava"},"content":"done 3","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"LeopardMerkava"},"content":"done 1","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"LeopardMerkava"},"content":"done 2","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"LeopardMerkava"},"content":"done 3","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"LeopardMerkava"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"LeopardMerkava"},"content":"lol","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"LeopardMerkava"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"LeopardMerkava"},"content":"done","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"LeopardMerkava"},"content":"done bob","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"LeopardMerkava"},"content":"done 2 bob","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"LeopardMerkava"},"content":"done 2 /at paringan","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"LeopardMerkava"},"content":"event terina","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"LeopardMerkava"},"content":"event terina /at","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"LeopardMerkava"},"content":"event /at 2020","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"LeopardMerkava"},"content":"event terina /at 2020","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"LeopardMerkava"},"content":"deadline","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"LeopardMerkava"},"content":"deadline terina","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"LeopardMerkava"},"content":"deadline terina /by","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"LeopardMerkava"},"content":"deadline /by 2020","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"LeopardMerkava"},"content":"deadline terina /by 2020","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"LeopardMerkava"},"content":"list 34","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"LeopardMerkava"},"content":"done 265","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"LeopardMerkava"},"content":"delete 3","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"LeopardMerkava"},"content":"delete 2","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"LeopardMerkava"},"content":"delete 1","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"LeopardMerkava"},"content":"bye","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"LeopardMerkava"},"content":"","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"LeopardMerkava":34}}]
