[{"path":"src/main/java/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TLChicken"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"TLChicken"},"content":" *  This class encapsulates a Task element of Deadline type in Duke\u0027s TDList, and features","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"TLChicken"},"content":" *  various methods to manipulate the Task.","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"TLChicken"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"TLChicken"},"content":"public class DeadlineTask extends TDLTask {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"TLChicken"},"content":"    String byWhen;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"TLChicken"},"content":"    public DeadlineTask(String taskName, String byWhen) {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"TLChicken"},"content":"        super(taskName);","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"TLChicken"},"content":"        this.byWhen \u003d byWhen;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"TLChicken"},"content":"     * Gets the type of the Task in enum form.","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"TLChicken"},"content":"     * @return the enum representing the type of the current task.","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"TLChicken"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"TLChicken"},"content":"    public TaskType getTaskType() {","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"TLChicken"},"content":"        return TaskType.DEADLINE;","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"TLChicken"},"content":"     * Returns a string containing the letter representing the task type in square brackets.","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"TLChicken"},"content":"     * @return a string containing [X] where X is the letter representing the task type.","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"TLChicken"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"TLChicken"},"content":"    public String getTaskTypeStringHeader() {","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"TLChicken"},"content":"        return \"[D]\";","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"TLChicken"},"content":"     * Returns a string containing the task\u0027s name and additional descriptions if applicable.","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"TLChicken"},"content":"     * @return the string describing the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"TLChicken"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"TLChicken"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"TLChicken"},"content":"        return this.getTaskName() + \"(by: \" + this.byWhen + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"TLChicken"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"TLChicken":45}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TLChicken"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"TLChicken"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"TLChicken"},"content":"    /* Default line separator design. */","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"TLChicken"},"content":"    private static String sepLine \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"TLChicken"},"content":"    private static String sepLineOpen \u003d \"///\u003c\u003c\u003c\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Duke Says: \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003e\u003e\u003e\\\\\\\\\\\\\";","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"TLChicken"},"content":"    private static String sepLineClose \u003d \"\\\\\\\\\\\\\u003c\u003c\u003c\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003e\u003e\u003e///\";","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"TLChicken"},"content":"    private static TDList currTDL;","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"TLChicken"},"content":"        //Initialize variables","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"TLChicken"},"content":"        currTDL \u003d new TDList();","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"TLChicken"},"content":"        System.out.println(\"Give me something to do!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"TLChicken"},"content":"        System.out.println(sepLine);","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"TLChicken"},"content":"        runInputLoopMain();","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"TLChicken"},"content":"     * The main loop used when detecting keyboard input.","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"TLChicken"},"content":"     * Stops when \"bye\" is detected.","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"TLChicken"},"content":"    private static void runInputLoopMain() {","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"TLChicken"},"content":"        /* Create scanner for detecting input. */","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"TLChicken"},"content":"        Scanner currScanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"TLChicken"},"content":"        /* Stores last input by user. */","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"TLChicken"},"content":"        String lastInput \u003d null;","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"TLChicken"},"content":"        while (true) {","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"TLChicken"},"content":"            System.out.println(\"\");","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"TLChicken"},"content":"            lastInput \u003d currScanner.nextLine();","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"TLChicken"},"content":"            if (lastInput.equals(\"bye\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"TLChicken"},"content":"                break;","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"TLChicken"},"content":"            } else if (lastInput.equals(\"list\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"TLChicken"},"content":"                listOutTDL();","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"TLChicken"},"content":"            } else if (lastInput.length() \u003e\u003d 6 \u0026\u0026 lastInput.substring(0, 4).equals(\"done\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"TLChicken"},"content":"                markItemDoneInTDL(lastInput);","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"TLChicken"},"content":"            } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"TLChicken"},"content":"                addToTDL(lastInput);","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"TLChicken"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":55,"author":{"gitId":"TLChicken"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":56,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":57,"author":{"gitId":"TLChicken"},"content":"        dukeExiter();","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":60,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"TLChicken"},"content":"     * Runs when program is going to exit.","lastModifiedDate":"2021-08-17"},{"lineNumber":62,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":63,"author":{"gitId":"TLChicken"},"content":"    private static void dukeExiter() {","lastModifiedDate":"2021-08-17"},{"lineNumber":64,"author":{"gitId":"TLChicken"},"content":"        dukeSays(\"Bye. Hope to see you soon!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":65,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":66,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":67,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":68,"author":{"gitId":"TLChicken"},"content":"     * Used when Duke is supposed to say something.","lastModifiedDate":"2021-08-17"},{"lineNumber":69,"author":{"gitId":"TLChicken"},"content":"     * This would print the message between 2 line separators.","lastModifiedDate":"2021-08-17"},{"lineNumber":70,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":71,"author":{"gitId":"TLChicken"},"content":"     * @param printThis The message to print inside Duke\u0027s text bubble","lastModifiedDate":"2021-08-17"},{"lineNumber":72,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":73,"author":{"gitId":"TLChicken"},"content":"    public static void dukeSays(String printThis) {","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"TLChicken"},"content":"        System.out.println(\"\");","lastModifiedDate":"2021-08-17"},{"lineNumber":75,"author":{"gitId":"TLChicken"},"content":"        System.out.println(sepLineOpen);","lastModifiedDate":"2021-08-17"},{"lineNumber":76,"author":{"gitId":"TLChicken"},"content":"        System.out.println(printThis);","lastModifiedDate":"2021-08-17"},{"lineNumber":77,"author":{"gitId":"TLChicken"},"content":"        System.out.println(sepLineClose);","lastModifiedDate":"2021-08-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":79,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":80,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":81,"author":{"gitId":"TLChicken"},"content":"    private static void addToTDL(String str) {","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"TLChicken"},"content":"        currTDL.tdlAdd(str);","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":84,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":85,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":86,"author":{"gitId":"TLChicken"},"content":"    private static void listOutTDL() {","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"TLChicken"},"content":"        currTDL.printOutTDL();","lastModifiedDate":"2021-08-18"},{"lineNumber":88,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":89,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":90,"author":{"gitId":"TLChicken"},"content":"    private static void markItemDoneInTDL(String command) {","lastModifiedDate":"2021-08-18"},{"lineNumber":91,"author":{"gitId":"TLChicken"},"content":"        String taskNumberStr \u003d command.substring(5);","lastModifiedDate":"2021-08-18"},{"lineNumber":92,"author":{"gitId":"TLChicken"},"content":"        int taskNo \u003d -1;","lastModifiedDate":"2021-08-18"},{"lineNumber":93,"author":{"gitId":"TLChicken"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":94,"author":{"gitId":"TLChicken"},"content":"            taskNo \u003d Integer.parseInt(taskNumberStr);","lastModifiedDate":"2021-08-18"},{"lineNumber":95,"author":{"gitId":"TLChicken"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":96,"author":{"gitId":"TLChicken"},"content":"            dukeSays(\"Please enter an integer.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"TLChicken"},"content":"            return;","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"TLChicken"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":99,"author":{"gitId":"TLChicken"},"content":"        String dukeOutput \u003d currTDL.markTaskAsDone(taskNo);","lastModifiedDate":"2021-08-18"},{"lineNumber":100,"author":{"gitId":"TLChicken"},"content":"        dukeSays(dukeOutput);","lastModifiedDate":"2021-08-18"},{"lineNumber":101,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":102,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":103,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"TLChicken":93,"-":11}},{"path":"src/main/java/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TLChicken"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"TLChicken"},"content":" *  This class encapsulates a Task element of Event type in Duke\u0027s TDList, and features","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"TLChicken"},"content":" *  various methods to manipulate the Task.","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"TLChicken"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"TLChicken"},"content":"public class EventTask extends TDLTask {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"TLChicken"},"content":"    String atContents;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"TLChicken"},"content":"    public EventTask(String taskName, String atContents) {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"TLChicken"},"content":"        super(taskName);","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"TLChicken"},"content":"        this.atContents \u003d atContents;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"TLChicken"},"content":"     * Gets the type of the Task in enum form.","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"TLChicken"},"content":"     * @return the enum representing the type of the current task.","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"TLChicken"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"TLChicken"},"content":"    public TaskType getTaskType() {","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"TLChicken"},"content":"        return TaskType.EVENT;","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"TLChicken"},"content":"     * Returns a string containing the letter representing the task type in square brackets.","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"TLChicken"},"content":"     * @return a string containing [X] where X is the letter representing the task type.","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"TLChicken"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"TLChicken"},"content":"    public String getTaskTypeStringHeader() {","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"TLChicken"},"content":"        return \"[E]\";","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"TLChicken"},"content":"     * Returns a string containing the task\u0027s name and additional descriptions if applicable.","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"TLChicken"},"content":"     * @return the string describing the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"TLChicken"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"TLChicken"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"TLChicken"},"content":"        return this.getTaskName() + \"(at: \" + this.atContents + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"TLChicken"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"TLChicken":45}},{"path":"src/main/java/TDLTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TLChicken"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"TLChicken"},"content":" *  This class encapsulates a Task element in Duke\u0027s TDList, and features","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"TLChicken"},"content":" *  various methods to manipulate the Task.","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"TLChicken"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"TLChicken"},"content":"public class TDLTask {","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"TLChicken"},"content":"    private String taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"TLChicken"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"TLChicken"},"content":"    public enum TaskType {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"TLChicken"},"content":"        NONE,","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"TLChicken"},"content":"        TODO,","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"TLChicken"},"content":"        EVENT,","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"TLChicken"},"content":"        DEADLINE","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"TLChicken"},"content":"     * A constructor used to create a new TDLTask.","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"TLChicken"},"content":"     * @param taskName      The name and description of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"TLChicken"},"content":"    public TDLTask(String taskName) {","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"TLChicken"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"TLChicken"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"TLChicken"},"content":"     * Sets the current task as finished.","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"TLChicken"},"content":"    public void setAsDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"TLChicken"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"TLChicken"},"content":"     * Checks whether the task is finished.","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"TLChicken"},"content":"     * @return true if finished, false if undone.","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"TLChicken"},"content":"    public boolean isTaskDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"TLChicken"},"content":"        return isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"TLChicken"},"content":"     * Gets the name/description of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"TLChicken"},"content":"     * @return the name/description of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"TLChicken"},"content":"    public String getTaskName() {","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"TLChicken"},"content":"        return taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"TLChicken"},"content":"     * Gets the name/description of the task, as well as whether it is done","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"TLChicken"},"content":"     * neatly formatted in one line.","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"TLChicken"},"content":"     * @return the String containing the line describing the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"TLChicken"},"content":"    public String getLineOfTaskInfo() {","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"TLChicken"},"content":"        String taskTypeCheckbox \u003d this.getTaskTypeStringHeader();","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"TLChicken"},"content":"        String doneCheckboxStr \u003d \"\";","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"TLChicken"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"TLChicken"},"content":"            doneCheckboxStr \u003d \"[X]\";","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"TLChicken"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"TLChicken"},"content":"            doneCheckboxStr \u003d \"[ ]\";","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"TLChicken"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"TLChicken"},"content":"        String returnThis \u003d taskTypeCheckbox + doneCheckboxStr + \" \" + this.getTaskDescription();","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"TLChicken"},"content":"        return returnThis;","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"TLChicken"},"content":"     * Gets the type of the Task in enum form.","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"TLChicken"},"content":"     * @return the enum representing the type of the current task.","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"TLChicken"},"content":"    public TaskType getTaskType() {","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"TLChicken"},"content":"        return TaskType.NONE;","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"TLChicken"},"content":"     * Returns a string containing the letter representing the task type in square brackets.","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"TLChicken"},"content":"     * @return a string containing [X] where X is the letter representing the task type.","lastModifiedDate":"2021-08-18"},{"lineNumber":85,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"TLChicken"},"content":"    public String getTaskTypeStringHeader() {","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"TLChicken"},"content":"        return \"[ ]\";","lastModifiedDate":"2021-08-18"},{"lineNumber":88,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":89,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":90,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":91,"author":{"gitId":"TLChicken"},"content":"     * Returns a string containing the task\u0027s name and additional descriptions if applicable.","lastModifiedDate":"2021-08-18"},{"lineNumber":92,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":93,"author":{"gitId":"TLChicken"},"content":"     * @return the string describing the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":94,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":95,"author":{"gitId":"TLChicken"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2021-08-18"},{"lineNumber":96,"author":{"gitId":"TLChicken"},"content":"        return this.getTaskName();","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":99,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":100,"author":{"gitId":"TLChicken"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"TLChicken":100}},{"path":"src/main/java/TDList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TLChicken"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"TLChicken"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"TLChicken"},"content":" * This class encapsulates the list element that Duke uses to store tasks.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"TLChicken"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"TLChicken"},"content":"public class TDList {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"TLChicken"},"content":"    private ArrayList\u003cTDLTask\u003e toDoList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"TLChicken"},"content":"    public TDList() {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"TLChicken"},"content":"     * Used for adding things to the to do list.","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"TLChicken"},"content":"     * @param str   Thing to add to the list.","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"TLChicken"},"content":"    public void tdlAdd(String str) {","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"TLChicken"},"content":"        TDLTask.TaskType currTaskType \u003d checkTaskType(str);","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"TLChicken"},"content":"        TDLTask createdTask;","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"TLChicken"},"content":"        int indexOfSlash \u003d -1;","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"TLChicken"},"content":"        switch (currTaskType) {","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"TLChicken"},"content":"        case TODO:","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"TLChicken"},"content":"            createdTask \u003d new ToDosTask(str);","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"TLChicken"},"content":"            break;","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"TLChicken"},"content":"        case EVENT:","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"TLChicken"},"content":"            indexOfSlash \u003d str.indexOf(\"/at\");","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"TLChicken"},"content":"            if (indexOfSlash \u003d\u003d -1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"TLChicken"},"content":"                Duke.dukeSays(\"Something is wrong with your Event task.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"TLChicken"},"content":"                return;","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"TLChicken"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"TLChicken"},"content":"            String eventTaskName \u003d str.substring(6, indexOfSlash);","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"TLChicken"},"content":"            String eventAtWhere \u003d \"\";","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"TLChicken"},"content":"            try {","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"TLChicken"},"content":"                eventAtWhere \u003d str.substring(indexOfSlash + 4);","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"TLChicken"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"TLChicken"},"content":"                Duke.dukeSays(\"Adding a event description is required.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"TLChicken"},"content":"                return;","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"TLChicken"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"TLChicken"},"content":"            createdTask \u003d new EventTask(eventTaskName, eventAtWhere);","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"TLChicken"},"content":"            break;","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"TLChicken"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"TLChicken"},"content":"            indexOfSlash \u003d str.indexOf(\"/by\");","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"TLChicken"},"content":"            if (indexOfSlash \u003d\u003d -1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"TLChicken"},"content":"                Duke.dukeSays(\"Something is wrong with your Deadline task.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"TLChicken"},"content":"                return;","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"TLChicken"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"TLChicken"},"content":"            String deadlineTaskName \u003d str.substring(9, indexOfSlash);","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"TLChicken"},"content":"            String deadlineByWhen;","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"TLChicken"},"content":"            try {","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"TLChicken"},"content":"                deadlineByWhen \u003d str.substring(indexOfSlash + 4);","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"TLChicken"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"TLChicken"},"content":"                Duke.dukeSays(\"Adding a deadline description is required\");","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"TLChicken"},"content":"                return;","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"TLChicken"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"TLChicken"},"content":"            createdTask \u003d new DeadlineTask(deadlineTaskName, deadlineByWhen);","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"TLChicken"},"content":"            break;","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"TLChicken"},"content":"        default:","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"TLChicken"},"content":"            createdTask \u003d new TDLTask(str);","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"TLChicken"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"TLChicken"},"content":"        toDoList.add(createdTask);","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"TLChicken"},"content":"        Duke.dukeSays(\"Ok, I have added this task: \\n\" + createdTask.getLineOfTaskInfo()","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"TLChicken"},"content":"            + \"\\nCurrent total amount of tasks in list: \" + toDoList.size());","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"TLChicken"},"content":"    private TDLTask.TaskType checkTaskType(String command) {","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"TLChicken"},"content":"        if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"TLChicken"},"content":"            return TDLTask.TaskType.DEADLINE;","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"TLChicken"},"content":"        } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"TLChicken"},"content":"            return  TDLTask.TaskType.EVENT;","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"TLChicken"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"TLChicken"},"content":"            return TDLTask.TaskType.TODO;","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"TLChicken"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":85,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":88,"author":{"gitId":"TLChicken"},"content":"     * Used to mark the corresponding task as done.","lastModifiedDate":"2021-08-18"},{"lineNumber":89,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":90,"author":{"gitId":"TLChicken"},"content":"     * @param taskNo The task number in the list.","lastModifiedDate":"2021-08-18"},{"lineNumber":91,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":92,"author":{"gitId":"TLChicken"},"content":"     * @return Duke\u0027s output from this command","lastModifiedDate":"2021-08-18"},{"lineNumber":93,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":94,"author":{"gitId":"TLChicken"},"content":"    public String markTaskAsDone(int taskNo) {","lastModifiedDate":"2021-08-18"},{"lineNumber":95,"author":{"gitId":"TLChicken"},"content":"        //Task list starts from 1 instead of 0 so input in command is 1 more than","lastModifiedDate":"2021-08-18"},{"lineNumber":96,"author":{"gitId":"TLChicken"},"content":"        //the task\u0027s index in the list","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"TLChicken"},"content":"        int taskIndex \u003d taskNo - 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":99,"author":{"gitId":"TLChicken"},"content":"        if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c toDoList.size()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":100,"author":{"gitId":"TLChicken"},"content":"            TDLTask currTask \u003d toDoList.get(taskIndex);","lastModifiedDate":"2021-08-18"},{"lineNumber":101,"author":{"gitId":"TLChicken"},"content":"            currTask.setAsDone();","lastModifiedDate":"2021-08-18"},{"lineNumber":102,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":103,"author":{"gitId":"TLChicken"},"content":"            return \"Nice! I\u0027ve marked this task as done:\\n\" + currTask.getLineOfTaskInfo();","lastModifiedDate":"2021-08-18"},{"lineNumber":104,"author":{"gitId":"TLChicken"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":105,"author":{"gitId":"TLChicken"},"content":"            return \"Invalid Task Specified\";","lastModifiedDate":"2021-08-18"},{"lineNumber":106,"author":{"gitId":"TLChicken"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":107,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":108,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":109,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":110,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":111,"author":{"gitId":"TLChicken"},"content":"     * Used to print out contents of the list nicely.","lastModifiedDate":"2021-08-18"},{"lineNumber":112,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":113,"author":{"gitId":"TLChicken"},"content":"    public void printOutTDL() {","lastModifiedDate":"2021-08-18"},{"lineNumber":114,"author":{"gitId":"TLChicken"},"content":"        String printThis \u003d \"\";","lastModifiedDate":"2021-08-18"},{"lineNumber":115,"author":{"gitId":"TLChicken"},"content":"        String nextLine \u003d \"\\n\";","lastModifiedDate":"2021-08-18"},{"lineNumber":116,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":117,"author":{"gitId":"TLChicken"},"content":"        int serialNo \u003d 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":118,"author":{"gitId":"TLChicken"},"content":"        for (TDLTask ele : toDoList) {","lastModifiedDate":"2021-08-18"},{"lineNumber":119,"author":{"gitId":"TLChicken"},"content":"            String endOfCurrLine \u003d nextLine;","lastModifiedDate":"2021-08-18"},{"lineNumber":120,"author":{"gitId":"TLChicken"},"content":"            if (serialNo \u003d\u003d toDoList.size()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":121,"author":{"gitId":"TLChicken"},"content":"                endOfCurrLine \u003d \"\";","lastModifiedDate":"2021-08-18"},{"lineNumber":122,"author":{"gitId":"TLChicken"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":123,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":124,"author":{"gitId":"TLChicken"},"content":"            String currLine \u003d serialNo + \". \" + ele.getLineOfTaskInfo() + endOfCurrLine;","lastModifiedDate":"2021-08-18"},{"lineNumber":125,"author":{"gitId":"TLChicken"},"content":"            printThis \u003d printThis + currLine;","lastModifiedDate":"2021-08-18"},{"lineNumber":126,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":127,"author":{"gitId":"TLChicken"},"content":"            serialNo++;","lastModifiedDate":"2021-08-18"},{"lineNumber":128,"author":{"gitId":"TLChicken"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":129,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":130,"author":{"gitId":"TLChicken"},"content":"        Duke.dukeSays(\"Here are your current tasks: \\n\" + printThis);","lastModifiedDate":"2021-08-18"},{"lineNumber":131,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":132,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":133,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":134,"author":{"gitId":"TLChicken"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"TLChicken":134}},{"path":"src/main/java/ToDosTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TLChicken"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"TLChicken"},"content":" *  This class encapsulates a Task element of ToDo type in Duke\u0027s TDList, and features","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"TLChicken"},"content":" *  various methods to manipulate the Task.","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"TLChicken"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"TLChicken"},"content":"public class ToDosTask extends TDLTask {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"TLChicken"},"content":"    public ToDosTask(String taskName) {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"TLChicken"},"content":"        super(taskName);","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"TLChicken"},"content":"     * Gets the type of the Task in enum form.","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"TLChicken"},"content":"     * @return the enum representing the type of the current task.","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"TLChicken"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"TLChicken"},"content":"    public TaskType getTaskType() {","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"TLChicken"},"content":"        return TaskType.TODO;","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"TLChicken"},"content":"     * Returns a string containing the letter representing the task type in square brackets.","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"TLChicken"},"content":"     * @return a string containing [X] where X is the letter representing the task type.","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"TLChicken"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"TLChicken"},"content":"    public String getTaskTypeStringHeader() {","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"TLChicken"},"content":"        return \"[T]\";","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"TLChicken"},"content":"}","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"TLChicken":36}}]
