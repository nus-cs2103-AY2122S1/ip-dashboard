[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TLChicken"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"TLChicken"},"content":"import duke.Tasks.BaseTask;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"TLChicken"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"TLChicken"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"TLChicken"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"TLChicken"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"TLChicken"},"content":"//    /** Default line separator designs. */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"TLChicken"},"content":"//    private static String sepLine \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"TLChicken"},"content":"//    private static String sepLineOpen \u003d \"///\u003c\u003c\u003c\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Duke Says: \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003e\u003e\u003e\\\\\\\\\\\\\";","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"TLChicken"},"content":"//    private static String sepLineClose \u003d \"\\\\\\\\\\\\\u003c\u003c\u003c\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003e\u003e\u003e///\";","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"TLChicken"},"content":"    /** Tracks whether the exit command was used. */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"TLChicken"},"content":"    private boolean isExited;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"TLChicken"},"content":"    /** Storage and Management of Duke Objects. */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"TLChicken"},"content":"    private static Duke dukeInstance;","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"TLChicken"},"content":"    private DukeCommandParser currDukeCmdParser;","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"TLChicken"},"content":"    private DukeStorageManager currStorageMgr;","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"TLChicken"},"content":"    private DukeUi currUiCtrl;","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"TLChicken"},"content":"    private DukeListMgr currDukeList;","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"TLChicken"},"content":"    private Duke() {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"TLChicken"},"content":"        this.currDukeList \u003d new DukeListMgr();","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"TLChicken"},"content":"        this.currUiCtrl \u003d new DukeUi();","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"TLChicken"},"content":"        this.currDukeCmdParser \u003d new DukeCommandParser();","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"TLChicken"},"content":"        this.isExited \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"TLChicken"},"content":"        // Processes the path to use to access storage file","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"TLChicken"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"TLChicken"},"content":"            Path xmlPath \u003d Paths.get(\"../\", \"dukeDocs\", \"listSave1.xml\");","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"TLChicken"},"content":"            //System.out.println(xmlPath.getFileName());","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"TLChicken"},"content":"            this.currStorageMgr \u003d new DukeStorageManager(xmlPath);","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"TLChicken"},"content":"        } catch (InvalidPathException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"TLChicken"},"content":"            // If there was an error loading the save file, then create a new empty one.","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"TLChicken"},"content":"            this.currStorageMgr \u003d new DukeStorageManager();","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"TLChicken"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"TLChicken"},"content":"     * Use to get the current instance of Duke that is running.","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"TLChicken"},"content":"     * @return the Duke object that is running.","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"TLChicken"},"content":"    public static Duke getCurrDuke() {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"TLChicken"},"content":"        if (dukeInstance \u003d\u003d null) {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"TLChicken"},"content":"            dukeInstance \u003d new Duke();","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"TLChicken"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"TLChicken"},"content":"        return dukeInstance;","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"TLChicken"},"content":"     * Getter for Duke\u0027s Command Parser.","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"TLChicken"},"content":"     * @return the current Duke Command Parser.","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"TLChicken"},"content":"    public DukeCommandParser getCurrDukeCmdParser() {","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"TLChicken"},"content":"        return this.currDukeCmdParser;","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"TLChicken"},"content":"     * Getter for Duke\u0027s Storage Manager.","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"TLChicken"},"content":"     * @return the current Duke Storage Manager.","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"TLChicken"},"content":"    public DukeStorageManager getCurrStorageMgr() {","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"TLChicken"},"content":"        return this.currStorageMgr;","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"TLChicken"},"content":"     * Getter for Duke\u0027s current list manager.","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"TLChicken"},"content":"     * @return the current list manager.","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"TLChicken"},"content":"    public DukeListMgr getCurrListMgr() {","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"TLChicken"},"content":"        return this.currDukeList;","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":92,"author":{"gitId":"TLChicken"},"content":"        Duke currDuke \u003d getCurrDuke();","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":94,"author":{"gitId":"TLChicken"},"content":"        // Show Welcome Message","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"TLChicken"},"content":"        currDuke.currUiCtrl.printWelcomeMessage();","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":97,"author":{"gitId":"TLChicken"},"content":"        // Start accepting input","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"TLChicken"},"content":"        currDuke.runInputLoopMain();","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":100,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":102,"author":{"gitId":"TLChicken"},"content":"     * The main loop used when detecting keyboard input.","lastModifiedDate":"2021-08-17"},{"lineNumber":103,"author":{"gitId":"TLChicken"},"content":"     * Stops when \"bye\" is detected.","lastModifiedDate":"2021-08-17"},{"lineNumber":104,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":105,"author":{"gitId":"TLChicken"},"content":"    private void runInputLoopMain() {","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"TLChicken"},"content":"        /* Create scanner for detecting input. */","lastModifiedDate":"2021-08-17"},{"lineNumber":107,"author":{"gitId":"TLChicken"},"content":"        Scanner currScanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-17"},{"lineNumber":108,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":109,"author":{"gitId":"TLChicken"},"content":"        /* Stores last input by user. */","lastModifiedDate":"2021-08-17"},{"lineNumber":110,"author":{"gitId":"TLChicken"},"content":"        String lastInput \u003d null;","lastModifiedDate":"2021-08-17"},{"lineNumber":111,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":112,"author":{"gitId":"TLChicken"},"content":"        while (!this.isExited) {","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"TLChicken"},"content":"            System.out.println(\"\");","lastModifiedDate":"2021-08-17"},{"lineNumber":114,"author":{"gitId":"TLChicken"},"content":"            lastInput \u003d currScanner.nextLine();","lastModifiedDate":"2021-08-17"},{"lineNumber":115,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":116,"author":{"gitId":"TLChicken"},"content":"            try {","lastModifiedDate":"2021-08-18"},{"lineNumber":117,"author":{"gitId":"TLChicken"},"content":"                this.processCmdInput(lastInput);","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"TLChicken"},"content":"            } catch (DukeExceptionBase dukeE) {","lastModifiedDate":"2021-08-18"},{"lineNumber":119,"author":{"gitId":"TLChicken"},"content":"                dukeE.dukeSayErrorMsg();","lastModifiedDate":"2021-08-18"},{"lineNumber":120,"author":{"gitId":"TLChicken"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":121,"author":{"gitId":"TLChicken"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":122,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":123,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":124,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":125,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":126,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":127,"author":{"gitId":"TLChicken"},"content":"     * Runs to process the command input using the command parser.","lastModifiedDate":"2021-08-25"},{"lineNumber":128,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":129,"author":{"gitId":"TLChicken"},"content":"     * @param lastInput   The command to process.","lastModifiedDate":"2021-08-18"},{"lineNumber":130,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":131,"author":{"gitId":"TLChicken"},"content":"    private void processCmdInput(String lastInput) throws DukeExceptionBase {","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"TLChicken"},"content":"        // Get the type of command that this input represents","lastModifiedDate":"2021-08-25"},{"lineNumber":133,"author":{"gitId":"TLChicken"},"content":"        DukeCommandParser.CommandType cmdType \u003d this.currDukeCmdParser.parse(lastInput);","lastModifiedDate":"2021-08-25"},{"lineNumber":134,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":135,"author":{"gitId":"TLChicken"},"content":"        BaseTask.TaskType currTaskType \u003d BaseTask.checkTaskType(lastInput);","lastModifiedDate":"2021-08-25"},{"lineNumber":136,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":137,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":138,"author":{"gitId":"TLChicken"},"content":"        if (cmdType \u003d\u003d DukeCommandParser.CommandType.BYE) {","lastModifiedDate":"2021-08-25"},{"lineNumber":139,"author":{"gitId":"TLChicken"},"content":"            this.dukeExiter();","lastModifiedDate":"2021-08-25"},{"lineNumber":140,"author":{"gitId":"TLChicken"},"content":"        } else if (cmdType \u003d\u003d DukeCommandParser.CommandType.LIST) {","lastModifiedDate":"2021-08-25"},{"lineNumber":141,"author":{"gitId":"TLChicken"},"content":"            this.listOutTDL();","lastModifiedDate":"2021-08-25"},{"lineNumber":142,"author":{"gitId":"TLChicken"},"content":"        } else if (cmdType \u003d\u003d DukeCommandParser.CommandType.MARK_TASK_DONE) {","lastModifiedDate":"2021-08-25"},{"lineNumber":143,"author":{"gitId":"TLChicken"},"content":"            this.markItemDoneInTDL(lastInput);","lastModifiedDate":"2021-08-25"},{"lineNumber":144,"author":{"gitId":"TLChicken"},"content":"        } else if (cmdType \u003d\u003d DukeCommandParser.CommandType.DEL_TASK) {","lastModifiedDate":"2021-08-25"},{"lineNumber":145,"author":{"gitId":"TLChicken"},"content":"            this.deleteTaskInTDL(lastInput);","lastModifiedDate":"2021-08-25"},{"lineNumber":146,"author":{"gitId":"TLChicken"},"content":"        } else if (cmdType \u003d\u003d DukeCommandParser.CommandType.ADD_TASK) {","lastModifiedDate":"2021-08-25"},{"lineNumber":147,"author":{"gitId":"TLChicken"},"content":"            this.addToTDL(lastInput, currTaskType);","lastModifiedDate":"2021-08-25"},{"lineNumber":148,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":149,"author":{"gitId":"TLChicken"},"content":"        } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":150,"author":{"gitId":"TLChicken"},"content":"            unknownCommandEntered();","lastModifiedDate":"2021-08-18"},{"lineNumber":151,"author":{"gitId":"TLChicken"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":152,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":153,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":154,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":155,"author":{"gitId":"TLChicken"},"content":"     * Runs when program is going to exit.","lastModifiedDate":"2021-08-17"},{"lineNumber":156,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":157,"author":{"gitId":"TLChicken"},"content":"    private void dukeExiter() {","lastModifiedDate":"2021-08-25"},{"lineNumber":158,"author":{"gitId":"TLChicken"},"content":"        dukeSays(\"Bye. Hope to see you soon!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":159,"author":{"gitId":"TLChicken"},"content":"        this.isExited \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":160,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":161,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":162,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":163,"author":{"gitId":"TLChicken"},"content":"     * Used when Duke is supposed to say something.","lastModifiedDate":"2021-08-17"},{"lineNumber":164,"author":{"gitId":"TLChicken"},"content":"     * This would print the message between 2 line separators.","lastModifiedDate":"2021-08-17"},{"lineNumber":165,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":166,"author":{"gitId":"TLChicken"},"content":"     * @param printThis The message to print inside Duke\u0027s text bubble","lastModifiedDate":"2021-08-17"},{"lineNumber":167,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":168,"author":{"gitId":"TLChicken"},"content":"    public static void dukeSays(String printThis) {","lastModifiedDate":"2021-08-18"},{"lineNumber":169,"author":{"gitId":"TLChicken"},"content":"        Duke currDuke \u003d Duke.getCurrDuke();","lastModifiedDate":"2021-08-25"},{"lineNumber":170,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":171,"author":{"gitId":"TLChicken"},"content":"        // Updated to work with new UI Controller which contains a buffer","lastModifiedDate":"2021-08-25"},{"lineNumber":172,"author":{"gitId":"TLChicken"},"content":"        currDuke.currUiCtrl.addToDukeBuffer(printThis);","lastModifiedDate":"2021-08-25"},{"lineNumber":173,"author":{"gitId":"TLChicken"},"content":"        currDuke.currUiCtrl.dukeBufferRelease();","lastModifiedDate":"2021-08-25"},{"lineNumber":174,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":175,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":176,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":177,"author":{"gitId":"TLChicken"},"content":"     * Used to add something that Duke will say later into it\u0027s UI buffer.","lastModifiedDate":"2021-08-25"},{"lineNumber":178,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":179,"author":{"gitId":"TLChicken"},"content":"     * @param printLater The message that Duke will say when the buffer is released.","lastModifiedDate":"2021-08-25"},{"lineNumber":180,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":181,"author":{"gitId":"TLChicken"},"content":"    public static void dukeLaterSay(String printLater) {","lastModifiedDate":"2021-08-25"},{"lineNumber":182,"author":{"gitId":"TLChicken"},"content":"        Duke currDuke \u003d Duke.getCurrDuke();","lastModifiedDate":"2021-08-25"},{"lineNumber":183,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":184,"author":{"gitId":"TLChicken"},"content":"        currDuke.currUiCtrl.addToDukeBuffer(printLater);","lastModifiedDate":"2021-08-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":186,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":187,"author":{"gitId":"TLChicken"},"content":"    private void unknownCommandEntered() throws DukeExceptionBase {","lastModifiedDate":"2021-08-25"},{"lineNumber":188,"author":{"gitId":"TLChicken"},"content":"        throw new DukeExceptionBase(\"Please enter something valid!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":189,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":190,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":191,"author":{"gitId":"TLChicken"},"content":"    private void addToTDL(String str, BaseTask.TaskType currTaskType) throws DukeExceptionBase {","lastModifiedDate":"2021-08-25"},{"lineNumber":192,"author":{"gitId":"TLChicken"},"content":"        this.currDukeList.tdlAdd(str, currTaskType);","lastModifiedDate":"2021-08-25"},{"lineNumber":193,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":194,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":195,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":196,"author":{"gitId":"TLChicken"},"content":"    private void listOutTDL() {","lastModifiedDate":"2021-08-25"},{"lineNumber":197,"author":{"gitId":"TLChicken"},"content":"        this.currDukeList.printOutWholeList();","lastModifiedDate":"2021-08-25"},{"lineNumber":198,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":199,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":200,"author":{"gitId":"TLChicken"},"content":"    private void markItemDoneInTDL(String command) throws DukeExceptionBase {","lastModifiedDate":"2021-08-25"},{"lineNumber":201,"author":{"gitId":"TLChicken"},"content":"        if (command.length() \u003c 6) {","lastModifiedDate":"2021-08-18"},{"lineNumber":202,"author":{"gitId":"TLChicken"},"content":"            throw new DukeExceptionBase(\"You need to specify a task to set as done.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":203,"author":{"gitId":"TLChicken"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":204,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":205,"author":{"gitId":"TLChicken"},"content":"        String taskNumberStr \u003d command.substring(5);","lastModifiedDate":"2021-08-18"},{"lineNumber":206,"author":{"gitId":"TLChicken"},"content":"        int taskNo \u003d -1;","lastModifiedDate":"2021-08-18"},{"lineNumber":207,"author":{"gitId":"TLChicken"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":208,"author":{"gitId":"TLChicken"},"content":"            taskNo \u003d Integer.parseInt(taskNumberStr);","lastModifiedDate":"2021-08-18"},{"lineNumber":209,"author":{"gitId":"TLChicken"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":210,"author":{"gitId":"TLChicken"},"content":"            throw new DukeExceptionBase(\"Please enter an integer.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":211,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":212,"author":{"gitId":"TLChicken"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":213,"author":{"gitId":"TLChicken"},"content":"        String dukeOutput \u003d this.currDukeList.markTaskAsDone(taskNo);","lastModifiedDate":"2021-08-25"},{"lineNumber":214,"author":{"gitId":"TLChicken"},"content":"        dukeSays(dukeOutput);","lastModifiedDate":"2021-08-18"},{"lineNumber":215,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":216,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":217,"author":{"gitId":"TLChicken"},"content":"    private void deleteTaskInTDL(String command) throws DukeExceptionBase {","lastModifiedDate":"2021-08-25"},{"lineNumber":218,"author":{"gitId":"TLChicken"},"content":"        if (command.length() \u003c 8) {","lastModifiedDate":"2021-08-18"},{"lineNumber":219,"author":{"gitId":"TLChicken"},"content":"            throw new DukeExceptionBase(\"You need to specify a task to delete.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":220,"author":{"gitId":"TLChicken"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":221,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":222,"author":{"gitId":"TLChicken"},"content":"        String taskNumberStr \u003d command.substring(7);","lastModifiedDate":"2021-08-18"},{"lineNumber":223,"author":{"gitId":"TLChicken"},"content":"        int taskNo \u003d -1;","lastModifiedDate":"2021-08-18"},{"lineNumber":224,"author":{"gitId":"TLChicken"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":225,"author":{"gitId":"TLChicken"},"content":"            taskNo \u003d Integer.parseInt(taskNumberStr);","lastModifiedDate":"2021-08-18"},{"lineNumber":226,"author":{"gitId":"TLChicken"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":227,"author":{"gitId":"TLChicken"},"content":"            throw new DukeExceptionBase(\"Please enter an integer.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":228,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":229,"author":{"gitId":"TLChicken"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":230,"author":{"gitId":"TLChicken"},"content":"        String dukeOutput \u003d this.currDukeList.deleteTask(taskNo);","lastModifiedDate":"2021-08-25"},{"lineNumber":231,"author":{"gitId":"TLChicken"},"content":"        dukeSays(dukeOutput);","lastModifiedDate":"2021-08-18"},{"lineNumber":232,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":233,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":234,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"TLChicken":231,"-":4}},{"path":"src/main/java/duke/DukeCommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"TLChicken"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"TLChicken"},"content":"import duke.Tasks.BaseTask;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"TLChicken"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"TLChicken"},"content":" * This class encapsulates the command parser for Duke which process the commands","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"TLChicken"},"content":" * inputted into Duke by users.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"TLChicken"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"TLChicken"},"content":"public class DukeCommandParser {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"TLChicken"},"content":"    public enum CommandType {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"TLChicken"},"content":"        ADD_TASK,","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"TLChicken"},"content":"        BYE,","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"TLChicken"},"content":"        LIST,","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"TLChicken"},"content":"        MARK_TASK_DONE,","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"TLChicken"},"content":"        DEL_TASK,","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"TLChicken"},"content":"        UNKNOWN","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"TLChicken"},"content":"     * Starts up a new command parser for use with Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"TLChicken"},"content":"    public DukeCommandParser() {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"TLChicken"},"content":"    public CommandType parse(String cmd) {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"TLChicken"},"content":"        BaseTask.TaskType currTaskType \u003d BaseTask.checkTaskType(cmd);","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"TLChicken"},"content":"        if (cmd.equals(\"bye\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"TLChicken"},"content":"            return CommandType.BYE;","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"TLChicken"},"content":"        } else if (cmd.equals(\"list\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"TLChicken"},"content":"            return CommandType.LIST;","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"TLChicken"},"content":"        } else if (cmd.length() \u003e\u003d 4 \u0026\u0026 cmd.substring(0, 4).equals(\"done\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"TLChicken"},"content":"            return CommandType.MARK_TASK_DONE;","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"TLChicken"},"content":"        } else if (cmd.length() \u003e\u003d 6 \u0026\u0026 cmd.substring(0, 6).equals(\"delete\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"TLChicken"},"content":"            return CommandType.DEL_TASK;","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"TLChicken"},"content":"        } else if (currTaskType !\u003d BaseTask.TaskType.NONE) {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"TLChicken"},"content":"            return CommandType.ADD_TASK;","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"TLChicken"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"TLChicken"},"content":"            return CommandType.UNKNOWN;","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"TLChicken"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"TLChicken"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"TLChicken":51}},{"path":"src/main/java/duke/DukeExceptionBase.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TLChicken"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"TLChicken"},"content":"public class DukeExceptionBase extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"TLChicken"},"content":"    public String exceptionMsg;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"TLChicken"},"content":"    public DukeExceptionBase(String msg) {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"TLChicken"},"content":"        this.exceptionMsg \u003d msg;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"TLChicken"},"content":"    public void dukeSayErrorMsg() {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"TLChicken"},"content":"        Duke.dukeSays(this.exceptionMsg);","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"TLChicken"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"TLChicken":15}},{"path":"src/main/java/duke/DukeListMgr.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TLChicken"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"TLChicken"},"content":"import duke.Tasks.DeadlineTask;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"TLChicken"},"content":"import duke.Tasks.EventTask;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"TLChicken"},"content":"import duke.Tasks.BaseTask;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"TLChicken"},"content":"import duke.Tasks.ToDosTask;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"TLChicken"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"TLChicken"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"TLChicken"},"content":" * This class encapsulates the list element that Duke uses to store tasks.","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"TLChicken"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"TLChicken"},"content":"public class DukeListMgr {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"TLChicken"},"content":"    private ArrayList\u003cBaseTask\u003e toDoList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"TLChicken"},"content":"    public DukeListMgr() {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"TLChicken"},"content":"     * Used for adding things to the to do list.","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"TLChicken"},"content":"     * @param str   Thing to add to the list.","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"TLChicken"},"content":"     * @param currTaskType The type of the task to add.","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"TLChicken"},"content":"     * @throws DukeExceptionBase when an invalid input is entered.","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"TLChicken"},"content":"    public void tdlAdd(String str, BaseTask.TaskType currTaskType) throws DukeExceptionBase {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"TLChicken"},"content":"        BaseTask createdTask;","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"TLChicken"},"content":"        int indexOfSlash \u003d -1;","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"TLChicken"},"content":"        switch (currTaskType) {","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"TLChicken"},"content":"        case TODO:","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"TLChicken"},"content":"            String todoContents \u003d \"\";","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"TLChicken"},"content":"            try {","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"TLChicken"},"content":"                todoContents \u003d str.substring(5);","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"TLChicken"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"TLChicken"},"content":"                throw new DukeExceptionBase(\"The description of your todo cannot be empty.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"TLChicken"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"TLChicken"},"content":"            createdTask \u003d new ToDosTask(todoContents);","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"TLChicken"},"content":"            break;","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"TLChicken"},"content":"        case EVENT:","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"TLChicken"},"content":"            indexOfSlash \u003d str.indexOf(\"/at\");","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"TLChicken"},"content":"            if (indexOfSlash \u003d\u003d -1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"TLChicken"},"content":"                throw new DukeExceptionBase(\"Your Event task needs a \u0027/at\u0027 description.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"TLChicken"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"TLChicken"},"content":"            String eventTaskName \u003d str.substring(6, indexOfSlash);","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"TLChicken"},"content":"            String eventAtWhere \u003d \"\";","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"TLChicken"},"content":"            try {","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"TLChicken"},"content":"                eventAtWhere \u003d str.substring(indexOfSlash + 4);","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"TLChicken"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"TLChicken"},"content":"                throw new DukeExceptionBase(\"Adding a event description is required.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"TLChicken"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"TLChicken"},"content":"            createdTask \u003d new EventTask(eventTaskName, eventAtWhere);","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"TLChicken"},"content":"            break;","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"TLChicken"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"TLChicken"},"content":"            indexOfSlash \u003d str.indexOf(\"/by\");","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"TLChicken"},"content":"            if (indexOfSlash \u003d\u003d -1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"TLChicken"},"content":"                throw new DukeExceptionBase(\"Your Deadline task needs a \u0027/by\u0027 description.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"TLChicken"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"TLChicken"},"content":"            String deadlineTaskName \u003d str.substring(9, indexOfSlash);","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"TLChicken"},"content":"            String deadlineByWhen;","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"TLChicken"},"content":"            try {","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"TLChicken"},"content":"                deadlineByWhen \u003d str.substring(indexOfSlash + 4);","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"TLChicken"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"TLChicken"},"content":"                throw new DukeExceptionBase(\"Adding a deadline description is required.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"TLChicken"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"TLChicken"},"content":"            createdTask \u003d new DeadlineTask(deadlineTaskName, deadlineByWhen);","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"TLChicken"},"content":"            break;","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"TLChicken"},"content":"        default:","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"TLChicken"},"content":"            throw new DukeExceptionBase(\"Wrong type of task input to tdlAdd.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"TLChicken"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"TLChicken"},"content":"        toDoList.add(createdTask);","lastModifiedDate":"2021-08-18"},{"lineNumber":85,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"TLChicken"},"content":"        Duke.dukeSays(\"Ok, I have added this task: \\n\" + createdTask.getLineOfTaskInfo()","lastModifiedDate":"2021-08-18"},{"lineNumber":88,"author":{"gitId":"TLChicken"},"content":"            + \"\\nCurrent total amount of tasks in list: \" + toDoList.size());","lastModifiedDate":"2021-08-18"},{"lineNumber":89,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":90,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":91,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":92,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":93,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":94,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":95,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":96,"author":{"gitId":"TLChicken"},"content":"     * Used to mark the corresponding task as done.","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"TLChicken"},"content":"     * @param taskNo The task number in the list.","lastModifiedDate":"2021-08-18"},{"lineNumber":99,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":100,"author":{"gitId":"TLChicken"},"content":"     * @return Duke\u0027s output from this command","lastModifiedDate":"2021-08-18"},{"lineNumber":101,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":102,"author":{"gitId":"TLChicken"},"content":"     * @throws DukeExceptionBase when an invalid task is specified or if task is already done.","lastModifiedDate":"2021-08-18"},{"lineNumber":103,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":104,"author":{"gitId":"TLChicken"},"content":"    public String markTaskAsDone(int taskNo) throws DukeExceptionBase {","lastModifiedDate":"2021-08-18"},{"lineNumber":105,"author":{"gitId":"TLChicken"},"content":"        //Task list starts from 1 instead of 0 so input in command is 1 more than","lastModifiedDate":"2021-08-18"},{"lineNumber":106,"author":{"gitId":"TLChicken"},"content":"        //the task\u0027s index in the list","lastModifiedDate":"2021-08-18"},{"lineNumber":107,"author":{"gitId":"TLChicken"},"content":"        int taskIndex \u003d taskNo - 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":108,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":109,"author":{"gitId":"TLChicken"},"content":"        if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c toDoList.size()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":110,"author":{"gitId":"TLChicken"},"content":"            BaseTask currTask \u003d toDoList.get(taskIndex);","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"TLChicken"},"content":"            currTask.setAsDone();","lastModifiedDate":"2021-08-18"},{"lineNumber":112,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":113,"author":{"gitId":"TLChicken"},"content":"            return \"Nice! I\u0027ve marked this task as done:\\n\" + currTask.getLineOfTaskInfo();","lastModifiedDate":"2021-08-18"},{"lineNumber":114,"author":{"gitId":"TLChicken"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":115,"author":{"gitId":"TLChicken"},"content":"            throw new DukeExceptionBase(\"Invalid Task Specified\");","lastModifiedDate":"2021-08-18"},{"lineNumber":116,"author":{"gitId":"TLChicken"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":117,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":118,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":119,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":120,"author":{"gitId":"TLChicken"},"content":"     * Used to delete tasks from the list.","lastModifiedDate":"2021-08-18"},{"lineNumber":121,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":122,"author":{"gitId":"TLChicken"},"content":"     * @param taskNo The task number to delete.","lastModifiedDate":"2021-08-18"},{"lineNumber":123,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":124,"author":{"gitId":"TLChicken"},"content":"     * @return Duke\u0027s output from this command","lastModifiedDate":"2021-08-18"},{"lineNumber":125,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":126,"author":{"gitId":"TLChicken"},"content":"     * @throws DukeExceptionBase when an invalid task is specified.","lastModifiedDate":"2021-08-18"},{"lineNumber":127,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":128,"author":{"gitId":"TLChicken"},"content":"    public String deleteTask(int taskNo) throws DukeExceptionBase {","lastModifiedDate":"2021-08-18"},{"lineNumber":129,"author":{"gitId":"TLChicken"},"content":"        int taskIndex \u003d taskNo - 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":130,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":131,"author":{"gitId":"TLChicken"},"content":"        if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c toDoList.size()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":132,"author":{"gitId":"TLChicken"},"content":"            BaseTask currTask \u003d toDoList.get(taskIndex);","lastModifiedDate":"2021-08-25"},{"lineNumber":133,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":134,"author":{"gitId":"TLChicken"},"content":"            toDoList.remove(taskIndex);","lastModifiedDate":"2021-08-18"},{"lineNumber":135,"author":{"gitId":"TLChicken"},"content":"            return \"Ok, this task has been removed:\\n\" + currTask.getLineOfTaskInfo()","lastModifiedDate":"2021-08-18"},{"lineNumber":136,"author":{"gitId":"TLChicken"},"content":"                    + \"\\nCurrent total amount of tasks in list: \" + toDoList.size();","lastModifiedDate":"2021-08-18"},{"lineNumber":137,"author":{"gitId":"TLChicken"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":138,"author":{"gitId":"TLChicken"},"content":"            throw new DukeExceptionBase(\"Invalid Task Specified\");","lastModifiedDate":"2021-08-18"},{"lineNumber":139,"author":{"gitId":"TLChicken"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":140,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":141,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":142,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":143,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":144,"author":{"gitId":"TLChicken"},"content":"     * Used to print out contents of the list nicely.","lastModifiedDate":"2021-08-18"},{"lineNumber":145,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":146,"author":{"gitId":"TLChicken"},"content":"    public void printOutWholeList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":147,"author":{"gitId":"TLChicken"},"content":"        String printThis \u003d \"\";","lastModifiedDate":"2021-08-18"},{"lineNumber":148,"author":{"gitId":"TLChicken"},"content":"        String nextLine \u003d \"\\n\";","lastModifiedDate":"2021-08-18"},{"lineNumber":149,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":150,"author":{"gitId":"TLChicken"},"content":"        int serialNo \u003d 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":151,"author":{"gitId":"TLChicken"},"content":"        for (BaseTask ele : toDoList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":152,"author":{"gitId":"TLChicken"},"content":"            String endOfCurrLine \u003d nextLine;","lastModifiedDate":"2021-08-18"},{"lineNumber":153,"author":{"gitId":"TLChicken"},"content":"            if (serialNo \u003d\u003d toDoList.size()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":154,"author":{"gitId":"TLChicken"},"content":"                endOfCurrLine \u003d \"\";","lastModifiedDate":"2021-08-18"},{"lineNumber":155,"author":{"gitId":"TLChicken"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":156,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":157,"author":{"gitId":"TLChicken"},"content":"            String currLine \u003d serialNo + \". \" + ele.getLineOfTaskInfo() + endOfCurrLine;","lastModifiedDate":"2021-08-18"},{"lineNumber":158,"author":{"gitId":"TLChicken"},"content":"            printThis \u003d printThis + currLine;","lastModifiedDate":"2021-08-18"},{"lineNumber":159,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":160,"author":{"gitId":"TLChicken"},"content":"            serialNo++;","lastModifiedDate":"2021-08-18"},{"lineNumber":161,"author":{"gitId":"TLChicken"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":162,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":163,"author":{"gitId":"TLChicken"},"content":"        Duke.dukeSays(\"Here are your current tasks: \\n\" + printThis);","lastModifiedDate":"2021-08-18"},{"lineNumber":164,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":165,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":166,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":167,"author":{"gitId":"TLChicken"},"content":"     * Triggers the saving of the current state of the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":168,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":169,"author":{"gitId":"TLChicken"},"content":"    public void triggerSaveTasks() {","lastModifiedDate":"2021-08-25"},{"lineNumber":170,"author":{"gitId":"TLChicken"},"content":"        Duke currDuke \u003d Duke.getCurrDuke();","lastModifiedDate":"2021-08-25"},{"lineNumber":171,"author":{"gitId":"TLChicken"},"content":"        currDuke.getCurrStorageMgr().saveCurrentTasks(this.toDoList);","lastModifiedDate":"2021-08-25"},{"lineNumber":172,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":173,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":174,"author":{"gitId":"TLChicken"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"TLChicken":174}},{"path":"src/main/java/duke/DukeStorageManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"TLChicken"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"TLChicken"},"content":"import duke.Tasks.BaseTask;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"TLChicken"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"TLChicken"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"TLChicken"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"TLChicken"},"content":" * This class encapsulates the local storage functions of Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"TLChicken"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"TLChicken"},"content":"public class DukeStorageManager {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"TLChicken"},"content":"     * Loads storage file from the provided path.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"TLChicken"},"content":"     * @param savePath the path to the save file.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"TLChicken"},"content":"    public DukeStorageManager(Path savePath) {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"TLChicken"},"content":"     * Creates a new blank file for use as storage instead of loading.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"TLChicken"},"content":"    public DukeStorageManager() {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"TLChicken"},"content":"     * Triggers saving of the current state of the task list as a XML file.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"TLChicken"},"content":"     * @param listOfTasks The ArrayList containing the tasks to be saved.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"TLChicken"},"content":"    public void saveCurrentTasks(ArrayList\u003cBaseTask\u003e listOfTasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"TLChicken"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"TLChicken":41}},{"path":"src/main/java/duke/DukeUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TLChicken"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"TLChicken"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"TLChicken"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"TLChicken"},"content":" * This class encapsulates the interactions between Duke and the Command Line Interface.","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"TLChicken"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"TLChicken"},"content":"public class DukeUi {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"TLChicken"},"content":"    /** Buffer containing what Duke is going to say. */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"TLChicken"},"content":"    private ArrayList\u003cString\u003e dukeUiBuffer;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"TLChicken"},"content":"    /** Default line separator designs. */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"TLChicken"},"content":"    private static String sepLine \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"TLChicken"},"content":"    private static String sepLineOpen \u003d \"///\u003c\u003c\u003c\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Duke Says: \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003e\u003e\u003e\\\\\\\\\\\\\";","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"TLChicken"},"content":"    private static String sepLineClose \u003d \"\\\\\\\\\\\\\u003c\u003c\u003c\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003e\u003e\u003e///\";","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"TLChicken"},"content":"     * Constructor for a new Duke UI Manager","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"TLChicken"},"content":"    public DukeUi() {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"TLChicken"},"content":"        dukeUiBuffer \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"TLChicken"},"content":"    public void addToDukeBuffer(String addThis) {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"TLChicken"},"content":"        dukeUiBuffer.add(addThis);","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"TLChicken"},"content":"     * Used to release what Duke wants to say from the buffer.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"TLChicken"},"content":"     * This would print the message between 2 line separators.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"TLChicken"},"content":"    public void dukeBufferRelease() {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"TLChicken"},"content":"        System.out.println(\"\");","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"TLChicken"},"content":"        System.out.println(sepLineOpen);","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"TLChicken"},"content":"        for (String dukeLine : dukeUiBuffer) {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"TLChicken"},"content":"            System.out.println(dukeLine);","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"TLChicken"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"TLChicken"},"content":"        System.out.println(sepLineClose);","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"TLChicken"},"content":"        // Clear Duke output buffer so it can accept new lines","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"TLChicken"},"content":"        this.dukeUiBuffer.clear();","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"TLChicken"},"content":"     * Prints the welcome message.","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"TLChicken"},"content":"    public void printWelcomeMessage() {","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"TLChicken"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"TLChicken"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"TLChicken"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"TLChicken"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"TLChicken"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"TLChicken"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"TLChicken"},"content":"        System.out.println(\"Give me something to do!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"TLChicken"},"content":"        System.out.println(sepLine);","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"TLChicken"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"TLChicken":68}},{"path":"src/main/java/duke/Tasks/BaseTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TLChicken"},"content":"package duke.Tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"TLChicken"},"content":"import duke.DukeExceptionBase;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"TLChicken"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"TLChicken"},"content":" *  This class encapsulates a Task element in Duke\u0027s TDList, and features","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"TLChicken"},"content":" *  various methods to manipulate the Task.","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"TLChicken"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"TLChicken"},"content":"public class BaseTask {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"TLChicken"},"content":"    private String taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"TLChicken"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"TLChicken"},"content":"    public enum TaskType {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"TLChicken"},"content":"        NONE,","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"TLChicken"},"content":"        TODO,","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"TLChicken"},"content":"        EVENT,","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"TLChicken"},"content":"        DEADLINE","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"TLChicken"},"content":"     * A constructor used to create a new TDLTask.","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"TLChicken"},"content":"     * @param taskName      The name and description of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"TLChicken"},"content":"    public BaseTask(String taskName) {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"TLChicken"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"TLChicken"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"TLChicken"},"content":"     * Sets the current task as finished.","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"TLChicken"},"content":"     * @throws DukeExceptionBase if the task being marked as done was already done.","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"TLChicken"},"content":"    public void setAsDone() throws DukeExceptionBase {","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"TLChicken"},"content":"        if (isTaskDone()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"TLChicken"},"content":"            throw new DukeExceptionBase(\"The specified task was already done.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"TLChicken"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"TLChicken"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"TLChicken"},"content":"     * Checks whether the task is finished.","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"TLChicken"},"content":"     * @return true if finished, false if undone.","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"TLChicken"},"content":"    public boolean isTaskDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"TLChicken"},"content":"        return isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"TLChicken"},"content":"     * Gets the name/description of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"TLChicken"},"content":"     * @return the name/description of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"TLChicken"},"content":"    public String getTaskName() {","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"TLChicken"},"content":"        return taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"TLChicken"},"content":"     * Gets the name/description of the task, as well as whether it is done","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"TLChicken"},"content":"     * neatly formatted in one line.","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"TLChicken"},"content":"     * @return the String containing the line describing the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"TLChicken"},"content":"    public String getLineOfTaskInfo() {","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"TLChicken"},"content":"        String taskTypeCheckbox \u003d this.getTaskTypeStringHeader();","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"TLChicken"},"content":"        String doneCheckboxStr \u003d \"\";","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"TLChicken"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"TLChicken"},"content":"            doneCheckboxStr \u003d \"[X]\";","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"TLChicken"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"TLChicken"},"content":"            doneCheckboxStr \u003d \"[ ]\";","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"TLChicken"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"TLChicken"},"content":"        String returnThis \u003d taskTypeCheckbox + doneCheckboxStr + \" \" + this.getTaskDescription();","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"TLChicken"},"content":"        return returnThis;","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"TLChicken"},"content":"     * Gets the type of the Task in enum form.","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"TLChicken"},"content":"     * @return the enum representing the type of the current task.","lastModifiedDate":"2021-08-18"},{"lineNumber":85,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"TLChicken"},"content":"    public TaskType getTaskType() {","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"TLChicken"},"content":"        return TaskType.NONE;","lastModifiedDate":"2021-08-18"},{"lineNumber":88,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":89,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":90,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":91,"author":{"gitId":"TLChicken"},"content":"     * Returns a string containing the letter representing the task type in square brackets.","lastModifiedDate":"2021-08-18"},{"lineNumber":92,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":93,"author":{"gitId":"TLChicken"},"content":"     * @return a string containing [X] where X is the letter representing the task type.","lastModifiedDate":"2021-08-18"},{"lineNumber":94,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":95,"author":{"gitId":"TLChicken"},"content":"    public String getTaskTypeStringHeader() {","lastModifiedDate":"2021-08-18"},{"lineNumber":96,"author":{"gitId":"TLChicken"},"content":"        return \"[ ]\";","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":99,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":100,"author":{"gitId":"TLChicken"},"content":"     * Returns a string containing the task\u0027s name and additional descriptions if applicable.","lastModifiedDate":"2021-08-18"},{"lineNumber":101,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":102,"author":{"gitId":"TLChicken"},"content":"     * @return the string describing the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":103,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":104,"author":{"gitId":"TLChicken"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2021-08-18"},{"lineNumber":105,"author":{"gitId":"TLChicken"},"content":"        return this.getTaskName();","lastModifiedDate":"2021-08-18"},{"lineNumber":106,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":107,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":108,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":109,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":110,"author":{"gitId":"TLChicken"},"content":"     * Check the type of task represented by the current command.","lastModifiedDate":"2021-08-18"},{"lineNumber":111,"author":{"gitId":"TLChicken"},"content":"     * @param command The command inputted by the user.","lastModifiedDate":"2021-08-18"},{"lineNumber":112,"author":{"gitId":"TLChicken"},"content":"     * @return the task type. Returns NONE if it is not a task.","lastModifiedDate":"2021-08-18"},{"lineNumber":113,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":114,"author":{"gitId":"TLChicken"},"content":"    public static BaseTask.TaskType checkTaskType(String command) {","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"TLChicken"},"content":"        if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":116,"author":{"gitId":"TLChicken"},"content":"            return BaseTask.TaskType.DEADLINE;","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"TLChicken"},"content":"        } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":118,"author":{"gitId":"TLChicken"},"content":"            return BaseTask.TaskType.EVENT;","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"TLChicken"},"content":"        } else if (command.startsWith(\"todo\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":120,"author":{"gitId":"TLChicken"},"content":"            return BaseTask.TaskType.TODO;","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"TLChicken"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":122,"author":{"gitId":"TLChicken"},"content":"            return BaseTask.TaskType.NONE;","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"TLChicken"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":124,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":125,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":126,"author":{"gitId":"TLChicken"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"TLChicken":126}},{"path":"src/main/java/duke/Tasks/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TLChicken"},"content":"package duke.Tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"TLChicken"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"TLChicken"},"content":" *  This class encapsulates a Task element of Deadline type in Duke\u0027s TDList, and features","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"TLChicken"},"content":" *  various methods to manipulate the Task.","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"TLChicken"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"TLChicken"},"content":"public class DeadlineTask extends BaseTask {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"TLChicken"},"content":"    String byWhen;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"TLChicken"},"content":"    public DeadlineTask(String taskName, String byWhen) {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"TLChicken"},"content":"        super(taskName);","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"TLChicken"},"content":"        this.byWhen \u003d byWhen;","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"TLChicken"},"content":"     * Gets the type of the Task in enum form.","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"TLChicken"},"content":"     * @return the enum representing the type of the current task.","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"TLChicken"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"TLChicken"},"content":"    public TaskType getTaskType() {","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"TLChicken"},"content":"        return TaskType.DEADLINE;","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"TLChicken"},"content":"     * Returns a string containing the letter representing the task type in square brackets.","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"TLChicken"},"content":"     * @return a string containing [X] where X is the letter representing the task type.","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"TLChicken"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"TLChicken"},"content":"    public String getTaskTypeStringHeader() {","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"TLChicken"},"content":"        return \"[D]\";","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"TLChicken"},"content":"     * Returns a string containing the task\u0027s name and additional descriptions if applicable.","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"TLChicken"},"content":"     * @return the string describing the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"TLChicken"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"TLChicken"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"TLChicken"},"content":"        return this.getTaskName() + \"(by: \" + this.byWhen + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"TLChicken"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"TLChicken":47}},{"path":"src/main/java/duke/Tasks/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TLChicken"},"content":"package duke.Tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"TLChicken"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"TLChicken"},"content":" *  This class encapsulates a Task element of Event type in Duke\u0027s TDList, and features","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"TLChicken"},"content":" *  various methods to manipulate the Task.","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"TLChicken"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"TLChicken"},"content":"public class EventTask extends BaseTask {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"TLChicken"},"content":"    String atContents;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"TLChicken"},"content":"    public EventTask(String taskName, String atContents) {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"TLChicken"},"content":"        super(taskName);","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"TLChicken"},"content":"        this.atContents \u003d atContents;","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"TLChicken"},"content":"     * Gets the type of the Task in enum form.","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"TLChicken"},"content":"     * @return the enum representing the type of the current task.","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"TLChicken"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"TLChicken"},"content":"    public TaskType getTaskType() {","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"TLChicken"},"content":"        return TaskType.EVENT;","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"TLChicken"},"content":"     * Returns a string containing the letter representing the task type in square brackets.","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"TLChicken"},"content":"     * @return a string containing [X] where X is the letter representing the task type.","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"TLChicken"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"TLChicken"},"content":"    public String getTaskTypeStringHeader() {","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"TLChicken"},"content":"        return \"[E]\";","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"TLChicken"},"content":"     * Returns a string containing the task\u0027s name and additional descriptions if applicable.","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"TLChicken"},"content":"     * @return the string describing the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"TLChicken"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"TLChicken"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"TLChicken"},"content":"        return this.getTaskName() + \"(at: \" + this.atContents + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"TLChicken"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"TLChicken":47}},{"path":"src/main/java/duke/Tasks/ToDosTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TLChicken"},"content":"package duke.Tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"TLChicken"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"TLChicken"},"content":" *  This class encapsulates a Task element of ToDo type in Duke\u0027s TDList, and features","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"TLChicken"},"content":" *  various methods to manipulate the Task.","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"TLChicken"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"TLChicken"},"content":"public class ToDosTask extends BaseTask {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"TLChicken"},"content":"    public ToDosTask(String taskName) {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"TLChicken"},"content":"        super(taskName);","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"TLChicken"},"content":"     * Gets the type of the Task in enum form.","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"TLChicken"},"content":"     * @return the enum representing the type of the current task.","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"TLChicken"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"TLChicken"},"content":"    public TaskType getTaskType() {","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"TLChicken"},"content":"        return TaskType.TODO;","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"TLChicken"},"content":"     * Returns a string containing the letter representing the task type in square brackets.","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"TLChicken"},"content":"     * @return a string containing [X] where X is the letter representing the task type.","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"TLChicken"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"TLChicken"},"content":"    public String getTaskTypeStringHeader() {","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"TLChicken"},"content":"        return \"[T]\";","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"TLChicken"},"content":"}","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"TLChicken":38}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"TLChicken"},"content":"todo Read Book","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"TLChicken"},"content":"todo item number 2","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"TLChicken"},"content":"event go there /at 2 min","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"TLChicken"},"content":"done 3","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"TLChicken"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"TLChicken"},"content":"deadline finish Week 2 Tasks /by Thursday","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"TLChicken"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"TLChicken"},"content":"todo Task Number 5","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"TLChicken"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"TLChicken"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"TLChicken":10}}]
