[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lethiciars"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lethiciars"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lethiciars"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lethiciars"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lethiciars"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"lethiciars"},"content":" * A Task that needs to be done before a specific date/time.","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"lethiciars"},"content":" *","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"lethiciars"},"content":" * @author Lethicia","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"lethiciars"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"lethiciars"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lethiciars"},"content":"    /** date/time by which task must be done. */","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"lethiciars"},"content":"    protected LocalDate by;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"lethiciars"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"lethiciars"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"lethiciars"},"content":"     * Constructor for a Deadline task.","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"lethiciars"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"lethiciars"},"content":"     * @param description the title or description for the task","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"lethiciars"},"content":"     * @param by date/time by which task must be done.","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"lethiciars"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"lethiciars"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"lethiciars"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"lethiciars"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"lethiciars"},"content":"            LocalDate date \u003d LocalDate.parse(by);","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"lethiciars"},"content":"            this.by \u003d date;","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"lethiciars"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"lethiciars"},"content":"            System.out.println(\"Incorrect date format.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"lethiciars"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"lethiciars"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"lethiciars"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"lethiciars"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"lethiciars"},"content":"     * Constructor for a Deadline task.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"lethiciars"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"lethiciars"},"content":"     * @param description the title or description for the task","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"lethiciars"},"content":"     * @param by date/time by which task must be done.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"lethiciars"},"content":"     * @param status boolean indicating true if task is done, false otherwise.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"lethiciars"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"lethiciars"},"content":"    public Deadline(String description, String by, boolean status) {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"lethiciars"},"content":"        super(description);","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"lethiciars"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"lethiciars"},"content":"            LocalDate date \u003d LocalDate.parse(by);","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"lethiciars"},"content":"            this.by \u003d date;","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"lethiciars"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"lethiciars"},"content":"            System.out.println(\"Incorrect date format stored.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"lethiciars"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"lethiciars"},"content":"        super.isDone \u003d status;","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"lethiciars"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"lethiciars"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"lethiciars"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"lethiciars"},"content":"     * Returns the file\u0027s details in the format \"D,\u003cisDone\u003e,\u003cdesc\u003e,\u003ctime\u003e\"","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"lethiciars"},"content":"     * to be stored in the hard disk.","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"lethiciars"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"lethiciars"},"content":"     * @return formatted string containing task details","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"lethiciars"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"lethiciars"},"content":"    public String getText() {","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"lethiciars"},"content":"        return String.format(\"D,%s,%s,%s\\n\", this.isDone, this.description, this.by);","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"lethiciars"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"lethiciars"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"lethiciars"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"lethiciars"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"lethiciars"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"lethiciars"},"content":"        String formattedDate \u003d this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"lethiciars"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formattedDate + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"lethiciars"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"lethiciars"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lethiciars":64}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lethiciars"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lethiciars"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lethiciars"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lethiciars"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lethiciars"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"lethiciars"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"lethiciars"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"lethiciars"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lethiciars"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"lethiciars"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lethiciars"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"lethiciars"},"content":" * This program is a chatbot that helps keep track of various tasks.","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"lethiciars"},"content":" *","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"lethiciars"},"content":" * @author Lethicia Renissa Santoso (G12)","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"lethiciars"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"lethiciars"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"lethiciars"},"content":"    private static final String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"lethiciars"},"content":"    private static Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"lethiciars"},"content":"    private static String filePath \u003d \"data/duke.txt\";","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"lethiciars"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"lethiciars"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"lethiciars"},"content":"     * The program reads commands given by the user to perform different","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"lethiciars"},"content":"     * task tracking functionalities.","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"lethiciars"},"content":"     * @param args Command line arguments","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"lethiciars"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"lethiciars"},"content":"        Duke.greet();","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"lethiciars"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"lethiciars"},"content":"        File f \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"lethiciars"},"content":"        if (!f.exists()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"lethiciars"},"content":"            f.getParentFile().mkdirs();","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"lethiciars"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"lethiciars"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"lethiciars"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"lethiciars"},"content":"            loadTasks(filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"lethiciars"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"lethiciars"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"lethiciars"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"lethiciars"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"lethiciars"},"content":"        String input \u003d scan.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"lethiciars"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"lethiciars"},"content":"            System.out.println(\"_______________________\");","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"lethiciars"},"content":"            try {","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"lethiciars"},"content":"                if (input.equals(\"list\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"lethiciars"},"content":"                    Duke.listTasks();","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"lethiciars"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"lethiciars"},"content":"                } else if (input.matches(\"done (.*)\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"lethiciars"},"content":"                    String index \u003d input.substring(5);","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"lethiciars"},"content":"                    Duke.doneTask(index);","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"lethiciars"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"lethiciars"},"content":"                } else if (input.matches(\"delete (.*)\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"lethiciars"},"content":"                    String index \u003d input.substring(7);","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"lethiciars"},"content":"                    Duke.deleteTask(index);","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"lethiciars"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"lethiciars"},"content":"                } else if (input.matches(\"todo(.*)\")){","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"lethiciars"},"content":"                    Duke.addTask(taskType.TODO, input);","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"lethiciars"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"lethiciars"},"content":"                } else if (input.matches(\"deadline(.*)\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"lethiciars"},"content":"                    Duke.addTask(taskType.DEADLINE, input);","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"lethiciars"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"lethiciars"},"content":"                } else if (input.matches(\"event(.*)\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"lethiciars"},"content":"                    Duke.addTask(taskType.EVENT, input);","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"lethiciars"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"lethiciars"},"content":"                } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"lethiciars"},"content":"                    throw new DukeException(\"I\u0027m sorry, but I don\u0027t understand what that means :(\");","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"lethiciars"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"lethiciars"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"lethiciars"},"content":"            catch (DukeException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"lethiciars"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"lethiciars"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"lethiciars"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"lethiciars"},"content":"            System.out.println(\"_______________________\");","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"lethiciars"},"content":"            input \u003d scan.nextLine();","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"lethiciars"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"lethiciars"},"content":"        Duke.exit();","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"lethiciars"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"lethiciars"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"lethiciars"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"lethiciars"},"content":"     * Greet user upon running the chatbot.","lastModifiedDate":"2021-08-19"},{"lineNumber":85,"author":{"gitId":"lethiciars"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":86,"author":{"gitId":"lethiciars"},"content":"    private static void greet() {","lastModifiedDate":"2021-08-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":88,"author":{"gitId":"lethiciars"},"content":"        System.out.println(\"What do you need to do today?\");","lastModifiedDate":"2021-08-18"},{"lineNumber":89,"author":{"gitId":"lethiciars"},"content":"        System.out.println(\"_______________________\");","lastModifiedDate":"2021-08-18"},{"lineNumber":90,"author":{"gitId":"lethiciars"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":91,"author":{"gitId":"lethiciars"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":92,"author":{"gitId":"lethiciars"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":93,"author":{"gitId":"lethiciars"},"content":"     * Close the chatbot when user is done.","lastModifiedDate":"2021-08-19"},{"lineNumber":94,"author":{"gitId":"lethiciars"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":95,"author":{"gitId":"lethiciars"},"content":"    private static void exit() {","lastModifiedDate":"2021-08-19"},{"lineNumber":96,"author":{"gitId":"lethiciars"},"content":"        System.out.println(\"_______________________\");","lastModifiedDate":"2021-08-19"},{"lineNumber":97,"author":{"gitId":"lethiciars"},"content":"        System.out.println(\"See you! Have a nice day!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":98,"author":{"gitId":"lethiciars"},"content":"        System.out.println(\"_______________________\");","lastModifiedDate":"2021-08-18"},{"lineNumber":99,"author":{"gitId":"lethiciars"},"content":"        scan.close();","lastModifiedDate":"2021-08-19"},{"lineNumber":100,"author":{"gitId":"lethiciars"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":101,"author":{"gitId":"lethiciars"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":102,"author":{"gitId":"lethiciars"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":103,"author":{"gitId":"lethiciars"},"content":"     * List the current task list.","lastModifiedDate":"2021-08-19"},{"lineNumber":104,"author":{"gitId":"lethiciars"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":105,"author":{"gitId":"lethiciars"},"content":"    private static void listTasks() {","lastModifiedDate":"2021-08-19"},{"lineNumber":106,"author":{"gitId":"lethiciars"},"content":"        System.out.println(\"Here\u0027s your to do list:\");","lastModifiedDate":"2021-08-18"},{"lineNumber":107,"author":{"gitId":"lethiciars"},"content":"        int j \u003d 0;","lastModifiedDate":"2021-08-19"},{"lineNumber":108,"author":{"gitId":"lethiciars"},"content":"        for (Task item : tasks) {","lastModifiedDate":"2021-08-19"},{"lineNumber":109,"author":{"gitId":"lethiciars"},"content":"            System.out.printf(\"%d. %s%n\", j + 1, tasks.get(j));","lastModifiedDate":"2021-08-19"},{"lineNumber":110,"author":{"gitId":"lethiciars"},"content":"            j +\u003d 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":111,"author":{"gitId":"lethiciars"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":112,"author":{"gitId":"lethiciars"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":113,"author":{"gitId":"lethiciars"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":114,"author":{"gitId":"lethiciars"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":115,"author":{"gitId":"lethiciars"},"content":"     * Add a given task into the tracking list.","lastModifiedDate":"2021-08-19"},{"lineNumber":116,"author":{"gitId":"lethiciars"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":117,"author":{"gitId":"lethiciars"},"content":"     * @param description The command entered by user.","lastModifiedDate":"2021-08-19"},{"lineNumber":118,"author":{"gitId":"lethiciars"},"content":"     * @throws DukeException Throws if command given is not valid.","lastModifiedDate":"2021-08-19"},{"lineNumber":119,"author":{"gitId":"lethiciars"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":120,"author":{"gitId":"lethiciars"},"content":"    private static void addTask(taskType type, String description) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"lethiciars"},"content":"        switch (type) {","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"lethiciars"},"content":"        case TODO:","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"lethiciars"},"content":"            try {","lastModifiedDate":"2021-08-19"},{"lineNumber":124,"author":{"gitId":"lethiciars"},"content":"                String text \u003d description.trim();","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"lethiciars"},"content":"                String taskDesc \u003d text.substring(5);","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"lethiciars"},"content":"                tasks.add(new ToDo(taskDesc));","lastModifiedDate":"2021-08-19"},{"lineNumber":127,"author":{"gitId":"lethiciars"},"content":"            } catch (StringIndexOutOfBoundsException e){","lastModifiedDate":"2021-08-19"},{"lineNumber":128,"author":{"gitId":"lethiciars"},"content":"                throw new DukeException(\"The todo task description cannot be empty. \" +","lastModifiedDate":"2021-08-19"},{"lineNumber":129,"author":{"gitId":"lethiciars"},"content":"                        \"Please use format todo \u003cdesc\u003e\");","lastModifiedDate":"2021-08-19"},{"lineNumber":130,"author":{"gitId":"lethiciars"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":131,"author":{"gitId":"lethiciars"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"lethiciars"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":133,"author":{"gitId":"lethiciars"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-25"},{"lineNumber":134,"author":{"gitId":"lethiciars"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":135,"author":{"gitId":"lethiciars"},"content":"                String taskDesc \u003d description.substring(9);","lastModifiedDate":"2021-08-25"},{"lineNumber":136,"author":{"gitId":"lethiciars"},"content":"                String[] fields \u003d taskDesc.split(\" /by \", 2); //TODO","lastModifiedDate":"2021-08-25"},{"lineNumber":137,"author":{"gitId":"lethiciars"},"content":"                LocalDate date \u003d LocalDate.parse(fields[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"lethiciars"},"content":"                tasks.add(new Deadline(fields[0], fields[1]));","lastModifiedDate":"2021-08-25"},{"lineNumber":139,"author":{"gitId":"lethiciars"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":140,"author":{"gitId":"lethiciars"},"content":"                throw new DukeException(\"Please use format deadline \u003cdescription\u003e /by \u003cyyyy-mm-dd\u003e.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":141,"author":{"gitId":"lethiciars"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":142,"author":{"gitId":"lethiciars"},"content":"                throw new DukeException(\"The Deadline description cannot be empty. \" +","lastModifiedDate":"2021-08-25"},{"lineNumber":143,"author":{"gitId":"lethiciars"},"content":"                        \"Please use format deadline \u003cdescription\u003e /by \u003ctime\u003e.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":144,"author":{"gitId":"lethiciars"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":145,"author":{"gitId":"lethiciars"},"content":"                throw new DukeException(\"Please use format deadline \u003cdescription\u003e /by \u003ctime\u003e.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":146,"author":{"gitId":"lethiciars"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":147,"author":{"gitId":"lethiciars"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":148,"author":{"gitId":"lethiciars"},"content":"        case EVENT:","lastModifiedDate":"2021-08-25"},{"lineNumber":149,"author":{"gitId":"lethiciars"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":150,"author":{"gitId":"lethiciars"},"content":"            try {","lastModifiedDate":"2021-08-19"},{"lineNumber":151,"author":{"gitId":"lethiciars"},"content":"                String taskDesc \u003d description.substring(6);","lastModifiedDate":"2021-08-19"},{"lineNumber":152,"author":{"gitId":"lethiciars"},"content":"                String[] fields \u003d taskDesc.split(\" /at \", 2);","lastModifiedDate":"2021-08-19"},{"lineNumber":153,"author":{"gitId":"lethiciars"},"content":"                tasks.add(new Event(fields[0], fields[1]));","lastModifiedDate":"2021-08-19"},{"lineNumber":154,"author":{"gitId":"lethiciars"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":155,"author":{"gitId":"lethiciars"},"content":"                throw new DukeException(\"The Event description cannot be empty. \" +","lastModifiedDate":"2021-08-19"},{"lineNumber":156,"author":{"gitId":"lethiciars"},"content":"                        \"Please use format event \u003cdescription\u003e /at \u003ctime\u003e.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":157,"author":{"gitId":"lethiciars"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":158,"author":{"gitId":"lethiciars"},"content":"                throw new DukeException(\"Please use format event \u003cdescription\u003e /at \u003ctime\u003e.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":159,"author":{"gitId":"lethiciars"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":160,"author":{"gitId":"lethiciars"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":161,"author":{"gitId":"lethiciars"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":162,"author":{"gitId":"lethiciars"},"content":"        try{","lastModifiedDate":"2021-08-25"},{"lineNumber":163,"author":{"gitId":"lethiciars"},"content":"            FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2021-08-25"},{"lineNumber":164,"author":{"gitId":"lethiciars"},"content":"            fw.write((tasks.get(tasks.size() - 1)).getText());","lastModifiedDate":"2021-08-25"},{"lineNumber":165,"author":{"gitId":"lethiciars"},"content":"            fw.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":166,"author":{"gitId":"lethiciars"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":167,"author":{"gitId":"lethiciars"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-25"},{"lineNumber":168,"author":{"gitId":"lethiciars"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":169,"author":{"gitId":"lethiciars"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":170,"author":{"gitId":"lethiciars"},"content":"        System.out.printf(\"added: %s%n\", tasks.get(tasks.size() - 1));","lastModifiedDate":"2021-08-19"},{"lineNumber":171,"author":{"gitId":"lethiciars"},"content":"        System.out.printf(\"Now you have %d tasks in your list.%n\", tasks.size());","lastModifiedDate":"2021-08-19"},{"lineNumber":172,"author":{"gitId":"lethiciars"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":173,"author":{"gitId":"lethiciars"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":174,"author":{"gitId":"lethiciars"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":175,"author":{"gitId":"lethiciars"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":176,"author":{"gitId":"lethiciars"},"content":"     * Delete a task from the current task list.","lastModifiedDate":"2021-08-19"},{"lineNumber":177,"author":{"gitId":"lethiciars"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":178,"author":{"gitId":"lethiciars"},"content":"     * @param taskIndex the task no. to be deleted.","lastModifiedDate":"2021-08-19"},{"lineNumber":179,"author":{"gitId":"lethiciars"},"content":"     * @throws DukeException if command or no. given is not valid.","lastModifiedDate":"2021-08-19"},{"lineNumber":180,"author":{"gitId":"lethiciars"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":181,"author":{"gitId":"lethiciars"},"content":"    private static void deleteTask(String taskIndex) throws DukeException { //TODO delete from txt","lastModifiedDate":"2021-08-25"},{"lineNumber":182,"author":{"gitId":"lethiciars"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":183,"author":{"gitId":"lethiciars"},"content":"            int taskNo \u003d Integer.parseInt(taskIndex) - 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":184,"author":{"gitId":"lethiciars"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":185,"author":{"gitId":"lethiciars"},"content":"            Task toDelete \u003d tasks.get(taskNo);","lastModifiedDate":"2021-08-25"},{"lineNumber":186,"author":{"gitId":"lethiciars"},"content":"            tasks.remove(taskNo);","lastModifiedDate":"2021-08-25"},{"lineNumber":187,"author":{"gitId":"lethiciars"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":188,"author":{"gitId":"lethiciars"},"content":"            System.out.println(\"Got it! I\u0027ve removed this task:\");","lastModifiedDate":"2021-08-19"},{"lineNumber":189,"author":{"gitId":"lethiciars"},"content":"            System.out.println(toDelete);","lastModifiedDate":"2021-08-25"},{"lineNumber":190,"author":{"gitId":"lethiciars"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2021-08-19"},{"lineNumber":191,"author":{"gitId":"lethiciars"},"content":"            throw new DukeException(\"Please use the format delete \u003ctask No.\u003e\");","lastModifiedDate":"2021-08-19"},{"lineNumber":192,"author":{"gitId":"lethiciars"},"content":"        } catch (IndexOutOfBoundsException indexError) {","lastModifiedDate":"2021-08-19"},{"lineNumber":193,"author":{"gitId":"lethiciars"},"content":"            throw new DukeException(\"Sorry, I cannot find that task no. please enter a valid number :)\");","lastModifiedDate":"2021-08-19"},{"lineNumber":194,"author":{"gitId":"lethiciars"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":195,"author":{"gitId":"lethiciars"},"content":"        writeToFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":196,"author":{"gitId":"lethiciars"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":197,"author":{"gitId":"lethiciars"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":198,"author":{"gitId":"lethiciars"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":199,"author":{"gitId":"lethiciars"},"content":"     * Mark a task in the current list as done.","lastModifiedDate":"2021-08-19"},{"lineNumber":200,"author":{"gitId":"lethiciars"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":201,"author":{"gitId":"lethiciars"},"content":"     * @param taskIndex the task no. to be marked done.","lastModifiedDate":"2021-08-19"},{"lineNumber":202,"author":{"gitId":"lethiciars"},"content":"     * @throws DukeException if command or no. given is not valid.","lastModifiedDate":"2021-08-19"},{"lineNumber":203,"author":{"gitId":"lethiciars"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":204,"author":{"gitId":"lethiciars"},"content":"    private static void doneTask(String taskIndex) throws DukeException { //TODO markDone in txt","lastModifiedDate":"2021-08-25"},{"lineNumber":205,"author":{"gitId":"lethiciars"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":206,"author":{"gitId":"lethiciars"},"content":"            int i \u003d Integer.parseInt(taskIndex) - 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":207,"author":{"gitId":"lethiciars"},"content":"            tasks.get(i).markDone();","lastModifiedDate":"2021-08-19"},{"lineNumber":208,"author":{"gitId":"lethiciars"},"content":"            System.out.println(\"Good job! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-08-19"},{"lineNumber":209,"author":{"gitId":"lethiciars"},"content":"            System.out.println(tasks.get(i));","lastModifiedDate":"2021-08-19"},{"lineNumber":210,"author":{"gitId":"lethiciars"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2021-08-19"},{"lineNumber":211,"author":{"gitId":"lethiciars"},"content":"            throw new DukeException(\"Please use the format done \u003ctask No.\u003e\");","lastModifiedDate":"2021-08-19"},{"lineNumber":212,"author":{"gitId":"lethiciars"},"content":"        } catch (IndexOutOfBoundsException indexError) {","lastModifiedDate":"2021-08-19"},{"lineNumber":213,"author":{"gitId":"lethiciars"},"content":"            throw new DukeException(\"Sorry, I cannot find that task no. please enter a valid number :)\");","lastModifiedDate":"2021-08-19"},{"lineNumber":214,"author":{"gitId":"lethiciars"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":215,"author":{"gitId":"lethiciars"},"content":"        writeToFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":216,"author":{"gitId":"lethiciars"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":217,"author":{"gitId":"lethiciars"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":218,"author":{"gitId":"lethiciars"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":219,"author":{"gitId":"lethiciars"},"content":"     * Updates the tasks in the saved txt file","lastModifiedDate":"2021-08-25"},{"lineNumber":220,"author":{"gitId":"lethiciars"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":221,"author":{"gitId":"lethiciars"},"content":"    private static void writeToFile() {","lastModifiedDate":"2021-08-25"},{"lineNumber":222,"author":{"gitId":"lethiciars"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":223,"author":{"gitId":"lethiciars"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":224,"author":{"gitId":"lethiciars"},"content":"            for (Task item : tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":225,"author":{"gitId":"lethiciars"},"content":"                String toAdd \u003d item.getText();","lastModifiedDate":"2021-08-25"},{"lineNumber":226,"author":{"gitId":"lethiciars"},"content":"                fw.write(toAdd);","lastModifiedDate":"2021-08-25"},{"lineNumber":227,"author":{"gitId":"lethiciars"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":228,"author":{"gitId":"lethiciars"},"content":"            fw.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":229,"author":{"gitId":"lethiciars"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":230,"author":{"gitId":"lethiciars"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-25"},{"lineNumber":231,"author":{"gitId":"lethiciars"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":232,"author":{"gitId":"lethiciars"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":233,"author":{"gitId":"lethiciars"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":234,"author":{"gitId":"lethiciars"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":235,"author":{"gitId":"lethiciars"},"content":"     * Reads and loads tasks from the local file ","lastModifiedDate":"2021-08-25"},{"lineNumber":236,"author":{"gitId":"lethiciars"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":237,"author":{"gitId":"lethiciars"},"content":"     * @param filePath the pathname of the file to read from","lastModifiedDate":"2021-08-25"},{"lineNumber":238,"author":{"gitId":"lethiciars"},"content":"     * @throws FileNotFoundException","lastModifiedDate":"2021-08-25"},{"lineNumber":239,"author":{"gitId":"lethiciars"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":240,"author":{"gitId":"lethiciars"},"content":"    private static void loadTasks(String filePath) throws FileNotFoundException { //TODO indicate if tasks are done ie new constructor??","lastModifiedDate":"2021-08-25"},{"lineNumber":241,"author":{"gitId":"lethiciars"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":242,"author":{"gitId":"lethiciars"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2021-08-25"},{"lineNumber":243,"author":{"gitId":"lethiciars"},"content":"        while(s.hasNext()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":244,"author":{"gitId":"lethiciars"},"content":"           String item \u003d s.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":245,"author":{"gitId":"lethiciars"},"content":"           String[] details \u003d item.split(\",\");","lastModifiedDate":"2021-08-25"},{"lineNumber":246,"author":{"gitId":"lethiciars"},"content":"           boolean isDone \u003d Boolean.parseBoolean(details[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":247,"author":{"gitId":"lethiciars"},"content":"           switch(details[0]) {","lastModifiedDate":"2021-08-25"},{"lineNumber":248,"author":{"gitId":"lethiciars"},"content":"           case \"T\":","lastModifiedDate":"2021-08-25"},{"lineNumber":249,"author":{"gitId":"lethiciars"},"content":"               tasks.add(new ToDo(details[2], isDone));","lastModifiedDate":"2021-08-25"},{"lineNumber":250,"author":{"gitId":"lethiciars"},"content":"               break;","lastModifiedDate":"2021-08-25"},{"lineNumber":251,"author":{"gitId":"lethiciars"},"content":"           case \"D\":","lastModifiedDate":"2021-08-25"},{"lineNumber":252,"author":{"gitId":"lethiciars"},"content":"               tasks.add(new Deadline(details[2], details[3], isDone));","lastModifiedDate":"2021-08-25"},{"lineNumber":253,"author":{"gitId":"lethiciars"},"content":"               break;","lastModifiedDate":"2021-08-25"},{"lineNumber":254,"author":{"gitId":"lethiciars"},"content":"           case \"E\":","lastModifiedDate":"2021-08-25"},{"lineNumber":255,"author":{"gitId":"lethiciars"},"content":"               tasks.add(new Event(details[2], details[3], isDone));","lastModifiedDate":"2021-08-25"},{"lineNumber":256,"author":{"gitId":"lethiciars"},"content":"               break;","lastModifiedDate":"2021-08-25"},{"lineNumber":257,"author":{"gitId":"lethiciars"},"content":"           }","lastModifiedDate":"2021-08-25"},{"lineNumber":258,"author":{"gitId":"lethiciars"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":260,"author":{"gitId":"lethiciars"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"lethiciars":252,"-":9}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lethiciars"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"lethiciars"},"content":" * An Exception class for Duke specific Exceptions.","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"lethiciars"},"content":" *","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"lethiciars"},"content":" * @author Lethicia","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"lethiciars"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"lethiciars"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"lethiciars"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"lethiciars"},"content":"     * Constructor for a Duke Exception","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"lethiciars"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"lethiciars"},"content":"     * @param errorMessage description of the Duke Exception.","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"lethiciars"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"lethiciars"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"lethiciars"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"lethiciars"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"lethiciars"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"lethiciars"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"lethiciars":16}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lethiciars"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"lethiciars"},"content":" * A Task that start at a specific date/time and","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"lethiciars"},"content":" * ends at a specific date/time.","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"lethiciars"},"content":" *","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"lethiciars"},"content":" * @author Lethicia","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"lethiciars"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"lethiciars"},"content":"public class Event extends Task{","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"lethiciars"},"content":"    /** date/time of the event. */","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"lethiciars"},"content":"    protected String at;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lethiciars"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lethiciars"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"lethiciars"},"content":"     * Constructor for an Event task.","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"lethiciars"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"lethiciars"},"content":"     * @param description the title or description for the task","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"lethiciars"},"content":"     * @param at date/time of the task.","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"lethiciars"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"lethiciars"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"lethiciars"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"lethiciars"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"lethiciars"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"lethiciars"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"lethiciars"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"lethiciars"},"content":"     * Constructor for an Event task.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"lethiciars"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"lethiciars"},"content":"     * @param description the title or description for the task","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"lethiciars"},"content":"     * @param at date/time of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"lethiciars"},"content":"     * @param status boolean indicating true if task is done, false otherwise.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"lethiciars"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"lethiciars"},"content":"    public Event(String description, String at, boolean status) {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"lethiciars"},"content":"        super(description);","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"lethiciars"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"lethiciars"},"content":"        super.isDone \u003d status;","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"lethiciars"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"lethiciars"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"lethiciars"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"lethiciars"},"content":"     * Returns the file\u0027s details in the format \"E,\u003cisDone\u003e,\u003cdesc\u003e,\u003ctime\u003e\"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"lethiciars"},"content":"     * to be stored in the hard disk.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"lethiciars"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"lethiciars"},"content":"     * @return formatted string containing task details","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"lethiciars"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"lethiciars"},"content":"    public String getText() {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"lethiciars"},"content":"        return String.format(\"E,%s,%s,%s\\n\", this.isDone, this.description, this.at);","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"lethiciars"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"lethiciars"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"lethiciars"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"lethiciars"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"lethiciars"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"lethiciars"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"lethiciars"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lethiciars":49}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lethiciars"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"lethiciars"},"content":" * A Task class encapsulates the data related to a task","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"lethiciars"},"content":" * ie task description and status.","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"lethiciars"},"content":" *","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"lethiciars"},"content":" * @author Lethicia","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"lethiciars"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"lethiciars"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"lethiciars"},"content":"    protected String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lethiciars"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lethiciars"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lethiciars"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"lethiciars"},"content":"     * Constructor for a Task object.","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"lethiciars"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"lethiciars"},"content":"     * @param description the title or description for the task","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"lethiciars"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"lethiciars"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"lethiciars"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"lethiciars"},"content":"        /** task marked as incomplete by default. */","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"lethiciars"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"lethiciars"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"lethiciars"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"lethiciars"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"lethiciars"},"content":"     * Checks if the task is marked as done.","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"lethiciars"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"lethiciars"},"content":"     * @return X to mark task as done.","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"lethiciars"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"lethiciars"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"lethiciars"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"lethiciars"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"lethiciars"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"lethiciars"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"lethiciars"},"content":"     * Marks a task as done.","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"lethiciars"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"lethiciars"},"content":"    public void markDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"lethiciars"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"lethiciars"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"lethiciars"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"lethiciars"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"lethiciars"},"content":"     * Returns the file\u0027s details in the format \"\u003cisDone\u003e,\u003cdesc\u003e\"","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"lethiciars"},"content":"     * to be stored in the hard disk.","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"lethiciars"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"lethiciars"},"content":"     * @return formatted string containing task details","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"lethiciars"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"lethiciars"},"content":"    public String getText() {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"lethiciars"},"content":"        return String.format(\"%s,%s\\n\", this.isDone, this.description);","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"lethiciars"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"lethiciars"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"lethiciars"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"lethiciars"},"content":"     * Represents the task description and status","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"lethiciars"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"lethiciars"},"content":"     * @return details of the task in a given format","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"lethiciars"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"lethiciars"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"lethiciars"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"lethiciars"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"lethiciars"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"lethiciars"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"lethiciars"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lethiciars":58}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lethiciars"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"lethiciars"},"content":" * A Task without any date/time attached to it.","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"lethiciars"},"content":" *","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"lethiciars"},"content":" * @author Lethicia","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"lethiciars"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"lethiciars"},"content":"public class ToDo extends Task{","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lethiciars"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"lethiciars"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"lethiciars"},"content":"     * Constructor for a ToDo Task.","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"lethiciars"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"lethiciars"},"content":"     * @param description the title or description of the task.","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"lethiciars"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"lethiciars"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"lethiciars"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"lethiciars"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"lethiciars"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"lethiciars"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"lethiciars"},"content":"     * Constructor for a ToDo Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"lethiciars"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"lethiciars"},"content":"     * @param description the title or description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"lethiciars"},"content":"     * @param status boolean indicating true if task is done, false otherwise.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"lethiciars"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"lethiciars"},"content":"    public ToDo(String description, boolean status) {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"lethiciars"},"content":"        super(description);","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"lethiciars"},"content":"        super.isDone \u003d status;","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"lethiciars"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"lethiciars"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"lethiciars"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"lethiciars"},"content":"     * Returns the file\u0027s details in the format \"T,\u003cisDone\u003e,\u003cdesc\u003e\"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"lethiciars"},"content":"     * to be stored in the hard disk.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"lethiciars"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"lethiciars"},"content":"     * @return formatted string containing task details","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"lethiciars"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"lethiciars"},"content":"    public String getText() {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"lethiciars"},"content":"        return String.format(\"T,%s,%s\\n\", this.isDone, this.description);","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"lethiciars"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"lethiciars"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"lethiciars"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"lethiciars"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"lethiciars"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"lethiciars"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"lethiciars"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lethiciars":42}},{"path":"src/main/java/taskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lethiciars"},"content":"public enum taskType {","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lethiciars"},"content":"    TODO,","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lethiciars"},"content":"    DEADLINE,","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lethiciars"},"content":"    EVENT","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lethiciars"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"lethiciars":5}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lethiciars"},"content":"blah","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"lethiciars"},"content":"todo sleep","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"lethiciars"},"content":"todo","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"lethiciars"},"content":"event dinner /at 7pm","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"lethiciars"},"content":"event","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"lethiciars"},"content":"deadline upload report by tmr","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"lethiciars"},"content":"deadline do homework /by monday","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"lethiciars"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lethiciars"},"content":"todo eat","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"lethiciars"},"content":"delete 5","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"lethiciars"},"content":"done 3","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"lethiciars"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"lethiciars"},"content":"delete 3","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"lethiciars"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"lethiciars"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lethiciars":15}}]
