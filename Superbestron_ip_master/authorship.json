[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"Superbestron"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.9\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"Superbestron"},"content":"}","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"Superbestron"},"content":"javafx {","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"Superbestron"},"content":"    version \u003d \"15.0.1\"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"Superbestron"},"content":"    modules \u003d [\u0027javafx.controls\u0027]","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"Superbestron"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"Superbestron"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"Superbestron"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"Superbestron"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"Superbestron"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"Superbestron"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"Superbestron"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"Superbestron"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"Superbestron"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"Superbestron"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"Superbestron"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"Superbestron"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"Superbestron"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"Superbestron"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"Superbestron"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Superbestron":22,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"Superbestron"},"content":"Duke is a **Personal Assistant Chatbot** that helps you to keep track of various things. You can think of it as a digital task list, where you can add and delete tasks.","lastModifiedDate":"2021-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"Superbestron"},"content":"Listed below are Duke\u0027s features:","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"Superbestron"},"content":"1. Add a task to the task list","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"Superbestron"},"content":"2. Mark a task as done","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"Superbestron"},"content":"3. Find related tasks","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"Superbestron"},"content":"4. Delete a task from the task list","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"Superbestron"},"content":"5. View your own schedule (list of tasks) for a specific date","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"Superbestron"},"content":"6. View your entire list of tasks","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"Superbestron"},"content":"7. Auto save and load tasks to your hard drive","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"Superbestron"},"content":"### Add Task","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":16,"author":{"gitId":"Superbestron"},"content":"Adds a new task to the current list of tasks.","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"Superbestron"},"content":"There are currently 3 kinds of tasks available to be added:","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"Superbestron"},"content":"1. Todo","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"Superbestron"},"content":"2. Event","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"Superbestron"},"content":"3. Deadline","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":22,"author":{"gitId":"Superbestron"},"content":"### Mark Task as done","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":24,"author":{"gitId":"Superbestron"},"content":"Marks a specific task as done.","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"Superbestron"},"content":"### Find related Tasks","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"Superbestron"},"content":"Find all tasks that contains the keyword that you have entered.","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"Superbestron"},"content":"### Delete Task","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"Superbestron"},"content":"Removes a specific task from the current task list.","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"Superbestron"},"content":"### View schedule","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"Superbestron"},"content":"Displays the entire list of tasks by hour on a specified date.","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"Superbestron"},"content":"### List","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"Superbestron"},"content":"Displays all tasks.","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"Superbestron"},"content":"### Exiting the program","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"Superbestron"},"content":"Immediately closes the app.","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"Superbestron"},"content":"### `todo` - Adds a todo Task","lastModifiedDate":"2021-09-14"},{"lineNumber":49,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":50,"author":{"gitId":"Superbestron"},"content":"Use this command to add a task that you have to do without a hard deadline.","lastModifiedDate":"2021-09-14"},{"lineNumber":51,"author":{"gitId":"Superbestron"},"content":"- The description of the todo can contain an arbitrary amount of words (at least 1 word).","lastModifiedDate":"2021-09-14"},{"lineNumber":52,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":53,"author":{"gitId":"Superbestron"},"content":"Example of usage: ","lastModifiedDate":"2021-09-14"},{"lineNumber":54,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":55,"author":{"gitId":"Superbestron"},"content":"`todo return book`","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":57,"author":{"gitId":"Superbestron"},"content":"Expected outcome:","lastModifiedDate":"2021-09-14"},{"lineNumber":58,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":59,"author":{"gitId":"Superbestron"},"content":"Description of the outcome.","lastModifiedDate":"2021-09-14"},{"lineNumber":60,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":61,"author":{"gitId":"Superbestron"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":62,"author":{"gitId":"Superbestron"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-14"},{"lineNumber":63,"author":{"gitId":"Superbestron"},"content":"  [T][] return book","lastModifiedDate":"2021-09-14"},{"lineNumber":64,"author":{"gitId":"Superbestron"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2021-09-14"},{"lineNumber":65,"author":{"gitId":"Superbestron"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":66,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":67,"author":{"gitId":"Superbestron"},"content":"### `event` - Adds a event Task","lastModifiedDate":"2021-09-14"},{"lineNumber":68,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":69,"author":{"gitId":"Superbestron"},"content":"Use this command to add an event that you have to do attend with a specified date and time.","lastModifiedDate":"2021-09-14"},{"lineNumber":70,"author":{"gitId":"Superbestron"},"content":"- The description of the event can contain an arbitrary amount of words (at least 1 word).","lastModifiedDate":"2021-09-14"},{"lineNumber":71,"author":{"gitId":"Superbestron"},"content":"- Time and date follows the format dd/mm/yyyy hhmm (24h format) respectively.","lastModifiedDate":"2021-09-14"},{"lineNumber":72,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":73,"author":{"gitId":"Superbestron"},"content":"Example of usage: ","lastModifiedDate":"2021-09-14"},{"lineNumber":74,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":75,"author":{"gitId":"Superbestron"},"content":"`event carnival /at 2/12/2021 0930`","lastModifiedDate":"2021-09-14"},{"lineNumber":76,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":77,"author":{"gitId":"Superbestron"},"content":"Expected outcome:","lastModifiedDate":"2021-09-14"},{"lineNumber":78,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":79,"author":{"gitId":"Superbestron"},"content":"Description of the outcome.","lastModifiedDate":"2021-09-14"},{"lineNumber":80,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":81,"author":{"gitId":"Superbestron"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":82,"author":{"gitId":"Superbestron"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-14"},{"lineNumber":83,"author":{"gitId":"Superbestron"},"content":"  [E][] carnival (at: 2 Dec 2021 09:30 AM)","lastModifiedDate":"2021-09-14"},{"lineNumber":84,"author":{"gitId":"Superbestron"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2021-09-14"},{"lineNumber":85,"author":{"gitId":"Superbestron"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":86,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":87,"author":{"gitId":"Superbestron"},"content":"### `deadline` - Adds a deadline Task","lastModifiedDate":"2021-09-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":89,"author":{"gitId":"Superbestron"},"content":"Use this command to add a deadline that you have to meet with a specified date and time.","lastModifiedDate":"2021-09-14"},{"lineNumber":90,"author":{"gitId":"Superbestron"},"content":"- The description of the deadline can contain an arbitrary amount of words (at least 1 word).","lastModifiedDate":"2021-09-14"},{"lineNumber":91,"author":{"gitId":"Superbestron"},"content":"- Time and date follows the format dd/mm/yyyy hhmm (24h format) respectively.","lastModifiedDate":"2021-09-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":95,"author":{"gitId":"Superbestron"},"content":"`deadline CS2100 Tut 1/at 2/12/2021 0930`","lastModifiedDate":"2021-09-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"Description of the outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":102,"author":{"gitId":"Superbestron"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-14"},{"lineNumber":103,"author":{"gitId":"Superbestron"},"content":"  [E][] carnival (at: 2 Dec 2021 09:30 AM)","lastModifiedDate":"2021-09-14"},{"lineNumber":104,"author":{"gitId":"Superbestron"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2021-09-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"Superbestron":84,"-":21}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Superbestron"},"content":"package duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"Superbestron"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Superbestron"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Superbestron"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"Superbestron"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Superbestron"},"content":"/** This is the main class for the program. */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"Superbestron"},"content":"    private static final String FILE_PATH \u003d \"data.txt\";","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"Superbestron"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Superbestron"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Superbestron"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"Superbestron"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Superbestron"},"content":"     * Construct an instance of Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Superbestron"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Superbestron"},"content":"     * @param filePath The path of the file to load saved data from.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Superbestron"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Superbestron"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Superbestron"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"Superbestron"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"Superbestron"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Superbestron"},"content":"            this.tasks \u003d new TaskList(this.storage.load());","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"Superbestron"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"Superbestron"},"content":"            System.out.println(Ui.showLoadingError());","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"Superbestron"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"Superbestron"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"Superbestron"},"content":"    /** Construct an instance of Duke program with default file path to store/load data from (data.txt). */","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"Superbestron"},"content":"    public Duke() {","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"Superbestron"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"Superbestron"},"content":"        this.storage \u003d new Storage(\"data.txt\");","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"Superbestron"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"Superbestron"},"content":"            this.tasks \u003d new TaskList(this.storage.load());","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"Superbestron"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"Superbestron"},"content":"            System.out.println(Ui.showLoadingError());","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"Superbestron"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"Superbestron"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"Superbestron"},"content":"    /** Start of the program. */","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"Superbestron"},"content":"    public void run() {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"Superbestron"},"content":"        ui.welcomeMessage();","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"Superbestron"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"Superbestron"},"content":"        // Main loop of program","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"Superbestron"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"Superbestron"},"content":"            try {","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"Superbestron"},"content":"                // Deal with user\u0027s input","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"Superbestron"},"content":"                ui.enterCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"Superbestron"},"content":"                String fullCommand \u003d ui.readInput();","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"Superbestron"},"content":"                assert fullCommand !\u003d null : \"String to be printed out by execute() should not be null.\";","lastModifiedDate":"2021-09-03"},{"lineNumber":55,"author":{"gitId":"Superbestron"},"content":"                assert !fullCommand.isEmpty() : \"Command entered by user should not be empty.\";","lastModifiedDate":"2021-09-03"},{"lineNumber":56,"author":{"gitId":"Superbestron"},"content":"                ui.lineGenerator();","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"Superbestron"},"content":"                // Execute command based on user\u0027s input","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"Superbestron"},"content":"                duke.parser.Parser parser \u003d new duke.parser.Parser(fullCommand);","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"Superbestron"},"content":"                System.out.println(parser.execute(tasks, ui, storage));","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"Superbestron"},"content":"                isExit \u003d parser.isByeCommand();","lastModifiedDate":"2021-09-08"},{"lineNumber":62,"author":{"gitId":"Superbestron"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":63,"author":{"gitId":"Superbestron"},"content":"                System.out.println(ui.printError(e));","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"Superbestron"},"content":"            } finally {","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"Superbestron"},"content":"                ui.lineGenerator();","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"Superbestron"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"Superbestron"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"Superbestron"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"Superbestron"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"Superbestron"},"content":"            duke.parser.Parser parser \u003d new duke.parser.Parser(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"Superbestron"},"content":"            return parser.execute(tasks, ui, storage);","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"Superbestron"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"Superbestron"},"content":"            return ui.printError(e);","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"Superbestron"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":79,"author":{"gitId":"Superbestron"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-16"},{"lineNumber":80,"author":{"gitId":"Superbestron"},"content":"        new Duke(FILE_PATH).run();","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Superbestron":80,"-":2}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Superbestron"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"Superbestron"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"Superbestron"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"Superbestron"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"Superbestron"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"Superbestron"},"content":"public class Launcher {","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"Superbestron"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"Superbestron"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"Superbestron"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"Superbestron":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Superbestron"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"Superbestron"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"Superbestron"},"content":"import duke.controllers.MainWindow;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"Superbestron"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"Superbestron"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"Superbestron"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"Superbestron"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"Superbestron"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"Superbestron"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"Superbestron"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"Superbestron"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"Superbestron"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"Superbestron"},"content":"    private final Duke duke \u003d new Duke(\"data.txt\");","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"Superbestron"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"Superbestron"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"Superbestron"},"content":"        assert stage !\u003d null : \"Stage should not be null.\";","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"Superbestron"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"Superbestron"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"Superbestron"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"Superbestron"},"content":"            assert ap !\u003d null : \"AnchorPane should not be null.\";","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"Superbestron"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"Superbestron"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"Superbestron"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"Superbestron"},"content":"            stage.show();","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"Superbestron"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"Superbestron"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"Superbestron"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"Superbestron"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"Superbestron":34}},{"path":"src/main/java/duke/controllers/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Superbestron"},"content":"package duke.controllers;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"Superbestron"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"Superbestron"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"Superbestron"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"Superbestron"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"Superbestron"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"Superbestron"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"Superbestron"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"Superbestron"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"Superbestron"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"Superbestron"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"Superbestron"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"Superbestron"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"Superbestron"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"Superbestron"},"content":"import javafx.scene.text.TextAlignment;","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"Superbestron"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"Superbestron"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"Superbestron"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"Superbestron"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"Superbestron"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"Superbestron"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"Superbestron"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"Superbestron"},"content":"    private Text textBox;","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"Superbestron"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"Superbestron"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"Superbestron"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"Superbestron"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"Superbestron"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"Superbestron"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"Superbestron"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"Superbestron"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"Superbestron"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"Superbestron"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"Superbestron"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"Superbestron"},"content":"        textBox.setText(text);","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"Superbestron"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"Superbestron"},"content":"        displayPicture.setClip(new Circle(50, 50, 50));","lastModifiedDate":"2021-09-13"},{"lineNumber":43,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"Superbestron"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"Superbestron"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"Superbestron"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"Superbestron"},"content":"    private void flip() {","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"Superbestron"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"Superbestron"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"Superbestron"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"Superbestron"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"Superbestron"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"Superbestron"},"content":"        DialogBox userDialog \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"Superbestron"},"content":"        return userDialog;","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"Superbestron"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"Superbestron"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"Superbestron"},"content":"        db.flip();","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"Superbestron"},"content":"        db.textBox.setTextAlignment(TextAlignment.LEFT);","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"Superbestron"},"content":"        return db;","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"Superbestron"},"content":"}","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"Superbestron":67}},{"path":"src/main/java/duke/controllers/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Superbestron"},"content":"package duke.controllers;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"Superbestron"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"Superbestron"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"Superbestron"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"Superbestron"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"Superbestron"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"Superbestron"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"Superbestron"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"Superbestron"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"Superbestron"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"Superbestron"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"Superbestron"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"Superbestron"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"Superbestron"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"Superbestron"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"Superbestron"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"Superbestron"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"Superbestron"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"Superbestron"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"Superbestron"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"Superbestron"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"Superbestron"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"Superbestron"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"Superbestron"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"Superbestron"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"Superbestron"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"Superbestron"},"content":"    /** Initializes the Duke program. */","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"Superbestron"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"Superbestron"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"Superbestron"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"Superbestron"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"Superbestron"},"content":"                DialogBox.getDukeDialog(Ui.guiWelcomeMessage(), dukeImage)","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"Superbestron"},"content":"        );","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"Superbestron"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"Superbestron"},"content":"        assert d !\u003d null : \"Duke should not be null\";","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"Superbestron"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"Superbestron"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"Superbestron"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"Superbestron"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"Superbestron"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"Superbestron"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"Superbestron"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"Superbestron"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"Superbestron"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"Superbestron"},"content":"        assert input !\u003d null : \"User input should not be null.\";","lastModifiedDate":"2021-09-03"},{"lineNumber":54,"author":{"gitId":"Superbestron"},"content":"        assert response !\u003d null : \"Duke response should not be null.\";","lastModifiedDate":"2021-09-03"},{"lineNumber":55,"author":{"gitId":"Superbestron"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"Superbestron"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"Superbestron"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"Superbestron"},"content":"        );","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"Superbestron"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"Superbestron"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"Superbestron"},"content":"            Platform.exit();","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"Superbestron"},"content":"            System.exit(0);","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"Superbestron"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"Superbestron"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"Superbestron":65}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Superbestron"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Superbestron"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Superbestron"},"content":" * Encapsulates exceptions for Duke bot","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Superbestron"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Superbestron"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"Superbestron"},"content":"    private final String message;","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Superbestron"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Superbestron"},"content":"     * Public constructor for a DukeException object.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Superbestron"},"content":"     * @param message","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Superbestron"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Superbestron"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"Superbestron"},"content":"        super(message);","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"Superbestron"},"content":"        assert message !\u003d null : \"DukeException message should not be null.\";","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"Superbestron"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Superbestron"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Superbestron"},"content":"     * Returns a string containing the error message with \"OOPS!\" appended at the front","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Superbestron"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Superbestron"},"content":"     * @return A string with the error message.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"Superbestron"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Superbestron"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"Superbestron"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"Superbestron"},"content":"        return \"OOPS! \" + this.message;","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"Superbestron"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"Superbestron":28}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Superbestron"},"content":"package duke.parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Superbestron"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Superbestron"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Superbestron"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Superbestron"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Superbestron"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Superbestron"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"Superbestron"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"Superbestron"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"Superbestron"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"Superbestron"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"Superbestron"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"Superbestron"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"Superbestron"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"Superbestron"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Superbestron"},"content":" * This class deals with making sense of the user command.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Superbestron"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Superbestron"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"Superbestron"},"content":"    private final String input;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Superbestron"},"content":"    private boolean isByeCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Superbestron"},"content":"    /** A list of all valid commands recognised. */","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"Superbestron"},"content":"    enum Commands {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Superbestron"},"content":"        BYE, LIST, DONE, DELETE, TODO, DEADLINE, EVENT, FIND, SCHEDULE","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Superbestron"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"Superbestron"},"content":"     * Public constructor to parse a user\u0027s input.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"Superbestron"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"Superbestron"},"content":"     * @param input The whole command given by the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"Superbestron"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"Superbestron"},"content":"    public Parser(String input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"Superbestron"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"Superbestron"},"content":"        this.isByeCommand \u003d false;","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"Superbestron"},"content":"    public boolean isByeCommand() {","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"Superbestron"},"content":"        return isByeCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"Superbestron"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"Superbestron"},"content":"     * Formats the date inputted by the user into a LocalDate object.","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"Superbestron"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"Superbestron"},"content":"     * @param str The date string inputted by the user.","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"Superbestron"},"content":"     * @return A LocalDate object representation of the date string.","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"Superbestron"},"content":"     * @throws DukeException If the date is wrongly formatted.","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"Superbestron"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"Superbestron"},"content":"    public static LocalDate dateFormatter(String str) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"Superbestron"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"Superbestron"},"content":"            String[] splitStr \u003d str.split(\"/\");","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"Superbestron"},"content":"            String day \u003d String.format(\"%1$\" + 2 + \"s\", splitStr[0]).replace(\u0027 \u0027, \u00270\u0027);","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"Superbestron"},"content":"            String month \u003d String.format(\"%1$\" + 2 + \"s\", splitStr[1]).replace(\u0027 \u0027, \u00270\u0027);","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"Superbestron"},"content":"            return LocalDate.parse(splitStr[2] + \"-\" + month + \"-\" + day);","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"Superbestron"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"Superbestron"},"content":"            throw new DukeException(\"Your Date is wrongly formatted! It should be in the form of dd-mm-yyyy.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"Superbestron"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"Superbestron"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"Superbestron"},"content":"     * Formats the time inputted by the user.","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"Superbestron"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"Superbestron"},"content":"     * @param str The time string inputted by the user.","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"Superbestron"},"content":"     * @return A LocalTime object representation of the time string.","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"Superbestron"},"content":"     * @throws DukeException If the time is wrongly formatted.","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"Superbestron"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"Superbestron"},"content":"    public static LocalTime timeFormatter(String str) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"Superbestron"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"Superbestron"},"content":"            return LocalTime.parse(str.substring(0, 2) + \":\" + str.substring(2));","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"Superbestron"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"Superbestron"},"content":"            throw new DukeException(\"Your Time is wrongly formatted! It should be in the the form of hhmm.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"Superbestron"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"Superbestron"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"Superbestron"},"content":"     * Executes a command given by the user and returns a String that contains all the corresponding","lastModifiedDate":"2021-09-03"},{"lineNumber":80,"author":{"gitId":"Superbestron"},"content":"     * texts associated with the command.","lastModifiedDate":"2021-09-03"},{"lineNumber":81,"author":{"gitId":"Superbestron"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"Superbestron"},"content":"     * @param tasks The current list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"Superbestron"},"content":"     * @param ui The current user interface.","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"Superbestron"},"content":"     * @param storage The storage to store/load data from.","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"Superbestron"},"content":"     * @return A String that contains the corresponding texts associated with the command.","lastModifiedDate":"2021-09-03"},{"lineNumber":86,"author":{"gitId":"Superbestron"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"Superbestron"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":88,"author":{"gitId":"Superbestron"},"content":"        String str;","lastModifiedDate":"2021-09-01"},{"lineNumber":89,"author":{"gitId":"Superbestron"},"content":"        if (input.equals(Commands.BYE.toString().toLowerCase())) {","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"Superbestron"},"content":"            isByeCommand \u003d true;","lastModifiedDate":"2021-09-08"},{"lineNumber":91,"author":{"gitId":"Superbestron"},"content":"            return byeCommand(ui);","lastModifiedDate":"2021-09-01"},{"lineNumber":92,"author":{"gitId":"Superbestron"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"Superbestron"},"content":"        Task t;","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"Superbestron"},"content":"        if (input.equals(Commands.LIST.toString().toLowerCase())) {","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"Superbestron"},"content":"            str \u003d listCommand(tasks, ui);","lastModifiedDate":"2021-09-03"},{"lineNumber":96,"author":{"gitId":"Superbestron"},"content":"        } else if (input.startsWith(Commands.DONE.toString().toLowerCase())) {","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"Superbestron"},"content":"            str \u003d doneCommand(tasks, ui);","lastModifiedDate":"2021-09-01"},{"lineNumber":98,"author":{"gitId":"Superbestron"},"content":"        } else if (input.startsWith(Commands.DELETE.toString().toLowerCase())) {","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"Superbestron"},"content":"            str \u003d deleteCommand(tasks, ui);","lastModifiedDate":"2021-09-01"},{"lineNumber":100,"author":{"gitId":"Superbestron"},"content":"        } else if (input.startsWith(Commands.FIND.toString().toLowerCase())) {","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"Superbestron"},"content":"            str \u003d findCommand(tasks, ui);","lastModifiedDate":"2021-09-01"},{"lineNumber":102,"author":{"gitId":"Superbestron"},"content":"        } else if (input.startsWith(Commands.SCHEDULE.toString().toLowerCase())) {","lastModifiedDate":"2021-09-08"},{"lineNumber":103,"author":{"gitId":"Superbestron"},"content":"            str \u003d scheduleCommand(tasks, ui);","lastModifiedDate":"2021-09-08"},{"lineNumber":104,"author":{"gitId":"Superbestron"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"Superbestron"},"content":"            if (input.startsWith(Commands.TODO.toString().toLowerCase())) {","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"Superbestron"},"content":"                t \u003d todoCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"Superbestron"},"content":"            } else if (input.startsWith(Commands.DEADLINE.toString().toLowerCase())) {","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"Superbestron"},"content":"                t \u003d deadlineCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"Superbestron"},"content":"            } else if (input.startsWith(Commands.EVENT.toString().toLowerCase())) {","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"Superbestron"},"content":"                t \u003d eventCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"Superbestron"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"Superbestron"},"content":"                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"Superbestron"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"Superbestron"},"content":"            assert t !\u003d null : \"Task to be added should not be null.\";","lastModifiedDate":"2021-09-03"},{"lineNumber":115,"author":{"gitId":"Superbestron"},"content":"            str \u003d tasks.addTask(t, ui);","lastModifiedDate":"2021-09-01"},{"lineNumber":116,"author":{"gitId":"Superbestron"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"Superbestron"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"Superbestron"},"content":"            storage.saveToDisk(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"Superbestron"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"Superbestron"},"content":"            str \u003d ui.printError(e);","lastModifiedDate":"2021-09-01"},{"lineNumber":121,"author":{"gitId":"Superbestron"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"Superbestron"},"content":"        assert str !\u003d null : \"String to be printed out by execute() should not be null.\";","lastModifiedDate":"2021-09-03"},{"lineNumber":123,"author":{"gitId":"Superbestron"},"content":"        assert !str.isEmpty() : \"String to be printed out by execute() should not be empty.\";","lastModifiedDate":"2021-09-03"},{"lineNumber":124,"author":{"gitId":"Superbestron"},"content":"        return str;","lastModifiedDate":"2021-09-01"},{"lineNumber":125,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"Superbestron"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":128,"author":{"gitId":"Superbestron"},"content":"     * Finds all related tasks which contains input as a keyword and returns a String that contains texts","lastModifiedDate":"2021-09-03"},{"lineNumber":129,"author":{"gitId":"Superbestron"},"content":"     * to be printed out by \"find\" command.","lastModifiedDate":"2021-09-03"},{"lineNumber":130,"author":{"gitId":"Superbestron"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":131,"author":{"gitId":"Superbestron"},"content":"     * @param tasks The current list of tasks by the user.","lastModifiedDate":"2021-08-29"},{"lineNumber":132,"author":{"gitId":"Superbestron"},"content":"     * @param ui The current user interface by the user.","lastModifiedDate":"2021-08-29"},{"lineNumber":133,"author":{"gitId":"Superbestron"},"content":"     * @return A string that contains texts to be printed out by \"find\" command.","lastModifiedDate":"2021-09-03"},{"lineNumber":134,"author":{"gitId":"Superbestron"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":135,"author":{"gitId":"Superbestron"},"content":"    public String findCommand(TaskList tasks, Ui ui) {","lastModifiedDate":"2021-09-01"},{"lineNumber":136,"author":{"gitId":"Superbestron"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":137,"author":{"gitId":"Superbestron"},"content":"        String description \u003d input.substring(\"find\".length()).trim();","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"Superbestron"},"content":"        String str \u003d ui.matchTaskMessage();","lastModifiedDate":"2021-09-01"},{"lineNumber":139,"author":{"gitId":"Superbestron"},"content":"        for (int i \u003d 0; i \u003c tasks.numberOfTasks(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"Superbestron"},"content":"            if (tasks.taskNumber(i).getDescription().contains(description)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":141,"author":{"gitId":"Superbestron"},"content":"                assert tasks.taskNumber(i) !\u003d null : \"Task to be added should not be null.\";","lastModifiedDate":"2021-09-03"},{"lineNumber":142,"author":{"gitId":"Superbestron"},"content":"                list.add(tasks.taskNumber(i));","lastModifiedDate":"2021-08-25"},{"lineNumber":143,"author":{"gitId":"Superbestron"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":144,"author":{"gitId":"Superbestron"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":145,"author":{"gitId":"Superbestron"},"content":"        TaskList matchingTasks \u003d new TaskList(list);","lastModifiedDate":"2021-08-25"},{"lineNumber":146,"author":{"gitId":"Superbestron"},"content":"        return str + matchingTasks.printAllTasks();","lastModifiedDate":"2021-09-01"},{"lineNumber":147,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":148,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":149,"author":{"gitId":"Superbestron"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":150,"author":{"gitId":"Superbestron"},"content":"     * List all user\u0027s tasks and returns a String that contains texts to be printed out by \"list\" command.","lastModifiedDate":"2021-09-03"},{"lineNumber":151,"author":{"gitId":"Superbestron"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":152,"author":{"gitId":"Superbestron"},"content":"     * @param tasks A TaskList object containing all user\u0027s tasks.","lastModifiedDate":"2021-09-03"},{"lineNumber":153,"author":{"gitId":"Superbestron"},"content":"     * @param ui The current user interface by the user.","lastModifiedDate":"2021-09-03"},{"lineNumber":154,"author":{"gitId":"Superbestron"},"content":"     * @return A String that contains texts to be printed out by \"list\" command.","lastModifiedDate":"2021-09-03"},{"lineNumber":155,"author":{"gitId":"Superbestron"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":156,"author":{"gitId":"Superbestron"},"content":"    public String listCommand(TaskList tasks, Ui ui) {","lastModifiedDate":"2021-09-03"},{"lineNumber":157,"author":{"gitId":"Superbestron"},"content":"        return ui.taskListMessage() + \"\\n\" + tasks.printAllTasks();","lastModifiedDate":"2021-09-01"},{"lineNumber":158,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":159,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":160,"author":{"gitId":"Superbestron"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":161,"author":{"gitId":"Superbestron"},"content":"     * Marks a task as done and returns a String that contains texts to be printed out by \"done\" command.","lastModifiedDate":"2021-09-03"},{"lineNumber":162,"author":{"gitId":"Superbestron"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":163,"author":{"gitId":"Superbestron"},"content":"     * @param tasks A TaskList object containing all user\u0027s tasks.","lastModifiedDate":"2021-09-03"},{"lineNumber":164,"author":{"gitId":"Superbestron"},"content":"     * @param ui The current user interface by the user.","lastModifiedDate":"2021-09-03"},{"lineNumber":165,"author":{"gitId":"Superbestron"},"content":"     * @return A String that contains texts to be printed out by \"done\" command.","lastModifiedDate":"2021-09-03"},{"lineNumber":166,"author":{"gitId":"Superbestron"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":167,"author":{"gitId":"Superbestron"},"content":"    public String doneCommand(TaskList tasks, Ui ui) {","lastModifiedDate":"2021-09-01"},{"lineNumber":168,"author":{"gitId":"Superbestron"},"content":"        // format is \"done x\", for any positive integer x","lastModifiedDate":"2021-09-03"},{"lineNumber":169,"author":{"gitId":"Superbestron"},"content":"        String[] splitStr \u003d input.split(\"\\\\s+\");","lastModifiedDate":"2021-08-24"},{"lineNumber":170,"author":{"gitId":"Superbestron"},"content":"        int taskIndexFromInputIndex \u003d parseCommandArgument(splitStr[1]) - 1;","lastModifiedDate":"2021-09-08"},{"lineNumber":171,"author":{"gitId":"Superbestron"},"content":"        tasks.taskNumber(taskIndexFromInputIndex).markTaskDone();","lastModifiedDate":"2021-09-08"},{"lineNumber":172,"author":{"gitId":"Superbestron"},"content":"        return ui.taskDone(tasks.taskNumber(taskIndexFromInputIndex));","lastModifiedDate":"2021-09-08"},{"lineNumber":173,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":174,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":175,"author":{"gitId":"Superbestron"},"content":"    private int parseCommandArgument(String s) {","lastModifiedDate":"2021-09-08"},{"lineNumber":176,"author":{"gitId":"Superbestron"},"content":"        return Integer.parseInt(s);","lastModifiedDate":"2021-09-08"},{"lineNumber":177,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":178,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":179,"author":{"gitId":"Superbestron"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":180,"author":{"gitId":"Superbestron"},"content":"     * Deletes a task from the list.","lastModifiedDate":"2021-09-03"},{"lineNumber":181,"author":{"gitId":"Superbestron"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":182,"author":{"gitId":"Superbestron"},"content":"     * @param tasks A TaskList object containing all user\u0027s tasks.","lastModifiedDate":"2021-09-03"},{"lineNumber":183,"author":{"gitId":"Superbestron"},"content":"     * @param ui The current user interface by the user.","lastModifiedDate":"2021-09-03"},{"lineNumber":184,"author":{"gitId":"Superbestron"},"content":"     * @return A String that contains texts to be printed out by \"delete\" command.","lastModifiedDate":"2021-09-03"},{"lineNumber":185,"author":{"gitId":"Superbestron"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":186,"author":{"gitId":"Superbestron"},"content":"    public String deleteCommand(TaskList tasks, Ui ui) {","lastModifiedDate":"2021-09-01"},{"lineNumber":187,"author":{"gitId":"Superbestron"},"content":"        // format is \"delete x\", for any positive integer x","lastModifiedDate":"2021-09-03"},{"lineNumber":188,"author":{"gitId":"Superbestron"},"content":"        String[] splitStr \u003d input.split(\"\\\\s+\");","lastModifiedDate":"2021-08-24"},{"lineNumber":189,"author":{"gitId":"Superbestron"},"content":"        String str \u003d ui.deleteTask(tasks.taskNumber(parseCommandArgument(splitStr[1]) - 1));","lastModifiedDate":"2021-09-08"},{"lineNumber":190,"author":{"gitId":"Superbestron"},"content":"        tasks.removeTask(parseCommandArgument(splitStr[1]) - 1);","lastModifiedDate":"2021-09-08"},{"lineNumber":191,"author":{"gitId":"Superbestron"},"content":"        return str + ui.printTaskLength(tasks);","lastModifiedDate":"2021-09-01"},{"lineNumber":192,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":193,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":194,"author":{"gitId":"Superbestron"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":195,"author":{"gitId":"Superbestron"},"content":"     * Returns a Todo object with the corresponding todo item.","lastModifiedDate":"2021-08-24"},{"lineNumber":196,"author":{"gitId":"Superbestron"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":197,"author":{"gitId":"Superbestron"},"content":"     * @return A Todo object.","lastModifiedDate":"2021-08-24"},{"lineNumber":198,"author":{"gitId":"Superbestron"},"content":"     * @throws DukeException If the description of todo is empty.","lastModifiedDate":"2021-08-24"},{"lineNumber":199,"author":{"gitId":"Superbestron"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":200,"author":{"gitId":"Superbestron"},"content":"    public Todo todoCommand() throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":201,"author":{"gitId":"Superbestron"},"content":"        String description \u003d input.substring(\"todo\".length()).trim();","lastModifiedDate":"2021-08-25"},{"lineNumber":202,"author":{"gitId":"Superbestron"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":203,"author":{"gitId":"Superbestron"},"content":"            throw new DukeException(\"The description of a todo cannot be empty :-(\");","lastModifiedDate":"2021-08-25"},{"lineNumber":204,"author":{"gitId":"Superbestron"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":205,"author":{"gitId":"Superbestron"},"content":"        return new Todo(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":206,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":207,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":208,"author":{"gitId":"Superbestron"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":209,"author":{"gitId":"Superbestron"},"content":"     * Returns a Deadline object with the corresponding deadline item.","lastModifiedDate":"2021-08-24"},{"lineNumber":210,"author":{"gitId":"Superbestron"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":211,"author":{"gitId":"Superbestron"},"content":"     * @return A Deadline object.","lastModifiedDate":"2021-08-24"},{"lineNumber":212,"author":{"gitId":"Superbestron"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":213,"author":{"gitId":"Superbestron"},"content":"    public Deadline deadlineCommand() {","lastModifiedDate":"2021-08-24"},{"lineNumber":214,"author":{"gitId":"Superbestron"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":215,"author":{"gitId":"Superbestron"},"content":"            int slashPosition \u003d input.indexOf(\u0027/\u0027);","lastModifiedDate":"2021-08-24"},{"lineNumber":216,"author":{"gitId":"Superbestron"},"content":"            String description \u003d input.substring(\"deadline\".length() + 1, slashPosition);","lastModifiedDate":"2021-08-24"},{"lineNumber":217,"author":{"gitId":"Superbestron"},"content":"            String by \u003d input.substring(slashPosition + 4);","lastModifiedDate":"2021-08-24"},{"lineNumber":218,"author":{"gitId":"Superbestron"},"content":"            String[] splitStr \u003d by.split(\"\\\\s+\");","lastModifiedDate":"2021-08-24"},{"lineNumber":219,"author":{"gitId":"Superbestron"},"content":"            return new Deadline(description.trim(), timeFormatter(splitStr[1]), dateFormatter(splitStr[0]));","lastModifiedDate":"2021-08-24"},{"lineNumber":220,"author":{"gitId":"Superbestron"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":221,"author":{"gitId":"Superbestron"},"content":"            throw new DukeException(\"Your date and time is wrongly formatted. It should be in the form of\"","lastModifiedDate":"2021-08-29"},{"lineNumber":222,"author":{"gitId":"Superbestron"},"content":"                    + \" dd-mm-yyyy hhmm\");","lastModifiedDate":"2021-08-29"},{"lineNumber":223,"author":{"gitId":"Superbestron"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":224,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":225,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":226,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":227,"author":{"gitId":"Superbestron"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":228,"author":{"gitId":"Superbestron"},"content":"     * Returns a Event object with the corresponding event item.","lastModifiedDate":"2021-08-24"},{"lineNumber":229,"author":{"gitId":"Superbestron"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":230,"author":{"gitId":"Superbestron"},"content":"     * @return A Event object.","lastModifiedDate":"2021-08-24"},{"lineNumber":231,"author":{"gitId":"Superbestron"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":232,"author":{"gitId":"Superbestron"},"content":"    public Event eventCommand() throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":233,"author":{"gitId":"Superbestron"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":234,"author":{"gitId":"Superbestron"},"content":"            int slashPosition \u003d input.indexOf(\u0027/\u0027);","lastModifiedDate":"2021-08-24"},{"lineNumber":235,"author":{"gitId":"Superbestron"},"content":"            String description \u003d input.substring(\"event\".length() + 1, slashPosition);","lastModifiedDate":"2021-08-24"},{"lineNumber":236,"author":{"gitId":"Superbestron"},"content":"            String at \u003d input.substring(slashPosition + 4);","lastModifiedDate":"2021-08-24"},{"lineNumber":237,"author":{"gitId":"Superbestron"},"content":"            String[] splitStr \u003d at.split(\"\\\\s+\");","lastModifiedDate":"2021-08-24"},{"lineNumber":238,"author":{"gitId":"Superbestron"},"content":"            return new Event(description.trim(), timeFormatter(splitStr[1]), dateFormatter(splitStr[0]));","lastModifiedDate":"2021-08-24"},{"lineNumber":239,"author":{"gitId":"Superbestron"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":240,"author":{"gitId":"Superbestron"},"content":"            throw new DukeException(\"Your date and time is wrongly formatted. It should be in the form of\"","lastModifiedDate":"2021-08-29"},{"lineNumber":241,"author":{"gitId":"Superbestron"},"content":"                    + \"dd-mm-yyyy hhmm.\");","lastModifiedDate":"2021-08-29"},{"lineNumber":242,"author":{"gitId":"Superbestron"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":243,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":244,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":245,"author":{"gitId":"Superbestron"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":246,"author":{"gitId":"Superbestron"},"content":"     * Returns a {@code String} with a list of events happening per hour, like a schedule, on the specified date.","lastModifiedDate":"2021-09-08"},{"lineNumber":247,"author":{"gitId":"Superbestron"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":248,"author":{"gitId":"Superbestron"},"content":"     * @param tasks A TaskList object containing all user\u0027s tasks.","lastModifiedDate":"2021-09-08"},{"lineNumber":249,"author":{"gitId":"Superbestron"},"content":"     * @param ui The current user interface by the user.","lastModifiedDate":"2021-09-08"},{"lineNumber":250,"author":{"gitId":"Superbestron"},"content":"     * @return A {@code String} with a list of events happening on the specified date.","lastModifiedDate":"2021-09-08"},{"lineNumber":251,"author":{"gitId":"Superbestron"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":252,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":253,"author":{"gitId":"Superbestron"},"content":"    public String scheduleCommand(TaskList tasks, Ui ui) {","lastModifiedDate":"2021-09-08"},{"lineNumber":254,"author":{"gitId":"Superbestron"},"content":"        try {","lastModifiedDate":"2021-09-08"},{"lineNumber":255,"author":{"gitId":"Superbestron"},"content":"            ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-08"},{"lineNumber":256,"author":{"gitId":"Superbestron"},"content":"            String date \u003d getDate();","lastModifiedDate":"2021-09-08"},{"lineNumber":257,"author":{"gitId":"Superbestron"},"content":"            LocalDate formattedDate \u003d dateFormatter(date);","lastModifiedDate":"2021-09-08"},{"lineNumber":258,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":259,"author":{"gitId":"Superbestron"},"content":"            extractSameDayTasks(tasks, list, formattedDate);","lastModifiedDate":"2021-09-08"},{"lineNumber":260,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":261,"author":{"gitId":"Superbestron"},"content":"            if (list.isEmpty()) {","lastModifiedDate":"2021-09-08"},{"lineNumber":262,"author":{"gitId":"Superbestron"},"content":"                return ui.noTaskScheduledMessage(formattedDate);","lastModifiedDate":"2021-09-08"},{"lineNumber":263,"author":{"gitId":"Superbestron"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":264,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":265,"author":{"gitId":"Superbestron"},"content":"            Collections.sort(list);","lastModifiedDate":"2021-09-08"},{"lineNumber":266,"author":{"gitId":"Superbestron"},"content":"            TaskList sameDayTasks \u003d new TaskList(list);","lastModifiedDate":"2021-09-08"},{"lineNumber":267,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":268,"author":{"gitId":"Superbestron"},"content":"            StringBuilder str \u003d new StringBuilder(ui.viewScheduleMessage(formattedDate) + \u0027\\n\u0027);","lastModifiedDate":"2021-09-08"},{"lineNumber":269,"author":{"gitId":"Superbestron"},"content":"            groupTasksByHour(ui, sameDayTasks, str);","lastModifiedDate":"2021-09-08"},{"lineNumber":270,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":271,"author":{"gitId":"Superbestron"},"content":"            return str.toString();","lastModifiedDate":"2021-09-08"},{"lineNumber":272,"author":{"gitId":"Superbestron"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":273,"author":{"gitId":"Superbestron"},"content":"            throw new DukeException(\"Your date is wrongly formatted. It should be in the form of dd-mm-yyyy.\");","lastModifiedDate":"2021-09-08"},{"lineNumber":274,"author":{"gitId":"Superbestron"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":275,"author":{"gitId":"Superbestron"},"content":"            ui.printError(e);","lastModifiedDate":"2021-09-08"},{"lineNumber":276,"author":{"gitId":"Superbestron"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":277,"author":{"gitId":"Superbestron"},"content":"        return \"\";","lastModifiedDate":"2021-09-08"},{"lineNumber":278,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":279,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":280,"author":{"gitId":"Superbestron"},"content":"    private String getDate() {","lastModifiedDate":"2021-09-08"},{"lineNumber":281,"author":{"gitId":"Superbestron"},"content":"        String[] splitStr \u003d input.split(\"\\\\s+\");","lastModifiedDate":"2021-09-08"},{"lineNumber":282,"author":{"gitId":"Superbestron"},"content":"        return splitStr[1];","lastModifiedDate":"2021-09-08"},{"lineNumber":283,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":284,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":285,"author":{"gitId":"Superbestron"},"content":"    private void groupTasksByHour(Ui ui, TaskList matchingTasks, StringBuilder str) {","lastModifiedDate":"2021-09-08"},{"lineNumber":286,"author":{"gitId":"Superbestron"},"content":"        int ctr \u003d -1;","lastModifiedDate":"2021-09-08"},{"lineNumber":287,"author":{"gitId":"Superbestron"},"content":"        for (int i \u003d 0; i \u003c matchingTasks.numberOfTasks(); i++) {","lastModifiedDate":"2021-09-08"},{"lineNumber":288,"author":{"gitId":"Superbestron"},"content":"            Task t \u003d matchingTasks.taskNumber(i);","lastModifiedDate":"2021-09-08"},{"lineNumber":289,"author":{"gitId":"Superbestron"},"content":"            assert t !\u003d null : \"Task should not be null.\";","lastModifiedDate":"2021-09-08"},{"lineNumber":290,"author":{"gitId":"Superbestron"},"content":"            int hourOfTask \u003d t.getTime().getHour();","lastModifiedDate":"2021-09-08"},{"lineNumber":291,"author":{"gitId":"Superbestron"},"content":"            if (ctr !\u003d hourOfTask) {","lastModifiedDate":"2021-09-08"},{"lineNumber":292,"author":{"gitId":"Superbestron"},"content":"                ctr \u003d hourOfTask;","lastModifiedDate":"2021-09-08"},{"lineNumber":293,"author":{"gitId":"Superbestron"},"content":"                str.append(\u0027\\n\u0027);","lastModifiedDate":"2021-09-08"},{"lineNumber":294,"author":{"gitId":"Superbestron"},"content":"                str.append(ui.printScheduleByHourMessage(t.getTime()));","lastModifiedDate":"2021-09-08"},{"lineNumber":295,"author":{"gitId":"Superbestron"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":296,"author":{"gitId":"Superbestron"},"content":"            str.append(t);","lastModifiedDate":"2021-09-08"},{"lineNumber":297,"author":{"gitId":"Superbestron"},"content":"            str.append(\u0027\\n\u0027);","lastModifiedDate":"2021-09-08"},{"lineNumber":298,"author":{"gitId":"Superbestron"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":299,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":300,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":301,"author":{"gitId":"Superbestron"},"content":"    private void extractSameDayTasks(TaskList tasks, ArrayList\u003cTask\u003e list, LocalDate formattedDate) {","lastModifiedDate":"2021-09-08"},{"lineNumber":302,"author":{"gitId":"Superbestron"},"content":"        for (int i \u003d 0; i \u003c tasks.numberOfTasks(); i++) {","lastModifiedDate":"2021-09-08"},{"lineNumber":303,"author":{"gitId":"Superbestron"},"content":"            Task t \u003d tasks.taskNumber(i);","lastModifiedDate":"2021-09-08"},{"lineNumber":304,"author":{"gitId":"Superbestron"},"content":"            assert t !\u003d null : \"Task to be added should not be null.\";","lastModifiedDate":"2021-09-08"},{"lineNumber":305,"author":{"gitId":"Superbestron"},"content":"            if (t instanceof Deadline | t instanceof Event) {","lastModifiedDate":"2021-09-08"},{"lineNumber":306,"author":{"gitId":"Superbestron"},"content":"                boolean isSameDate \u003d t.getDate().compareTo(formattedDate) \u003d\u003d 0;","lastModifiedDate":"2021-09-08"},{"lineNumber":307,"author":{"gitId":"Superbestron"},"content":"                if (isSameDate) {","lastModifiedDate":"2021-09-08"},{"lineNumber":308,"author":{"gitId":"Superbestron"},"content":"                    list.add(t);","lastModifiedDate":"2021-09-08"},{"lineNumber":309,"author":{"gitId":"Superbestron"},"content":"                }","lastModifiedDate":"2021-09-08"},{"lineNumber":310,"author":{"gitId":"Superbestron"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":311,"author":{"gitId":"Superbestron"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":312,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":313,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":314,"author":{"gitId":"Superbestron"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":315,"author":{"gitId":"Superbestron"},"content":"     * Signals the end of the program and returns a standard bye message.","lastModifiedDate":"2021-09-08"},{"lineNumber":316,"author":{"gitId":"Superbestron"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":317,"author":{"gitId":"Superbestron"},"content":"     * @param ui The current user interface of the user.","lastModifiedDate":"2021-09-08"},{"lineNumber":318,"author":{"gitId":"Superbestron"},"content":"     * @return A {@code String} with a standard bye message.","lastModifiedDate":"2021-09-08"},{"lineNumber":319,"author":{"gitId":"Superbestron"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":320,"author":{"gitId":"Superbestron"},"content":"    private String byeCommand(Ui ui) {","lastModifiedDate":"2021-09-01"},{"lineNumber":321,"author":{"gitId":"Superbestron"},"content":"        return ui.byeMessage();","lastModifiedDate":"2021-09-01"},{"lineNumber":322,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":323,"author":{"gitId":"Superbestron"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Superbestron":323}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Superbestron"},"content":"package duke.storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Superbestron"},"content":"import static duke.parser.Parser.dateFormatter;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Superbestron"},"content":"import static duke.parser.Parser.timeFormatter;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"Superbestron"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Superbestron"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Superbestron"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Superbestron"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Superbestron"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Superbestron"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Superbestron"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Superbestron"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"Superbestron"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"Superbestron"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"Superbestron"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"Superbestron"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Superbestron"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Superbestron"},"content":" * Encapsulates the loading of tasks from the file and the saving of tasks to the file","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Superbestron"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"Superbestron"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Superbestron"},"content":"    private final String filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Superbestron"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"Superbestron"},"content":"     * Public constructor to initialize a Storage object with the path of the file to be saved to and loaded from.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Superbestron"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Superbestron"},"content":"     * @param filePath Path of the file to be saved to and loaded from.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"Superbestron"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"Superbestron"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"Superbestron"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"Superbestron"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"Superbestron"},"content":"     * Loads the list of tasks from the file given in filePath.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"Superbestron"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"Superbestron"},"content":"     * @return A list of tasks from the file.","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"Superbestron"},"content":"     * @throws DukeException Throws exception if the file could not be found.","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"Superbestron"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"Superbestron"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"Superbestron"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"Superbestron"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"Superbestron"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"Superbestron"},"content":"            Scanner sc \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"Superbestron"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"Superbestron"},"content":"                String input \u003d sc.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"Superbestron"},"content":"                assert !input.equals(\"\") : \"User\u0027s input should not be empty.\";","lastModifiedDate":"2021-09-03"},{"lineNumber":50,"author":{"gitId":"Superbestron"},"content":"                String[] splitStr \u003d input.split(\"\\\\|\");","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"Superbestron"},"content":"                Task t;","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"Superbestron"},"content":"                if (splitStr[0].trim().equals(\"T\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"Superbestron"},"content":"                    t \u003d new Todo(splitStr[2].trim());","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"Superbestron"},"content":"                } else if (splitStr[0].trim().equals(\"E\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"Superbestron"},"content":"                    String[] dateTime \u003d splitStr[3].trim().split(\"\\\\s+\");","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"Superbestron"},"content":"                    t \u003d new Event(splitStr[2].trim(), timeFormatter(dateTime[1]), dateFormatter(dateTime[0]));","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"Superbestron"},"content":"                } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"Superbestron"},"content":"                    String[] dateTime \u003d splitStr[3].trim().split(\"\\\\s+\");","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"Superbestron"},"content":"                    t \u003d new Deadline(splitStr[2].trim(), timeFormatter(dateTime[1]), dateFormatter(dateTime[0]));","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"Superbestron"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"Superbestron"},"content":"                list.add(t);","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"Superbestron"},"content":"                if (splitStr[1].trim().equals(\"1\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"Superbestron"},"content":"                    t.markTaskDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"Superbestron"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"Superbestron"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"Superbestron"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"Superbestron"},"content":"            throw new DukeException(\"Could not find file to load from.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"Superbestron"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"Superbestron"},"content":"        return list;","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"Superbestron"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"Superbestron"},"content":"     * Saves the current list of tasks to the file given in filePath.","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"Superbestron"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"Superbestron"},"content":"     * @param tasks A list of tasks to be saved to the file.","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"Superbestron"},"content":"     * @throws IOException Throws exception if the file could not be opened.","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"Superbestron"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"Superbestron"},"content":"    public void saveToDisk(TaskList tasks) throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"Superbestron"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"Superbestron"},"content":"        for (int i \u003d 0; i \u003c tasks.numberOfTasks(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"Superbestron"},"content":"            fw.write(tasks.taskNumber(i).outputFormat() + \u0027\\n\u0027);","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"Superbestron"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"Superbestron"},"content":"        fw.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"Superbestron"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Superbestron":86}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Superbestron"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Superbestron"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Superbestron"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Superbestron"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Superbestron"},"content":"/** Encapsulates a Deadline with a description, time and date. */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Superbestron"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"Superbestron"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Superbestron"},"content":"     * Public constructor to initialize a Deadline object.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Superbestron"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Superbestron"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Superbestron"},"content":"     * @param time The time of the deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Superbestron"},"content":"     * @param date The date of the deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Superbestron"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Superbestron"},"content":"    public Deadline(String description, LocalTime time, LocalDate date) {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Superbestron"},"content":"        super(description, time, date);","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"Superbestron"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"Superbestron"},"content":"    public String outputFormat() {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"Superbestron"},"content":"        return \"D\" + super.outputFormat() + \" | \" + date.getDayOfMonth() + \"/\" + date.getMonthValue()","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"Superbestron"},"content":"                + \"/\" + date.getYear() + \" \"","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"Superbestron"},"content":"                + String.format(\"%1$\" + 2 + \"s\", time.getHour()).replace(\u0027 \u0027, \u00270\u0027)","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"Superbestron"},"content":"                + String.format(\"%1$\" + 2 + \"s\", time.getMinute()).replace(\u0027 \u0027, \u00270\u0027);","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"Superbestron"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"Superbestron"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"Superbestron"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"Superbestron"},"content":"                + date.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"))","lastModifiedDate":"2021-09-09"},{"lineNumber":32,"author":{"gitId":"Superbestron"},"content":"                + \" \" + time.format(DateTimeFormatter.ofPattern(\"hh:mm a\")) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"Superbestron"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"Superbestron":34}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Superbestron"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Superbestron"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Superbestron"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Superbestron"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Superbestron"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"Superbestron"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"Superbestron"},"content":"     * Public constructor to initialize an Event object.","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"Superbestron"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"Superbestron"},"content":"     * @param description The description of the event.","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"Superbestron"},"content":"     * @param time The time of the event.","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"Superbestron"},"content":"     * @param date The date of the event.","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"Superbestron"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"Superbestron"},"content":"    public Event(String description, LocalTime time, LocalDate date) {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Superbestron"},"content":"        super(description, time, date);","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"Superbestron"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"Superbestron"},"content":"        return this.date;","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"Superbestron"},"content":"    public LocalTime getTime() {","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"Superbestron"},"content":"        return this.time;","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"Superbestron"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"Superbestron"},"content":"    public String outputFormat() {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"Superbestron"},"content":"        return \"E\" + super.outputFormat() + \" | \" + date.getDayOfMonth() + \"/\" + date.getMonthValue()","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"Superbestron"},"content":"                + \"/\" + date.getYear()","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"Superbestron"},"content":"                + \" \" + String.format(\"%1$\" + 2 + \"s\", time.getHour()).replace(\u0027 \u0027, \u00270\u0027)","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"Superbestron"},"content":"                + String.format(\"%1$\" + 2 + \"s\", time.getMinute()).replace(\u0027 \u0027, \u00270\u0027);","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"Superbestron"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"Superbestron"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"Superbestron"},"content":"        return \"[E]\" + super.toString() + \" (at: \"","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"Superbestron"},"content":"                + date.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"))","lastModifiedDate":"2021-09-09"},{"lineNumber":39,"author":{"gitId":"Superbestron"},"content":"                + \" \" + time.format(DateTimeFormatter.ofPattern(\"hh:mm a\")) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"Superbestron"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"Superbestron":41}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Superbestron"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Superbestron"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"Superbestron"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"Superbestron"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Superbestron"},"content":" * Encapsulates a task with a description and whether has it been completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Superbestron"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Superbestron"},"content":"public abstract class Task implements Comparable\u003cTask\u003e {","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"Superbestron"},"content":"    protected String description;","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"Superbestron"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"Superbestron"},"content":"    protected LocalTime time;","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"Superbestron"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"Superbestron"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Superbestron"},"content":"     * Public constructor to initialize a Task object.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Superbestron"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Superbestron"},"content":"     * @param description The description of the Task.","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"Superbestron"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Superbestron"},"content":"    public Task(String description, LocalTime time, LocalDate date) {","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"Superbestron"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"Superbestron"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"Superbestron"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"Superbestron"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"Superbestron"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"Superbestron"},"content":"    public int compareTo(Task t) {","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"Superbestron"},"content":"        int temp \u003d getDate().compareTo(t.getDate());","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"Superbestron"},"content":"        if (temp \u003d\u003d 0) {","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"Superbestron"},"content":"            return getTime().compareTo(t.getTime());","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"Superbestron"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"Superbestron"},"content":"        return temp;","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"Superbestron"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"Superbestron"},"content":"        return date;","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"Superbestron"},"content":"    public LocalTime getTime() {","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"Superbestron"},"content":"        return time;","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"Superbestron"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"Superbestron"},"content":"        return description;","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"Superbestron"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"Superbestron"},"content":"     * Marks a task as done with a \"X\", if it is not done it will be just a blank space.","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"Superbestron"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"Superbestron"},"content":"     * @return A string showing whether a task is done.","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"Superbestron"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"Superbestron"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"Superbestron"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":56,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"Superbestron"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"Superbestron"},"content":"     * Marks a task as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"Superbestron"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"Superbestron"},"content":"    public void markTaskDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":61,"author":{"gitId":"Superbestron"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-09-08"},{"lineNumber":62,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"Superbestron"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"Superbestron"},"content":"     * Returns the output of deadline in a format suitable for saving to a file.","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"Superbestron"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"Superbestron"},"content":"     * @return A string representing the output.","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"Superbestron"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"Superbestron"},"content":"    public String outputFormat() {","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"Superbestron"},"content":"        return \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2021-09-08"},{"lineNumber":71,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":72,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":73,"author":{"gitId":"Superbestron"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":74,"author":{"gitId":"Superbestron"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":75,"author":{"gitId":"Superbestron"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2021-09-08"},{"lineNumber":76,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":77,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":78,"author":{"gitId":"Superbestron"},"content":"    //...","lastModifiedDate":"2021-08-16"},{"lineNumber":79,"author":{"gitId":"Superbestron"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"Superbestron":79}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Superbestron"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Superbestron"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Superbestron"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"Superbestron"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Superbestron"},"content":" * Encapsulates a list of tasks. It supports operations to add and remove tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Superbestron"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Superbestron"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Superbestron"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Superbestron"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Superbestron"},"content":"     * Constructs an empty task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Superbestron"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Superbestron"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Superbestron"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Superbestron"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Superbestron"},"content":"     * Constructs a task list with tasks given inside list.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Superbestron"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"Superbestron"},"content":"     * @param tasks Contains a list of tasks to be initialized in TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Superbestron"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"Superbestron"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Superbestron"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"Superbestron"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"Superbestron"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Superbestron"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"Superbestron"},"content":"     * @param t The task to be added.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"Superbestron"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"Superbestron"},"content":"    public String addTask(Task t, Ui ui) {","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"Superbestron"},"content":"        String str \u003d ui.addTaskMessage(t);","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"Superbestron"},"content":"        assert t !\u003d null : \"Task to be added should not be null.\";","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"Superbestron"},"content":"        tasks.add(t);","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"Superbestron"},"content":"        return str + ui.printTaskLength(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"Superbestron"},"content":"    /** Prints all tasks in the variable tasks */","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"Superbestron"},"content":"    public String printAllTasks() {","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"Superbestron"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"Superbestron"},"content":"        for (int i \u003d 0; i \u003c this.numberOfTasks(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"Superbestron"},"content":"            str.append(i + 1).append(\". \").append(this.taskNumber(i)).append(\"\\n\");","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"Superbestron"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"Superbestron"},"content":"        return str.toString();","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"Superbestron"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"Superbestron"},"content":"     * Returns the the number of tasks in the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"Superbestron"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"Superbestron"},"content":"     * @return Size of list.","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"Superbestron"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"Superbestron"},"content":"    public int numberOfTasks() {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"Superbestron"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"Superbestron"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"Superbestron"},"content":"     * Returns the given task according to its position in list.","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"Superbestron"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"Superbestron"},"content":"     * @param i The position of the task to be returned.","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"Superbestron"},"content":"     * @return The task given by position i.","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"Superbestron"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"Superbestron"},"content":"    public Task taskNumber(int i) {","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"Superbestron"},"content":"        return tasks.get(i);","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"Superbestron"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"Superbestron"},"content":"     * Removes a task from the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"Superbestron"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"Superbestron"},"content":"     * @param i The task to be removed.","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"Superbestron"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"Superbestron"},"content":"    public void removeTask(int i) {","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"Superbestron"},"content":"        tasks.remove(i);","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"Superbestron"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Superbestron":77}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Superbestron"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Superbestron"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"Superbestron"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"Superbestron"},"content":"        super(description, null, null);","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"Superbestron"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"Superbestron"},"content":"    public String outputFormat() {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"Superbestron"},"content":"        return \"T\" + super.outputFormat();","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"Superbestron"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"Superbestron"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"Superbestron"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"Superbestron"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"Superbestron":18}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Superbestron"},"content":"package duke.ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Superbestron"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"Superbestron"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"Superbestron"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"Superbestron"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"Superbestron"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"Superbestron"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Superbestron"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Superbestron"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Superbestron"},"content":" * Class that deals with interactions with the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Superbestron"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Superbestron"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Superbestron"},"content":"    private final Scanner sc;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Superbestron"},"content":"    public Ui() {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Superbestron"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Superbestron"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"Superbestron"},"content":"     * Default welcome message printed when user starts the program.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Superbestron"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"Superbestron"},"content":"    public void welcomeMessage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Superbestron"},"content":"        lineGenerator();","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Superbestron"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Superbestron"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"Superbestron"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"Superbestron"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Superbestron"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"Superbestron"},"content":"        System.out.println(logo);","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"Superbestron"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"Superbestron"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"Superbestron"},"content":"        lineGenerator();","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"Superbestron"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"Superbestron"},"content":"     * Returns a standard welcome message for Duke GUI","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"Superbestron"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"Superbestron"},"content":"     * @return A standard welcome message {@code String} for Duke GUI","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"Superbestron"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"Superbestron"},"content":"    public static String guiWelcomeMessage() {","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"Superbestron"},"content":"        return \"Hello, I\u0027m Duke\\nWhat can I do for you?\\n\"","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"Superbestron"},"content":"                + \"╭━━━╮╱╱╭╮\\n\"","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"Superbestron"},"content":"                + \"╰╮╭╮┃╱╱┃┃\\n\"","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"Superbestron"},"content":"                + \"╱┃┃┃┣╮╭┫┃╭┳━━╮\\n\"","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"Superbestron"},"content":"                + \"╱┃┃┃┃┃┃┃╰╯┫┃━┫\\n\"","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"Superbestron"},"content":"                + \"╭╯╰╯┃╰╯┃╭╮┫┃━┫\\n\"","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"Superbestron"},"content":"                + \"╰━━━┻━━┻╯╰┻━━╯\\n\";","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"Superbestron"},"content":"    public void lineGenerator() {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"Superbestron"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"Superbestron"},"content":"    public void enterCommand() {","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"Superbestron"},"content":"        System.out.print(\"Enter command: \");","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"Superbestron"},"content":"    public String readInput() {","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"Superbestron"},"content":"        return sc.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"Superbestron"},"content":"    public String printError(Exception e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"Superbestron"},"content":"        return e.getMessage();","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"Superbestron"},"content":"    public String taskListMessage() {","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"Superbestron"},"content":"        return \"Here are the tasks in your list: \";","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"Superbestron"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"Superbestron"},"content":"     * Returns a standard message signalling task is marked as done.","lastModifiedDate":"2021-09-08"},{"lineNumber":75,"author":{"gitId":"Superbestron"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"Superbestron"},"content":"     * @param t The task to be marked as done.","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"Superbestron"},"content":"     * @return A {@code String} signalling task is marked as done.","lastModifiedDate":"2021-09-08"},{"lineNumber":78,"author":{"gitId":"Superbestron"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"Superbestron"},"content":"    public String taskDone(Task t) {","lastModifiedDate":"2021-09-01"},{"lineNumber":80,"author":{"gitId":"Superbestron"},"content":"        return \"Nice! I\u0027ve marked this task as done: \\n  \" + t + \u0027\\n\u0027;","lastModifiedDate":"2021-09-01"},{"lineNumber":81,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"Superbestron"},"content":"    public String printTaskLength(TaskList tasks) {","lastModifiedDate":"2021-09-01"},{"lineNumber":84,"author":{"gitId":"Superbestron"},"content":"        return \"Now you have \" + tasks.numberOfTasks() + \" tasks in the list.\\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":85,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"Superbestron"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"Superbestron"},"content":"     * Returns a standard message by hour of the day.","lastModifiedDate":"2021-09-08"},{"lineNumber":89,"author":{"gitId":"Superbestron"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":90,"author":{"gitId":"Superbestron"},"content":"     * @param time","lastModifiedDate":"2021-09-08"},{"lineNumber":91,"author":{"gitId":"Superbestron"},"content":"     * @return A {@code String} by hour of the day.","lastModifiedDate":"2021-09-08"},{"lineNumber":92,"author":{"gitId":"Superbestron"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":93,"author":{"gitId":"Superbestron"},"content":"    public String printScheduleByHourMessage(LocalTime time) {","lastModifiedDate":"2021-09-08"},{"lineNumber":94,"author":{"gitId":"Superbestron"},"content":"        time \u003d time.withMinute(0);","lastModifiedDate":"2021-09-08"},{"lineNumber":95,"author":{"gitId":"Superbestron"},"content":"        return time.format(DateTimeFormatter.ofPattern(\"hh:mm a\")) + \" to \"","lastModifiedDate":"2021-09-08"},{"lineNumber":96,"author":{"gitId":"Superbestron"},"content":"                + time.plusHours(1).format(DateTimeFormatter.ofPattern(\"hh:mm a\")) + \":\\n\";","lastModifiedDate":"2021-09-08"},{"lineNumber":97,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":98,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":99,"author":{"gitId":"Superbestron"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":100,"author":{"gitId":"Superbestron"},"content":"     * Returns a standard message signalling task is added.","lastModifiedDate":"2021-09-08"},{"lineNumber":101,"author":{"gitId":"Superbestron"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":102,"author":{"gitId":"Superbestron"},"content":"     * @param t The task to be added.","lastModifiedDate":"2021-08-29"},{"lineNumber":103,"author":{"gitId":"Superbestron"},"content":"     * @return A {@code String} signalling task is added.","lastModifiedDate":"2021-09-08"},{"lineNumber":104,"author":{"gitId":"Superbestron"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":105,"author":{"gitId":"Superbestron"},"content":"    public String addTaskMessage(Task t) {","lastModifiedDate":"2021-09-01"},{"lineNumber":106,"author":{"gitId":"Superbestron"},"content":"        return \"Got it. I\u0027ve added this task: \\n  \" + t + \u0027\\n\u0027;","lastModifiedDate":"2021-09-01"},{"lineNumber":107,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"Superbestron"},"content":"    public String byeMessage() {","lastModifiedDate":"2021-09-01"},{"lineNumber":110,"author":{"gitId":"Superbestron"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-09-01"},{"lineNumber":111,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"Superbestron"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":114,"author":{"gitId":"Superbestron"},"content":"     * Returns a standard message signalling task is deleted.","lastModifiedDate":"2021-09-08"},{"lineNumber":115,"author":{"gitId":"Superbestron"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":116,"author":{"gitId":"Superbestron"},"content":"     * @param t The task to be deleted.","lastModifiedDate":"2021-08-29"},{"lineNumber":117,"author":{"gitId":"Superbestron"},"content":"     * @return A {@code String} signalling task is deleted.","lastModifiedDate":"2021-09-08"},{"lineNumber":118,"author":{"gitId":"Superbestron"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":119,"author":{"gitId":"Superbestron"},"content":"    public String deleteTask(Task t) {","lastModifiedDate":"2021-09-01"},{"lineNumber":120,"author":{"gitId":"Superbestron"},"content":"        return \"Noted! I\u0027ve removed this task: \\n  \" + t + \u0027\\n\u0027;","lastModifiedDate":"2021-09-01"},{"lineNumber":121,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"Superbestron"},"content":"    public static String showLoadingError() {","lastModifiedDate":"2021-09-01"},{"lineNumber":124,"author":{"gitId":"Superbestron"},"content":"        return \"No past saved data!\\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":125,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"Superbestron"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":128,"author":{"gitId":"Superbestron"},"content":"     * Returns a standard message with a list of matching tasks.","lastModifiedDate":"2021-09-08"},{"lineNumber":129,"author":{"gitId":"Superbestron"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":130,"author":{"gitId":"Superbestron"},"content":"     * @return A {@code String} with a list of matching tasks.","lastModifiedDate":"2021-09-08"},{"lineNumber":131,"author":{"gitId":"Superbestron"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":132,"author":{"gitId":"Superbestron"},"content":"    public String matchTaskMessage() {","lastModifiedDate":"2021-09-01"},{"lineNumber":133,"author":{"gitId":"Superbestron"},"content":"        return \"Here are the matching tasks in your list: \\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":134,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":135,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":136,"author":{"gitId":"Superbestron"},"content":"    public String viewScheduleMessage(LocalDate date) {","lastModifiedDate":"2021-09-08"},{"lineNumber":137,"author":{"gitId":"Superbestron"},"content":"        return \"Here are your tasks for \" + date.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.MEDIUM)) + \u0027:\u0027;","lastModifiedDate":"2021-09-08"},{"lineNumber":138,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":139,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":140,"author":{"gitId":"Superbestron"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":141,"author":{"gitId":"Superbestron"},"content":"     * Returns a standard message signalling that no task is scheduled for a particular date.","lastModifiedDate":"2021-09-08"},{"lineNumber":142,"author":{"gitId":"Superbestron"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":143,"author":{"gitId":"Superbestron"},"content":"     * @param date The chosen date of interest.","lastModifiedDate":"2021-09-08"},{"lineNumber":144,"author":{"gitId":"Superbestron"},"content":"     * @return A {@code String} signalling that no task is scheduled for a particular date.","lastModifiedDate":"2021-09-08"},{"lineNumber":145,"author":{"gitId":"Superbestron"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":146,"author":{"gitId":"Superbestron"},"content":"    public String noTaskScheduledMessage(LocalDate date) {","lastModifiedDate":"2021-09-08"},{"lineNumber":147,"author":{"gitId":"Superbestron"},"content":"        return \"You have no tasks scheduled for \"","lastModifiedDate":"2021-09-08"},{"lineNumber":148,"author":{"gitId":"Superbestron"},"content":"                + date.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.MEDIUM)) + \".\";","lastModifiedDate":"2021-09-08"},{"lineNumber":149,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":150,"author":{"gitId":"Superbestron"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Superbestron":150}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Superbestron"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"Superbestron"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"Superbestron"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"Superbestron"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"Superbestron"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"Superbestron"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../style/styles.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"Superbestron"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"Superbestron"},"content":"    \u003cText fx:id\u003d\"textBox\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" styleClass\u003d\"userInput\" text\u003d\"Text\" textAlignment\u003d\"RIGHT\" wrappingWidth\u003d\"225.0\"\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"Superbestron"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"Superbestron"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"Superbestron"},"content":"         \u003c/HBox.margin\u003e\u003c/Text\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"Superbestron"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"Superbestron"},"content":"  \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"Superbestron"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"Superbestron"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"Superbestron"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"Superbestron"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"Superbestron":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Superbestron"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"Superbestron"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"Superbestron"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"Superbestron"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"Superbestron"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"Superbestron"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"Superbestron"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../style/styles.css\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.controllers.MainWindow\"\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"Superbestron"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"Superbestron"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" stylesheets\u003d\"@../style/styles.css\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"Superbestron"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"Superbestron"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../style/styles.css\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"Superbestron"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"Superbestron"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" styleClass\u003d\"mainWindow\" stylesheets\u003d\"@../style/styles.css\" /\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"Superbestron"},"content":"      \u003c/content\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"Superbestron"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"Superbestron"},"content":"  \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"Superbestron"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"Superbestron":19}},{"path":"src/test/java/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Superbestron"},"content":"package parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Superbestron"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"Superbestron"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"Superbestron"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Superbestron"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Superbestron"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Superbestron"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Superbestron"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Superbestron"},"content":"    public void todoCommandTest() {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Superbestron"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Superbestron"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Superbestron"},"content":"        Parser parser \u003d new Parser(\"todo Eat Chicken\");","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Superbestron"},"content":"        tasks.addTask(parser.todoCommand(), ui);","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Superbestron"},"content":"        assertEquals(\"[T][ ] Eat Chicken\", tasks.taskNumber(0).toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Superbestron"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Superbestron"},"content":"    public void deadlineCommandTest() {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"Superbestron"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Superbestron"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Superbestron"},"content":"        Parser parser \u003d new Parser(\"deadline Return Book /by 9/4/2021 1630\");","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Superbestron"},"content":"        tasks.addTask(parser.deadlineCommand(), ui);","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Superbestron"},"content":"        assertEquals(\"[D][ ] Return Book (by: 9 Apr 2021 04:30 PM)\", tasks.taskNumber(0).toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"Superbestron"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Superbestron":29}},{"path":"src/test/java/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Superbestron"},"content":"package storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Superbestron"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"Superbestron"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Superbestron"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Superbestron"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Superbestron"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"Superbestron"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"Superbestron"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"Superbestron"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Superbestron"},"content":"public class StorageTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Superbestron"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Superbestron"},"content":"    public void loadTest() {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Superbestron"},"content":"        String[] strings \u003d {\"T | 0 | return book\",","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Superbestron"},"content":"            \"E | 1 | carnival  | 2/12/2021 1430\",","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Superbestron"},"content":"            \"D | 0 | assignment 0  | 29/8/2021 2359\"};","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Superbestron"},"content":"        Storage storage \u003d new Storage(\"test.txt\");","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Superbestron"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Superbestron"},"content":"            FileWriter fw \u003d new FileWriter(\"test.txt\");","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"Superbestron"},"content":"            for (String str : strings) {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Superbestron"},"content":"                fw.write(str + \u0027\\n\u0027);","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Superbestron"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Superbestron"},"content":"            fw.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Superbestron"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Superbestron"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"Superbestron"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"Superbestron"},"content":"        ArrayList\u003cTask\u003e list \u003d storage.load();","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Superbestron"},"content":"        assertEquals(\"[T][ ] return book\", list.get(0).toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"Superbestron"},"content":"        System.out.println(list.get(1).getDate());","lastModifiedDate":"2021-09-09"},{"lineNumber":33,"author":{"gitId":"Superbestron"},"content":"        assertEquals(\"[E][X] carnival (at: 2 Dec 2021 02:30 PM)\", list.get(1).toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"Superbestron"},"content":"        assertEquals(\"[D][ ] assignment 0 (by: 29 Aug 2021 11:59 PM)\", list.get(2).toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"Superbestron"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"Superbestron"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Superbestron":36}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Superbestron"},"content":"todo borrow book","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"Superbestron"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"Superbestron"},"content":"deadline return book /by 2/12/2019 0000","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Superbestron"},"content":"event project meeting /at 5/8/2021 1800","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Superbestron"},"content":"done 2","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"Superbestron"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"Superbestron"},"content":"todo eat","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"Superbestron"},"content":"delete 1","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"Superbestron"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"Superbestron"},"content":"bye","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"Superbestron":10}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"Superbestron"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Superbestron":1,"-":33}}]
