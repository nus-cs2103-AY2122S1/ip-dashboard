[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nhjryan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"nhjryan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"nhjryan"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"nhjryan"},"content":"    protected LocalDate by;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"nhjryan"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"nhjryan"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"nhjryan"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"nhjryan"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"nhjryan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"nhjryan"},"content":"        return \" [D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"nhjryan"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"nhjryan":16}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nhjryan"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"nhjryan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"nhjryan"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"nhjryan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"nhjryan"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"nhjryan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"nhjryan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"nhjryan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"nhjryan"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"nhjryan"},"content":"        String startUp \u003d \" Hello! I\u0027m Duke\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"nhjryan"},"content":"                + \" What can I do for you?\";","lastModifiedDate":"2021-08-20"},{"lineNumber":15,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"nhjryan"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-20"},{"lineNumber":17,"author":{"gitId":"nhjryan"},"content":"        Scanner myObj \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"nhjryan"},"content":"        File f \u003d new File(\"src/main/java/list.txt\");","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"nhjryan"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"nhjryan"},"content":"            if (!f.exists()) {","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"nhjryan"},"content":"                f.createNewFile();","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"nhjryan"},"content":"            }","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"nhjryan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"nhjryan"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"nhjryan"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"nhjryan"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"nhjryan"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"nhjryan"},"content":"            String str \u003d s.nextLine();","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"nhjryan"},"content":"            String[] taskArr \u003d str.split(\" \\\\| \");","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"nhjryan"},"content":"            switch (taskArr[0]) {","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"nhjryan"},"content":"                case \"T\":","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"nhjryan"},"content":"                    Todo todo \u003d new Todo(taskArr[2]);","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"nhjryan"},"content":"                    list.add(todo);","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"nhjryan"},"content":"                    if (taskArr[1].equals(\"1\")) {","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"nhjryan"},"content":"                        todo.setDone();","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"nhjryan"},"content":"                    }","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"nhjryan"},"content":"                    break;","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"nhjryan"},"content":"                case \"E\":","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"nhjryan"},"content":"                    Event event \u003d new Event(taskArr[2], LocalDate.parse(taskArr[3]));","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"nhjryan"},"content":"                    list.add(event);","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"nhjryan"},"content":"                    if (taskArr[1].equals(\"1\")) {","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"nhjryan"},"content":"                        event.setDone();","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"nhjryan"},"content":"                    }","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"nhjryan"},"content":"                    break;","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"nhjryan"},"content":"                case \"D\":","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"nhjryan"},"content":"                    Deadline deadline \u003d new Deadline(taskArr[2], LocalDate.parse(taskArr[3]));","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"nhjryan"},"content":"                    list.add(deadline);","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"nhjryan"},"content":"                    if (taskArr[1].equals(\"1\")) {","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"nhjryan"},"content":"                        deadline.setDone();","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"nhjryan"},"content":"                    }","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"nhjryan"},"content":"                    break;","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"nhjryan"},"content":"                default:","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"nhjryan"},"content":"                    break;","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"nhjryan"},"content":"            }","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"nhjryan"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"nhjryan"},"content":"        msgTemplate(startUp);","lastModifiedDate":"2021-08-20"},{"lineNumber":63,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"nhjryan"},"content":"        while(true) {","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"nhjryan"},"content":"            String input \u003d myObj.nextLine();","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"nhjryan"},"content":"            if (input.startsWith(\"todo\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"nhjryan"},"content":"                try {","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"nhjryan"},"content":"                    if (input.charAt(4) !\u003d \u0027 \u0027) throw new IllegalArgumentException();","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"nhjryan"},"content":"                    if (input.equals(\"todo \")) throw new StringIndexOutOfBoundsException();","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"nhjryan"},"content":"                    String item \u003d input.substring(5);","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"nhjryan"},"content":"                    list.add(new Todo(item));","lastModifiedDate":"2021-08-20"},{"lineNumber":72,"author":{"gitId":"nhjryan"},"content":"                    msgTemplate(\" Got it. I\u0027ve added this task:\\n\" + \"  \" + list.get(list.size() - 1) + System.lineSeparator() + \" Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-20"},{"lineNumber":73,"author":{"gitId":"nhjryan"},"content":"                    updateText(list, f);","lastModifiedDate":"2021-09-02"},{"lineNumber":74,"author":{"gitId":"nhjryan"},"content":"                } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"nhjryan"},"content":"                    msgTemplate(\" ☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"nhjryan"},"content":"                } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"nhjryan"},"content":"                    msgTemplate(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"nhjryan"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"nhjryan"},"content":"            } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"nhjryan"},"content":"                try {","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"nhjryan"},"content":"                    if (input.charAt(8) !\u003d \u0027 \u0027) throw new IllegalArgumentException();","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"nhjryan"},"content":"                    if (!input.contains(\"/by\")) throw new DukeException(\" ☹ OOPS!!! Please specify a date.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"nhjryan"},"content":"                    String item \u003d input.substring(9, input.indexOf(\"/by \") - 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"nhjryan"},"content":"                    String dString \u003d input.substring(input.indexOf(\"/by \") + 4);","lastModifiedDate":"2021-09-02"},{"lineNumber":85,"author":{"gitId":"nhjryan"},"content":"                    try {","lastModifiedDate":"2021-09-02"},{"lineNumber":86,"author":{"gitId":"nhjryan"},"content":"                        LocalDate date \u003d LocalDate.parse(dString);","lastModifiedDate":"2021-09-02"},{"lineNumber":87,"author":{"gitId":"nhjryan"},"content":"                        list.add(new Deadline(item, date));","lastModifiedDate":"2021-08-20"},{"lineNumber":88,"author":{"gitId":"nhjryan"},"content":"                        msgTemplate(\" Got it. I\u0027ve added this task:\\n\" + \"  \" + list.get(list.size() - 1) + System.lineSeparator() + \" Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-20"},{"lineNumber":89,"author":{"gitId":"nhjryan"},"content":"                        updateText(list, f);","lastModifiedDate":"2021-09-02"},{"lineNumber":90,"author":{"gitId":"nhjryan"},"content":"                    } catch (DateTimeParseException e){","lastModifiedDate":"2021-09-02"},{"lineNumber":91,"author":{"gitId":"nhjryan"},"content":"                        msgTemplate(\" ☹ OOPS!!! Please use the specified date format (YYYY-MM-DD)!\");","lastModifiedDate":"2021-09-02"},{"lineNumber":92,"author":{"gitId":"nhjryan"},"content":"                    }","lastModifiedDate":"2021-09-02"},{"lineNumber":93,"author":{"gitId":"nhjryan"},"content":"                } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"nhjryan"},"content":"                    msgTemplate(\" ☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"nhjryan"},"content":"                } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"nhjryan"},"content":"                    msgTemplate(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"nhjryan"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"nhjryan"},"content":"                    msgTemplate(e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"nhjryan"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"nhjryan"},"content":"            } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":101,"author":{"gitId":"nhjryan"},"content":"                try {","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"nhjryan"},"content":"                    if (input.charAt(5) !\u003d \u0027 \u0027) throw new IllegalArgumentException();","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"nhjryan"},"content":"                    if (!input.contains(\"/at\")) throw new DukeException(\" ☹ OOPS!!! Please specify a date.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"nhjryan"},"content":"                    String item \u003d input.substring(6, input.indexOf(\"/at \") - 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":105,"author":{"gitId":"nhjryan"},"content":"                    String dString \u003d input.substring(input.indexOf(\"/at \") + 4);","lastModifiedDate":"2021-09-02"},{"lineNumber":106,"author":{"gitId":"nhjryan"},"content":"                    try {","lastModifiedDate":"2021-09-02"},{"lineNumber":107,"author":{"gitId":"nhjryan"},"content":"                        LocalDate date \u003d LocalDate.parse(dString);","lastModifiedDate":"2021-09-02"},{"lineNumber":108,"author":{"gitId":"nhjryan"},"content":"                        list.add(new Event(item, date));","lastModifiedDate":"2021-08-20"},{"lineNumber":109,"author":{"gitId":"nhjryan"},"content":"                        msgTemplate(\" Got it. I\u0027ve added this task:\\n\" + \"  \" + list.get(list.size() - 1) + System.lineSeparator() + \" Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-20"},{"lineNumber":110,"author":{"gitId":"nhjryan"},"content":"                        updateText(list, f);","lastModifiedDate":"2021-09-02"},{"lineNumber":111,"author":{"gitId":"nhjryan"},"content":"                    } catch (DateTimeParseException e){","lastModifiedDate":"2021-09-02"},{"lineNumber":112,"author":{"gitId":"nhjryan"},"content":"                        msgTemplate(\" ☹ OOPS!!! Please use the specified date format (YYYY-MM-DD)!\");","lastModifiedDate":"2021-09-02"},{"lineNumber":113,"author":{"gitId":"nhjryan"},"content":"                    }","lastModifiedDate":"2021-09-02"},{"lineNumber":114,"author":{"gitId":"nhjryan"},"content":"                } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":115,"author":{"gitId":"nhjryan"},"content":"                    msgTemplate(\" ☹ OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":116,"author":{"gitId":"nhjryan"},"content":"                } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":117,"author":{"gitId":"nhjryan"},"content":"                    msgTemplate(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-22"},{"lineNumber":118,"author":{"gitId":"nhjryan"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":119,"author":{"gitId":"nhjryan"},"content":"                    msgTemplate(e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"nhjryan"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":121,"author":{"gitId":"nhjryan"},"content":"            } else if (input.startsWith(\"done\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":122,"author":{"gitId":"nhjryan"},"content":"                try {","lastModifiedDate":"2021-08-22"},{"lineNumber":123,"author":{"gitId":"nhjryan"},"content":"                    if (input.equals(\"done\")) throw new NumberFormatException();","lastModifiedDate":"2021-08-22"},{"lineNumber":124,"author":{"gitId":"nhjryan"},"content":"                    int index \u003d Integer.parseInt(input.substring(5)) - 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":125,"author":{"gitId":"nhjryan"},"content":"                    list.get(index).setDone();","lastModifiedDate":"2021-08-20"},{"lineNumber":126,"author":{"gitId":"nhjryan"},"content":"                    msgTemplate(\" Nice! I\u0027ve marked this task as done:\\n\" + \"  \" + list.get(index));","lastModifiedDate":"2021-08-20"},{"lineNumber":127,"author":{"gitId":"nhjryan"},"content":"                    updateText(list, f);","lastModifiedDate":"2021-09-02"},{"lineNumber":128,"author":{"gitId":"nhjryan"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":129,"author":{"gitId":"nhjryan"},"content":"                    msgTemplate(\" ☹ OOPS!!! This entry does not exist!\");","lastModifiedDate":"2021-08-22"},{"lineNumber":130,"author":{"gitId":"nhjryan"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":131,"author":{"gitId":"nhjryan"},"content":"                    msgTemplate(\" ☹ OOPS!!! Please enter a number after done!\");","lastModifiedDate":"2021-08-22"},{"lineNumber":132,"author":{"gitId":"nhjryan"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":133,"author":{"gitId":"nhjryan"},"content":"            } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2021-08-20"},{"lineNumber":134,"author":{"gitId":"nhjryan"},"content":"                try {","lastModifiedDate":"2021-08-22"},{"lineNumber":135,"author":{"gitId":"nhjryan"},"content":"                    if (input.equals(\"delete\")) throw new NumberFormatException();","lastModifiedDate":"2021-08-22"},{"lineNumber":136,"author":{"gitId":"nhjryan"},"content":"                    int index \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2021-08-20"},{"lineNumber":137,"author":{"gitId":"nhjryan"},"content":"                    Task task \u003d list.get(index);","lastModifiedDate":"2021-08-20"},{"lineNumber":138,"author":{"gitId":"nhjryan"},"content":"                    list.remove(index);","lastModifiedDate":"2021-08-20"},{"lineNumber":139,"author":{"gitId":"nhjryan"},"content":"                    msgTemplate(\" Noted. I\u0027ve removed this task:\\n\" + \"  \" + task + System.lineSeparator() + \" Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-20"},{"lineNumber":140,"author":{"gitId":"nhjryan"},"content":"                    updateText(list, f);","lastModifiedDate":"2021-09-02"},{"lineNumber":141,"author":{"gitId":"nhjryan"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":142,"author":{"gitId":"nhjryan"},"content":"                    msgTemplate(\" ☹ OOPS!!! This entry does not exist!\");","lastModifiedDate":"2021-08-22"},{"lineNumber":143,"author":{"gitId":"nhjryan"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":144,"author":{"gitId":"nhjryan"},"content":"                    msgTemplate(\" ☹ OOPS!!! Please enter a number after delete!\");","lastModifiedDate":"2021-08-22"},{"lineNumber":145,"author":{"gitId":"nhjryan"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":146,"author":{"gitId":"nhjryan"},"content":"            } else if (input.equals(\"list\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":147,"author":{"gitId":"nhjryan"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-20"},{"lineNumber":148,"author":{"gitId":"nhjryan"},"content":"                for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2021-08-20"},{"lineNumber":149,"author":{"gitId":"nhjryan"},"content":"                    System.out.println(\" \" + (i + 1) + \".\" + list.get(i));","lastModifiedDate":"2021-08-20"},{"lineNumber":150,"author":{"gitId":"nhjryan"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":151,"author":{"gitId":"nhjryan"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-20"},{"lineNumber":152,"author":{"gitId":"nhjryan"},"content":"            } else if (input.equals(\"bye\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":153,"author":{"gitId":"nhjryan"},"content":"                msgTemplate(\" Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-20"},{"lineNumber":154,"author":{"gitId":"nhjryan"},"content":"                break;","lastModifiedDate":"2021-08-19"},{"lineNumber":155,"author":{"gitId":"nhjryan"},"content":"            } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":156,"author":{"gitId":"nhjryan"},"content":"                msgTemplate(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-22"},{"lineNumber":157,"author":{"gitId":"nhjryan"},"content":"            }","lastModifiedDate":"2021-08-20"},{"lineNumber":158,"author":{"gitId":"nhjryan"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":159,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":160,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":161,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":162,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":163,"author":{"gitId":"nhjryan"},"content":"    public static void msgTemplate(String msg){","lastModifiedDate":"2021-08-20"},{"lineNumber":164,"author":{"gitId":"nhjryan"},"content":"        String topLine \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2021-08-20"},{"lineNumber":165,"author":{"gitId":"nhjryan"},"content":"        String bottomLine \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-08-20"},{"lineNumber":166,"author":{"gitId":"nhjryan"},"content":"        System.out.println(topLine + msg + System.lineSeparator() + bottomLine);","lastModifiedDate":"2021-08-20"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":168,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":169,"author":{"gitId":"nhjryan"},"content":"    public static void updateText(ArrayList\u003cTask\u003e list, File file) throws IOException{","lastModifiedDate":"2021-09-02"},{"lineNumber":170,"author":{"gitId":"nhjryan"},"content":"        FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2021-09-02"},{"lineNumber":171,"author":{"gitId":"nhjryan"},"content":"        BufferedWriter bw \u003d new BufferedWriter(fw);","lastModifiedDate":"2021-09-02"},{"lineNumber":172,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":173,"author":{"gitId":"nhjryan"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":174,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":175,"author":{"gitId":"nhjryan"},"content":"            for (Task task : list) {","lastModifiedDate":"2021-09-02"},{"lineNumber":176,"author":{"gitId":"nhjryan"},"content":"                char taskType \u003d task.toString().charAt(2);","lastModifiedDate":"2021-09-02"},{"lineNumber":177,"author":{"gitId":"nhjryan"},"content":"                char isDone \u003d \u00270\u0027;","lastModifiedDate":"2021-09-02"},{"lineNumber":178,"author":{"gitId":"nhjryan"},"content":"                if (task.isDone) {","lastModifiedDate":"2021-09-02"},{"lineNumber":179,"author":{"gitId":"nhjryan"},"content":"                    isDone \u003d \u00271\u0027;","lastModifiedDate":"2021-09-02"},{"lineNumber":180,"author":{"gitId":"nhjryan"},"content":"                }","lastModifiedDate":"2021-09-02"},{"lineNumber":181,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":182,"author":{"gitId":"nhjryan"},"content":"                switch (taskType) {","lastModifiedDate":"2021-09-02"},{"lineNumber":183,"author":{"gitId":"nhjryan"},"content":"                    case \u0027T\u0027:","lastModifiedDate":"2021-09-02"},{"lineNumber":184,"author":{"gitId":"nhjryan"},"content":"                        bw.write(taskType + \" | \" + isDone + \" | \" + task.description);","lastModifiedDate":"2021-09-02"},{"lineNumber":185,"author":{"gitId":"nhjryan"},"content":"                        bw.newLine();","lastModifiedDate":"2021-09-02"},{"lineNumber":186,"author":{"gitId":"nhjryan"},"content":"                        break;","lastModifiedDate":"2021-09-02"},{"lineNumber":187,"author":{"gitId":"nhjryan"},"content":"                    case \u0027E\u0027:","lastModifiedDate":"2021-09-02"},{"lineNumber":188,"author":{"gitId":"nhjryan"},"content":"                        Event event \u003d (Event) task;","lastModifiedDate":"2021-09-02"},{"lineNumber":189,"author":{"gitId":"nhjryan"},"content":"                        bw.write(taskType + \" | \" + isDone + \" | \" + task.description + \" | \" + event.at);","lastModifiedDate":"2021-09-02"},{"lineNumber":190,"author":{"gitId":"nhjryan"},"content":"                        bw.newLine();","lastModifiedDate":"2021-09-02"},{"lineNumber":191,"author":{"gitId":"nhjryan"},"content":"                        break;","lastModifiedDate":"2021-09-02"},{"lineNumber":192,"author":{"gitId":"nhjryan"},"content":"                    case \u0027D\u0027:","lastModifiedDate":"2021-09-02"},{"lineNumber":193,"author":{"gitId":"nhjryan"},"content":"                        Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2021-09-02"},{"lineNumber":194,"author":{"gitId":"nhjryan"},"content":"                        bw.write(taskType + \" | \" + isDone + \" | \" + task.description + \" | \" + deadline.by);","lastModifiedDate":"2021-09-02"},{"lineNumber":195,"author":{"gitId":"nhjryan"},"content":"                        bw.newLine();","lastModifiedDate":"2021-09-02"},{"lineNumber":196,"author":{"gitId":"nhjryan"},"content":"                        break;","lastModifiedDate":"2021-09-02"},{"lineNumber":197,"author":{"gitId":"nhjryan"},"content":"                    default:","lastModifiedDate":"2021-09-02"},{"lineNumber":198,"author":{"gitId":"nhjryan"},"content":"                        throw new IllegalArgumentException();","lastModifiedDate":"2021-09-02"},{"lineNumber":199,"author":{"gitId":"nhjryan"},"content":"                }","lastModifiedDate":"2021-09-02"},{"lineNumber":200,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":201,"author":{"gitId":"nhjryan"},"content":"            }","lastModifiedDate":"2021-09-02"},{"lineNumber":202,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":203,"author":{"gitId":"nhjryan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":204,"author":{"gitId":"nhjryan"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2021-09-02"},{"lineNumber":205,"author":{"gitId":"nhjryan"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":206,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":207,"author":{"gitId":"nhjryan"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":208,"author":{"gitId":"nhjryan"},"content":"            bw.close();","lastModifiedDate":"2021-09-02"},{"lineNumber":209,"author":{"gitId":"nhjryan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":210,"author":{"gitId":"nhjryan"},"content":"            msgTemplate(e.getMessage());","lastModifiedDate":"2021-09-02"},{"lineNumber":211,"author":{"gitId":"nhjryan"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"nhjryan":209,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nhjryan"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"nhjryan"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"nhjryan"},"content":"        super(msg);","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"nhjryan"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"nhjryan":6}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nhjryan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"nhjryan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"nhjryan"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"nhjryan"},"content":"    protected LocalDate at;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"nhjryan"},"content":"    public Event(String description, LocalDate at) {","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"nhjryan"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"nhjryan"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"nhjryan"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"nhjryan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"nhjryan"},"content":"        return \" [E]\" + super.toString() + \" (at: \" + at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"nhjryan"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"nhjryan":16}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nhjryan"},"content":"public class Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"nhjryan"},"content":"    protected String description;","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"nhjryan"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"nhjryan"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"nhjryan"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"nhjryan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"nhjryan"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"nhjryan"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"nhjryan"},"content":"    public void setDone() {","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"nhjryan"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"nhjryan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"nhjryan"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"nhjryan"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"nhjryan":21}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nhjryan"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"nhjryan"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"nhjryan"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"nhjryan"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"nhjryan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"nhjryan"},"content":"        return \" [T]\" + super.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"nhjryan"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"nhjryan":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nhjryan"},"content":"todo read book","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"nhjryan"},"content":"deadline return book /by June 6th","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"nhjryan"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"nhjryan"},"content":"todo join sports club","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"nhjryan"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"nhjryan"},"content":"done 4","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"nhjryan"},"content":"todo borrow book","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"nhjryan"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"nhjryan"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"nhjryan"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"nhjryan"},"content":"delete 3","lastModifiedDate":"2021-08-20"},{"lineNumber":12,"author":{"gitId":"nhjryan"},"content":"rubbish","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"nhjryan"},"content":"delete 30","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"nhjryan"},"content":"delete a","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"nhjryan"},"content":"delete","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"nhjryan"},"content":"done 30","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"nhjryan"},"content":"done a","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"nhjryan"},"content":"done","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"nhjryan"},"content":"todoo","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"nhjryan"},"content":"deadline","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"nhjryan"},"content":"deadline need to do homework","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"nhjryan"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"nhjryan":22}}]
