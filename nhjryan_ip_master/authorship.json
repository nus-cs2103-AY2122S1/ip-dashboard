[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"nhjryan"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"nhjryan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"nhjryan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"nhjryan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"nhjryan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"nhjryan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"nhjryan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"nhjryan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"nhjryan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"nhjryan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"nhjryan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"nhjryan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"nhjryan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nhjryan":15,"-":46}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nhjryan"},"content":"D | 1 | homework | 2021-06-05","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"nhjryan"},"content":"T | 1 | test 1","lastModifiedDate":"2021-09-14"},{"lineNumber":3,"author":{"gitId":"nhjryan"},"content":"T | 0 | test 3","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"nhjryan":3}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nhjryan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"nhjryan"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"nhjryan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"nhjryan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"nhjryan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"nhjryan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"nhjryan"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"nhjryan"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"nhjryan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"nhjryan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"nhjryan"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"nhjryan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"nhjryan"},"content":"/**","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"nhjryan"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"nhjryan"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"nhjryan"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"nhjryan"},"content":" */","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"nhjryan"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"nhjryan"},"content":"    @FXML","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"nhjryan"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"nhjryan"},"content":"    @FXML","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"nhjryan"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"nhjryan"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"nhjryan"},"content":"        try {","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"nhjryan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"nhjryan"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"nhjryan"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"nhjryan"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"nhjryan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"nhjryan"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"nhjryan"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"nhjryan"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"nhjryan"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":39,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":40,"author":{"gitId":"nhjryan"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":41,"author":{"gitId":"nhjryan"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-13"},{"lineNumber":42,"author":{"gitId":"nhjryan"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":43,"author":{"gitId":"nhjryan"},"content":"    private void flip() {","lastModifiedDate":"2021-09-13"},{"lineNumber":44,"author":{"gitId":"nhjryan"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-13"},{"lineNumber":45,"author":{"gitId":"nhjryan"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-13"},{"lineNumber":46,"author":{"gitId":"nhjryan"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-13"},{"lineNumber":47,"author":{"gitId":"nhjryan"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-13"},{"lineNumber":48,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":49,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":50,"author":{"gitId":"nhjryan"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-13"},{"lineNumber":51,"author":{"gitId":"nhjryan"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-13"},{"lineNumber":52,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":53,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":54,"author":{"gitId":"nhjryan"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-13"},{"lineNumber":55,"author":{"gitId":"nhjryan"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-13"},{"lineNumber":56,"author":{"gitId":"nhjryan"},"content":"        db.flip();","lastModifiedDate":"2021-09-13"},{"lineNumber":57,"author":{"gitId":"nhjryan"},"content":"        return db;","lastModifiedDate":"2021-09-13"},{"lineNumber":58,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":59,"author":{"gitId":"nhjryan"},"content":"}","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"nhjryan":59}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nhjryan"},"content":"import duke.Parser;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"nhjryan"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"nhjryan"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"nhjryan"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"nhjryan"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"nhjryan"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"nhjryan"},"content":" * The main class for the Duke program, which manages tasks for the user.","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"nhjryan"},"content":" *","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"nhjryan"},"content":" * @author nhjryan","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"nhjryan"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"nhjryan"},"content":"    private static final String FILE_PATH \u003d \"data/tasks.txt\";","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"nhjryan"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"nhjryan"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"nhjryan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"nhjryan"},"content":"     * The constructor for a Duke object.","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"nhjryan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"nhjryan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"nhjryan"},"content":"    public Duke() {","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"nhjryan"},"content":"        storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"nhjryan"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"nhjryan"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"nhjryan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"nhjryan"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"nhjryan"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":33,"author":{"gitId":"nhjryan"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"nhjryan"},"content":"     * Takes in the input of the user and returns the relevant","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"nhjryan"},"content":"     * response message.","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"nhjryan"},"content":"     *","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"nhjryan"},"content":"     * @param input User input.","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"nhjryan"},"content":"     * @return The relevant response message.","lastModifiedDate":"2021-09-13"},{"lineNumber":39,"author":{"gitId":"nhjryan"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":40,"author":{"gitId":"nhjryan"},"content":"    String getResponse(String input) {","lastModifiedDate":"2021-09-13"},{"lineNumber":41,"author":{"gitId":"nhjryan"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"nhjryan"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2021-09-13"},{"lineNumber":43,"author":{"gitId":"nhjryan"},"content":"            return c.execute(tasks, storage);","lastModifiedDate":"2021-09-13"},{"lineNumber":44,"author":{"gitId":"nhjryan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"nhjryan"},"content":"            return e.getMessage();","lastModifiedDate":"2021-09-13"},{"lineNumber":46,"author":{"gitId":"nhjryan"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"nhjryan":46,"-":3}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nhjryan"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"nhjryan"},"content":"/**","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"nhjryan"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"nhjryan"},"content":" */","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"nhjryan"},"content":"public class Launcher {","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"nhjryan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"nhjryan"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"nhjryan"},"content":"}","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"nhjryan":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nhjryan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"nhjryan"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"nhjryan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"nhjryan"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"nhjryan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"nhjryan"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"nhjryan"},"content":"/**","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"nhjryan"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"nhjryan"},"content":" */","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"nhjryan"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"nhjryan"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"nhjryan"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"nhjryan"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"nhjryan"},"content":"        try {","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"nhjryan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"nhjryan"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"nhjryan"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"nhjryan"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"nhjryan"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"nhjryan"},"content":"            stage.show();","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"nhjryan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"nhjryan"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"nhjryan"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"nhjryan"},"content":"}","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"nhjryan":29}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nhjryan"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"nhjryan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"nhjryan"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"nhjryan"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"nhjryan"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"nhjryan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"nhjryan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"nhjryan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"nhjryan"},"content":"/**","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"nhjryan"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"nhjryan"},"content":" */","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"nhjryan"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"nhjryan"},"content":"    @FXML","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"nhjryan"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"nhjryan"},"content":"    @FXML","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"nhjryan"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"nhjryan"},"content":"    @FXML","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"nhjryan"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"nhjryan"},"content":"    @FXML","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"nhjryan"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"nhjryan"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"nhjryan"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"nhjryan"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"nhjryan"},"content":"    @FXML","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"nhjryan"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"nhjryan"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"nhjryan"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"nhjryan"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"nhjryan"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"nhjryan"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"nhjryan"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-13"},{"lineNumber":39,"author":{"gitId":"nhjryan"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":40,"author":{"gitId":"nhjryan"},"content":"    @FXML","lastModifiedDate":"2021-09-13"},{"lineNumber":41,"author":{"gitId":"nhjryan"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-13"},{"lineNumber":42,"author":{"gitId":"nhjryan"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-13"},{"lineNumber":43,"author":{"gitId":"nhjryan"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-13"},{"lineNumber":44,"author":{"gitId":"nhjryan"},"content":"        assert !response.isBlank();","lastModifiedDate":"2021-09-13"},{"lineNumber":45,"author":{"gitId":"nhjryan"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-13"},{"lineNumber":46,"author":{"gitId":"nhjryan"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-13"},{"lineNumber":47,"author":{"gitId":"nhjryan"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-13"},{"lineNumber":48,"author":{"gitId":"nhjryan"},"content":"        );","lastModifiedDate":"2021-09-13"},{"lineNumber":49,"author":{"gitId":"nhjryan"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-13"},{"lineNumber":50,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":51,"author":{"gitId":"nhjryan"},"content":"        if (response.equals(\"Bye!\")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":52,"author":{"gitId":"nhjryan"},"content":"            Platform.exit();","lastModifiedDate":"2021-09-13"},{"lineNumber":53,"author":{"gitId":"nhjryan"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":54,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":55,"author":{"gitId":"nhjryan"},"content":"}","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"nhjryan":55}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nhjryan"},"content":"package duke;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"nhjryan"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"nhjryan"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"nhjryan"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"nhjryan"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"nhjryan"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"nhjryan"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"nhjryan"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"nhjryan"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"nhjryan"},"content":"import duke.exception.EmptySearchQueryException;","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"nhjryan"},"content":"import duke.exception.NoDescriptionException;","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"nhjryan"},"content":"import duke.exception.NoKeywordException;","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"nhjryan"},"content":"import duke.exception.NoNumberException;","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"nhjryan"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"nhjryan"},"content":" * Parses input from the user from a given string into arguments for other","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"nhjryan"},"content":" * parts of the program to process.","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"nhjryan"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"nhjryan"},"content":"public class Parser {","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"nhjryan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"nhjryan"},"content":"     * Parses a given string input from the user and returns the appropriate","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"nhjryan"},"content":"     * command.","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"nhjryan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"nhjryan"},"content":"     * @param command Input from the user.","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"nhjryan"},"content":"     * @return Command to be executed.","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"nhjryan"},"content":"     * @throws DukeException If input is invalid.","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"nhjryan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"nhjryan"},"content":"    public static Command parse(String command) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"nhjryan"},"content":"        String[] parsedArr \u003d command.split(\"\\\\s\", 2);","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"nhjryan"},"content":"        switch(parsedArr[0]) {","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"nhjryan"},"content":"        case \"list\":","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"nhjryan"},"content":"            return checkList(parsedArr);","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"nhjryan"},"content":"        case \"todo\":","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"nhjryan"},"content":"            return checkTodo(parsedArr);","lastModifiedDate":"2021-09-13"},{"lineNumber":39,"author":{"gitId":"nhjryan"},"content":"        case \"deadline\":","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"nhjryan"},"content":"            return checkDeadline(parsedArr);","lastModifiedDate":"2021-09-13"},{"lineNumber":41,"author":{"gitId":"nhjryan"},"content":"        case \"event\":","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"nhjryan"},"content":"            return checkEvent(parsedArr);","lastModifiedDate":"2021-09-13"},{"lineNumber":43,"author":{"gitId":"nhjryan"},"content":"        case \"delete\":","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"nhjryan"},"content":"            return checkDelete(parsedArr);","lastModifiedDate":"2021-09-13"},{"lineNumber":45,"author":{"gitId":"nhjryan"},"content":"        case \"done\":","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"nhjryan"},"content":"            return checkDone(parsedArr);","lastModifiedDate":"2021-09-13"},{"lineNumber":47,"author":{"gitId":"nhjryan"},"content":"        case \"find\":","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"nhjryan"},"content":"            return checkFind(parsedArr);","lastModifiedDate":"2021-09-13"},{"lineNumber":49,"author":{"gitId":"nhjryan"},"content":"        case \"bye\":","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"nhjryan"},"content":"            return checkExit(parsedArr);","lastModifiedDate":"2021-09-13"},{"lineNumber":51,"author":{"gitId":"nhjryan"},"content":"        default:","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"nhjryan"},"content":"            throw new DukeException();","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"nhjryan"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"nhjryan"},"content":"    private static Command checkList(String[] strArr) throws DukeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":57,"author":{"gitId":"nhjryan"},"content":"        if (strArr.length \u003e 1) {","lastModifiedDate":"2021-09-13"},{"lineNumber":58,"author":{"gitId":"nhjryan"},"content":"            throw new DukeException();","lastModifiedDate":"2021-09-13"},{"lineNumber":59,"author":{"gitId":"nhjryan"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":60,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":61,"author":{"gitId":"nhjryan"},"content":"        return new ListCommand();","lastModifiedDate":"2021-09-13"},{"lineNumber":62,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":63,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":64,"author":{"gitId":"nhjryan"},"content":"    private static Command checkTodo(String[] strArr) throws DukeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":65,"author":{"gitId":"nhjryan"},"content":"        if (strArr.length \u003c 2) {","lastModifiedDate":"2021-09-13"},{"lineNumber":66,"author":{"gitId":"nhjryan"},"content":"            throw new NoDescriptionException(strArr[0]);","lastModifiedDate":"2021-09-13"},{"lineNumber":67,"author":{"gitId":"nhjryan"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":68,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":69,"author":{"gitId":"nhjryan"},"content":"        return new AddCommand(strArr[0], strArr[1]);","lastModifiedDate":"2021-09-13"},{"lineNumber":70,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":71,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":72,"author":{"gitId":"nhjryan"},"content":"    private static Command checkDeadline(String[] strArr) throws DukeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":73,"author":{"gitId":"nhjryan"},"content":"        if (strArr.length \u003c 2) {","lastModifiedDate":"2021-09-13"},{"lineNumber":74,"author":{"gitId":"nhjryan"},"content":"            throw new NoDescriptionException(strArr[0]);","lastModifiedDate":"2021-09-13"},{"lineNumber":75,"author":{"gitId":"nhjryan"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":76,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":77,"author":{"gitId":"nhjryan"},"content":"        if (!strArr[1].contains(\"/by\")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":78,"author":{"gitId":"nhjryan"},"content":"            throw new NoKeywordException(\"/by\");","lastModifiedDate":"2021-09-13"},{"lineNumber":79,"author":{"gitId":"nhjryan"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":80,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":81,"author":{"gitId":"nhjryan"},"content":"        return new AddCommand(strArr[0], strArr[1]);","lastModifiedDate":"2021-09-13"},{"lineNumber":82,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":83,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":84,"author":{"gitId":"nhjryan"},"content":"    private static Command checkEvent(String[] strArr) throws DukeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":85,"author":{"gitId":"nhjryan"},"content":"        if (strArr.length \u003c 2) {","lastModifiedDate":"2021-09-13"},{"lineNumber":86,"author":{"gitId":"nhjryan"},"content":"            throw new NoDescriptionException(strArr[0]);","lastModifiedDate":"2021-09-13"},{"lineNumber":87,"author":{"gitId":"nhjryan"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":88,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":89,"author":{"gitId":"nhjryan"},"content":"        if (!strArr[1].contains(\"/at\")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":90,"author":{"gitId":"nhjryan"},"content":"            throw new NoKeywordException(\"/at\");","lastModifiedDate":"2021-09-13"},{"lineNumber":91,"author":{"gitId":"nhjryan"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":92,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":93,"author":{"gitId":"nhjryan"},"content":"        return new AddCommand(strArr[0], strArr[1]);","lastModifiedDate":"2021-09-13"},{"lineNumber":94,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":95,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":96,"author":{"gitId":"nhjryan"},"content":"    private static Command checkDone(String[] strArr) throws DukeException {","lastModifiedDate":"2021-09-14"},{"lineNumber":97,"author":{"gitId":"nhjryan"},"content":"        if (strArr.length \u003c 2) {","lastModifiedDate":"2021-09-13"},{"lineNumber":98,"author":{"gitId":"nhjryan"},"content":"            throw new NoNumberException(strArr[0]);","lastModifiedDate":"2021-09-13"},{"lineNumber":99,"author":{"gitId":"nhjryan"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":100,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":101,"author":{"gitId":"nhjryan"},"content":"        String[] strIndex \u003d strArr[1].split(\"\\\\s\");","lastModifiedDate":"2021-09-14"},{"lineNumber":102,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":103,"author":{"gitId":"nhjryan"},"content":"        return new DoneCommand(strIndex);","lastModifiedDate":"2021-09-14"},{"lineNumber":104,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":105,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":106,"author":{"gitId":"nhjryan"},"content":"    private static Command checkDelete(String[] strArr) throws DukeException {","lastModifiedDate":"2021-09-14"},{"lineNumber":107,"author":{"gitId":"nhjryan"},"content":"        if (strArr.length \u003c 2) {","lastModifiedDate":"2021-09-13"},{"lineNumber":108,"author":{"gitId":"nhjryan"},"content":"            throw new NoNumberException(strArr[0]);","lastModifiedDate":"2021-09-13"},{"lineNumber":109,"author":{"gitId":"nhjryan"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":110,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":111,"author":{"gitId":"nhjryan"},"content":"        String[] strIndex \u003d strArr[1].split(\"\\\\s\");","lastModifiedDate":"2021-09-14"},{"lineNumber":112,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":113,"author":{"gitId":"nhjryan"},"content":"        return new DeleteCommand(strIndex);","lastModifiedDate":"2021-09-14"},{"lineNumber":114,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":115,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":116,"author":{"gitId":"nhjryan"},"content":"    private static Command checkFind(String[] strArr) throws DukeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":117,"author":{"gitId":"nhjryan"},"content":"        if (strArr.length \u003c 2 || strArr[1].isBlank()) {","lastModifiedDate":"2021-09-13"},{"lineNumber":118,"author":{"gitId":"nhjryan"},"content":"            throw new EmptySearchQueryException();","lastModifiedDate":"2021-09-13"},{"lineNumber":119,"author":{"gitId":"nhjryan"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":120,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":121,"author":{"gitId":"nhjryan"},"content":"        return new FindCommand(strArr[1]);","lastModifiedDate":"2021-09-13"},{"lineNumber":122,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":123,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":124,"author":{"gitId":"nhjryan"},"content":"    private static Command checkExit(String[] strArr) throws DukeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":125,"author":{"gitId":"nhjryan"},"content":"        if (strArr.length \u003e 1) {","lastModifiedDate":"2021-09-13"},{"lineNumber":126,"author":{"gitId":"nhjryan"},"content":"            throw new DukeException();","lastModifiedDate":"2021-09-13"},{"lineNumber":127,"author":{"gitId":"nhjryan"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":128,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":129,"author":{"gitId":"nhjryan"},"content":"        return new ExitCommand();","lastModifiedDate":"2021-09-13"},{"lineNumber":130,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":131,"author":{"gitId":"nhjryan"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"nhjryan":131}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nhjryan"},"content":"package duke;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"nhjryan"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"nhjryan"},"content":"import java.io.File;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"nhjryan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"nhjryan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"nhjryan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"nhjryan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"nhjryan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"nhjryan"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"nhjryan"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"nhjryan"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"nhjryan"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"nhjryan"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-09"},{"lineNumber":16,"author":{"gitId":"nhjryan"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-09"},{"lineNumber":17,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":18,"author":{"gitId":"nhjryan"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"nhjryan"},"content":" * Stores the list of tasks into a given text file and loads the","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"nhjryan"},"content":" * same file whenever the program starts up.","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"nhjryan"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"nhjryan"},"content":"public class Storage {","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"nhjryan"},"content":"    private String filePath;","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"nhjryan"},"content":"    private File file;","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"nhjryan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"nhjryan"},"content":"     * The constructor for a Storage object.","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"nhjryan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"nhjryan"},"content":"     * @param filePath The path to the file for storage.","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"nhjryan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"nhjryan"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"nhjryan"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"nhjryan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"nhjryan"},"content":"     * Loads and reads the text file and returns an ArrayList of the","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"nhjryan"},"content":"     * entries converted into Tasks.","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"nhjryan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"nhjryan"},"content":"     * @return An ArrayList with Tasks from the text file.","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"nhjryan"},"content":"     * @throws DukeException If an error occurs when loading the file.","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"nhjryan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"nhjryan"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"nhjryan"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"nhjryan"},"content":"        file \u003d new File(System.getProperty(\"user.dir\") + \"\\\\\" + filePath);","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"nhjryan"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"nhjryan"},"content":"            if (!file.exists()) {","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"nhjryan"},"content":"                File directory \u003d new File(\"data\");","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"nhjryan"},"content":"                directory.mkdir();","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"nhjryan"},"content":"                file.createNewFile();","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"nhjryan"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"nhjryan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"nhjryan"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"nhjryan"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"nhjryan"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"nhjryan"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"nhjryan"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"nhjryan"},"content":"                String str \u003d scanner.nextLine();","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"nhjryan"},"content":"                list.add(parseInput(str));","lastModifiedDate":"2021-09-06"},{"lineNumber":67,"author":{"gitId":"nhjryan"},"content":"            }","lastModifiedDate":"2021-09-06"},{"lineNumber":68,"author":{"gitId":"nhjryan"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":69,"author":{"gitId":"nhjryan"},"content":"            throw new DukeException(\"File not found. Here is your error message: \" + e.getMessage());","lastModifiedDate":"2021-09-06"},{"lineNumber":70,"author":{"gitId":"nhjryan"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":71,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":72,"author":{"gitId":"nhjryan"},"content":"        return list;","lastModifiedDate":"2021-09-06"},{"lineNumber":73,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":74,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":75,"author":{"gitId":"nhjryan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":76,"author":{"gitId":"nhjryan"},"content":"     * Updates the text file whenever an update is made to the task list.","lastModifiedDate":"2021-09-08"},{"lineNumber":77,"author":{"gitId":"nhjryan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":78,"author":{"gitId":"nhjryan"},"content":"     * @param tasks The given TaskList.","lastModifiedDate":"2021-09-08"},{"lineNumber":79,"author":{"gitId":"nhjryan"},"content":"     * @throws DukeException If there is an writing to the file.","lastModifiedDate":"2021-09-08"},{"lineNumber":80,"author":{"gitId":"nhjryan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":81,"author":{"gitId":"nhjryan"},"content":"    public void update(TaskList tasks) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":82,"author":{"gitId":"nhjryan"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":83,"author":{"gitId":"nhjryan"},"content":"            FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2021-09-06"},{"lineNumber":84,"author":{"gitId":"nhjryan"},"content":"            BufferedWriter bw \u003d new BufferedWriter(fw);","lastModifiedDate":"2021-09-06"},{"lineNumber":85,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":86,"author":{"gitId":"nhjryan"},"content":"            for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2021-09-06"},{"lineNumber":87,"author":{"gitId":"nhjryan"},"content":"                Task task \u003d tasks.getTask(i);","lastModifiedDate":"2021-09-06"},{"lineNumber":88,"author":{"gitId":"nhjryan"},"content":"                bw.write(task.toFileFormat());","lastModifiedDate":"2021-09-06"},{"lineNumber":89,"author":{"gitId":"nhjryan"},"content":"                bw.newLine();","lastModifiedDate":"2021-09-06"},{"lineNumber":90,"author":{"gitId":"nhjryan"},"content":"            }","lastModifiedDate":"2021-09-06"},{"lineNumber":91,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":92,"author":{"gitId":"nhjryan"},"content":"            bw.close();","lastModifiedDate":"2021-09-06"},{"lineNumber":93,"author":{"gitId":"nhjryan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":94,"author":{"gitId":"nhjryan"},"content":"            throw new DukeException(\"File not updated properly. Here is your error message: \" + e.getMessage());","lastModifiedDate":"2021-09-06"},{"lineNumber":95,"author":{"gitId":"nhjryan"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":96,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":97,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":98,"author":{"gitId":"nhjryan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":99,"author":{"gitId":"nhjryan"},"content":"     * Parses the input from the text file into arguments","lastModifiedDate":"2021-09-08"},{"lineNumber":100,"author":{"gitId":"nhjryan"},"content":"     * for Tasks to be created.","lastModifiedDate":"2021-09-08"},{"lineNumber":101,"author":{"gitId":"nhjryan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":102,"author":{"gitId":"nhjryan"},"content":"     * @param str String input from the text file.","lastModifiedDate":"2021-09-08"},{"lineNumber":103,"author":{"gitId":"nhjryan"},"content":"     * @return Task from the string input.","lastModifiedDate":"2021-09-08"},{"lineNumber":104,"author":{"gitId":"nhjryan"},"content":"     * @throws DukeException When the file is corrupted and the string cannot be parsed.","lastModifiedDate":"2021-09-08"},{"lineNumber":105,"author":{"gitId":"nhjryan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":106,"author":{"gitId":"nhjryan"},"content":"    private static Task parseInput(String str) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":107,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":108,"author":{"gitId":"nhjryan"},"content":"        String[] taskArr \u003d str.split(\" \\\\| \");","lastModifiedDate":"2021-09-05"},{"lineNumber":109,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":110,"author":{"gitId":"nhjryan"},"content":"        switch (taskArr[0]) {","lastModifiedDate":"2021-09-05"},{"lineNumber":111,"author":{"gitId":"nhjryan"},"content":"        case \"T\":","lastModifiedDate":"2021-09-05"},{"lineNumber":112,"author":{"gitId":"nhjryan"},"content":"            return parseTodo(taskArr);","lastModifiedDate":"2021-09-13"},{"lineNumber":113,"author":{"gitId":"nhjryan"},"content":"        case \"D\":","lastModifiedDate":"2021-09-13"},{"lineNumber":114,"author":{"gitId":"nhjryan"},"content":"            return parseDeadline(taskArr);","lastModifiedDate":"2021-09-13"},{"lineNumber":115,"author":{"gitId":"nhjryan"},"content":"        case \"E\":","lastModifiedDate":"2021-09-13"},{"lineNumber":116,"author":{"gitId":"nhjryan"},"content":"            return parseEvent(taskArr);","lastModifiedDate":"2021-09-13"},{"lineNumber":117,"author":{"gitId":"nhjryan"},"content":"        default:","lastModifiedDate":"2021-09-13"},{"lineNumber":118,"author":{"gitId":"nhjryan"},"content":"            throw new DukeException(\"File corrupted. Please create a new file or check your existing file.\");","lastModifiedDate":"2021-09-13"},{"lineNumber":119,"author":{"gitId":"nhjryan"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":120,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":121,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":122,"author":{"gitId":"nhjryan"},"content":"    private static Task parseTodo(String[] strArr) {","lastModifiedDate":"2021-09-13"},{"lineNumber":123,"author":{"gitId":"nhjryan"},"content":"        Todo todo \u003d new Todo(strArr[2]);","lastModifiedDate":"2021-09-13"},{"lineNumber":124,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":125,"author":{"gitId":"nhjryan"},"content":"        if (strArr[1].equals(\"1\")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":126,"author":{"gitId":"nhjryan"},"content":"            todo.setDone();","lastModifiedDate":"2021-09-05"},{"lineNumber":127,"author":{"gitId":"nhjryan"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":128,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":129,"author":{"gitId":"nhjryan"},"content":"        return todo;","lastModifiedDate":"2021-09-13"},{"lineNumber":130,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":131,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":132,"author":{"gitId":"nhjryan"},"content":"    private static Task parseDeadline(String[] strArr) {","lastModifiedDate":"2021-09-13"},{"lineNumber":133,"author":{"gitId":"nhjryan"},"content":"        Deadline deadline \u003d new Deadline(strArr[2], LocalDate.parse(strArr[3]));","lastModifiedDate":"2021-09-13"},{"lineNumber":134,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":135,"author":{"gitId":"nhjryan"},"content":"        if (strArr[1].equals(\"1\")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":136,"author":{"gitId":"nhjryan"},"content":"            deadline.setDone();","lastModifiedDate":"2021-09-05"},{"lineNumber":137,"author":{"gitId":"nhjryan"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":138,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":139,"author":{"gitId":"nhjryan"},"content":"        return deadline;","lastModifiedDate":"2021-09-13"},{"lineNumber":140,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":141,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":142,"author":{"gitId":"nhjryan"},"content":"    private static Task parseEvent(String[] strArr) {","lastModifiedDate":"2021-09-13"},{"lineNumber":143,"author":{"gitId":"nhjryan"},"content":"        Event event \u003d new Event(strArr[2], LocalDate.parse(strArr[3]));","lastModifiedDate":"2021-09-13"},{"lineNumber":144,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":145,"author":{"gitId":"nhjryan"},"content":"        if (strArr[1].equals(\"1\")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":146,"author":{"gitId":"nhjryan"},"content":"            event.setDone();","lastModifiedDate":"2021-09-13"},{"lineNumber":147,"author":{"gitId":"nhjryan"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":148,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":149,"author":{"gitId":"nhjryan"},"content":"        return event;","lastModifiedDate":"2021-09-13"},{"lineNumber":150,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":151,"author":{"gitId":"nhjryan"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"nhjryan":151}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nhjryan"},"content":"package duke;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"nhjryan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"nhjryan"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"nhjryan"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"nhjryan"},"content":" * Contains an ArrayList of the user\u0027s Tasks, as well as","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"nhjryan"},"content":" * necessary methods for interaction.","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"nhjryan"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"nhjryan"},"content":"public class TaskList {","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"nhjryan"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"nhjryan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"nhjryan"},"content":"     * The constructor for a TaskList object when an","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"nhjryan"},"content":"     * existing file is loaded from Storage.","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"nhjryan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"nhjryan"},"content":"     * @param tasks The list of tasks from Storage.","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"nhjryan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"nhjryan"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"nhjryan"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"nhjryan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"nhjryan"},"content":"     * The constructor for a TaskList object when there","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"nhjryan"},"content":"     * is no existing file.","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"nhjryan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"nhjryan"},"content":"    public TaskList() {","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"nhjryan"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"nhjryan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"nhjryan"},"content":"     * Retrieves a Task object from the TaskList.","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"nhjryan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"nhjryan"},"content":"     * @param index The index of the Task to be retrieved.","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"nhjryan"},"content":"     * @return The retrieved Task.","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"nhjryan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"nhjryan"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"nhjryan"},"content":"        return tasks.get(index);","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"nhjryan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"nhjryan"},"content":"     * Returns the size of the entire TaskList.","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"nhjryan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"nhjryan"},"content":"     * @return The size of the TaskList.","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"nhjryan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"nhjryan"},"content":"    public int getSize() {","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"nhjryan"},"content":"        return tasks.size();","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"nhjryan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"nhjryan"},"content":"     * Adds a Task to the TaskList.","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"nhjryan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"nhjryan"},"content":"     * @param task The Task to be added.","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"nhjryan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"nhjryan"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"nhjryan"},"content":"        tasks.add(task);","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"nhjryan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":62,"author":{"gitId":"nhjryan"},"content":"     * Deletes a Task from the TaskList","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"nhjryan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"nhjryan"},"content":"     * @param index The index of the Task to be deleted.","lastModifiedDate":"2021-09-08"},{"lineNumber":65,"author":{"gitId":"nhjryan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"nhjryan"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2021-09-08"},{"lineNumber":67,"author":{"gitId":"nhjryan"},"content":"        tasks.remove(index);","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":69,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":70,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":71,"author":{"gitId":"nhjryan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":72,"author":{"gitId":"nhjryan"},"content":"     * Marks a Task as \u0027done\u0027 on the TaskList.","lastModifiedDate":"2021-09-08"},{"lineNumber":73,"author":{"gitId":"nhjryan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":74,"author":{"gitId":"nhjryan"},"content":"     * @param index The index of the Task to be marked.","lastModifiedDate":"2021-09-08"},{"lineNumber":75,"author":{"gitId":"nhjryan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":76,"author":{"gitId":"nhjryan"},"content":"    public void doneTask(int index) {","lastModifiedDate":"2021-09-05"},{"lineNumber":77,"author":{"gitId":"nhjryan"},"content":"        getTask(index).setDone();","lastModifiedDate":"2021-09-08"},{"lineNumber":78,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":79,"author":{"gitId":"nhjryan"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"nhjryan":79}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nhjryan"},"content":"package duke.command;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"nhjryan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"nhjryan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"nhjryan"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"nhjryan"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"nhjryan"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"nhjryan"},"content":"import duke.exception.InvalidDateTimeFormatException;","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"nhjryan"},"content":"import duke.exception.NoDescriptionException;","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"nhjryan"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"nhjryan"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"nhjryan"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"nhjryan"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"nhjryan"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"nhjryan"},"content":" * Represents a Command to add a Task to the TaskList.","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"nhjryan"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"nhjryan"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"nhjryan"},"content":"    private String taskType;","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"nhjryan"},"content":"    private String description;","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"nhjryan"},"content":"    private String reply;","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"nhjryan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"nhjryan"},"content":"     * The constructor for an AddCommand object.","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"nhjryan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"nhjryan"},"content":"     * @param taskType The given type of Task.","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"nhjryan"},"content":"     * @param description The given description of Task.","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"nhjryan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"nhjryan"},"content":"    public AddCommand(String taskType, String description) {","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"nhjryan"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"nhjryan"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"nhjryan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"nhjryan"},"content":"     * Executes the Command to add a Task.","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"nhjryan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"nhjryan"},"content":"     * @param tasks The given TaskList to be updated.","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"nhjryan"},"content":"     * @param storage The given Storage to save changes to.","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"nhjryan"},"content":"     * @return The response to the user.","lastModifiedDate":"2021-09-13"},{"lineNumber":42,"author":{"gitId":"nhjryan"},"content":"     * @throws DukeException When the user input does not adhere to the format.","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"nhjryan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"nhjryan"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"nhjryan"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":46,"author":{"gitId":"nhjryan"},"content":"        switch(taskType) {","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"nhjryan"},"content":"        case \"todo\":","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"nhjryan"},"content":"            return handleTodo(tasks, storage);","lastModifiedDate":"2021-09-13"},{"lineNumber":49,"author":{"gitId":"nhjryan"},"content":"        case \"deadline\":","lastModifiedDate":"2021-09-13"},{"lineNumber":50,"author":{"gitId":"nhjryan"},"content":"            return handleDeadline(tasks, storage);","lastModifiedDate":"2021-09-13"},{"lineNumber":51,"author":{"gitId":"nhjryan"},"content":"        case \"event\":","lastModifiedDate":"2021-09-13"},{"lineNumber":52,"author":{"gitId":"nhjryan"},"content":"            return handleEvent(tasks, storage);","lastModifiedDate":"2021-09-13"},{"lineNumber":53,"author":{"gitId":"nhjryan"},"content":"        default:","lastModifiedDate":"2021-09-13"},{"lineNumber":54,"author":{"gitId":"nhjryan"},"content":"            throw new AssertionError(taskType);","lastModifiedDate":"2021-09-14"},{"lineNumber":55,"author":{"gitId":"nhjryan"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":56,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":57,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":58,"author":{"gitId":"nhjryan"},"content":"    private static String createReply(Task task, int size) {","lastModifiedDate":"2021-09-13"},{"lineNumber":59,"author":{"gitId":"nhjryan"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + \"  \" + task","lastModifiedDate":"2021-09-13"},{"lineNumber":60,"author":{"gitId":"nhjryan"},"content":"                + System.lineSeparator() + \"Now you have \" + size + \" tasks in the list.\";","lastModifiedDate":"2021-09-13"},{"lineNumber":61,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":62,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":63,"author":{"gitId":"nhjryan"},"content":"    private String handleTodo(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":64,"author":{"gitId":"nhjryan"},"content":"        Todo newTodo \u003d new Todo(description);","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"nhjryan"},"content":"        tasks.addTask(newTodo);","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"nhjryan"},"content":"        reply \u003d createReply(newTodo, tasks.getSize());","lastModifiedDate":"2021-09-13"},{"lineNumber":67,"author":{"gitId":"nhjryan"},"content":"        storage.update(tasks);","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"nhjryan"},"content":"        return reply;","lastModifiedDate":"2021-09-13"},{"lineNumber":69,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":70,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":71,"author":{"gitId":"nhjryan"},"content":"    private String handleDeadline(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":72,"author":{"gitId":"nhjryan"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":73,"author":{"gitId":"nhjryan"},"content":"            String[] parsedAdd \u003d description.split(\" /by \", 2);","lastModifiedDate":"2021-09-05"},{"lineNumber":74,"author":{"gitId":"nhjryan"},"content":"            LocalDate date \u003d LocalDate.parse(parsedAdd[1]);","lastModifiedDate":"2021-09-05"},{"lineNumber":75,"author":{"gitId":"nhjryan"},"content":"            Deadline newDeadline \u003d new Deadline(parsedAdd[0], date);","lastModifiedDate":"2021-09-05"},{"lineNumber":76,"author":{"gitId":"nhjryan"},"content":"            tasks.addTask(newDeadline);","lastModifiedDate":"2021-09-05"},{"lineNumber":77,"author":{"gitId":"nhjryan"},"content":"            reply \u003d createReply(newDeadline, tasks.getSize());","lastModifiedDate":"2021-09-13"},{"lineNumber":78,"author":{"gitId":"nhjryan"},"content":"            storage.update(tasks);","lastModifiedDate":"2021-09-05"},{"lineNumber":79,"author":{"gitId":"nhjryan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":80,"author":{"gitId":"nhjryan"},"content":"            throw new InvalidDateTimeFormatException();","lastModifiedDate":"2021-09-13"},{"lineNumber":81,"author":{"gitId":"nhjryan"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":82,"author":{"gitId":"nhjryan"},"content":"            throw new NoDescriptionException(taskType);","lastModifiedDate":"2021-09-13"},{"lineNumber":83,"author":{"gitId":"nhjryan"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":84,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":85,"author":{"gitId":"nhjryan"},"content":"        return reply;","lastModifiedDate":"2021-09-13"},{"lineNumber":86,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":87,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":88,"author":{"gitId":"nhjryan"},"content":"    private String handleEvent(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":89,"author":{"gitId":"nhjryan"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":90,"author":{"gitId":"nhjryan"},"content":"            String[] parsedAdd \u003d description.split(\" /at \", 2);","lastModifiedDate":"2021-09-05"},{"lineNumber":91,"author":{"gitId":"nhjryan"},"content":"            LocalDate date \u003d LocalDate.parse(parsedAdd[1]);","lastModifiedDate":"2021-09-05"},{"lineNumber":92,"author":{"gitId":"nhjryan"},"content":"            Event newEvent \u003d new Event(parsedAdd[0], date);","lastModifiedDate":"2021-09-05"},{"lineNumber":93,"author":{"gitId":"nhjryan"},"content":"            tasks.addTask(newEvent);","lastModifiedDate":"2021-09-05"},{"lineNumber":94,"author":{"gitId":"nhjryan"},"content":"            reply \u003d createReply(newEvent, tasks.getSize());","lastModifiedDate":"2021-09-13"},{"lineNumber":95,"author":{"gitId":"nhjryan"},"content":"            storage.update(tasks);","lastModifiedDate":"2021-09-05"},{"lineNumber":96,"author":{"gitId":"nhjryan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":97,"author":{"gitId":"nhjryan"},"content":"            throw new InvalidDateTimeFormatException();","lastModifiedDate":"2021-09-13"},{"lineNumber":98,"author":{"gitId":"nhjryan"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":99,"author":{"gitId":"nhjryan"},"content":"            throw new NoDescriptionException(taskType);","lastModifiedDate":"2021-09-13"},{"lineNumber":100,"author":{"gitId":"nhjryan"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":101,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":102,"author":{"gitId":"nhjryan"},"content":"        return reply;","lastModifiedDate":"2021-09-13"},{"lineNumber":103,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":104,"author":{"gitId":"nhjryan"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"nhjryan":104}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nhjryan"},"content":"package duke.command;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"nhjryan"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"nhjryan"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"nhjryan"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"nhjryan"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"nhjryan"},"content":" * Represents a general Command to be executed.","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"nhjryan"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"nhjryan"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"nhjryan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"nhjryan"},"content":"     * Executes the necessary command using the given TaskList, Ui and Storage.","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"nhjryan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"nhjryan"},"content":"     * @param tasks The given TaskList to be updated.","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"nhjryan"},"content":"     * @param storage The given Storage to save changes to.","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"nhjryan"},"content":"     * @return The response to the user.","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"nhjryan"},"content":"     * @throws DukeException When a command is unable to be executed.","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"nhjryan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"nhjryan"},"content":"    public abstract String execute(TaskList tasks, Storage storage) throws DukeException;","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"nhjryan"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"nhjryan":21}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nhjryan"},"content":"package duke.command;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"nhjryan"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"nhjryan"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"nhjryan"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"nhjryan"},"content":"import duke.exception.InvalidIndexException;","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"nhjryan"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"nhjryan"},"content":" * Represents a Command to delete a Task from the TaskList.","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"nhjryan"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"nhjryan"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"nhjryan"},"content":"    private String[] strIndexes;","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"nhjryan"},"content":"    private int validCount \u003d 0;","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"nhjryan"},"content":"    private String reply \u003d \"Noted. I\u0027ve removed these tasks:\\n\";","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"nhjryan"},"content":"    private String invalid \u003d \"The following entries are invalid: \";","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"nhjryan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"nhjryan"},"content":"     * The constructor for a DeleteCommand object.","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"nhjryan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"nhjryan"},"content":"     * @param strIndexes The given indexes of the Tasks to be deleted.","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"nhjryan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"nhjryan"},"content":"    public DeleteCommand(String[] strIndexes) {","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"nhjryan"},"content":"        this.strIndexes \u003d strIndexes;","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"nhjryan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"nhjryan"},"content":"     * Executes the Command to delete a Task.","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"nhjryan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"nhjryan"},"content":"     * @param tasks The given TaskList to be updated.","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"nhjryan"},"content":"     * @param storage The given Storage to save changes to.","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"nhjryan"},"content":"     * @return The response to the user.","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"nhjryan"},"content":"     * @throws DukeException When the given index does not exist.","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"nhjryan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"nhjryan"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"nhjryan"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"nhjryan"},"content":"        for (int i \u003d 0; i \u003c strIndexes.length; i++) {","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"nhjryan"},"content":"            if (!isInt(strIndexes[i])) {","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"nhjryan"},"content":"                invalid +\u003d strIndexes[i] + \" \";","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"nhjryan"},"content":"                continue;","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"nhjryan"},"content":"            }","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"nhjryan"},"content":"            int index \u003d Integer.parseInt(strIndexes[i]) - 1;","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"nhjryan"},"content":"            boolean isValidInt \u003d index \u003e\u003d 0 \u0026\u0026 index \u003c\u003d tasks.getSize();","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"nhjryan"},"content":"            if (!isValidInt) {","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"nhjryan"},"content":"                invalid +\u003d strIndexes[i] + \" \";","lastModifiedDate":"2021-09-14"},{"lineNumber":47,"author":{"gitId":"nhjryan"},"content":"                continue;","lastModifiedDate":"2021-09-14"},{"lineNumber":48,"author":{"gitId":"nhjryan"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"nhjryan"},"content":"            validCount++;","lastModifiedDate":"2021-09-14"},{"lineNumber":51,"author":{"gitId":"nhjryan"},"content":"            reply +\u003d tasks.getTask(index) + System.lineSeparator();","lastModifiedDate":"2021-09-14"},{"lineNumber":52,"author":{"gitId":"nhjryan"},"content":"            tasks.deleteTask(index);","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"nhjryan"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":54,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":55,"author":{"gitId":"nhjryan"},"content":"        if (validCount \u003d\u003d 0) {","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"nhjryan"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2021-09-14"},{"lineNumber":57,"author":{"gitId":"nhjryan"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":58,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":59,"author":{"gitId":"nhjryan"},"content":"        storage.update(tasks);","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"nhjryan"},"content":"        if (validCount \u003d\u003d strIndexes.length) {","lastModifiedDate":"2021-09-14"},{"lineNumber":61,"author":{"gitId":"nhjryan"},"content":"            return reply + displayNumOfTasks(tasks.getSize());","lastModifiedDate":"2021-09-14"},{"lineNumber":62,"author":{"gitId":"nhjryan"},"content":"        } else {","lastModifiedDate":"2021-09-14"},{"lineNumber":63,"author":{"gitId":"nhjryan"},"content":"            return reply + invalid + System.lineSeparator() + displayNumOfTasks(tasks.getSize());","lastModifiedDate":"2021-09-14"},{"lineNumber":64,"author":{"gitId":"nhjryan"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":65,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":66,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":67,"author":{"gitId":"nhjryan"},"content":"    private static String displayNumOfTasks(int size) {","lastModifiedDate":"2021-09-14"},{"lineNumber":68,"author":{"gitId":"nhjryan"},"content":"        return \"Now you have \" + size + \" tasks in the list.\";","lastModifiedDate":"2021-09-14"},{"lineNumber":69,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":70,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":71,"author":{"gitId":"nhjryan"},"content":"    private static boolean isInt(String str) {","lastModifiedDate":"2021-09-14"},{"lineNumber":72,"author":{"gitId":"nhjryan"},"content":"        if (str \u003d\u003d null) {","lastModifiedDate":"2021-09-14"},{"lineNumber":73,"author":{"gitId":"nhjryan"},"content":"            return false;","lastModifiedDate":"2021-09-14"},{"lineNumber":74,"author":{"gitId":"nhjryan"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":75,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":76,"author":{"gitId":"nhjryan"},"content":"        try {","lastModifiedDate":"2021-09-14"},{"lineNumber":77,"author":{"gitId":"nhjryan"},"content":"            Integer.parseInt(str);","lastModifiedDate":"2021-09-14"},{"lineNumber":78,"author":{"gitId":"nhjryan"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-14"},{"lineNumber":79,"author":{"gitId":"nhjryan"},"content":"            return false;","lastModifiedDate":"2021-09-14"},{"lineNumber":80,"author":{"gitId":"nhjryan"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":81,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":82,"author":{"gitId":"nhjryan"},"content":"        return true;","lastModifiedDate":"2021-09-14"},{"lineNumber":83,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":84,"author":{"gitId":"nhjryan"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"nhjryan":84}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nhjryan"},"content":"package duke.command;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"nhjryan"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"nhjryan"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"nhjryan"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"nhjryan"},"content":"import duke.exception.InvalidIndexException;","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"nhjryan"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"nhjryan"},"content":" * Represents a Command to mark a Task as \u0027done\u0027 on the TaskList.","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"nhjryan"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"nhjryan"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"nhjryan"},"content":"    private String[] strIndexes;","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"nhjryan"},"content":"    private int validCount \u003d 0;","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"nhjryan"},"content":"    private String reply \u003d \"Nice! I\u0027ve marked these tasks as done:\\n\";","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"nhjryan"},"content":"    private String invalid \u003d \"The following entries are invalid: \";","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"nhjryan"},"content":"    private final String allValid \u003d \"There were no invalid entries entered.\";","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"nhjryan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"nhjryan"},"content":"     * The constructor for a DoneCommand object.","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"nhjryan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"nhjryan"},"content":"     * @param strIndexes The given indexes of the Tasks to be marked as \u0027done\u0027.","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"nhjryan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"nhjryan"},"content":"    public DoneCommand(String[] strIndexes) {","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"nhjryan"},"content":"        this.strIndexes \u003d strIndexes;","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"nhjryan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"nhjryan"},"content":"     * Executes the Command to mark a Task as \u0027done\u0027.","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"nhjryan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"nhjryan"},"content":"     * @param tasks The given TaskList to be updated.","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"nhjryan"},"content":"     * @param storage The given Storage to save changes to.","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"nhjryan"},"content":"     * @return The response to the user.","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"nhjryan"},"content":"     * @throws DukeException When the given index does not exist.","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"nhjryan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"nhjryan"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"nhjryan"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"nhjryan"},"content":"        for (int i \u003d 0; i \u003c strIndexes.length; i++) {","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"nhjryan"},"content":"            if (!isInt(strIndexes[i])) {","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"nhjryan"},"content":"                invalid +\u003d strIndexes[i] + \" \";","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"nhjryan"},"content":"                continue;","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"nhjryan"},"content":"            }","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"nhjryan"},"content":"            int index \u003d Integer.parseInt(strIndexes[i]) - 1;","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"nhjryan"},"content":"            boolean isValidInt \u003d index \u003e\u003d 0 \u0026\u0026 index \u003c\u003d tasks.getSize();","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"nhjryan"},"content":"            if (!isValidInt) {","lastModifiedDate":"2021-09-14"},{"lineNumber":47,"author":{"gitId":"nhjryan"},"content":"                invalid +\u003d strIndexes[i] + \" \";","lastModifiedDate":"2021-09-14"},{"lineNumber":48,"author":{"gitId":"nhjryan"},"content":"                continue;","lastModifiedDate":"2021-09-14"},{"lineNumber":49,"author":{"gitId":"nhjryan"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"nhjryan"},"content":"            validCount++;","lastModifiedDate":"2021-09-14"},{"lineNumber":52,"author":{"gitId":"nhjryan"},"content":"            tasks.doneTask(index);","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"nhjryan"},"content":"            reply +\u003d tasks.getTask(index) + System.lineSeparator();","lastModifiedDate":"2021-09-14"},{"lineNumber":54,"author":{"gitId":"nhjryan"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":55,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"nhjryan"},"content":"        if (validCount \u003d\u003d 0) {","lastModifiedDate":"2021-09-14"},{"lineNumber":57,"author":{"gitId":"nhjryan"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2021-09-14"},{"lineNumber":58,"author":{"gitId":"nhjryan"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":59,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":60,"author":{"gitId":"nhjryan"},"content":"        storage.update(tasks);","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"nhjryan"},"content":"        if (validCount \u003d\u003d strIndexes.length) {","lastModifiedDate":"2021-09-14"},{"lineNumber":62,"author":{"gitId":"nhjryan"},"content":"            return reply + allValid;","lastModifiedDate":"2021-09-14"},{"lineNumber":63,"author":{"gitId":"nhjryan"},"content":"        } else {","lastModifiedDate":"2021-09-14"},{"lineNumber":64,"author":{"gitId":"nhjryan"},"content":"            return reply + invalid;","lastModifiedDate":"2021-09-14"},{"lineNumber":65,"author":{"gitId":"nhjryan"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":66,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":67,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":68,"author":{"gitId":"nhjryan"},"content":"    private static boolean isInt(String str) {","lastModifiedDate":"2021-09-14"},{"lineNumber":69,"author":{"gitId":"nhjryan"},"content":"        if (str \u003d\u003d null) {","lastModifiedDate":"2021-09-14"},{"lineNumber":70,"author":{"gitId":"nhjryan"},"content":"            return false;","lastModifiedDate":"2021-09-14"},{"lineNumber":71,"author":{"gitId":"nhjryan"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":72,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":73,"author":{"gitId":"nhjryan"},"content":"        try {","lastModifiedDate":"2021-09-14"},{"lineNumber":74,"author":{"gitId":"nhjryan"},"content":"            Integer.parseInt(str);","lastModifiedDate":"2021-09-14"},{"lineNumber":75,"author":{"gitId":"nhjryan"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-14"},{"lineNumber":76,"author":{"gitId":"nhjryan"},"content":"            return false;","lastModifiedDate":"2021-09-14"},{"lineNumber":77,"author":{"gitId":"nhjryan"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":78,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":79,"author":{"gitId":"nhjryan"},"content":"        return true;","lastModifiedDate":"2021-09-14"},{"lineNumber":80,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":81,"author":{"gitId":"nhjryan"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"nhjryan":81}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nhjryan"},"content":"package duke.command;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"nhjryan"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"nhjryan"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"nhjryan"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"nhjryan"},"content":" * Represents a Command to terminate the program.","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"nhjryan"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"nhjryan"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"nhjryan"},"content":"    private String reply;","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"nhjryan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"nhjryan"},"content":"     * The constructor for an ExitCommand object.","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"nhjryan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"nhjryan"},"content":"    public ExitCommand() {","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"nhjryan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"nhjryan"},"content":"     * Executes the Command to terminate the program.","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"nhjryan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"nhjryan"},"content":"     * @param tasks The given TaskList.","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"nhjryan"},"content":"     * @param storage The given Storage to save changes to.","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"nhjryan"},"content":"     * @return The response to the user.","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"nhjryan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"nhjryan"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"nhjryan"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"nhjryan"},"content":"        reply \u003d \"Bye!\";","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"nhjryan"},"content":"        return reply;","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"nhjryan"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"nhjryan":32}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nhjryan"},"content":"package duke.command;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"nhjryan"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"nhjryan"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"nhjryan"},"content":"/**","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"nhjryan"},"content":" * Represents a Command to find a task from a given keyword.","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"nhjryan"},"content":" */","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"nhjryan"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"nhjryan"},"content":"    private String query;","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"nhjryan"},"content":"    private String reply;","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"nhjryan"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"nhjryan"},"content":"     * The constructor for a FindCommand object.","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"nhjryan"},"content":"     * @param query The given search query to find a task with.","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"nhjryan"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"nhjryan"},"content":"    public FindCommand(String query) {","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"nhjryan"},"content":"        this.query \u003d query;","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"nhjryan"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"nhjryan"},"content":"     * Executes the Command to find tasks that contain the given query.","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"nhjryan"},"content":"     *","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"nhjryan"},"content":"     * @param tasks The given TaskList to be updated.","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"nhjryan"},"content":"     * @param storage The given Storage to save changes to.","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"nhjryan"},"content":"     * @return The response to the user.","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"nhjryan"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"nhjryan"},"content":"    @Override","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"nhjryan"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"nhjryan"},"content":"        String results \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"nhjryan"},"content":"        boolean hasMatches \u003d false;","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"nhjryan"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"nhjryan"},"content":"            String taskDesc \u003d tasks.getTask(i).getDescription();","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"nhjryan"},"content":"            if (!taskDesc.contains(query)) {","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"nhjryan"},"content":"                continue;","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"nhjryan"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"nhjryan"},"content":"            results +\u003d System.lineSeparator() + \" \" + (i + 1) + \".\" + tasks.getTask(i);","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"nhjryan"},"content":"            hasMatches \u003d true;","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"nhjryan"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"nhjryan"},"content":"        if (hasMatches) {","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"nhjryan"},"content":"            reply \u003d results;","lastModifiedDate":"2021-09-13"},{"lineNumber":46,"author":{"gitId":"nhjryan"},"content":"            return reply;","lastModifiedDate":"2021-09-13"},{"lineNumber":47,"author":{"gitId":"nhjryan"},"content":"        } else {","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"nhjryan"},"content":"            reply \u003d \"No matches found.\";","lastModifiedDate":"2021-09-13"},{"lineNumber":49,"author":{"gitId":"nhjryan"},"content":"            return reply;","lastModifiedDate":"2021-09-13"},{"lineNumber":50,"author":{"gitId":"nhjryan"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"nhjryan"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"nhjryan":52}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nhjryan"},"content":"package duke.command;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"nhjryan"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"nhjryan"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"nhjryan"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"nhjryan"},"content":" * Represents a Command to list all Tasks in a given TaskList.","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"nhjryan"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"nhjryan"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"nhjryan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"nhjryan"},"content":"     * The constructor for a ListCommand object.","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"nhjryan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"nhjryan"},"content":"    public ListCommand() {","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"nhjryan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"nhjryan"},"content":"     * Executes the Command to list all Tasks in the given TaskList.","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"nhjryan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"nhjryan"},"content":"     * @param tasks The given TaskList to be referred to.","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"nhjryan"},"content":"     * @param storage The given Storage to save changes to.","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"nhjryan"},"content":"     * @return The response to the user.","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"nhjryan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"nhjryan"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"nhjryan"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"nhjryan"},"content":"        String list \u003d \"\";","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"nhjryan"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"nhjryan"},"content":"            list +\u003d (i + 1) + \".\" + tasks.getTask(i);","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"nhjryan"},"content":"            if (i \u003d\u003d tasks.getSize() - 1) {","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"nhjryan"},"content":"                break;","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"nhjryan"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"nhjryan"},"content":"            list +\u003d System.lineSeparator();","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"nhjryan"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"nhjryan"},"content":"        return list;","lastModifiedDate":"2021-09-13"},{"lineNumber":39,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"nhjryan"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"nhjryan":40}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nhjryan"},"content":"package duke.exception;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"nhjryan"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"nhjryan"},"content":"    private static final String ERROR_MSG \u003d \"I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"nhjryan"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"nhjryan"},"content":"        super(msg);","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"nhjryan"},"content":"    public DukeException() {","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"nhjryan"},"content":"        super(ERROR_MSG);","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"nhjryan"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"nhjryan":14}},{"path":"src/main/java/duke/exception/EmptySearchQueryException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nhjryan"},"content":"package duke.exception;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"nhjryan"},"content":"public class EmptySearchQueryException extends DukeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"nhjryan"},"content":"    private static final String EMPTY_SEARCH_QUERY_MSG \u003d \"Your search query cannot be empty!\";","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"nhjryan"},"content":"    public EmptySearchQueryException() {","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"nhjryan"},"content":"        super(EMPTY_SEARCH_QUERY_MSG);","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"nhjryan"},"content":"}","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"nhjryan":10}},{"path":"src/main/java/duke/exception/InvalidDateTimeFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nhjryan"},"content":"package duke.exception;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"nhjryan"},"content":"public class InvalidDateTimeFormatException extends DukeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"nhjryan"},"content":"    private static final String INVALID_DATE_TIME_MSG \u003d \"Please use the specified date format (YYYY-MM-DD)!\";","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"nhjryan"},"content":"    public InvalidDateTimeFormatException() {","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"nhjryan"},"content":"        super(INVALID_DATE_TIME_MSG);","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"nhjryan"},"content":"}","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"nhjryan":10}},{"path":"src/main/java/duke/exception/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nhjryan"},"content":"package duke.exception;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"nhjryan"},"content":"public class InvalidIndexException extends DukeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"nhjryan"},"content":"    private static final String INVALID_INDEX_MSG \u003d \"None of the entries you added are valid!\";","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"nhjryan"},"content":"    public InvalidIndexException() {","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"nhjryan"},"content":"        super(INVALID_INDEX_MSG);","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"nhjryan"},"content":"}","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"nhjryan":10}},{"path":"src/main/java/duke/exception/NoDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nhjryan"},"content":"package duke.exception;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"nhjryan"},"content":"public class NoDescriptionException extends DukeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"nhjryan"},"content":"    private static final String NO_DESCRIPTION_MSG \u003d \"The description of a \";","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"nhjryan"},"content":"    private static final String NO_DESCRIPTION_MSG_BACK \u003d \" cannot be empty.\";","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"nhjryan"},"content":"    public NoDescriptionException(String task) {","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"nhjryan"},"content":"        super(NO_DESCRIPTION_MSG + task + NO_DESCRIPTION_MSG_BACK);","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"nhjryan"},"content":"}","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"nhjryan":11}},{"path":"src/main/java/duke/exception/NoKeywordException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nhjryan"},"content":"package duke.exception;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"nhjryan"},"content":"public class NoKeywordException extends DukeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"nhjryan"},"content":"    private static final String NO_KEYWORD_MSG \u003d \"Please specify a date using the \";","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"nhjryan"},"content":"    private static final String NO_KEYWORD_MSG_BACK \u003d \" keyword.\";","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"nhjryan"},"content":"    public NoKeywordException(String keyword) {","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"nhjryan"},"content":"        super(NO_KEYWORD_MSG + keyword + NO_KEYWORD_MSG_BACK);","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"nhjryan"},"content":"}","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"nhjryan":11}},{"path":"src/main/java/duke/exception/NoNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nhjryan"},"content":"package duke.exception;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"nhjryan"},"content":"public class NoNumberException extends DukeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"nhjryan"},"content":"    private static final String NO_NUMBER_MSG \u003d \"Please enter a number after \";","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"nhjryan"},"content":"    public NoNumberException(String task) {","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"nhjryan"},"content":"        super(NO_NUMBER_MSG + task + \"!\");","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"nhjryan"},"content":"}","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"nhjryan":10}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nhjryan"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"nhjryan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"nhjryan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"nhjryan"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"nhjryan"},"content":" * Represents a Deadline with a description and a \u0027done\u0027 status and a Deadline due date.","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"nhjryan"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"nhjryan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"nhjryan"},"content":"    protected LocalDate by;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"nhjryan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"nhjryan"},"content":"     * The Constructor for a Deadline object.","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"nhjryan"},"content":"     * @param description The description of the Deadline.","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"nhjryan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"nhjryan"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"nhjryan"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"nhjryan"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"nhjryan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"nhjryan"},"content":"     * Retrieves the date that the Deadline is due.","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"nhjryan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"nhjryan"},"content":"     * @return The date that the Deadline is due.","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"nhjryan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"nhjryan"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"nhjryan"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"nhjryan"},"content":"        return by;","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"nhjryan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"nhjryan"},"content":"     * Converts the Deadline into the specified format for","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"nhjryan"},"content":"     * the text file from Storage.","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"nhjryan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"nhjryan"},"content":"     * @return The file format representation of the Deadline.","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"nhjryan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"nhjryan"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"nhjryan"},"content":"    public String toFileFormat() {","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"nhjryan"},"content":"        char done \u003d \u00270\u0027;","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"nhjryan"},"content":"        if (super.isDone) {","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"nhjryan"},"content":"            done \u003d \u00271\u0027;","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"nhjryan"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"nhjryan"},"content":"        return \"D | \" + done + \" | \" + getDescription() + \" | \" + getDate();","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"nhjryan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"nhjryan"},"content":"     * Returns a string representation of the Event. Appends a","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"nhjryan"},"content":"     * \"[D]\" to indicate it is a Deadline and the date in an \"MMM d yyyy\"","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"nhjryan"},"content":"     * format.","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"nhjryan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"nhjryan"},"content":"     * @return A string representation of the Deadline.","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"nhjryan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"nhjryan"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":57,"author":{"gitId":"nhjryan"},"content":"    public String toString() {","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"nhjryan"},"content":"        return \" [D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2021-09-06"},{"lineNumber":59,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":60,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"nhjryan"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"nhjryan":61}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nhjryan"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"nhjryan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"nhjryan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"nhjryan"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"nhjryan"},"content":" * Represents an Event with a description and a \u0027done\u0027 status and an Event date.","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"nhjryan"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"nhjryan"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"nhjryan"},"content":"    protected LocalDate at;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"nhjryan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"nhjryan"},"content":"     * The Constructor for an Event object.","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"nhjryan"},"content":"     * @param description The description of the Event.","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"nhjryan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"nhjryan"},"content":"    public Event(String description, LocalDate at) {","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"nhjryan"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"nhjryan"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"nhjryan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"nhjryan"},"content":"     * Retrieves the date that the Event occurs.","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"nhjryan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"nhjryan"},"content":"     * @return The date that the Event occurs.","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"nhjryan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"nhjryan"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"nhjryan"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"nhjryan"},"content":"        return at;","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"nhjryan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"nhjryan"},"content":"     * Converts the Event into the specified format for","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"nhjryan"},"content":"     * the text file from Storage.","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"nhjryan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"nhjryan"},"content":"     * @return The file format representation of the Event.","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"nhjryan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"nhjryan"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"nhjryan"},"content":"    public String toFileFormat() {","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"nhjryan"},"content":"        char done \u003d \u00270\u0027;","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"nhjryan"},"content":"        if (super.isDone) {","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"nhjryan"},"content":"            done \u003d \u00271\u0027;","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"nhjryan"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"nhjryan"},"content":"        return \"E | \" + done + \" | \" + getDescription() + \" | \" + getDate();","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"nhjryan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"nhjryan"},"content":"     * Returns a string representation of the Event. Appends a","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"nhjryan"},"content":"     * \"[E]\" to indicate it is an Event and the date in an \"MMM d yyyy\"","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"nhjryan"},"content":"     * format.","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"nhjryan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"nhjryan"},"content":"     * @return A string representation of the Event.","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"nhjryan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"nhjryan"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":57,"author":{"gitId":"nhjryan"},"content":"    public String toString() {","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"nhjryan"},"content":"        return \" [E]\" + super.toString() + \" (at: \" + at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2021-09-06"},{"lineNumber":59,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":60,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":62,"author":{"gitId":"nhjryan"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"nhjryan":62}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nhjryan"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"nhjryan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"nhjryan"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"nhjryan"},"content":" * Represents a general Task with a description and a \u0027done\u0027 status.","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"nhjryan"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"nhjryan"},"content":"public class Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"nhjryan"},"content":"    protected String description;","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"nhjryan"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"nhjryan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"nhjryan"},"content":"     * The constructor for a Task object.","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"nhjryan"},"content":"     * @param description The description of the Task.","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"nhjryan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"nhjryan"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"nhjryan"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"nhjryan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"nhjryan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"nhjryan"},"content":"     * Returns an \u0027X\u0027 when the Task is done and a blank space","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"nhjryan"},"content":"     * if it is not.","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"nhjryan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"nhjryan"},"content":"     * @return The appropriate symbol depending on Task\u0027s status.","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"nhjryan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"nhjryan"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"nhjryan"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"nhjryan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"nhjryan"},"content":"     * Returns the description of the Task.","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"nhjryan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"nhjryan"},"content":"     * @return The Task\u0027s description.","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"nhjryan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"nhjryan"},"content":"    public String getDescription() {","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"nhjryan"},"content":"        return description;","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"nhjryan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"nhjryan"},"content":"     * Retrieves the status of the Task","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"nhjryan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"nhjryan"},"content":"     * @return True if the Task is done, else False.","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"nhjryan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"nhjryan"},"content":"    public boolean getDone() {","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"nhjryan"},"content":"        return isDone;","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"nhjryan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"nhjryan"},"content":"     * Retrieves the date of the Task, if applicable.","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"nhjryan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"nhjryan"},"content":"     * @return If it is not a Deadline or Event, returns null.","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"nhjryan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"nhjryan"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"nhjryan"},"content":"        return null;","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":57,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"nhjryan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"nhjryan"},"content":"     * Marks the Task as done.","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"nhjryan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"nhjryan"},"content":"    public void setDone() {","lastModifiedDate":"2021-09-08"},{"lineNumber":62,"author":{"gitId":"nhjryan"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":65,"author":{"gitId":"nhjryan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"nhjryan"},"content":"     * Converts the Task into the specified format for","lastModifiedDate":"2021-09-08"},{"lineNumber":67,"author":{"gitId":"nhjryan"},"content":"     * the text file from Storage.","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"nhjryan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"nhjryan"},"content":"     * @return The file format representation of the Task.","lastModifiedDate":"2021-09-08"},{"lineNumber":70,"author":{"gitId":"nhjryan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":71,"author":{"gitId":"nhjryan"},"content":"    public String toFileFormat() {","lastModifiedDate":"2021-09-06"},{"lineNumber":72,"author":{"gitId":"nhjryan"},"content":"        return \"\";","lastModifiedDate":"2021-09-06"},{"lineNumber":73,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":74,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":75,"author":{"gitId":"nhjryan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":76,"author":{"gitId":"nhjryan"},"content":"     * Returns a string representation of the Task. Appends the","lastModifiedDate":"2021-09-08"},{"lineNumber":77,"author":{"gitId":"nhjryan"},"content":"     * \u0027done\u0027 status at the start.","lastModifiedDate":"2021-09-08"},{"lineNumber":78,"author":{"gitId":"nhjryan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":79,"author":{"gitId":"nhjryan"},"content":"     * @return A string representation of the Task.","lastModifiedDate":"2021-09-08"},{"lineNumber":80,"author":{"gitId":"nhjryan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":81,"author":{"gitId":"nhjryan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"nhjryan"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"nhjryan"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"nhjryan":84}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nhjryan"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"nhjryan"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"nhjryan"},"content":" * Represents a Todo with a description and a \u0027done\u0027 status.","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"nhjryan"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"nhjryan"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"nhjryan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"nhjryan"},"content":"     * The Constructor for a Todo object.","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"nhjryan"},"content":"     * @param description The description of the Todo.","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"nhjryan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"nhjryan"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"nhjryan"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"nhjryan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"nhjryan"},"content":"     * Converts the Todo into the specified format for","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"nhjryan"},"content":"     * the text file from Storage.","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"nhjryan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"nhjryan"},"content":"     * @return The file format representation of the Todo.","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"nhjryan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"nhjryan"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"nhjryan"},"content":"    public String toFileFormat() {","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"nhjryan"},"content":"        char done \u003d \u00270\u0027;","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"nhjryan"},"content":"        if (super.isDone) {","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"nhjryan"},"content":"            done \u003d \u00271\u0027;","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"nhjryan"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"nhjryan"},"content":"        return \"T | \" + done + \" | \" + getDescription();","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"nhjryan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"nhjryan"},"content":"     * Returns a string representation of the Todo. Appends a","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"nhjryan"},"content":"     * \"[T]\" to indicate it is a Todo.","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"nhjryan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"nhjryan"},"content":"     * @return A string representation of the Todo.","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"nhjryan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"nhjryan"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"nhjryan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"nhjryan"},"content":"        return \" [T]\" + super.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"nhjryan"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"nhjryan":41}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"nhjryan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"nhjryan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"nhjryan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"nhjryan"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"nhjryan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"nhjryan"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"nhjryan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"nhjryan"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"nhjryan"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"nhjryan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"nhjryan"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"nhjryan"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"nhjryan"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"nhjryan"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"nhjryan":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"nhjryan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"nhjryan"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"nhjryan"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"nhjryan"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"nhjryan"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"nhjryan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"nhjryan"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"nhjryan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"nhjryan"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"nhjryan"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"nhjryan"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"nhjryan"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"nhjryan"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"nhjryan"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"nhjryan"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"nhjryan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"nhjryan"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"nhjryan":19}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nhjryan"},"content":"package duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"nhjryan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"nhjryan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"nhjryan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"nhjryan"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-09"},{"lineNumber":10,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":11,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"nhjryan"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"nhjryan"},"content":"    private LocalDate date \u003d LocalDate.parse(\"2021-09-17\");","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"nhjryan"},"content":"    private Deadline deadline \u003d new Deadline(\"CS2103 iP\", date);","lastModifiedDate":"2021-09-09"},{"lineNumber":16,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"nhjryan"},"content":"    @Test","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"nhjryan"},"content":"    public void toFileFormat_deadlineComplete_printedCorrectly() {","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"nhjryan"},"content":"        deadline.setDone();","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"nhjryan"},"content":"        assertEquals(\"D | 1 | CS2103 iP | 2021-09-17\", deadline.toFileFormat());","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"nhjryan"},"content":"    @Test","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"nhjryan"},"content":"    public void toString_deadlineComplete_printedCorrectly() {","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"nhjryan"},"content":"        deadline.setDone();","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"nhjryan"},"content":"        assertEquals(\" [D][X] CS2103 iP (by: Sep 17 2021)\", deadline.toString());","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"nhjryan"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"nhjryan":29}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nhjryan"},"content":"package duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"nhjryan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"nhjryan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"nhjryan"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"nhjryan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"nhjryan"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"nhjryan"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"nhjryan"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"nhjryan"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"nhjryan"},"content":"public class ParserTest {","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"nhjryan"},"content":"    @Test","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"nhjryan"},"content":"    public void parse_gibberishInput_exceptionThrown() {","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"nhjryan"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"nhjryan"},"content":"            assertEquals(0, Parser.parse(\"asdf\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"nhjryan"},"content":"            fail();","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"nhjryan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"nhjryan"},"content":"            assertEquals(\"I\u0027m sorry, but I don\u0027t know what that means :-(\", e.getMessage());","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"nhjryan"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"nhjryan"},"content":"    @Test","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"nhjryan"},"content":"    public void parse_listCommand_parsedCorrectly() throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"nhjryan"},"content":"        final String input \u003d \"list\";","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"nhjryan"},"content":"        parseAndAssertCommandType(input, ListCommand.class);","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"nhjryan"},"content":"    @Test","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"nhjryan"},"content":"    public void parse_exitCommand_parsedCorrectly() throws DukeException {","lastModifiedDate":"2021-09-09"},{"lineNumber":34,"author":{"gitId":"nhjryan"},"content":"        final String input \u003d \"bye\";","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"nhjryan"},"content":"        parseAndAssertCommandType(input, ExitCommand.class);","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"nhjryan"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"nhjryan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    //@@author nhjryan-reused","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    //Reused from","lastModifiedDate":"2021-09-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    // https://github.com/se-edu/addressbook-level2/blob/master/test/java/seedu/addressbook/parser/ParserTest.java","lastModifiedDate":"2021-09-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    //with minor modifications","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private \u003cT extends Command\u003e T parseAndAssertCommandType(String input,","lastModifiedDate":"2021-09-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                                                            Class\u003cT\u003e expectedCommandClass) throws DukeException {","lastModifiedDate":"2021-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final Command result \u003d Parser.parse(input);","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(result.getClass().isAssignableFrom(expectedCommandClass));","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return (T) result;","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"nhjryan":37,"-":11}}]
