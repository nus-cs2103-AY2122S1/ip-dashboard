[{"path":"data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"SkyBlaise99"},"content":"[T][X] read book","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"SkyBlaise99"},"content":"[D][ ] return book (by: Jun 6 2021, 5:12 PM)","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"SkyBlaise99"},"content":"[E][ ] project meeting (at: Aug 6 2021, 2:00 PM - 6:00 PM)","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"SkyBlaise99":3}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SkyBlaise99"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"SkyBlaise99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"SkyBlaise99"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"SkyBlaise99"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"SkyBlaise99"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"SkyBlaise99"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"SkyBlaise99"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"SkyBlaise99"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"SkyBlaise99"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"SkyBlaise99"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"SkyBlaise99"},"content":"    ","lastModifiedDate":"2021-08-13"},{"lineNumber":16,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":17,"author":{"gitId":"SkyBlaise99"},"content":"     * Initialize each component of the program.","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"SkyBlaise99"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"SkyBlaise99"},"content":"     * @param filePath path to the storage file","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":21,"author":{"gitId":"SkyBlaise99"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"SkyBlaise99"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"SkyBlaise99"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"SkyBlaise99"},"content":"        ","lastModifiedDate":"2021-08-13"},{"lineNumber":25,"author":{"gitId":"SkyBlaise99"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"SkyBlaise99"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"SkyBlaise99"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"SkyBlaise99"},"content":"            ui.printMessage(e.getMessage());","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"SkyBlaise99"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-08-13"},{"lineNumber":31,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"SkyBlaise99"},"content":"    ","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"SkyBlaise99"},"content":"     * Run the program.","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"SkyBlaise99"},"content":"    public void run() {","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"SkyBlaise99"},"content":"        String input;","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"SkyBlaise99"},"content":"        ","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"SkyBlaise99"},"content":"        // Program exits only if user inputs \"bye\"","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"SkyBlaise99"},"content":"        while (!(input \u003d ui.readCommand()).equals(\"bye\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"SkyBlaise99"},"content":"            try {","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"SkyBlaise99"},"content":"                // Interpret and execute the command input by user","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"SkyBlaise99"},"content":"                String message \u003d Parser.interpretCommand(input).execute(tasks);","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"SkyBlaise99"},"content":"                ui.printMessage(message);","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"SkyBlaise99"},"content":"                ","lastModifiedDate":"2021-08-13"},{"lineNumber":46,"author":{"gitId":"SkyBlaise99"},"content":"                // Update storage file","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"SkyBlaise99"},"content":"                storage.save(tasks.getTasks());","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"SkyBlaise99"},"content":"            } catch (DukeException | IOException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"SkyBlaise99"},"content":"                ui.printMessage(e.getMessage());","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"SkyBlaise99"},"content":"            }","lastModifiedDate":"2021-08-14"},{"lineNumber":51,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-08-13"},{"lineNumber":52,"author":{"gitId":"SkyBlaise99"},"content":"        ","lastModifiedDate":"2021-08-13"},{"lineNumber":53,"author":{"gitId":"SkyBlaise99"},"content":"        // Exit Ui","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"SkyBlaise99"},"content":"        ui.exit();","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":56,"author":{"gitId":"SkyBlaise99"},"content":"    ","lastModifiedDate":"2021-08-13"},{"lineNumber":57,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"SkyBlaise99"},"content":"     * Start the whole program.","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"SkyBlaise99"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"SkyBlaise99"},"content":"     * @param args any CLI input but currently not used in program","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":63,"author":{"gitId":"SkyBlaise99"},"content":"        new Duke(\"data.txt\").run();","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"SkyBlaise99":61,"-":4}},{"path":"src/main/java/duke/exception/DataIntegrityException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SkyBlaise99"},"content":"package duke.exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"SkyBlaise99"},"content":"public class DataIntegrityException extends DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"SkyBlaise99"},"content":"    public DataIntegrityException() {","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"SkyBlaise99"},"content":"        super(\"Storage file integrity compromised :(\");","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"SkyBlaise99"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"SkyBlaise99":7}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SkyBlaise99"},"content":"package duke.exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"SkyBlaise99"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"SkyBlaise99"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"SkyBlaise99"},"content":"        super(message);","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"SkyBlaise99"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"SkyBlaise99":7}},{"path":"src/main/java/duke/exception/EmptyListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SkyBlaise99"},"content":"package duke.exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"SkyBlaise99"},"content":"public class EmptyListException extends DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"SkyBlaise99"},"content":"    public EmptyListException() {","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"SkyBlaise99"},"content":"        super(\"Your list is empty! Maybe add some tasks into it?\");","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"SkyBlaise99"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"SkyBlaise99":7}},{"path":"src/main/java/duke/exception/IllegalFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SkyBlaise99"},"content":"package duke.exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"SkyBlaise99"},"content":"public class IllegalFormatException extends DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"SkyBlaise99"},"content":"    public IllegalFormatException(String format) {","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"SkyBlaise99"},"content":"        super(\"Please follow this format:\\n  \" + format);","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"SkyBlaise99"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"SkyBlaise99":7}},{"path":"src/main/java/duke/exception/TaskNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SkyBlaise99"},"content":"package duke.exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"SkyBlaise99"},"content":"public class TaskNotFoundException extends DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"SkyBlaise99"},"content":"    public TaskNotFoundException() {","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"SkyBlaise99"},"content":"        super(\"There is no such tasks with this task number!\");","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"SkyBlaise99"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"SkyBlaise99":7}},{"path":"src/main/java/duke/exception/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SkyBlaise99"},"content":"package duke.exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"SkyBlaise99"},"content":"public class UnknownCommandException extends DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"SkyBlaise99"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"SkyBlaise99"},"content":"        super(\"Sorry but my database does not have such command.\");","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"SkyBlaise99"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"SkyBlaise99":7}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SkyBlaise99"},"content":"package duke.task;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"SkyBlaise99"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"SkyBlaise99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"SkyBlaise99"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-13"},{"lineNumber":7,"author":{"gitId":"SkyBlaise99"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"SkyBlaise99"},"content":"    ","lastModifiedDate":"2021-08-13"},{"lineNumber":9,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"SkyBlaise99"},"content":"     * Constructor for deadline.","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"SkyBlaise99"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"SkyBlaise99"},"content":"     * @param description description of the deadline","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"SkyBlaise99"},"content":"     * @param dateTime due date and time of the deadline","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"SkyBlaise99"},"content":"    public Deadline(String description, LocalDateTime dateTime) {","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"SkyBlaise99"},"content":"        super(description);","lastModifiedDate":"2021-08-13"},{"lineNumber":17,"author":{"gitId":"SkyBlaise99"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":19,"author":{"gitId":"SkyBlaise99"},"content":"    ","lastModifiedDate":"2021-08-13"},{"lineNumber":20,"author":{"gitId":"SkyBlaise99"},"content":"    @Override","lastModifiedDate":"2021-08-13"},{"lineNumber":21,"author":{"gitId":"SkyBlaise99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-13"},{"lineNumber":22,"author":{"gitId":"SkyBlaise99"},"content":"        return \"[D]\" + super.toString() + \" (by: \" +","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"SkyBlaise99"},"content":"                dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mm a\")) + \")\";","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":25,"author":{"gitId":"SkyBlaise99"},"content":"}","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"SkyBlaise99":25}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SkyBlaise99"},"content":"package duke.task;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"SkyBlaise99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"SkyBlaise99"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"SkyBlaise99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"SkyBlaise99"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-13"},{"lineNumber":8,"author":{"gitId":"SkyBlaise99"},"content":"    private final LocalDate date;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"SkyBlaise99"},"content":"    private final LocalTime startTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"SkyBlaise99"},"content":"    private final LocalTime endTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"SkyBlaise99"},"content":"    ","lastModifiedDate":"2021-08-13"},{"lineNumber":12,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"SkyBlaise99"},"content":"     * Constructor for event.","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"SkyBlaise99"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"SkyBlaise99"},"content":"     * @param description description of the event","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"SkyBlaise99"},"content":"     * @param date date of the event","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"SkyBlaise99"},"content":"     * @param startTime start time of the event","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"SkyBlaise99"},"content":"     * @param endTime end time of the event","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"SkyBlaise99"},"content":"    public Event(String description, LocalDate date, LocalTime startTime, LocalTime endTime) {","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"SkyBlaise99"},"content":"        super(description);","lastModifiedDate":"2021-08-13"},{"lineNumber":22,"author":{"gitId":"SkyBlaise99"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"SkyBlaise99"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"SkyBlaise99"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":26,"author":{"gitId":"SkyBlaise99"},"content":"    ","lastModifiedDate":"2021-08-13"},{"lineNumber":27,"author":{"gitId":"SkyBlaise99"},"content":"    @Override","lastModifiedDate":"2021-08-13"},{"lineNumber":28,"author":{"gitId":"SkyBlaise99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-13"},{"lineNumber":29,"author":{"gitId":"SkyBlaise99"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"h:mm a\");","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"SkyBlaise99"},"content":"        return \"[E]\" + super.toString() + \" (at: \" +","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"SkyBlaise99"},"content":"                date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \", \" +","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"SkyBlaise99"},"content":"                startTime.format(timeFormatter) + \" - \" + endTime.format(timeFormatter) + \")\";","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":34,"author":{"gitId":"SkyBlaise99"},"content":"}","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"SkyBlaise99":34}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SkyBlaise99"},"content":"package duke.task;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"SkyBlaise99"},"content":"public class Task {","lastModifiedDate":"2021-08-13"},{"lineNumber":4,"author":{"gitId":"SkyBlaise99"},"content":"    private final String description;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"SkyBlaise99"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-13"},{"lineNumber":6,"author":{"gitId":"SkyBlaise99"},"content":"    ","lastModifiedDate":"2021-08-13"},{"lineNumber":7,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"SkyBlaise99"},"content":"     * Constructor for task.","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"SkyBlaise99"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"SkyBlaise99"},"content":"     * @param description description of the task","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"SkyBlaise99"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-13"},{"lineNumber":13,"author":{"gitId":"SkyBlaise99"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-13"},{"lineNumber":14,"author":{"gitId":"SkyBlaise99"},"content":"        isDone \u003d false;","lastModifiedDate":"2021-08-13"},{"lineNumber":15,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":16,"author":{"gitId":"SkyBlaise99"},"content":"    ","lastModifiedDate":"2021-08-13"},{"lineNumber":17,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":18,"author":{"gitId":"SkyBlaise99"},"content":"     * Marks the task as done.","lastModifiedDate":"2021-08-13"},{"lineNumber":19,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":20,"author":{"gitId":"SkyBlaise99"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"SkyBlaise99"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-13"},{"lineNumber":22,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":23,"author":{"gitId":"SkyBlaise99"},"content":"    ","lastModifiedDate":"2021-08-13"},{"lineNumber":24,"author":{"gitId":"SkyBlaise99"},"content":"    @Override","lastModifiedDate":"2021-08-13"},{"lineNumber":25,"author":{"gitId":"SkyBlaise99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-13"},{"lineNumber":26,"author":{"gitId":"SkyBlaise99"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + description;","lastModifiedDate":"2021-08-13"},{"lineNumber":27,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":28,"author":{"gitId":"SkyBlaise99"},"content":"}","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"SkyBlaise99":28}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SkyBlaise99"},"content":"package duke.task;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"SkyBlaise99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"SkyBlaise99"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"SkyBlaise99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"SkyBlaise99"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"SkyBlaise99"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"SkyBlaise99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"SkyBlaise99"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"SkyBlaise99"},"content":"import duke.exception.EmptyListException;","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"SkyBlaise99"},"content":"import duke.exception.IllegalFormatException;","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"SkyBlaise99"},"content":"import duke.exception.TaskNotFoundException;","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"SkyBlaise99"},"content":"public class TaskList {","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"SkyBlaise99"},"content":"    private final String MESSAGE_DONE \u003d \"Congrats! You have accomplished the following task:\";","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"SkyBlaise99"},"content":"    private final String MESSAGE_ADD \u003d \"Alright, new task added to the list:\";","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"SkyBlaise99"},"content":"    private final String MESSAGE_DELETE \u003d \"Sure, I\u0027ve deleted this task:\";","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"SkyBlaise99"},"content":"    private final String MESSAGE_LIST \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"SkyBlaise99"},"content":"    ","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"SkyBlaise99"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"SkyBlaise99"},"content":"    ","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"SkyBlaise99"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"SkyBlaise99"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"SkyBlaise99"},"content":"        this(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"SkyBlaise99"},"content":"    ","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"SkyBlaise99"},"content":"     * Overloading constructor for TaskList. Allows user to input a list of tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"SkyBlaise99"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"SkyBlaise99"},"content":"     * @param tasks an existing list of tasks","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"SkyBlaise99"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"SkyBlaise99"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"SkyBlaise99"},"content":"    ","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"SkyBlaise99"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"SkyBlaise99"},"content":"        return tasks;","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"SkyBlaise99"},"content":"    ","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"SkyBlaise99"},"content":"     * Deletes the task with the same task number specified by user.","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"SkyBlaise99"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"SkyBlaise99"},"content":"     * @param command command entered by user (delete [task number])","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"SkyBlaise99"},"content":"     * @return confirmation message for successful deleting a task","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"SkyBlaise99"},"content":"     * @throws IllegalFormatException if user gives empty or invalid task number","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"SkyBlaise99"},"content":"     * @throws TaskNotFoundException if the task specified by the task number does not exist","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"SkyBlaise99"},"content":"    public String taskDelete(String command) throws IllegalFormatException, TaskNotFoundException {","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"SkyBlaise99"},"content":"        // Throw exception if user gives empty or non-integer task number","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"SkyBlaise99"},"content":"        validateCommand(command, \"^delete [0-9]+\", \"delete [task number]\");","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"SkyBlaise99"},"content":"        ","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"SkyBlaise99"},"content":"        int taskNumber;","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"SkyBlaise99"},"content":"        ","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"SkyBlaise99"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"SkyBlaise99"},"content":"            taskNumber \u003d Integer.parseInt(command.substring(7)) - 1;","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"SkyBlaise99"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"SkyBlaise99"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"SkyBlaise99"},"content":"        ","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"SkyBlaise99"},"content":"        // Throw exception if taskNumber is out of range","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"SkyBlaise99"},"content":"        if (taskNumber \u003c 0 || taskNumber \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"SkyBlaise99"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"SkyBlaise99"},"content":"        ","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"SkyBlaise99"},"content":"        // Delete the task","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"SkyBlaise99"},"content":"        Task task \u003d tasks.remove(taskNumber);","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"SkyBlaise99"},"content":"        ","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"SkyBlaise99"},"content":"        int size \u003d tasks.size();","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"SkyBlaise99"},"content":"        ","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"SkyBlaise99"},"content":"        // Return confirmation message","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"SkyBlaise99"},"content":"        return MESSAGE_DELETE + \"\\n  \" +","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"SkyBlaise99"},"content":"                task + \"\\n\" +","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"SkyBlaise99"},"content":"                (size \u003d\u003d 0","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"SkyBlaise99"},"content":"                 ? \"You have no more task in the list!\"","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"SkyBlaise99"},"content":"                 : size \u003d\u003d 1","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"SkyBlaise99"},"content":"                   ? \"You still have 1 task in the list.\"","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"SkyBlaise99"},"content":"                   : \"You still have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"SkyBlaise99"},"content":"    ","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"SkyBlaise99"},"content":"     * Marks the task with the same task number specified by user as done.","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"SkyBlaise99"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"SkyBlaise99"},"content":"     * @param command command entered by user (done [task number])","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"SkyBlaise99"},"content":"     * @return confirmation message for successful marking a task as done","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"SkyBlaise99"},"content":"     * @throws IllegalFormatException if user gives empty or invalid task number","lastModifiedDate":"2021-08-21"},{"lineNumber":90,"author":{"gitId":"SkyBlaise99"},"content":"     * @throws TaskNotFoundException if the task specified by the task number does not exist","lastModifiedDate":"2021-08-21"},{"lineNumber":91,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"SkyBlaise99"},"content":"    public String taskDone(String command) throws IllegalFormatException, TaskNotFoundException {","lastModifiedDate":"2021-08-21"},{"lineNumber":93,"author":{"gitId":"SkyBlaise99"},"content":"        // Throw exception if user gives empty or non-integer task number","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"SkyBlaise99"},"content":"        validateCommand(command, \"^done [0-9]+\", \"done [task number]\");","lastModifiedDate":"2021-08-21"},{"lineNumber":95,"author":{"gitId":"SkyBlaise99"},"content":"        ","lastModifiedDate":"2021-08-21"},{"lineNumber":96,"author":{"gitId":"SkyBlaise99"},"content":"        int taskNumber;","lastModifiedDate":"2021-08-21"},{"lineNumber":97,"author":{"gitId":"SkyBlaise99"},"content":"        ","lastModifiedDate":"2021-08-21"},{"lineNumber":98,"author":{"gitId":"SkyBlaise99"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":99,"author":{"gitId":"SkyBlaise99"},"content":"            taskNumber \u003d Integer.parseInt(command.substring(5)) - 1;","lastModifiedDate":"2021-08-21"},{"lineNumber":100,"author":{"gitId":"SkyBlaise99"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":101,"author":{"gitId":"SkyBlaise99"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2021-08-21"},{"lineNumber":102,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":103,"author":{"gitId":"SkyBlaise99"},"content":"        ","lastModifiedDate":"2021-08-21"},{"lineNumber":104,"author":{"gitId":"SkyBlaise99"},"content":"        // Throw exception if taskNumber is out of range","lastModifiedDate":"2021-08-21"},{"lineNumber":105,"author":{"gitId":"SkyBlaise99"},"content":"        if (taskNumber \u003c 0 || taskNumber \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":106,"author":{"gitId":"SkyBlaise99"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2021-08-21"},{"lineNumber":107,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":108,"author":{"gitId":"SkyBlaise99"},"content":"        ","lastModifiedDate":"2021-08-21"},{"lineNumber":109,"author":{"gitId":"SkyBlaise99"},"content":"        // Mark the task as done","lastModifiedDate":"2021-08-21"},{"lineNumber":110,"author":{"gitId":"SkyBlaise99"},"content":"        Task task \u003d tasks.get(taskNumber);","lastModifiedDate":"2021-08-21"},{"lineNumber":111,"author":{"gitId":"SkyBlaise99"},"content":"        task.markAsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"SkyBlaise99"},"content":"        ","lastModifiedDate":"2021-08-21"},{"lineNumber":113,"author":{"gitId":"SkyBlaise99"},"content":"        // Return confirmation message","lastModifiedDate":"2021-08-21"},{"lineNumber":114,"author":{"gitId":"SkyBlaise99"},"content":"        return MESSAGE_DONE + \"\\n  \" + task;","lastModifiedDate":"2021-08-21"},{"lineNumber":115,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":116,"author":{"gitId":"SkyBlaise99"},"content":"    ","lastModifiedDate":"2021-08-21"},{"lineNumber":117,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":118,"author":{"gitId":"SkyBlaise99"},"content":"     * Adds a new event to the list of tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":119,"author":{"gitId":"SkyBlaise99"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":120,"author":{"gitId":"SkyBlaise99"},"content":"     * @param command command entered by user (event [description] /at [time])","lastModifiedDate":"2021-08-21"},{"lineNumber":121,"author":{"gitId":"SkyBlaise99"},"content":"     * @return confirmation message for successful adding a new event","lastModifiedDate":"2021-08-21"},{"lineNumber":122,"author":{"gitId":"SkyBlaise99"},"content":"     * @throws IllegalFormatException if user inputs an invalid command","lastModifiedDate":"2021-08-21"},{"lineNumber":123,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":124,"author":{"gitId":"SkyBlaise99"},"content":"    public String addEvent(String command) throws IllegalFormatException {","lastModifiedDate":"2021-08-21"},{"lineNumber":125,"author":{"gitId":"SkyBlaise99"},"content":"        String correctFormat \u003d \"event [description] /at [dd/MM/yy] /from [HHmm] /to [HHmm]\";","lastModifiedDate":"2021-08-21"},{"lineNumber":126,"author":{"gitId":"SkyBlaise99"},"content":"        ","lastModifiedDate":"2021-08-21"},{"lineNumber":127,"author":{"gitId":"SkyBlaise99"},"content":"        // Throw exception if command does not follow format","lastModifiedDate":"2021-08-21"},{"lineNumber":128,"author":{"gitId":"SkyBlaise99"},"content":"        validateCommand(command, \"^event .* /at .* /from .* /to .*\", correctFormat);","lastModifiedDate":"2021-08-21"},{"lineNumber":129,"author":{"gitId":"SkyBlaise99"},"content":"        ","lastModifiedDate":"2021-08-21"},{"lineNumber":130,"author":{"gitId":"SkyBlaise99"},"content":"        // Separate info and trim each of them","lastModifiedDate":"2021-08-21"},{"lineNumber":131,"author":{"gitId":"SkyBlaise99"},"content":"        String[] info \u003d command.substring(6).split(\"/at|/from|/to\");","lastModifiedDate":"2021-08-21"},{"lineNumber":132,"author":{"gitId":"SkyBlaise99"},"content":"        info \u003d Arrays.stream(info).map(String::trim).toArray(String[]::new);","lastModifiedDate":"2021-08-21"},{"lineNumber":133,"author":{"gitId":"SkyBlaise99"},"content":"        ","lastModifiedDate":"2021-08-21"},{"lineNumber":134,"author":{"gitId":"SkyBlaise99"},"content":"        LocalDate date;","lastModifiedDate":"2021-08-21"},{"lineNumber":135,"author":{"gitId":"SkyBlaise99"},"content":"        LocalTime startTime, endTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":136,"author":{"gitId":"SkyBlaise99"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"Hmm\");","lastModifiedDate":"2021-08-21"},{"lineNumber":137,"author":{"gitId":"SkyBlaise99"},"content":"        ","lastModifiedDate":"2021-08-21"},{"lineNumber":138,"author":{"gitId":"SkyBlaise99"},"content":"        // Throw exception if command does not follow format","lastModifiedDate":"2021-08-21"},{"lineNumber":139,"author":{"gitId":"SkyBlaise99"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":140,"author":{"gitId":"SkyBlaise99"},"content":"            date \u003d LocalDate.parse(info[1], DateTimeFormatter.ofPattern(\"d/M/yy\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":141,"author":{"gitId":"SkyBlaise99"},"content":"            startTime \u003d LocalTime.parse(info[2], timeFormatter);","lastModifiedDate":"2021-08-21"},{"lineNumber":142,"author":{"gitId":"SkyBlaise99"},"content":"            endTime \u003d LocalTime.parse(info[3], timeFormatter);","lastModifiedDate":"2021-08-21"},{"lineNumber":143,"author":{"gitId":"SkyBlaise99"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":144,"author":{"gitId":"SkyBlaise99"},"content":"            throw new IllegalFormatException(correctFormat);","lastModifiedDate":"2021-08-21"},{"lineNumber":145,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":146,"author":{"gitId":"SkyBlaise99"},"content":"        ","lastModifiedDate":"2021-08-21"},{"lineNumber":147,"author":{"gitId":"SkyBlaise99"},"content":"        // Throw exception if start time is later than end time","lastModifiedDate":"2021-08-21"},{"lineNumber":148,"author":{"gitId":"SkyBlaise99"},"content":"        if (startTime.isAfter(endTime)) {","lastModifiedDate":"2021-08-21"},{"lineNumber":149,"author":{"gitId":"SkyBlaise99"},"content":"            throw new IllegalFormatException(correctFormat);","lastModifiedDate":"2021-08-21"},{"lineNumber":150,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":151,"author":{"gitId":"SkyBlaise99"},"content":"        ","lastModifiedDate":"2021-08-21"},{"lineNumber":152,"author":{"gitId":"SkyBlaise99"},"content":"        // Add new event","lastModifiedDate":"2021-08-21"},{"lineNumber":153,"author":{"gitId":"SkyBlaise99"},"content":"        Task newTask \u003d new Event(info[0], date, startTime, endTime);","lastModifiedDate":"2021-08-21"},{"lineNumber":154,"author":{"gitId":"SkyBlaise99"},"content":"        ","lastModifiedDate":"2021-08-21"},{"lineNumber":155,"author":{"gitId":"SkyBlaise99"},"content":"        // Add the newly created task into list of tasks","lastModifiedDate":"2021-08-21"},{"lineNumber":156,"author":{"gitId":"SkyBlaise99"},"content":"        tasks.add(newTask);","lastModifiedDate":"2021-08-21"},{"lineNumber":157,"author":{"gitId":"SkyBlaise99"},"content":"        ","lastModifiedDate":"2021-08-21"},{"lineNumber":158,"author":{"gitId":"SkyBlaise99"},"content":"        // Return confirmation message","lastModifiedDate":"2021-08-21"},{"lineNumber":159,"author":{"gitId":"SkyBlaise99"},"content":"        return formatAddMessage(newTask, tasks.size());","lastModifiedDate":"2021-08-21"},{"lineNumber":160,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":161,"author":{"gitId":"SkyBlaise99"},"content":"    ","lastModifiedDate":"2021-08-21"},{"lineNumber":162,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":163,"author":{"gitId":"SkyBlaise99"},"content":"     * Adds a new deadline to the list of tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":164,"author":{"gitId":"SkyBlaise99"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":165,"author":{"gitId":"SkyBlaise99"},"content":"     * @param command command entered by user (deadline [description] /by [time])","lastModifiedDate":"2021-08-21"},{"lineNumber":166,"author":{"gitId":"SkyBlaise99"},"content":"     * @return confirmation message for successful adding a new deadline","lastModifiedDate":"2021-08-21"},{"lineNumber":167,"author":{"gitId":"SkyBlaise99"},"content":"     * @throws IllegalFormatException if user inputs an invalid command","lastModifiedDate":"2021-08-21"},{"lineNumber":168,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":169,"author":{"gitId":"SkyBlaise99"},"content":"    public String addDeadline(String command) throws IllegalFormatException {","lastModifiedDate":"2021-08-21"},{"lineNumber":170,"author":{"gitId":"SkyBlaise99"},"content":"        String correctFormat \u003d \"deadline [description] /by [dd/MM/yy] [HHmm]\";","lastModifiedDate":"2021-08-21"},{"lineNumber":171,"author":{"gitId":"SkyBlaise99"},"content":"        ","lastModifiedDate":"2021-08-21"},{"lineNumber":172,"author":{"gitId":"SkyBlaise99"},"content":"        // Throw exception if command does not follow format","lastModifiedDate":"2021-08-21"},{"lineNumber":173,"author":{"gitId":"SkyBlaise99"},"content":"        validateCommand(command, \"^deadline .* /by .*\", correctFormat);","lastModifiedDate":"2021-08-21"},{"lineNumber":174,"author":{"gitId":"SkyBlaise99"},"content":"        ","lastModifiedDate":"2021-08-21"},{"lineNumber":175,"author":{"gitId":"SkyBlaise99"},"content":"        // Separate info and trim each of them","lastModifiedDate":"2021-08-21"},{"lineNumber":176,"author":{"gitId":"SkyBlaise99"},"content":"        String[] info \u003d command.substring(9).split(\"/by\");","lastModifiedDate":"2021-08-21"},{"lineNumber":177,"author":{"gitId":"SkyBlaise99"},"content":"        info \u003d Arrays.stream(info).map(String::trim).toArray(String[]::new);","lastModifiedDate":"2021-08-21"},{"lineNumber":178,"author":{"gitId":"SkyBlaise99"},"content":"        ","lastModifiedDate":"2021-08-21"},{"lineNumber":179,"author":{"gitId":"SkyBlaise99"},"content":"        LocalDateTime dateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":180,"author":{"gitId":"SkyBlaise99"},"content":"        ","lastModifiedDate":"2021-08-21"},{"lineNumber":181,"author":{"gitId":"SkyBlaise99"},"content":"        // Throw exception if command does not follow format","lastModifiedDate":"2021-08-21"},{"lineNumber":182,"author":{"gitId":"SkyBlaise99"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":183,"author":{"gitId":"SkyBlaise99"},"content":"            dateTime \u003d LocalDateTime.parse(info[1], DateTimeFormatter.ofPattern(\"d/M/yy Hmm\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":184,"author":{"gitId":"SkyBlaise99"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":185,"author":{"gitId":"SkyBlaise99"},"content":"            throw new IllegalFormatException(correctFormat);","lastModifiedDate":"2021-08-21"},{"lineNumber":186,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":187,"author":{"gitId":"SkyBlaise99"},"content":"        ","lastModifiedDate":"2021-08-21"},{"lineNumber":188,"author":{"gitId":"SkyBlaise99"},"content":"        // Add new deadline","lastModifiedDate":"2021-08-21"},{"lineNumber":189,"author":{"gitId":"SkyBlaise99"},"content":"        Task newTask \u003d new Deadline(info[0], dateTime);","lastModifiedDate":"2021-08-21"},{"lineNumber":190,"author":{"gitId":"SkyBlaise99"},"content":"        ","lastModifiedDate":"2021-08-21"},{"lineNumber":191,"author":{"gitId":"SkyBlaise99"},"content":"        // Add the newly created task into list of tasks","lastModifiedDate":"2021-08-21"},{"lineNumber":192,"author":{"gitId":"SkyBlaise99"},"content":"        tasks.add(newTask);","lastModifiedDate":"2021-08-21"},{"lineNumber":193,"author":{"gitId":"SkyBlaise99"},"content":"        ","lastModifiedDate":"2021-08-21"},{"lineNumber":194,"author":{"gitId":"SkyBlaise99"},"content":"        // Return confirmation message","lastModifiedDate":"2021-08-21"},{"lineNumber":195,"author":{"gitId":"SkyBlaise99"},"content":"        return formatAddMessage(newTask, tasks.size());","lastModifiedDate":"2021-08-21"},{"lineNumber":196,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":197,"author":{"gitId":"SkyBlaise99"},"content":"    ","lastModifiedDate":"2021-08-21"},{"lineNumber":198,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":199,"author":{"gitId":"SkyBlaise99"},"content":"     * Adds a new todo to the list of tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":200,"author":{"gitId":"SkyBlaise99"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":201,"author":{"gitId":"SkyBlaise99"},"content":"     * @param command command entered by user (todo [description])","lastModifiedDate":"2021-08-21"},{"lineNumber":202,"author":{"gitId":"SkyBlaise99"},"content":"     * @return confirmation message for successful adding a new todo","lastModifiedDate":"2021-08-21"},{"lineNumber":203,"author":{"gitId":"SkyBlaise99"},"content":"     * @throws IllegalFormatException if user inputs an invalid command","lastModifiedDate":"2021-08-21"},{"lineNumber":204,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":205,"author":{"gitId":"SkyBlaise99"},"content":"    public String addTodo(String command) throws IllegalFormatException {","lastModifiedDate":"2021-08-21"},{"lineNumber":206,"author":{"gitId":"SkyBlaise99"},"content":"        // Throw exception if command does not follow format","lastModifiedDate":"2021-08-21"},{"lineNumber":207,"author":{"gitId":"SkyBlaise99"},"content":"        validateCommand(command, \"^todo .*\", \"todo [description]\");","lastModifiedDate":"2021-08-21"},{"lineNumber":208,"author":{"gitId":"SkyBlaise99"},"content":"        ","lastModifiedDate":"2021-08-21"},{"lineNumber":209,"author":{"gitId":"SkyBlaise99"},"content":"        // Add new todo","lastModifiedDate":"2021-08-21"},{"lineNumber":210,"author":{"gitId":"SkyBlaise99"},"content":"        Task newTask \u003d new Todo(command.substring(5).trim());","lastModifiedDate":"2021-08-21"},{"lineNumber":211,"author":{"gitId":"SkyBlaise99"},"content":"        ","lastModifiedDate":"2021-08-21"},{"lineNumber":212,"author":{"gitId":"SkyBlaise99"},"content":"        // Add the newly created task into list of tasks","lastModifiedDate":"2021-08-21"},{"lineNumber":213,"author":{"gitId":"SkyBlaise99"},"content":"        tasks.add(newTask);","lastModifiedDate":"2021-08-21"},{"lineNumber":214,"author":{"gitId":"SkyBlaise99"},"content":"        ","lastModifiedDate":"2021-08-21"},{"lineNumber":215,"author":{"gitId":"SkyBlaise99"},"content":"        // Return confirmation message","lastModifiedDate":"2021-08-21"},{"lineNumber":216,"author":{"gitId":"SkyBlaise99"},"content":"        return formatAddMessage(newTask, tasks.size());","lastModifiedDate":"2021-08-21"},{"lineNumber":217,"author":{"gitId":"SkyBlaise99"},"content":"        ","lastModifiedDate":"2021-08-21"},{"lineNumber":218,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":219,"author":{"gitId":"SkyBlaise99"},"content":"    ","lastModifiedDate":"2021-08-21"},{"lineNumber":220,"author":{"gitId":"SkyBlaise99"},"content":"    private void validateCommand(String command, String regex, String format) throws IllegalFormatException {","lastModifiedDate":"2021-08-21"},{"lineNumber":221,"author":{"gitId":"SkyBlaise99"},"content":"        if (!command.matches(regex)) {","lastModifiedDate":"2021-08-21"},{"lineNumber":222,"author":{"gitId":"SkyBlaise99"},"content":"            throw new IllegalFormatException(format);","lastModifiedDate":"2021-08-21"},{"lineNumber":223,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":224,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":225,"author":{"gitId":"SkyBlaise99"},"content":"    ","lastModifiedDate":"2021-08-21"},{"lineNumber":226,"author":{"gitId":"SkyBlaise99"},"content":"    private String formatAddMessage(Task task, int size) {","lastModifiedDate":"2021-08-21"},{"lineNumber":227,"author":{"gitId":"SkyBlaise99"},"content":"        return MESSAGE_ADD + \"\\n  \" +","lastModifiedDate":"2021-08-21"},{"lineNumber":228,"author":{"gitId":"SkyBlaise99"},"content":"                task + \"\\n\" +","lastModifiedDate":"2021-08-21"},{"lineNumber":229,"author":{"gitId":"SkyBlaise99"},"content":"                \"Now you have \" + size + \" task\" + (size \u003d\u003d 1 ? \"\" : \"s\") + \" in the list.\";","lastModifiedDate":"2021-08-21"},{"lineNumber":230,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":231,"author":{"gitId":"SkyBlaise99"},"content":"    ","lastModifiedDate":"2021-08-21"},{"lineNumber":232,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":233,"author":{"gitId":"SkyBlaise99"},"content":"     * Prints all the tasks in the list.","lastModifiedDate":"2021-08-21"},{"lineNumber":234,"author":{"gitId":"SkyBlaise99"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":235,"author":{"gitId":"SkyBlaise99"},"content":"     * @return string representation of the list of tasks","lastModifiedDate":"2021-08-21"},{"lineNumber":236,"author":{"gitId":"SkyBlaise99"},"content":"     * @throws EmptyListException if the list of tasks is empty","lastModifiedDate":"2021-08-21"},{"lineNumber":237,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":238,"author":{"gitId":"SkyBlaise99"},"content":"    public String printFullList() throws EmptyListException {","lastModifiedDate":"2021-08-21"},{"lineNumber":239,"author":{"gitId":"SkyBlaise99"},"content":"        int size \u003d tasks.size();","lastModifiedDate":"2021-08-21"},{"lineNumber":240,"author":{"gitId":"SkyBlaise99"},"content":"        ","lastModifiedDate":"2021-08-21"},{"lineNumber":241,"author":{"gitId":"SkyBlaise99"},"content":"        // Throw exception if list is empty","lastModifiedDate":"2021-08-21"},{"lineNumber":242,"author":{"gitId":"SkyBlaise99"},"content":"        if (size \u003d\u003d 0) {","lastModifiedDate":"2021-08-21"},{"lineNumber":243,"author":{"gitId":"SkyBlaise99"},"content":"            throw new EmptyListException();","lastModifiedDate":"2021-08-21"},{"lineNumber":244,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":245,"author":{"gitId":"SkyBlaise99"},"content":"        ","lastModifiedDate":"2021-08-21"},{"lineNumber":246,"author":{"gitId":"SkyBlaise99"},"content":"        // Reformat the list of tasks into a string","lastModifiedDate":"2021-08-21"},{"lineNumber":247,"author":{"gitId":"SkyBlaise99"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-08-21"},{"lineNumber":248,"author":{"gitId":"SkyBlaise99"},"content":"        for (int i \u003d 0; i \u003c size - 1; i++) {","lastModifiedDate":"2021-08-21"},{"lineNumber":249,"author":{"gitId":"SkyBlaise99"},"content":"            sb.append(i + 1)","lastModifiedDate":"2021-08-21"},{"lineNumber":250,"author":{"gitId":"SkyBlaise99"},"content":"              .append(\". \")","lastModifiedDate":"2021-08-21"},{"lineNumber":251,"author":{"gitId":"SkyBlaise99"},"content":"              .append(tasks.get(i))","lastModifiedDate":"2021-08-21"},{"lineNumber":252,"author":{"gitId":"SkyBlaise99"},"content":"              .append(\"\\n\");","lastModifiedDate":"2021-08-21"},{"lineNumber":253,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":254,"author":{"gitId":"SkyBlaise99"},"content":"        ","lastModifiedDate":"2021-08-21"},{"lineNumber":255,"author":{"gitId":"SkyBlaise99"},"content":"        // Last task is special as it does not need the \u0027\\n\u0027","lastModifiedDate":"2021-08-21"},{"lineNumber":256,"author":{"gitId":"SkyBlaise99"},"content":"        sb.append(size)","lastModifiedDate":"2021-08-21"},{"lineNumber":257,"author":{"gitId":"SkyBlaise99"},"content":"          .append(\". \")","lastModifiedDate":"2021-08-21"},{"lineNumber":258,"author":{"gitId":"SkyBlaise99"},"content":"          .append(tasks.get(size - 1));","lastModifiedDate":"2021-08-21"},{"lineNumber":259,"author":{"gitId":"SkyBlaise99"},"content":"        ","lastModifiedDate":"2021-08-21"},{"lineNumber":260,"author":{"gitId":"SkyBlaise99"},"content":"        // Return string representation of the list of tasks","lastModifiedDate":"2021-08-21"},{"lineNumber":261,"author":{"gitId":"SkyBlaise99"},"content":"        return MESSAGE_LIST + \"\\n\" + sb;","lastModifiedDate":"2021-08-21"},{"lineNumber":262,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":263,"author":{"gitId":"SkyBlaise99"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"SkyBlaise99":263}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SkyBlaise99"},"content":"package duke.task;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"SkyBlaise99"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-13"},{"lineNumber":4,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"SkyBlaise99"},"content":"     * Constructor for todo.","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"SkyBlaise99"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"SkyBlaise99"},"content":"     * @param description description of the todo","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"SkyBlaise99"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-13"},{"lineNumber":10,"author":{"gitId":"SkyBlaise99"},"content":"        super(description);","lastModifiedDate":"2021-08-13"},{"lineNumber":11,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":12,"author":{"gitId":"SkyBlaise99"},"content":"    ","lastModifiedDate":"2021-08-13"},{"lineNumber":13,"author":{"gitId":"SkyBlaise99"},"content":"    @Override","lastModifiedDate":"2021-08-13"},{"lineNumber":14,"author":{"gitId":"SkyBlaise99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-13"},{"lineNumber":15,"author":{"gitId":"SkyBlaise99"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-13"},{"lineNumber":16,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":17,"author":{"gitId":"SkyBlaise99"},"content":"}","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"SkyBlaise99":17}},{"path":"src/main/java/duke/util/CheckedFunction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SkyBlaise99"},"content":"package duke.util;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"SkyBlaise99"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"SkyBlaise99"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"SkyBlaise99"},"content":"public interface CheckedFunction {","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"SkyBlaise99"},"content":"    String execute(TaskList t) throws DukeException;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"SkyBlaise99"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"SkyBlaise99":8}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SkyBlaise99"},"content":"package duke.util;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"SkyBlaise99"},"content":"import duke.exception.UnknownCommandException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"SkyBlaise99"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"SkyBlaise99"},"content":"public class Parser {","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"SkyBlaise99"},"content":"     * Interprets the command entered by user.","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"SkyBlaise99"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"SkyBlaise99"},"content":"     * @param command command to be interpreted","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"SkyBlaise99"},"content":"     * @throws UnknownCommandException if user inputs invalid command","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"SkyBlaise99"},"content":"    public static CheckedFunction interpretCommand(String command) throws UnknownCommandException {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"SkyBlaise99"},"content":"        // Each if else handles one type of command","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"SkyBlaise99"},"content":"        if (command.equals(\"list\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"SkyBlaise99"},"content":"            return TaskList::printFullList;","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"SkyBlaise99"},"content":"        } else if (command.matches(\"^done( .*)?\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"SkyBlaise99"},"content":"            return (tasks) -\u003e tasks.taskDone(command);","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"SkyBlaise99"},"content":"        } else if (command.matches(\"^todo( .*)?\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"SkyBlaise99"},"content":"            return (tasks) -\u003e tasks.addTodo(command);","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"SkyBlaise99"},"content":"        } else if (command.matches(\"^deadline( .*)?\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"SkyBlaise99"},"content":"            return (tasks) -\u003e tasks.addDeadline(command);","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"SkyBlaise99"},"content":"        } else if (command.matches(\"^event( .*)?\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"SkyBlaise99"},"content":"            return (tasks) -\u003e tasks.addEvent(command);","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"SkyBlaise99"},"content":"        } else if (command.matches(\"^delete( .*)?\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"SkyBlaise99"},"content":"            return (tasks) -\u003e tasks.taskDelete(command);","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"SkyBlaise99"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"SkyBlaise99"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"SkyBlaise99"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"SkyBlaise99":31}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SkyBlaise99"},"content":"package duke.util;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"SkyBlaise99"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"SkyBlaise99"},"content":"import java.io.File;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"SkyBlaise99"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"SkyBlaise99"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"SkyBlaise99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"SkyBlaise99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"SkyBlaise99"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"SkyBlaise99"},"content":"import java.util.List;","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"SkyBlaise99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"SkyBlaise99"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"SkyBlaise99"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"SkyBlaise99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"SkyBlaise99"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"SkyBlaise99"},"content":"import duke.exception.DataIntegrityException;","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"SkyBlaise99"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"SkyBlaise99"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"SkyBlaise99"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"SkyBlaise99"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"SkyBlaise99"},"content":"public class Storage {","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"SkyBlaise99"},"content":"    private final String filePath;","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"SkyBlaise99"},"content":"    ","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"SkyBlaise99"},"content":"     * Constructor for Storage.","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"SkyBlaise99"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"SkyBlaise99"},"content":"     * @param filePath file path to local storage","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"SkyBlaise99"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"SkyBlaise99"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"SkyBlaise99"},"content":"    ","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"SkyBlaise99"},"content":"     * Saves data stored locally. If file does not exist, then a new file will be created.","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"SkyBlaise99"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"SkyBlaise99"},"content":"     * @param tasks the list of tasks to be saved into local storage","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"SkyBlaise99"},"content":"     * @throws IOException if the named file exists but is a directory rather than a regular file,","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"SkyBlaise99"},"content":"     * does not exist but cannot be created, or cannot be opened for any other reason","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"SkyBlaise99"},"content":"    public void save(List\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"SkyBlaise99"},"content":"        // Reformat the list of tasks for storage","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"SkyBlaise99"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"SkyBlaise99"},"content":"        tasks.forEach(task -\u003e output.append(task.toString()).append(\"\\n\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"SkyBlaise99"},"content":"        ","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"SkyBlaise99"},"content":"        // Overwrite the current save file","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"SkyBlaise99"},"content":"        FileWriter fw \u003d new FileWriter(filePath, false);","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"SkyBlaise99"},"content":"        fw.write(output.toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"SkyBlaise99"},"content":"        fw.flush();","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"SkyBlaise99"},"content":"        fw.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"SkyBlaise99"},"content":"    ","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"SkyBlaise99"},"content":"     * Loads data stored locally. If file does not exist, then a new file will be created.","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"SkyBlaise99"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"SkyBlaise99"},"content":"     * @return an array list of tasks containing any tasks that can be read from local storage","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"SkyBlaise99"},"content":"     * @throws DataIntegrityException if the save file is not in the correct format","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"SkyBlaise99"},"content":"     * @throws IOException if the named file exists but is a directory rather than a regular file,","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"SkyBlaise99"},"content":"     * does not exist but cannot be created, or cannot be opened for any other reason","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"SkyBlaise99"},"content":"    public ArrayList\u003cTask\u003e load() throws DataIntegrityException, IOException {","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"SkyBlaise99"},"content":"        // List of tasks to be returned","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"SkyBlaise99"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"SkyBlaise99"},"content":"        ","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"SkyBlaise99"},"content":"        // Initialize save file and create parent directory","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"SkyBlaise99"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"SkyBlaise99"},"content":"        ","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"SkyBlaise99"},"content":"        // Attempt to create the parent directory and the save file","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"SkyBlaise99"},"content":"        if (file.createNewFile()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"SkyBlaise99"},"content":"            // File is created, exit function as nothing to read","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"SkyBlaise99"},"content":"            return tasks;","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"SkyBlaise99"},"content":"        ","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"SkyBlaise99"},"content":"        // Attempt to load data","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"SkyBlaise99"},"content":"        String input;","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"SkyBlaise99"},"content":"        BufferedReader br \u003d new BufferedReader(new FileReader(filePath));","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"SkyBlaise99"},"content":"        ","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"SkyBlaise99"},"content":"        // Read the rest of data and add to list of tasks","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"SkyBlaise99"},"content":"        while ((input \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"SkyBlaise99"},"content":"            Task newTask;","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"SkyBlaise99"},"content":"            String description, time;","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"SkyBlaise99"},"content":"            int index;","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"SkyBlaise99"},"content":"            ","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"SkyBlaise99"},"content":"            // Obtain relevant info based on type of task","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"SkyBlaise99"},"content":"            switch (input.charAt(1)) {","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"SkyBlaise99"},"content":"            case \u0027T\u0027: // todo, [T][ ] join sports club","lastModifiedDate":"2021-08-21"},{"lineNumber":90,"author":{"gitId":"SkyBlaise99"},"content":"                newTask \u003d new Todo(input.substring(7));","lastModifiedDate":"2021-08-21"},{"lineNumber":91,"author":{"gitId":"SkyBlaise99"},"content":"                break;","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"SkyBlaise99"},"content":"            case \u0027D\u0027: // deadline, [D][ ] return book (by: Jun 6 2021, 5:12 PM)","lastModifiedDate":"2021-08-21"},{"lineNumber":93,"author":{"gitId":"SkyBlaise99"},"content":"                index \u003d input.lastIndexOf(\" (by: \");","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"SkyBlaise99"},"content":"                description \u003d input.substring(7, index);","lastModifiedDate":"2021-08-21"},{"lineNumber":95,"author":{"gitId":"SkyBlaise99"},"content":"                time \u003d input.substring(index + 6, input.length() - 1);","lastModifiedDate":"2021-08-21"},{"lineNumber":96,"author":{"gitId":"SkyBlaise99"},"content":"                ","lastModifiedDate":"2021-08-21"},{"lineNumber":97,"author":{"gitId":"SkyBlaise99"},"content":"                LocalDateTime dateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":98,"author":{"gitId":"SkyBlaise99"},"content":"                ","lastModifiedDate":"2021-08-21"},{"lineNumber":99,"author":{"gitId":"SkyBlaise99"},"content":"                // Throw exception if command does not follow format","lastModifiedDate":"2021-08-21"},{"lineNumber":100,"author":{"gitId":"SkyBlaise99"},"content":"                try {","lastModifiedDate":"2021-08-21"},{"lineNumber":101,"author":{"gitId":"SkyBlaise99"},"content":"                    dateTime \u003d LocalDateTime.parse(time, DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mm a\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":102,"author":{"gitId":"SkyBlaise99"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":103,"author":{"gitId":"SkyBlaise99"},"content":"                    throw new DataIntegrityException();","lastModifiedDate":"2021-08-21"},{"lineNumber":104,"author":{"gitId":"SkyBlaise99"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":105,"author":{"gitId":"SkyBlaise99"},"content":"                ","lastModifiedDate":"2021-08-21"},{"lineNumber":106,"author":{"gitId":"SkyBlaise99"},"content":"                newTask \u003d new Deadline(description, dateTime);","lastModifiedDate":"2021-08-21"},{"lineNumber":107,"author":{"gitId":"SkyBlaise99"},"content":"                break;","lastModifiedDate":"2021-08-21"},{"lineNumber":108,"author":{"gitId":"SkyBlaise99"},"content":"            case \u0027E\u0027: // event, [E][ ] project meeting (at: Aug 6 2021, 2:00 PM - 6:00 PM)","lastModifiedDate":"2021-08-21"},{"lineNumber":109,"author":{"gitId":"SkyBlaise99"},"content":"                index \u003d input.lastIndexOf(\" (at: \");","lastModifiedDate":"2021-08-21"},{"lineNumber":110,"author":{"gitId":"SkyBlaise99"},"content":"                description \u003d input.substring(7, index);","lastModifiedDate":"2021-08-21"},{"lineNumber":111,"author":{"gitId":"SkyBlaise99"},"content":"                time \u003d input.substring(index + 6, input.length() - 1);","lastModifiedDate":"2021-08-21"},{"lineNumber":112,"author":{"gitId":"SkyBlaise99"},"content":"                ","lastModifiedDate":"2021-08-21"},{"lineNumber":113,"author":{"gitId":"SkyBlaise99"},"content":"                String[] info \u003d time.split(\"[,-]\");","lastModifiedDate":"2021-08-21"},{"lineNumber":114,"author":{"gitId":"SkyBlaise99"},"content":"                info \u003d Arrays.stream(info).map(String::trim).toArray(String[]::new);","lastModifiedDate":"2021-08-21"},{"lineNumber":115,"author":{"gitId":"SkyBlaise99"},"content":"                ","lastModifiedDate":"2021-08-21"},{"lineNumber":116,"author":{"gitId":"SkyBlaise99"},"content":"                LocalDate date;","lastModifiedDate":"2021-08-21"},{"lineNumber":117,"author":{"gitId":"SkyBlaise99"},"content":"                LocalTime startTime, endTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":118,"author":{"gitId":"SkyBlaise99"},"content":"                DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"h:mm a\");","lastModifiedDate":"2021-08-21"},{"lineNumber":119,"author":{"gitId":"SkyBlaise99"},"content":"                ","lastModifiedDate":"2021-08-21"},{"lineNumber":120,"author":{"gitId":"SkyBlaise99"},"content":"                // Throw exception if command does not follow format","lastModifiedDate":"2021-08-21"},{"lineNumber":121,"author":{"gitId":"SkyBlaise99"},"content":"                try {","lastModifiedDate":"2021-08-21"},{"lineNumber":122,"author":{"gitId":"SkyBlaise99"},"content":"                    date \u003d LocalDate.parse(info[0], DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":123,"author":{"gitId":"SkyBlaise99"},"content":"                    startTime \u003d LocalTime.parse(info[1], timeFormatter);","lastModifiedDate":"2021-08-21"},{"lineNumber":124,"author":{"gitId":"SkyBlaise99"},"content":"                    endTime \u003d LocalTime.parse(info[2], timeFormatter);","lastModifiedDate":"2021-08-21"},{"lineNumber":125,"author":{"gitId":"SkyBlaise99"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":126,"author":{"gitId":"SkyBlaise99"},"content":"                    throw new DataIntegrityException();","lastModifiedDate":"2021-08-21"},{"lineNumber":127,"author":{"gitId":"SkyBlaise99"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":128,"author":{"gitId":"SkyBlaise99"},"content":"                ","lastModifiedDate":"2021-08-21"},{"lineNumber":129,"author":{"gitId":"SkyBlaise99"},"content":"                newTask \u003d new Event(description, date, startTime, endTime);","lastModifiedDate":"2021-08-21"},{"lineNumber":130,"author":{"gitId":"SkyBlaise99"},"content":"                break;","lastModifiedDate":"2021-08-21"},{"lineNumber":131,"author":{"gitId":"SkyBlaise99"},"content":"            default: // gg someone messed with the save file","lastModifiedDate":"2021-08-21"},{"lineNumber":132,"author":{"gitId":"SkyBlaise99"},"content":"                throw new DataIntegrityException();","lastModifiedDate":"2021-08-21"},{"lineNumber":133,"author":{"gitId":"SkyBlaise99"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":134,"author":{"gitId":"SkyBlaise99"},"content":"            ","lastModifiedDate":"2021-08-21"},{"lineNumber":135,"author":{"gitId":"SkyBlaise99"},"content":"            // Check if task is alr done","lastModifiedDate":"2021-08-21"},{"lineNumber":136,"author":{"gitId":"SkyBlaise99"},"content":"            if (input.charAt(4) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2021-08-21"},{"lineNumber":137,"author":{"gitId":"SkyBlaise99"},"content":"                newTask.markAsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"SkyBlaise99"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":139,"author":{"gitId":"SkyBlaise99"},"content":"            ","lastModifiedDate":"2021-08-21"},{"lineNumber":140,"author":{"gitId":"SkyBlaise99"},"content":"            // Add task to list but do not show a confirmation msg","lastModifiedDate":"2021-08-21"},{"lineNumber":141,"author":{"gitId":"SkyBlaise99"},"content":"            tasks.add(newTask);","lastModifiedDate":"2021-08-21"},{"lineNumber":142,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":143,"author":{"gitId":"SkyBlaise99"},"content":"        ","lastModifiedDate":"2021-08-21"},{"lineNumber":144,"author":{"gitId":"SkyBlaise99"},"content":"        // Close reader","lastModifiedDate":"2021-08-21"},{"lineNumber":145,"author":{"gitId":"SkyBlaise99"},"content":"        br.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":146,"author":{"gitId":"SkyBlaise99"},"content":"        ","lastModifiedDate":"2021-08-21"},{"lineNumber":147,"author":{"gitId":"SkyBlaise99"},"content":"        return tasks;","lastModifiedDate":"2021-08-21"},{"lineNumber":148,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":149,"author":{"gitId":"SkyBlaise99"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"SkyBlaise99":149}},{"path":"src/main/java/duke/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SkyBlaise99"},"content":"package duke.util;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"SkyBlaise99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"SkyBlaise99"},"content":"public class Ui {","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"SkyBlaise99"},"content":"    private final String HORIZONTAL_LINE \u003d \"\\t____________________________________________________________\\n\";","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"SkyBlaise99"},"content":"    private final String MESSAGE_WELCOME \u003d \"Hi! I\u0027m Sora. How can I help you?\";","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"SkyBlaise99"},"content":"    private final String MESSAGE_EXIT \u003d \"Have a nice day! Good bye XD\";","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"SkyBlaise99"},"content":"    ","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"SkyBlaise99"},"content":"    private final Scanner sc;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"SkyBlaise99"},"content":"    ","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"SkyBlaise99"},"content":"     * Constructor for Ui.","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"SkyBlaise99"},"content":"    public Ui() {","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"SkyBlaise99"},"content":"        // Initialize scanner and print welcome message","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"SkyBlaise99"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"SkyBlaise99"},"content":"        printMessage(MESSAGE_WELCOME);","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"SkyBlaise99"},"content":"    ","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"SkyBlaise99"},"content":"     * Reads a line of command input by the user with leading and trailing space removed.","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"SkyBlaise99"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"SkyBlaise99"},"content":"     * @return command input by user","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"SkyBlaise99"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"SkyBlaise99"},"content":"        return sc.nextLine().trim();","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"SkyBlaise99"},"content":"    ","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"SkyBlaise99"},"content":"     * Prints a horizontal line, followed by the message on a newline, then another horizontal line on a newline. Each","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"SkyBlaise99"},"content":"     * newline will be prepended with a tab.","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"SkyBlaise99"},"content":"     * \u003cp\u003e\u003c/p\u003e","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"SkyBlaise99"},"content":"     * It looks like the following:","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"SkyBlaise99"},"content":"     * \u003cbr\u003e","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"SkyBlaise99"},"content":"     * -----------","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"SkyBlaise99"},"content":"     * \u003cbr\u003e","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"SkyBlaise99"},"content":"     * message","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"SkyBlaise99"},"content":"     * \u003cbr\u003e","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"SkyBlaise99"},"content":"     * -----------","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"SkyBlaise99"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"SkyBlaise99"},"content":"     * @param msg message to be displayed","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"SkyBlaise99"},"content":"    public void printMessage(String msg) {","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"SkyBlaise99"},"content":"        String format \u003d HORIZONTAL_LINE +","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"SkyBlaise99"},"content":"                \"\\t%s\\n\" +","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"SkyBlaise99"},"content":"                HORIZONTAL_LINE;","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"SkyBlaise99"},"content":"        System.out.printf(format, msg.replaceAll(\"\\n\", \"\\n\\t\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"SkyBlaise99"},"content":"    ","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"SkyBlaise99"},"content":"     * Close the scanner and print exit message.","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"SkyBlaise99"},"content":"    public void exit() {","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"SkyBlaise99"},"content":"        sc.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"SkyBlaise99"},"content":"        printMessage(MESSAGE_EXIT);","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"SkyBlaise99"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"SkyBlaise99":58}},{"path":"src/test/java/duke/exception/DataIntegrityExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SkyBlaise99"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"SkyBlaise99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"SkyBlaise99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"SkyBlaise99"},"content":"public class DataIntegrityExceptionTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"SkyBlaise99"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"SkyBlaise99"},"content":"    public void constructor_success() {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"SkyBlaise99"},"content":"        assertEquals(\"Storage file integrity compromised :(\",","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"SkyBlaise99"},"content":"                new DataIntegrityException().getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"SkyBlaise99"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"SkyBlaise99":13}},{"path":"src/test/java/duke/exception/DukeExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SkyBlaise99"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"SkyBlaise99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"SkyBlaise99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"SkyBlaise99"},"content":"class DukeExceptionTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"SkyBlaise99"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"SkyBlaise99"},"content":"    public void constructor_success() {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"SkyBlaise99"},"content":"        assertEquals(\"test message\", new DukeException(\"test message\").getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"SkyBlaise99"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"SkyBlaise99":12}},{"path":"src/test/java/duke/exception/EmptyListExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SkyBlaise99"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"SkyBlaise99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"SkyBlaise99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"SkyBlaise99"},"content":"class EmptyListExceptionTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"SkyBlaise99"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"SkyBlaise99"},"content":"    public void constructor_success() {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"SkyBlaise99"},"content":"        assertEquals(\"Your list is empty! Maybe add some tasks into it?\",","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"SkyBlaise99"},"content":"                new EmptyListException().getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"SkyBlaise99"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"SkyBlaise99":13}},{"path":"src/test/java/duke/exception/IllegalFormatExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SkyBlaise99"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"SkyBlaise99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"SkyBlaise99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"SkyBlaise99"},"content":"class IllegalFormatExceptionTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"SkyBlaise99"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"SkyBlaise99"},"content":"    public void constructor_success() {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"SkyBlaise99"},"content":"        assertEquals(\"Please follow this format:\\n  test format\",","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"SkyBlaise99"},"content":"                new IllegalFormatException(\"test format\").getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"SkyBlaise99"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"SkyBlaise99":13}},{"path":"src/test/java/duke/exception/TaskNotFoundExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SkyBlaise99"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"SkyBlaise99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"SkyBlaise99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"SkyBlaise99"},"content":"class TaskNotFoundExceptionTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"SkyBlaise99"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"SkyBlaise99"},"content":"    public void constructor_success() {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"SkyBlaise99"},"content":"        assertEquals(\"There is no such tasks with this task number!\",","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"SkyBlaise99"},"content":"                new TaskNotFoundException().getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"SkyBlaise99"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"SkyBlaise99":13}},{"path":"src/test/java/duke/exception/UnknownCommandExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SkyBlaise99"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"SkyBlaise99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"SkyBlaise99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"SkyBlaise99"},"content":"class UnknownCommandExceptionTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"SkyBlaise99"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"SkyBlaise99"},"content":"    public void constructor_success() {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"SkyBlaise99"},"content":"        assertEquals(\"Sorry but my database does not have such command.\",","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"SkyBlaise99"},"content":"                new UnknownCommandException().getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"SkyBlaise99"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"SkyBlaise99":13}},{"path":"text-ui-test/data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"SkyBlaise99"},"content":"[T][X] read book","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"SkyBlaise99"},"content":"[D][ ] return book (by: Jun 6 2021, 5:12 PM)","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"SkyBlaise99"},"content":"[E][ ] project meeting (at: Aug 6 2021, 2:00 PM - 6:00 PM)","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"SkyBlaise99":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"SkyBlaise99"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"SkyBlaise99"},"content":"delete 2","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"SkyBlaise99"},"content":"delete 3","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"SkyBlaise99"},"content":"delete 2","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"SkyBlaise99"},"content":"delete 0","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"SkyBlaise99"},"content":"delete 1000","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"SkyBlaise99"},"content":"delete abc","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"SkyBlaise99"},"content":"delete","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"SkyBlaise99"},"content":"deletea1","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"SkyBlaise99"},"content":"delete 1","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"SkyBlaise99"},"content":"del","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"SkyBlaise99"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"SkyBlaise99"},"content":"todo read book","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"SkyBlaise99"},"content":"todo","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"SkyBlaise99"},"content":"list","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"SkyBlaise99"},"content":"deadline return book /by 06/06/21 1712","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"SkyBlaise99"},"content":"deadline fail /by 06/06/21 512 PM","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"SkyBlaise99"},"content":"deadline pass /by 06/06/21 512","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"SkyBlaise99"},"content":"deadline fail /by 06/06/21","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"SkyBlaise99"},"content":"deadline pass /by 6/6/21 1712","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"SkyBlaise99"},"content":"deadline fail /by 6-6-21 1712","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"SkyBlaise99"},"content":"deadline fail /by 1712","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"SkyBlaise99"},"content":"deadline fail /by now","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"SkyBlaise99"},"content":"deadline fail /byy 06/06/21 1712","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"SkyBlaise99"},"content":"deadline fail","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"SkyBlaise99"},"content":"deadline","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"SkyBlaise99"},"content":"dead","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"SkyBlaise99"},"content":"delete 3","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"SkyBlaise99"},"content":"delete 3","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"SkyBlaise99"},"content":"list","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"SkyBlaise99"},"content":"event project meeting /at 06/08/21 /from 1400 /to 1800","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"SkyBlaise99"},"content":"event fail /at 06/08/21 /from 1400 /to 600 PM","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"SkyBlaise99"},"content":"event fail /at 06/08/21 /from 1400 /to 600","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"SkyBlaise99"},"content":"event fail /at 06/08/21 /from 1400 /to","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"SkyBlaise99"},"content":"event fail /at 06/08/21 /from 1400 /t 1800","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"SkyBlaise99"},"content":"event fail /at 06/08/21 /from 1400 1800","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"SkyBlaise99"},"content":"event fail /at 06/08/21 /from 200 PM /to 1800","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"SkyBlaise99"},"content":"event pass /at 06/08/21 /from 200 /to 1800","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"SkyBlaise99"},"content":"event fail /at 06/08/21 /froma 1400 /to 1800","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"SkyBlaise99"},"content":"event fail /at 06/08/21 1400 /to 1800","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"SkyBlaise99"},"content":"event pass /at 6/8/21 /from 1400 /to 1800","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"SkyBlaise99"},"content":"event fail /at 06-08-21 /from 1400 /to 1800","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"SkyBlaise99"},"content":"event fail /att 06/08/21 /from 1400 /to 1800","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"SkyBlaise99"},"content":"event fail 06/08/21 /from 1400 /to 1800","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"SkyBlaise99"},"content":"event fail","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"SkyBlaise99"},"content":"event","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"SkyBlaise99"},"content":"eve","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"SkyBlaise99"},"content":"delete 4","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"SkyBlaise99"},"content":"delete 4","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"SkyBlaise99"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":51,"author":{"gitId":"SkyBlaise99"},"content":"done 1","lastModifiedDate":"2021-08-14"},{"lineNumber":52,"author":{"gitId":"SkyBlaise99"},"content":"done 0","lastModifiedDate":"2021-08-14"},{"lineNumber":53,"author":{"gitId":"SkyBlaise99"},"content":"done 4","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"SkyBlaise99"},"content":"done 1000","lastModifiedDate":"2021-08-14"},{"lineNumber":55,"author":{"gitId":"SkyBlaise99"},"content":"done abc","lastModifiedDate":"2021-08-14"},{"lineNumber":56,"author":{"gitId":"SkyBlaise99"},"content":"done","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"SkyBlaise99"},"content":"donea2","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"SkyBlaise99"},"content":"don","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"SkyBlaise99"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":60,"author":{"gitId":"SkyBlaise99"},"content":"blah","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"SkyBlaise99"},"content":"bye","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"SkyBlaise99":61}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"SkyBlaise99"},"content":"REM obtain all .java files in relative path","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"SkyBlaise99"},"content":"dir ..\\src\\main\\java\\duke /s /b /a-d \u003e sources_raw.txt","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"SkyBlaise99"},"content":"(for /f \"tokens\u003d1,2 delims\u003d \" %%G in (sources_raw.txt) do (","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"SkyBlaise99"},"content":"    set \"line\u003d%%H\"","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"SkyBlaise99"},"content":"    setlocal enabledelayedexpansion","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"SkyBlaise99"},"content":"    set \"line\u003d!line:IDEA\\IdeaProjects\\ip\u003d..!\"","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"SkyBlaise99"},"content":"    echo(!line!","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"SkyBlaise99"},"content":"    endlocal","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"SkyBlaise99"},"content":")) \u003e sources_modified.txt","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"SkyBlaise99"},"content":"javac -cp ..\\src\\main\\java\\duke -Xlint:none -d ..\\bin @sources_modified.txt","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"SkyBlaise99"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"SkyBlaise99":14,"-":19}},{"path":"text-ui-test/sources_modified.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"SkyBlaise99"},"content":"..\\src\\main\\java\\duke\\Duke.java","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"SkyBlaise99"},"content":"..\\src\\main\\java\\duke\\exception\\DataIntegrityException.java","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"SkyBlaise99"},"content":"..\\src\\main\\java\\duke\\exception\\DukeException.java","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"SkyBlaise99"},"content":"..\\src\\main\\java\\duke\\exception\\EmptyListException.java","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"SkyBlaise99"},"content":"..\\src\\main\\java\\duke\\exception\\IllegalFormatException.java","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"SkyBlaise99"},"content":"..\\src\\main\\java\\duke\\exception\\TaskNotFoundException.java","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"SkyBlaise99"},"content":"..\\src\\main\\java\\duke\\exception\\UnknownCommandException.java","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"SkyBlaise99"},"content":"..\\src\\main\\java\\duke\\task\\Deadline.java","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"SkyBlaise99"},"content":"..\\src\\main\\java\\duke\\task\\Event.java","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"SkyBlaise99"},"content":"..\\src\\main\\java\\duke\\task\\Task.java","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"SkyBlaise99"},"content":"..\\src\\main\\java\\duke\\task\\TaskList.java","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"SkyBlaise99"},"content":"..\\src\\main\\java\\duke\\task\\Todo.java","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"SkyBlaise99"},"content":"..\\src\\main\\java\\duke\\util\\CheckedFunction.java","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"SkyBlaise99"},"content":"..\\src\\main\\java\\duke\\util\\Parser.java","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"SkyBlaise99"},"content":"..\\src\\main\\java\\duke\\util\\Storage.java","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"SkyBlaise99"},"content":"..\\src\\main\\java\\duke\\util\\Ui.java","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"SkyBlaise99":16}},{"path":"text-ui-test/sources_raw.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"SkyBlaise99"},"content":"D:\\Downloads\\IntelliJ IDEA\\IdeaProjects\\ip\\src\\main\\java\\duke\\Duke.java","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"SkyBlaise99"},"content":"D:\\Downloads\\IntelliJ IDEA\\IdeaProjects\\ip\\src\\main\\java\\duke\\exception\\DataIntegrityException.java","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"SkyBlaise99"},"content":"D:\\Downloads\\IntelliJ IDEA\\IdeaProjects\\ip\\src\\main\\java\\duke\\exception\\DukeException.java","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"SkyBlaise99"},"content":"D:\\Downloads\\IntelliJ IDEA\\IdeaProjects\\ip\\src\\main\\java\\duke\\exception\\EmptyListException.java","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"SkyBlaise99"},"content":"D:\\Downloads\\IntelliJ IDEA\\IdeaProjects\\ip\\src\\main\\java\\duke\\exception\\IllegalFormatException.java","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"SkyBlaise99"},"content":"D:\\Downloads\\IntelliJ IDEA\\IdeaProjects\\ip\\src\\main\\java\\duke\\exception\\TaskNotFoundException.java","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"SkyBlaise99"},"content":"D:\\Downloads\\IntelliJ IDEA\\IdeaProjects\\ip\\src\\main\\java\\duke\\exception\\UnknownCommandException.java","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"SkyBlaise99"},"content":"D:\\Downloads\\IntelliJ IDEA\\IdeaProjects\\ip\\src\\main\\java\\duke\\task\\Deadline.java","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"SkyBlaise99"},"content":"D:\\Downloads\\IntelliJ IDEA\\IdeaProjects\\ip\\src\\main\\java\\duke\\task\\Event.java","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"SkyBlaise99"},"content":"D:\\Downloads\\IntelliJ IDEA\\IdeaProjects\\ip\\src\\main\\java\\duke\\task\\Task.java","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"SkyBlaise99"},"content":"D:\\Downloads\\IntelliJ IDEA\\IdeaProjects\\ip\\src\\main\\java\\duke\\task\\TaskList.java","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"SkyBlaise99"},"content":"D:\\Downloads\\IntelliJ IDEA\\IdeaProjects\\ip\\src\\main\\java\\duke\\task\\Todo.java","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"SkyBlaise99"},"content":"D:\\Downloads\\IntelliJ IDEA\\IdeaProjects\\ip\\src\\main\\java\\duke\\util\\CheckedFunction.java","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"SkyBlaise99"},"content":"D:\\Downloads\\IntelliJ IDEA\\IdeaProjects\\ip\\src\\main\\java\\duke\\util\\Parser.java","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"SkyBlaise99"},"content":"D:\\Downloads\\IntelliJ IDEA\\IdeaProjects\\ip\\src\\main\\java\\duke\\util\\Storage.java","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"SkyBlaise99"},"content":"D:\\Downloads\\IntelliJ IDEA\\IdeaProjects\\ip\\src\\main\\java\\duke\\util\\Ui.java","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"SkyBlaise99":16}}]
