[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"sharmainec"},"content":"# tokio.Duke project template","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"sharmainec"},"content":"3. After that, locate the `src/main/java/tokio.Duke.java` file, right-click it, and choose `Run tokio.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"sharmainec":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"sharmainec"},"content":"    implementation \u0027junit:junit:4.13.1\u0027","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"sharmainec"},"content":"    implementation \u0027junit:junit:4.13.1\u0027","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"sharmainec"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.7.0\u0027","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"sharmainec"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"sharmainec"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"sharmainec"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"sharmainec"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"sharmainec"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"sharmainec"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"sharmainec"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"sharmainec"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"sharmainec"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"sharmainec"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"sharmainec"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"sharmainec"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"sharmainec"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"sharmainec"},"content":"    mainClassName \u003d \"tokio.Launcher\"","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"sharmainec":18,"-":43}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sharmainec"},"content":"[T][X] task 1","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"sharmainec"},"content":"[E][X] event 1 (at: Sep 18 2021 10:00)","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"sharmainec"},"content":"[T][ ] task 2","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"sharmainec":3}},{"path":"src/main/java/tokio/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharmainec"},"content":"package tokio;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"sharmainec"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"sharmainec"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"sharmainec"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"sharmainec"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"sharmainec"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"sharmainec"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"sharmainec"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"sharmainec"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"sharmainec"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"sharmainec"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"sharmainec"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"sharmainec"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"sharmainec"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"sharmainec"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"sharmainec"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"sharmainec"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"sharmainec"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"sharmainec"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"sharmainec"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"sharmainec"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"sharmainec"},"content":"    @FXML","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"sharmainec"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"sharmainec"},"content":"    @FXML","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"sharmainec"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"sharmainec"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"sharmainec"},"content":"        try {","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"sharmainec"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"sharmainec"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"sharmainec"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"sharmainec"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"sharmainec"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"sharmainec"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"sharmainec"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"sharmainec"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"sharmainec"},"content":"        dialog.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"sharmainec"},"content":"        displayPicture.setClip(new Circle(50, 50, 50));","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"sharmainec"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"sharmainec"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"sharmainec"},"content":"    private void flip() {","lastModifiedDate":"2021-09-03"},{"lineNumber":50,"author":{"gitId":"sharmainec"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-03"},{"lineNumber":51,"author":{"gitId":"sharmainec"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"sharmainec"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"sharmainec"},"content":"        setAlignment(Pos.CENTER_LEFT);","lastModifiedDate":"2021-09-12"},{"lineNumber":54,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":55,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":56,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"sharmainec"},"content":"     * Initialise a new dialog box for user input.","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"sharmainec"},"content":"     * @param text User input.","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"sharmainec"},"content":"     * @param img User image.","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"sharmainec"},"content":"     * @return Dialog box with user text and image.","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"sharmainec"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-03"},{"lineNumber":64,"author":{"gitId":"sharmainec"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-03"},{"lineNumber":65,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":66,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":67,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"sharmainec"},"content":"     * Initialise a new dialog box for duke text.","lastModifiedDate":"2021-09-05"},{"lineNumber":69,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":70,"author":{"gitId":"sharmainec"},"content":"     * @param text Duke text.","lastModifiedDate":"2021-09-05"},{"lineNumber":71,"author":{"gitId":"sharmainec"},"content":"     * @param img Duke image.","lastModifiedDate":"2021-09-05"},{"lineNumber":72,"author":{"gitId":"sharmainec"},"content":"     * @return Flipped dialog box with duke text and image.","lastModifiedDate":"2021-09-05"},{"lineNumber":73,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":74,"author":{"gitId":"sharmainec"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-03"},{"lineNumber":75,"author":{"gitId":"sharmainec"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-03"},{"lineNumber":76,"author":{"gitId":"sharmainec"},"content":"        db.flip();","lastModifiedDate":"2021-09-03"},{"lineNumber":77,"author":{"gitId":"sharmainec"},"content":"        db.dialog.setStyle(\"-fx-background-radius: 12; -fx-label-padding: 10; -fx-background-color: #303034\");","lastModifiedDate":"2021-09-05"},{"lineNumber":78,"author":{"gitId":"sharmainec"},"content":"        return db;","lastModifiedDate":"2021-09-03"},{"lineNumber":79,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":80,"author":{"gitId":"sharmainec"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"sharmainec":80}},{"path":"src/main/java/tokio/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharmainec"},"content":"package tokio;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"sharmainec"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"sharmainec"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"sharmainec"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"sharmainec"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"sharmainec"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"sharmainec"},"content":"import javafx.util.Duration;","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"sharmainec"},"content":"import tokio.commands.Command;","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"sharmainec"},"content":"import tokio.exceptions.DukeException;","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"sharmainec"},"content":"import tokio.parser.Parser;","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"sharmainec"},"content":"import tokio.storage.Storage;","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"sharmainec"},"content":"import tokio.tasks.TaskList;","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"sharmainec"},"content":"import tokio.ui.Ui;","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"sharmainec"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"sharmainec"},"content":" * A chatbot that manages user input tasks.","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"sharmainec"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"sharmainec"},"content":"public class Duke {","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"sharmainec"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"sharmainec"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"sharmainec"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"sharmainec"},"content":"    private String path \u003d \"data/tasks.txt\";","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"sharmainec"},"content":"     * Creates a Duke, initialise Ui, Storage and TaskList.","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"sharmainec"},"content":"     * @param path File path of storage.","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"sharmainec"},"content":"     * @throws IOException If file cannot be loaded.","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"sharmainec"},"content":"     * @throws DukeException If user input is unknown.","lastModifiedDate":"2021-09-12"},{"lineNumber":32,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"sharmainec"},"content":"    public Duke() throws IOException, DukeException {","lastModifiedDate":"2021-09-12"},{"lineNumber":34,"author":{"gitId":"sharmainec"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"sharmainec"},"content":"        storage \u003d new Storage(path);","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"sharmainec"},"content":"        try {","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"sharmainec"},"content":"            tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"sharmainec"},"content":"        } catch (FileNotFoundException | DukeException | ParseException e) {","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"sharmainec"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"sharmainec"},"content":"            throw new DukeException(\"Oh no, there seems to be a problem...\");","lastModifiedDate":"2021-09-12"},{"lineNumber":41,"author":{"gitId":"sharmainec"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"sharmainec"},"content":"     * Creates a Duke, initialise Ui, Storage and TaskList.","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"sharmainec"},"content":"     * @param filePath File path of storage.","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"sharmainec"},"content":"     * @throws IOException If file cannot be loaded.","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"sharmainec"},"content":"     * @throws DukeException If user input is unknown.","lastModifiedDate":"2021-09-12"},{"lineNumber":50,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":51,"author":{"gitId":"sharmainec"},"content":"    public Duke(String filePath) throws IOException, DukeException {","lastModifiedDate":"2021-09-12"},{"lineNumber":52,"author":{"gitId":"sharmainec"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"sharmainec"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-09-03"},{"lineNumber":54,"author":{"gitId":"sharmainec"},"content":"        try {","lastModifiedDate":"2021-09-03"},{"lineNumber":55,"author":{"gitId":"sharmainec"},"content":"            tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2021-09-03"},{"lineNumber":56,"author":{"gitId":"sharmainec"},"content":"        } catch (FileNotFoundException | DukeException | ParseException e) {","lastModifiedDate":"2021-09-03"},{"lineNumber":57,"author":{"gitId":"sharmainec"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-09-03"},{"lineNumber":58,"author":{"gitId":"sharmainec"},"content":"            throw new DukeException(\"Oh no, there seems to be a problem...\");","lastModifiedDate":"2021-09-12"},{"lineNumber":59,"author":{"gitId":"sharmainec"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":60,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":61,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":62,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":63,"author":{"gitId":"sharmainec"},"content":"     * Starts duke.","lastModifiedDate":"2021-09-03"},{"lineNumber":64,"author":{"gitId":"sharmainec"},"content":"     * ","lastModifiedDate":"2021-09-12"},{"lineNumber":65,"author":{"gitId":"sharmainec"},"content":"     * @throws DukeException If user input is unknown.","lastModifiedDate":"2021-09-12"},{"lineNumber":66,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":67,"author":{"gitId":"sharmainec"},"content":"    public void run() throws DukeException {","lastModifiedDate":"2021-09-12"},{"lineNumber":68,"author":{"gitId":"sharmainec"},"content":"        ui.printWelcome();","lastModifiedDate":"2021-09-03"},{"lineNumber":69,"author":{"gitId":"sharmainec"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-09-03"},{"lineNumber":70,"author":{"gitId":"sharmainec"},"content":"        while (!isExit) {","lastModifiedDate":"2021-09-03"},{"lineNumber":71,"author":{"gitId":"sharmainec"},"content":"            try {","lastModifiedDate":"2021-09-03"},{"lineNumber":72,"author":{"gitId":"sharmainec"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-09-03"},{"lineNumber":73,"author":{"gitId":"sharmainec"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-09-03"},{"lineNumber":74,"author":{"gitId":"sharmainec"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2021-09-03"},{"lineNumber":75,"author":{"gitId":"sharmainec"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-09-03"},{"lineNumber":76,"author":{"gitId":"sharmainec"},"content":"            } catch (DukeException | IOException e) {","lastModifiedDate":"2021-09-03"},{"lineNumber":77,"author":{"gitId":"sharmainec"},"content":"                throw new DukeException(\"Oh no, there was a problem loading this file...\");","lastModifiedDate":"2021-09-12"},{"lineNumber":78,"author":{"gitId":"sharmainec"},"content":"            }","lastModifiedDate":"2021-09-03"},{"lineNumber":79,"author":{"gitId":"sharmainec"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":80,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":81,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":82,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":83,"author":{"gitId":"sharmainec"},"content":"     * Main function for Duke.","lastModifiedDate":"2021-09-05"},{"lineNumber":84,"author":{"gitId":"sharmainec"},"content":"     * ","lastModifiedDate":"2021-09-12"},{"lineNumber":85,"author":{"gitId":"sharmainec"},"content":"     * @throws IOException If file cannot be loaded.","lastModifiedDate":"2021-09-12"},{"lineNumber":86,"author":{"gitId":"sharmainec"},"content":"     * @throws DukeException If user input is unknown.","lastModifiedDate":"2021-09-12"},{"lineNumber":87,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":88,"author":{"gitId":"sharmainec"},"content":"    public static void main(String[] args) throws IOException, DukeException {","lastModifiedDate":"2021-09-12"},{"lineNumber":89,"author":{"gitId":"sharmainec"},"content":"        Duke duke \u003d new Duke(\"data/tasks.txt\");","lastModifiedDate":"2021-09-03"},{"lineNumber":90,"author":{"gitId":"sharmainec"},"content":"        duke.run();","lastModifiedDate":"2021-09-03"},{"lineNumber":91,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":92,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":93,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":94,"author":{"gitId":"sharmainec"},"content":"     * To generate a response to user input.","lastModifiedDate":"2021-09-12"},{"lineNumber":95,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":96,"author":{"gitId":"sharmainec"},"content":"     * @param input User input in string.","lastModifiedDate":"2021-09-12"},{"lineNumber":97,"author":{"gitId":"sharmainec"},"content":"     * @return Tokio\u0027s output to user input.","lastModifiedDate":"2021-09-12"},{"lineNumber":98,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":99,"author":{"gitId":"sharmainec"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-03"},{"lineNumber":100,"author":{"gitId":"sharmainec"},"content":"        try {","lastModifiedDate":"2021-09-03"},{"lineNumber":101,"author":{"gitId":"sharmainec"},"content":"            Command command \u003d Parser.parse(input.trim());","lastModifiedDate":"2021-09-08"},{"lineNumber":102,"author":{"gitId":"sharmainec"},"content":"            if (command.isExit()) {","lastModifiedDate":"2021-09-03"},{"lineNumber":103,"author":{"gitId":"sharmainec"},"content":"                ui.printBye();","lastModifiedDate":"2021-09-03"},{"lineNumber":104,"author":{"gitId":"sharmainec"},"content":"                PauseTransition delay \u003d new PauseTransition(Duration.seconds(2));","lastModifiedDate":"2021-09-03"},{"lineNumber":105,"author":{"gitId":"sharmainec"},"content":"                delay.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2021-09-03"},{"lineNumber":106,"author":{"gitId":"sharmainec"},"content":"                delay.play();","lastModifiedDate":"2021-09-03"},{"lineNumber":107,"author":{"gitId":"sharmainec"},"content":"            }","lastModifiedDate":"2021-09-03"},{"lineNumber":108,"author":{"gitId":"sharmainec"},"content":"            return command.execute(tasks, ui, storage);","lastModifiedDate":"2021-09-03"},{"lineNumber":109,"author":{"gitId":"sharmainec"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2021-09-03"},{"lineNumber":110,"author":{"gitId":"sharmainec"},"content":"            return e.getMessage();","lastModifiedDate":"2021-09-03"},{"lineNumber":111,"author":{"gitId":"sharmainec"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":112,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":113,"author":{"gitId":"sharmainec"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"sharmainec":113}},{"path":"src/main/java/tokio/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharmainec"},"content":"package tokio;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"sharmainec"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"sharmainec"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"sharmainec"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"sharmainec"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"sharmainec"},"content":"public class Launcher {","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"sharmainec"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"sharmainec"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"sharmainec"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"sharmainec":12}},{"path":"src/main/java/tokio/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharmainec"},"content":"package tokio;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"sharmainec"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"sharmainec"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"sharmainec"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"sharmainec"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"sharmainec"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"sharmainec"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"sharmainec"},"content":"import tokio.exceptions.DukeException;","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"sharmainec"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"sharmainec"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"sharmainec"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"sharmainec"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"sharmainec"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"sharmainec"},"content":"    public Main() throws IOException, DukeException {","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"sharmainec"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"sharmainec"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"sharmainec"},"content":"        try {","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"sharmainec"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"sharmainec"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"sharmainec"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"sharmainec"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"sharmainec"},"content":"            stage.setTitle(\"Mi Amor, Tokio\");","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"sharmainec"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"sharmainec"},"content":"            stage.show();","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"sharmainec"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"sharmainec"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"sharmainec"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"sharmainec"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"sharmainec":35}},{"path":"src/main/java/tokio/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharmainec"},"content":"package tokio;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"sharmainec"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"sharmainec"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"sharmainec"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"sharmainec"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"sharmainec"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"sharmainec"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"sharmainec"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"sharmainec"},"content":"import tokio.ui.Ui;","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"sharmainec"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"sharmainec"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"sharmainec"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"sharmainec"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"sharmainec"},"content":"    @FXML","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"sharmainec"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"sharmainec"},"content":"    @FXML","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"sharmainec"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"sharmainec"},"content":"    @FXML","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"sharmainec"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"sharmainec"},"content":"    @FXML","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"sharmainec"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"sharmainec"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"sharmainec"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"sharmainec"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.png\"));","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"sharmainec"},"content":"     * Initializes main window with welcome message.","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"sharmainec"},"content":"    @FXML","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"sharmainec"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"sharmainec"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"sharmainec"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"sharmainec"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"sharmainec"},"content":"                DialogBox.getDukeDialog(ui.printWelcome(), dukeImage)","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"sharmainec"},"content":"        );","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"sharmainec"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"sharmainec"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"sharmainec"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"sharmainec"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":50,"author":{"gitId":"sharmainec"},"content":"    @FXML","lastModifiedDate":"2021-09-03"},{"lineNumber":51,"author":{"gitId":"sharmainec"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"sharmainec"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"sharmainec"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-03"},{"lineNumber":54,"author":{"gitId":"sharmainec"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-03"},{"lineNumber":55,"author":{"gitId":"sharmainec"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-03"},{"lineNumber":56,"author":{"gitId":"sharmainec"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-03"},{"lineNumber":57,"author":{"gitId":"sharmainec"},"content":"        );","lastModifiedDate":"2021-09-03"},{"lineNumber":58,"author":{"gitId":"sharmainec"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-03"},{"lineNumber":59,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":60,"author":{"gitId":"sharmainec"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"sharmainec":60}},{"path":"src/main/java/tokio/commands/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharmainec"},"content":"package tokio.commands;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"sharmainec"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"sharmainec"},"content":"import tokio.exceptions.DukeException;","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"sharmainec"},"content":"import tokio.storage.Storage;","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"sharmainec"},"content":"import tokio.tasks.Deadlines;","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"sharmainec"},"content":"import tokio.tasks.TaskList;","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"sharmainec"},"content":"import tokio.ui.Ui;","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"sharmainec"},"content":"/**","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"sharmainec"},"content":" * Add deadline task into task list and storage file.","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"sharmainec"},"content":" */","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"sharmainec"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"sharmainec"},"content":"    protected String description;","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":18,"author":{"gitId":"sharmainec"},"content":"     * Constructor for AddDeadlineCommand.","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":20,"author":{"gitId":"sharmainec"},"content":"     * @param description Name and date of deadline task.","lastModifiedDate":"2021-09-12"},{"lineNumber":21,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"sharmainec"},"content":"    public AddDeadlineCommand(String description) {","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"sharmainec"},"content":"        this.description \u003d description.trim();","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":27,"author":{"gitId":"sharmainec"},"content":"     * Executes the adding of deadline task in the task list and storage file.","lastModifiedDate":"2021-09-12"},{"lineNumber":28,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":29,"author":{"gitId":"sharmainec"},"content":"     * @param tasks Existing tasks in the task list.","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"sharmainec"},"content":"     * @param ui User input format.","lastModifiedDate":"2021-09-12"},{"lineNumber":31,"author":{"gitId":"sharmainec"},"content":"     * @param storage Stores created command into the txt file","lastModifiedDate":"2021-09-12"},{"lineNumber":32,"author":{"gitId":"sharmainec"},"content":"     * @return String message for Tokio\u0027s reply.","lastModifiedDate":"2021-09-12"},{"lineNumber":33,"author":{"gitId":"sharmainec"},"content":"     * @throws IOException If task cannot be written to the storage file.","lastModifiedDate":"2021-09-12"},{"lineNumber":34,"author":{"gitId":"sharmainec"},"content":"     * @throws DukeException If date or command is in the wrong format or if task already exists.","lastModifiedDate":"2021-09-12"},{"lineNumber":35,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":36,"author":{"gitId":"sharmainec"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"sharmainec"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws IOException, DukeException {","lastModifiedDate":"2021-09-12"},{"lineNumber":38,"author":{"gitId":"sharmainec"},"content":"        String[] descDateArray \u003d description.split(\"/by \");","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"sharmainec"},"content":"        if (descDateArray.length \u003c 2) {","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"sharmainec"},"content":"            throw new DukeException(\"Something is missing from this deadline!\\n\" + \"Rio, please follow this format:\\n\"","lastModifiedDate":"2021-09-12"},{"lineNumber":41,"author":{"gitId":"sharmainec"},"content":"                + \"deadline {name} /by {yyyy-MM-dd}\");","lastModifiedDate":"2021-09-12"},{"lineNumber":42,"author":{"gitId":"sharmainec"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"sharmainec"},"content":"        String deadlineDesc \u003d descDateArray[0].trim();","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"sharmainec"},"content":"        String deadlineDate \u003d descDateArray[1].trim();","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"sharmainec"},"content":"        Deadlines addDeadline \u003d new Deadlines(deadlineDesc, deadlineDate);","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"sharmainec"},"content":"        if (!tasks.addTask(addDeadline)) {","lastModifiedDate":"2021-09-12"},{"lineNumber":47,"author":{"gitId":"sharmainec"},"content":"            throw new DukeException(\"Oops Rio, this deadline task already exists!\\n\");","lastModifiedDate":"2021-09-12"},{"lineNumber":48,"author":{"gitId":"sharmainec"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":49,"author":{"gitId":"sharmainec"},"content":"        storage.writeTask(addDeadline);","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"sharmainec"},"content":"        return ui.printAddCommand(addDeadline, tasks);","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":54,"author":{"gitId":"sharmainec"},"content":"     * Indicates that add deadline command is non-terminating.","lastModifiedDate":"2021-09-12"},{"lineNumber":55,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":56,"author":{"gitId":"sharmainec"},"content":"     * @return False.","lastModifiedDate":"2021-09-12"},{"lineNumber":57,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":58,"author":{"gitId":"sharmainec"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"sharmainec"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"sharmainec"},"content":"        return false;","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"sharmainec"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"sharmainec":62}},{"path":"src/main/java/tokio/commands/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharmainec"},"content":"package tokio.commands;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"sharmainec"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"sharmainec"},"content":"import tokio.exceptions.DukeException;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"sharmainec"},"content":"import tokio.storage.Storage;","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"sharmainec"},"content":"import tokio.tasks.Events;","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"sharmainec"},"content":"import tokio.tasks.TaskList;","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"sharmainec"},"content":"import tokio.ui.Ui;","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"sharmainec"},"content":"/**","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"sharmainec"},"content":" * Add event to task list and storage file.","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"sharmainec"},"content":" */","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"sharmainec"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"sharmainec"},"content":"    protected String description;","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":18,"author":{"gitId":"sharmainec"},"content":"     * Constructor for AddEventCommand.","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":20,"author":{"gitId":"sharmainec"},"content":"     * @param description Name, date and time of event task.","lastModifiedDate":"2021-09-12"},{"lineNumber":21,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"sharmainec"},"content":"    public AddEventCommand(String description) {","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"sharmainec"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":27,"author":{"gitId":"sharmainec"},"content":"     * Executes the adding of event task in the task list and storage file.","lastModifiedDate":"2021-09-12"},{"lineNumber":28,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":29,"author":{"gitId":"sharmainec"},"content":"     * @param tasks Existing tasks in the task list.","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"sharmainec"},"content":"     * @param ui User input format.","lastModifiedDate":"2021-09-12"},{"lineNumber":31,"author":{"gitId":"sharmainec"},"content":"     * @param storage Stores created command into the txt file","lastModifiedDate":"2021-09-12"},{"lineNumber":32,"author":{"gitId":"sharmainec"},"content":"     * @return String message for Tokio\u0027s reply.","lastModifiedDate":"2021-09-12"},{"lineNumber":33,"author":{"gitId":"sharmainec"},"content":"     * @throws IOException If task cannot be written to the storage file.","lastModifiedDate":"2021-09-12"},{"lineNumber":34,"author":{"gitId":"sharmainec"},"content":"     * @throws DukeException If task\u0027s date or time format is wrong or if task already exists.","lastModifiedDate":"2021-09-12"},{"lineNumber":35,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":36,"author":{"gitId":"sharmainec"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"sharmainec"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws IOException, DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"sharmainec"},"content":"        String[] descTimeArray \u003d description.split(\"/at \");","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"sharmainec"},"content":"        if (descTimeArray.length \u003c 2) {","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"sharmainec"},"content":"            throw new DukeException(\"Something is missing from this event\\n\" + \"Rio, please follow this format:\\n\"","lastModifiedDate":"2021-09-12"},{"lineNumber":41,"author":{"gitId":"sharmainec"},"content":"                    + \"event {name} /at {yyyy-MM-dd} {HH:mm}\");","lastModifiedDate":"2021-09-12"},{"lineNumber":42,"author":{"gitId":"sharmainec"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"sharmainec"},"content":"        String eventDesc \u003d descTimeArray[0].trim();","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"sharmainec"},"content":"        String[] dateTimeArray \u003d descTimeArray[1].split(\" \");","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"sharmainec"},"content":"        if (dateTimeArray.length \u003c 2) {","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"sharmainec"},"content":"            throw new DukeException(\"Something is missing from this event\\n\" + \"Rio, please follow this format:\\n\"","lastModifiedDate":"2021-09-12"},{"lineNumber":47,"author":{"gitId":"sharmainec"},"content":"                    + \"event {name} /by {yyyy-MM-dd} {HH:mm}\");","lastModifiedDate":"2021-09-12"},{"lineNumber":48,"author":{"gitId":"sharmainec"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"sharmainec"},"content":"        String eventDate \u003d dateTimeArray[0].trim();","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"sharmainec"},"content":"        String eventTime \u003d dateTimeArray[1].trim();","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"sharmainec"},"content":"        Events addEvent \u003d new Events(eventDesc, eventDate, eventTime);","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"sharmainec"},"content":"        if (!tasks.addTask(addEvent)) {","lastModifiedDate":"2021-09-12"},{"lineNumber":53,"author":{"gitId":"sharmainec"},"content":"            throw new DukeException(\"Oops Rio, this event task already exists!\\n\");","lastModifiedDate":"2021-09-12"},{"lineNumber":54,"author":{"gitId":"sharmainec"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":55,"author":{"gitId":"sharmainec"},"content":"        storage.writeTask(addEvent);","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"sharmainec"},"content":"        return ui.printAddCommand(addEvent, tasks);","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":60,"author":{"gitId":"sharmainec"},"content":"     * Indicates that AddEventCommand is non-terminating.","lastModifiedDate":"2021-09-12"},{"lineNumber":61,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":62,"author":{"gitId":"sharmainec"},"content":"     * @return False.","lastModifiedDate":"2021-09-12"},{"lineNumber":63,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":64,"author":{"gitId":"sharmainec"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":65,"author":{"gitId":"sharmainec"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-11"},{"lineNumber":66,"author":{"gitId":"sharmainec"},"content":"        return false;","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":68,"author":{"gitId":"sharmainec"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"sharmainec":68}},{"path":"src/main/java/tokio/commands/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharmainec"},"content":"package tokio.commands;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"sharmainec"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"sharmainec"},"content":"import tokio.exceptions.DukeException;","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"sharmainec"},"content":"import tokio.storage.Storage;","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"sharmainec"},"content":"import tokio.tasks.TaskList;","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"sharmainec"},"content":"import tokio.tasks.Todos;","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"sharmainec"},"content":"import tokio.ui.Ui;","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"sharmainec"},"content":"/**","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"sharmainec"},"content":" * Add todo task into task list and storage.","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"sharmainec"},"content":" */","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"sharmainec"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"sharmainec"},"content":"    protected String description;","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":18,"author":{"gitId":"sharmainec"},"content":"     * Constructor for AddTodoCommand","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":20,"author":{"gitId":"sharmainec"},"content":"     * @param description Name of Todo task.","lastModifiedDate":"2021-09-12"},{"lineNumber":21,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"sharmainec"},"content":"    public AddTodoCommand(String description) {","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"sharmainec"},"content":"        this.description \u003d description.trim();","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":27,"author":{"gitId":"sharmainec"},"content":"     * Executes the adding of todo task in the task list and storage file.","lastModifiedDate":"2021-09-12"},{"lineNumber":28,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":29,"author":{"gitId":"sharmainec"},"content":"     * @param tasks Existing tasks in the task list.","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"sharmainec"},"content":"     * @param ui User input format.","lastModifiedDate":"2021-09-12"},{"lineNumber":31,"author":{"gitId":"sharmainec"},"content":"     * @param storage Stores created command into the txt file","lastModifiedDate":"2021-09-12"},{"lineNumber":32,"author":{"gitId":"sharmainec"},"content":"     * @return String message for Tokio\u0027s reply.","lastModifiedDate":"2021-09-12"},{"lineNumber":33,"author":{"gitId":"sharmainec"},"content":"     * @throws IOException If task cannot be written to the storage file.","lastModifiedDate":"2021-09-12"},{"lineNumber":34,"author":{"gitId":"sharmainec"},"content":"     * @throws DukeException If task already exists.","lastModifiedDate":"2021-09-12"},{"lineNumber":35,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":36,"author":{"gitId":"sharmainec"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"sharmainec"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws IOException, DukeException {","lastModifiedDate":"2021-09-12"},{"lineNumber":38,"author":{"gitId":"sharmainec"},"content":"        Todos addTodo \u003d new Todos(description);","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"sharmainec"},"content":"        if (!tasks.addTask(addTodo)) {","lastModifiedDate":"2021-09-12"},{"lineNumber":40,"author":{"gitId":"sharmainec"},"content":"            throw new DukeException(\"Oops Rio, this todo task already exists!\\n\");","lastModifiedDate":"2021-09-12"},{"lineNumber":41,"author":{"gitId":"sharmainec"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":42,"author":{"gitId":"sharmainec"},"content":"        storage.writeTask(addTodo);","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"sharmainec"},"content":"        return ui.printAddCommand(addTodo, tasks);","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":47,"author":{"gitId":"sharmainec"},"content":"     * Indicates that the add todo command is non-terminating.","lastModifiedDate":"2021-09-12"},{"lineNumber":48,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":49,"author":{"gitId":"sharmainec"},"content":"     * @return False.","lastModifiedDate":"2021-09-12"},{"lineNumber":50,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":51,"author":{"gitId":"sharmainec"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"sharmainec"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"sharmainec"},"content":"        return false;","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"sharmainec"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"sharmainec":55}},{"path":"src/main/java/tokio/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharmainec"},"content":"package tokio.commands;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"sharmainec"},"content":"import tokio.storage.Storage;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"sharmainec"},"content":"import tokio.tasks.TaskList;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"sharmainec"},"content":"import tokio.ui.Ui;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"sharmainec"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"sharmainec"},"content":" * Exits Tokio and shows a bye message.","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"sharmainec"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"sharmainec"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"sharmainec"},"content":"     * Outputs bye message.","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"sharmainec"},"content":"     * @param tasks Existing tasks in the task list.","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"sharmainec"},"content":"     * @param ui User input format.","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"sharmainec"},"content":"     * @param storage Stores created command into the txt file","lastModifiedDate":"2021-09-12"},{"lineNumber":17,"author":{"gitId":"sharmainec"},"content":"     * @return String message for Tokio\u0027s reply.","lastModifiedDate":"2021-09-12"},{"lineNumber":18,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"sharmainec"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"sharmainec"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"sharmainec"},"content":"        return ui.printBye();","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":25,"author":{"gitId":"sharmainec"},"content":"     * Indicates that Bye command is terminating.","lastModifiedDate":"2021-09-12"},{"lineNumber":26,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":27,"author":{"gitId":"sharmainec"},"content":"     * @return True.","lastModifiedDate":"2021-09-12"},{"lineNumber":28,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":29,"author":{"gitId":"sharmainec"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"sharmainec"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"sharmainec"},"content":"        return true;","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"sharmainec"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"sharmainec":34}},{"path":"src/main/java/tokio/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharmainec"},"content":"package tokio.commands;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"sharmainec"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"sharmainec"},"content":"import tokio.exceptions.DukeException;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"sharmainec"},"content":"import tokio.storage.Storage;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"sharmainec"},"content":"import tokio.tasks.TaskList;","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"sharmainec"},"content":"import tokio.ui.Ui;","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"sharmainec"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"sharmainec"},"content":" * Represents user input.","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"sharmainec"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"sharmainec"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"sharmainec"},"content":"     * Creates tasks according to user input.","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"sharmainec"},"content":"     * @param tasks Existing tasks in the task list.","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"sharmainec"},"content":"     * @param ui User input format.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"sharmainec"},"content":"     * @param storage Stores created command into the txt file","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"sharmainec"},"content":"     * @throws IOException If task cannot be written to the storage file.","lastModifiedDate":"2021-09-12"},{"lineNumber":21,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"sharmainec"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws IOException, DukeException;","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"sharmainec"},"content":"     * Indicates the end of program.","lastModifiedDate":"2021-09-12"},{"lineNumber":26,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":27,"author":{"gitId":"sharmainec"},"content":"     * @return true if program should exit, otherwise do not exit program.","lastModifiedDate":"2021-09-12"},{"lineNumber":28,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"sharmainec"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"sharmainec"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"sharmainec":31}},{"path":"src/main/java/tokio/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharmainec"},"content":"package tokio.commands;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"sharmainec"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"sharmainec"},"content":"import tokio.exceptions.DukeException;","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"sharmainec"},"content":"import tokio.storage.Storage;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"sharmainec"},"content":"import tokio.tasks.Task;","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"sharmainec"},"content":"import tokio.tasks.TaskList;","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"sharmainec"},"content":"import tokio.ui.Ui;","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"sharmainec"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"sharmainec"},"content":" * Deletes command specified by user, based on index","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"sharmainec"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"sharmainec"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"sharmainec"},"content":"    private int index;","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"sharmainec"},"content":"     * Deletes command based on user input.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"sharmainec"},"content":"     * @param index Index for task in the task list.","lastModifiedDate":"2021-09-12"},{"lineNumber":21,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"sharmainec"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"sharmainec"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"sharmainec"},"content":"     * Executes the delete command.","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"sharmainec"},"content":"     * @param tasks Current tasklist.","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"sharmainec"},"content":"     * @param ui User input format.","lastModifiedDate":"2021-09-12"},{"lineNumber":31,"author":{"gitId":"sharmainec"},"content":"     * @param storage Stores created command into the txt file.","lastModifiedDate":"2021-09-12"},{"lineNumber":32,"author":{"gitId":"sharmainec"},"content":"     * @return String message for Tokio\u0027s reply.","lastModifiedDate":"2021-09-12"},{"lineNumber":33,"author":{"gitId":"sharmainec"},"content":"     * @throws IOException If task to be deleted is null.","lastModifiedDate":"2021-09-12"},{"lineNumber":34,"author":{"gitId":"sharmainec"},"content":"     * @throws DukeException If index cannot be found.","lastModifiedDate":"2021-09-12"},{"lineNumber":35,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"sharmainec"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"sharmainec"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws IOException, DukeException {","lastModifiedDate":"2021-09-12"},{"lineNumber":38,"author":{"gitId":"sharmainec"},"content":"        assert index \u003e\u003d 0 : \"index cannot be \u003c 0\";","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"sharmainec"},"content":"        if (index \u003c 1) {","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"sharmainec"},"content":"            throw new DukeException(\"Oh no Rio, this index does not exist!\\n\"","lastModifiedDate":"2021-09-12"},{"lineNumber":41,"author":{"gitId":"sharmainec"},"content":"                    + \"Please make sure that index \u003e 0\");","lastModifiedDate":"2021-09-12"},{"lineNumber":42,"author":{"gitId":"sharmainec"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"sharmainec"},"content":"        int maxIndex \u003d tasks.getSize();","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"sharmainec"},"content":"        int deleteIndex \u003d index - 1;","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"sharmainec"},"content":"        if (deleteIndex \u003e\u003d maxIndex) {","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"sharmainec"},"content":"            throw new DukeException(\"Oh no Rio, this index does not exist!\\n\"","lastModifiedDate":"2021-09-12"},{"lineNumber":47,"author":{"gitId":"sharmainec"},"content":"                    + \"Please make sure that index \u003c size of tasks\");","lastModifiedDate":"2021-09-12"},{"lineNumber":48,"author":{"gitId":"sharmainec"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"sharmainec"},"content":"        Task deleteTask \u003d tasks.getTask(deleteIndex);","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"sharmainec"},"content":"        storage.editTask(deleteTask, \"\");","lastModifiedDate":"2021-09-12"},{"lineNumber":51,"author":{"gitId":"sharmainec"},"content":"        tasks.deleteTask(deleteIndex);","lastModifiedDate":"2021-09-12"},{"lineNumber":52,"author":{"gitId":"sharmainec"},"content":"        return ui.printDeleteCommand(deleteTask, tasks);","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":56,"author":{"gitId":"sharmainec"},"content":"     * Indicates that delete command is not a terminating command.","lastModifiedDate":"2021-09-12"},{"lineNumber":57,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":58,"author":{"gitId":"sharmainec"},"content":"     * @return False.","lastModifiedDate":"2021-09-12"},{"lineNumber":59,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":60,"author":{"gitId":"sharmainec"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"sharmainec"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"sharmainec"},"content":"        return false;","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"sharmainec"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"sharmainec":64}},{"path":"src/main/java/tokio/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharmainec"},"content":"package tokio.commands;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"sharmainec"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"sharmainec"},"content":"import tokio.exceptions.DukeException;","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"sharmainec"},"content":"import tokio.storage.Storage;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"sharmainec"},"content":"import tokio.tasks.Task;","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"sharmainec"},"content":"import tokio.tasks.TaskList;","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"sharmainec"},"content":"import tokio.ui.Ui;","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"sharmainec"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"sharmainec"},"content":" * Marks task specified by user as done, using index.","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"sharmainec"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"sharmainec"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"sharmainec"},"content":"    protected int index;","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":18,"author":{"gitId":"sharmainec"},"content":"     * Constructor for DoneCommand.","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":20,"author":{"gitId":"sharmainec"},"content":"     * @param index Index for task in the task list.","lastModifiedDate":"2021-09-12"},{"lineNumber":21,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"sharmainec"},"content":"    public DoneCommand(int index) {","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"sharmainec"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":27,"author":{"gitId":"sharmainec"},"content":"     * Executes the done command.","lastModifiedDate":"2021-09-12"},{"lineNumber":28,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":29,"author":{"gitId":"sharmainec"},"content":"     * @param tasks Existing tasks in the task list.","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"sharmainec"},"content":"     * @param ui User input format.","lastModifiedDate":"2021-09-12"},{"lineNumber":31,"author":{"gitId":"sharmainec"},"content":"     * @param storage Stores created command into the txt file.","lastModifiedDate":"2021-09-12"},{"lineNumber":32,"author":{"gitId":"sharmainec"},"content":"     * @return String message for Tokio\u0027s reply.","lastModifiedDate":"2021-09-12"},{"lineNumber":33,"author":{"gitId":"sharmainec"},"content":"     * @throws IOException If task cannot be written to the storage file.","lastModifiedDate":"2021-09-12"},{"lineNumber":34,"author":{"gitId":"sharmainec"},"content":"     * @throws DukeException If index cannot be found.","lastModifiedDate":"2021-09-12"},{"lineNumber":35,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":36,"author":{"gitId":"sharmainec"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"sharmainec"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws IOException, DukeException {","lastModifiedDate":"2021-09-12"},{"lineNumber":38,"author":{"gitId":"sharmainec"},"content":"        assert index \u003e\u003d 0 : \"index cannot be \u003c 0\";","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"sharmainec"},"content":"        if (index \u003c 1) {","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"sharmainec"},"content":"            throw new DukeException(\"Oh no Rio, this index does not exist!\\n\"","lastModifiedDate":"2021-09-12"},{"lineNumber":41,"author":{"gitId":"sharmainec"},"content":"                    + \"Please make sure that index \u003e 0\");","lastModifiedDate":"2021-09-12"},{"lineNumber":42,"author":{"gitId":"sharmainec"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"sharmainec"},"content":"        int maxIndex \u003d tasks.getSize();","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"sharmainec"},"content":"        int doneIndex \u003d index - 1;","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"sharmainec"},"content":"        if (doneIndex \u003e\u003d maxIndex) {","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"sharmainec"},"content":"            throw new DukeException(\"Oh no Rio, this index does not exist!\\n\"","lastModifiedDate":"2021-09-12"},{"lineNumber":47,"author":{"gitId":"sharmainec"},"content":"                    + \"Please make sure that index \u003c size of tasks\");","lastModifiedDate":"2021-09-12"},{"lineNumber":48,"author":{"gitId":"sharmainec"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"sharmainec"},"content":"        Task doneTask \u003d tasks.getTask(doneIndex);","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"sharmainec"},"content":"        storage.editTask(doneTask, doneTask.formatToStorage());","lastModifiedDate":"2021-09-12"},{"lineNumber":51,"author":{"gitId":"sharmainec"},"content":"        tasks.doneTask(doneIndex);","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"sharmainec"},"content":"        return ui.printDoneCommand(doneTask, tasks);","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":56,"author":{"gitId":"sharmainec"},"content":"     * Indicates that done command is not a terminating command.","lastModifiedDate":"2021-09-12"},{"lineNumber":57,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":58,"author":{"gitId":"sharmainec"},"content":"     * @return False.","lastModifiedDate":"2021-09-12"},{"lineNumber":59,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":60,"author":{"gitId":"sharmainec"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"sharmainec"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"sharmainec"},"content":"        return false;","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"sharmainec"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"sharmainec":65}},{"path":"src/main/java/tokio/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharmainec"},"content":"package tokio.commands;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"sharmainec"},"content":"import tokio.storage.Storage;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"sharmainec"},"content":"import tokio.tasks.TaskList;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"sharmainec"},"content":"import tokio.ui.Ui;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"sharmainec"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"sharmainec"},"content":" * Command that search through task list and returns a new task list with items that match the keyword","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"sharmainec"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"sharmainec"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"sharmainec"},"content":"    protected String keyword;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"sharmainec"},"content":"     * Constructor for FindCommand.","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"sharmainec"},"content":"     * @param keyword Keyword to search for.","lastModifiedDate":"2021-09-12"},{"lineNumber":17,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":18,"author":{"gitId":"sharmainec"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"sharmainec"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":23,"author":{"gitId":"sharmainec"},"content":"     * Executes the extracting of task with the specified keyword in the task list.","lastModifiedDate":"2021-09-12"},{"lineNumber":24,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":25,"author":{"gitId":"sharmainec"},"content":"     * @param tasks Existing tasks in the task list.","lastModifiedDate":"2021-09-12"},{"lineNumber":26,"author":{"gitId":"sharmainec"},"content":"     * @param ui User input format.","lastModifiedDate":"2021-09-12"},{"lineNumber":27,"author":{"gitId":"sharmainec"},"content":"     * @param storage Stores created command into the txt file","lastModifiedDate":"2021-09-12"},{"lineNumber":28,"author":{"gitId":"sharmainec"},"content":"     * @return String message for Tokio\u0027s reply.","lastModifiedDate":"2021-09-12"},{"lineNumber":29,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"sharmainec"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"sharmainec"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"sharmainec"},"content":"        TaskList findResult \u003d tasks.findTask(keyword);","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"sharmainec"},"content":"        return ui.printFindResults(findResult, keyword);","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":37,"author":{"gitId":"sharmainec"},"content":"     * Indicates that FindCommand is not terminating.","lastModifiedDate":"2021-09-12"},{"lineNumber":38,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":39,"author":{"gitId":"sharmainec"},"content":"     * @return False.","lastModifiedDate":"2021-09-12"},{"lineNumber":40,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":41,"author":{"gitId":"sharmainec"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"sharmainec"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"sharmainec"},"content":"        return false;","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"sharmainec"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"sharmainec":45}},{"path":"src/main/java/tokio/commands/Instruction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharmainec"},"content":"package tokio.commands;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"sharmainec"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"sharmainec"},"content":" * Stores the types of Instruction a command can have.","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"sharmainec"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"sharmainec"},"content":"public enum Instruction {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"sharmainec"},"content":"    LIST(\"list\"),","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"sharmainec"},"content":"    DONE(\"done\"),","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"sharmainec"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"sharmainec"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"sharmainec"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"sharmainec"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"sharmainec"},"content":"    BYE(\"bye\"),","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"sharmainec"},"content":"    INVALID(\"invalid\"),","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"sharmainec"},"content":"    FIND(\"find\");","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"sharmainec"},"content":"    private final String name;","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":20,"author":{"gitId":"sharmainec"},"content":"     * Constructor for Instruction.","lastModifiedDate":"2021-09-12"},{"lineNumber":21,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"sharmainec"},"content":"     * @param name Name of instruction.","lastModifiedDate":"2021-09-12"},{"lineNumber":23,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":24,"author":{"gitId":"sharmainec"},"content":"    Instruction(String name) {","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"sharmainec"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"sharmainec"},"content":"     * Compares Instruction with string.","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":31,"author":{"gitId":"sharmainec"},"content":"     * @param str Input string.","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"sharmainec"},"content":"     * @return Instruction if such an instruction exist, otherwise invalid.","lastModifiedDate":"2021-09-12"},{"lineNumber":33,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"sharmainec"},"content":"    public static Instruction comparesTo(String str) {","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"sharmainec"},"content":"        for (Instruction i : Instruction.values()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"sharmainec"},"content":"            if (i.name.equalsIgnoreCase(str)) {","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"sharmainec"},"content":"                return i;","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"sharmainec"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"sharmainec"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"sharmainec"},"content":"        return INVALID;","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"sharmainec"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"sharmainec":42}},{"path":"src/main/java/tokio/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharmainec"},"content":"package tokio.commands;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"sharmainec"},"content":"import tokio.storage.Storage;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"sharmainec"},"content":"import tokio.tasks.TaskList;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"sharmainec"},"content":"import tokio.ui.Ui;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"sharmainec"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"sharmainec"},"content":" * Lists everything in the taskList.","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"sharmainec"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"sharmainec"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"sharmainec"},"content":"     * Executes the listing of tasks in the task list.","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"sharmainec"},"content":"     * @param tasks Existing tasks in the task list.","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"sharmainec"},"content":"     * @param ui User input format.","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"sharmainec"},"content":"     * @param storage Stores created command into the txt file","lastModifiedDate":"2021-09-12"},{"lineNumber":17,"author":{"gitId":"sharmainec"},"content":"     * @return String message for Tokio\u0027s reply.","lastModifiedDate":"2021-09-12"},{"lineNumber":18,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"sharmainec"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"sharmainec"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"sharmainec"},"content":"        if (tasks.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"sharmainec"},"content":"            return ui.printEmptyList();","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"sharmainec"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"sharmainec"},"content":"        return ui.printList(tasks);","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"sharmainec"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"sharmainec"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"sharmainec"},"content":"        return false;","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"sharmainec"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"sharmainec":32}},{"path":"src/main/java/tokio/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharmainec"},"content":"package tokio.exceptions;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"sharmainec"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"sharmainec"},"content":" * Exception thrown when user input causes problems.","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"sharmainec"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"sharmainec"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"sharmainec"},"content":"     * Constructor for DukeException.","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"sharmainec"},"content":"     * @param str Error message for DukeException.","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"sharmainec"},"content":"    public DukeException (String str) {","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"sharmainec"},"content":"        super(str);","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"sharmainec"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"sharmainec"},"content":"    public String toString() {","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"sharmainec"},"content":"        return this.getMessage();","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"sharmainec"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"sharmainec":20}},{"path":"src/main/java/tokio/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharmainec"},"content":"package tokio.parser;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"sharmainec"},"content":"import tokio.commands.AddDeadlineCommand;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"sharmainec"},"content":"import tokio.commands.AddEventCommand;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"sharmainec"},"content":"import tokio.commands.AddTodoCommand;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"sharmainec"},"content":"import tokio.commands.ByeCommand;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"sharmainec"},"content":"import tokio.commands.Command;","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"sharmainec"},"content":"import tokio.commands.DeleteCommand;","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"sharmainec"},"content":"import tokio.commands.DoneCommand;","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"sharmainec"},"content":"import tokio.commands.FindCommand;","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"sharmainec"},"content":"import tokio.commands.Instruction;","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"sharmainec"},"content":"import tokio.commands.ListCommand;","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"sharmainec"},"content":"import tokio.exceptions.DukeException;","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"sharmainec"},"content":"import tokio.ui.Ui;","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"sharmainec"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"sharmainec"},"content":" * Makes sense of the user command.","lastModifiedDate":"2021-09-12"},{"lineNumber":18,"author":{"gitId":"sharmainec"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"sharmainec"},"content":"public class Parser {","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"sharmainec"},"content":"    protected static Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"sharmainec"},"content":"     * Returns a command based on user input.","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"sharmainec"},"content":"     * @param str User input.","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"sharmainec"},"content":"     * @return Command class.","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"sharmainec"},"content":"     * @throws DukeException If user input is invalid.","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"sharmainec"},"content":"    public static Command parse(String str) throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"sharmainec"},"content":"        assert str.length() !\u003d 0 : \"Command cannot be blank\";","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"sharmainec"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"sharmainec"},"content":"            String[] splitStr \u003d str.split(\" \", 2);","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"sharmainec"},"content":"            String commandType \u003d splitStr[0].trim();","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"sharmainec"},"content":"            switch (Instruction.comparesTo(commandType)) {","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"sharmainec"},"content":"            case LIST:","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"sharmainec"},"content":"                return new ListCommand();","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"sharmainec"},"content":"            case DONE:","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"sharmainec"},"content":"                return new DoneCommand(Integer.parseInt(splitStr[1].trim()));","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"sharmainec"},"content":"            case DELETE:","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"sharmainec"},"content":"                return new DeleteCommand(Integer.parseInt(splitStr[1].trim()));","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"sharmainec"},"content":"            case TODO:","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"sharmainec"},"content":"                return new AddTodoCommand(splitStr[1].trim());","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"sharmainec"},"content":"            case DEADLINE:","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"sharmainec"},"content":"                return new AddDeadlineCommand(splitStr[1].trim());","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"sharmainec"},"content":"            case EVENT:","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"sharmainec"},"content":"                return new AddEventCommand(splitStr[1].trim());","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"sharmainec"},"content":"            case FIND:","lastModifiedDate":"2021-09-11"},{"lineNumber":48,"author":{"gitId":"sharmainec"},"content":"                return new FindCommand(splitStr[1].trim());","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"sharmainec"},"content":"            case BYE:","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"sharmainec"},"content":"                return new ByeCommand();","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"sharmainec"},"content":"            default:","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"sharmainec"},"content":"                throw new DukeException(\"Please enter a valid command so that I will be able to help you...\");","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"sharmainec"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"sharmainec"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"sharmainec"},"content":"            throw new DukeException(\"Rio! Please enter a command to proceed...\");","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"sharmainec"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"sharmainec"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"sharmainec":58}},{"path":"src/main/java/tokio/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharmainec"},"content":"package tokio.storage;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"sharmainec"},"content":"import java.io.File;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"sharmainec"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"sharmainec"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"sharmainec"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"sharmainec"},"content":"import java.text.DateFormat;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"sharmainec"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"sharmainec"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"sharmainec"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"sharmainec"},"content":"import java.util.Date;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"sharmainec"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"sharmainec"},"content":"import tokio.exceptions.DukeException;","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"sharmainec"},"content":"import tokio.tasks.Deadlines;","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"sharmainec"},"content":"import tokio.tasks.Events;","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"sharmainec"},"content":"import tokio.tasks.Task;","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"sharmainec"},"content":"import tokio.tasks.Todos;","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"sharmainec"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"sharmainec"},"content":" * Deals with loading tasks from the file and saving tasks in the file","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"sharmainec"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"sharmainec"},"content":"public class Storage {","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"sharmainec"},"content":"    private final String filePath;","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"sharmainec"},"content":"    private File file;","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"sharmainec"},"content":"     * Initialises storage with file path.","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"sharmainec"},"content":"     * @param filePath File path of file that contains all tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"sharmainec"},"content":"     * @throws IOException If file path does not exist.","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"sharmainec"},"content":"    public Storage(String filePath) throws IOException {","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"sharmainec"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"sharmainec"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"sharmainec"},"content":"        file.getParentFile().mkdirs();","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"sharmainec"},"content":"        file.createNewFile();","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"sharmainec"},"content":"     * Reads lines from txt file, convert to respective tasks and add to task list.","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"sharmainec"},"content":"     * @return List of Tasks.","lastModifiedDate":"2021-09-12"},{"lineNumber":44,"author":{"gitId":"sharmainec"},"content":"     * @throws FileNotFoundException If txt file does not exist.","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"sharmainec"},"content":"     * @throws DukeException If line read is missing any information.","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"sharmainec"},"content":"     * @throws ParseException If string cannot be parsed to date.","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"sharmainec"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws FileNotFoundException, DukeException, ParseException {","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"sharmainec"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"sharmainec"},"content":"        Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"sharmainec"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"sharmainec"},"content":"            String readStr \u003d sc.nextLine();","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"sharmainec"},"content":"            assert readStr.length() !\u003d 0 : \"Line to be read cannot be empty\";","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"sharmainec"},"content":"            String[] readLineArray \u003d readStr.split(\"]\", 3);","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"sharmainec"},"content":"            String taskInstruction \u003d readLineArray[0].substring(1);","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"sharmainec"},"content":"            String taskIsDone \u003d readLineArray[1].substring(1);","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"sharmainec"},"content":"            String taskDesc \u003d readLineArray[2].trim();","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"sharmainec"},"content":"            if (taskDesc.isBlank()) {","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"sharmainec"},"content":"                throw new DukeException(\"Task description cannot be blank!!\");","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"sharmainec"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"sharmainec"},"content":"            switch (taskInstruction) {","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"sharmainec"},"content":"            case \"T\":","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"sharmainec"},"content":"                Todos addTodo \u003d new Todos(taskDesc);","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"sharmainec"},"content":"                if (!taskIsDone.isBlank()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"sharmainec"},"content":"                    addTodo.setDone();","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"sharmainec"},"content":"                }","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"sharmainec"},"content":"                taskList.add(addTodo);","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"sharmainec"},"content":"                break;","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"sharmainec"},"content":"            case \"D\":","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"sharmainec"},"content":"                String[] descDateArray \u003d taskDesc.split(\"\\\\(by: \");","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"sharmainec"},"content":"                //convert date to the correct input format","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"sharmainec"},"content":"                DateFormat inputDeadlineDateFormat \u003d new SimpleDateFormat(\"MMM dd yyyy\");","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"sharmainec"},"content":"                Date inputDeadlineDate \u003d inputDeadlineDateFormat.parse(descDateArray[1]);","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"sharmainec"},"content":"                DateFormat outputDeadlineDateFormat \u003d new SimpleDateFormat(\"yyyy-MM-dd\");","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"sharmainec"},"content":"                String outputDeadlineDate \u003d outputDeadlineDateFormat.format(inputDeadlineDate);","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"sharmainec"},"content":"                Deadlines addDeadline \u003d new Deadlines(descDateArray[0].trim(), outputDeadlineDate);","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"sharmainec"},"content":"                if (!taskIsDone.isBlank()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"sharmainec"},"content":"                    addDeadline.setDone();","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"sharmainec"},"content":"                }","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"sharmainec"},"content":"                taskList.add(addDeadline);","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"sharmainec"},"content":"                break;","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"sharmainec"},"content":"            case \"E\":","lastModifiedDate":"2021-08-27"},{"lineNumber":83,"author":{"gitId":"sharmainec"},"content":"                String[] eventDescTimeArray \u003d taskDesc.split(\" \\\\(at: \");","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"sharmainec"},"content":"                int colonIndex \u003d eventDescTimeArray[1].indexOf(\":\");","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"sharmainec"},"content":"                String dateStr \u003d eventDescTimeArray[1].substring(0, colonIndex - 2);","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"sharmainec"},"content":"                String timeStr \u003d eventDescTimeArray[1].substring(colonIndex - 2, colonIndex + 3);","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"sharmainec"},"content":"                //convert date to the correct input format","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"sharmainec"},"content":"                DateFormat inputEventDateFormat \u003d new SimpleDateFormat(\"MMM dd yyyy\");","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"sharmainec"},"content":"                Date inputEventDate \u003d inputEventDateFormat.parse(dateStr.trim());","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"sharmainec"},"content":"                DateFormat outputEventDateFormat \u003d new SimpleDateFormat(\"yyyy-MM-dd\");","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"sharmainec"},"content":"                String outputEventDate \u003d outputEventDateFormat.format(inputEventDate);","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"sharmainec"},"content":"                Events addEvent \u003d new Events(eventDescTimeArray[0].trim(), outputEventDate, timeStr.trim());","lastModifiedDate":"2021-08-29"},{"lineNumber":93,"author":{"gitId":"sharmainec"},"content":"                if (!taskIsDone.isBlank()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":94,"author":{"gitId":"sharmainec"},"content":"                    addEvent.setDone();","lastModifiedDate":"2021-08-27"},{"lineNumber":95,"author":{"gitId":"sharmainec"},"content":"                }","lastModifiedDate":"2021-08-27"},{"lineNumber":96,"author":{"gitId":"sharmainec"},"content":"                taskList.add(addEvent);","lastModifiedDate":"2021-08-27"},{"lineNumber":97,"author":{"gitId":"sharmainec"},"content":"                break;","lastModifiedDate":"2021-08-27"},{"lineNumber":98,"author":{"gitId":"sharmainec"},"content":"            default:","lastModifiedDate":"2021-08-29"},{"lineNumber":99,"author":{"gitId":"sharmainec"},"content":"                throw new IllegalStateException(\"Unexpected value: \" + taskInstruction);","lastModifiedDate":"2021-08-29"},{"lineNumber":100,"author":{"gitId":"sharmainec"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":101,"author":{"gitId":"sharmainec"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":102,"author":{"gitId":"sharmainec"},"content":"        return taskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":103,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":104,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":105,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":106,"author":{"gitId":"sharmainec"},"content":"     * Adds a line with the task description in the txt file.","lastModifiedDate":"2021-09-12"},{"lineNumber":107,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":108,"author":{"gitId":"sharmainec"},"content":"     * @param task Task to be added.","lastModifiedDate":"2021-08-31"},{"lineNumber":109,"author":{"gitId":"sharmainec"},"content":"     * @throws IOException If file does not exist in filePath.","lastModifiedDate":"2021-09-12"},{"lineNumber":110,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":111,"author":{"gitId":"sharmainec"},"content":"    public void writeTask(Task task) throws IOException {","lastModifiedDate":"2021-08-27"},{"lineNumber":112,"author":{"gitId":"sharmainec"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2021-08-27"},{"lineNumber":113,"author":{"gitId":"sharmainec"},"content":"        fw.write(task.formatToStorage() + System.lineSeparator());","lastModifiedDate":"2021-09-12"},{"lineNumber":114,"author":{"gitId":"sharmainec"},"content":"        fw.close();","lastModifiedDate":"2021-08-27"},{"lineNumber":115,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":116,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":117,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":118,"author":{"gitId":"sharmainec"},"content":"     * Edits given task in storage file.","lastModifiedDate":"2021-09-12"},{"lineNumber":119,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":120,"author":{"gitId":"sharmainec"},"content":"     * @param task Task that requires changes.","lastModifiedDate":"2021-09-12"},{"lineNumber":121,"author":{"gitId":"sharmainec"},"content":"     * @param replace String to be updated to in the storage file.","lastModifiedDate":"2021-09-12"},{"lineNumber":122,"author":{"gitId":"sharmainec"},"content":"     * @throws IOException If temp file could not be created or temp file is a directory","lastModifiedDate":"2021-09-12"},{"lineNumber":123,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":124,"author":{"gitId":"sharmainec"},"content":"    public void editTask(Task task, String replace) throws IOException {","lastModifiedDate":"2021-09-12"},{"lineNumber":125,"author":{"gitId":"sharmainec"},"content":"        File tempFile \u003d File.createTempFile(\"temp\", \".txt\", file.getParentFile());","lastModifiedDate":"2021-08-27"},{"lineNumber":126,"author":{"gitId":"sharmainec"},"content":"        FileWriter fw \u003d new FileWriter(tempFile, true);","lastModifiedDate":"2021-08-27"},{"lineNumber":127,"author":{"gitId":"sharmainec"},"content":"        Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2021-08-27"},{"lineNumber":128,"author":{"gitId":"sharmainec"},"content":"        String lineDone \u003d task.formatToStorage();","lastModifiedDate":"2021-09-12"},{"lineNumber":129,"author":{"gitId":"sharmainec"},"content":"        boolean isDelete \u003d replace.isBlank();","lastModifiedDate":"2021-09-12"},{"lineNumber":130,"author":{"gitId":"sharmainec"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":131,"author":{"gitId":"sharmainec"},"content":"            String currLine \u003d sc.nextLine();","lastModifiedDate":"2021-08-27"},{"lineNumber":132,"author":{"gitId":"sharmainec"},"content":"            boolean isTask \u003d currLine.equals(lineDone);","lastModifiedDate":"2021-09-12"},{"lineNumber":133,"author":{"gitId":"sharmainec"},"content":"            if (!isTask) {","lastModifiedDate":"2021-09-12"},{"lineNumber":134,"author":{"gitId":"sharmainec"},"content":"                fw.write(currLine + System.lineSeparator());","lastModifiedDate":"2021-09-11"},{"lineNumber":135,"author":{"gitId":"sharmainec"},"content":"            } else if (isDelete) {","lastModifiedDate":"2021-09-12"},{"lineNumber":136,"author":{"gitId":"sharmainec"},"content":"                fw.write(replace);","lastModifiedDate":"2021-09-12"},{"lineNumber":137,"author":{"gitId":"sharmainec"},"content":"            } else {","lastModifiedDate":"2021-09-12"},{"lineNumber":138,"author":{"gitId":"sharmainec"},"content":"                task.setDone();","lastModifiedDate":"2021-08-27"},{"lineNumber":139,"author":{"gitId":"sharmainec"},"content":"                fw.write(task.formatToStorage() + System.lineSeparator());","lastModifiedDate":"2021-09-12"},{"lineNumber":140,"author":{"gitId":"sharmainec"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":141,"author":{"gitId":"sharmainec"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":142,"author":{"gitId":"sharmainec"},"content":"        fw.close();","lastModifiedDate":"2021-08-27"},{"lineNumber":143,"author":{"gitId":"sharmainec"},"content":"        tempFile.renameTo(file);","lastModifiedDate":"2021-08-31"},{"lineNumber":144,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":145,"author":{"gitId":"sharmainec"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"sharmainec":145}},{"path":"src/main/java/tokio/tasks/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharmainec"},"content":"package tokio.tasks;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"sharmainec"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"sharmainec"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"sharmainec"},"content":"import tokio.commands.Instruction;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"sharmainec"},"content":"import tokio.exceptions.DukeException;","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"sharmainec"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"sharmainec"},"content":" * Represents a Deadline task that takes in date.","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"sharmainec"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"sharmainec"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"sharmainec"},"content":"    protected String description;","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"sharmainec"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"sharmainec"},"content":"     * Initialises a deadline object with description and date.","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"sharmainec"},"content":"     * @param description Name of deadline.","lastModifiedDate":"2021-09-12"},{"lineNumber":20,"author":{"gitId":"sharmainec"},"content":"     * @param date Due date of deadline in String type.","lastModifiedDate":"2021-09-12"},{"lineNumber":21,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"sharmainec"},"content":"    public Deadlines(String description, String date) throws DukeException {","lastModifiedDate":"2021-09-12"},{"lineNumber":23,"author":{"gitId":"sharmainec"},"content":"        super(description, Instruction.DEADLINE);","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"sharmainec"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-12"},{"lineNumber":25,"author":{"gitId":"sharmainec"},"content":"        try {","lastModifiedDate":"2021-09-12"},{"lineNumber":26,"author":{"gitId":"sharmainec"},"content":"            this.date \u003d LocalDate.parse(date);","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"sharmainec"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-12"},{"lineNumber":28,"author":{"gitId":"sharmainec"},"content":"            throw new DukeException(\"I do not understand this format...\\n\" + \"Rio, please follow this format:\\n\"","lastModifiedDate":"2021-09-12"},{"lineNumber":29,"author":{"gitId":"sharmainec"},"content":"                    + \"deadline {name} /at {yyyy-MM-dd}\");","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"sharmainec"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":32,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":33,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":34,"author":{"gitId":"sharmainec"},"content":"     * Formats deadline for user display.","lastModifiedDate":"2021-09-12"},{"lineNumber":35,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":36,"author":{"gitId":"sharmainec"},"content":"     * @return Formatted deadline for user display..","lastModifiedDate":"2021-09-12"},{"lineNumber":37,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":38,"author":{"gitId":"sharmainec"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"sharmainec"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"sharmainec"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"sharmainec"},"content":"                + this.date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":44,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":45,"author":{"gitId":"sharmainec"},"content":"     * Formats deadline for storage purposes..","lastModifiedDate":"2021-09-12"},{"lineNumber":46,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":47,"author":{"gitId":"sharmainec"},"content":"     * @return Formatted deadline for storage purposes.","lastModifiedDate":"2021-09-12"},{"lineNumber":48,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":49,"author":{"gitId":"sharmainec"},"content":"    @Override","lastModifiedDate":"2021-09-12"},{"lineNumber":50,"author":{"gitId":"sharmainec"},"content":"    public String formatToStorage() {","lastModifiedDate":"2021-09-12"},{"lineNumber":51,"author":{"gitId":"sharmainec"},"content":"        return \"[D]\" + super.formatToStorage() + \" (by: \"","lastModifiedDate":"2021-09-12"},{"lineNumber":52,"author":{"gitId":"sharmainec"},"content":"                + this.date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2021-09-12"},{"lineNumber":53,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":54,"author":{"gitId":"sharmainec"},"content":"    ","lastModifiedDate":"2021-09-12"},{"lineNumber":55,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":56,"author":{"gitId":"sharmainec"},"content":"     * Compares two objects, if both objects are Deadlines and have the same name and date,","lastModifiedDate":"2021-09-12"},{"lineNumber":57,"author":{"gitId":"sharmainec"},"content":"     * then they will be considered equal.","lastModifiedDate":"2021-09-12"},{"lineNumber":58,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":59,"author":{"gitId":"sharmainec"},"content":"     * @param obj Object to be compared to.","lastModifiedDate":"2021-09-12"},{"lineNumber":60,"author":{"gitId":"sharmainec"},"content":"     * @return True if objects are equal, false otherwise.","lastModifiedDate":"2021-09-12"},{"lineNumber":61,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":62,"author":{"gitId":"sharmainec"},"content":"    @Override","lastModifiedDate":"2021-09-12"},{"lineNumber":63,"author":{"gitId":"sharmainec"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-09-12"},{"lineNumber":64,"author":{"gitId":"sharmainec"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2021-09-12"},{"lineNumber":65,"author":{"gitId":"sharmainec"},"content":"            return true;","lastModifiedDate":"2021-09-12"},{"lineNumber":66,"author":{"gitId":"sharmainec"},"content":"        } else if (obj instanceof Deadlines) {","lastModifiedDate":"2021-09-12"},{"lineNumber":67,"author":{"gitId":"sharmainec"},"content":"            Deadlines d \u003d (Deadlines) obj;","lastModifiedDate":"2021-09-12"},{"lineNumber":68,"author":{"gitId":"sharmainec"},"content":"            return this.description.equals(d.description) \u0026\u0026 this.date.equals(d.date);","lastModifiedDate":"2021-09-12"},{"lineNumber":69,"author":{"gitId":"sharmainec"},"content":"        } else {","lastModifiedDate":"2021-09-12"},{"lineNumber":70,"author":{"gitId":"sharmainec"},"content":"            return false;","lastModifiedDate":"2021-09-12"},{"lineNumber":71,"author":{"gitId":"sharmainec"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":72,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":73,"author":{"gitId":"sharmainec"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"sharmainec":73}},{"path":"src/main/java/tokio/tasks/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharmainec"},"content":"package tokio.tasks;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"sharmainec"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"sharmainec"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"sharmainec"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"sharmainec"},"content":"import tokio.commands.Instruction;","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"sharmainec"},"content":"import tokio.exceptions.DukeException;","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"sharmainec"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"sharmainec"},"content":" * Represents an event task that takes in date and time.","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"sharmainec"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"sharmainec"},"content":"public class Events extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"sharmainec"},"content":"    protected String description;","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"sharmainec"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"sharmainec"},"content":"    protected LocalTime time;","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"sharmainec"},"content":"     * Initialises Events with description, date and time.","lastModifiedDate":"2021-09-12"},{"lineNumber":20,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":21,"author":{"gitId":"sharmainec"},"content":"     * @param description Description of event.","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"sharmainec"},"content":"     * @param date Date of event in LocalDate type.","lastModifiedDate":"2021-09-12"},{"lineNumber":23,"author":{"gitId":"sharmainec"},"content":"     * @param time Time of event in LocalTime type.","lastModifiedDate":"2021-09-12"},{"lineNumber":24,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":25,"author":{"gitId":"sharmainec"},"content":"    public Events(String description, LocalDate date, LocalTime time) {","lastModifiedDate":"2021-09-12"},{"lineNumber":26,"author":{"gitId":"sharmainec"},"content":"        super(description, Instruction.EVENT);","lastModifiedDate":"2021-09-12"},{"lineNumber":27,"author":{"gitId":"sharmainec"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-12"},{"lineNumber":28,"author":{"gitId":"sharmainec"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-12"},{"lineNumber":29,"author":{"gitId":"sharmainec"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":31,"author":{"gitId":"sharmainec"},"content":"    ","lastModifiedDate":"2021-09-12"},{"lineNumber":32,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"sharmainec"},"content":"     * Initialises Events with description, date and time.","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"sharmainec"},"content":"     * @param description Description of event.","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"sharmainec"},"content":"     * @param date Date of event.","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"sharmainec"},"content":"     * @param time Time of event.","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"sharmainec"},"content":"     * @throws DukeException If user input date time is not in YYYY-MM-DD HH:mm format.","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"sharmainec"},"content":"    public Events(String description, String date, String time) throws DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"sharmainec"},"content":"        super(description, Instruction.EVENT);","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"sharmainec"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-12"},{"lineNumber":43,"author":{"gitId":"sharmainec"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"sharmainec"},"content":"            this.date \u003d LocalDate.parse(date);","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"sharmainec"},"content":"            this.time \u003d LocalTime.parse(time, DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"sharmainec"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"sharmainec"},"content":"            throw new DukeException(\"I do not understand this format...\\n\" + \"Rio, please follow this format:\\n\"","lastModifiedDate":"2021-09-12"},{"lineNumber":48,"author":{"gitId":"sharmainec"},"content":"                    + \"event {name} /at {yyyy-MM-dd} {HH:mm}\");","lastModifiedDate":"2021-09-12"},{"lineNumber":49,"author":{"gitId":"sharmainec"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":53,"author":{"gitId":"sharmainec"},"content":"     * Formats events for user display.","lastModifiedDate":"2021-09-12"},{"lineNumber":54,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":55,"author":{"gitId":"sharmainec"},"content":"     * @return Formatted Events task for user display.","lastModifiedDate":"2021-09-12"},{"lineNumber":56,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":57,"author":{"gitId":"sharmainec"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"sharmainec"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"sharmainec"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"sharmainec"},"content":"                + \" \" + time + \")\";","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":63,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":64,"author":{"gitId":"sharmainec"},"content":"     * Formats events for storage purposes.","lastModifiedDate":"2021-09-12"},{"lineNumber":65,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":66,"author":{"gitId":"sharmainec"},"content":"     * @return Formatted Events task for storage purposes.","lastModifiedDate":"2021-09-12"},{"lineNumber":67,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":68,"author":{"gitId":"sharmainec"},"content":"    @Override","lastModifiedDate":"2021-09-12"},{"lineNumber":69,"author":{"gitId":"sharmainec"},"content":"    public String formatToStorage() {","lastModifiedDate":"2021-09-12"},{"lineNumber":70,"author":{"gitId":"sharmainec"},"content":"        return \"[E]\" + super.formatToStorage() + \" (at: \" + this.date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2021-09-12"},{"lineNumber":71,"author":{"gitId":"sharmainec"},"content":"                + \" \" + time + \")\";","lastModifiedDate":"2021-09-12"},{"lineNumber":72,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":73,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":74,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":75,"author":{"gitId":"sharmainec"},"content":"     * Compares two objects, if both objects are Events and have the same name, date and time,","lastModifiedDate":"2021-09-12"},{"lineNumber":76,"author":{"gitId":"sharmainec"},"content":"     * then they will be considered equal.","lastModifiedDate":"2021-09-12"},{"lineNumber":77,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":78,"author":{"gitId":"sharmainec"},"content":"     * @param obj Object to be compared to.","lastModifiedDate":"2021-09-12"},{"lineNumber":79,"author":{"gitId":"sharmainec"},"content":"     * @return True if objects are equal, false otherwise.","lastModifiedDate":"2021-09-12"},{"lineNumber":80,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":81,"author":{"gitId":"sharmainec"},"content":"    @Override","lastModifiedDate":"2021-09-12"},{"lineNumber":82,"author":{"gitId":"sharmainec"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-09-12"},{"lineNumber":83,"author":{"gitId":"sharmainec"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2021-09-12"},{"lineNumber":84,"author":{"gitId":"sharmainec"},"content":"            return true;","lastModifiedDate":"2021-09-12"},{"lineNumber":85,"author":{"gitId":"sharmainec"},"content":"        } else if (obj instanceof Events) {","lastModifiedDate":"2021-09-12"},{"lineNumber":86,"author":{"gitId":"sharmainec"},"content":"            Events e \u003d (Events) obj;","lastModifiedDate":"2021-09-12"},{"lineNumber":87,"author":{"gitId":"sharmainec"},"content":"            return this.description.equals(e.description) \u0026\u0026 this.date.equals(e.date) \u0026\u0026 this.time.equals(e.time);","lastModifiedDate":"2021-09-12"},{"lineNumber":88,"author":{"gitId":"sharmainec"},"content":"        } else {","lastModifiedDate":"2021-09-12"},{"lineNumber":89,"author":{"gitId":"sharmainec"},"content":"            return false;","lastModifiedDate":"2021-09-12"},{"lineNumber":90,"author":{"gitId":"sharmainec"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":91,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":92,"author":{"gitId":"sharmainec"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"sharmainec":92}},{"path":"src/main/java/tokio/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharmainec"},"content":"package tokio.tasks;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"sharmainec"},"content":"import tokio.commands.Instruction;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"sharmainec"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"sharmainec"},"content":" * Represents a task in Viper.","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"sharmainec"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"sharmainec"},"content":"public class Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"sharmainec"},"content":"    protected String description;","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"sharmainec"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"sharmainec"},"content":"    protected Instruction type;","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"sharmainec"},"content":"     * Initialises a task with description and its type.","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"sharmainec"},"content":"     * @param description Description of given task.","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"sharmainec"},"content":"     * @param type Type of task, can be either Todo, event or deadline.","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"sharmainec"},"content":"    public Task(String description, Instruction type) {","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"sharmainec"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"sharmainec"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"sharmainec"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"sharmainec"},"content":"     * Returns the status of task","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"sharmainec"},"content":"     * @return X if true, \" \" if false","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"sharmainec"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"sharmainec"},"content":"        return (isDone ? \"✓\" : \"✗\"); // mark done task with X","lastModifiedDate":"2021-09-12"},{"lineNumber":31,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"sharmainec"},"content":"     * Sets isDone of Task to true when task is done","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"sharmainec"},"content":"    public void setDone() {","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"sharmainec"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":41,"author":{"gitId":"sharmainec"},"content":"     * Formats each task to indicate its type.","lastModifiedDate":"2021-09-12"},{"lineNumber":42,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":43,"author":{"gitId":"sharmainec"},"content":"     * @return String message with Type and description.","lastModifiedDate":"2021-09-12"},{"lineNumber":44,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":45,"author":{"gitId":"sharmainec"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"sharmainec"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"sharmainec"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + description;","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"sharmainec"},"content":"    ","lastModifiedDate":"2021-09-12"},{"lineNumber":50,"author":{"gitId":"sharmainec"},"content":"    public String formatToStorage() {","lastModifiedDate":"2021-09-12"},{"lineNumber":51,"author":{"gitId":"sharmainec"},"content":"        return \"[\" + (this.isDone ? \"X\" : \" \") + \"] \" + description;","lastModifiedDate":"2021-09-12"},{"lineNumber":52,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":53,"author":{"gitId":"sharmainec"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"sharmainec":53}},{"path":"src/main/java/tokio/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharmainec"},"content":"package tokio.tasks;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"sharmainec"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"sharmainec"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"sharmainec"},"content":" * Contains the list of tasks and methods for the list.","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"sharmainec"},"content":" * Methods include adding tasks and deleting tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"sharmainec"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"sharmainec"},"content":"public class TaskList {","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"sharmainec"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"sharmainec"},"content":"     * Constructor used when task list needs to be created.","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"sharmainec"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"sharmainec"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"sharmainec"},"content":"     * Constructor used when task list already exists.","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"sharmainec"},"content":"     * @param tasks Task list.","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"sharmainec"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"sharmainec"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"sharmainec"},"content":"     * Adds newTask into the current task list.","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"sharmainec"},"content":"     * @param newTask Task to be added.","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"sharmainec"},"content":"    public boolean addTask(Task newTask) {","lastModifiedDate":"2021-09-12"},{"lineNumber":34,"author":{"gitId":"sharmainec"},"content":"        if (tasks.contains(newTask)) {","lastModifiedDate":"2021-09-12"},{"lineNumber":35,"author":{"gitId":"sharmainec"},"content":"            return false;","lastModifiedDate":"2021-09-12"},{"lineNumber":36,"author":{"gitId":"sharmainec"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":37,"author":{"gitId":"sharmainec"},"content":"        tasks.add(newTask);","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"sharmainec"},"content":"        return true;","lastModifiedDate":"2021-09-12"},{"lineNumber":39,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"sharmainec"},"content":"     * Gets the task using the index specified.","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"sharmainec"},"content":"     * @param index Index of task in task list.","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"sharmainec"},"content":"     * @return Task with specified index.","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"sharmainec"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"sharmainec"},"content":"        return tasks.get(index);","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"sharmainec"},"content":"     * Gets the size of a task list.","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"sharmainec"},"content":"     * @return Size of task list.","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"sharmainec"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"sharmainec"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"sharmainec"},"content":"     * Removes task using the index specified.","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"sharmainec"},"content":"     * @param index Index of task in task list.","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"sharmainec"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"sharmainec"},"content":"        tasks.remove(index);","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"sharmainec"},"content":"     * Marks task using the index specified as done.","lastModifiedDate":"2021-09-02"},{"lineNumber":71,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":72,"author":{"gitId":"sharmainec"},"content":"     * @param index Index of task in task list","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"sharmainec"},"content":"    public void doneTask(int index) {","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"sharmainec"},"content":"        if (index \u003c tasks.size()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"sharmainec"},"content":"            tasks.get(index).setDone();","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"sharmainec"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":81,"author":{"gitId":"sharmainec"},"content":"     * Finds tasks from taskList using keyword.","lastModifiedDate":"2021-09-02"},{"lineNumber":82,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":83,"author":{"gitId":"sharmainec"},"content":"     * @param keyword User input to search for.","lastModifiedDate":"2021-09-02"},{"lineNumber":84,"author":{"gitId":"sharmainec"},"content":"     * @return TaskList only containing items with specified keyword.","lastModifiedDate":"2021-09-02"},{"lineNumber":85,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":86,"author":{"gitId":"sharmainec"},"content":"    public TaskList findTask(String keyword) {","lastModifiedDate":"2021-08-31"},{"lineNumber":87,"author":{"gitId":"sharmainec"},"content":"        ArrayList\u003cTask\u003e resultTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-31"},{"lineNumber":88,"author":{"gitId":"sharmainec"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-31"},{"lineNumber":89,"author":{"gitId":"sharmainec"},"content":"            Task currTask \u003d tasks.get(i);","lastModifiedDate":"2021-08-31"},{"lineNumber":90,"author":{"gitId":"sharmainec"},"content":"            if (currTask.toString().contains(keyword)) {","lastModifiedDate":"2021-08-31"},{"lineNumber":91,"author":{"gitId":"sharmainec"},"content":"                resultTasks.add(currTask);","lastModifiedDate":"2021-08-31"},{"lineNumber":92,"author":{"gitId":"sharmainec"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":93,"author":{"gitId":"sharmainec"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":94,"author":{"gitId":"sharmainec"},"content":"        return new TaskList(resultTasks);","lastModifiedDate":"2021-08-31"},{"lineNumber":95,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":96,"author":{"gitId":"sharmainec"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"sharmainec":96}},{"path":"src/main/java/tokio/tasks/Todos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharmainec"},"content":"package tokio.tasks;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"sharmainec"},"content":"import tokio.commands.Instruction;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"sharmainec"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"sharmainec"},"content":" * Represents a todo task.","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"sharmainec"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"sharmainec"},"content":"public class Todos extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"sharmainec"},"content":"    protected String description;","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"sharmainec"},"content":"    ","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"sharmainec"},"content":"     * Constructor for Todo with description provided by user.","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"sharmainec"},"content":"     * @param description Description of Todo item.","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"sharmainec"},"content":"    public Todos(String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"sharmainec"},"content":"        super(description, Instruction.TODO);","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"sharmainec"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"sharmainec"},"content":"     * Formats tasks for user display.","lastModifiedDate":"2021-09-12"},{"lineNumber":23,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":24,"author":{"gitId":"sharmainec"},"content":"     * @return Formatted todo task for user display.","lastModifiedDate":"2021-09-12"},{"lineNumber":25,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":26,"author":{"gitId":"sharmainec"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"sharmainec"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"sharmainec"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":32,"author":{"gitId":"sharmainec"},"content":"     * Formats tasks for storage purposes.","lastModifiedDate":"2021-09-12"},{"lineNumber":33,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":34,"author":{"gitId":"sharmainec"},"content":"     * @return Formatted todo task for storage purposes.","lastModifiedDate":"2021-09-12"},{"lineNumber":35,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":36,"author":{"gitId":"sharmainec"},"content":"    @Override","lastModifiedDate":"2021-09-12"},{"lineNumber":37,"author":{"gitId":"sharmainec"},"content":"    public String formatToStorage() {","lastModifiedDate":"2021-09-12"},{"lineNumber":38,"author":{"gitId":"sharmainec"},"content":"        return \"[T]\" + super.formatToStorage();","lastModifiedDate":"2021-09-12"},{"lineNumber":39,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":40,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":41,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":42,"author":{"gitId":"sharmainec"},"content":"     * Compares two objects, if both objects are Todos and have the same name,","lastModifiedDate":"2021-09-12"},{"lineNumber":43,"author":{"gitId":"sharmainec"},"content":"     * then they will be considered equal.","lastModifiedDate":"2021-09-12"},{"lineNumber":44,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":45,"author":{"gitId":"sharmainec"},"content":"     * @param obj Object to be compared to.","lastModifiedDate":"2021-09-12"},{"lineNumber":46,"author":{"gitId":"sharmainec"},"content":"     * @return True is objects are equal, false otherwise.","lastModifiedDate":"2021-09-12"},{"lineNumber":47,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":48,"author":{"gitId":"sharmainec"},"content":"    @Override","lastModifiedDate":"2021-09-12"},{"lineNumber":49,"author":{"gitId":"sharmainec"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-09-12"},{"lineNumber":50,"author":{"gitId":"sharmainec"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2021-09-12"},{"lineNumber":51,"author":{"gitId":"sharmainec"},"content":"            return true;","lastModifiedDate":"2021-09-12"},{"lineNumber":52,"author":{"gitId":"sharmainec"},"content":"        } else if (obj instanceof Todos) {","lastModifiedDate":"2021-09-12"},{"lineNumber":53,"author":{"gitId":"sharmainec"},"content":"            Todos t \u003d (Todos) obj;","lastModifiedDate":"2021-09-12"},{"lineNumber":54,"author":{"gitId":"sharmainec"},"content":"            return this.description.equals(t.description);","lastModifiedDate":"2021-09-12"},{"lineNumber":55,"author":{"gitId":"sharmainec"},"content":"        } else {","lastModifiedDate":"2021-09-12"},{"lineNumber":56,"author":{"gitId":"sharmainec"},"content":"            return false;","lastModifiedDate":"2021-09-12"},{"lineNumber":57,"author":{"gitId":"sharmainec"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":58,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":59,"author":{"gitId":"sharmainec"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"sharmainec":59}},{"path":"src/main/java/tokio/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharmainec"},"content":"package tokio.ui;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"sharmainec"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"sharmainec"},"content":"import tokio.tasks.Task;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"sharmainec"},"content":"import tokio.tasks.TaskList;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"sharmainec"},"content":"/**","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"sharmainec"},"content":" * deals with interactions with the user.","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"sharmainec"},"content":" */","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"sharmainec"},"content":"public class Ui {","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"sharmainec"},"content":"     * Reads line of command.","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"sharmainec"},"content":"     * @return String of command.","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"sharmainec"},"content":"    public String readCommand() {","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"sharmainec"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"sharmainec"},"content":"        return sc.nextLine();","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"sharmainec"},"content":"     * Prints welcome message, to be shown when Duke starts up at the beginning.","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"sharmainec"},"content":"    public String printWelcome() {","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"sharmainec"},"content":"        return \"Hola Rio!\\n\" + \"I am your chatbot, Tokio.\\n\" + \"Let me know what do you need help in!\";","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"sharmainec"},"content":"     * Prints bye message, to be shown when user terminates Duke with \"Bye\" command.","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"sharmainec"},"content":"    public String printBye() {","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"sharmainec"},"content":"        return \"Come back soon Rio! \\n\" + \"I\u0027ll miss you \u003c3\";","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"sharmainec"},"content":"     * Shows all the items in the task list.","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"sharmainec"},"content":"     * @param tasks Task list to be printed.","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"sharmainec"},"content":"    public String printList(TaskList tasks) {","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"sharmainec"},"content":"        StringBuilder listMsg \u003d new StringBuilder(\"Sure Rio! Here\u0027s everything on your list:\\n\");","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"sharmainec"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"sharmainec"},"content":"            int taskNo \u003d i + 1;","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"sharmainec"},"content":"            Task curr \u003d tasks.getTask(i);","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"sharmainec"},"content":"            listMsg.append(taskNo).append(\". \").append(curr.toString()).append(\"\\n\");","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"sharmainec"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"sharmainec"},"content":"        return listMsg.toString();","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"sharmainec"},"content":"     * Prints the entire tasks list when user uses \"find\" command.","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"sharmainec"},"content":"     * @param taskList Task list to be printed.","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"sharmainec"},"content":"     * @param keyword Search task list and only print items that matches the keyword.","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"sharmainec"},"content":"    public String printFindResults(TaskList taskList, String keyword) {","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"sharmainec"},"content":"        StringBuilder findResultsMsg;","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"sharmainec"},"content":"        if (taskList.getSize() \u003e 0) {","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"sharmainec"},"content":"            findResultsMsg \u003d new StringBuilder(\"Sure Rio!\\n\" + \"This is what I have found based on the keyword: \\\"\"","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"sharmainec"},"content":"                    + keyword + \"\\\"\\n\");","lastModifiedDate":"2021-09-08"},{"lineNumber":62,"author":{"gitId":"sharmainec"},"content":"            for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"sharmainec"},"content":"                int taskNo \u003d i + 1;","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"sharmainec"},"content":"                Task curr \u003d taskList.getTask(i);","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"sharmainec"},"content":"                findResultsMsg.append(taskNo).append(\". \").append(curr.toString()).append(\"\\n\");","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"sharmainec"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":67,"author":{"gitId":"sharmainec"},"content":"        } else {","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"sharmainec"},"content":"            findResultsMsg \u003d new StringBuilder(\"Oops Rio, based on your keyword: \\\"\"","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"sharmainec"},"content":"                    + keyword + \"\\\", I am not able to find any match :(\");","lastModifiedDate":"2021-09-08"},{"lineNumber":70,"author":{"gitId":"sharmainec"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":71,"author":{"gitId":"sharmainec"},"content":"        return findResultsMsg.toString();","lastModifiedDate":"2021-09-05"},{"lineNumber":72,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":73,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":74,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":75,"author":{"gitId":"sharmainec"},"content":"     * Prints success message when task has been added to task list successfully.","lastModifiedDate":"2021-09-05"},{"lineNumber":76,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":77,"author":{"gitId":"sharmainec"},"content":"     * @param task Task to be added.","lastModifiedDate":"2021-09-05"},{"lineNumber":78,"author":{"gitId":"sharmainec"},"content":"     * @param taskList Task list which task will be added it.","lastModifiedDate":"2021-09-05"},{"lineNumber":79,"author":{"gitId":"sharmainec"},"content":"     * @return Success message.","lastModifiedDate":"2021-09-05"},{"lineNumber":80,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":81,"author":{"gitId":"sharmainec"},"content":"    public String printAddCommand(Task task, TaskList taskList) {","lastModifiedDate":"2021-09-05"},{"lineNumber":82,"author":{"gitId":"sharmainec"},"content":"        return \"Sure Rio! I Have added \\\"\" + task.toString() + \"\\\" to your list.\\n\"","lastModifiedDate":"2021-09-08"},{"lineNumber":83,"author":{"gitId":"sharmainec"},"content":"                + \"You have a total of \" + taskList.getSize() + \" tasks on your list!\";","lastModifiedDate":"2021-09-12"},{"lineNumber":84,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":85,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":86,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":87,"author":{"gitId":"sharmainec"},"content":"     * Prints success message when task is marked as done successfully.","lastModifiedDate":"2021-09-05"},{"lineNumber":88,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":89,"author":{"gitId":"sharmainec"},"content":"     * @param task Task to be marked as done.","lastModifiedDate":"2021-09-05"},{"lineNumber":90,"author":{"gitId":"sharmainec"},"content":"     * @param taskList Task list which task is from.","lastModifiedDate":"2021-09-05"},{"lineNumber":91,"author":{"gitId":"sharmainec"},"content":"     * @return Success message.","lastModifiedDate":"2021-09-05"},{"lineNumber":92,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":93,"author":{"gitId":"sharmainec"},"content":"    public String printDoneCommand(Task task, TaskList taskList) {","lastModifiedDate":"2021-09-05"},{"lineNumber":94,"author":{"gitId":"sharmainec"},"content":"        return \"Good job on completing your task Rio!\\n\" + \"I have marked this task as done: \\\"\"","lastModifiedDate":"2021-09-08"},{"lineNumber":95,"author":{"gitId":"sharmainec"},"content":"                + task.toString() + \"\\\"\\n\" + \"You have \" + taskList.getSize() + \" task(s) left on your list.\";","lastModifiedDate":"2021-09-12"},{"lineNumber":96,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":97,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":98,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":99,"author":{"gitId":"sharmainec"},"content":"     * Prints warning message to indicate that the task list is empty.","lastModifiedDate":"2021-09-05"},{"lineNumber":100,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":101,"author":{"gitId":"sharmainec"},"content":"     * @return Message.","lastModifiedDate":"2021-09-05"},{"lineNumber":102,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":103,"author":{"gitId":"sharmainec"},"content":"    public String printEmptyList() {","lastModifiedDate":"2021-09-05"},{"lineNumber":104,"author":{"gitId":"sharmainec"},"content":"        return \"Wow Rio, there\u0027s nothing on your list!\\n\"","lastModifiedDate":"2021-09-08"},{"lineNumber":105,"author":{"gitId":"sharmainec"},"content":"                + \"Feel free to let me know if you would like to add anything.\";","lastModifiedDate":"2021-09-05"},{"lineNumber":106,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":107,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":108,"author":{"gitId":"sharmainec"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":109,"author":{"gitId":"sharmainec"},"content":"     * Prints success message to indicate that task has been removed from task list.","lastModifiedDate":"2021-09-05"},{"lineNumber":110,"author":{"gitId":"sharmainec"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":111,"author":{"gitId":"sharmainec"},"content":"     * @param task Task to be deleted.","lastModifiedDate":"2021-09-05"},{"lineNumber":112,"author":{"gitId":"sharmainec"},"content":"     * @param taskList Task list which contains the task to be deleted.","lastModifiedDate":"2021-09-05"},{"lineNumber":113,"author":{"gitId":"sharmainec"},"content":"     * @return Success message.","lastModifiedDate":"2021-09-05"},{"lineNumber":114,"author":{"gitId":"sharmainec"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":115,"author":{"gitId":"sharmainec"},"content":"    public String printDeleteCommand(Task task, TaskList taskList) {","lastModifiedDate":"2021-09-05"},{"lineNumber":116,"author":{"gitId":"sharmainec"},"content":"        return \"Okay Rio, I have deleted this task from your list:\\n\" + task.toString()","lastModifiedDate":"2021-09-08"},{"lineNumber":117,"author":{"gitId":"sharmainec"},"content":"                + \"\\nYou have \" + taskList.getSize() + \" task(s) left on your list.\";","lastModifiedDate":"2021-09-12"},{"lineNumber":118,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":119,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":120,"author":{"gitId":"sharmainec"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"sharmainec":120}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"sharmainec"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"sharmainec"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"sharmainec"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"sharmainec"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"sharmainec"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"sharmainec"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"sharmainec"},"content":"\u003cfx:root alignment\u003d\"CENTER_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #000000;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"sharmainec"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"sharmainec"},"content":"        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"CENTER\" style\u003d\"-fx-background-radius: 12; -fx-label-padding: 10; -fx-background-color: #bd302c;\" text\u003d\"Label\" textFill\u003d\"WHITE\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"sharmainec"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"sharmainec"},"content":"            \u003cFont name\u003d\"Microsoft Sans Serif\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"sharmainec"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"sharmainec"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"sharmainec"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"sharmainec"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"sharmainec"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"sharmainec"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"sharmainec"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"sharmainec"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"sharmainec"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"sharmainec"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"sharmainec":23}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"sharmainec"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"sharmainec"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"sharmainec"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"sharmainec"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"sharmainec"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"sharmainec"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"sharmainec"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"sharmainec"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"sharmainec"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #000000; -fx-background: #000000;\" stylesheets\u003d\"@style.css\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"tokio.MainWindow\"\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"sharmainec"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"sharmainec"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Type your command here!\" style\u003d\"-fx-background-color: #000000; -fx-text-fill: #ffffff; -fx-background: #000000; -fx-control-inner-background-fx-control-inner-background: #000000; -fx-border-color: #303034; -fx-border-radius: 20;\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"sharmainec"},"content":"         \u003copaqueInsets\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"sharmainec"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"sharmainec"},"content":"         \u003c/opaqueInsets\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"sharmainec"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"sharmainec"},"content":"            \u003cInsets left\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"sharmainec"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"sharmainec"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"sharmainec"},"content":"            \u003cFont name\u003d\"Microsoft Sans Serif\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"sharmainec"},"content":"         \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"sharmainec"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: #bd302c; -fx-background-radius: 20; -fx-background: #000000;\" text\u003d\"Send\" textFill\u003d\"WHITE\"\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"sharmainec"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"sharmainec"},"content":"            \u003cFont name\u003d\"Microsoft Sans Serif\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"sharmainec"},"content":"         \u003c/font\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"sharmainec"},"content":"         \u003copaqueInsets\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"sharmainec"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"sharmainec"},"content":"         \u003c/opaqueInsets\u003e\u003c/Button\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"sharmainec"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #000000; -fx-background: #000000;\" styleClass\u003d\"edge-to-edge\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"sharmainec"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"sharmainec"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: #000000;\" /\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"sharmainec"},"content":"      \u003c/content\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"sharmainec"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"sharmainec"},"content":"  \u003c/children\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"sharmainec"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"sharmainec":36}},{"path":"src/test/java/CommandsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharmainec"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"sharmainec"},"content":"import tokio.commands.AddDeadlineCommand;","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"sharmainec"},"content":"import tokio.commands.AddEventCommand;","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"sharmainec"},"content":"import tokio.commands.AddTodoCommand;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"sharmainec"},"content":"import tokio.commands.ByeCommand;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"sharmainec"},"content":"import tokio.commands.Command;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"sharmainec"},"content":"import tokio.commands.ListCommand;","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"sharmainec"},"content":"import tokio.exceptions.DukeException;","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"sharmainec"},"content":"import tokio.parser.Parser;","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"sharmainec"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"sharmainec"},"content":"public class CommandsTest {","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"sharmainec"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"sharmainec"},"content":"    public void addCommandsTest() throws DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"sharmainec"},"content":"        Command userInput1 \u003d Parser.parse(\"todo homework\");","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"sharmainec"},"content":"        assertEquals(userInput1.getClass(), AddTodoCommand.class);","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"sharmainec"},"content":"        ","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"sharmainec"},"content":"        Command userInput2 \u003d Parser.parse(\"deadline quiz 1 /by 2021-11-10\");","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"sharmainec"},"content":"        assertEquals(userInput2.getClass(), AddDeadlineCommand.class);","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"sharmainec"},"content":"        Command userInput3 \u003d Parser.parse(\"event meeting 1 /at 2021-11-10 12:00\");","lastModifiedDate":"2021-09-12"},{"lineNumber":23,"author":{"gitId":"sharmainec"},"content":"        assertEquals(userInput3.getClass(), AddEventCommand.class);","lastModifiedDate":"2021-09-12"},{"lineNumber":24,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"sharmainec"},"content":"    ","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"sharmainec"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"sharmainec"},"content":"    public void byeCommandTest() throws DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"sharmainec"},"content":"        Command userInput2 \u003d Parser.parse(\"bye\");","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"sharmainec"},"content":"        assertEquals(userInput2.getClass(), ByeCommand.class);","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"sharmainec"},"content":"    ","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"sharmainec"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"sharmainec"},"content":"    public void listCommandTest() throws DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"sharmainec"},"content":"        Command userInput3 \u003d Parser.parse(\"list\");","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"sharmainec"},"content":"        assertEquals(userInput3.getClass(), ListCommand.class);","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"sharmainec"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"sharmainec":37}},{"path":"src/test/java/TasksTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharmainec"},"content":"import tokio.exceptions.DukeException;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"sharmainec"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"sharmainec"},"content":"import tokio.tasks.Deadlines;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"sharmainec"},"content":"import tokio.tasks.Events;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"sharmainec"},"content":"import tokio.tasks.Todos;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"sharmainec"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"sharmainec"},"content":"public class TasksTest {","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"sharmainec"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"sharmainec"},"content":"    public void addTodosTest() {","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"sharmainec"},"content":"        Todos userInput1 \u003d new Todos(\"homework\");","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"sharmainec"},"content":"        assertEquals(\"[T][ ] homework\", userInput1.formatToStorage());","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"sharmainec"},"content":"        ","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"sharmainec"},"content":"        Todos userInput2 \u003d new Todos(\"CS2103T tutorial\");","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"sharmainec"},"content":"        userInput2.setDone();","lastModifiedDate":"2021-09-12"},{"lineNumber":17,"author":{"gitId":"sharmainec"},"content":"        assertEquals(\"[T][X] CS2103T tutorial\", userInput2.formatToStorage());","lastModifiedDate":"2021-09-12"},{"lineNumber":18,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"sharmainec"},"content":"    ","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"sharmainec"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"sharmainec"},"content":"    public void addDeadlinesTest() throws DukeException {","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"sharmainec"},"content":"        Deadlines userInput3 \u003d new Deadlines(\"project submission\", \"2021-09-23\");","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"sharmainec"},"content":"        assertEquals(\"[D][ ] project submission (by: Sep 23 2021)\", userInput3.formatToStorage());","lastModifiedDate":"2021-09-12"},{"lineNumber":24,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"sharmainec"},"content":"        Deadlines userInput4 \u003d new Deadlines(\"CS2103T assignment 1 submission\", \"2021-10-10\");","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"sharmainec"},"content":"        userInput4.setDone();","lastModifiedDate":"2021-09-12"},{"lineNumber":27,"author":{"gitId":"sharmainec"},"content":"        assertEquals(\"[D][X] CS2103T assignment 1 submission (by: Oct 10 2021)\", userInput4.formatToStorage());","lastModifiedDate":"2021-09-12"},{"lineNumber":28,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"sharmainec"},"content":"    ","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"sharmainec"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"sharmainec"},"content":"    public void addEventsTest() throws DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"sharmainec"},"content":"        Events userInput5 \u003d new Events(\"online recital\", \"2021-09-01\", \"18:00\");","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"sharmainec"},"content":"        assertEquals(\"[E][ ] online recital (at: Sep 01 2021 18:00)\", userInput5.formatToStorage());","lastModifiedDate":"2021-09-12"},{"lineNumber":34,"author":{"gitId":"sharmainec"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"sharmainec"},"content":"        Events userInput6 \u003d new Events(\"NYE party!!!\", \"2021-12-31\", \"23:30\");","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"sharmainec"},"content":"        userInput6.setDone();","lastModifiedDate":"2021-09-12"},{"lineNumber":37,"author":{"gitId":"sharmainec"},"content":"        assertEquals(\"[E][X] NYE party!!! (at: Dec 31 2021 23:30)\", userInput6.formatToStorage());","lastModifiedDate":"2021-09-12"},{"lineNumber":38,"author":{"gitId":"sharmainec"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"sharmainec"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"sharmainec":39}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sharmainec"},"content":"todo read a book","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"sharmainec"},"content":"deadline homework / by 4pm","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"sharmainec"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"sharmainec"},"content":"event group meeting / at 2-4pm","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"sharmainec"},"content":"done 3","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"sharmainec"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"sharmainec"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"sharmainec":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"sharmainec"},"content":"java -classpath ..\\bin tokio.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"sharmainec":1,"-":20}}]
