[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zognin":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"    implementation \u0027junit:junit:4.12\u0027","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zognin":17,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"### Feature-ABC","lastModifiedDate":"2021-07-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Description of the feature.","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"### Feature-XYZ","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Description of the feature.","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"### `Keyword` - Describe command","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"Describe the command and its outcome.","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"`keyword (optional arguments)`","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Description of the outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2021-07-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"zognin":2,"-":27}},{"path":"src/main/java/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package command;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import exception.ErrorAccessingFile;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import exception.InvalidDateTimeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import exception.InvalidTaskTimeFormatException;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import exception.InvalidTaskTypeException;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import exception.MissingCommandDescriptionException;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import message.Message;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import tasklist.Task;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"import type.DukeCommandTypeEnum;","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":" * Encapsulates an add command after it is parsed from the user input.","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"    private String description;","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"    private DukeCommandTypeEnum commandType;","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"    private Task task;","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"    private TaskList list;","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"    private AddCommand(String description, DukeCommandTypeEnum commandType) {","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"     * Creates an `AddCommand`.","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"     * @param description Description from the command excluding the command type.","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"     * @param commandType Command type of the command.","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"     * @return `AddCommand`.","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"     * @throws MissingCommandDescriptionException If description is empty.","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"    public static AddCommand createCommand(String description, DukeCommandTypeEnum commandType)","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"            throws MissingCommandDescriptionException {","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"        // Validate before creating the action","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"        Command.validateDescriptionNotEmpty(commandType, description);","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"        return new AddCommand(description, commandType);","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"     * Executes an `AddCommand` by adding a new task to the list.","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"     * @param list `TaskList` containing all tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"     * @throws InvalidTaskTypeException If the task type is not valid.","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"     * @throws InvalidTaskTimeFormatException If a task meant to contain time information is not formatted properly.","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"     * @throws ErrorAccessingFile If there is an error accessing the storage file.","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"     * @throws InvalidDateTimeException If a task meant to contain time information has an invalid datetime format.","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"    public void execute(TaskList list) throws","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"            InvalidTaskTypeException,","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"            InvalidTaskTimeFormatException,","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"            ErrorAccessingFile,","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"            InvalidDateTimeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"        Task task \u003d Task.createTask(this.description, this.commandType);","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"        list.addTaskToList(task);","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"zognin"},"content":"     * Gets the output message representing the command is executed.","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"zognin"},"content":"     * @return `Message`.","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"zognin"},"content":"    public Message getOutputMessage() {","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"zognin"},"content":"        String prefix \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"zognin"},"content":"        int numOfTasks \u003d list.getNumberOfTasks();","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"zognin"},"content":"        String taskWord \u003d numOfTasks \u003d\u003d 1 ? \"task\" : \"tasks\";","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"zognin"},"content":"        String suffix \u003d String.format(\"Now you have %d %s in the list\", list.getNumberOfTasks(), taskWord);","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"zognin"},"content":"        return new Message(prefix, task.toString(), suffix, \"(＾＾)b\");","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"zognin":75}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package command;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import exception.DukeException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import exception.InvalidTaskNumberException;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import exception.MissingCommandDescriptionException;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import message.Message;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import type.DukeCommandTypeEnum;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":" * Encapsulates a command after it is parsed from the user input.","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"     * Gets task number from a message.","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"     * @param message Message from the user.","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"     * @return Integer task number.","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"     * @throws InvalidTaskNumberException If the message is not a number.","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"    public static int getTaskNumberFromMessage(String message) throws InvalidTaskNumberException {","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"            String trimmedMessage \u003d message.trim();","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"            return Integer.parseInt(trimmedMessage);","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"            throw new InvalidTaskNumberException(message);","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"     * Validates that the command description is not empty.","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"     * @param commandType Command type of the command.","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"     * @param description Description from the command excluding the command type.","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"     * @throws MissingCommandDescriptionException If description is empty.","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"    public static void validateDescriptionNotEmpty(DukeCommandTypeEnum commandType, String description)","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"            throws MissingCommandDescriptionException {","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"            throw new MissingCommandDescriptionException(commandType.toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"     * Executes a specific command.","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"     * @param list `TaskList` containing all tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"     * @throws DukeException If there is any error.","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"    public abstract void execute(TaskList list) throws DukeException;","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"     * Gets the output message representing the command is done.","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"     * @return `Message`.","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"    public abstract Message getOutputMessage();","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"zognin":58}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package command;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import exception.ErrorAccessingFile;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import exception.InvalidTaskNumberException;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import exception.MissingCommandDescriptionException;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import exception.NonExistentTaskNumberException;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import message.Message;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import tasklist.Task;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"import type.DukeCommandTypeEnum;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":" * Encapsulates a delete command after it is parsed from the user input.","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"    private int taskNumber;","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"    private Task task;","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"    private TaskList list;","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"    private DeleteCommand(int taskNumber) {","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"     * Creates a `DeleteCommand`.","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"     * @param description Description from the command excluding the command type.","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"     * @return `DeleteCommand`.","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"     * @throws InvalidTaskNumberException If task number in description is not a number.","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"     * @throws MissingCommandDescriptionException If description is empty.","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"    public static DeleteCommand createCommand(String description) throws","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"            InvalidTaskNumberException,","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"            MissingCommandDescriptionException {","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"        // Validate before creating the action","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"        Command.validateDescriptionNotEmpty(DukeCommandTypeEnum.DELETE, description);","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"        return new DeleteCommand(Command.getTaskNumberFromMessage(description));","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"     * Executes a `DeleteCommand` by deleting a task from the list.","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"     * @param list `TaskList` containing all tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"     * @throws NonExistentTaskNumberException If the task number does not exist in the list.","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"     * @throws ErrorAccessingFile If there is an error accessing the storage file.","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"    public void execute(TaskList list) throws NonExistentTaskNumberException, ErrorAccessingFile {","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"        this.task \u003d list.deleteTaskFromList(this.taskNumber);","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"     * Gets the output message representing the command is executed.","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"     * @return `Message`.","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"    public Message getOutputMessage() {","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"        String prefix \u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"        int numOfTasks \u003d list.getNumberOfTasks();","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"zognin"},"content":"        String taskWord \u003d numOfTasks \u003d\u003d 1 ? \"task\" : \"tasks\";","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"        String suffix \u003d String.format(\"Now you have %d %s in the list\", list.getNumberOfTasks(), taskWord);","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"        return new Message(prefix, task.toString(), suffix, \"(＾＾)b\");","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"zognin":65}},{"path":"src/main/java/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package command;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import exception.ErrorAccessingFile;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import exception.InvalidTaskNumberException;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import exception.MissingCommandDescriptionException;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import exception.NonExistentTaskNumberException;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import message.Message;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import tasklist.Task;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"import type.DukeCommandTypeEnum;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":" * Encapsulates a done command after it is parsed from the user input.","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"    private int taskNumber;","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"    private Task task;","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"    private DoneCommand(int taskNumber) {","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"     * Creates a `DoneCommand`.","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"     * @param description Description from the command excluding the command type.","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"     * @return `DoneCommand`.","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"     * @throws InvalidTaskNumberException If task number in description is not a number.","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"     * @throws MissingCommandDescriptionException If description is empty.","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"    public static DoneCommand createCommand(String description)","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"            throws InvalidTaskNumberException, MissingCommandDescriptionException {","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"        // Validate before creating the action","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"        Command.validateDescriptionNotEmpty(DukeCommandTypeEnum.DONE, description);","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"        return new DoneCommand(Command.getTaskNumberFromMessage(description));","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"     * Executes a `DoneCommand` marking a task in the list as done.","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"     * @param list `TaskList` containing all tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"     * @throws NonExistentTaskNumberException If the task number does not exist in the list.","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"     * @throws ErrorAccessingFile If there is an error accessing the storage file.","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"    public void execute(TaskList list) throws NonExistentTaskNumberException, ErrorAccessingFile {","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"        this.task \u003d list.markTaskAsDone(taskNumber);","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"     * Gets the output message representing the command is executed.","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"     * @return `Message`.","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"    public Message getOutputMessage() {","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"        String prefix \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"        return new Message(prefix, task.toString(), \"≧(´▽｀)≦\");","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"zognin":59}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package command;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import exception.MissingCommandDescriptionException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import message.Message;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import type.DukeCommandTypeEnum;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":" * Encapsulates a done command after it is parsed from user input.","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"    private String keyword;","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"    private TaskList list;","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"    private FindCommand(String keyword) {","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"     * Creates a `FindCommand`.","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"     * @param keyword Keyword to search with.","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"     * @return `FindCommand`.","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"     * @throws MissingCommandDescriptionException If description is empty.","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"    public static FindCommand createCommand(String keyword) throws MissingCommandDescriptionException {","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"        // Validate before creating the command","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"        Command.validateDescriptionNotEmpty(DukeCommandTypeEnum.FIND, keyword);","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"        return new FindCommand(keyword);","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"     * Executes a `DoneCommand` to return a list with tasks that match the keyword.","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"     * @param list List containing matching tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"    public void execute(TaskList list) {","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"        this.list \u003d list.getListContainingKeyword(this.keyword);","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"     * Gets the output message representing the command is executed.","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"     * @return `Message`.","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"    public Message getOutputMessage() {","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"        return new Message(\"Here are the matching tasks in your list:\", this.list.toString(), \"ヽ(°〇°)ﾉ\");","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"zognin":50}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package command;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import message.Message;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":" * Encapsulates a list command after it is parsed from the user input.","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"    private TaskList list;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"     * Creates a `ListCommand`.","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"     * @return `ListCommand`.","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"    public static ListCommand createCommand() {","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"        return new ListCommand();","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"     * Executes a `ListCommand` by retrieving the list.","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"     * @param list `TaskList` containing all tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"    public void execute(TaskList list) {","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"     * Gets the output message representing the command is executed.","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"     * @return `Message`.","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"    public Message getOutputMessage() {","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"        return new Message(\"Here are the tasks in your list:\", this.list.toString(), \"ヽ(°〇°)ﾉ\");","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"zognin":38}},{"path":"src/main/java/controller/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package controller;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"import javafx.scene.shape.Ellipse;","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"    private String userDialogStyle \u003d","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"            \"-fx-background-color: #74D9CA; -fx-padding: 8 16 8 16; -fx-background-radius: 5;\";","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"    private String dukeDialogStyle \u003d","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"            \"-fx-background-color: #F7EFC1; -fx-padding: 8 16 8 16; -fx-background-radius: 5;\";","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"    private Ellipse displayPictureClip \u003d new Ellipse(50, 50, 40, 40);","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"    @FXML","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"    @FXML","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"    @FXML","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"    private void initialize() {","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"        dialog.setStyle(userDialogStyle);","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"        displayPicture.setClip(displayPictureClip);","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"    private void flip() {","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"zognin"},"content":"        db.flip();","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"zognin"},"content":"        db.dialog.setStyle(db.dukeDialogStyle);","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"zognin"},"content":"        return db;","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"zognin":68}},{"path":"src/main/java/controller/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package controller;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"import message.Message;","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"    @FXML","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"    @FXML","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"    @FXML","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"    @FXML","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.png\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"     * Instantiates the controller to render the main chat window with scrollbar and user input.","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"     * @param duke Duke to process inputs.","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"    public MainWindow(Duke duke) {","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"            this.duke \u003d duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"     * Initializes the main window after variables are set.","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"    @FXML","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"        // Greet user","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"        Message greetingMessage \u003d new Message(\"Hello! I\u0027m Duke, what shall we do today?\", \"٩(｡•́‿•̀｡)۶\");","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(greetingMessage.toString(), dukeImage));","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"zognin"},"content":"    @FXML","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"zognin"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"zognin"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"zognin"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"zognin"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"zognin"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"zognin"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"zognin"},"content":"        );","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"zognin"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"zognin":75}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import command.Command;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import exception.DukeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import parser.Parser;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import storage.StorageFile;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":" * Encapsulates a chatbot that greets the user,","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":" * adds valid inputs to a task list,","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":" * updates tasks in the list,","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":" * and exits when the user types `bye`.","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"    private TaskList list;","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"    private Parser parser;","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"     * Instantiates a `Duke` chat bot.","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"    public Duke() {","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"        // Load data","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"        StorageFile storageFile \u003d Storage.loadListFile();","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"        // Scan data to a list","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"        TaskList list \u003d Storage.scanListFileDataToList(storageFile);","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"        try {","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"            if (this.parser.detectExitCommand(input)) {","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"                Platform.exit();","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"            Command command \u003d this.parser.makeCommand(input);","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"            command.execute(this.list);","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"            return command.getOutputMessage().toString();","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"            return e.getOutputMessage().toString();","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"zognin":45,"-":3}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"public class Launcher {","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"    public static void main(String ...args) {","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"zognin":9}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import controller.MainWindow;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"        MainWindow mainWindow \u003d new MainWindow(duke);","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"        Scene scene \u003d new Scene(mainWindow);","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"        stage.setScene(scene);","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"        stage.setResizable(false);","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"        stage.show();","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"zognin":22}},{"path":"src/main/java/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import message.ErrorMessage;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":" * Encapsulates an exception that contains a method to get an `ErrorMessage`.","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"    protected DukeException(String message) {","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"        super(message);","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"     * Gets an output message containing information about why the error occured.","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"     * And/or how the user can correct the error.","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"     * @return `ErrorMessage`.","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"    public ErrorMessage getOutputMessage() {","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"        return new ErrorMessage(this.getMessage());","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"zognin":22}},{"path":"src/main/java/exception/ErrorAccessingFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":" * Encapsulates an exception when there is an error accessing a storage file.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"public class ErrorAccessingFile extends DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"    public ErrorAccessingFile(String action) {","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"        super(String.format(\"Error accessing file when trying to %s\", action));","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"zognin":10}},{"path":"src/main/java/exception/InvalidDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":" * Encapsulates an exception when an input has an invalid datetime format.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"public class InvalidDateTimeException extends DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"    public InvalidDateTimeException(String format) {","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"        super(String.format(\"Please enter a valid datetime in the form of \u0027%s\u0027\", format));","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"zognin":10}},{"path":"src/main/java/exception/InvalidTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":" * Encapsulates an exception when an input meant to be a task number cannot be parsed into a number.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"public class InvalidTaskNumberException extends DukeException {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"    public InvalidTaskNumberException(String input) {","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"        super(String.format(\"%s is not a valid number\", input));","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"zognin":10}},{"path":"src/main/java/exception/InvalidTaskTimeFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":" * Encapsulates an exception when a task meant to carry time information is incorrectly formatted.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"public class InvalidTaskTimeFormatException extends DukeException {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"     * Instantiates an exception when a task meant to carry time information is incorrectly formatted.","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"     * @param taskType Type of task.","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"     * @param timeSplitter Keyword before the time information.","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"    public InvalidTaskTimeFormatException(String taskType, String timeSplitter) {","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"        super(String.format(","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"            \"Please enter a valid %s task in the form of X %s Y, where X is an action and Y is a time\",","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"            taskType,","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"            timeSplitter","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"        ));","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"zognin":20}},{"path":"src/main/java/exception/InvalidTaskTypeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import type.DukeCommandTypeEnum;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":" * Encapsulates an exception when a user inputs an invalid task.","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"public class InvalidTaskTypeException extends DukeException {","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"     * Instantiates an exception when a user inputs an invalid task.","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"     * @param commandType Command type that is incorrectly used as a task.","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"    public InvalidTaskTypeException(DukeCommandTypeEnum commandType) {","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"        super(String.format(","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"                \"\u0027%s\u0027 is not a valid task type. \"","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"                        + \"Tasks should begin with one of the following: todo, deadline, event\",","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"                commandType","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"        ));","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"zognin":21}},{"path":"src/main/java/exception/MissingCommandDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":" * Encapsulates an exception when a user inputs a command with an empty description,","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":" * but the command requires a description.","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"public class MissingCommandDescriptionException extends DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"     * Instantiates an exception when a user inputs a command with an empty description.","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"     * @param commandType Command type.","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"    public MissingCommandDescriptionException(String commandType) {","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"        super(String.format(","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"                \"The description of a %s command cannot be empty\",","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"                commandType","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"        ));","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"zognin":19}},{"path":"src/main/java/exception/NonExistentCommandTypeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":" * Encapsulates an exception when a user inputs a command that is not recognised.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"public class NonExistentCommandTypeException extends DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"     * Instantiates an exception when a user inputs a command that is not recognised.","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"     * @param inputMessage Input message.","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"    public NonExistentCommandTypeException(String inputMessage) {","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"        super(String.format(","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"                \"Sorry I do not recognise this command \u0027%s\u0027\",","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"                inputMessage","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"        ));","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"zognin":18}},{"path":"src/main/java/exception/NonExistentTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":" * Encapsulates an exception when the user inputs a task number that does not exist in the list.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"public class NonExistentTaskNumberException extends DukeException {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"     * Instantiates an exception when the user inputs a task number that does not exist in the list.","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"     * @param taskNumber Task number.","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"    public NonExistentTaskNumberException(int taskNumber) {","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"        super(String.format(\"Task %d does not exist in the list\", taskNumber));","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"zognin":15}},{"path":"src/main/java/message/ErrorMessage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package message;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":" * Encapsulates an error message for any errors that the user should be informed about.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"public class ErrorMessage extends Message {","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"    public ErrorMessage(String message) {","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"        super(message, \"｢(ﾟﾍﾟ)\");","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"zognin":10}},{"path":"src/main/java/message/Message.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package message;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":" * Encapsulates the base output message that Duke replies to the user.","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":" * It includes methods to format the output message.","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"public class Message {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"    private final String[] texts;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"    public Message(String ...texts) {","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"        this.texts \u003d texts;","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"     * Prints the formatted message for the user to see.","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"    public void print() {","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"        System.out.println(this.toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"    public String toString() {","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"        for (int i \u003d 0; i \u003c texts.length; i++) {","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"            stringBuilder.append(texts[i]);","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"            stringBuilder.append(\"\\n\");","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"        return stringBuilder.toString().trim();","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"zognin":31}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package parser;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import command.AddCommand;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import command.Command;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import command.DeleteCommand;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import command.DoneCommand;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import command.FindCommand;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import command.ListCommand;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import exception.InvalidTaskNumberException;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"import exception.MissingCommandDescriptionException;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"import exception.NonExistentCommandTypeException;","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"import type.DukeCommandTypeEnum;","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":" * Encapsulates a `Parser` that parses string inputs to commands or throws exceptions if they are invalid.","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"public class Parser {","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"    private static final String EXIT_COMMAND \u003d \"bye\";","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"     * Detects if an input is the exit command.","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"     * @param inputMessage Input string taken in by System.in.","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"     * @return True if it the input is the exit command, false otherwise.","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"    public boolean detectExitCommand(String inputMessage) {","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"        return inputMessage.trim().equals(EXIT_COMMAND);","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"     * Creates a command from the input string.","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"     * @param inputMessage Input string taken in by System.in.","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"     * @return `Command`.","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"     * @throws InvalidTaskNumberException If the `Command` has an invalid task number.","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"     * @throws NonExistentCommandTypeException If the `Command` has a command type that is not recognised.","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"     * @throws MissingCommandDescriptionException If the `Command` has a missing description.","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"    public Command makeCommand(String inputMessage)","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"            throws InvalidTaskNumberException, NonExistentCommandTypeException, MissingCommandDescriptionException {","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"        DukeCommandTypeEnum commandType \u003d getCommandType(inputMessage);","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"        String messageWithoutCommand \u003d removeCommandPrefix(inputMessage, commandType.toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"        String trimmedMessage \u003d messageWithoutCommand.trim();","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"        switch (commandType) {","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"        case LIST:","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"            return ListCommand.createCommand();","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"        case DONE:","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"            return DoneCommand.createCommand(trimmedMessage);","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"        case DELETE:","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"            return DeleteCommand.createCommand(trimmedMessage);","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"        case FIND:","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"            return FindCommand.createCommand(trimmedMessage);","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"        default:","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"            return AddCommand.createCommand(trimmedMessage, commandType);","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"    private DukeCommandTypeEnum getCommandType(String message) throws NonExistentCommandTypeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"        String trimmedMessage \u003d message.trim();","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"zognin"},"content":"        String[] messagesSplitUsingSpace \u003d trimmedMessage.split(\" \");","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"        String commandWord \u003d messagesSplitUsingSpace[0];","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"zognin"},"content":"        for (DukeCommandTypeEnum commandType : DukeCommandTypeEnum.values()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"zognin"},"content":"            int commandTypeLength \u003d commandType.toString().length();","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"zognin"},"content":"            if (commandWord.length() \u003e\u003d commandTypeLength \u0026\u0026 commandWord.equals(commandType.toString())) {","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"zognin"},"content":"                return commandType;","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"zognin"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"zognin"},"content":"        throw new NonExistentCommandTypeException(message);","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"zognin"},"content":"    private String removeCommandPrefix(String message, String command) {","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"zognin"},"content":"        return message.trim().substring(command.length());","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"zognin":77}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package storage;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import java.io.File;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import message.ErrorMessage;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import message.Message;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":" * Encapsulates the object handling data that is stored in the hard disk.","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"public class Storage {","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"    private static final String storageDirectoryPath \u003d \"./storage\";","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"     * Loads storage file containing the list.","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"     * Creates new storage file for the list if the file does not exist.","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"     * @return `StorageFile`.","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"    public static StorageFile loadListFile() {","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"            File directory \u003d new File(storageDirectoryPath);","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"            directory.mkdirs();","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"            String listFileName \u003d \"duke.txt\";","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"            String filePath \u003d String.format(\"%s/%s\", storageDirectoryPath, listFileName);","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"            return StorageFile.loadFile(filePath);","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"            Message message \u003d new ErrorMessage(\"There was a problem in loading the list data\");","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"            message.print();","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"            return null;","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"     * Scan data from the storage list to app representation of the list.","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"     * @param storageFile Storage file containing the list data.","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"     * @return App representation of the list.","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"    public static TaskList scanListFileDataToList(StorageFile storageFile) {","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"            TaskList list \u003d new TaskList(storageFile);","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"            storageFile.scanFileDataToList(list);","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"            return list;","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"            Message message \u003d new ErrorMessage(\"There was a problem in scanning the storage data to a list\");","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"            message.print();","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"            return null;","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"zognin":55}},{"path":"src/main/java/storage/StorageFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package storage;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import java.io.File;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"import java.util.List;","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"import tasklist.Task;","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":" * Encapsulates a storage file that handles data stored in one file in the hard disk.","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"public class StorageFile {","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"    private String filePath;","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"    private File file;","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"    private StorageFile(String filePath, File file) {","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"        this.file \u003d file;","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"     * Loads a file from the hard disk.","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"     * @param filePath Location of the file on the hard disk.","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"     * @return `StorageFile`.","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"     * @throws IOException If there is an exception in loading the file.","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"    public static StorageFile loadFile(String filePath) throws IOException {","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"        file.createNewFile();","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"        return new StorageFile(filePath, file);","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"     * Scans the file data to a given list.","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"     * @param list App representation of a list.","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"     * @throws FileNotFoundException If the file cannot be found in the hard disk.","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"    public void scanFileDataToList(TaskList list) throws FileNotFoundException {","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"        Scanner s \u003d new Scanner(this.file);","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"            String lineData \u003d s.nextLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"            list.scanExistingTaskToList(Task.createTaskFromStoredString(lineData));","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"     * Adds item to a new line at the end of the file in the hard disk.","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"     * @param item Item to be added.","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"     * @throws IOException If there is an exception when accessing the file.","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"    public void add(String item) throws IOException {","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath, true);","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"zognin"},"content":"        fw.write(item + System.lineSeparator());","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"zognin"},"content":"        fw.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"zognin"},"content":"     * Rewrites the file with new content.","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"zognin"},"content":"     * @param items Items to rewrite the new file with.","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"zognin"},"content":"     * @throws IOException If there is an exception when accessing the file.","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"zognin"},"content":"    public void rewriteFile(List\u003c?\u003e items) throws IOException {","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"zognin"},"content":"        List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"zognin"},"content":"        items.forEach((item) -\u003e lines.add(item.toString()));","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"zognin"},"content":"        Path path \u003d Paths.get(this.filePath);","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"zognin"},"content":"        Files.write(path, lines);","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"zognin":80}},{"path":"src/main/java/tasklist/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package tasklist;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import exception.InvalidDateTimeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import exception.InvalidTaskTimeFormatException;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import type.DukeCommandTypeEnum;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":" * Encapsulates a task with a deadline.","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":" * It inherits from `entity.list.DukeTask`.","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"    private static final String TIME_SPLITTER_INPUT \u003d \"/by\";","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"    private static final String TIME_SPLITTER_DATA \u003d \"\\\\(by:\";","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"    private static final String DEADLINE_INPUT_FORMAT \u003d \"dd-MM-yyyy HHmm\";","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"    private static final String DEADLINE_OUTPUT_FORMAT \u003d \"MMM d yyyy HHmm\";","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"    private DeadlineTask(String description, boolean isDone, LocalDateTime deadline) {","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"     * Processes the input string to create a deadline task with an action and deadline.","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"     * @param description Input task string.","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"     * @return App representation of a task containing an action description and deadline information.","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"    public static DeadlineTask createTask (String description) throws","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"            InvalidTaskTimeFormatException,","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"            InvalidDateTimeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"        // Split the description into its action and time parts","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"        String[] splitPartsUsingBy \u003d splitActionAndTime(","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"                description,","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"                DeadlineTask.TIME_SPLITTER_INPUT","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"        );","lastModifiedDate":"2021-08-14"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"        if (splitPartsUsingBy.length !\u003d 2) {","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"            throw new InvalidTaskTimeFormatException(","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"                    DukeCommandTypeEnum.DEADLINE.toString(),","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"                    DeadlineTask.TIME_SPLITTER_INPUT","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"            );","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"        String actionDescription \u003d splitPartsUsingBy[0];","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"        String dateTimeDescription \u003d splitPartsUsingBy[1];","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(DEADLINE_INPUT_FORMAT);","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"        try {","lastModifiedDate":"2021-08-14"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"            LocalDateTime deadline \u003d LocalDateTime.from(dateTimeFormatter.parse(dateTimeDescription));","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"            return new DeadlineTask(actionDescription, false, deadline);","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"            throw new InvalidDateTimeException(DEADLINE_INPUT_FORMAT);","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":61,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"     * Formats the task in string form, displaying the task type, status, description and deadline.","lastModifiedDate":"2021-08-14"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":64,"author":{"gitId":"zognin"},"content":"     * @return Task in a displayed string format.","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":66,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":67,"author":{"gitId":"zognin"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":68,"author":{"gitId":"zognin"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(DEADLINE_OUTPUT_FORMAT);","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"zognin"},"content":"        String formattedDeadline \u003d this.deadline.format(dateTimeFormatter);","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"zognin"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), formattedDeadline);","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":72,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"zognin"},"content":"     * Creates an app representation of a deadline task from the storage representation of the task.","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"zognin"},"content":"     * @param description Storage representation of a deadline task.","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"zognin"},"content":"     * @return App representation of a deadline task.","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"zognin"},"content":"    public static DeadlineTask createTaskFromStoredString(String description) {","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"zognin"},"content":"        String statusIcon \u003d description.substring(1, 2);","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"zognin"},"content":"        boolean isDone \u003d false;","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"zognin"},"content":"        if (statusIcon.equals(STATUS_ICON_DONE)) {","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"zognin"},"content":"            isDone \u003d true;","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"zognin"},"content":"        String[] splitPartsUsingBy \u003d splitActionAndTime(","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"zognin"},"content":"                description.substring(3),","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"zognin"},"content":"                TIME_SPLITTER_DATA","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"zognin"},"content":"        );","lastModifiedDate":"2021-08-21"},{"lineNumber":90,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":91,"author":{"gitId":"zognin"},"content":"        String actionDescription \u003d splitPartsUsingBy[0];","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"zognin"},"content":"        String deadlineWithClosingBracket \u003d splitPartsUsingBy[1];","lastModifiedDate":"2021-08-21"},{"lineNumber":93,"author":{"gitId":"zognin"},"content":"        String deadlineString \u003d deadlineWithClosingBracket.substring(0, deadlineWithClosingBracket.length() - 1);","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"zognin"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(DEADLINE_OUTPUT_FORMAT);","lastModifiedDate":"2021-08-21"},{"lineNumber":95,"author":{"gitId":"zognin"},"content":"        LocalDateTime deadline \u003d LocalDateTime.from(dateTimeFormatter.parse(deadlineString));","lastModifiedDate":"2021-08-21"},{"lineNumber":96,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":97,"author":{"gitId":"zognin"},"content":"        return new DeadlineTask(actionDescription, isDone, deadline);","lastModifiedDate":"2021-08-21"},{"lineNumber":98,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":99,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"zognin":99}},{"path":"src/main/java/tasklist/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package tasklist;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import exception.InvalidTaskTimeFormatException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import type.DukeCommandTypeEnum;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":" * Encapsulates a task with that will occur at a specified time period.","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":" * It inherits from `entity.list.DukeTask`.","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"public class EventTask extends Task {","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"    private static final String TIME_SPLITTER_INPUT \u003d \"/at\";","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"    private static final String TIME_SPLITTER_DATA \u003d \"\\\\(at:\";","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"    private final String time;","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"    private EventTask(String description, boolean isDone, String time) {","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"     * Processes the input string to create an event task with an action and time.","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"     * @param description Input task string.","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"     * @return App representation of a task containing an action description and time information.","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"    public static EventTask createTask (String description) throws InvalidTaskTimeFormatException {","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"        // Split the description into its action and time parts","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"        String[] splitPartsUsingAt \u003d splitActionAndTime(","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"                description,","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"                EventTask.TIME_SPLITTER_INPUT","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"        );","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"        try {","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"            return new EventTask(splitPartsUsingAt[0], false, splitPartsUsingAt[1]);","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"            throw new InvalidTaskTimeFormatException(","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"                    DukeCommandTypeEnum.EVENT.toString(),","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"                    EventTask.TIME_SPLITTER_INPUT","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"            );","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"     * Formats the task in string form, displaying the task type, status, description and time.","lastModifiedDate":"2021-08-14"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"     * @return Task in a displayed string format.","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), this.time);","lastModifiedDate":"2021-08-14"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"     * Creates an app representation of an event task from the storage representation of the task.","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"     * @param description Storage representation of an event task.","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"     * @return App representation of an event task.","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"    public static EventTask createTaskFromStoredString(String description) {","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"        String statusIcon \u003d description.substring(1, 2);","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"zognin"},"content":"        boolean isDone \u003d false;","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"        if (statusIcon.equals(STATUS_ICON_DONE)) {","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"            isDone \u003d true;","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"zognin"},"content":"        String[] splitPartsUsingBy \u003d splitActionAndTime(","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"zognin"},"content":"                description.substring(3),","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"zognin"},"content":"                TIME_SPLITTER_DATA","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"zognin"},"content":"        );","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"zognin"},"content":"        String actionDescription \u003d splitPartsUsingBy[0];","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"zognin"},"content":"        String timeWithClosingBracket \u003d splitPartsUsingBy[1];","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"zognin"},"content":"        String time \u003d timeWithClosingBracket.substring(0, timeWithClosingBracket.length() - 1);","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"zognin"},"content":"        return new EventTask(actionDescription, isDone, time);","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"zognin":77}},{"path":"src/main/java/tasklist/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package tasklist;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import exception.InvalidDateTimeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import exception.InvalidTaskTimeFormatException;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import exception.InvalidTaskTypeException;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import type.DukeCommandTypeEnum;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":" * Encapsulates a task containing a description and status.","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"public class Task {","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"    protected static final String STATUS_ICON_DONE \u003d \"X\";","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"    protected static final String STATUS_ICON_NOT_DONE \u003d \" \";","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"    private String description;","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"     * Constructor to instantiate a `entity.list.DukeTask`.","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"     * The isDone field is set to false by default as new tasks should not be done yet.","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"     * @param description describes what the task is","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"     * Creates a specific `entity.list.DukeTask` based on the prefix in the user input.","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"     * Supported types of tasks include todo, deadline and event.","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"     * @param description the full user input that may or may not be a valid type of task","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"     * @return A new `entity.list.DukeTask`","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"     * @throws InvalidTaskTypeException when the type of task is not recognised","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"     * @throws InvalidTaskTimeFormatException when a task does not have valid time inputs","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"    public static Task createTask(String description, DukeCommandTypeEnum actionType)","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"            throws InvalidTaskTypeException, InvalidTaskTimeFormatException, InvalidDateTimeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"        // A valid task is either a to-do, deadline or event","lastModifiedDate":"2021-08-14"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"        if (actionType.equals(DukeCommandTypeEnum.TODO)) {","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"            return TodoTask.createTask(description);","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"        if (actionType.equals(DukeCommandTypeEnum.DEADLINE)) {","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"            return DeadlineTask.createTask(description);","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"        if (actionType.equals(DukeCommandTypeEnum.EVENT)) {","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"            return EventTask.createTask(description);","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"        throw new InvalidTaskTypeException(actionType);","lastModifiedDate":"2021-08-15"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"     * Utility method to split tasks into action and time parts.","lastModifiedDate":"2021-08-14"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"     * @param descriptionWithTime the description of a task including time information","lastModifiedDate":"2021-08-14"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"     * @param splitter the regex to split the description by","lastModifiedDate":"2021-08-14"},{"lineNumber":61,"author":{"gitId":"zognin"},"content":"     * @return a string array whose first item is the action description and second item is the time","lastModifiedDate":"2021-08-14"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"    public static String[] splitActionAndTime(String descriptionWithTime, String splitter) {","lastModifiedDate":"2021-08-14"},{"lineNumber":64,"author":{"gitId":"zognin"},"content":"        String[] splitParts \u003d descriptionWithTime.split(splitter);","lastModifiedDate":"2021-08-14"},{"lineNumber":65,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":66,"author":{"gitId":"zognin"},"content":"        // Trim split parts to remove whitespace before and after","lastModifiedDate":"2021-08-14"},{"lineNumber":67,"author":{"gitId":"zognin"},"content":"        for (int i \u003d 0; i \u003c splitParts.length; i++) {","lastModifiedDate":"2021-08-14"},{"lineNumber":68,"author":{"gitId":"zognin"},"content":"            splitParts[i] \u003d splitParts[i].trim();","lastModifiedDate":"2021-08-14"},{"lineNumber":69,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":70,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":71,"author":{"gitId":"zognin"},"content":"        return splitParts;","lastModifiedDate":"2021-08-14"},{"lineNumber":72,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":73,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":74,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":75,"author":{"gitId":"zognin"},"content":"     * Method to mark a task as done.","lastModifiedDate":"2021-08-14"},{"lineNumber":76,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":77,"author":{"gitId":"zognin"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-14"},{"lineNumber":78,"author":{"gitId":"zognin"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-14"},{"lineNumber":79,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":80,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":81,"author":{"gitId":"zognin"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2021-08-14"},{"lineNumber":82,"author":{"gitId":"zognin"},"content":"        return (this.isDone ? STATUS_ICON_DONE : STATUS_ICON_NOT_DONE);","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":84,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":85,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":86,"author":{"gitId":"zognin"},"content":"     * Formats the task in string form, displaying the task status and description.","lastModifiedDate":"2021-08-14"},{"lineNumber":87,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":88,"author":{"gitId":"zognin"},"content":"     * @return the task in a displayed string format","lastModifiedDate":"2021-08-14"},{"lineNumber":89,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":90,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":91,"author":{"gitId":"zognin"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":92,"author":{"gitId":"zognin"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2021-08-14"},{"lineNumber":93,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":94,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":95,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":96,"author":{"gitId":"zognin"},"content":"     * Creates an app representation of a task from the storage representation of the task.","lastModifiedDate":"2021-08-21"},{"lineNumber":97,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":98,"author":{"gitId":"zognin"},"content":"     * @param fullDescription Storage representation of the task including the task type.","lastModifiedDate":"2021-08-21"},{"lineNumber":99,"author":{"gitId":"zognin"},"content":"     * @return App representation of the task.","lastModifiedDate":"2021-08-21"},{"lineNumber":100,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":101,"author":{"gitId":"zognin"},"content":"    public static Task createTaskFromStoredString(String fullDescription) {","lastModifiedDate":"2021-08-21"},{"lineNumber":102,"author":{"gitId":"zognin"},"content":"        String trimmedFullDescription \u003d fullDescription.trim();","lastModifiedDate":"2021-08-21"},{"lineNumber":103,"author":{"gitId":"zognin"},"content":"        char taskType \u003d trimmedFullDescription.charAt(1);","lastModifiedDate":"2021-08-21"},{"lineNumber":104,"author":{"gitId":"zognin"},"content":"        String descriptionWithoutTaskType \u003d fullDescription.substring(3);","lastModifiedDate":"2021-08-21"},{"lineNumber":105,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":106,"author":{"gitId":"zognin"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-21"},{"lineNumber":107,"author":{"gitId":"zognin"},"content":"        case \u0027T\u0027:","lastModifiedDate":"2021-08-21"},{"lineNumber":108,"author":{"gitId":"zognin"},"content":"            return TodoTask.createTaskFromStoredString(descriptionWithoutTaskType);","lastModifiedDate":"2021-08-21"},{"lineNumber":109,"author":{"gitId":"zognin"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2021-08-21"},{"lineNumber":110,"author":{"gitId":"zognin"},"content":"            return DeadlineTask.createTaskFromStoredString(descriptionWithoutTaskType);","lastModifiedDate":"2021-08-21"},{"lineNumber":111,"author":{"gitId":"zognin"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2021-08-21"},{"lineNumber":112,"author":{"gitId":"zognin"},"content":"            return EventTask.createTaskFromStoredString(descriptionWithoutTaskType);","lastModifiedDate":"2021-08-21"},{"lineNumber":113,"author":{"gitId":"zognin"},"content":"        default:","lastModifiedDate":"2021-08-21"},{"lineNumber":114,"author":{"gitId":"zognin"},"content":"            return null;","lastModifiedDate":"2021-08-21"},{"lineNumber":115,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":116,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":117,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":118,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":119,"author":{"gitId":"zognin"},"content":"     * Checks if the task description contains a keyword.","lastModifiedDate":"2021-08-21"},{"lineNumber":120,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":121,"author":{"gitId":"zognin"},"content":"     * @param keyword Keyword to search for.","lastModifiedDate":"2021-08-21"},{"lineNumber":122,"author":{"gitId":"zognin"},"content":"     * @return True if task description contains the keyword, false otherwise.","lastModifiedDate":"2021-08-21"},{"lineNumber":123,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":124,"author":{"gitId":"zognin"},"content":"    protected boolean contains(String keyword) {","lastModifiedDate":"2021-08-21"},{"lineNumber":125,"author":{"gitId":"zognin"},"content":"        return this.description.contains(keyword);","lastModifiedDate":"2021-08-21"},{"lineNumber":126,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":127,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"zognin":127}},{"path":"src/main/java/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package tasklist;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import exception.ErrorAccessingFile;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import exception.NonExistentTaskNumberException;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import storage.StorageFile;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":" * Encapsulates a task list storing the users input tasks.","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"public class TaskList {","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"    private ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"    private StorageFile listFile;","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"    public TaskList(StorageFile listFile) {","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"        this.listFile \u003d listFile;","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"     * Scans tasks from storage to list.","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"     * @param task Task to be scanned into list.","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"    public void scanExistingTaskToList(Task task) {","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"        this.list.add(task);","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"     * Adds task to a list.","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"     * @param task Task be added to the list","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"    public void addTaskToList(Task task) throws ErrorAccessingFile {","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"            this.listFile.add(task.toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"            this.list.add(task);","lastModifiedDate":"2021-08-14"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"            throw new ErrorAccessingFile(\"add\");","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"     * Deletes task from a list.","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"     * @param taskNumber Number of the task to be removed from the list.","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"    public Task deleteTaskFromList(int taskNumber) throws NonExistentTaskNumberException, ErrorAccessingFile {","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"            validateTaskNumberExists(taskNumber);","lastModifiedDate":"2021-08-14"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"            Task task \u003d this.getTaskByTaskNumber(taskNumber);","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"            this.list.remove(taskNumber - 1);","lastModifiedDate":"2021-08-14"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"            this.listFile.rewriteFile(this.list);","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"            return task;","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"            throw new ErrorAccessingFile(\"delete\");","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"zognin"},"content":"     * Marks task in the list as done, finding the task by its task number.","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"zognin"},"content":"     * @param taskNumber Task number of the task in the list, starting from 1.","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"zognin"},"content":"     * @return Task.","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"zognin"},"content":"     * @throws NonExistentTaskNumberException If the task number does not exist in the list.","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"zognin"},"content":"     * @throws ErrorAccessingFile If there is an error accessing the storage file.","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"zognin"},"content":"    public Task markTaskAsDone(int taskNumber) throws NonExistentTaskNumberException, ErrorAccessingFile {","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"zognin"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"zognin"},"content":"            validateTaskNumberExists(taskNumber);","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"zognin"},"content":"            Task task \u003d this.getTaskByTaskNumber(taskNumber);","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"zognin"},"content":"            task.markAsDone();","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"zognin"},"content":"            this.listFile.rewriteFile(this.list);","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"zognin"},"content":"            return task;","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"zognin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"zognin"},"content":"            throw new ErrorAccessingFile(\"mark as done\");","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":85,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":86,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"zognin"},"content":"     * Gets a new list of only tasks whose description contains the keyword.","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"zognin"},"content":"     * @param keyword Keyword to search for.","lastModifiedDate":"2021-08-21"},{"lineNumber":90,"author":{"gitId":"zognin"},"content":"     * @return `TaskList`.","lastModifiedDate":"2021-08-21"},{"lineNumber":91,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"zognin"},"content":"    public TaskList getListContainingKeyword(String keyword) {","lastModifiedDate":"2021-08-21"},{"lineNumber":93,"author":{"gitId":"zognin"},"content":"        TaskList resultList \u003d new TaskList(this.listFile);","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"zognin"},"content":"        resultList.list \u003d new ArrayList\u003c\u003e(this.list);","lastModifiedDate":"2021-08-21"},{"lineNumber":95,"author":{"gitId":"zognin"},"content":"        resultList.list.removeIf(task -\u003e !task.contains(keyword));","lastModifiedDate":"2021-08-21"},{"lineNumber":96,"author":{"gitId":"zognin"},"content":"        return resultList;","lastModifiedDate":"2021-08-21"},{"lineNumber":97,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":98,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":99,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":100,"author":{"gitId":"zognin"},"content":"     * Formats tasks in a numbered list form, starting from 1.","lastModifiedDate":"2021-08-14"},{"lineNumber":101,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":102,"author":{"gitId":"zognin"},"content":"     * @return Numbered list.","lastModifiedDate":"2021-08-21"},{"lineNumber":103,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":104,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":105,"author":{"gitId":"zognin"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":106,"author":{"gitId":"zognin"},"content":"        StringBuilder stringBuilderList \u003d new StringBuilder();","lastModifiedDate":"2021-08-14"},{"lineNumber":107,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":108,"author":{"gitId":"zognin"},"content":"        for (int i \u003d 0; i \u003c this.list.size(); i++) {","lastModifiedDate":"2021-08-14"},{"lineNumber":109,"author":{"gitId":"zognin"},"content":"            Task task \u003d this.list.get(i);","lastModifiedDate":"2021-08-21"},{"lineNumber":110,"author":{"gitId":"zognin"},"content":"            String listItem \u003d String.format(\"%d. %s\\n\", i + 1, task.toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":111,"author":{"gitId":"zognin"},"content":"            stringBuilderList.append(listItem);","lastModifiedDate":"2021-08-14"},{"lineNumber":112,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":113,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":114,"author":{"gitId":"zognin"},"content":"        return stringBuilderList.toString();","lastModifiedDate":"2021-08-14"},{"lineNumber":115,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":116,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":117,"author":{"gitId":"zognin"},"content":"    private boolean contains(int taskNumber) {","lastModifiedDate":"2021-08-14"},{"lineNumber":118,"author":{"gitId":"zognin"},"content":"        return taskNumber \u003e 0 \u0026\u0026 taskNumber \u003c\u003d this.list.size();","lastModifiedDate":"2021-08-14"},{"lineNumber":119,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":120,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":121,"author":{"gitId":"zognin"},"content":"    private Task getTaskByTaskNumber(int taskNumber) {","lastModifiedDate":"2021-08-21"},{"lineNumber":122,"author":{"gitId":"zognin"},"content":"        return this.list.get(taskNumber - 1);","lastModifiedDate":"2021-08-14"},{"lineNumber":123,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":124,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":125,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":126,"author":{"gitId":"zognin"},"content":"     * Gets the number of tasks in the list.","lastModifiedDate":"2021-08-21"},{"lineNumber":127,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":128,"author":{"gitId":"zognin"},"content":"     * @return Number of tasks in the list.","lastModifiedDate":"2021-08-21"},{"lineNumber":129,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":130,"author":{"gitId":"zognin"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2021-08-14"},{"lineNumber":131,"author":{"gitId":"zognin"},"content":"        return this.list.size();","lastModifiedDate":"2021-08-14"},{"lineNumber":132,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":133,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":134,"author":{"gitId":"zognin"},"content":"    private void validateTaskNumberExists(int taskNumber) throws NonExistentTaskNumberException {","lastModifiedDate":"2021-08-14"},{"lineNumber":135,"author":{"gitId":"zognin"},"content":"        if (!this.contains(taskNumber)) {","lastModifiedDate":"2021-08-14"},{"lineNumber":136,"author":{"gitId":"zognin"},"content":"            throw new NonExistentTaskNumberException(taskNumber);","lastModifiedDate":"2021-08-14"},{"lineNumber":137,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":138,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":139,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"zognin":139}},{"path":"src/main/java/tasklist/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package tasklist;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"    private TodoTask(String description, boolean isDone) {","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"     * Processes the input string to create a todo task.","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"     * @param description Input task string.","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"     * @return App representation of a task containing an action description.","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"    public static TodoTask createTask(String description) {","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"        return new TodoTask(description, false);","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"     * Formats the task in string form, displaying the task type, status and description.","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"     * @return Task in a displayed string format.","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"    public String toString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"     * Creates an app representation of a todo task from the storage representation of the task.","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"     * @param description Storage representation of a todo task.","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"     * @return App representation of a todo task.","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"    public static TodoTask createTaskFromStoredString(String description) {","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"        String statusIcon \u003d description.substring(1, 2);","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"        boolean isDone \u003d false;","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"        if (statusIcon.equals(STATUS_ICON_DONE)) {","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"            isDone \u003d true;","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"        String actionDescription \u003d description.substring(3).trim();","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"        return new TodoTask(actionDescription, isDone);","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"zognin":45}},{"path":"src/main/java/type/DukeCommandTypeEnum.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package type;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"public enum DukeCommandTypeEnum {","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"    LIST(\"list\"),","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"    FIND(\"find\"),","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"    DONE(\"done\"),","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"    EVENT(\"event\");","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"    private final String value;","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"    DukeCommandTypeEnum(String value) {","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"        this.value \u003d value;","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"        return this.value;","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"zognin":22}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"\u003cfx:root","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"        alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"        maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"        maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"        prefWidth\u003d\"400.0\"","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"        type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"        xmlns\u003d\"http://javafx.com/javafx/8.0.171\"","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"        xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\" maxHeight\u003d\"Infinity\" prefWidth\u003d\"260\"/\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"        \u003cImageView","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"                fx:id\u003d\"displayPicture\"","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"                fitHeight\u003d\"99.0\"","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"                fitWidth\u003d\"99.0\"","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"                pickOnBounds\u003d\"true\"","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"                preserveRatio\u003d\"true\"","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"        /\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"zognin":32}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"\u003cfx:root","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"        maxHeight\u003d\"-Infinity\"","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"        maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"        minHeight\u003d\"-Infinity\"","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"        minWidth\u003d\"-Infinity\"","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"        prefHeight\u003d\"600.0\"","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"        prefWidth\u003d\"400.0\"","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"        type\u003d\"javafx.scene.layout.AnchorPane\"","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"        xmlns\u003d\"http://javafx.com/javafx/8.0.171\"","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"        xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"        \u003cTextField","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"                fx:id\u003d\"userInput\"","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"                prefWidth\u003d\"324.0\"","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"                AnchorPane.bottomAnchor\u003d\"1.0\"","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"        /\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"        \u003cButton","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"                fx:id\u003d\"sendButton\"","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"                layoutX\u003d\"324.0\"","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"                text\u003d\"Send\"","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"        /\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"        \u003cScrollPane","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"                fx:id\u003d\"scrollPane\"","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"                hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"                hvalue\u003d\"1.0\"","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"                prefHeight\u003d\"557.0\"","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"                prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"        \u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"                \u003cVBox","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"                        fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"                        prefHeight\u003d\"552.0\"","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"                        prefWidth\u003d\"388.0\"","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"                /\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"zognin":57}},{"path":"src/test/java/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package parser;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import static org.junit.Assert.assertEquals;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import org.junit.Test;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"    public void detectExitCommand_exitCommand_true() {","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"        String exitCommand \u003d \"bye\";","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"        System.setIn(new ByteArrayInputStream(exitCommand.getBytes()));","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"        boolean isExitCommand \u003d new Parser().detectExitCommand(exitCommand);","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"        assertEquals(true, isExitCommand);","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"        System.setIn(System.in);","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"    public void detectExitCommand_nonExitCommand_false() {","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"        String nonExitCommand \u003d \"hey\";","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"        System.setIn(new ByteArrayInputStream(nonExitCommand.getBytes()));","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"        boolean isExitCommand \u003d new Parser().detectExitCommand(nonExitCommand);","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"        assertEquals(false, isExitCommand);","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"        System.setIn(System.in);","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"zognin":29}},{"path":"src/test/java/stub/message/MessageStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package stub.message;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import message.Message;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"public class MessageStub extends Message {","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"    public MessageStub() {","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"        super(\"hello\", \":)\");","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"zognin":9}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"something","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"todo eat cake","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"deadline watch movie /by 12-04-2020 1500","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"event eat icecream /at everyday","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"done 1","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"todo read book","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"done 3","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"done 20","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"deadline do homework /by 12-03-2020 0900","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"bye","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"zognin":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zognin":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/Duke.java","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zognin":1,"-":37}}]
