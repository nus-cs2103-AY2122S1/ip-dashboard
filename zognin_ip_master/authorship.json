[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":" * Encapsulates a chatbot that greets the user,","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":" * adds valid inputs to a task list,","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":" * updates tasks in the list,","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":" * and exits when the user types `bye`.","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"        // Greet","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"        DukeGreetingMessage greetingMessage \u003d new DukeGreetingMessage(\"Hello! I\u0027m Duke, what shall we do today?\");","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"        System.out.println(greetingMessage.getFormattedMessage());","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"        // Process input","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"        DukeTaskList list \u003d new DukeTaskList();","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"        Scanner inputScanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"        String inputMessage \u003d inputScanner.nextLine();","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"        String exitCommand \u003d \"bye\";","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"        while (!inputMessage.trim().equals(exitCommand)) {","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"            DukeOutputMessage outputMessage;","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"            try {","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"                DukeAction action \u003d DukeAction.makeAction(inputMessage);","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"                action.executeAction(list);","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"                outputMessage \u003d action.getOutputMessage();","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"                outputMessage \u003d e.getOutputMessage();","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"            }","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"            // Print output message","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"            System.out.println(outputMessage.getFormattedMessage());","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"            inputMessage \u003d inputScanner.nextLine();","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"        // Exit","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"        DukeExitMessage exitMessage \u003d new DukeExitMessage(\"Bye, see you again\");","lastModifiedDate":"2021-08-14"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"        System.out.println(exitMessage.getFormattedMessage());","lastModifiedDate":"2021-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"zognin":37,"-":4}},{"path":"src/main/java/DukeAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"public abstract class DukeAction {","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"    public DukeAction() {}","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"    public static DukeActionTypeEnum getActionType(String message) throws NonExistentActionTypeException {","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"        String trimmedMessage \u003d message.trim();","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"        String[] messagesSplitUsingSpace \u003d trimmedMessage.split(\" \");","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"        String commandWord \u003d messagesSplitUsingSpace[0];","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"        for (DukeActionTypeEnum actionType : DukeActionTypeEnum.values()) {","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"            int actionTypeLength \u003d actionType.toString().length();","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"            if (commandWord.length() \u003e\u003d actionTypeLength \u0026\u0026 commandWord.equals(actionType.toString())) {","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"                return actionType;","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"        throw new NonExistentActionTypeException(message);","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"    public static String removeCommandPrefix(String message, String command) {","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"        return message.trim().substring(command.length());","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"    public static int getTaskNumberFromMessage(String message) throws InvalidTaskNumberException {","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"        try {","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"            String trimmedMessage \u003d message.trim();","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"            return Integer.parseInt(trimmedMessage);","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"            throw new InvalidTaskNumberException(message);","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"    public static void validateDescriptionNotEmpty(DukeActionTypeEnum actionType, String description)","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"            throws MissingActionDescriptionException {","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"            throw new MissingActionDescriptionException(actionType.toString());","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"    public static DukeAction makeAction(String inputMessage)","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"            throws InvalidTaskNumberException, NonExistentActionTypeException, MissingActionDescriptionException {","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"        DukeActionTypeEnum actionType \u003d getActionType(inputMessage);","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"        String messageWithoutCommand \u003d removeCommandPrefix(inputMessage, actionType.toString());","lastModifiedDate":"2021-08-15"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"        String trimmedMessage \u003d messageWithoutCommand.trim();","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"        switch (actionType) {","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"            case LIST:","lastModifiedDate":"2021-08-15"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"                return DukeActionList.createAction();","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"            case DONE:","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"                return DukeActionDone.createAction(trimmedMessage);","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"            case DELETE:","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"                return DukeActionDelete.createAction(trimmedMessage);","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"            default:","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"                return DukeActionAdd.createAction(trimmedMessage, actionType);","lastModifiedDate":"2021-08-15"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"    public abstract void executeAction(DukeTaskList list) throws DukeException;","lastModifiedDate":"2021-08-15"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"    public abstract DukeOutputMessage getOutputMessage();","lastModifiedDate":"2021-08-15"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"zognin":59}},{"path":"src/main/java/DukeActionAdd.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"public class DukeActionAdd extends DukeAction {","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"    private String description;","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"    private DukeActionTypeEnum actionType;","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"    private DukeTask task;","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"    private DukeTaskList list;","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"    public DukeActionAdd(String description, DukeActionTypeEnum actionType) {","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"        this.actionType \u003d actionType;","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"    public static DukeActionAdd createAction(String description, DukeActionTypeEnum actionType)","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"            throws MissingActionDescriptionException {","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"        // Validate before creating the action","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"        DukeAction.validateDescriptionNotEmpty(actionType, description);","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"        return new DukeActionAdd(description, actionType);","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"    public void executeAction(DukeTaskList list) throws InvalidTaskTypeException, InvalidTaskTimeFormatException {","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"        DukeTask task \u003d DukeTask.createTask(this.description, this.actionType);","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"        list.addTaskToList(task);","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"    public DukeAddedMessage getOutputMessage() {","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"        return new DukeAddedMessage(task.toString(), list.getNumberOfTasks());","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"zognin":30}},{"path":"src/main/java/DukeActionDelete.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"public class DukeActionDelete extends DukeAction {","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"    private int taskNumber;","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"    private DukeTask task;","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"    private DukeTaskList list;","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"    public DukeActionDelete(int taskNumber) {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"    public static DukeActionDelete createAction(String description) throws InvalidTaskNumberException, MissingActionDescriptionException {","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"        // Validate before creating the action","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"        DukeAction.validateDescriptionNotEmpty(DukeActionTypeEnum.DELETE, description);","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"        return new DukeActionDelete(DukeAction.getTaskNumberFromMessage(description));","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"    public void executeAction(DukeTaskList list) throws NonExistentTaskNumberException {","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"        DukeTask task \u003d list.getTaskByTaskNumber(this.taskNumber);","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"        list.deleteTaskFromList(this.taskNumber);","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"    public DukeDeletedMessage getOutputMessage() {","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"        return new DukeDeletedMessage(task.toString(), list.getNumberOfTasks());","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"zognin":27}},{"path":"src/main/java/DukeActionDone.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"public class DukeActionDone extends DukeAction {","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"    private int taskNumber;","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"    private DukeTask task;","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"    public DukeActionDone(int taskNumber) {","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"    public static DukeActionDone createAction(String description)","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"            throws InvalidTaskNumberException, MissingActionDescriptionException {","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"        // Validate before creating the action","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"        DukeAction.validateDescriptionNotEmpty(DukeActionTypeEnum.DONE, description);","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"        return new DukeActionDone(DukeAction.getTaskNumberFromMessage(description));","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"    public void executeAction(DukeTaskList list) throws NonExistentTaskNumberException {","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"        DukeTask task \u003d list.getTaskByTaskNumber(this.taskNumber);","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"        task.markAsDone();","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"    public DukeDoneMessage getOutputMessage() {","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"        return new DukeDoneMessage(task.toString());","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"zognin":26}},{"path":"src/main/java/DukeActionList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"public class DukeActionList extends DukeAction {","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"    private DukeTaskList list;","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"    public DukeActionList() {}","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"    public static DukeActionList createAction() {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"        return new DukeActionList();","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"    public void executeAction(DukeTaskList list) {","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"    public DukeListMessage getOutputMessage() {","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"        return new DukeListMessage(this.list.toString());","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"zognin":17}},{"path":"src/main/java/DukeActionTypeEnum.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"public enum DukeActionTypeEnum {","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"    LIST(\"list\"),","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"    DONE(\"done\"),","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"    EVENT(\"event\");","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"    private final String value;","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"    DukeActionTypeEnum(String value) {","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"        this.value \u003d value;","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"        return this.value;","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"zognin":19}},{"path":"src/main/java/DukeAddedMessage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":" * Encapsulates a added message used to inform a user that a message has been added to a list.","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":" * It inherits from `DukeOutputMessage`.","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":" * It overrides methods in `DukeOutputMessage` to format the message differently for adding.","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"public class DukeAddedMessage extends DukeListChangedMessage {","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"    private static String ADDED_PREFIX \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"     * Constructor to instantiate a `DukeAddedMessage`.","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"     * @param message the string to be used in the added message.","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"     * @param itemsInList the number of items in the list after the change.","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"    public DukeAddedMessage(String message, int itemsInList) {","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"        super(message, itemsInList);","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"     * Gets the message with a prefix that the task was added.","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"     * @return the string message with a prefix.","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"        return String.format(","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"                \"%s\\n\\t\\t%s\",","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"                ADDED_PREFIX,","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"                super.getMessage()","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"        );","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"zognin":32}},{"path":"src/main/java/DukeDeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":" * Encapsulates a task with a deadline.","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":" * It inherits from `DukeTask`.","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"public class DukeDeadlineTask extends DukeTask {","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"    private static String TIME_SPLITTER \u003d \"/by\";","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"    private String deadline;","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"    private DukeDeadlineTask(String description, String deadline) {","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"     * Processes the input string to create a deadline task with an action and deadline.","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"     * @param description The input task string by the user","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"     * @return a `DukeDeadlineTask` containing an action description and deadline information","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"    public static DukeDeadlineTask createTask (String description) throws InvalidTaskTimeFormatException {","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"        // Split the description into its action and time parts","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"        String[] splitPartsUsingBy \u003d DukeTask.splitActionAndTime(","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"                description,","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"                DukeDeadlineTask.TIME_SPLITTER","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"        );","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"        try {","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"            return new DukeDeadlineTask(splitPartsUsingBy[0], splitPartsUsingBy[1]);","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"            throw new InvalidTaskTimeFormatException(DukeActionTypeEnum.DEADLINE.toString(), DukeDeadlineTask.TIME_SPLITTER);","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"     * Formats the task in string form, displaying the task type, status, description and deadline.","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"     * @return the task in a displayed string format","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.deadline);","lastModifiedDate":"2021-08-14"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"zognin":43}},{"path":"src/main/java/DukeDeletedMessage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":" * Encapsulates a deleted message used to inform a user that a message has been deleted from a list.","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":" * It inherits from `DukeListChangedMessage`.","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":" * It overrides methods in `DukeListChangedMessage` to format the message differently for deleting.","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"public class DukeDeletedMessage extends DukeListChangedMessage {","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"    private static String DELETED_PREFIX \u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"     * Constructor to instantiate a `DukeDeletedMessage`.","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"     * @param message the string to be used in the deleted message.","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"     * @param itemsInList the number of items in the list after the change.","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"    public DukeDeletedMessage(String message, int itemsInList) {","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"        super(message, itemsInList);","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"     * Gets the message with a prefix that the task was deleted.","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"     * @return the string message with a prefix.","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"        return String.format(","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"                \"%s\\n\\t\\t%s\",","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"                DELETED_PREFIX,","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"                super.getMessage()","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"        );","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"zognin":32}},{"path":"src/main/java/DukeDoneMessage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":" * Encapsulates a done message used to inform a user when a task is marked as done.","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":" * It inherits from `DukeOutputMessage`.","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":" * It overrides methods in `DukeOutputMessage` to format the message differently for marking a task as done.","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"public class DukeDoneMessage extends DukeOutputMessage {","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"    private static String DONE_PREFIX \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"     * Constructor to instantiate a `DukeDoneMessage`.","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"     * Instantiates a parent `DukeOutputMessage`.","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"     * @param message the string to be used in the done message","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"    public DukeDoneMessage(String message) {","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"        super(message);","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"     * Gets the message with an prefix informing that a task is marked as done","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"     * @return the string message with the prefix","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"        return DONE_PREFIX + \"\\n\\t\\t\" + super.getMessage();","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"     * Gets the message with a happy face added to it","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"     * @return the string message with a happy face","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"    public String getMessageWithFace() {","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"        return this.getMessage() + \" ≧(´▽｀)≦\";","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"zognin":38}},{"path":"src/main/java/DukeEventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":" * Encapsulates a task with that will occur at a specified time period.","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":" * It inherits from `DukeTask`.","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"public class DukeEventTask extends DukeTask {","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"    private static String TIME_SPLITTER \u003d \"/at\";","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"    private String time;","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"    private DukeEventTask(String description, String time) {","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"     * Processes the input string to create an event task with an action and time.","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"     * @param description The input task string by the user","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"     * @return a `DukeEventTask` containing an action description and time information","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"    public static DukeEventTask createTask (String description) throws InvalidTaskTimeFormatException {","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"        // Split the description into its action and time parts","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"        String[] splitPartsUsingAt \u003d DukeTask.splitActionAndTime(","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"                description,","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"                DukeEventTask.TIME_SPLITTER","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"        );","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"        try {","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"            return new DukeEventTask(splitPartsUsingAt[0], splitPartsUsingAt[1]);","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"            throw new InvalidTaskTimeFormatException(DukeActionTypeEnum.EVENT.toString(), DukeEventTask.TIME_SPLITTER);","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"     * Formats the task in string form, displaying the task type, status, description and time.","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"     * @return the task in a displayed string format","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), this.time);","lastModifiedDate":"2021-08-14"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"zognin":43}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"public abstract class DukeException extends Exception {","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"        super(message);","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"    public DukeOutputMessage getOutputMessage() {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"        return new DukeOutputMessage(this.getMessage());","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"zognin":9}},{"path":"src/main/java/DukeExitMessage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":" * Encapsulates an exit message used when Duke exits.","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":" * It inherits from `DukeOutputMessage`.","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":" * It overrides methods in `DukeOutputMessage` to format the message differently for exiting.","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"public class DukeExitMessage extends DukeOutputMessage {","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"     * Constructor to instantiate a `DukeExitMessage`.","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"     * Instantiates a parent `DukeOutputMessage`.","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"     * @param message the string to be used in the exit message","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"    public DukeExitMessage(String message) {","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"        super(message);","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"     * Gets the message with a waving face added to it","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"     * @return the string message with a waving face","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"    public String getMessageWithFace() {","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"        return this.getMessage() + \" ヾ(\u003d´･∀･｀\u003d)\";","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"zognin":26}},{"path":"src/main/java/DukeGreetingMessage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":" * Encapsulates a greeting message used when Duke starts.","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":" * It inherits from `DukeOutputMessage`.","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":" * It overrides methods in `DukeOutputMessage` to format the message differently for greeting.","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"public class DukeGreetingMessage extends DukeOutputMessage {","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"     * Constructor to instantiate a `DukeGreetingMessage`.","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"     * Instantiates a parent `DukeOutputMessage`.","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"     * @param message the string to be used in the greeting message","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"    public DukeGreetingMessage(String message) {","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"        super(message);","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"     * Gets the message with a cheering face added to it","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"     * @return the string message with a cheering face","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"    public String getMessageWithFace() {","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"        return this.getMessage() + \" ٩(｡•́‿•̀｡)۶\";","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"zognin":26}},{"path":"src/main/java/DukeListChangedMessage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":" * Encapsulates a message used to inform a user that there is a change on the list.","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":" * It inherits from `DukeOutputMessage`.","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":" * It overrides methods in `DukeOutputMessage` to format the message differently for a list change.","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"public class DukeListChangedMessage extends DukeOutputMessage {","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"    private int itemsInList;","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"     * Constructor to instantiate a `DukeListChangedMessage`.","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"     * @param message the string to be used in the added message.","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"     * @param itemsInList the number of items in the list after the change.","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"    public DukeListChangedMessage(String message, int itemsInList) {","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"        super(message);","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"        this.itemsInList \u003d itemsInList;","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"     * Gets the message with information about the number of items remaining in the list.","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"     * @return the string message.","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"        int numOfTasks \u003d this.itemsInList;","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"        String task \u003d numOfTasks \u003d\u003d 1 ? \"task\" : \"tasks\";","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"        return String.format(","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"                \"%s\\n\\tNow you have %d %s in the list.\",","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"                super.getMessage(),","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"                numOfTasks,","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"                task);","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"     * Gets the message with a thumbs up face added to it.","lastModifiedDate":"2021-08-14"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"     * @return the string message with a thumbs up face.","lastModifiedDate":"2021-08-14"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"    public String getMessageWithFace() {","lastModifiedDate":"2021-08-14"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"        return this.getMessage() + \" (＾＾)b\";","lastModifiedDate":"2021-08-14"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"zognin":46}},{"path":"src/main/java/DukeListMessage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":" * Encapsulates a message containing a list of tasks.","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":" * It inherits from `DukeOutputMessage`.","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":" * It overrides methods in `DukeOutputMessage` to format the message differently for a list.","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"public class DukeListMessage extends DukeOutputMessage{","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"    private static String LIST_PREFIX \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"     * Constructor to instantiate a `DukeListMessage`.","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"     * Instantiates a parent `DukeOutputMessage`.","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"     * @param message the string to be used in the list message","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"    public DukeListMessage(String message) {","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"        super(message);","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"     * Gets the message with an prefix informing that the list contains tasks","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"     * @return the string message with the prefix","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"        return LIST_PREFIX + \"\\n\\t\" + super.getMessage();","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"     * Gets the message with a shocked face added to it","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"     * @return the string message with a shocked face","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"    public String getMessageWithFace() {","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"        return this.getMessage() + \"ヽ(°〇°)ﾉ\";","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"zognin":38}},{"path":"src/main/java/DukeOutputMessage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":" * Encapsulates the base output message that Duke replies to the user.","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":" * It includes methods to format the output message.","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"public class DukeOutputMessage {","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"    private static String FORMATTED_LINE \u003d \"_________________________________________________\";","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"    private String message;","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"     * Constructor to instantiate a `DukeOutputMessage`.","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"     * @param message the string to be used in the output message","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"    public DukeOutputMessage(String message) {","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"     * Gets the raw message.","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"     * @return the string message","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"        return this.message;","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"     * Gets the message with a face added to it","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"     * @return the string message with a face","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"    public String getMessageWithFace() {","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"        return this.message + \" ｢(ﾟﾍﾟ)\";","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"     * Gets a message formatted with lines, indentation and a face","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"     * @return the formatted string message","lastModifiedDate":"2021-08-14"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"    public String getFormattedMessage() {","lastModifiedDate":"2021-08-14"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"        return \"\\t\" + FORMATTED_LINE","lastModifiedDate":"2021-08-14"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"                + \"\\n\\t\" + this.getMessageWithFace()","lastModifiedDate":"2021-08-14"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"                + \"\\n\\t\" + FORMATTED_LINE;","lastModifiedDate":"2021-08-14"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"zognin":46}},{"path":"src/main/java/DukeTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":" * Encapsulates a task containing a description and status.","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"public class DukeTask {","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"    private String description;","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"     * Constructor to instantiate a `DukeTask`.","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"     * The isDone field is set to false by default as new tasks should not be done yet.","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"     * @param description describes what the task is","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"    public DukeTask(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"     * Creates a specific `DukeTask` based on the prefix in the user input.","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"     * Supported types of tasks include todo, deadline and event.","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"     * @param description the full user input that may or may not be a valid type of task","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"     * @return A new `DukeTask`","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"     * @throws InvalidTaskTypeException when the type of task is not recognised","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"     * @throws InvalidTaskTimeFormatException when a task does not have valid time inputs","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"    public static DukeTask createTask(String description, DukeActionTypeEnum actionType)","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"            throws InvalidTaskTypeException, InvalidTaskTimeFormatException {","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"        // A valid task is either a to-do, deadline or event","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"        if (actionType.equals(DukeActionTypeEnum.TODO)) {","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"            return DukeTodoTask.createTask(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"        if (actionType.equals(DukeActionTypeEnum.DEADLINE)) {","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"            return DukeDeadlineTask.createTask(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"        if (actionType.equals(DukeActionTypeEnum.EVENT)) {","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"            return DukeEventTask.createTask(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"        throw new InvalidTaskTypeException(actionType);","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"     * Utility method to split tasks into action and time parts.","lastModifiedDate":"2021-08-14"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"     * @param descriptionWithTime the description of a task including time information","lastModifiedDate":"2021-08-14"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"     * @param splitter the regex to split the description by","lastModifiedDate":"2021-08-14"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"     * @return a string array whose first item is the action description and second item is the time","lastModifiedDate":"2021-08-14"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"    public static String[] splitActionAndTime(String descriptionWithTime, String splitter) {","lastModifiedDate":"2021-08-14"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"        String[] splitParts \u003d descriptionWithTime.split(splitter);","lastModifiedDate":"2021-08-14"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"        // Trim split parts to remove whitespace before and after","lastModifiedDate":"2021-08-14"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"        for (int i \u003d 0; i \u003c splitParts.length; i++) {","lastModifiedDate":"2021-08-14"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"            splitParts[i] \u003d splitParts[i].trim();","lastModifiedDate":"2021-08-14"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":61,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"        return splitParts;","lastModifiedDate":"2021-08-14"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":64,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":65,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":66,"author":{"gitId":"zognin"},"content":"     * Method to mark a task as done.","lastModifiedDate":"2021-08-14"},{"lineNumber":67,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":68,"author":{"gitId":"zognin"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-14"},{"lineNumber":69,"author":{"gitId":"zognin"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-14"},{"lineNumber":70,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":71,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":72,"author":{"gitId":"zognin"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2021-08-14"},{"lineNumber":73,"author":{"gitId":"zognin"},"content":"        return (this.isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-14"},{"lineNumber":74,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":75,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":76,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":77,"author":{"gitId":"zognin"},"content":"     * Formats the task in string form, displaying the task status and description.","lastModifiedDate":"2021-08-14"},{"lineNumber":78,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":79,"author":{"gitId":"zognin"},"content":"     * @return the task in a displayed string format","lastModifiedDate":"2021-08-14"},{"lineNumber":80,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":81,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":82,"author":{"gitId":"zognin"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":83,"author":{"gitId":"zognin"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2021-08-14"},{"lineNumber":84,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":85,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"zognin":85}},{"path":"src/main/java/DukeTaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":" * Encapsulates a task list storing the users input tasks.","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"public class DukeTaskList {","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"    private ArrayList\u003cDukeTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"     * Adds task to a list.","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"     * @param task is the task be added to the list","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"    public void addTaskToList(DukeTask task) {","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"        this.list.add(task);","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"     * Delete task from a list.","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"     * @param taskNumber is the number of the task to be removed from the list","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"    public void deleteTaskFromList(int taskNumber) throws NonExistentTaskNumberException {","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"        validateTaskNumberExists(taskNumber);","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"        this.list.remove(taskNumber - 1);","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"     * Formats tasks in a numbered list form, starting from 1.","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"     * @return the numbered list","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"        StringBuilder stringBuilderList \u003d new StringBuilder();","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"        for (int i \u003d 0; i \u003c this.list.size(); i++) {","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"            DukeTask task \u003d this.list.get(i);","lastModifiedDate":"2021-08-14"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"            String listItem \u003d String.format(\"%d. %s\\n\\t\", i + 1, task.toString());","lastModifiedDate":"2021-08-14"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"            stringBuilderList.append(listItem);","lastModifiedDate":"2021-08-14"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"        return stringBuilderList.toString();","lastModifiedDate":"2021-08-14"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"     * Takes in a task number and returns true if the task number exists in the list,","lastModifiedDate":"2021-08-14"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"     * otherwise it returns false.","lastModifiedDate":"2021-08-14"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"     * @param taskNumber is the number that the task is listed by, starting from 1","lastModifiedDate":"2021-08-14"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"     * @return true if the task number exists in the list, otherwise false","lastModifiedDate":"2021-08-14"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"    private boolean contains(int taskNumber) {","lastModifiedDate":"2021-08-14"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"        return taskNumber \u003e 0 \u0026\u0026 taskNumber \u003c\u003d this.list.size();","lastModifiedDate":"2021-08-14"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"     * Retrieves the task by the number it is listed by.","lastModifiedDate":"2021-08-14"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"     * @param taskNumber is the number that the task is listed by, starting from 1","lastModifiedDate":"2021-08-14"},{"lineNumber":61,"author":{"gitId":"zognin"},"content":"     * @return a `DukeTask`","lastModifiedDate":"2021-08-14"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"    public DukeTask getTaskByTaskNumber(int taskNumber) throws NonExistentTaskNumberException {","lastModifiedDate":"2021-08-14"},{"lineNumber":64,"author":{"gitId":"zognin"},"content":"        validateTaskNumberExists(taskNumber);","lastModifiedDate":"2021-08-14"},{"lineNumber":65,"author":{"gitId":"zognin"},"content":"        return this.list.get(taskNumber - 1);","lastModifiedDate":"2021-08-14"},{"lineNumber":66,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":67,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":68,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":69,"author":{"gitId":"zognin"},"content":"     * Gets the number of tasks in the list","lastModifiedDate":"2021-08-14"},{"lineNumber":70,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":71,"author":{"gitId":"zognin"},"content":"     * @return the number of tasks in the list","lastModifiedDate":"2021-08-14"},{"lineNumber":72,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":73,"author":{"gitId":"zognin"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2021-08-14"},{"lineNumber":74,"author":{"gitId":"zognin"},"content":"        return this.list.size();","lastModifiedDate":"2021-08-14"},{"lineNumber":75,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":76,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":77,"author":{"gitId":"zognin"},"content":"    private void validateTaskNumberExists(int taskNumber) throws NonExistentTaskNumberException {","lastModifiedDate":"2021-08-14"},{"lineNumber":78,"author":{"gitId":"zognin"},"content":"        if (!this.contains(taskNumber)) {","lastModifiedDate":"2021-08-14"},{"lineNumber":79,"author":{"gitId":"zognin"},"content":"            throw new NonExistentTaskNumberException(taskNumber);","lastModifiedDate":"2021-08-14"},{"lineNumber":80,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":81,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":82,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"zognin":82}},{"path":"src/main/java/DukeTodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"public class DukeTodoTask extends DukeTask {","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"    private static String TASK_TYPE \u003d \"todo\";","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"    private DukeTodoTask(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"    public static DukeTodoTask createTask(String description) {","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"        return new DukeTodoTask(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"zognin":16}},{"path":"src/main/java/InvalidTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":" * Encapsulates the exception thrown when an input meant to be a task number cannot be parsed into a number.","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"public class InvalidTaskNumberException extends DukeException {","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"     * Constructor to instantiate an `InvalidTaskNumberException`.","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"     * @param input is the invalid string input that cannot be parsed into a number.","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"    public InvalidTaskNumberException(String input) {","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"        super(String.format(\"%s is not a valid number\", input));","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"zognin":13}},{"path":"src/main/java/InvalidTaskTimeFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":" * Encapsulates the exception thrown when a task meant to carry time information is incorrectly formatted.","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"public class InvalidTaskTimeFormatException extends DukeException {","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"     * Constructor to instantiate an `InvalidTaskTimeFormatException`.","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"     * @param taskType is the type of the task","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"     * @param timeSplitter separates the action from the time information in the task description","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"    public InvalidTaskTimeFormatException(String taskType, String timeSplitter) {","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"        super(String.format(","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"            \"Please enter a valid %s task in the form of X %s Y, where X is an action and Y is a time\",","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"            taskType,","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"            timeSplitter","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"        ));","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"zognin":18}},{"path":"src/main/java/InvalidTaskTypeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":" * Encapsulates the exception thrown when a user inputs an invalid message that is not a task.","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"public class InvalidTaskTypeException extends DukeException {","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"     * Constructor to instantiate an `InvalidTaskTypeException`","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"     * @param actionType the invalid input by the user","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"    public InvalidTaskTypeException(DukeActionTypeEnum actionType) {","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"        super(String.format(","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"            \"\u0027%s\u0027 is not a valid task type. \" +","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"            \"Tasks should begin with one of the following: todo, deadline, event\",","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"            actionType","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"        ));","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"zognin":17}},{"path":"src/main/java/MissingActionDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":" * Encapsulates the exception thrown when a user inputs an action with an empty description,","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":" * when the action requires a description.","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"public class MissingActionDescriptionException extends DukeException {","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"     * Constructor to instantiate a `MissingActionDescriptionException`","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"     * @param actionType is the type of the action","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"    public MissingActionDescriptionException(String actionType) {","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"        super(String.format(","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"           \"The description of a %s command cannot be empty\",","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"           actionType","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"        ));","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"zognin":17}},{"path":"src/main/java/NonExistentActionTypeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"public class NonExistentActionTypeException extends DukeException {","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"    public NonExistentActionTypeException(String inputMessage) {","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"        super(String.format(","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"                \"Sorry I do not recognise this command \u0027%s\u0027\",","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"                inputMessage","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"        ));","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"zognin":8}},{"path":"src/main/java/NonExistentTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":" * Encapsulates the exception thrown when the user inputs a task number that does not exist in the list.","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"public class NonExistentTaskNumberException extends DukeException {","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"     * Constructor to instantiate a `NonExistentTaskNumberException`.","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"     * @param taskNumber is the invalid input by the user","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"    public NonExistentTaskNumberException(int taskNumber) {","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"        super(String.format(\"Task %d does not exist in the list\", taskNumber));","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"zognin":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"something","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"todo eat cake","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"deadline watch movie /by 4pm","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"event eat icecream /at everyday","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"done 1","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"todo read book","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"done 3","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"done 20","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"deadline do homework /by 3pm","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"bye","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"zognin":14}}]
