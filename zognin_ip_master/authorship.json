[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zognin":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"    implementation \u0027junit:junit:4.12\u0027","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"    archiveBaseName \u003d \"jiji\"","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zognin":19,"-":44}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"JIJI is a desktop chatbot that manages your tasks in an interactive fashion.","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"If tracking tasks by yourself gets dull, give JIJI a try!","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"## Getting Started","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"1. Ensure you have Java 11 installed on your computer","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"2. Copy `jiji.jar` to an empty folder","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"3. Double click the file to start the app","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"\u003e Words in `\u003c\u003e` brackets are parameters that should be supplied by the user","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"### Adding a deadline task: `deadline`","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"Adds a task with a deadline to the list.","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"Format: `deadline \u003cdescription\u003e /by \u003cdd-MM-yyyy HHmm\u003e`","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"Examples:","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"* `deadline do assignment /by 26-09-2021 2359`","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"* `deadline return book /by 10-10-2021 1700`","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"### Adding an event task: `event`","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"Adds a task that is occurring on a date, within a time period","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"Format: `event \u003cdescription\u003e /at \u003cdd-MM-yyyy HHmm HHmm\u003e`","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"\u003e In `\u003cdd-MM-yyyy HHmm HHmm\u003e`, the first `HHmm` is the start time and the second is the end time!","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"Examples:","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"* `event watch movie /at 20-10-2021 1300 1500`","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"* `event attend fair /at 23-10-2021 0800 1600`","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"### Adding a todo task: `todo`","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"Adds a task with only a description.","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"Format: `todo \u003cdescription\u003e`","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"Examples:","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"* `todo read book`","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"* `todo water the plants`","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2021-09-11"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"Deletes a task.","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"Format: `delete \u003ctask number in list\u003e`","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"\u003e Task number is the number next to the task of the latest list you have. ","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"\u003e Use `list` to view the full list if you are unsure!","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"Examples:","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"* `delete 1` deletes the first task in the latest list","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"### Exiting the app: `bye`","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"zognin"},"content":"Exits the app.","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"Format: `bye`","lastModifiedDate":"2021-09-11"},{"lineNumber":64,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":65,"author":{"gitId":"zognin"},"content":"### Marking a task as done: `done`","lastModifiedDate":"2021-09-11"},{"lineNumber":66,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"zognin"},"content":"Marks a task as done.","lastModifiedDate":"2021-09-11"},{"lineNumber":68,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":69,"author":{"gitId":"zognin"},"content":"Format: `done \u003ctask number in list\u003e`","lastModifiedDate":"2021-09-11"},{"lineNumber":70,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":71,"author":{"gitId":"zognin"},"content":"\u003e Task number is the number next to the task of the latest list you have. ","lastModifiedDate":"2021-09-11"},{"lineNumber":72,"author":{"gitId":"zognin"},"content":"\u003e Use `list` to view the full list if you are unsure!","lastModifiedDate":"2021-09-11"},{"lineNumber":73,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":74,"author":{"gitId":"zognin"},"content":"Examples:","lastModifiedDate":"2021-09-11"},{"lineNumber":75,"author":{"gitId":"zognin"},"content":"* `done 1` marks the first task in the latest list as done","lastModifiedDate":"2021-09-11"},{"lineNumber":76,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":77,"author":{"gitId":"zognin"},"content":"### Viewing the full list: `list`","lastModifiedDate":"2021-09-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":79,"author":{"gitId":"zognin"},"content":"Shows all the tasks in your list.","lastModifiedDate":"2021-09-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":81,"author":{"gitId":"zognin"},"content":"Format: `list`","lastModifiedDate":"2021-09-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":83,"author":{"gitId":"zognin"},"content":"### Viewing tasks that match a keyword: `find`","lastModifiedDate":"2021-09-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":85,"author":{"gitId":"zognin"},"content":"Finds all the tasks with a description containing the keyword.","lastModifiedDate":"2021-09-11"},{"lineNumber":86,"author":{"gitId":"zognin"},"content":"* The search is case insensitive","lastModifiedDate":"2021-09-11"},{"lineNumber":87,"author":{"gitId":"zognin"},"content":"* Descriptions with words that match partially with the keyword will be returned","lastModifiedDate":"2021-09-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":89,"author":{"gitId":"zognin"},"content":"Format: `find \u003ckeyword\u003e`","lastModifiedDate":"2021-09-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":91,"author":{"gitId":"zognin"},"content":"Examples:","lastModifiedDate":"2021-09-11"},{"lineNumber":92,"author":{"gitId":"zognin"},"content":"* `find ca` lists all tasks that have `ca` in the description. e.g. `cake`, `car`","lastModifiedDate":"2021-09-11"},{"lineNumber":93,"author":{"gitId":"zognin"},"content":"* `find jump` shows words such as `jump` and `JUMP` if they are in your list","lastModifiedDate":"2021-09-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":95,"author":{"gitId":"zognin"},"content":"### Viewing help: `help`","lastModifiedDate":"2021-09-11"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":97,"author":{"gitId":"zognin"},"content":"Shows all the available commands and their formats.","lastModifiedDate":"2021-09-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":99,"author":{"gitId":"zognin"},"content":"Format: `help`","lastModifiedDate":"2021-09-11"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":101,"author":{"gitId":"zognin"},"content":"## Command Summary","lastModifiedDate":"2021-09-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":103,"author":{"gitId":"zognin"},"content":"Command | Format","lastModifiedDate":"2021-09-11"},{"lineNumber":104,"author":{"gitId":"zognin"},"content":"--------|--------","lastModifiedDate":"2021-09-11"},{"lineNumber":105,"author":{"gitId":"zognin"},"content":"bye | `bye`","lastModifiedDate":"2021-09-11"},{"lineNumber":106,"author":{"gitId":"zognin"},"content":"deadline | `deadline \u003cdescription\u003e /by \u003cdd-MM-yyyy HHmm\u003e`","lastModifiedDate":"2021-09-11"},{"lineNumber":107,"author":{"gitId":"zognin"},"content":"delete | `delete \u003ctask number in list\u003e`","lastModifiedDate":"2021-09-11"},{"lineNumber":108,"author":{"gitId":"zognin"},"content":"done | `done \u003ctask number in list\u003e`","lastModifiedDate":"2021-09-11"},{"lineNumber":109,"author":{"gitId":"zognin"},"content":"event | `event \u003cdescription\u003e /at \u003cdd-MM-yyyy HHmm HHmm\u003e`","lastModifiedDate":"2021-09-11"},{"lineNumber":110,"author":{"gitId":"zognin"},"content":"find | `find \u003ckeyword\u003e`","lastModifiedDate":"2021-09-11"},{"lineNumber":111,"author":{"gitId":"zognin"},"content":"help | `help`","lastModifiedDate":"2021-09-11"},{"lineNumber":112,"author":{"gitId":"zognin"},"content":"list | `list`","lastModifiedDate":"2021-09-11"},{"lineNumber":113,"author":{"gitId":"zognin"},"content":"todo | `todo \u003cdescription\u003e`","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"zognin":87,"-":26}},{"path":"src/main/java/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package command;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import exception.DuplicateTaskException;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import exception.ErrorAccessingFileException;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import exception.InvalidCommandFormatException;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import exception.InvalidDateTimeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import exception.InvalidTaskTypeException;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import exception.MissingCommandDescriptionException;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import message.Message;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"import tasklist.Task;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"import type.CommandTypeEnum;","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":" * Encapsulates an add command after it is parsed from the user input.","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"    private String description;","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"    private CommandTypeEnum commandType;","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"    private AddCommand(String description, CommandTypeEnum commandType) {","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"     * Creates an `AddCommand`.","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"     * @param description Description from the command excluding the command type.","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"     * @param commandType Command type of the command.","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"     * @return `AddCommand`.","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"     * @throws MissingCommandDescriptionException If description is empty.","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"    public static AddCommand createCommand(String description, CommandTypeEnum commandType)","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"            throws MissingCommandDescriptionException {","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"        // Validate before creating the command","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"        Command.validateDescriptionNotEmpty(commandType, description);","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"        return new AddCommand(description, commandType);","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"     * Executes an `AddCommand` by adding a new task to the list.","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"     * @param list `TaskList` containing all tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"     * @return Message representing the command is executed.","lastModifiedDate":"2021-09-10"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"     * @throws InvalidTaskTypeException If the task type is not valid.","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"     * @throws ErrorAccessingFileException If there is an error accessing the storage file.","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"     * @throws InvalidDateTimeException If a task meant to contain time information has an invalid datetime format.","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"     * @throws DuplicateTaskException If there is an attempt to add a duplicate task.","lastModifiedDate":"2021-09-10"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"     * @throws InvalidCommandFormatException If the task has an incorrect format.","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"    public Message execute(TaskList list) throws","lastModifiedDate":"2021-09-10"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"            InvalidTaskTypeException,","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"            ErrorAccessingFileException,","lastModifiedDate":"2021-09-03"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"            InvalidDateTimeException,","lastModifiedDate":"2021-09-03"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"            DuplicateTaskException,","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"            InvalidCommandFormatException {","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"        Task task \u003d addTask(list);","lastModifiedDate":"2021-09-10"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"        Message message \u003d getOutputMessage(list, task);","lastModifiedDate":"2021-09-10"},{"lineNumber":61,"author":{"gitId":"zognin"},"content":"        return message;","lastModifiedDate":"2021-09-10"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":64,"author":{"gitId":"zognin"},"content":"    private Task addTask(TaskList list) throws","lastModifiedDate":"2021-09-10"},{"lineNumber":65,"author":{"gitId":"zognin"},"content":"            InvalidTaskTypeException,","lastModifiedDate":"2021-09-10"},{"lineNumber":66,"author":{"gitId":"zognin"},"content":"            InvalidDateTimeException,","lastModifiedDate":"2021-09-10"},{"lineNumber":67,"author":{"gitId":"zognin"},"content":"            DuplicateTaskException,","lastModifiedDate":"2021-09-10"},{"lineNumber":68,"author":{"gitId":"zognin"},"content":"            ErrorAccessingFileException,","lastModifiedDate":"2021-09-11"},{"lineNumber":69,"author":{"gitId":"zognin"},"content":"            InvalidCommandFormatException {","lastModifiedDate":"2021-09-11"},{"lineNumber":70,"author":{"gitId":"zognin"},"content":"        Task task \u003d Task.createTask(this.description, this.commandType);","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":72,"author":{"gitId":"zognin"},"content":"        list.validateTaskNotDuplicate(task);","lastModifiedDate":"2021-09-03"},{"lineNumber":73,"author":{"gitId":"zognin"},"content":"        list.addTaskToList(task);","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":75,"author":{"gitId":"zognin"},"content":"        return task;","lastModifiedDate":"2021-09-10"},{"lineNumber":76,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"zognin"},"content":"    private Message getOutputMessage(TaskList list, Task task) {","lastModifiedDate":"2021-09-10"},{"lineNumber":79,"author":{"gitId":"zognin"},"content":"        assert list !\u003d null : \"task list should not be null\";","lastModifiedDate":"2021-09-03"},{"lineNumber":80,"author":{"gitId":"zognin"},"content":"        assert task !\u003d null : \"task should not be null\";","lastModifiedDate":"2021-09-03"},{"lineNumber":81,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":82,"author":{"gitId":"zognin"},"content":"        String prefix \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2021-08-27"},{"lineNumber":83,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":84,"author":{"gitId":"zognin"},"content":"        int numOfTasks \u003d list.getNumberOfTasks();","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"zognin"},"content":"        String taskWord \u003d numOfTasks \u003d\u003d 1 ? \"task\" : \"tasks\";","lastModifiedDate":"2021-08-27"},{"lineNumber":86,"author":{"gitId":"zognin"},"content":"        String suffix \u003d String.format(\"Now you have %d %s in the list\", list.getNumberOfTasks(), taskWord);","lastModifiedDate":"2021-08-27"},{"lineNumber":87,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":88,"author":{"gitId":"zognin"},"content":"        return new Message(prefix, task.toString(), suffix);","lastModifiedDate":"2021-09-10"},{"lineNumber":89,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":90,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"zognin":90}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package command;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import exception.DukeException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import exception.InvalidTaskNumberException;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import exception.MissingCommandDescriptionException;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import message.Message;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import type.CommandTypeEnum;","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":" * Encapsulates a command after it is parsed from the user input.","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"     * Gets task number from a message.","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"     * @param message Message from the user.","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"     * @return Integer task number.","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"     * @throws InvalidTaskNumberException If the message is not a number.","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"    public static int getTaskNumberFromMessage(String message) throws InvalidTaskNumberException {","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"            String trimmedMessage \u003d message.trim();","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"            return Integer.parseInt(trimmedMessage);","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"            throw new InvalidTaskNumberException(message);","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"     * Validates that the command description is not empty.","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"     * @param commandType Command type of the command.","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"     * @param description Description from the command excluding the command type.","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"     * @throws MissingCommandDescriptionException If description is empty.","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"    public static void validateDescriptionNotEmpty(CommandTypeEnum commandType, String description)","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"            throws MissingCommandDescriptionException {","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"            throw new MissingCommandDescriptionException(commandType.toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"     * Executes a specific command.","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"     * @param list `TaskList` containing all tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"     * @throws DukeException If there is any error.","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"    public abstract Message execute(TaskList list) throws DukeException;","lastModifiedDate":"2021-09-10"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"zognin":51}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package command;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import exception.ErrorAccessingFileException;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import exception.InvalidTaskNumberException;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import exception.MissingCommandDescriptionException;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import exception.NonExistentTaskNumberException;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import message.Message;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import tasklist.Task;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"import type.CommandTypeEnum;","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":" * Encapsulates a delete command after it is parsed from the user input.","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"    private int taskNumber;","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"    private DeleteCommand(int taskNumber) {","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"     * Creates a `DeleteCommand`.","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"     * @param description Description from the command excluding the command type.","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"     * @return `DeleteCommand`.","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"     * @throws InvalidTaskNumberException If task number in description is not a number.","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"     * @throws MissingCommandDescriptionException If description is empty.","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"    public static DeleteCommand createCommand(String description) throws","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"            InvalidTaskNumberException,","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"            MissingCommandDescriptionException {","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"        // Validate before creating the command","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"        Command.validateDescriptionNotEmpty(CommandTypeEnum.DELETE, description);","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"        return new DeleteCommand(Command.getTaskNumberFromMessage(description));","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"     * Executes a `DeleteCommand` by deleting a task from the list.","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"     * @param list `TaskList` containing all tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"     * @return Message representing the command is executed.","lastModifiedDate":"2021-09-10"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"     * @throws NonExistentTaskNumberException If the task number does not exist in the list.","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"     * @throws ErrorAccessingFileException If there is an error accessing the storage file.","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"    public Message execute(TaskList list) throws NonExistentTaskNumberException, ErrorAccessingFileException {","lastModifiedDate":"2021-09-10"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"        Task task \u003d list.deleteTaskFromList(this.taskNumber);","lastModifiedDate":"2021-09-10"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"        return getOutputMessage(list, task);","lastModifiedDate":"2021-09-10"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"    private Message getOutputMessage(TaskList list, Task task) {","lastModifiedDate":"2021-09-10"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"        assert list !\u003d null : \"task list should not be null\";","lastModifiedDate":"2021-09-03"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"        assert task !\u003d null : \"task should not be null\";","lastModifiedDate":"2021-09-03"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"        String prefix \u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"        int numOfTasks \u003d list.getNumberOfTasks();","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"        String taskWord \u003d numOfTasks \u003d\u003d 1 ? \"task\" : \"tasks\";","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"        String suffix \u003d String.format(\"Now you have %d %s in the list\", list.getNumberOfTasks(), taskWord);","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"        return new Message(prefix, task.toString(), suffix);","lastModifiedDate":"2021-09-10"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"zognin":64}},{"path":"src/main/java/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package command;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import exception.ErrorAccessingFileException;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import exception.InvalidTaskNumberException;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import exception.MissingCommandDescriptionException;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import exception.NonExistentTaskNumberException;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import message.Message;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import tasklist.Task;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"import type.CommandTypeEnum;","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":" * Encapsulates a done command after it is parsed from the user input.","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"    private int taskNumber;","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"    private DoneCommand(int taskNumber) {","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"     * Creates a `DoneCommand`.","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"     * @param description Description from the command excluding the command type.","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"     * @return `DoneCommand`.","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"     * @throws InvalidTaskNumberException If task number in description is not a number.","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"     * @throws MissingCommandDescriptionException If description is empty.","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"    public static DoneCommand createCommand(String description)","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"            throws InvalidTaskNumberException, MissingCommandDescriptionException {","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"        // Validate before creating the command","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"        Command.validateDescriptionNotEmpty(CommandTypeEnum.DONE, description);","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"        return new DoneCommand(Command.getTaskNumberFromMessage(description));","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"     * Executes a `DoneCommand` marking a task in the list as done.","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"     * @param list `TaskList` containing all tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"     * @return Message representing the command is executed.","lastModifiedDate":"2021-09-10"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"     * @throws NonExistentTaskNumberException If the task number does not exist in the list.","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"     * @throws ErrorAccessingFileException If there is an error accessing the storage file.","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"    public Message execute(TaskList list) throws NonExistentTaskNumberException, ErrorAccessingFileException {","lastModifiedDate":"2021-09-10"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"        Task task \u003d list.markTaskAsDone(this.taskNumber);","lastModifiedDate":"2021-09-10"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"        return this.getOutputMessage(task);","lastModifiedDate":"2021-09-10"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"    private Message getOutputMessage(Task task) {","lastModifiedDate":"2021-09-10"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"        assert task !\u003d null : \"task should not be null\";","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"        String prefix \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"        return new Message(prefix, task.toString());","lastModifiedDate":"2021-09-10"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"zognin":58}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package command;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import exception.MissingCommandDescriptionException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import message.Message;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import type.CommandTypeEnum;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":" * Encapsulates a done command after it is parsed from user input.","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"    private String keyword;","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"    private FindCommand(String keyword) {","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"     * Creates a `FindCommand`.","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"     * @param keyword Keyword to search with.","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"     * @return `FindCommand`.","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"     * @throws MissingCommandDescriptionException If description is empty.","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"    public static FindCommand createCommand(String keyword) throws MissingCommandDescriptionException {","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"        // Validate before creating the command","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"        Command.validateDescriptionNotEmpty(CommandTypeEnum.FIND, keyword);","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"        return new FindCommand(keyword);","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"     * Executes a `DoneCommand` to return a list with tasks that match the keyword.","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"     * @param list List containing matching tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"     * @return Message representing the command is executed.","lastModifiedDate":"2021-09-10"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"    public Message execute(TaskList list) {","lastModifiedDate":"2021-09-10"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"        TaskList listContainingKeyword \u003d list.getListContainingKeyword(this.keyword);","lastModifiedDate":"2021-09-10"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"        return getOutputMessage(listContainingKeyword);","lastModifiedDate":"2021-09-10"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"    private Message getOutputMessage(TaskList list) {","lastModifiedDate":"2021-09-10"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"        assert list !\u003d null : \"task list should not be null\";","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"        if (list.isActiveListEmpty()) {","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"            return new Message(\"There are no tasks that match the keyword in your list\");","lastModifiedDate":"2021-09-11"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"        String prefix \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"        return new Message(prefix, list.toString());","lastModifiedDate":"2021-09-10"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"zognin":53}},{"path":"src/main/java/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package command;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import message.Message;","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import type.CommandTypeEnum;","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":" * Encapsulates a help command.","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"     * Creates a `HelpCommand`.","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"     * @return `HelpCommand`.","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"    public static HelpCommand createCommand() {","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"        return new HelpCommand();","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"     * Executes a `HelpCommand`.","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"     * @return Message representing the command is executed.","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"     * @param list `TaskList` containing all tasks.","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"    public Message execute(TaskList list) {","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"        return this.getOutputMessage();","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"    public Message getOutputMessage() {","lastModifiedDate":"2021-09-10"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"        String prefix \u003d \"These are the available commands:\";","lastModifiedDate":"2021-09-10"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-09-10"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"        CommandTypeEnum[] commandTypes \u003d CommandTypeEnum.values();","lastModifiedDate":"2021-09-10"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"        for (int i \u003d 0; i \u003c commandTypes.length; i++) {","lastModifiedDate":"2021-09-10"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"            stringBuilder.append(String.format(\"%d. %s\\n\", i + 1, commandTypes[i].toFullInfoString()));","lastModifiedDate":"2021-09-10"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"        return new Message(prefix, stringBuilder.toString());","lastModifiedDate":"2021-09-10"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"zognin":43}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package command;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import message.Message;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":" * Encapsulates a list command after it is parsed from the user input.","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"     * Creates a `ListCommand`.","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"     * @return `ListCommand`.","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"    public static ListCommand createCommand() {","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"        return new ListCommand();","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"     * Executes a `ListCommand` by retrieving the list.","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"     * @param list `TaskList` containing all tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"     * @return Message representing the command is executed.","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"    public Message execute(TaskList list) {","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"        TaskList fullList \u003d list.getFullList();","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"        return getOutputMessage(fullList);","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"    private Message getOutputMessage(TaskList list) {","lastModifiedDate":"2021-09-10"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"        assert list !\u003d null : \"task list should not be null\";","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"        if (list.isActiveListEmpty()) {","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"            return new Message(\"There are no tasks in the list yet!\");","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"        String prefix \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"        return new Message(prefix, list.toString());","lastModifiedDate":"2021-09-10"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"zognin":40}},{"path":"src/main/java/controller/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package controller;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"import javafx.scene.shape.Ellipse;","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":" * Encapsulates a controller used to control the dialog box user interface.","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":" * Includes an `ImageView` and `Label`.","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"    private String userDialogStyle \u003d","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"            \"-fx-text-fill: #FFFFFF; -fx-background-color: linear-gradient(to bottom right, #7500AC, #BE1499);\";","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"    private String dukeDialogStyle \u003d","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"            \"-fx-background-color: #F2F2F2;\";","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"    private Ellipse displayPictureClip \u003d new Ellipse(30, 25, 25, 25);","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"    @FXML","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"    @FXML","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/views/DialogBox.fxml\"));","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"    @FXML","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"    private void initialize() {","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"        displayPicture.setClip(displayPictureClip);","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"    private void flip() {","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"     * Gets a dialog box styled for the user.","lastModifiedDate":"2021-09-03"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":64,"author":{"gitId":"zognin"},"content":"     * @param text Text from user.","lastModifiedDate":"2021-09-03"},{"lineNumber":65,"author":{"gitId":"zognin"},"content":"     * @param img Image of user.","lastModifiedDate":"2021-09-03"},{"lineNumber":66,"author":{"gitId":"zognin"},"content":"     * @return `DialogBox`.","lastModifiedDate":"2021-09-03"},{"lineNumber":67,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":68,"author":{"gitId":"zognin"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"zognin"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-03"},{"lineNumber":70,"author":{"gitId":"zognin"},"content":"        db.dialog.setStyle(db.userDialogStyle);","lastModifiedDate":"2021-09-03"},{"lineNumber":71,"author":{"gitId":"zognin"},"content":"        return db;","lastModifiedDate":"2021-09-03"},{"lineNumber":72,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":75,"author":{"gitId":"zognin"},"content":"     * Gets a dialog box styled for duke.","lastModifiedDate":"2021-09-03"},{"lineNumber":76,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":77,"author":{"gitId":"zognin"},"content":"     * @param text Text from duke.","lastModifiedDate":"2021-09-03"},{"lineNumber":78,"author":{"gitId":"zognin"},"content":"     * @param img Image of duke.","lastModifiedDate":"2021-09-03"},{"lineNumber":79,"author":{"gitId":"zognin"},"content":"     * @return `DialogBox`.","lastModifiedDate":"2021-09-03"},{"lineNumber":80,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":81,"author":{"gitId":"zognin"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"zognin"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-03"},{"lineNumber":83,"author":{"gitId":"zognin"},"content":"        db.flip();","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"zognin"},"content":"        db.dialog.setStyle(db.dukeDialogStyle);","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"zognin"},"content":"        return db;","lastModifiedDate":"2021-08-27"},{"lineNumber":86,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":87,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"zognin":87}},{"path":"src/main/java/controller/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package controller;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":" * Encapsulates a controller used to control the main window user interface.","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":" * Includes the dialog container, the user input, the send button and the scroll bar.","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"    @FXML","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"    @FXML","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"    @FXML","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"    @FXML","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.png\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"    private Image sendIconImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/send.png\"));","lastModifiedDate":"2021-09-10"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"     * Instantiates the controller to render the main chat window with scrollbar and user input.","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"     * @param duke Duke to process inputs.","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"    public MainWindow(Duke duke) {","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"            this.duke \u003d duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/views/MainWindow.fxml\"));","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"     * Initializes the main window after variables are set.","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"    @FXML","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"    private void initialize() {","lastModifiedDate":"2021-09-03"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"        userInput.setPromptText(\"Write a message...\");","lastModifiedDate":"2021-09-10"},{"lineNumber":61,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"        // Set icon for send button","lastModifiedDate":"2021-09-10"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"        ImageView sendIcon \u003d new ImageView(sendIconImage);","lastModifiedDate":"2021-09-10"},{"lineNumber":64,"author":{"gitId":"zognin"},"content":"        sendIcon.setFitHeight(20);","lastModifiedDate":"2021-09-10"},{"lineNumber":65,"author":{"gitId":"zognin"},"content":"        sendIcon.setFitWidth(20);","lastModifiedDate":"2021-09-10"},{"lineNumber":66,"author":{"gitId":"zognin"},"content":"        sendButton.setGraphic(sendIcon);","lastModifiedDate":"2021-09-10"},{"lineNumber":67,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"zognin"},"content":"        // Greet user","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"zognin"},"content":"        String greetingText \u003d this.duke.greet();","lastModifiedDate":"2021-09-03"},{"lineNumber":70,"author":{"gitId":"zognin"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(greetingText, dukeImage));","lastModifiedDate":"2021-09-03"},{"lineNumber":71,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"zognin"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"zognin"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"zognin"},"content":"    @FXML","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"zognin"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"zognin"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":81,"author":{"gitId":"zognin"},"content":"        if (!input.isEmpty()) {","lastModifiedDate":"2021-09-10"},{"lineNumber":82,"author":{"gitId":"zognin"},"content":"            String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-08-27"},{"lineNumber":83,"author":{"gitId":"zognin"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"zognin"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"zognin"},"content":"                    DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-08-27"},{"lineNumber":86,"author":{"gitId":"zognin"},"content":"            );","lastModifiedDate":"2021-08-27"},{"lineNumber":87,"author":{"gitId":"zognin"},"content":"            userInput.clear();","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":90,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"zognin":90}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import command.Command;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import exception.DukeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import exception.ErrorAccessingFileException;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import exception.InvalidFormatInStorageException;","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import message.Message;","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import parser.CommandParser;","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"import storage.StorageFile;","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":" * Encapsulates a chatbot that greets the user,","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":" * adds valid inputs to a task list,","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":" * updates tasks in the list,","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":" * and exits when the user types `bye`.","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"    private TaskList list;","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"    private CommandParser parser;","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"    private Message loadErrorMessage;","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"     * Instantiates a `Duke` chat bot.","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"    public Duke() {","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"        try {","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"            Storage storage \u003d new Storage();","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"            StorageFile storageFile \u003d storage.loadListFile(\"duke.txt\");","lastModifiedDate":"2021-09-10"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"            TaskList list \u003d storageFile.scanFileDataToNewTaskList();","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"            this.list \u003d list;","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"        } catch (ErrorAccessingFileException | InvalidFormatInStorageException e) {","lastModifiedDate":"2021-09-10"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"            this.loadErrorMessage \u003d e.getOutputMessage();","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"        this.parser \u003d new CommandParser();","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"     * Gets response when user sends a message.","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"     * @param input Input by user.","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"     * @return String response from Duke.","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"        try {","lastModifiedDate":"2021-08-14"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"            if (this.parser.detectExitCommand(input)) {","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"                Platform.exit();","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"            Command command \u003d this.parser.createCommand(input);","lastModifiedDate":"2021-09-03"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"            return command.execute(this.list).toString();","lastModifiedDate":"2021-09-10"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-15"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"            return e.getOutputMessage().toString();","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":61,"author":{"gitId":"zognin"},"content":"     * Greets the user.","lastModifiedDate":"2021-09-03"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"     * @return Greeting string.","lastModifiedDate":"2021-09-03"},{"lineNumber":64,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":65,"author":{"gitId":"zognin"},"content":"    public String greet() {","lastModifiedDate":"2021-09-03"},{"lineNumber":66,"author":{"gitId":"zognin"},"content":"        if (this.loadErrorMessage !\u003d null) {","lastModifiedDate":"2021-09-03"},{"lineNumber":67,"author":{"gitId":"zognin"},"content":"            return this.loadErrorMessage.toString() + \"\\nPlease exit and try again later.\";","lastModifiedDate":"2021-09-03"},{"lineNumber":68,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":69,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":70,"author":{"gitId":"zognin"},"content":"        Message greetingMessage \u003d new Message(\"Hello! I\u0027m JIJI, what shall we do today?\");","lastModifiedDate":"2021-09-10"},{"lineNumber":71,"author":{"gitId":"zognin"},"content":"        return greetingMessage.toString();","lastModifiedDate":"2021-09-03"},{"lineNumber":72,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"zognin":70,"-":3}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":" * Encapsulates a launcher with a main function that is the entrypoint of the application.","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"public class Launcher {","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"     * Launches the application.","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"     * @param args Vararg.","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"    public static void main(String ...args) {","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"zognin":17}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import controller.MainWindow;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":" * Encapsulates main class that starts the application with duke and the user interface.","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"     * Starts the application.","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"     * @param stage Stage for the user interface.","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"        MainWindow mainWindow \u003d new MainWindow(this.duke);","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"        Scene scene \u003d new Scene(mainWindow);","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"        scene.getStylesheets().add(getClass().getResource(\"/stylesheets/app.css\").toExternalForm());","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"        stage.setScene(scene);","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"        stage.setTitle(\"JIJI\");","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"        stage.setResizable(false);","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"        stage.show();","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"zognin":31}},{"path":"src/main/java/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import message.Message;","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":" * Encapsulates an exception that contains a method to get an `ErrorMessage`.","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":" * Duke exceptions contain messages that should be shown to the user.","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"    protected DukeException(String message) {","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"        super(message);","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"     * Gets an output message containing information about why the error occurred.","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"     * And/or how the user can correct the error.","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"     * @return `Message`.","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"    public Message getOutputMessage() {","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"        return new Message(this.getMessage());","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"zognin":23}},{"path":"src/main/java/exception/DuplicateTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package exception;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import tasklist.Task;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":" * Encapsulates an exception when there is an attempt to add a duplicate task.","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"public class DuplicateTaskException extends DukeException {","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"     * Instantiates an exception when there is an attempt to add a duplicate task.","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"     * @param task Task that is a duplicate of an existing task.","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"    public DuplicateTaskException(Task task) {","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"        super(String.format(\"You cannot add a duplicate task!\\n\\nTask \u0027%s\u0027 already exists in the list\",","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"                task.toString()));","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"zognin":17}},{"path":"src/main/java/exception/ErrorAccessingFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package exception;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":" * Encapsulates an exception when there is an error accessing a storage file.","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"public class ErrorAccessingFileException extends DukeException {","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"     * Instantiates an exception when there is an error accessing a storage file.","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"     * @param action Action performed on the storage file.","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"    public ErrorAccessingFileException(String action) {","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"        super(String.format(\"Error accessing file when trying to %s\", action));","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"zognin":15}},{"path":"src/main/java/exception/InvalidCommandFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package exception;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import type.CommandTypeEnum;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":" * Encapsulates an exception when a command is incorrectly formatted.","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"public class InvalidCommandFormatException extends DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"     * Instantiates an exception when a command is incorrectly formatted.","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"     * @param commandType Command Type of the input.","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"    public InvalidCommandFormatException(CommandTypeEnum commandType) {","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"        super(","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"                String.format(","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"                        \"A $s command should have be in this format: %s\",","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"                        commandType.toString(),","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"                        commandType.getFormat()","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"                )","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"        );","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"zognin":23}},{"path":"src/main/java/exception/InvalidDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":" * Encapsulates an exception when an input has an invalid datetime format.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"public class InvalidDateTimeException extends DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"     * Instantiates an exception when an input has an invalid datetime format.","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"     * @param format Required datetime format.","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"    public InvalidDateTimeException(String format) {","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"        super(String.format(\"DateTime should be in the form of \u0027%s\u0027\", format));","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"zognin":15}},{"path":"src/main/java/exception/InvalidFormatInStorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package exception;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":" * Encapsulates an exception when there is data with an invalid format in storage.","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"public class InvalidFormatInStorageException extends DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"     * Instantiates an exception when there is data with an invalid format in storage.","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"     * @param formatError Format that is invalid.","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"     * @param expectedFormat Expected format.","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"    public InvalidFormatInStorageException(String formatError, String expectedFormat) {","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"        super(","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"                String.format(\"There was data with an invalid format in storage: %s\\nExpected Format is: %s\",","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"                formatError,","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"                expectedFormat)","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"        );","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"zognin":20}},{"path":"src/main/java/exception/InvalidNumOfStringPartsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package exception;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":" * Encapsulates an exception when an array of strings has an incorrect number of parts.","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"public class InvalidNumOfStringPartsException extends DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"     * Encapsulates an exception when an array of strings has an incorrect number of parts.","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"     * @param expectedNumOfParts Expected number of parts.","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"     * @param parts Array with string parts.","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"    public InvalidNumOfStringPartsException(int expectedNumOfParts, String[] parts) {","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"        super(String.format(","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"            \"%d parts were expected but the actual parts were %s\",","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"            expectedNumOfParts,","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"            Arrays.toString(parts)","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"        ));","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"zognin":22}},{"path":"src/main/java/exception/InvalidTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":" * Encapsulates an exception when an input meant to be a task number cannot be parsed into a number.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"public class InvalidTaskNumberException extends DukeException {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"     * Instantiates an exception when an input meant to be a task number cannot be parsed into a number.","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"     * @param input Input string.","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"    public InvalidTaskNumberException(String input) {","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"        super(String.format(\"%s is not a valid number\", input));","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"zognin":15}},{"path":"src/main/java/exception/InvalidTaskTypeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import type.CommandTypeEnum;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":" * Encapsulates an exception when a user inputs an invalid task.","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"public class InvalidTaskTypeException extends DukeException {","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"     * Instantiates an exception when a user inputs an invalid task.","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"     * @param commandType Command type that is incorrectly used as a task.","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"    public InvalidTaskTypeException(CommandTypeEnum commandType) {","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"        super(String.format(","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"                \"\u0027%s\u0027 is not a valid task type. \"","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"                        + \"Tasks should begin with one of the following: todo, deadline, event\",","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"                commandType","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"        ));","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"zognin":21}},{"path":"src/main/java/exception/MissingCommandDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":" * Encapsulates an exception when a user inputs a command with an empty description,","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":" * but the command requires a description.","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"public class MissingCommandDescriptionException extends DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"     * Instantiates an exception when a user inputs a command with an empty description.","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"     * @param commandType Command type.","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"    public MissingCommandDescriptionException(String commandType) {","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"        super(String.format(","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"                \"The description of a %s command cannot be empty\",","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"                commandType","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"        ));","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"zognin":19}},{"path":"src/main/java/exception/NonExistentCommandTypeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import command.HelpCommand;","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":" * Encapsulates an exception when a user inputs a command that is not recognised.","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"public class NonExistentCommandTypeException extends DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"     * Instantiates an exception when a user inputs a command that is not recognised.","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"     * @param inputMessage Input message.","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"    public NonExistentCommandTypeException(String inputMessage) {","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"        super(String.format(","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"                \"Sorry I do not recognise this command \u0027%s\u0027.\\n\\n%s\",","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"                inputMessage,","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"                new HelpCommand().getOutputMessage().toString()","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"        ));","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"zognin":21}},{"path":"src/main/java/exception/NonExistentTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":" * Encapsulates an exception when the user inputs a task number that does not exist in the list.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"public class NonExistentTaskNumberException extends DukeException {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"     * Instantiates an exception when the user inputs a task number that does not exist in the list.","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"     * @param taskNumber Task number.","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"    public NonExistentTaskNumberException(int taskNumber) {","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"        super(String.format(\"Task %d does not exist in the list\", taskNumber));","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"zognin":15}},{"path":"src/main/java/exception/UnhandledCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package exception;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import type.CommandTypeEnum;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":" * Encapsulates an exception when the command is valid but not handled.","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"public class UnhandledCommandException extends DukeException {","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"     * Instantiates an exception when the command is valid but not handled.","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"     * @param commandType `DukeCommandTypeEnum`.","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"    public UnhandledCommandException(CommandTypeEnum commandType) {","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"        super(String.format(\"There was an error in handling the command \u0027%s\u0027\", commandType.toString()));","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"zognin":16}},{"path":"src/main/java/message/Message.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package message;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":" * Encapsulates the base output message that Duke replies to the user.","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":" * It includes methods to format the output message.","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"public class Message {","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"    private String[] texts;","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"     * Instantiates a Message holding texts to be output to the user.","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"     * @param texts Texts are vararg of strings.","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"    public Message(String ...texts) {","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"        assert texts.length \u003e 0 : \"A message should have least one string\";","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"        this.texts \u003d texts;","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"     * Gets string representation of `Message`.","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"     * Each chunk of text in a `Message` is separated by a new line.","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"     * @return string representation of `Message`.","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"    public String toString() {","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"        Arrays.stream(this.texts).forEach((text) -\u003e {","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"            stringBuilder.append(text);","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"            stringBuilder.append(\"\\n\");","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"        });","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"        return stringBuilder.toString().trim();","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"zognin":39}},{"path":"src/main/java/parser/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package parser;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import command.AddCommand;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import command.Command;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import command.DeleteCommand;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import command.DoneCommand;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import command.FindCommand;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import command.HelpCommand;","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import command.ListCommand;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"import exception.InvalidNumOfStringPartsException;","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"import exception.InvalidTaskNumberException;","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"import exception.MissingCommandDescriptionException;","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"import exception.NonExistentCommandTypeException;","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"import exception.UnhandledCommandException;","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"import type.CommandTypeEnum;","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":" * Encapsulates a `Parser` that parses string inputs to commands or throws exceptions if they are invalid.","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"public class CommandParser {","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"     * Detects if an input is the exit command.","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"     * @param inputMessage Input string taken in by System.in.","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"     * @return True if it the input is the exit command, false otherwise.","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"    public boolean detectExitCommand(String inputMessage) {","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"        return inputMessage.trim().equals(CommandTypeEnum.BYE.toString());","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"     * Creates a command from the input string.","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"     * @param message Input string taken in by System.in.","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"     * @return `Command`.","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"     * @throws InvalidTaskNumberException If the `Command` has an invalid task number.","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"     * @throws NonExistentCommandTypeException If the `Command` has a command type that is not recognised.","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"     * @throws MissingCommandDescriptionException If the `Command` has a missing description.","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"    public Command createCommand(String message) throws","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"            InvalidTaskNumberException,","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"            NonExistentCommandTypeException,","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"            MissingCommandDescriptionException,","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"            UnhandledCommandException {","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"        CommandTypeEnum commandType \u003d getCommandType(message);","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"        String messageWithoutCommand \u003d removeCommandTypePrefix(message, commandType);","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"        String trimmedMessageWithoutCommand \u003d messageWithoutCommand.trim();","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"        switch (commandType) {","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"        case LIST:","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"            return ListCommand.createCommand();","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"        case DONE:","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"            return DoneCommand.createCommand(trimmedMessageWithoutCommand);","lastModifiedDate":"2021-09-03"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"        case DELETE:","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"            return DeleteCommand.createCommand(trimmedMessageWithoutCommand);","lastModifiedDate":"2021-09-03"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"        case FIND:","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"            return FindCommand.createCommand(trimmedMessageWithoutCommand);","lastModifiedDate":"2021-09-03"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"        case HELP:","lastModifiedDate":"2021-09-10"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"            return HelpCommand.createCommand();","lastModifiedDate":"2021-09-10"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"        case TODO:","lastModifiedDate":"2021-09-03"},{"lineNumber":61,"author":{"gitId":"zognin"},"content":"            return AddCommand.createCommand(trimmedMessageWithoutCommand, commandType);","lastModifiedDate":"2021-09-03"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"        case DEADLINE:","lastModifiedDate":"2021-09-03"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"            return AddCommand.createCommand(trimmedMessageWithoutCommand, commandType);","lastModifiedDate":"2021-09-03"},{"lineNumber":64,"author":{"gitId":"zognin"},"content":"        case EVENT:","lastModifiedDate":"2021-09-03"},{"lineNumber":65,"author":{"gitId":"zognin"},"content":"            return AddCommand.createCommand(trimmedMessageWithoutCommand, commandType);","lastModifiedDate":"2021-09-03"},{"lineNumber":66,"author":{"gitId":"zognin"},"content":"        default:","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"zognin"},"content":"            throw new UnhandledCommandException(commandType);","lastModifiedDate":"2021-09-03"},{"lineNumber":68,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":72,"author":{"gitId":"zognin"},"content":"     * Splits a string into an array of elements by a given splitter.","lastModifiedDate":"2021-09-11"},{"lineNumber":73,"author":{"gitId":"zognin"},"content":"     * @param input Input to split.","lastModifiedDate":"2021-09-11"},{"lineNumber":74,"author":{"gitId":"zognin"},"content":"     * @param splitter Splitter to split the string by.","lastModifiedDate":"2021-09-11"},{"lineNumber":75,"author":{"gitId":"zognin"},"content":"     * @return Array of strings.","lastModifiedDate":"2021-09-11"},{"lineNumber":76,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":77,"author":{"gitId":"zognin"},"content":"    public static String[] splitStringBySplitter(String input, String splitter) {","lastModifiedDate":"2021-09-11"},{"lineNumber":78,"author":{"gitId":"zognin"},"content":"        String[] splitParts \u003d input.split(splitter);","lastModifiedDate":"2021-09-11"},{"lineNumber":79,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":80,"author":{"gitId":"zognin"},"content":"        // Trim split parts to remove whitespace before and after","lastModifiedDate":"2021-09-11"},{"lineNumber":81,"author":{"gitId":"zognin"},"content":"        for (int i \u003d 0; i \u003c splitParts.length; i++) {","lastModifiedDate":"2021-09-11"},{"lineNumber":82,"author":{"gitId":"zognin"},"content":"            splitParts[i] \u003d splitParts[i].trim();","lastModifiedDate":"2021-09-11"},{"lineNumber":83,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":84,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":85,"author":{"gitId":"zognin"},"content":"        return splitParts;","lastModifiedDate":"2021-09-11"},{"lineNumber":86,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":87,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":88,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":89,"author":{"gitId":"zognin"},"content":"     * Validates that an array of strings has the correct number of parts.","lastModifiedDate":"2021-09-11"},{"lineNumber":90,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":91,"author":{"gitId":"zognin"},"content":"     * @param expectedNumOfParts Expected number of parts.","lastModifiedDate":"2021-09-11"},{"lineNumber":92,"author":{"gitId":"zognin"},"content":"     * @param splitParts Array of strings.","lastModifiedDate":"2021-09-11"},{"lineNumber":93,"author":{"gitId":"zognin"},"content":"     * @throws InvalidNumOfStringPartsException If the number of parts is wrong.","lastModifiedDate":"2021-09-11"},{"lineNumber":94,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":95,"author":{"gitId":"zognin"},"content":"    public static void validateCorrectNumOfParts(","lastModifiedDate":"2021-09-11"},{"lineNumber":96,"author":{"gitId":"zognin"},"content":"            int expectedNumOfParts,","lastModifiedDate":"2021-09-11"},{"lineNumber":97,"author":{"gitId":"zognin"},"content":"            String[] splitParts) throws InvalidNumOfStringPartsException {","lastModifiedDate":"2021-09-11"},{"lineNumber":98,"author":{"gitId":"zognin"},"content":"        if (splitParts.length !\u003d expectedNumOfParts) {","lastModifiedDate":"2021-09-11"},{"lineNumber":99,"author":{"gitId":"zognin"},"content":"            throw new InvalidNumOfStringPartsException(expectedNumOfParts, splitParts);","lastModifiedDate":"2021-09-11"},{"lineNumber":100,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":101,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":102,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":103,"author":{"gitId":"zognin"},"content":"    private CommandTypeEnum getCommandType(String message) throws NonExistentCommandTypeException {","lastModifiedDate":"2021-09-03"},{"lineNumber":104,"author":{"gitId":"zognin"},"content":"        String trimmedMessage \u003d message.trim();","lastModifiedDate":"2021-08-21"},{"lineNumber":105,"author":{"gitId":"zognin"},"content":"        String[] messagesSplitUsingSpace \u003d trimmedMessage.split(\" \");","lastModifiedDate":"2021-08-21"},{"lineNumber":106,"author":{"gitId":"zognin"},"content":"        String commandWord \u003d messagesSplitUsingSpace[0];","lastModifiedDate":"2021-08-21"},{"lineNumber":107,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":108,"author":{"gitId":"zognin"},"content":"        for (CommandTypeEnum commandType : CommandTypeEnum.values()) {","lastModifiedDate":"2021-09-03"},{"lineNumber":109,"author":{"gitId":"zognin"},"content":"            if (commandWord.equals(commandType.toString())) {","lastModifiedDate":"2021-09-03"},{"lineNumber":110,"author":{"gitId":"zognin"},"content":"                return commandType;","lastModifiedDate":"2021-08-21"},{"lineNumber":111,"author":{"gitId":"zognin"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":112,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":113,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":114,"author":{"gitId":"zognin"},"content":"        throw new NonExistentCommandTypeException(message);","lastModifiedDate":"2021-08-21"},{"lineNumber":115,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":116,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":117,"author":{"gitId":"zognin"},"content":"    private String removeCommandTypePrefix(String message, CommandTypeEnum commandType) {","lastModifiedDate":"2021-09-03"},{"lineNumber":118,"author":{"gitId":"zognin"},"content":"        String commandTypeString \u003d commandType.toString();","lastModifiedDate":"2021-09-03"},{"lineNumber":119,"author":{"gitId":"zognin"},"content":"        return message.trim().substring(commandTypeString.length());","lastModifiedDate":"2021-09-03"},{"lineNumber":120,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":121,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"zognin":121}},{"path":"src/main/java/parser/DateTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package parser;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import exception.InvalidDateTimeException;","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":" * Encapsulates a parser for date time.","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"public class DateTimeParser {","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"     * Changes date from string to `LocalDate`.","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"     * @param dateString Date string.","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"     * @param dateFormat Format of date string.","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"     * @return `LocalDate`.","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"     * @throws InvalidDateTimeException If there is an error parsing a string to a date.","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"    public static LocalDate changeDateStringToDate(String dateString, String dateFormat)","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"            throws InvalidDateTimeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(dateFormat);","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"        try {","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"            return LocalDate.parse(dateString, dateFormatter);","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"            throw new InvalidDateTimeException(dateFormat);","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"     * Changes time from string to `LocalTime`.","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"     * @param timeString Time string.","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"     * @param timeFormat Format of time string.","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"     * @return `LocalTime`.","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"     * @throws InvalidDateTimeException If there is an error parsing a string to a time.","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"    public static LocalTime changeTimeStringToTime(String timeString, String timeFormat)","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"            throws InvalidDateTimeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(timeFormat);","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"        try {","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"            return LocalTime.parse(timeString, timeFormatter);","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"            throw new InvalidDateTimeException(timeFormat);","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"     * Changes `LocalDate` to a string in specified format.","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"     * @param date `LocalDate`.","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"     * @param dateFormat Format of desired date string.","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"     * @return String representation of date.","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"    public static String changeDateToDateString(LocalDate date, String dateFormat) {","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(dateFormat);","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"zognin"},"content":"        return dateFormatter.format(date);","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":64,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":65,"author":{"gitId":"zognin"},"content":"     * Changes `LocalTime` to a string in specified format.","lastModifiedDate":"2021-09-11"},{"lineNumber":66,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"zognin"},"content":"     * @param time `LocalTime`.","lastModifiedDate":"2021-09-11"},{"lineNumber":68,"author":{"gitId":"zognin"},"content":"     * @param timeFormat Format of desired time string.","lastModifiedDate":"2021-09-11"},{"lineNumber":69,"author":{"gitId":"zognin"},"content":"     * @return String representation of time.","lastModifiedDate":"2021-09-11"},{"lineNumber":70,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":71,"author":{"gitId":"zognin"},"content":"    public static String changeTimeToTimeString(LocalTime time, String timeFormat) {","lastModifiedDate":"2021-09-11"},{"lineNumber":72,"author":{"gitId":"zognin"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(timeFormat);","lastModifiedDate":"2021-09-11"},{"lineNumber":73,"author":{"gitId":"zognin"},"content":"        return timeFormatter.format(time);","lastModifiedDate":"2021-09-11"},{"lineNumber":74,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":75,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"zognin":75}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package storage;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import java.io.File;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import exception.ErrorAccessingFileException;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":" * Encapsulates the object handling data that is stored in the hard disk.","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"public class Storage {","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"    private static final String STORAGE_DIRECTORY_PATH \u003d \"./storage\";","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"     * Loads storage file containing the specified list.","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"     * Creates new storage file for the list if the file does not exist.","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"     * @param listFileName Name of the file containing the list data.","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"     * @return `StorageFile`.","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"     * @throws ErrorAccessingFileException If there is an error accessing the storage file.","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"    public StorageFile loadListFile(String listFileName) throws ErrorAccessingFileException {","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"            File directory \u003d new File(STORAGE_DIRECTORY_PATH);","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"            directory.mkdirs();","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"            String filePath \u003d String.format(\"%s/%s\", STORAGE_DIRECTORY_PATH, listFileName);","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"            return StorageFile.loadFile(filePath);","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"            throw new ErrorAccessingFileException(\"load the file\");","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"zognin":33}},{"path":"src/main/java/storage/StorageFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package storage;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import java.io.File;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"import java.util.List;","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"import exception.ErrorAccessingFileException;","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"import exception.InvalidFormatInStorageException;","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"import tasklist.Task;","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":" * Encapsulates a storage file that handles data stored in one file in the hard disk.","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"public class StorageFile {","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"    private String filePath;","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"    private File file;","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"    private StorageFile(String filePath, File file) {","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"        this.file \u003d file;","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"     * Loads a file from the hard disk.","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"     * @param filePath Location of the file on the hard disk.","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"     * @return `StorageFile`.","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"     * @throws IOException If there is an exception in loading the file.","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"    public static StorageFile loadFile(String filePath) throws IOException {","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"        file.createNewFile();","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"        return new StorageFile(filePath, file);","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"     * Scans file data to a new task list.","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"     * @return `TaskList`.","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"     * @throws ErrorAccessingFileException If there is an error scanning the file.","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"     * @throws InvalidFormatInStorageException If there is data with incorrect format in storage.","lastModifiedDate":"2021-09-10"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"    public TaskList scanFileDataToNewTaskList() throws ErrorAccessingFileException, InvalidFormatInStorageException {","lastModifiedDate":"2021-09-10"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"        TaskList list \u003d new TaskList(this);","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"        try {","lastModifiedDate":"2021-09-03"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"            Scanner s \u003d new Scanner(this.file);","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"                String lineData \u003d s.nextLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"                Task task \u003d Task.createTaskFromStoredString(lineData);","lastModifiedDate":"2021-09-03"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"                list.scanExistingTaskToList(task);","lastModifiedDate":"2021-09-03"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"            }","lastModifiedDate":"2021-09-03"},{"lineNumber":61,"author":{"gitId":"zognin"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-03"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"            throw new ErrorAccessingFileException(\"scan file data to task list\");","lastModifiedDate":"2021-09-03"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":65,"author":{"gitId":"zognin"},"content":"        return list;","lastModifiedDate":"2021-09-03"},{"lineNumber":66,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"zognin"},"content":"     * Adds task to a new line at the end of the file in the hard disk.","lastModifiedDate":"2021-09-11"},{"lineNumber":70,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"zognin"},"content":"     * @param task Task to be added.","lastModifiedDate":"2021-09-11"},{"lineNumber":72,"author":{"gitId":"zognin"},"content":"     * @throws IOException If there is an exception when accessing the file.","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"zognin"},"content":"    public void add(Task task) throws IOException {","lastModifiedDate":"2021-09-11"},{"lineNumber":75,"author":{"gitId":"zognin"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath, true);","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"zognin"},"content":"        fw.write(task.toStorageString() + System.lineSeparator());","lastModifiedDate":"2021-09-11"},{"lineNumber":77,"author":{"gitId":"zognin"},"content":"        fw.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"zognin"},"content":"     * Rewrites the file with new content.","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"zognin"},"content":"     * @param tasks Tasks to rewrite the new file with.","lastModifiedDate":"2021-09-11"},{"lineNumber":84,"author":{"gitId":"zognin"},"content":"     * @throws IOException If there is an exception when accessing the file.","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"zognin"},"content":"    public void rewriteFile(List\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2021-09-11"},{"lineNumber":87,"author":{"gitId":"zognin"},"content":"        List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"zognin"},"content":"        tasks.forEach((item) -\u003e lines.add(item.toStorageString()));","lastModifiedDate":"2021-09-11"},{"lineNumber":89,"author":{"gitId":"zognin"},"content":"        Path path \u003d Paths.get(this.filePath);","lastModifiedDate":"2021-08-21"},{"lineNumber":90,"author":{"gitId":"zognin"},"content":"        Files.write(path, lines);","lastModifiedDate":"2021-08-21"},{"lineNumber":91,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"zognin":92}},{"path":"src/main/java/tasklist/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package tasklist;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import exception.InvalidCommandFormatException;","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import exception.InvalidDateTimeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import exception.InvalidFormatInStorageException;","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import exception.InvalidNumOfStringPartsException;","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"import parser.CommandParser;","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"import parser.DateTimeParser;","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"import type.CommandTypeEnum;","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"import type.DateFormatTypeEnum;","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"import type.TaskIconTypeEnum;","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"import type.TimeFormatTypeEnum;","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":" * Encapsulates a task with a deadline.","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":" * It inherits from `DukeTask`.","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"    private static final String SPLITTER_ACTION_TIME \u003d \"/by\";","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"    private static final String SPLITTER_DATE_TIME \u003d \" \";","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"    private LocalDate date;","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"    private LocalTime time;","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"    private DeadlineTask(String description, boolean isDone, LocalDate date, LocalTime time) {","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"     * Processes the input string to create a deadline task with an action and deadline.","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"     * @param description Input task string.","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"     * @return App representation of a task containing an action description and deadline information.","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"    public static DeadlineTask createTask(String description)","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"            throws InvalidDateTimeException, InvalidCommandFormatException {","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"        try {","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"            String[] actionAndDateTimeDescriptions \u003d CommandParser.splitStringBySplitter(","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"                    description, SPLITTER_ACTION_TIME);","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"            CommandParser.validateCorrectNumOfParts(2, actionAndDateTimeDescriptions);","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"            String actionDescription \u003d actionAndDateTimeDescriptions[0];","lastModifiedDate":"2021-09-10"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"            String dateTimeDescription \u003d actionAndDateTimeDescriptions[1];","lastModifiedDate":"2021-09-10"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"            String[] dateTimeDescriptions \u003d CommandParser.splitStringBySplitter(","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"                    dateTimeDescription, SPLITTER_DATE_TIME);","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"            CommandParser.validateCorrectNumOfParts(2, dateTimeDescriptions);","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"            LocalDate date \u003d DateTimeParser.changeDateStringToDate(","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"                    dateTimeDescriptions[0], DateFormatTypeEnum.INPUT.toString());","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"            LocalTime time \u003d DateTimeParser.changeTimeStringToTime(","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"                    dateTimeDescriptions[1], TimeFormatTypeEnum.INPUT.toString());","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"            return new DeadlineTask(actionDescription, false, date, time);","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"        } catch (InvalidNumOfStringPartsException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"            throw new InvalidCommandFormatException(CommandTypeEnum.DEADLINE);","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":64,"author":{"gitId":"zognin"},"content":"     * Formats the task in string form, displaying the task type, status, description and deadline.","lastModifiedDate":"2021-08-14"},{"lineNumber":65,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":66,"author":{"gitId":"zognin"},"content":"     * @return Task in a displayed string format.","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":68,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":69,"author":{"gitId":"zognin"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":70,"author":{"gitId":"zognin"},"content":"        return String.format(\"[%s]%s (by: %s %s)\",","lastModifiedDate":"2021-09-11"},{"lineNumber":71,"author":{"gitId":"zognin"},"content":"                TaskIconTypeEnum.DEADLINE.toString(),","lastModifiedDate":"2021-09-11"},{"lineNumber":72,"author":{"gitId":"zognin"},"content":"                super.toString(),","lastModifiedDate":"2021-09-11"},{"lineNumber":73,"author":{"gitId":"zognin"},"content":"                DateTimeParser.changeDateToDateString(this.date, DateFormatTypeEnum.OUTPUT.toString()),","lastModifiedDate":"2021-09-11"},{"lineNumber":74,"author":{"gitId":"zognin"},"content":"                DateTimeParser.changeTimeToTimeString(this.time, TimeFormatTypeEnum.OUTPUT.toString())","lastModifiedDate":"2021-09-11"},{"lineNumber":75,"author":{"gitId":"zognin"},"content":"        );","lastModifiedDate":"2021-09-11"},{"lineNumber":76,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":77,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":78,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":79,"author":{"gitId":"zognin"},"content":"     * Formats the task to storage string form.","lastModifiedDate":"2021-09-11"},{"lineNumber":80,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":81,"author":{"gitId":"zognin"},"content":"     * @return Task in storage string format.","lastModifiedDate":"2021-09-11"},{"lineNumber":82,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":83,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":84,"author":{"gitId":"zognin"},"content":"    public String toStorageString() {","lastModifiedDate":"2021-09-11"},{"lineNumber":85,"author":{"gitId":"zognin"},"content":"        return String.format(\"[%s]%s %s %s %s\",","lastModifiedDate":"2021-09-11"},{"lineNumber":86,"author":{"gitId":"zognin"},"content":"                TaskIconTypeEnum.DEADLINE.toString(),","lastModifiedDate":"2021-09-10"},{"lineNumber":87,"author":{"gitId":"zognin"},"content":"                super.toString(),","lastModifiedDate":"2021-09-10"},{"lineNumber":88,"author":{"gitId":"zognin"},"content":"                SPLITTER_ACTION_TIME,","lastModifiedDate":"2021-09-11"},{"lineNumber":89,"author":{"gitId":"zognin"},"content":"                DateTimeParser.changeDateToDateString(this.date, DateFormatTypeEnum.INPUT.toString()),","lastModifiedDate":"2021-09-11"},{"lineNumber":90,"author":{"gitId":"zognin"},"content":"                DateTimeParser.changeTimeToTimeString(this.time, TimeFormatTypeEnum.INPUT.toString())","lastModifiedDate":"2021-09-11"},{"lineNumber":91,"author":{"gitId":"zognin"},"content":"        );","lastModifiedDate":"2021-09-10"},{"lineNumber":92,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":93,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":95,"author":{"gitId":"zognin"},"content":"     * Creates an app representation of a deadline task from the storage representation of the task.","lastModifiedDate":"2021-08-21"},{"lineNumber":96,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":97,"author":{"gitId":"zognin"},"content":"     * @param description Storage representation of a deadline task.","lastModifiedDate":"2021-08-21"},{"lineNumber":98,"author":{"gitId":"zognin"},"content":"     * @return App representation of a deadline task.","lastModifiedDate":"2021-08-21"},{"lineNumber":99,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":100,"author":{"gitId":"zognin"},"content":"    public static DeadlineTask createTaskFromStoredString(String description) throws InvalidFormatInStorageException {","lastModifiedDate":"2021-09-10"},{"lineNumber":101,"author":{"gitId":"zognin"},"content":"        String dateFormat \u003d DateFormatTypeEnum.INPUT.toString();","lastModifiedDate":"2021-09-11"},{"lineNumber":102,"author":{"gitId":"zognin"},"content":"        String timeFormat \u003d TimeFormatTypeEnum.INPUT.toString();","lastModifiedDate":"2021-09-11"},{"lineNumber":103,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":104,"author":{"gitId":"zognin"},"content":"        try {","lastModifiedDate":"2021-09-10"},{"lineNumber":105,"author":{"gitId":"zognin"},"content":"            boolean isDone \u003d Task.isStorageTaskDone(description);","lastModifiedDate":"2021-09-10"},{"lineNumber":106,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":107,"author":{"gitId":"zognin"},"content":"            int descriptionStartPos \u003d 3;","lastModifiedDate":"2021-09-10"},{"lineNumber":108,"author":{"gitId":"zognin"},"content":"            String[] actionAndDateTimeDescriptions \u003d CommandParser.splitStringBySplitter(","lastModifiedDate":"2021-09-11"},{"lineNumber":109,"author":{"gitId":"zognin"},"content":"                    description.substring(descriptionStartPos),","lastModifiedDate":"2021-09-10"},{"lineNumber":110,"author":{"gitId":"zognin"},"content":"                    SPLITTER_ACTION_TIME","lastModifiedDate":"2021-09-11"},{"lineNumber":111,"author":{"gitId":"zognin"},"content":"            );","lastModifiedDate":"2021-08-21"},{"lineNumber":112,"author":{"gitId":"zognin"},"content":"            CommandParser.validateCorrectNumOfParts(2, actionAndDateTimeDescriptions);","lastModifiedDate":"2021-09-11"},{"lineNumber":113,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":114,"author":{"gitId":"zognin"},"content":"            String actionDescription \u003d actionAndDateTimeDescriptions[0];","lastModifiedDate":"2021-09-10"},{"lineNumber":115,"author":{"gitId":"zognin"},"content":"            String dateTimeDescription \u003d actionAndDateTimeDescriptions[1];","lastModifiedDate":"2021-09-11"},{"lineNumber":116,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":117,"author":{"gitId":"zognin"},"content":"            String[] dateTimeDescriptions \u003d CommandParser.splitStringBySplitter(","lastModifiedDate":"2021-09-11"},{"lineNumber":118,"author":{"gitId":"zognin"},"content":"                    dateTimeDescription, SPLITTER_DATE_TIME);","lastModifiedDate":"2021-09-11"},{"lineNumber":119,"author":{"gitId":"zognin"},"content":"            CommandParser.validateCorrectNumOfParts(2, dateTimeDescriptions);","lastModifiedDate":"2021-09-11"},{"lineNumber":120,"author":{"gitId":"zognin"},"content":"            LocalDate date \u003d DateTimeParser.changeDateStringToDate(dateTimeDescriptions[0], dateFormat);","lastModifiedDate":"2021-09-11"},{"lineNumber":121,"author":{"gitId":"zognin"},"content":"            LocalTime time \u003d DateTimeParser.changeTimeStringToTime(dateTimeDescriptions[1], timeFormat);","lastModifiedDate":"2021-09-11"},{"lineNumber":122,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":123,"author":{"gitId":"zognin"},"content":"            return new DeadlineTask(actionDescription, isDone, date, time);","lastModifiedDate":"2021-09-11"},{"lineNumber":124,"author":{"gitId":"zognin"},"content":"        } catch (InvalidDateTimeException | InvalidNumOfStringPartsException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":125,"author":{"gitId":"zognin"},"content":"            String expectedFormat \u003d String.format(\"[ ] \u003cdescription\u003e %s %s %s\",","lastModifiedDate":"2021-09-11"},{"lineNumber":126,"author":{"gitId":"zognin"},"content":"                    SPLITTER_ACTION_TIME, dateFormat, timeFormat);","lastModifiedDate":"2021-09-11"},{"lineNumber":127,"author":{"gitId":"zognin"},"content":"            throw new InvalidFormatInStorageException(description, expectedFormat);","lastModifiedDate":"2021-09-11"},{"lineNumber":128,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":129,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":130,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":131,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":132,"author":{"gitId":"zognin"},"content":"    protected boolean isDuplicateOf(Task task) {","lastModifiedDate":"2021-09-03"},{"lineNumber":133,"author":{"gitId":"zognin"},"content":"        // A different type of task is definitely not a duplicate","lastModifiedDate":"2021-09-03"},{"lineNumber":134,"author":{"gitId":"zognin"},"content":"        if (!(task instanceof DeadlineTask)) {","lastModifiedDate":"2021-09-03"},{"lineNumber":135,"author":{"gitId":"zognin"},"content":"            return false;","lastModifiedDate":"2021-09-03"},{"lineNumber":136,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":137,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":138,"author":{"gitId":"zognin"},"content":"        // A different description means the task is definitely not a duplicate","lastModifiedDate":"2021-09-03"},{"lineNumber":139,"author":{"gitId":"zognin"},"content":"        if (!this.isSameDescription(task)) {","lastModifiedDate":"2021-09-03"},{"lineNumber":140,"author":{"gitId":"zognin"},"content":"            return false;","lastModifiedDate":"2021-09-03"},{"lineNumber":141,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":142,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":143,"author":{"gitId":"zognin"},"content":"        DeadlineTask deadlineTask \u003d (DeadlineTask) task;","lastModifiedDate":"2021-09-03"},{"lineNumber":144,"author":{"gitId":"zognin"},"content":"        if (!this.date.equals(deadlineTask.date)) {","lastModifiedDate":"2021-09-11"},{"lineNumber":145,"author":{"gitId":"zognin"},"content":"            return false;","lastModifiedDate":"2021-09-11"},{"lineNumber":146,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":147,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":148,"author":{"gitId":"zognin"},"content":"        return this.time.equals(deadlineTask.time);","lastModifiedDate":"2021-09-11"},{"lineNumber":149,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":150,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"zognin":150}},{"path":"src/main/java/tasklist/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package tasklist;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import exception.InvalidCommandFormatException;","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import exception.InvalidDateTimeException;","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import exception.InvalidFormatInStorageException;","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import exception.InvalidNumOfStringPartsException;","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"import parser.CommandParser;","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"import parser.DateTimeParser;","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"import type.CommandTypeEnum;","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"import type.DateFormatTypeEnum;","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"import type.TaskIconTypeEnum;","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"import type.TimeFormatTypeEnum;","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":" * Encapsulates a task with that will occur at a specified time period.","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":" * It inherits from `DukeTask`.","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"public class EventTask extends Task {","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"    private static final String SPLITTER_ACTION_TIME \u003d \"/at\";","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"    private static final String SPLITTER_DATE_TIME \u003d \" \";","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"    private LocalDate date;","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"    private LocalTime startTime;","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"    private LocalTime endTime;","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"    private EventTask(String description, boolean isDone, LocalDate date, LocalTime startTime, LocalTime endTime) {","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"     * Processes the input string to create an event task with an action and time.","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"     * @param description Input task string.","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"     * @return App representation of a task containing an action description and time information.","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"    public static EventTask createTask (String description)","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"            throws InvalidDateTimeException, InvalidCommandFormatException {","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"        try {","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"            String[] actionAndTimeDescriptions \u003d CommandParser.splitStringBySplitter(","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"                    description,","lastModifiedDate":"2021-08-15"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"                    EventTask.SPLITTER_ACTION_TIME","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"            );","lastModifiedDate":"2021-08-14"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"            CommandParser.validateCorrectNumOfParts(2, actionAndTimeDescriptions);","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"            String actionDescription \u003d actionAndTimeDescriptions[0];","lastModifiedDate":"2021-09-10"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"            String dateTimeDescription \u003d actionAndTimeDescriptions[1];","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"            String[] dateTimeDescriptions \u003d CommandParser.splitStringBySplitter(","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"                    dateTimeDescription, SPLITTER_DATE_TIME);","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"            CommandParser.validateCorrectNumOfParts(3, dateTimeDescriptions);","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"            LocalDate date \u003d DateTimeParser.changeDateStringToDate(","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"                    dateTimeDescriptions[0], DateFormatTypeEnum.INPUT.toString());","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"            LocalTime startTime \u003d DateTimeParser.changeTimeStringToTime(","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"                    dateTimeDescriptions[1], TimeFormatTypeEnum.INPUT.toString());","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"            LocalTime endTime \u003d DateTimeParser.changeTimeStringToTime(","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"                    dateTimeDescriptions[2], TimeFormatTypeEnum.INPUT.toString());","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"            return new EventTask(actionDescription, false, date, startTime, endTime);","lastModifiedDate":"2021-09-11"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"        } catch (InvalidNumOfStringPartsException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":64,"author":{"gitId":"zognin"},"content":"            throw new InvalidCommandFormatException(CommandTypeEnum.EVENT);","lastModifiedDate":"2021-09-11"},{"lineNumber":65,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":66,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":67,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":68,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":69,"author":{"gitId":"zognin"},"content":"     * Formats the task in string form, displaying the task type, status, description and time.","lastModifiedDate":"2021-08-14"},{"lineNumber":70,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":71,"author":{"gitId":"zognin"},"content":"     * @return Task in a displayed string format.","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":73,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":74,"author":{"gitId":"zognin"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":75,"author":{"gitId":"zognin"},"content":"        return String.format(","lastModifiedDate":"2021-09-11"},{"lineNumber":76,"author":{"gitId":"zognin"},"content":"                \"[%s]%s (at: %s %s - %s)\",","lastModifiedDate":"2021-09-11"},{"lineNumber":77,"author":{"gitId":"zognin"},"content":"                TaskIconTypeEnum.EVENT.toString(),","lastModifiedDate":"2021-09-11"},{"lineNumber":78,"author":{"gitId":"zognin"},"content":"                super.toString(),","lastModifiedDate":"2021-09-11"},{"lineNumber":79,"author":{"gitId":"zognin"},"content":"                DateTimeParser.changeDateToDateString(this.date, DateFormatTypeEnum.OUTPUT.toString()),","lastModifiedDate":"2021-09-11"},{"lineNumber":80,"author":{"gitId":"zognin"},"content":"                DateTimeParser.changeTimeToTimeString(this.startTime, TimeFormatTypeEnum.OUTPUT.toString()),","lastModifiedDate":"2021-09-11"},{"lineNumber":81,"author":{"gitId":"zognin"},"content":"                DateTimeParser.changeTimeToTimeString(this.endTime, TimeFormatTypeEnum.OUTPUT.toString())","lastModifiedDate":"2021-09-11"},{"lineNumber":82,"author":{"gitId":"zognin"},"content":"        );","lastModifiedDate":"2021-09-11"},{"lineNumber":83,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":84,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":85,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":86,"author":{"gitId":"zognin"},"content":"     * Formats the task to storage string form.","lastModifiedDate":"2021-09-11"},{"lineNumber":87,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":88,"author":{"gitId":"zognin"},"content":"     * @return Task in storage string format.","lastModifiedDate":"2021-09-11"},{"lineNumber":89,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":90,"author":{"gitId":"zognin"},"content":"    public String toStorageString() {","lastModifiedDate":"2021-09-11"},{"lineNumber":91,"author":{"gitId":"zognin"},"content":"        return String.format(","lastModifiedDate":"2021-09-11"},{"lineNumber":92,"author":{"gitId":"zognin"},"content":"                \"[%s]%s %s %s %s %s\",","lastModifiedDate":"2021-09-11"},{"lineNumber":93,"author":{"gitId":"zognin"},"content":"                TaskIconTypeEnum.EVENT.toString(),","lastModifiedDate":"2021-09-11"},{"lineNumber":94,"author":{"gitId":"zognin"},"content":"                super.toString(),","lastModifiedDate":"2021-09-11"},{"lineNumber":95,"author":{"gitId":"zognin"},"content":"                SPLITTER_ACTION_TIME,","lastModifiedDate":"2021-09-11"},{"lineNumber":96,"author":{"gitId":"zognin"},"content":"                DateTimeParser.changeDateToDateString(this.date, DateFormatTypeEnum.INPUT.toString()),","lastModifiedDate":"2021-09-11"},{"lineNumber":97,"author":{"gitId":"zognin"},"content":"                DateTimeParser.changeTimeToTimeString(this.startTime, TimeFormatTypeEnum.INPUT.toString()),","lastModifiedDate":"2021-09-11"},{"lineNumber":98,"author":{"gitId":"zognin"},"content":"                DateTimeParser.changeTimeToTimeString(this.endTime, TimeFormatTypeEnum.INPUT.toString())","lastModifiedDate":"2021-09-11"},{"lineNumber":99,"author":{"gitId":"zognin"},"content":"        );","lastModifiedDate":"2021-09-11"},{"lineNumber":100,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":101,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":102,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":103,"author":{"gitId":"zognin"},"content":"     * Creates an app representation of an event task from the storage representation of the task.","lastModifiedDate":"2021-08-21"},{"lineNumber":104,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":105,"author":{"gitId":"zognin"},"content":"     * @param description Storage representation of an event task.","lastModifiedDate":"2021-08-21"},{"lineNumber":106,"author":{"gitId":"zognin"},"content":"     * @return App representation of an event task.","lastModifiedDate":"2021-08-21"},{"lineNumber":107,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":108,"author":{"gitId":"zognin"},"content":"    public static EventTask createTaskFromStoredString(String description) throws InvalidFormatInStorageException {","lastModifiedDate":"2021-09-10"},{"lineNumber":109,"author":{"gitId":"zognin"},"content":"        String dateFormat \u003d DateFormatTypeEnum.INPUT.toString();","lastModifiedDate":"2021-09-11"},{"lineNumber":110,"author":{"gitId":"zognin"},"content":"        String timeFormat \u003d TimeFormatTypeEnum.INPUT.toString();","lastModifiedDate":"2021-09-11"},{"lineNumber":111,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":112,"author":{"gitId":"zognin"},"content":"        try {","lastModifiedDate":"2021-09-10"},{"lineNumber":113,"author":{"gitId":"zognin"},"content":"            boolean isDone \u003d Task.isStorageTaskDone(description);","lastModifiedDate":"2021-09-10"},{"lineNumber":114,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":115,"author":{"gitId":"zognin"},"content":"            int descriptionStartPos \u003d 3;","lastModifiedDate":"2021-09-10"},{"lineNumber":116,"author":{"gitId":"zognin"},"content":"            String[] actionAndTimeDescriptions \u003d CommandParser.splitStringBySplitter(","lastModifiedDate":"2021-09-11"},{"lineNumber":117,"author":{"gitId":"zognin"},"content":"                    description.substring(descriptionStartPos),","lastModifiedDate":"2021-09-10"},{"lineNumber":118,"author":{"gitId":"zognin"},"content":"                    SPLITTER_ACTION_TIME","lastModifiedDate":"2021-09-11"},{"lineNumber":119,"author":{"gitId":"zognin"},"content":"            );","lastModifiedDate":"2021-08-21"},{"lineNumber":120,"author":{"gitId":"zognin"},"content":"            CommandParser.validateCorrectNumOfParts(2, actionAndTimeDescriptions);","lastModifiedDate":"2021-09-11"},{"lineNumber":121,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":122,"author":{"gitId":"zognin"},"content":"            String actionDescription \u003d actionAndTimeDescriptions[0];","lastModifiedDate":"2021-09-10"},{"lineNumber":123,"author":{"gitId":"zognin"},"content":"            String timeDescription \u003d actionAndTimeDescriptions[1];","lastModifiedDate":"2021-09-11"},{"lineNumber":124,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":125,"author":{"gitId":"zognin"},"content":"            String[] dateTimeDescriptions \u003d CommandParser.splitStringBySplitter(timeDescription, SPLITTER_DATE_TIME);","lastModifiedDate":"2021-09-11"},{"lineNumber":126,"author":{"gitId":"zognin"},"content":"            CommandParser.validateCorrectNumOfParts(3, dateTimeDescriptions);","lastModifiedDate":"2021-09-11"},{"lineNumber":127,"author":{"gitId":"zognin"},"content":"            LocalDate date \u003d DateTimeParser.changeDateStringToDate(dateTimeDescriptions[0], dateFormat);","lastModifiedDate":"2021-09-11"},{"lineNumber":128,"author":{"gitId":"zognin"},"content":"            LocalTime startTime \u003d DateTimeParser.changeTimeStringToTime(dateTimeDescriptions[1], timeFormat);","lastModifiedDate":"2021-09-11"},{"lineNumber":129,"author":{"gitId":"zognin"},"content":"            LocalTime endTime \u003d DateTimeParser.changeTimeStringToTime(dateTimeDescriptions[2], timeFormat);","lastModifiedDate":"2021-09-11"},{"lineNumber":130,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":131,"author":{"gitId":"zognin"},"content":"            return new EventTask(actionDescription, isDone, date, startTime, endTime);","lastModifiedDate":"2021-09-11"},{"lineNumber":132,"author":{"gitId":"zognin"},"content":"        } catch (InvalidNumOfStringPartsException | InvalidDateTimeException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":133,"author":{"gitId":"zognin"},"content":"            String expectedFormat \u003d String.format(\"[ ] \u003cdescription\u003e %s %s %s\",","lastModifiedDate":"2021-09-11"},{"lineNumber":134,"author":{"gitId":"zognin"},"content":"                    SPLITTER_ACTION_TIME, dateFormat, timeFormat);","lastModifiedDate":"2021-09-11"},{"lineNumber":135,"author":{"gitId":"zognin"},"content":"            throw new InvalidFormatInStorageException(description, expectedFormat);","lastModifiedDate":"2021-09-11"},{"lineNumber":136,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":137,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":138,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":139,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":140,"author":{"gitId":"zognin"},"content":"    protected boolean isDuplicateOf(Task task) {","lastModifiedDate":"2021-09-03"},{"lineNumber":141,"author":{"gitId":"zognin"},"content":"        // A different type of task is definitely not a duplicate","lastModifiedDate":"2021-09-03"},{"lineNumber":142,"author":{"gitId":"zognin"},"content":"        if (!(task instanceof EventTask)) {","lastModifiedDate":"2021-09-03"},{"lineNumber":143,"author":{"gitId":"zognin"},"content":"            return false;","lastModifiedDate":"2021-09-03"},{"lineNumber":144,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":145,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":146,"author":{"gitId":"zognin"},"content":"        // A different description means the task is definitely not a duplicate","lastModifiedDate":"2021-09-03"},{"lineNumber":147,"author":{"gitId":"zognin"},"content":"        if (!this.isSameDescription(task)) {","lastModifiedDate":"2021-09-03"},{"lineNumber":148,"author":{"gitId":"zognin"},"content":"            return false;","lastModifiedDate":"2021-09-03"},{"lineNumber":149,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":150,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":151,"author":{"gitId":"zognin"},"content":"        EventTask eventTask \u003d (EventTask) task;","lastModifiedDate":"2021-09-03"},{"lineNumber":152,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":153,"author":{"gitId":"zognin"},"content":"        if (!this.date.equals(eventTask.date)) {","lastModifiedDate":"2021-09-11"},{"lineNumber":154,"author":{"gitId":"zognin"},"content":"            return false;","lastModifiedDate":"2021-09-11"},{"lineNumber":155,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":156,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":157,"author":{"gitId":"zognin"},"content":"        if (!this.startTime.equals(eventTask.startTime)) {","lastModifiedDate":"2021-09-11"},{"lineNumber":158,"author":{"gitId":"zognin"},"content":"            return false;","lastModifiedDate":"2021-09-11"},{"lineNumber":159,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":160,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":161,"author":{"gitId":"zognin"},"content":"        return this.endTime.equals(eventTask.endTime);","lastModifiedDate":"2021-09-11"},{"lineNumber":162,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":163,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"zognin":163}},{"path":"src/main/java/tasklist/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package tasklist;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import exception.InvalidCommandFormatException;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import exception.InvalidDateTimeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import exception.InvalidFormatInStorageException;","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import exception.InvalidTaskTypeException;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import type.CommandTypeEnum;","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"import type.TaskIconTypeEnum;","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":" * Encapsulates a task containing a description and status.","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"public abstract class Task {","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"    protected static final int LENGTH_OF_STATUS_ICON \u003d 1;","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"    protected static final String STATUS_ICON_DONE \u003d \"X\";","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"    protected static final String STATUS_ICON_NOT_DONE \u003d \" \";","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"    private String description;","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"     * Instantiates a `Task`.","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"     * @param description Description of task is.","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"     * @param isDone The status of a task, either done or not.","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"     * Creates a specific Task based on the prefix in the user input.","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"     * @param description User input that may or may not be a valid type of task.","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"     * @param commandType Command Type.","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"     * @return `Task`.","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"     * @throws InvalidTaskTypeException If the type of task is not recognised.","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"     * @throws InvalidCommandFormatException If the command is incorrectly formatted.","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"     * @throws InvalidDateTimeException If there is an invalid date time.","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"    public static Task createTask(String description, CommandTypeEnum commandType)","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"            throws InvalidTaskTypeException, InvalidCommandFormatException, InvalidDateTimeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"        switch (commandType) {","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"        case TODO:","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"            return TodoTask.createTask(description);","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"        case DEADLINE:","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"            return DeadlineTask.createTask(description);","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"        case EVENT:","lastModifiedDate":"2021-09-03"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"            return EventTask.createTask(description);","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"        default:","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"            throw new InvalidTaskTypeException(commandType);","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"     * Marks a task as done.","lastModifiedDate":"2021-09-10"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-14"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-14"},{"lineNumber":61,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":64,"author":{"gitId":"zognin"},"content":"     * Formats the task in string form, displaying the task status and description.","lastModifiedDate":"2021-08-14"},{"lineNumber":65,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":66,"author":{"gitId":"zognin"},"content":"     * @return the task in a displayed string format","lastModifiedDate":"2021-08-14"},{"lineNumber":67,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":68,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":69,"author":{"gitId":"zognin"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":70,"author":{"gitId":"zognin"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2021-08-14"},{"lineNumber":71,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":72,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"zognin"},"content":"     * Creates an app representation of a task from the storage representation of the task.","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"zognin"},"content":"     * @param fullDescription Storage representation of the task including the task type.","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"zognin"},"content":"     * @return App representation of the task.","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"zognin"},"content":"    public static Task createTaskFromStoredString(String fullDescription) throws InvalidFormatInStorageException {","lastModifiedDate":"2021-09-10"},{"lineNumber":80,"author":{"gitId":"zognin"},"content":"        String trimmedFullDescription \u003d fullDescription.trim();","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"zognin"},"content":"        int taskTypeStartPos \u003d 1;","lastModifiedDate":"2021-09-10"},{"lineNumber":83,"author":{"gitId":"zognin"},"content":"        String taskType \u003d trimmedFullDescription.substring(taskTypeStartPos, taskTypeStartPos + 1);","lastModifiedDate":"2021-09-10"},{"lineNumber":84,"author":{"gitId":"zognin"},"content":"        TaskIconTypeEnum taskIconTypeEnum \u003d TaskIconTypeEnum.getEnum(taskType);","lastModifiedDate":"2021-09-10"},{"lineNumber":85,"author":{"gitId":"zognin"},"content":"        if (taskIconTypeEnum \u003d\u003d null) {","lastModifiedDate":"2021-09-10"},{"lineNumber":86,"author":{"gitId":"zognin"},"content":"            String expectedFormat \u003d \"One of these task icons \" + Arrays.toString(TaskIconTypeEnum.values());","lastModifiedDate":"2021-09-11"},{"lineNumber":87,"author":{"gitId":"zognin"},"content":"            throw new InvalidFormatInStorageException(fullDescription, expectedFormat);","lastModifiedDate":"2021-09-11"},{"lineNumber":88,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":89,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":90,"author":{"gitId":"zognin"},"content":"        int descriptionStartPos \u003d 3;","lastModifiedDate":"2021-09-10"},{"lineNumber":91,"author":{"gitId":"zognin"},"content":"        String descriptionWithoutTaskType \u003d fullDescription.substring(descriptionStartPos);","lastModifiedDate":"2021-09-10"},{"lineNumber":92,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":93,"author":{"gitId":"zognin"},"content":"        switch (taskIconTypeEnum) {","lastModifiedDate":"2021-09-10"},{"lineNumber":94,"author":{"gitId":"zognin"},"content":"        case DEADLINE:","lastModifiedDate":"2021-09-10"},{"lineNumber":95,"author":{"gitId":"zognin"},"content":"            return DeadlineTask.createTaskFromStoredString(descriptionWithoutTaskType);","lastModifiedDate":"2021-08-21"},{"lineNumber":96,"author":{"gitId":"zognin"},"content":"        case EVENT:","lastModifiedDate":"2021-09-10"},{"lineNumber":97,"author":{"gitId":"zognin"},"content":"            return EventTask.createTaskFromStoredString(descriptionWithoutTaskType);","lastModifiedDate":"2021-08-21"},{"lineNumber":98,"author":{"gitId":"zognin"},"content":"        case TODO:","lastModifiedDate":"2021-09-10"},{"lineNumber":99,"author":{"gitId":"zognin"},"content":"            return TodoTask.createTaskFromStoredString(descriptionWithoutTaskType);","lastModifiedDate":"2021-09-10"},{"lineNumber":100,"author":{"gitId":"zognin"},"content":"        default:","lastModifiedDate":"2021-08-21"},{"lineNumber":101,"author":{"gitId":"zognin"},"content":"            assert false : \"taskTypeEnum should be valid and handled if it reaches the switch block\";","lastModifiedDate":"2021-09-10"},{"lineNumber":102,"author":{"gitId":"zognin"},"content":"            return null;","lastModifiedDate":"2021-08-21"},{"lineNumber":103,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":104,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":105,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":106,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":107,"author":{"gitId":"zognin"},"content":"     * Formats the task to storage string form.","lastModifiedDate":"2021-09-11"},{"lineNumber":108,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":109,"author":{"gitId":"zognin"},"content":"     * @return Task in storage string format.","lastModifiedDate":"2021-09-11"},{"lineNumber":110,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":111,"author":{"gitId":"zognin"},"content":"    public abstract String toStorageString();","lastModifiedDate":"2021-09-11"},{"lineNumber":112,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":113,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":114,"author":{"gitId":"zognin"},"content":"     * Checks if the task description contains a keyword.","lastModifiedDate":"2021-08-21"},{"lineNumber":115,"author":{"gitId":"zognin"},"content":"     * The search is case insensitive.","lastModifiedDate":"2021-09-11"},{"lineNumber":116,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":117,"author":{"gitId":"zognin"},"content":"     * @param keyword Keyword to search for.","lastModifiedDate":"2021-08-21"},{"lineNumber":118,"author":{"gitId":"zognin"},"content":"     * @return True if task description contains the keyword, false otherwise.","lastModifiedDate":"2021-08-21"},{"lineNumber":119,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":120,"author":{"gitId":"zognin"},"content":"    protected boolean contains(String keyword) {","lastModifiedDate":"2021-08-21"},{"lineNumber":121,"author":{"gitId":"zognin"},"content":"        return this.description.toLowerCase().contains(keyword.toLowerCase());","lastModifiedDate":"2021-09-11"},{"lineNumber":122,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":123,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":124,"author":{"gitId":"zognin"},"content":"    protected boolean isSameDescription(Task task) {","lastModifiedDate":"2021-09-03"},{"lineNumber":125,"author":{"gitId":"zognin"},"content":"        return this.description.equals(task.description);","lastModifiedDate":"2021-09-03"},{"lineNumber":126,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":127,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":128,"author":{"gitId":"zognin"},"content":"    protected abstract boolean isDuplicateOf(Task task);","lastModifiedDate":"2021-09-03"},{"lineNumber":129,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":130,"author":{"gitId":"zognin"},"content":"    protected static boolean isStorageTaskDone(String description) {","lastModifiedDate":"2021-09-10"},{"lineNumber":131,"author":{"gitId":"zognin"},"content":"        int statusIconStartPos \u003d 1;","lastModifiedDate":"2021-09-10"},{"lineNumber":132,"author":{"gitId":"zognin"},"content":"        String statusIcon \u003d description.substring(statusIconStartPos, statusIconStartPos + LENGTH_OF_STATUS_ICON);","lastModifiedDate":"2021-09-10"},{"lineNumber":133,"author":{"gitId":"zognin"},"content":"        return statusIcon.equals(STATUS_ICON_DONE);","lastModifiedDate":"2021-09-10"},{"lineNumber":134,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":135,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":136,"author":{"gitId":"zognin"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2021-09-03"},{"lineNumber":137,"author":{"gitId":"zognin"},"content":"        return (this.isDone ? STATUS_ICON_DONE : STATUS_ICON_NOT_DONE);","lastModifiedDate":"2021-09-03"},{"lineNumber":138,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":139,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"zognin":139}},{"path":"src/main/java/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package tasklist;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import exception.DuplicateTaskException;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import exception.ErrorAccessingFileException;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import exception.NonExistentTaskNumberException;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import storage.StorageFile;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":" * Encapsulates a task list storing the users input tasks.","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"public class TaskList {","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"    private ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"    // An active list is the latest list that the user is viewing, it could be filtered by keywords","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"    private ArrayList\u003cTask\u003e activeList \u003d this.list;","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"    private StorageFile listFile;","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"     * Instantiates a list of tasks.","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"     * @param listFile The storage file containing stored tasks.","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"    public TaskList(StorageFile listFile) {","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"        this.listFile \u003d listFile;","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"     * Scans tasks from storage to list.","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"     * @param task Task to be scanned into list.","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"    public void scanExistingTaskToList(Task task) {","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"        this.list.add(task);","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"     * Adds task to a list.","lastModifiedDate":"2021-08-14"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"     * @param task Task be added to the list.","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"    public void addTaskToList(Task task) throws ErrorAccessingFileException {","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"            this.list.add(task);","lastModifiedDate":"2021-08-14"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"            this.listFile.add(task);","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"            throw new ErrorAccessingFileException(\"add\");","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"     * Deletes task from a list.","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"     * @param taskNumber Number of the task to be removed from the list.","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"    public Task deleteTaskFromList(int taskNumber) throws NonExistentTaskNumberException, ErrorAccessingFileException {","lastModifiedDate":"2021-09-03"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"            validateTaskNumberExists(taskNumber);","lastModifiedDate":"2021-08-14"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"zognin"},"content":"            Task task \u003d this.getTaskByNumberInActiveList(taskNumber);","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"            this.list.remove(task);","lastModifiedDate":"2021-09-03"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"            this.listFile.rewriteFile(this.list);","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"zognin"},"content":"            return task;","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"zognin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"zognin"},"content":"            throw new ErrorAccessingFileException(\"delete\");","lastModifiedDate":"2021-09-03"},{"lineNumber":68,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"zognin"},"content":"     * Marks task in the list as done, finding the task by its task number.","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"zognin"},"content":"     * @param taskNumber Task number of the task in the list, starting from 1.","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"zognin"},"content":"     * @return `Task`.","lastModifiedDate":"2021-09-03"},{"lineNumber":76,"author":{"gitId":"zognin"},"content":"     * @throws NonExistentTaskNumberException If the task number does not exist in the list.","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"zognin"},"content":"     * @throws ErrorAccessingFileException If there is an error accessing the storage file.","lastModifiedDate":"2021-09-03"},{"lineNumber":78,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"zognin"},"content":"    public Task markTaskAsDone(int taskNumber) throws NonExistentTaskNumberException, ErrorAccessingFileException {","lastModifiedDate":"2021-09-03"},{"lineNumber":80,"author":{"gitId":"zognin"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"zognin"},"content":"            validateTaskNumberExists(taskNumber);","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"zognin"},"content":"            Task task \u003d this.getTaskByNumberInActiveList(taskNumber);","lastModifiedDate":"2021-09-11"},{"lineNumber":84,"author":{"gitId":"zognin"},"content":"            task.markAsDone();","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"zognin"},"content":"            this.listFile.rewriteFile(this.list);","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"zognin"},"content":"            return task;","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"zognin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"zognin"},"content":"            throw new ErrorAccessingFileException(\"mark as done\");","lastModifiedDate":"2021-09-03"},{"lineNumber":90,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":91,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":92,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":93,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"zognin"},"content":"     * Gets a new list of only tasks whose description contains the keyword.","lastModifiedDate":"2021-08-21"},{"lineNumber":95,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":96,"author":{"gitId":"zognin"},"content":"     * @param keyword Keyword to search for.","lastModifiedDate":"2021-08-21"},{"lineNumber":97,"author":{"gitId":"zognin"},"content":"     * @return `TaskList`.","lastModifiedDate":"2021-08-21"},{"lineNumber":98,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":99,"author":{"gitId":"zognin"},"content":"    public TaskList getListContainingKeyword(String keyword) {","lastModifiedDate":"2021-08-21"},{"lineNumber":100,"author":{"gitId":"zognin"},"content":"        this.activeList \u003d new ArrayList\u003c\u003e(this.list);","lastModifiedDate":"2021-09-03"},{"lineNumber":101,"author":{"gitId":"zognin"},"content":"        this.activeList.removeIf(task -\u003e !task.contains(keyword));","lastModifiedDate":"2021-09-03"},{"lineNumber":102,"author":{"gitId":"zognin"},"content":"        return this;","lastModifiedDate":"2021-09-03"},{"lineNumber":103,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":104,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":105,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":106,"author":{"gitId":"zognin"},"content":"     * Gets the full list of tasks.","lastModifiedDate":"2021-09-03"},{"lineNumber":107,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":108,"author":{"gitId":"zognin"},"content":"     * @return `TaskList`.","lastModifiedDate":"2021-09-03"},{"lineNumber":109,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":110,"author":{"gitId":"zognin"},"content":"    public TaskList getFullList() {","lastModifiedDate":"2021-09-03"},{"lineNumber":111,"author":{"gitId":"zognin"},"content":"        this.activeList \u003d this.list;","lastModifiedDate":"2021-09-03"},{"lineNumber":112,"author":{"gitId":"zognin"},"content":"        return this;","lastModifiedDate":"2021-09-03"},{"lineNumber":113,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":114,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":115,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":116,"author":{"gitId":"zognin"},"content":"     * Gets the number of tasks in the list.","lastModifiedDate":"2021-09-03"},{"lineNumber":117,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":118,"author":{"gitId":"zognin"},"content":"     * @return Number of tasks in the list.","lastModifiedDate":"2021-09-03"},{"lineNumber":119,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":120,"author":{"gitId":"zognin"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2021-09-03"},{"lineNumber":121,"author":{"gitId":"zognin"},"content":"        return this.list.size();","lastModifiedDate":"2021-09-03"},{"lineNumber":122,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":123,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":124,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":125,"author":{"gitId":"zognin"},"content":"     * Returns true if the active list is empty.","lastModifiedDate":"2021-09-11"},{"lineNumber":126,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":127,"author":{"gitId":"zognin"},"content":"     * @return True if active list is empty, false otherwise.","lastModifiedDate":"2021-09-11"},{"lineNumber":128,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":129,"author":{"gitId":"zognin"},"content":"    public boolean isActiveListEmpty() {","lastModifiedDate":"2021-09-11"},{"lineNumber":130,"author":{"gitId":"zognin"},"content":"        return this.activeList.isEmpty();","lastModifiedDate":"2021-09-11"},{"lineNumber":131,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":132,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":133,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":134,"author":{"gitId":"zognin"},"content":"     * Validates that the task is not a duplicate of an existing task in the list.","lastModifiedDate":"2021-09-03"},{"lineNumber":135,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":136,"author":{"gitId":"zognin"},"content":"     * @param task Task to be checked.","lastModifiedDate":"2021-09-03"},{"lineNumber":137,"author":{"gitId":"zognin"},"content":"     * @throws DuplicateTaskException If the task is a duplicate of a task in the task.","lastModifiedDate":"2021-09-03"},{"lineNumber":138,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":139,"author":{"gitId":"zognin"},"content":"    public void validateTaskNotDuplicate(Task task) throws DuplicateTaskException {","lastModifiedDate":"2021-09-03"},{"lineNumber":140,"author":{"gitId":"zognin"},"content":"        if (this.isInUnderlyingList(task)) {","lastModifiedDate":"2021-09-11"},{"lineNumber":141,"author":{"gitId":"zognin"},"content":"            throw new DuplicateTaskException(task);","lastModifiedDate":"2021-09-03"},{"lineNumber":142,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":143,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":144,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":145,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":146,"author":{"gitId":"zognin"},"content":"     * Formats tasks in a numbered list form, starting from 1.","lastModifiedDate":"2021-08-14"},{"lineNumber":147,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":148,"author":{"gitId":"zognin"},"content":"     * @return Numbered list.","lastModifiedDate":"2021-08-21"},{"lineNumber":149,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":150,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":151,"author":{"gitId":"zognin"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":152,"author":{"gitId":"zognin"},"content":"        StringBuilder stringBuilderList \u003d new StringBuilder();","lastModifiedDate":"2021-08-14"},{"lineNumber":153,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":154,"author":{"gitId":"zognin"},"content":"        for (int i \u003d 0; i \u003c this.activeList.size(); i++) {","lastModifiedDate":"2021-09-03"},{"lineNumber":155,"author":{"gitId":"zognin"},"content":"            Task task \u003d this.activeList.get(i);","lastModifiedDate":"2021-09-03"},{"lineNumber":156,"author":{"gitId":"zognin"},"content":"            String listItem \u003d String.format(\"%d. %s\\n\", i + 1, task.toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":157,"author":{"gitId":"zognin"},"content":"            stringBuilderList.append(listItem);","lastModifiedDate":"2021-08-14"},{"lineNumber":158,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":159,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":160,"author":{"gitId":"zognin"},"content":"        return stringBuilderList.toString();","lastModifiedDate":"2021-08-14"},{"lineNumber":161,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":162,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":163,"author":{"gitId":"zognin"},"content":"    private Task getTaskByNumberInActiveList(int taskNumber) {","lastModifiedDate":"2021-09-11"},{"lineNumber":164,"author":{"gitId":"zognin"},"content":"        return this.activeList.get(taskNumber - 1);","lastModifiedDate":"2021-09-03"},{"lineNumber":165,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":166,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":167,"author":{"gitId":"zognin"},"content":"    private boolean isInActiveList(int taskNumber) {","lastModifiedDate":"2021-09-11"},{"lineNumber":168,"author":{"gitId":"zognin"},"content":"        return taskNumber \u003e 0 \u0026\u0026 taskNumber \u003c\u003d this.activeList.size();","lastModifiedDate":"2021-09-03"},{"lineNumber":169,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":170,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":171,"author":{"gitId":"zognin"},"content":"    private boolean isInUnderlyingList(Task task) {","lastModifiedDate":"2021-09-11"},{"lineNumber":172,"author":{"gitId":"zognin"},"content":"        for (Task existingTask : this.list) {","lastModifiedDate":"2021-09-03"},{"lineNumber":173,"author":{"gitId":"zognin"},"content":"            if (task.isDuplicateOf(existingTask)) {","lastModifiedDate":"2021-09-03"},{"lineNumber":174,"author":{"gitId":"zognin"},"content":"                return true;","lastModifiedDate":"2021-09-03"},{"lineNumber":175,"author":{"gitId":"zognin"},"content":"            }","lastModifiedDate":"2021-09-03"},{"lineNumber":176,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":177,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":178,"author":{"gitId":"zognin"},"content":"        return false;","lastModifiedDate":"2021-09-03"},{"lineNumber":179,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":180,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":181,"author":{"gitId":"zognin"},"content":"    private void validateTaskNumberExists(int taskNumber) throws NonExistentTaskNumberException {","lastModifiedDate":"2021-08-14"},{"lineNumber":182,"author":{"gitId":"zognin"},"content":"        if (!this.isInActiveList(taskNumber)) {","lastModifiedDate":"2021-09-11"},{"lineNumber":183,"author":{"gitId":"zognin"},"content":"            throw new NonExistentTaskNumberException(taskNumber);","lastModifiedDate":"2021-08-14"},{"lineNumber":184,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":185,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":186,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"zognin":186}},{"path":"src/main/java/tasklist/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package tasklist;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import exception.InvalidFormatInStorageException;","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import type.TaskIconTypeEnum;","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":" * Encapsulates a task with only a description.","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"    private TodoTask(String description, boolean isDone) {","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"     * Processes the input string to create a todo task.","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"     * @param description Input task string.","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"     * @return App representation of a task containing an action description.","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"    public static TodoTask createTask(String description) {","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"        return new TodoTask(description, false);","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"     * Formats the task in string form, displaying the task type, status and description.","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"     * @return Task in a displayed string format.","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"    public String toString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"        return String.format(\"[%s]%s\",","lastModifiedDate":"2021-09-10"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"                TaskIconTypeEnum.TODO.toString(),","lastModifiedDate":"2021-09-10"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"                super.toString()","lastModifiedDate":"2021-09-10"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"        );","lastModifiedDate":"2021-09-10"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"     * Formats the task to storage string form.","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"     * @return Task in storage string format.","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"    public String toStorageString() {","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"        return this.toString();","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"     * Creates an app representation of a todo task from the storage representation of the task.","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"     * @param description Storage representation of a todo task.","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"     * @return App representation of a todo task.","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"    public static TodoTask createTaskFromStoredString(String description) throws InvalidFormatInStorageException {","lastModifiedDate":"2021-09-10"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"        boolean isDone \u003d Task.isStorageTaskDone(description);","lastModifiedDate":"2021-09-10"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"        int actionDescriptionStartPos \u003d 3;","lastModifiedDate":"2021-09-10"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"        String actionDescription \u003d description.substring(actionDescriptionStartPos).trim();","lastModifiedDate":"2021-09-10"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"        if (actionDescription.isEmpty()) {","lastModifiedDate":"2021-09-10"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"            String expectedFormat \u003d \"[] \u003cdescription\u003e\";","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"            throw new InvalidFormatInStorageException(description, expectedFormat);","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"        return new TodoTask(actionDescription, isDone);","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":66,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":67,"author":{"gitId":"zognin"},"content":"    protected boolean isDuplicateOf(Task task) {","lastModifiedDate":"2021-09-03"},{"lineNumber":68,"author":{"gitId":"zognin"},"content":"        // A different type of task is definitely not a duplicate","lastModifiedDate":"2021-09-03"},{"lineNumber":69,"author":{"gitId":"zognin"},"content":"        if (!(task instanceof TodoTask)) {","lastModifiedDate":"2021-09-03"},{"lineNumber":70,"author":{"gitId":"zognin"},"content":"            return false;","lastModifiedDate":"2021-09-03"},{"lineNumber":71,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":72,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":73,"author":{"gitId":"zognin"},"content":"        return this.isSameDescription(task);","lastModifiedDate":"2021-09-03"},{"lineNumber":74,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":75,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"zognin":75}},{"path":"src/main/java/type/CommandTypeEnum.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package type;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":" * Encapsulates valid values for command type.","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"public enum CommandTypeEnum {","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"    BYE(\"bye\", \"exit the app\", \"bye\"),","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"    DEADLINE(\"deadline\",","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"            \"add a task with a deadline\",","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"            String.format(\"deadline \u003cdescription\u003e /by \u003c%s %s\u003e\",","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"                    DateFormatTypeEnum.INPUT.toString(),","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"                    TimeFormatTypeEnum.INPUT.toString()","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"            )","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"    ),","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"    DELETE(\"delete\", \"delete a task\", \"delete \u003ctask number in last shown list\u003e\"),","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"    DONE(\"done\", \"mark a task as done\", \"done \u003ctask number in last shown list\u003e\"),","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"    EVENT(\"event\",","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"            \"add a task occurring at a time\",","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"            String.format(\"event \u003cdescription\u003e /at \u003c%s %s %s\u003e\",","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"                    DateFormatTypeEnum.INPUT.toString(),","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"                    TimeFormatTypeEnum.INPUT.toString(),","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"                    TimeFormatTypeEnum.INPUT.toString()","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"                    )","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"    ),","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"    FIND(\"find\", \"find all tasks containing a keyword\", \"find \u003ckeyword\u003e\"),","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"    HELP(\"help\", \"list all available commands\", \"help\"),","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"    LIST(\"list\", \"list all tasks\", \"list\"),","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"    TODO(\"todo\", \"add a task with a description\", \"todo \u003cdescription\u003e\");","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"    private String value;","lastModifiedDate":"2021-09-10"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"    private String usage;","lastModifiedDate":"2021-09-10"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"    private String format;","lastModifiedDate":"2021-09-10"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"    CommandTypeEnum(String value, String usage, String format) {","lastModifiedDate":"2021-09-10"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"        this.value \u003d value;","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"        this.usage \u003d usage;","lastModifiedDate":"2021-09-10"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"        this.format \u003d format;","lastModifiedDate":"2021-09-10"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"     * Returns string representation of a command type enum.","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"     * @return String representation of a command type enum","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"        return this.value;","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"     * Returns full description of the command, its usage and input format.","lastModifiedDate":"2021-09-10"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"     * @return full description of the command, its usage and input format.","lastModifiedDate":"2021-09-10"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"    public String toFullInfoString() {","lastModifiedDate":"2021-09-10"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"        return this.value","lastModifiedDate":"2021-09-10"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"                + \"\\n\\t\" + \"usage: \" + this.usage","lastModifiedDate":"2021-09-10"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"                + \"\\n\\t\" + \"format: \" + this.format;","lastModifiedDate":"2021-09-10"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":61,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"     * Gets format of command.","lastModifiedDate":"2021-09-10"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":64,"author":{"gitId":"zognin"},"content":"     * @return format of command.","lastModifiedDate":"2021-09-10"},{"lineNumber":65,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":66,"author":{"gitId":"zognin"},"content":"    public String getFormat() {","lastModifiedDate":"2021-09-10"},{"lineNumber":67,"author":{"gitId":"zognin"},"content":"        return this.format;","lastModifiedDate":"2021-09-10"},{"lineNumber":68,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":69,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"zognin":69}},{"path":"src/main/java/type/DateFormatTypeEnum.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package type;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":" * Encapsulates valid formats for date.","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"public enum DateFormatTypeEnum {","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"    INPUT(\"dd-MM-yyyy\"),","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"    OUTPUT(\"d MMM yyyy\");","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"    private final String format;","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"    DateFormatTypeEnum(String format) {","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"        this.format \u003d format;","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"     * Returns string representation of a date format type enum.","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"     * @return String representation of a date format type enum","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"    public String toString() {","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"        return this.format;","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"zognin":25}},{"path":"src/main/java/type/TaskIconTypeEnum.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package type;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":" * Encapsulates valid values for a task icon.","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"public enum TaskIconTypeEnum {","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"    DEADLINE(\"D\"),","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"    EVENT(\"E\"),","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"    TODO(\"T\");","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"    private String icon;","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"    TaskIconTypeEnum(String icon) {","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"        this.icon \u003d icon;","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"     * Returns string representation of a task icon type enum.","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"     * @return String representation of a task icon type enum","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"    public String toString() {","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"        return this.icon;","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"     * Gets enum that represents the input value.","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"     * @param value the input value.","lastModifiedDate":"2021-09-10"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"     * @return `TaskIconTypeEnum`.","lastModifiedDate":"2021-09-10"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"    public static TaskIconTypeEnum getEnum(String value) {","lastModifiedDate":"2021-09-10"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"        for (TaskIconTypeEnum e: TaskIconTypeEnum.values()) {","lastModifiedDate":"2021-09-10"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"            if (e.icon.equals(value)) {","lastModifiedDate":"2021-09-10"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"                return e;","lastModifiedDate":"2021-09-10"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"            }","lastModifiedDate":"2021-09-10"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"        return null;","lastModifiedDate":"2021-09-10"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"zognin":41}},{"path":"src/main/java/type/TimeFormatTypeEnum.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package type;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":" * Encapsulates valid formats for time.","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"public enum TimeFormatTypeEnum {","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"    INPUT(\"HHmm\"),","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"    OUTPUT(\"h:mm a\");","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"    private final String format;","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"    TimeFormatTypeEnum(String format) {","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"        this.format \u003d format;","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"     * Returns string representation of a date format type enum.","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"     * @return String representation of a date format type enum","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"    public String toString() {","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"        return this.format;","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"zognin":25}},{"path":"src/main/resources/views/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"\u003cfx:root","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"        alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"        maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"        maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"        prefWidth\u003d\"400.0\"","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"        type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"        xmlns\u003d\"http://javafx.com/javafx/8.0.171\"","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"        xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"        \u003cLabel","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"                fx:id\u003d\"dialog\"","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"                text\u003d\"Label\"","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"                wrapText\u003d\"true\"","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"                minHeight\u003d\"-Infinity\"","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"                maxHeight\u003d\"Infinity\"","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"        /\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"        \u003cImageView","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"                fx:id\u003d\"displayPicture\"","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"                fitHeight\u003d\"60.0\"","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"                fitWidth\u003d\"60.0\"","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"                pickOnBounds\u003d\"true\"","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"                preserveRatio\u003d\"true\"","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"        /\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"zognin":38}},{"path":"src/main/resources/views/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"\u003cfx:root","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"        maxHeight\u003d\"-Infinity\"","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"        maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"        minHeight\u003d\"-Infinity\"","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"        minWidth\u003d\"-Infinity\"","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"        prefHeight\u003d\"600.0\"","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"        prefWidth\u003d\"400.0\"","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"        type\u003d\"javafx.scene.layout.AnchorPane\"","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"        xmlns\u003d\"http://javafx.com/javafx/8.0.171\"","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"        xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"        \u003cHBox fx:id\u003d\"inputBar\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"            \u003cTextField","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"                    fx:id\u003d\"userInput\"","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"                    layoutY\u003d\"558.0\"","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"                    onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"                    prefHeight\u003d\"41.0\"","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"                    prefWidth\u003d\"359.0\"","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"            /\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"            \u003cButton","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"                    fx:id\u003d\"sendButton\"","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"                    mnemonicParsing\u003d\"false\"","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"                    onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"                    prefHeight\u003d\"41.0\"","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"                    prefWidth\u003d\"41.0\"","lastModifiedDate":"2021-09-10"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"            /\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"        \u003cScrollPane","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"                fx:id\u003d\"scrollPane\"","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"                hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"                hvalue\u003d\"1.0\"","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"                prefHeight\u003d\"557.0\"","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"                prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"        \u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"                \u003cVBox","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"                        fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"                        prefHeight\u003d\"552.0\"","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"                        prefWidth\u003d\"388.0\"","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"                /\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"zognin":56}},{"path":"src/test/java/command/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package command;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import static org.hamcrest.CoreMatchers.instanceOf;","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import org.hamcrest.MatcherAssert;","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import exception.MissingCommandDescriptionException;","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"import storage.StorageFile;","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"import stub.storage.StorageStub;","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"import type.CommandTypeEnum;","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":" * Encapsulates tests for add command.","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"public class AddCommandTest {","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"     * Tests if exception is thrown when command description is missing.","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"    public void createCommand_missingDescription_exceptionThrown() {","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"        String description \u003d \"\";","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"        Assertions.assertThrows(MissingCommandDescriptionException.class, () -\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"                AddCommand.createCommand(description, CommandTypeEnum.TODO));","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"     * Tests if command is created when description is present.","lastModifiedDate":"2021-09-10"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-09-10"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"    public void createCommand_presentDescription_commandCreated() {","lastModifiedDate":"2021-09-10"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"        String description \u003d \"run\";","lastModifiedDate":"2021-09-10"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"        Assertions.assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2021-09-10"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"            MatcherAssert.assertThat(","lastModifiedDate":"2021-09-10"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"                    AddCommand.createCommand(description, CommandTypeEnum.TODO),","lastModifiedDate":"2021-09-10"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"                    instanceOf(AddCommand.class)","lastModifiedDate":"2021-09-10"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"            );","lastModifiedDate":"2021-09-10"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"        });","lastModifiedDate":"2021-09-10"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"     * Tests if task is successfully added to list.","lastModifiedDate":"2021-09-10"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-09-10"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"    public void execute_validTask_taskAddedToList() {","lastModifiedDate":"2021-09-10"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"        String description \u003d \"run\";","lastModifiedDate":"2021-09-10"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"        Assertions.assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2021-09-10"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"            StorageFile storageFile \u003d new StorageStub().loadListFile();","lastModifiedDate":"2021-09-10"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"            TaskList taskList \u003d new TaskList(storageFile);","lastModifiedDate":"2021-09-10"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"            int initialNumOfTasks \u003d taskList.getNumberOfTasks();","lastModifiedDate":"2021-09-10"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"            AddCommand command \u003d AddCommand.createCommand(description, CommandTypeEnum.TODO);","lastModifiedDate":"2021-09-10"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"            command.execute(taskList);","lastModifiedDate":"2021-09-10"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"            Assertions.assertEquals(initialNumOfTasks + 1, taskList.getNumberOfTasks());","lastModifiedDate":"2021-09-10"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"        });","lastModifiedDate":"2021-09-10"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":61,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"zognin":61}},{"path":"src/test/java/command/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package command;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import static org.hamcrest.CoreMatchers.instanceOf;","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import org.hamcrest.MatcherAssert;","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import exception.InvalidTaskNumberException;","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"import exception.MissingCommandDescriptionException;","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"import exception.NonExistentTaskNumberException;","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"import storage.StorageFile;","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"import stub.storage.StorageStub;","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"import tasklist.Task;","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"import tasklist.TodoTask;","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":" * Encapsulates tests for delete command.","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"     * Tests if exception is thrown when command description is missing.","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"    public void createCommand_missingDescription_exceptionThrown() {","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"        String description \u003d \"\";","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"        Assertions.assertThrows(MissingCommandDescriptionException.class, () -\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"                DeleteCommand.createCommand(description));","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"     * Tests if exception is thrown when description is not a number.","lastModifiedDate":"2021-09-10"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-09-10"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"    public void createCommand_nonNumberDescription_exceptionThrown() {","lastModifiedDate":"2021-09-10"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"        String description \u003d \"asd\";","lastModifiedDate":"2021-09-10"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"        Assertions.assertThrows(InvalidTaskNumberException.class, () -\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"                DeleteCommand.createCommand(description));","lastModifiedDate":"2021-09-10"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"     * Tests if command is created when description is valid.","lastModifiedDate":"2021-09-10"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-09-10"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"    public void createCommand_numberDescription_commandCreated() {","lastModifiedDate":"2021-09-10"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"        String description \u003d \"1\";","lastModifiedDate":"2021-09-10"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"        Assertions.assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2021-09-10"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"            MatcherAssert.assertThat(","lastModifiedDate":"2021-09-10"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"                    DeleteCommand.createCommand(description),","lastModifiedDate":"2021-09-10"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"                    instanceOf(DeleteCommand.class)","lastModifiedDate":"2021-09-10"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"            );","lastModifiedDate":"2021-09-10"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"        });","lastModifiedDate":"2021-09-10"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"     * Tests if exception is thrown when attempting to delete task number 0.","lastModifiedDate":"2021-09-10"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-09-10"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"    public void execute_taskNumberZero_exceptionThrown() {","lastModifiedDate":"2021-09-10"},{"lineNumber":61,"author":{"gitId":"zognin"},"content":"        String description \u003d \"0\";","lastModifiedDate":"2021-09-10"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"        Assertions.assertThrows(NonExistentTaskNumberException.class, () -\u003e {","lastModifiedDate":"2021-09-10"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"            StorageFile storageFile \u003d new StorageStub().loadListFile();","lastModifiedDate":"2021-09-10"},{"lineNumber":64,"author":{"gitId":"zognin"},"content":"            TaskList taskList \u003d new TaskList(storageFile);","lastModifiedDate":"2021-09-10"},{"lineNumber":65,"author":{"gitId":"zognin"},"content":"            DeleteCommand command \u003d DeleteCommand.createCommand(description);","lastModifiedDate":"2021-09-10"},{"lineNumber":66,"author":{"gitId":"zognin"},"content":"            command.execute(taskList);","lastModifiedDate":"2021-09-10"},{"lineNumber":67,"author":{"gitId":"zognin"},"content":"        });","lastModifiedDate":"2021-09-10"},{"lineNumber":68,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":69,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":70,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":71,"author":{"gitId":"zognin"},"content":"     * Tests if exception is thrown when attempting to delete a negative task number.","lastModifiedDate":"2021-09-10"},{"lineNumber":72,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":73,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-09-10"},{"lineNumber":74,"author":{"gitId":"zognin"},"content":"    public void execute_negativeTaskNumber_exceptionThrown() {","lastModifiedDate":"2021-09-10"},{"lineNumber":75,"author":{"gitId":"zognin"},"content":"        String description \u003d \"-2\";","lastModifiedDate":"2021-09-10"},{"lineNumber":76,"author":{"gitId":"zognin"},"content":"        Assertions.assertThrows(NonExistentTaskNumberException.class, () -\u003e {","lastModifiedDate":"2021-09-10"},{"lineNumber":77,"author":{"gitId":"zognin"},"content":"            StorageFile storageFile \u003d new StorageStub().loadListFile();","lastModifiedDate":"2021-09-10"},{"lineNumber":78,"author":{"gitId":"zognin"},"content":"            TaskList taskList \u003d new TaskList(storageFile);","lastModifiedDate":"2021-09-10"},{"lineNumber":79,"author":{"gitId":"zognin"},"content":"            DeleteCommand command \u003d DeleteCommand.createCommand(description);","lastModifiedDate":"2021-09-10"},{"lineNumber":80,"author":{"gitId":"zognin"},"content":"            command.execute(taskList);","lastModifiedDate":"2021-09-10"},{"lineNumber":81,"author":{"gitId":"zognin"},"content":"        });","lastModifiedDate":"2021-09-10"},{"lineNumber":82,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":83,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":84,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":85,"author":{"gitId":"zognin"},"content":"     * Tests if exception is thrown when attempting to delete a task number that is too large.","lastModifiedDate":"2021-09-10"},{"lineNumber":86,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":87,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-09-10"},{"lineNumber":88,"author":{"gitId":"zognin"},"content":"    public void execute_tooHighTaskNumber_exceptionThrown() {","lastModifiedDate":"2021-09-10"},{"lineNumber":89,"author":{"gitId":"zognin"},"content":"        Assertions.assertThrows(NonExistentTaskNumberException.class, () -\u003e {","lastModifiedDate":"2021-09-10"},{"lineNumber":90,"author":{"gitId":"zognin"},"content":"            StorageFile storageFile \u003d new StorageStub().loadListFile();","lastModifiedDate":"2021-09-10"},{"lineNumber":91,"author":{"gitId":"zognin"},"content":"            TaskList taskList \u003d new TaskList(storageFile);","lastModifiedDate":"2021-09-10"},{"lineNumber":92,"author":{"gitId":"zognin"},"content":"            int numOfTasks \u003d taskList.getNumberOfTasks();","lastModifiedDate":"2021-09-10"},{"lineNumber":93,"author":{"gitId":"zognin"},"content":"            String description \u003d String.valueOf(numOfTasks + 2);","lastModifiedDate":"2021-09-10"},{"lineNumber":94,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":95,"author":{"gitId":"zognin"},"content":"            DeleteCommand command \u003d DeleteCommand.createCommand(description);","lastModifiedDate":"2021-09-10"},{"lineNumber":96,"author":{"gitId":"zognin"},"content":"            command.execute(taskList);","lastModifiedDate":"2021-09-10"},{"lineNumber":97,"author":{"gitId":"zognin"},"content":"        });","lastModifiedDate":"2021-09-10"},{"lineNumber":98,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":99,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":100,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":101,"author":{"gitId":"zognin"},"content":"     * Tests if task is successfully removed from list when valid.","lastModifiedDate":"2021-09-10"},{"lineNumber":102,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":103,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-09-10"},{"lineNumber":104,"author":{"gitId":"zognin"},"content":"    public void execute_validTaskNumber_taskRemovedFromList() {","lastModifiedDate":"2021-09-10"},{"lineNumber":105,"author":{"gitId":"zognin"},"content":"        Assertions.assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2021-09-10"},{"lineNumber":106,"author":{"gitId":"zognin"},"content":"            StorageFile storageFile \u003d new StorageStub().loadListFile();","lastModifiedDate":"2021-09-10"},{"lineNumber":107,"author":{"gitId":"zognin"},"content":"            TaskList taskList \u003d new TaskList(storageFile);","lastModifiedDate":"2021-09-10"},{"lineNumber":108,"author":{"gitId":"zognin"},"content":"            Task task \u003d TodoTask.createTask(\"run\");","lastModifiedDate":"2021-09-10"},{"lineNumber":109,"author":{"gitId":"zognin"},"content":"            taskList.addTaskToList(task);","lastModifiedDate":"2021-09-10"},{"lineNumber":110,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":111,"author":{"gitId":"zognin"},"content":"            int initialNumOfTasks \u003d taskList.getNumberOfTasks();","lastModifiedDate":"2021-09-10"},{"lineNumber":112,"author":{"gitId":"zognin"},"content":"            String description \u003d String.valueOf(initialNumOfTasks);","lastModifiedDate":"2021-09-10"},{"lineNumber":113,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":114,"author":{"gitId":"zognin"},"content":"            DeleteCommand command \u003d DeleteCommand.createCommand(description);","lastModifiedDate":"2021-09-10"},{"lineNumber":115,"author":{"gitId":"zognin"},"content":"            command.execute(taskList);","lastModifiedDate":"2021-09-10"},{"lineNumber":116,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":117,"author":{"gitId":"zognin"},"content":"            Assertions.assertEquals(initialNumOfTasks - 1, taskList.getNumberOfTasks());","lastModifiedDate":"2021-09-10"},{"lineNumber":118,"author":{"gitId":"zognin"},"content":"        });","lastModifiedDate":"2021-09-10"},{"lineNumber":119,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":120,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"zognin":120}},{"path":"src/test/java/command/DoneCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package command;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import static org.hamcrest.CoreMatchers.instanceOf;","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import org.hamcrest.MatcherAssert;","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import exception.InvalidTaskNumberException;","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"import exception.MissingCommandDescriptionException;","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"import exception.NonExistentTaskNumberException;","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"import message.Message;","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"import storage.StorageFile;","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"import stub.storage.StorageStub;","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"import tasklist.Task;","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"import tasklist.TodoTask;","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":" * Encapsulates tests for done command.","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"public class DoneCommandTest {","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"     * Tests if exception is thrown when command description is missing.","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"    public void createCommand_missingDescription_exceptionThrown() {","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"        String description \u003d \"\";","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"        Assertions.assertThrows(MissingCommandDescriptionException.class, () -\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"                DoneCommand.createCommand(description));","lastModifiedDate":"2021-09-10"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"     * Tests if exception is thrown when description is not a number.","lastModifiedDate":"2021-09-10"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-09-10"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"    public void createCommand_nonNumberDescription_exceptionThrown() {","lastModifiedDate":"2021-09-10"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"        String description \u003d \"asd\";","lastModifiedDate":"2021-09-10"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"        Assertions.assertThrows(InvalidTaskNumberException.class, () -\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"                DoneCommand.createCommand(description));","lastModifiedDate":"2021-09-10"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"     * Tests if command is created when description is valid.","lastModifiedDate":"2021-09-10"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-09-10"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"    public void createCommand_numberDescription_commandCreated() {","lastModifiedDate":"2021-09-10"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"        String description \u003d \"1\";","lastModifiedDate":"2021-09-10"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"        Assertions.assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2021-09-10"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"            MatcherAssert.assertThat(","lastModifiedDate":"2021-09-10"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"                    DoneCommand.createCommand(description),","lastModifiedDate":"2021-09-10"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"                    instanceOf(DoneCommand.class)","lastModifiedDate":"2021-09-10"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"            );","lastModifiedDate":"2021-09-10"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"        });","lastModifiedDate":"2021-09-10"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"     * Tests if exception is thrown when attempting to mark task number 0 as done.","lastModifiedDate":"2021-09-10"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":61,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-09-10"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"    public void execute_taskNumberZero_exceptionThrown() {","lastModifiedDate":"2021-09-10"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"        String description \u003d \"0\";","lastModifiedDate":"2021-09-10"},{"lineNumber":64,"author":{"gitId":"zognin"},"content":"        Assertions.assertThrows(NonExistentTaskNumberException.class, () -\u003e {","lastModifiedDate":"2021-09-10"},{"lineNumber":65,"author":{"gitId":"zognin"},"content":"            StorageFile storageFile \u003d new StorageStub().loadListFile();","lastModifiedDate":"2021-09-10"},{"lineNumber":66,"author":{"gitId":"zognin"},"content":"            TaskList taskList \u003d new TaskList(storageFile);","lastModifiedDate":"2021-09-10"},{"lineNumber":67,"author":{"gitId":"zognin"},"content":"            DoneCommand command \u003d DoneCommand.createCommand(description);","lastModifiedDate":"2021-09-10"},{"lineNumber":68,"author":{"gitId":"zognin"},"content":"            command.execute(taskList);","lastModifiedDate":"2021-09-10"},{"lineNumber":69,"author":{"gitId":"zognin"},"content":"        });","lastModifiedDate":"2021-09-10"},{"lineNumber":70,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":71,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":72,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":73,"author":{"gitId":"zognin"},"content":"     * Tests if exception is thrown when attempting to mark a negative task number as done.","lastModifiedDate":"2021-09-10"},{"lineNumber":74,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":75,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-09-10"},{"lineNumber":76,"author":{"gitId":"zognin"},"content":"    public void execute_negativeTaskNumber_exceptionThrown() {","lastModifiedDate":"2021-09-10"},{"lineNumber":77,"author":{"gitId":"zognin"},"content":"        String description \u003d \"-2\";","lastModifiedDate":"2021-09-10"},{"lineNumber":78,"author":{"gitId":"zognin"},"content":"        Assertions.assertThrows(NonExistentTaskNumberException.class, () -\u003e {","lastModifiedDate":"2021-09-10"},{"lineNumber":79,"author":{"gitId":"zognin"},"content":"            StorageFile storageFile \u003d new StorageStub().loadListFile();","lastModifiedDate":"2021-09-10"},{"lineNumber":80,"author":{"gitId":"zognin"},"content":"            TaskList taskList \u003d new TaskList(storageFile);","lastModifiedDate":"2021-09-10"},{"lineNumber":81,"author":{"gitId":"zognin"},"content":"            DoneCommand command \u003d DoneCommand.createCommand(description);","lastModifiedDate":"2021-09-10"},{"lineNumber":82,"author":{"gitId":"zognin"},"content":"            command.execute(taskList);","lastModifiedDate":"2021-09-10"},{"lineNumber":83,"author":{"gitId":"zognin"},"content":"        });","lastModifiedDate":"2021-09-10"},{"lineNumber":84,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":85,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":86,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":87,"author":{"gitId":"zognin"},"content":"     * Tests if exception is thrown when attempting to mark a task number that is too large as done.","lastModifiedDate":"2021-09-10"},{"lineNumber":88,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":89,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-09-10"},{"lineNumber":90,"author":{"gitId":"zognin"},"content":"    public void execute_tooHighTaskNumber_exceptionThrown() {","lastModifiedDate":"2021-09-10"},{"lineNumber":91,"author":{"gitId":"zognin"},"content":"        Assertions.assertThrows(NonExistentTaskNumberException.class, () -\u003e {","lastModifiedDate":"2021-09-10"},{"lineNumber":92,"author":{"gitId":"zognin"},"content":"            StorageFile storageFile \u003d new StorageStub().loadListFile();","lastModifiedDate":"2021-09-10"},{"lineNumber":93,"author":{"gitId":"zognin"},"content":"            TaskList taskList \u003d new TaskList(storageFile);","lastModifiedDate":"2021-09-10"},{"lineNumber":94,"author":{"gitId":"zognin"},"content":"            int numOfTasks \u003d taskList.getNumberOfTasks();","lastModifiedDate":"2021-09-10"},{"lineNumber":95,"author":{"gitId":"zognin"},"content":"            String description \u003d String.valueOf(numOfTasks + 2);","lastModifiedDate":"2021-09-10"},{"lineNumber":96,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":97,"author":{"gitId":"zognin"},"content":"            DoneCommand command \u003d DoneCommand.createCommand(description);","lastModifiedDate":"2021-09-10"},{"lineNumber":98,"author":{"gitId":"zognin"},"content":"            command.execute(taskList);","lastModifiedDate":"2021-09-10"},{"lineNumber":99,"author":{"gitId":"zognin"},"content":"        });","lastModifiedDate":"2021-09-10"},{"lineNumber":100,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":101,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":102,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":103,"author":{"gitId":"zognin"},"content":"     * Tests if task is successfully marked as done when valid.","lastModifiedDate":"2021-09-10"},{"lineNumber":104,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":105,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-09-10"},{"lineNumber":106,"author":{"gitId":"zognin"},"content":"    public void execute_validTaskNumber_taskMarkedDone() {","lastModifiedDate":"2021-09-10"},{"lineNumber":107,"author":{"gitId":"zognin"},"content":"        Assertions.assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2021-09-10"},{"lineNumber":108,"author":{"gitId":"zognin"},"content":"            StorageFile storageFile \u003d new StorageStub().loadListFile();","lastModifiedDate":"2021-09-10"},{"lineNumber":109,"author":{"gitId":"zognin"},"content":"            TaskList taskList \u003d new TaskList(storageFile);","lastModifiedDate":"2021-09-10"},{"lineNumber":110,"author":{"gitId":"zognin"},"content":"            Task task \u003d TodoTask.createTask(\"run\");","lastModifiedDate":"2021-09-10"},{"lineNumber":111,"author":{"gitId":"zognin"},"content":"            taskList.addTaskToList(task);","lastModifiedDate":"2021-09-10"},{"lineNumber":112,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":113,"author":{"gitId":"zognin"},"content":"            int initialNumOfTasks \u003d taskList.getNumberOfTasks();","lastModifiedDate":"2021-09-10"},{"lineNumber":114,"author":{"gitId":"zognin"},"content":"            String description \u003d String.valueOf(initialNumOfTasks);","lastModifiedDate":"2021-09-10"},{"lineNumber":115,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":116,"author":{"gitId":"zognin"},"content":"            DoneCommand command \u003d DoneCommand.createCommand(description);","lastModifiedDate":"2021-09-10"},{"lineNumber":117,"author":{"gitId":"zognin"},"content":"            Message outputMessage \u003d command.execute(taskList);","lastModifiedDate":"2021-09-10"},{"lineNumber":118,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":119,"author":{"gitId":"zognin"},"content":"            String expectedPrefix \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2021-09-10"},{"lineNumber":120,"author":{"gitId":"zognin"},"content":"            Message expectedOutputMessage \u003d new Message(expectedPrefix, task.toString());","lastModifiedDate":"2021-09-10"},{"lineNumber":121,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":122,"author":{"gitId":"zognin"},"content":"            Assertions.assertEquals(expectedOutputMessage.toString(), outputMessage.toString());","lastModifiedDate":"2021-09-10"},{"lineNumber":123,"author":{"gitId":"zognin"},"content":"        });","lastModifiedDate":"2021-09-10"},{"lineNumber":124,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":125,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"zognin":125}},{"path":"src/test/java/command/FindCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package command;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import static org.hamcrest.CoreMatchers.instanceOf;","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import org.hamcrest.MatcherAssert;","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"import exception.MissingCommandDescriptionException;","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"import message.Message;","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"import storage.StorageFile;","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"import stub.storage.StorageStub;","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"import tasklist.TodoTask;","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":" * Encapsulates tests for find command.","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"public class FindCommandTest {","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"     * Tests if exception is thrown when command description is missing.","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"    public void createCommand_missingDescription_exceptionThrown() {","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"        String description \u003d \"\";","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"        Assertions.assertThrows(MissingCommandDescriptionException.class, () -\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"                FindCommand.createCommand(description));","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"     * Tests if command is created when description is valid.","lastModifiedDate":"2021-09-10"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-09-10"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"    public void createCommand_presentDescription_commandCreated() {","lastModifiedDate":"2021-09-10"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"        String description \u003d \"cat\";","lastModifiedDate":"2021-09-10"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"        Assertions.assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2021-09-10"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"            MatcherAssert.assertThat(","lastModifiedDate":"2021-09-10"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"                    FindCommand.createCommand(description),","lastModifiedDate":"2021-09-10"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"                    instanceOf(FindCommand.class)","lastModifiedDate":"2021-09-10"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"            );","lastModifiedDate":"2021-09-10"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"        });","lastModifiedDate":"2021-09-10"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"     * Tests if only tasks matching the keywords are returned.","lastModifiedDate":"2021-09-10"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-09-10"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"    public void execute_keywordInList_onlyTasksWithKeywordReturned() {","lastModifiedDate":"2021-09-10"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"        String description \u003d \"cake\";","lastModifiedDate":"2021-09-10"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"        Assertions.assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2021-09-10"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"            StorageFile storageFile \u003d new StorageStub().loadListFile();","lastModifiedDate":"2021-09-10"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"            storageFile.rewriteFile(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-09-10"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"            TaskList taskList \u003d new TaskList(storageFile);","lastModifiedDate":"2021-09-10"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"            int numOfTasksContainingKeyword \u003d 3;","lastModifiedDate":"2021-09-10"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"            for (int i \u003d 0; i \u003c numOfTasksContainingKeyword; i++) {","lastModifiedDate":"2021-09-10"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"                taskList.addTaskToList(TodoTask.createTask(\"eat cake\"));","lastModifiedDate":"2021-09-10"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"            }","lastModifiedDate":"2021-09-10"},{"lineNumber":61,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"            for (int i \u003d 0; i \u003c 2; i++) {","lastModifiedDate":"2021-09-10"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"                taskList.addTaskToList(TodoTask.createTask(\"sleep\"));","lastModifiedDate":"2021-09-10"},{"lineNumber":64,"author":{"gitId":"zognin"},"content":"                taskList.addTaskToList(TodoTask.createTask(\"jump\"));","lastModifiedDate":"2021-09-10"},{"lineNumber":65,"author":{"gitId":"zognin"},"content":"            }","lastModifiedDate":"2021-09-10"},{"lineNumber":66,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":67,"author":{"gitId":"zognin"},"content":"            FindCommand command \u003d FindCommand.createCommand(description);","lastModifiedDate":"2021-09-10"},{"lineNumber":68,"author":{"gitId":"zognin"},"content":"            Message outputMessage \u003d command.execute(taskList);","lastModifiedDate":"2021-09-10"},{"lineNumber":69,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":70,"author":{"gitId":"zognin"},"content":"            TaskList expectedList \u003d taskList.getListContainingKeyword(description);","lastModifiedDate":"2021-09-10"},{"lineNumber":71,"author":{"gitId":"zognin"},"content":"            String prefix \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2021-09-10"},{"lineNumber":72,"author":{"gitId":"zognin"},"content":"            Message expectedMessage \u003d new Message(prefix, expectedList.toString());","lastModifiedDate":"2021-09-10"},{"lineNumber":73,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":74,"author":{"gitId":"zognin"},"content":"            Assertions.assertEquals(outputMessage.toString(), expectedMessage.toString());","lastModifiedDate":"2021-09-10"},{"lineNumber":75,"author":{"gitId":"zognin"},"content":"        });","lastModifiedDate":"2021-09-10"},{"lineNumber":76,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":77,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"zognin":77}},{"path":"src/test/java/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package parser;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":" * Encapsulates tests for Parser.","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"     * Tests if exitCommand is detected as one.","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"    public void detectExitCommand_exitCommand_true() {","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"        String exitCommand \u003d \"bye\";","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"        System.setIn(new ByteArrayInputStream(exitCommand.getBytes()));","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"        boolean isExitCommand \u003d new CommandParser().detectExitCommand(exitCommand);","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"        Assertions.assertEquals(true, isExitCommand);","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"        System.setIn(System.in);","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"     * Tests if non exitCommand is not detected as an exitCommand.","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"    public void detectExitCommand_nonExitCommand_false() {","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"        String nonExitCommand \u003d \"hey\";","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"        System.setIn(new ByteArrayInputStream(nonExitCommand.getBytes()));","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"        boolean isExitCommand \u003d new CommandParser().detectExitCommand(nonExitCommand);","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"        Assertions.assertEquals(false, isExitCommand);","lastModifiedDate":"2021-09-10"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"        System.setIn(System.in);","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"zognin":37}},{"path":"src/test/java/stub/storage/StorageStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package stub.storage;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import exception.ErrorAccessingFileException;","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import storage.StorageFile;","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":" * Encapsulates storage for test data.","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"public class StorageStub extends Storage {","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"     * Loads file containing test data.","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"     * @return `StorageFile`.","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"    public StorageFile loadListFile() {","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"        try {","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"            StorageFile file \u003d super.loadListFile(\"test.txt\");","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"            return file;","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"        } catch (ErrorAccessingFileException e) {","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"        return null;","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"zognin":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"something","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"todo eat cake","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"deadline watch movie /by 12-04-2020 1500","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"event eat icecream /at everyday","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"done 1","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"todo read book","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"done 3","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"done 20","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"deadline do homework /by 12-03-2020 0900","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"bye","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"zognin":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zognin":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/Duke.java","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zognin":1,"-":37}}]
