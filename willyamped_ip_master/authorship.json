[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"willyamped"},"content":"1.[T][ ] a ","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"willyamped"},"content":"2.[D][ ] bb (by: aldjjhal;;2)","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"willyamped":2}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willyamped"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"willyamped"},"content":"    protected String by;","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"willyamped"},"content":"     * A constructor to create a Deadline object","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"willyamped"},"content":"     * @param description The description of the Deadline object","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"willyamped"},"content":"     * @param by The deadline of the Deadline object","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"willyamped"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"willyamped"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"willyamped"},"content":"        this.by \u003d by.equals(\"\") ? \"by: \" : by;","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"willyamped"},"content":"     * A method to get the string representation of a Deadline object","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"willyamped"},"content":"     * @return The string representation of a Deadline object","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"willyamped"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"willyamped"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"willyamped"},"content":"        return \"[D]\" + super.toString() + \"(\" + by + \")\";","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"willyamped"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"willyamped":24}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willyamped"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"willyamped"},"content":"import java.time.format.TextStyle;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"willyamped"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"willyamped"},"content":"import java.util.List;","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"willyamped"},"content":"import java.util.Locale;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"willyamped"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"willyamped"},"content":"import static java.lang.Integer.parseInt;","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"willyamped"},"content":"import java.io.File;  // Import the File class","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"willyamped"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"willyamped"},"content":"import java.io.FileWriter; // Import this class to handle errors","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"willyamped"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"willyamped"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"willyamped"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"willyamped"},"content":" * Project Duke","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"willyamped"},"content":" *","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"willyamped"},"content":" * @author Willy Angga Prawira","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"willyamped"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"willyamped"},"content":"    public static void addTask(List\u003cTask\u003e ls) {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"willyamped"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"willyamped"},"content":"        System.out.println(ls.get(ls.size() - 1).toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"willyamped"},"content":"        System.out.println(\"Now you have \" + ls.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"willyamped"},"content":"     * A method to get the description from a task entered by the user","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"willyamped"},"content":"     * @param arr The array that contains strings from the user input","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"willyamped"},"content":"     * @return A string containing the description only","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"willyamped"},"content":"    public static String getDescription(String[] arr) {","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"willyamped"},"content":"        String str \u003d \"\";","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"willyamped"},"content":"        for(int i \u003d 1; i \u003c arr.length; i++) {","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"willyamped"},"content":"            if (!(arr[i].charAt(0) \u003d\u003d \u0027/\u0027)) {","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"willyamped"},"content":"                str +\u003d arr[i] + \" \";","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"willyamped"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"willyamped"},"content":"            else {","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"willyamped"},"content":"                break;","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"willyamped"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"willyamped"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"willyamped"},"content":"        return str;","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"willyamped"},"content":"     * A method to get the deadline from a task entered by the user","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"willyamped"},"content":"     * @param arr The array that contains strings from the user input","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"willyamped"},"content":"     * @return A string containing the deadline only","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"willyamped"},"content":"    public static String getDeadline(String[] arr) {","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"willyamped"},"content":"        String str \u003d \"\";","lastModifiedDate":"2021-08-16"},{"lineNumber":56,"author":{"gitId":"willyamped"},"content":"        boolean bool \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"willyamped"},"content":"        for(int i \u003d 1; i \u003c arr.length; i++) {","lastModifiedDate":"2021-08-16"},{"lineNumber":58,"author":{"gitId":"willyamped"},"content":"            if (!bool) {","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"willyamped"},"content":"                if (arr[i].charAt(0) \u003d\u003d \u0027/\u0027) {","lastModifiedDate":"2021-08-16"},{"lineNumber":60,"author":{"gitId":"willyamped"},"content":"                    bool \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":61,"author":{"gitId":"willyamped"},"content":"                    str +\u003d arr[i].substring(1) + \": \";","lastModifiedDate":"2021-08-17"},{"lineNumber":62,"author":{"gitId":"willyamped"},"content":"                }","lastModifiedDate":"2021-08-16"},{"lineNumber":63,"author":{"gitId":"willyamped"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"willyamped"},"content":"                if (arr[i].length() \u003d\u003d 10 \u0026\u0026 arr[i].charAt(4) \u003d\u003d \u0027-\u0027 \u0026\u0026 arr[i].charAt(7) \u003d\u003d \u0027-\u0027) {","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"willyamped"},"content":"                    LocalDate ld \u003d LocalDate.parse(arr[i]);","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"willyamped"},"content":"                    str +\u003d ld.getDayOfMonth() + \" \"","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"willyamped"},"content":"                            + ld.getMonth().getDisplayName(TextStyle.SHORT, Locale.ENGLISH) + \" \"","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"willyamped"},"content":"                                + ld.getYear();","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"willyamped"},"content":"                    if (i !\u003d arr.length - 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"willyamped"},"content":"                        str +\u003d \" \";","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"willyamped"},"content":"                    }","lastModifiedDate":"2021-08-16"},{"lineNumber":72,"author":{"gitId":"willyamped"},"content":"                } else if (arr[i].length() \u003d\u003d 5 \u0026\u0026 arr[i].charAt(2) \u003d\u003d \u0027:\u0027) {","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"willyamped"},"content":"                    LocalTime lt \u003d LocalTime.parse(arr[i]);","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"willyamped"},"content":"                    int hour \u003d lt.getHour();","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"willyamped"},"content":"                    String hourSuffix \u003d hour \u003c 12 ? \"AM\" : \"PM\";","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"willyamped"},"content":"                    if (hour \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"willyamped"},"content":"                        hour \u003d 12;","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"willyamped"},"content":"                    } else if (hour \u003e 12) {","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"willyamped"},"content":"                        hour -\u003d 12;","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"willyamped"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"willyamped"},"content":"                    int minute \u003d lt.getMinute();","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"willyamped"},"content":"                    String minutePrefix \u003d minute \u003c 10 ? \"0\" : \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"willyamped"},"content":"                    str +\u003d hour + \":\" + minutePrefix + minute + \" \" + hourSuffix;","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"willyamped"},"content":"                    if (i !\u003d arr.length - 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"willyamped"},"content":"                        str +\u003d \" \";","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"willyamped"},"content":"                    }","lastModifiedDate":"2021-08-16"},{"lineNumber":87,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":88,"author":{"gitId":"willyamped"},"content":"                } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"willyamped"},"content":"                    str +\u003d arr[i];","lastModifiedDate":"2021-08-16"},{"lineNumber":90,"author":{"gitId":"willyamped"},"content":"                    if (i !\u003d arr.length - 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"willyamped"},"content":"                        str +\u003d \" \";","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"willyamped"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"willyamped"},"content":"                }","lastModifiedDate":"2021-08-16"},{"lineNumber":94,"author":{"gitId":"willyamped"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":95,"author":{"gitId":"willyamped"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":96,"author":{"gitId":"willyamped"},"content":"        return str;","lastModifiedDate":"2021-08-16"},{"lineNumber":97,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":98,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":99,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":100,"author":{"gitId":"willyamped"},"content":"     * A method to check if a string is an integer or not","lastModifiedDate":"2021-08-17"},{"lineNumber":101,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":102,"author":{"gitId":"willyamped"},"content":"     * @param s A string from the user input","lastModifiedDate":"2021-08-17"},{"lineNumber":103,"author":{"gitId":"willyamped"},"content":"     * @return True if it is an integer, false otherwise","lastModifiedDate":"2021-08-17"},{"lineNumber":104,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":105,"author":{"gitId":"willyamped"},"content":"    public static boolean isNumeric(String s) {","lastModifiedDate":"2021-08-17"},{"lineNumber":106,"author":{"gitId":"willyamped"},"content":"        try {","lastModifiedDate":"2021-08-17"},{"lineNumber":107,"author":{"gitId":"willyamped"},"content":"            int d \u003d Integer.parseInt(s);","lastModifiedDate":"2021-08-17"},{"lineNumber":108,"author":{"gitId":"willyamped"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":109,"author":{"gitId":"willyamped"},"content":"            return false;","lastModifiedDate":"2021-08-17"},{"lineNumber":110,"author":{"gitId":"willyamped"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":111,"author":{"gitId":"willyamped"},"content":"        return true;","lastModifiedDate":"2021-08-17"},{"lineNumber":112,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":113,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":114,"author":{"gitId":"willyamped"},"content":"    public static void readFile() {","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"willyamped"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"willyamped"},"content":"            File myObj \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"willyamped"},"content":"            Scanner myScanner \u003d new Scanner(myObj);","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"willyamped"},"content":"            while (myScanner.hasNextLine()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"willyamped"},"content":"                String data \u003d myScanner.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"willyamped"},"content":"                System.out.println(data);","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"willyamped"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"willyamped"},"content":"            myScanner.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":123,"author":{"gitId":"willyamped"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"willyamped"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"willyamped"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"willyamped"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":128,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"willyamped"},"content":"    public static void saveFile(List\u003cTask\u003e ls) {","lastModifiedDate":"2021-08-23"},{"lineNumber":130,"author":{"gitId":"willyamped"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":131,"author":{"gitId":"willyamped"},"content":"            String str \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":132,"author":{"gitId":"willyamped"},"content":"            for (int i \u003d 0; i \u003c ls.size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":133,"author":{"gitId":"willyamped"},"content":"                str +\u003d (i + 1) + \".\" + ls.get(i).toString() + \"\\n\";","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"willyamped"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"willyamped"},"content":"            FileWriter fileWriter \u003d new FileWriter(\"data/duke.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":136,"author":{"gitId":"willyamped"},"content":"            fileWriter.write(str);","lastModifiedDate":"2021-08-23"},{"lineNumber":137,"author":{"gitId":"willyamped"},"content":"            fileWriter.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"willyamped"},"content":"            System.out.println(\"Successfully wrote to the file.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":139,"author":{"gitId":"willyamped"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":140,"author":{"gitId":"willyamped"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":141,"author":{"gitId":"willyamped"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":142,"author":{"gitId":"willyamped"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":143,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":144,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":145,"author":{"gitId":"willyamped"},"content":"    public static void displayList(List\u003cTask\u003e ls) {","lastModifiedDate":"2021-08-23"},{"lineNumber":146,"author":{"gitId":"willyamped"},"content":"        if (ls.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":147,"author":{"gitId":"willyamped"},"content":"            System.out.println(\"You currently do not have any task!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":148,"author":{"gitId":"willyamped"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":149,"author":{"gitId":"willyamped"},"content":"            System.out.println(\"Here are the tasks in your list: \");","lastModifiedDate":"2021-08-23"},{"lineNumber":150,"author":{"gitId":"willyamped"},"content":"            for (int i \u003d 0; i \u003c ls.size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":151,"author":{"gitId":"willyamped"},"content":"                System.out.println((i + 1) + \".\" + ls.get(i).toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":152,"author":{"gitId":"willyamped"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":153,"author":{"gitId":"willyamped"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":154,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":155,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":157,"author":{"gitId":"willyamped"},"content":"        readFile();","lastModifiedDate":"2021-08-23"},{"lineNumber":158,"author":{"gitId":"willyamped"},"content":"        String input \u003d \"\";","lastModifiedDate":"2021-08-15"},{"lineNumber":159,"author":{"gitId":"willyamped"},"content":"        String[] arr;","lastModifiedDate":"2021-08-16"},{"lineNumber":160,"author":{"gitId":"willyamped"},"content":"        Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-15"},{"lineNumber":161,"author":{"gitId":"willyamped"},"content":"        System.out.println(","lastModifiedDate":"2021-08-16"},{"lineNumber":162,"author":{"gitId":"willyamped"},"content":"                \"Hello! I\u0027m Amped :) \\n\"","lastModifiedDate":"2021-08-16"},{"lineNumber":163,"author":{"gitId":"willyamped"},"content":"                + \"Type: \\n\"","lastModifiedDate":"2021-08-16"},{"lineNumber":164,"author":{"gitId":"willyamped"},"content":"                + \"1. A task (todo/deadline/event) followed by description to add tasks \\n\"","lastModifiedDate":"2021-08-16"},{"lineNumber":165,"author":{"gitId":"willyamped"},"content":"                + \"   e.g \\\"deadline submit homework /by Sunday 12 pm\\\" \\n\"","lastModifiedDate":"2021-08-16"},{"lineNumber":166,"author":{"gitId":"willyamped"},"content":"                + \"2. \\\"list\\\" to see the list of tasks \\n\"","lastModifiedDate":"2021-08-16"},{"lineNumber":167,"author":{"gitId":"willyamped"},"content":"                + \"3. \\\"done [number]\\\" to mark a particular task as done \\n\"","lastModifiedDate":"2021-08-16"},{"lineNumber":168,"author":{"gitId":"willyamped"},"content":"                + \"4. \\\"delete [number]\\\" to delete a particular task \\n\"","lastModifiedDate":"2021-08-17"},{"lineNumber":169,"author":{"gitId":"willyamped"},"content":"                + \"5. \\\"bye\\\" to exit\"","lastModifiedDate":"2021-08-17"},{"lineNumber":170,"author":{"gitId":"willyamped"},"content":"        );","lastModifiedDate":"2021-08-16"},{"lineNumber":171,"author":{"gitId":"willyamped"},"content":"        List\u003cTask\u003e ls \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-16"},{"lineNumber":172,"author":{"gitId":"willyamped"},"content":"        do {","lastModifiedDate":"2021-08-15"},{"lineNumber":173,"author":{"gitId":"willyamped"},"content":"            try {","lastModifiedDate":"2021-08-16"},{"lineNumber":174,"author":{"gitId":"willyamped"},"content":"                input \u003d scan.nextLine();","lastModifiedDate":"2021-08-15"},{"lineNumber":175,"author":{"gitId":"willyamped"},"content":"                arr \u003d input.split(\" \");","lastModifiedDate":"2021-08-16"},{"lineNumber":176,"author":{"gitId":"willyamped"},"content":"                if (input.equals(\"bye\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":177,"author":{"gitId":"willyamped"},"content":"                    System.out.println(\"Good Bye. Have a nice day!\");","lastModifiedDate":"2021-08-15"},{"lineNumber":178,"author":{"gitId":"willyamped"},"content":"                } else if (arr[0].equals(\"done\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":179,"author":{"gitId":"willyamped"},"content":"                    if (arr.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":180,"author":{"gitId":"willyamped"},"content":"                        throw new InvalidCommandException(\"Please specify a number\");","lastModifiedDate":"2021-08-17"},{"lineNumber":181,"author":{"gitId":"willyamped"},"content":"                    } else if (!isNumeric(arr[1])) {","lastModifiedDate":"2021-08-24"},{"lineNumber":182,"author":{"gitId":"willyamped"},"content":"                        throw new InvalidCommandException(\"Please enter a number\");","lastModifiedDate":"2021-08-17"},{"lineNumber":183,"author":{"gitId":"willyamped"},"content":"                    } else if (ls.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":184,"author":{"gitId":"willyamped"},"content":"                        throw new InvalidCommandException(\"You have not added any task!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":185,"author":{"gitId":"willyamped"},"content":"                    } else if ((Integer.parseInt(arr[1]) \u003e ls.size()","lastModifiedDate":"2021-08-24"},{"lineNumber":186,"author":{"gitId":"willyamped"},"content":"                            || Integer.parseInt(arr[1]) \u003c\u003d 0)) {","lastModifiedDate":"2021-08-17"},{"lineNumber":187,"author":{"gitId":"willyamped"},"content":"                        throw new InvalidValueException(\"Enter a valid number!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":188,"author":{"gitId":"willyamped"},"content":"                    } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":189,"author":{"gitId":"willyamped"},"content":"                        System.out.println(\"Nice! I\u0027ve marked this task as done: \");","lastModifiedDate":"2021-08-16"},{"lineNumber":190,"author":{"gitId":"willyamped"},"content":"                        ls.get(parseInt(arr[1]) - 1).markAsDone();","lastModifiedDate":"2021-08-16"},{"lineNumber":191,"author":{"gitId":"willyamped"},"content":"                        System.out.println(ls.get(parseInt(arr[1]) - 1).toString());","lastModifiedDate":"2021-08-16"},{"lineNumber":192,"author":{"gitId":"willyamped"},"content":"                    }","lastModifiedDate":"2021-08-16"},{"lineNumber":193,"author":{"gitId":"willyamped"},"content":"                } else if (arr[0].equals(\"delete\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":194,"author":{"gitId":"willyamped"},"content":"                    if (arr.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":195,"author":{"gitId":"willyamped"},"content":"                        throw new InvalidCommandException(\"Please specify a number\");","lastModifiedDate":"2021-08-17"},{"lineNumber":196,"author":{"gitId":"willyamped"},"content":"                    } else if (!isNumeric(arr[1])) {","lastModifiedDate":"2021-08-24"},{"lineNumber":197,"author":{"gitId":"willyamped"},"content":"                        throw new InvalidCommandException(\"Please enter a number\");","lastModifiedDate":"2021-08-17"},{"lineNumber":198,"author":{"gitId":"willyamped"},"content":"                    } else if (ls.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":199,"author":{"gitId":"willyamped"},"content":"                        throw new InvalidCommandException(\"You have not added any task!\");","lastModifiedDate":"2021-08-16"},{"lineNumber":200,"author":{"gitId":"willyamped"},"content":"                    } else if ((Integer.parseInt(arr[1]) \u003e ls.size()","lastModifiedDate":"2021-08-24"},{"lineNumber":201,"author":{"gitId":"willyamped"},"content":"                            || Integer.parseInt(arr[1]) \u003c\u003d 0)) {","lastModifiedDate":"2021-08-16"},{"lineNumber":202,"author":{"gitId":"willyamped"},"content":"                        throw new InvalidValueException(\"Enter a valid number!\");","lastModifiedDate":"2021-08-16"},{"lineNumber":203,"author":{"gitId":"willyamped"},"content":"                    } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":204,"author":{"gitId":"willyamped"},"content":"                        System.out.println(\"Noted. I\u0027ve removed this task: \");","lastModifiedDate":"2021-08-16"},{"lineNumber":205,"author":{"gitId":"willyamped"},"content":"                        System.out.println(ls.get(parseInt(arr[1]) - 1).toString());","lastModifiedDate":"2021-08-16"},{"lineNumber":206,"author":{"gitId":"willyamped"},"content":"                        ls.remove(parseInt(arr[1]) - 1);","lastModifiedDate":"2021-08-16"},{"lineNumber":207,"author":{"gitId":"willyamped"},"content":"                    }","lastModifiedDate":"2021-08-16"},{"lineNumber":208,"author":{"gitId":"willyamped"},"content":"                } else if (arr[0].equals(\"todo\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":209,"author":{"gitId":"willyamped"},"content":"                    if (arr.length \u003c 2) {","lastModifiedDate":"2021-08-16"},{"lineNumber":210,"author":{"gitId":"willyamped"},"content":"                        throw new EmptyDescriptionException(\"Missing description / date\");","lastModifiedDate":"2021-08-16"},{"lineNumber":211,"author":{"gitId":"willyamped"},"content":"                    }","lastModifiedDate":"2021-08-16"},{"lineNumber":212,"author":{"gitId":"willyamped"},"content":"                    ls.add(new Todo(getDescription(arr)));","lastModifiedDate":"2021-08-17"},{"lineNumber":213,"author":{"gitId":"willyamped"},"content":"                    addTask(ls);","lastModifiedDate":"2021-08-23"},{"lineNumber":214,"author":{"gitId":"willyamped"},"content":"                } else if (arr[0].equals(\"deadline\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":215,"author":{"gitId":"willyamped"},"content":"                    if (arr.length \u003c 2) {","lastModifiedDate":"2021-08-16"},{"lineNumber":216,"author":{"gitId":"willyamped"},"content":"                        throw new EmptyDescriptionException(\"Missing description / date\");","lastModifiedDate":"2021-08-16"},{"lineNumber":217,"author":{"gitId":"willyamped"},"content":"                    }","lastModifiedDate":"2021-08-16"},{"lineNumber":218,"author":{"gitId":"willyamped"},"content":"                    ls.add(new Deadline(getDescription(arr), getDeadline(arr)));","lastModifiedDate":"2021-08-16"},{"lineNumber":219,"author":{"gitId":"willyamped"},"content":"                    addTask(ls);","lastModifiedDate":"2021-08-23"},{"lineNumber":220,"author":{"gitId":"willyamped"},"content":"                } else if (arr[0].equals(\"event\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":221,"author":{"gitId":"willyamped"},"content":"                    if (arr.length \u003c 2) {","lastModifiedDate":"2021-08-16"},{"lineNumber":222,"author":{"gitId":"willyamped"},"content":"                        throw new EmptyDescriptionException(\"Missing description / date\");","lastModifiedDate":"2021-08-16"},{"lineNumber":223,"author":{"gitId":"willyamped"},"content":"                    }","lastModifiedDate":"2021-08-16"},{"lineNumber":224,"author":{"gitId":"willyamped"},"content":"                    ls.add(new Event(getDescription(arr), getDeadline(arr)));","lastModifiedDate":"2021-08-16"},{"lineNumber":225,"author":{"gitId":"willyamped"},"content":"                    addTask(ls);","lastModifiedDate":"2021-08-23"},{"lineNumber":226,"author":{"gitId":"willyamped"},"content":"                } else if (input.equals(\"list\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":227,"author":{"gitId":"willyamped"},"content":"                    displayList(ls);","lastModifiedDate":"2021-08-23"},{"lineNumber":228,"author":{"gitId":"willyamped"},"content":"                } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":229,"author":{"gitId":"willyamped"},"content":"                    throw new InvalidCommandException(\"Command not Found\");","lastModifiedDate":"2021-08-16"},{"lineNumber":230,"author":{"gitId":"willyamped"},"content":"                }","lastModifiedDate":"2021-08-15"},{"lineNumber":231,"author":{"gitId":"willyamped"},"content":"                saveFile(ls);","lastModifiedDate":"2021-08-23"},{"lineNumber":232,"author":{"gitId":"willyamped"},"content":"            } catch (InvalidCommandException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":233,"author":{"gitId":"willyamped"},"content":"                System.out.println(e.toString());","lastModifiedDate":"2021-08-16"},{"lineNumber":234,"author":{"gitId":"willyamped"},"content":"            } catch (EmptyDescriptionException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":235,"author":{"gitId":"willyamped"},"content":"                System.out.println(e.toString());","lastModifiedDate":"2021-08-16"},{"lineNumber":236,"author":{"gitId":"willyamped"},"content":"            } catch (InvalidValueException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":237,"author":{"gitId":"willyamped"},"content":"                System.out.println(e.toString());","lastModifiedDate":"2021-08-16"},{"lineNumber":238,"author":{"gitId":"willyamped"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":239,"author":{"gitId":"willyamped"},"content":"        } while (!input.equals(\"bye\"));","lastModifiedDate":"2021-08-15"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"willyamped":237,"-":4}},{"path":"src/main/java/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willyamped"},"content":"public class EmptyDescriptionException extends RuntimeException {","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"willyamped"},"content":"    EmptyDescriptionException(String message) {","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"willyamped"},"content":"        super(message);","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"willyamped"},"content":"     * Returns the string representation of EmptyDescriptionException","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"willyamped"},"content":"     * @return The string representation of EmptyDescriptionException","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"willyamped"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"willyamped"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"willyamped"},"content":"        return \"EmptyDescriptionException: \" + getMessage();","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"willyamped"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"willyamped":15}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willyamped"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"willyamped"},"content":"    protected String by;","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"willyamped"},"content":"     * A constructor to create an Event object","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"willyamped"},"content":"     * @param description The description of an Event object","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"willyamped"},"content":"     * @param by The deadline of an Event object","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"willyamped"},"content":"    public Event(String description, String by) {","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"willyamped"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"willyamped"},"content":"        this.by \u003d by.equals(\"\") ? \"at: \" : by;","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"willyamped"},"content":"     * A method to get the string representation of a Event object","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"willyamped"},"content":"     * @return The string representation of a Event object","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"willyamped"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"willyamped"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"willyamped"},"content":"        return \"[E]\" + super.toString() + \"(\" + by + \")\";","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"willyamped"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"willyamped":24}},{"path":"src/main/java/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willyamped"},"content":"public class InvalidCommandException extends RuntimeException {","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"willyamped"},"content":"    InvalidCommandException(String message) {","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"willyamped"},"content":"        super(message);","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"willyamped"},"content":"     * Returns the string representation of InvalidCommandException","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"willyamped"},"content":"     * @return The string representation of InvalidCommandException","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"willyamped"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"willyamped"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"willyamped"},"content":"        return \"InvalidCommandException: \" + getMessage();","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"willyamped"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"willyamped":15}},{"path":"src/main/java/InvalidValueException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willyamped"},"content":"public class InvalidValueException extends RuntimeException {","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"willyamped"},"content":"    InvalidValueException(String message) {","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"willyamped"},"content":"        super(message);","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"willyamped"},"content":"     * Returns the string representation of InvalidValueException","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"willyamped"},"content":"     * @return The string representation of InvalidValueException","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"willyamped"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"willyamped"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"willyamped"},"content":"        return \"InvalidValueException: \" + getMessage();","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"willyamped"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"willyamped":15}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willyamped"},"content":"public class Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"willyamped"},"content":"    protected String description;","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"willyamped"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"willyamped"},"content":"     * A constructor to create a Task object","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"willyamped"},"content":"     * @param description A description about the task","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"willyamped"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"willyamped"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"willyamped"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"willyamped"},"content":"     * A method to get either \"X\" for marked task or \" \" for unmarked task","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"willyamped"},"content":"     * @return Either \"X\" or \" \"","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"willyamped"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"willyamped"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"willyamped"},"content":"     * A method to set isDone to true","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"willyamped"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"willyamped"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"willyamped"},"content":"     * A method to get the string representation of a task description","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"willyamped"},"content":"     * @return The string representation of a task description","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"willyamped"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"willyamped"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"willyamped"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"willyamped"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"willyamped":40}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willyamped"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"willyamped"},"content":"    protected String by;","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"willyamped"},"content":"     * A constructor to create a Todo object","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"willyamped"},"content":"     * @param description A description about the Todo object","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"willyamped"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"willyamped"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"willyamped"},"content":"     * A method to get the string representation of a Todo object","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"willyamped"},"content":"     * @return The string representation of a Todo object","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"willyamped"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"willyamped"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"willyamped"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"willyamped"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"willyamped":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"willyamped"},"content":"todo stretch everyday","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"willyamped"},"content":"deadline math homework /by Sunday","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"willyamped"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"willyamped"},"content":"done 1","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"willyamped"},"content":"done 2","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"willyamped"},"content":"bye","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"willyamped":6}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"willyamped"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"willyamped":1,"-":33}}]
