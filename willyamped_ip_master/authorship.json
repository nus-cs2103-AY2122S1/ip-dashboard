[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"willyamped"},"content":"1.E|Done a (a: a)","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"willyamped"},"content":"2.D|Done a (by: a)","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"willyamped"},"content":"3.D|NotDone a (by: )","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"willyamped"},"content":"4.E|NotDone ball (at: )","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"willyamped"},"content":"5.T|NotDone swimming ","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"willyamped"},"content":"6.T|NotDone swimmingpoool ","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"willyamped"},"content":"7.E|Done a (at: )","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"willyamped":7}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willyamped"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"willyamped"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"willyamped"},"content":" * Represents a task that has a description and deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"willyamped"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"willyamped"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"willyamped"},"content":"    protected String by;","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"willyamped"},"content":"     * A constructor to create a Deadline object.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"willyamped"},"content":"     * @param description The description of the Deadline object.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"willyamped"},"content":"     * @param by The deadline of the Deadline object.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"willyamped"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"willyamped"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"willyamped"},"content":"        this.by \u003d by.equals(\"\") ? \"by: \" : by;","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"willyamped"},"content":"        super.deadline \u003d this.by;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"willyamped"},"content":"     * Returns the string representation of a Deadline object.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"willyamped"},"content":"     * @return The string representation of a Deadline object.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"willyamped"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"willyamped"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"willyamped"},"content":"        return \"[D]\" + super.toString() + \"(\" + by + \")\";","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"willyamped"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"willyamped":30}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willyamped"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"willyamped"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"willyamped"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"willyamped"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"willyamped"},"content":" * Represents a chat bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"willyamped"},"content":" *","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"willyamped"},"content":" * @author Willy Angga Prawira.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"willyamped"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"willyamped"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"willyamped"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"willyamped"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"willyamped"},"content":"     * A constructor to create a Duke object.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"willyamped"},"content":"     * @param filepath Location of the file that keeps track of the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"willyamped"},"content":"    Duke(String filepath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"willyamped"},"content":"        taskList \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"willyamped"},"content":"        storage \u003d new Storage(filepath);","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"willyamped"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"willyamped"},"content":"     * Runs the whole program.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"willyamped"},"content":"    public void run() {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"willyamped"},"content":"        Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"willyamped"},"content":"        storage.readFile(taskList);","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"willyamped"},"content":"        ui.printWelcome();","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"willyamped"},"content":"        new Parser(scan, storage, taskList, ui).parse();","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"willyamped"},"content":"        ui.printBye();","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"willyamped"},"content":"     * Calls the run() method.","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"willyamped"},"content":"     * @param args An array of Strings.","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"willyamped"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"willyamped"},"content":"        Duke duke \u003d new Duke(\"./data/duke.txt\");","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"willyamped"},"content":"        duke.run();","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"willyamped":45,"-":3}},{"path":"src/main/java/duke/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willyamped"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"willyamped"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"willyamped"},"content":" * Represents an error when the description is empty.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"willyamped"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"willyamped"},"content":"public class EmptyDescriptionException extends RuntimeException {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"willyamped"},"content":"    EmptyDescriptionException(String message) {","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"willyamped"},"content":"        super(message);","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"willyamped"},"content":"     * Returns the string representation of EmptyDescriptionException.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"willyamped"},"content":"     * @return The string representation of EmptyDescriptionException.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"willyamped"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"willyamped"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"willyamped"},"content":"        return \"EmptyDescriptionException: \" + getMessage();","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"willyamped"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"willyamped":20}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willyamped"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"willyamped"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"willyamped"},"content":" * Represents a task that has a description and time.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"willyamped"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"willyamped"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"willyamped"},"content":"    protected String by;","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"willyamped"},"content":"     * A constructor to create an Event object.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"willyamped"},"content":"     * @param description The description of an Event object.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"willyamped"},"content":"     * @param by The deadline of an Event object.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"willyamped"},"content":"    public Event(String description, String by) {","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"willyamped"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"willyamped"},"content":"        this.by \u003d by.equals(\"\") ? \"at: \" : by;","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"willyamped"},"content":"        super.deadline \u003d this.by;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"willyamped"},"content":"     * Returns the string representation of a Event object.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"willyamped"},"content":"     * @return The string representation of a Event object.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"willyamped"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"willyamped"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"willyamped"},"content":"        return \"[E]\" + super.toString() + \"(\" + by + \")\";","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"willyamped"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"willyamped":30}},{"path":"src/main/java/duke/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willyamped"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"willyamped"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"willyamped"},"content":" * Represents an error when the command is invalid.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"willyamped"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"willyamped"},"content":"public class InvalidCommandException extends RuntimeException {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"willyamped"},"content":"    InvalidCommandException(String message) {","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"willyamped"},"content":"        super(message);","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"willyamped"},"content":"     * Returns the string representation of InvalidCommandException.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"willyamped"},"content":"     * @return The string representation of InvalidCommandException.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"willyamped"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"willyamped"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"willyamped"},"content":"        return \"InvalidCommandException: \" + getMessage();","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"willyamped"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"willyamped":20}},{"path":"src/main/java/duke/InvalidValueException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willyamped"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"willyamped"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"willyamped"},"content":" * Represents an error when the value is invalid.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"willyamped"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"willyamped"},"content":"public class InvalidValueException extends RuntimeException {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"willyamped"},"content":"    InvalidValueException(String message) {","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"willyamped"},"content":"        super(message);","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"willyamped"},"content":"     * Returns the string representation of InvalidValueException.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"willyamped"},"content":"     * @return The string representation of InvalidValueException.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"willyamped"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"willyamped"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"willyamped"},"content":"        return \"InvalidValueException: \" + getMessage();","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"willyamped"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"willyamped":20}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willyamped"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"willyamped"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"willyamped"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"willyamped"},"content":"import static java.lang.Integer.parseInt;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"willyamped"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"willyamped"},"content":" * Represents the main logic of the code when the user enters an input.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"willyamped"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"willyamped"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"willyamped"},"content":"    private Scanner scan;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"willyamped"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"willyamped"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"willyamped"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"willyamped"},"content":"    private String arr[];","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"willyamped"},"content":"    private String input \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"willyamped"},"content":"     * A constructor to create a parser object.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"willyamped"},"content":"     * @param scan A scanner that takes in the input from the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"willyamped"},"content":"     * @param storage A storage that deals with loading and saving files.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"willyamped"},"content":"     * @param taskList A list that keeps track of all tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"willyamped"},"content":"     * @param ui An object that perform tasks related to interactions with user.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"willyamped"},"content":"    Parser(Scanner scan, Storage storage, TaskList taskList, Ui ui) {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"willyamped"},"content":"        this.scan \u003d scan;","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"willyamped"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"willyamped"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"willyamped"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"willyamped"},"content":"     * Checks if a string is an integer or not.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"willyamped"},"content":"     * @param s A string from the user input.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"willyamped"},"content":"     * @return True if it is an integer, false otherwise.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"willyamped"},"content":"    public static boolean isNumeric(String s) {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"willyamped"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"willyamped"},"content":"            Integer.parseInt(s);","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"willyamped"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"willyamped"},"content":"            return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"willyamped"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"willyamped"},"content":"        return true;","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"willyamped"},"content":"     * Makes sense of the user input.","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"willyamped"},"content":"    public void parse() {","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"willyamped"},"content":"        do {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"willyamped"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"willyamped"},"content":"                input \u003d scan.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"willyamped"},"content":"                arr \u003d input.split(\" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"willyamped"},"content":"                if (input.equals(\"bye\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"willyamped"},"content":"                    break;","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"willyamped"},"content":"                } else if (arr[0].equals(\"done\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"willyamped"},"content":"                    parseDone(arr);","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"willyamped"},"content":"                } else if (arr[0].equals(\"delete\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"willyamped"},"content":"                    parseDelete(arr);","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"willyamped"},"content":"                } else if (arr[0].equals(\"todo\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"willyamped"},"content":"                    parseTodo(arr);","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"willyamped"},"content":"                } else if (arr[0].equals(\"deadline\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"willyamped"},"content":"                    parseDeadline(arr);","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"willyamped"},"content":"                } else if (arr[0].equals(\"event\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"willyamped"},"content":"                    parseEvent(arr);","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"willyamped"},"content":"                } else if (input.equals(\"list\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"willyamped"},"content":"                    parseList();","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"willyamped"},"content":"                } else if (arr[0].equals(\"find\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"willyamped"},"content":"                    parseFind(arr);","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"willyamped"},"content":"                } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"willyamped"},"content":"                    throw new InvalidCommandException(\"Command not Found\");","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"willyamped"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"willyamped"},"content":"                storage.saveFile(taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"willyamped"},"content":"            } catch (InvalidCommandException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"willyamped"},"content":"                System.out.println(e.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"willyamped"},"content":"            } catch (EmptyDescriptionException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"willyamped"},"content":"                System.out.println(e.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"willyamped"},"content":"            } catch (InvalidValueException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"willyamped"},"content":"                System.out.println(e.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"willyamped"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"willyamped"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"willyamped"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"willyamped"},"content":"        } while (!input.equals(\"bye\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"willyamped"},"content":"     * Deals with the user input when the user types \"done\".","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"willyamped"},"content":"     * @param arr Array of strings from the user input.","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"willyamped"},"content":"     * @throws InvalidCommandException If the following input is not valid.","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"willyamped"},"content":"    public void parseDone(String[] arr) throws InvalidCommandException {","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"willyamped"},"content":"        if (arr.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"willyamped"},"content":"            throw new InvalidCommandException(\"Please specify a number\");","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"willyamped"},"content":"        } else if (!isNumeric(arr[1])) {","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"willyamped"},"content":"            throw new InvalidCommandException(\"Please enter a number\");","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"willyamped"},"content":"        } else if (taskList.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"willyamped"},"content":"            throw new InvalidCommandException(\"You have not added any task!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"willyamped"},"content":"        } else if ((Integer.parseInt(arr[1]) \u003e taskList.getSize()","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"willyamped"},"content":"                || Integer.parseInt(arr[1]) \u003c\u003d 0)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"willyamped"},"content":"            throw new InvalidValueException(\"Enter a valid number!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"willyamped"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"willyamped"},"content":"            ui.printDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"willyamped"},"content":"            taskList.markAsDone(parseInt(arr[1]) - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"willyamped"},"content":"            ui.printCurrentTask(taskList, parseInt(arr[1]) - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"willyamped"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"willyamped"},"content":"     * Deals with the user input when the user types \"delete\".","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"willyamped"},"content":"     * @param arr Array of strings from the user input.","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"willyamped"},"content":"     * @throws InvalidCommandException If the following input is not valid.","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"willyamped"},"content":"     * @throws InvalidValueException If the following input is not a valid number.","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"willyamped"},"content":"    public void parseDelete(String[] arr) throws InvalidCommandException,","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"willyamped"},"content":"            InvalidValueException {","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"willyamped"},"content":"        if (arr.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"willyamped"},"content":"            throw new InvalidCommandException(\"Please specify a number\");","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"willyamped"},"content":"        } else if (!isNumeric(arr[1])) {","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"willyamped"},"content":"            throw new InvalidCommandException(\"Please enter a number\");","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"willyamped"},"content":"        } else if (taskList.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"willyamped"},"content":"            throw new InvalidCommandException(\"You have not added any task!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"willyamped"},"content":"        } else if ((Integer.parseInt(arr[1]) \u003e taskList.getSize()","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"willyamped"},"content":"                || Integer.parseInt(arr[1]) \u003c\u003d 0)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"willyamped"},"content":"            throw new InvalidValueException(\"Enter a valid number!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"willyamped"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"willyamped"},"content":"            ui.printRemove();","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"willyamped"},"content":"            ui.printCurrentTask(taskList, parseInt(arr[1]) - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"willyamped"},"content":"            taskList.removeTask(parseInt(arr[1]) - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"willyamped"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":136,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":137,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"willyamped"},"content":"     * Deals with the user input when the user types \"todo\".","lastModifiedDate":"2021-08-25"},{"lineNumber":139,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":140,"author":{"gitId":"willyamped"},"content":"     * @param arr Array of strings from the user input.","lastModifiedDate":"2021-08-25"},{"lineNumber":141,"author":{"gitId":"willyamped"},"content":"     * @throws EmptyDescriptionException If the next input is missing.","lastModifiedDate":"2021-08-25"},{"lineNumber":142,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":143,"author":{"gitId":"willyamped"},"content":"    public void parseTodo(String[] arr) throws EmptyDescriptionException {","lastModifiedDate":"2021-08-25"},{"lineNumber":144,"author":{"gitId":"willyamped"},"content":"        if (arr.length \u003c 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"willyamped"},"content":"            throw new EmptyDescriptionException(\"Missing description / date\");","lastModifiedDate":"2021-08-24"},{"lineNumber":146,"author":{"gitId":"willyamped"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":147,"author":{"gitId":"willyamped"},"content":"        taskList.addTask(new Todo(TaskList.getDescription(arr)));","lastModifiedDate":"2021-08-24"},{"lineNumber":148,"author":{"gitId":"willyamped"},"content":"        ui.printAddTask(taskList);","lastModifiedDate":"2021-08-24"},{"lineNumber":149,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":150,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":151,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":152,"author":{"gitId":"willyamped"},"content":"     * Deals with the user input when the user types \"deadline\".","lastModifiedDate":"2021-08-25"},{"lineNumber":153,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":154,"author":{"gitId":"willyamped"},"content":"     * @param arr Array of strings from the user input.","lastModifiedDate":"2021-08-25"},{"lineNumber":155,"author":{"gitId":"willyamped"},"content":"     * @throws EmptyDescriptionException If the next input is missing.","lastModifiedDate":"2021-08-25"},{"lineNumber":156,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":157,"author":{"gitId":"willyamped"},"content":"    public void parseDeadline(String[] arr) throws EmptyDescriptionException {","lastModifiedDate":"2021-08-25"},{"lineNumber":158,"author":{"gitId":"willyamped"},"content":"        if (arr.length \u003c 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":159,"author":{"gitId":"willyamped"},"content":"            throw new EmptyDescriptionException(\"Missing description / date\");","lastModifiedDate":"2021-08-24"},{"lineNumber":160,"author":{"gitId":"willyamped"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":161,"author":{"gitId":"willyamped"},"content":"        taskList.addTask(new Deadline(TaskList.getDescription(arr), TaskList.getDeadline(arr)));","lastModifiedDate":"2021-08-24"},{"lineNumber":162,"author":{"gitId":"willyamped"},"content":"        ui.printAddTask(taskList);","lastModifiedDate":"2021-08-24"},{"lineNumber":163,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":164,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":165,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":166,"author":{"gitId":"willyamped"},"content":"     * Deals with the user input when the user types \"event\".","lastModifiedDate":"2021-08-25"},{"lineNumber":167,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":168,"author":{"gitId":"willyamped"},"content":"     * @param arr Array of strings from the user input.","lastModifiedDate":"2021-08-25"},{"lineNumber":169,"author":{"gitId":"willyamped"},"content":"     * @throws EmptyDescriptionException If the next input is missing.","lastModifiedDate":"2021-08-25"},{"lineNumber":170,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":171,"author":{"gitId":"willyamped"},"content":"    public void parseEvent(String[] arr) throws EmptyDescriptionException {","lastModifiedDate":"2021-08-25"},{"lineNumber":172,"author":{"gitId":"willyamped"},"content":"        if (arr.length \u003c 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":173,"author":{"gitId":"willyamped"},"content":"            throw new EmptyDescriptionException(\"Missing description / date\");","lastModifiedDate":"2021-08-24"},{"lineNumber":174,"author":{"gitId":"willyamped"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":175,"author":{"gitId":"willyamped"},"content":"        taskList.addTask(new Event(TaskList.getDescription(arr), TaskList.getDeadline(arr)));","lastModifiedDate":"2021-08-24"},{"lineNumber":176,"author":{"gitId":"willyamped"},"content":"        ui.printAddTask(taskList);","lastModifiedDate":"2021-08-24"},{"lineNumber":177,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":178,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":179,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":180,"author":{"gitId":"willyamped"},"content":"     * Deals with the user input when the user types \"list\".","lastModifiedDate":"2021-08-25"},{"lineNumber":181,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":182,"author":{"gitId":"willyamped"},"content":"    public void parseList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":183,"author":{"gitId":"willyamped"},"content":"        ui.displayList(taskList);","lastModifiedDate":"2021-08-24"},{"lineNumber":184,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":185,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":186,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":187,"author":{"gitId":"willyamped"},"content":"     * Deals with the user input when the user types \"find\".","lastModifiedDate":"2021-08-25"},{"lineNumber":188,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":189,"author":{"gitId":"willyamped"},"content":"     * @param arr Array of strings from the user input.","lastModifiedDate":"2021-08-25"},{"lineNumber":190,"author":{"gitId":"willyamped"},"content":"     * @throws InvalidCommandException If the following input is not valid.","lastModifiedDate":"2021-08-25"},{"lineNumber":191,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":192,"author":{"gitId":"willyamped"},"content":"    public void parseFind(String[] arr) throws InvalidCommandException {","lastModifiedDate":"2021-08-25"},{"lineNumber":193,"author":{"gitId":"willyamped"},"content":"        if (arr.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":194,"author":{"gitId":"willyamped"},"content":"            throw new InvalidCommandException(\"Please specify a task you want to search\");","lastModifiedDate":"2021-08-24"},{"lineNumber":195,"author":{"gitId":"willyamped"},"content":"        } else if (taskList.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":196,"author":{"gitId":"willyamped"},"content":"            throw new InvalidCommandException(\"You have not added any task!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":197,"author":{"gitId":"willyamped"},"content":"        } else if (arr.length \u003e 2) {","lastModifiedDate":"2021-08-26"},{"lineNumber":198,"author":{"gitId":"willyamped"},"content":"            throw new InvalidCommandException(\"Please enter a single keyword!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":199,"author":{"gitId":"willyamped"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":200,"author":{"gitId":"willyamped"},"content":"            taskList.findTask(arr[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":201,"author":{"gitId":"willyamped"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":202,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":203,"author":{"gitId":"willyamped"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"willyamped":203}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willyamped"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"willyamped"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"willyamped"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"willyamped"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"willyamped"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"willyamped"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"willyamped"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"willyamped"},"content":" * Represents the file used to load and save data.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"willyamped"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"willyamped"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"willyamped"},"content":"    private String filepath;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"willyamped"},"content":"     * A constructor to create a Storage object.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"willyamped"},"content":"     * @param filepath The location of the file to load from and save to.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"willyamped"},"content":"    Storage(String filepath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"willyamped"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"willyamped"},"content":"     * Reads the list of tasks from a file.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"willyamped"},"content":"     * @param ls A list to keep track of all tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"willyamped"},"content":"    public void readFile(TaskList ls) {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"willyamped"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"willyamped"},"content":"            String arr[];","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"willyamped"},"content":"            File myObj \u003d new File(this.filepath);","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"willyamped"},"content":"            Scanner myScanner \u003d new Scanner(myObj);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"willyamped"},"content":"            while (myScanner.hasNextLine()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"willyamped"},"content":"                String data \u003d myScanner.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"willyamped"},"content":"                arr \u003d data.split(\" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"willyamped"},"content":"                String task \u003d arr[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"willyamped"},"content":"                String description \u003d arr[1] + \" \";","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"willyamped"},"content":"                if (task.charAt(2) \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"willyamped"},"content":"                    String deadline \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"willyamped"},"content":"                    for (int i \u003d 2; i \u003c arr.length; i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"willyamped"},"content":"                        if (i \u003d\u003d 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"willyamped"},"content":"                            deadline +\u003d arr[i].substring(1);","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"willyamped"},"content":"                        } else if (i \u003d\u003d arr.length - 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"willyamped"},"content":"                            deadline +\u003d \" \" + arr[i].substring(0, arr[i].length() - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"willyamped"},"content":"                        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"willyamped"},"content":"                            deadline +\u003d \" \" + arr[i];","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"willyamped"},"content":"                        }","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"willyamped"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"willyamped"},"content":"                    Deadline item \u003d new Deadline(description, deadline);","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"willyamped"},"content":"                    ls.addTask(item);","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"willyamped"},"content":"                    if (task.substring(4).equals(\"Done\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"willyamped"},"content":"                        ls.markAsDone(ls.getSize()-1);","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"willyamped"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"willyamped"},"content":"                } else if (task.charAt(2) \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"willyamped"},"content":"                    String deadline \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"willyamped"},"content":"                    for (int i \u003d 2; i \u003c arr.length; i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"willyamped"},"content":"                        if (i \u003d\u003d 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"willyamped"},"content":"                            deadline +\u003d arr[i].substring(1);","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"willyamped"},"content":"                        } else if (i \u003d\u003d arr.length - 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"willyamped"},"content":"                            deadline +\u003d \" \" + arr[i].substring(0, arr[i].length() - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"willyamped"},"content":"                        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"willyamped"},"content":"                            deadline +\u003d \" \" + arr[i];","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"willyamped"},"content":"                        }","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"willyamped"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"willyamped"},"content":"                    Event item \u003d new Event(description, deadline);","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"willyamped"},"content":"                    ls.addTask(item);","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"willyamped"},"content":"                    if (task.substring(4).equals(\"Done\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"willyamped"},"content":"                        ls.markAsDone(ls.getSize() - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"willyamped"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"willyamped"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"willyamped"},"content":"                else {","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"willyamped"},"content":"                    Todo item \u003d new Todo(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"willyamped"},"content":"                    ls.addTask(item);","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"willyamped"},"content":"                    if (task.substring(4).equals(\"Done\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"willyamped"},"content":"                        ls.markAsDone(ls.getSize() - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"willyamped"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"willyamped"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"willyamped"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"willyamped"},"content":"            myScanner.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"willyamped"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"willyamped"},"content":"            System.out.println(\"Read File Error.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"willyamped"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"willyamped"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"willyamped"},"content":"     * Writes to a file.","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"willyamped"},"content":"     * @param ls A list to keep track of all files.","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"willyamped"},"content":"    public static void saveFile(TaskList ls) {","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"willyamped"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"willyamped"},"content":"            String str \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"willyamped"},"content":"            for (int i \u003d 0; i \u003c ls.getSize(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"willyamped"},"content":"                str +\u003d (i + 1) + \".\"","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"willyamped"},"content":"                        + ls.getTask(i).toString().charAt(1)","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"willyamped"},"content":"                        + \"|\" + ls.getTask(i).getStatus() + \" \" + ls.getTask(i).getDescription();","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"willyamped"},"content":"                if (ls.getTask(i) instanceof Deadline || ls.getTask(i) instanceof Event) {","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"willyamped"},"content":"                    str +\u003d \"(\" + ls.getTask(i).getDeadline() + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"willyamped"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"willyamped"},"content":"                if (i !\u003d ls.getSize() - 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"willyamped"},"content":"                    str +\u003d \"\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"willyamped"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"willyamped"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"willyamped"},"content":"            FileWriter fileWriter \u003d new FileWriter(\"data/duke.txt\");","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"willyamped"},"content":"            fileWriter.write(str);","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"willyamped"},"content":"            fileWriter.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"willyamped"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"willyamped"},"content":"            System.out.println(\"Save File Error.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"willyamped"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"willyamped"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"willyamped"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"willyamped":117}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willyamped"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"willyamped"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"willyamped"},"content":" * Represents a task when the user creates a new task.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"willyamped"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"willyamped"},"content":"public class Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"willyamped"},"content":"    protected String description;","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"willyamped"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"willyamped"},"content":"    protected String deadline \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"willyamped"},"content":"     * A constructor to create a Task object.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"willyamped"},"content":"     * @param description A description about the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"willyamped"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"willyamped"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"willyamped"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"willyamped"},"content":"     * Returns either \"X\" for marked tasks or \" \" for unmarked tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"willyamped"},"content":"     * @return Either \"X\" or \" \".","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"willyamped"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"willyamped"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"willyamped"},"content":"     * Returns \"Done\" for marked tasks and \"NotDone\" for unmarked tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"willyamped"},"content":"     * @return The status of a task.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"willyamped"},"content":"    public String getStatus() {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"willyamped"},"content":"        return isDone ? \"Done\" : \"NotDone\";","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"willyamped"},"content":"     * Returns the description of a task.","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"willyamped"},"content":"     * @return The description of a task.","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"willyamped"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"willyamped"},"content":"        return this.description;","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"willyamped"},"content":"     * Returns the deadline of a task.","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"willyamped"},"content":"     * @return The deadline of a task.","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"willyamped"},"content":"    public String getDeadline() {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"willyamped"},"content":"        return this.deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":58,"author":{"gitId":"willyamped"},"content":"     * Sets isDone to true.","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":60,"author":{"gitId":"willyamped"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":61,"author":{"gitId":"willyamped"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":62,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":63,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":64,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":65,"author":{"gitId":"willyamped"},"content":"     * Returns the string representation of a task description.","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":67,"author":{"gitId":"willyamped"},"content":"     * @return The string representation of a task description.","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":69,"author":{"gitId":"willyamped"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":70,"author":{"gitId":"willyamped"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":71,"author":{"gitId":"willyamped"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2021-08-16"},{"lineNumber":72,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":73,"author":{"gitId":"willyamped"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"willyamped":73}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willyamped"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"willyamped"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"willyamped"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"willyamped"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"willyamped"},"content":"import java.time.format.TextStyle;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"willyamped"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"willyamped"},"content":"import java.util.List;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"willyamped"},"content":"import java.util.Locale;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"willyamped"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"willyamped"},"content":" * Represents a list of tasks with its operations.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"willyamped"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"willyamped"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"willyamped"},"content":"    private ArrayList\u003cTask\u003e ls;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"willyamped"},"content":"    private ArrayList\u003cTask\u003e searchList;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"willyamped"},"content":"    TaskList(ArrayList\u003cTask\u003e ls) {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"willyamped"},"content":"        this.ls \u003d ls;","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"willyamped"},"content":"     * Returns the description from a task entered by the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"willyamped"},"content":"     * @param arr The array that contains strings from the user input.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"willyamped"},"content":"     * @return A string containing the description only.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"willyamped"},"content":"    public static String getDescription(String[] arr) {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"willyamped"},"content":"        String str \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"willyamped"},"content":"        for(int i \u003d 1; i \u003c arr.length; i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"willyamped"},"content":"            if (!(arr[i].charAt(0) \u003d\u003d \u0027/\u0027)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"willyamped"},"content":"                str +\u003d arr[i] + \" \";","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"willyamped"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"willyamped"},"content":"            else {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"willyamped"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"willyamped"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"willyamped"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"willyamped"},"content":"        return str;","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"willyamped"},"content":"     * Returns the deadline from a task entered by the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"willyamped"},"content":"     * @param arr The array that contains strings from the user input.","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"willyamped"},"content":"     * @return A string containing the deadline only.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"willyamped"},"content":"    public static String getDeadline(String[] arr) throws DateTimeParseException {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"willyamped"},"content":"        String str \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"willyamped"},"content":"        boolean bool \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"willyamped"},"content":"        for(int i \u003d 1; i \u003c arr.length; i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"willyamped"},"content":"            if (!bool) {","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"willyamped"},"content":"                if (arr[i].charAt(0) \u003d\u003d \u0027/\u0027) {","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"willyamped"},"content":"                    bool \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"willyamped"},"content":"                    str +\u003d arr[i].substring(1) + \": \";","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"willyamped"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"willyamped"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"willyamped"},"content":"                if (arr[i].length() \u003d\u003d 10 \u0026\u0026 arr[i].charAt(4) \u003d\u003d \u0027-\u0027 \u0026\u0026 arr[i].charAt(7) \u003d\u003d \u0027-\u0027) {","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"willyamped"},"content":"                    LocalDate ld \u003d LocalDate.parse(arr[i]);","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"willyamped"},"content":"                    str +\u003d ld.getDayOfMonth() + \" \"","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"willyamped"},"content":"                            + ld.getMonth().getDisplayName(TextStyle.SHORT, Locale.ENGLISH) + \" \"","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"willyamped"},"content":"                            + ld.getYear();","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"willyamped"},"content":"                    if (i !\u003d arr.length - 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"willyamped"},"content":"                        str +\u003d \" \";","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"willyamped"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"willyamped"},"content":"                } else if (arr[i].length() \u003d\u003d 5 \u0026\u0026 arr[i].charAt(2) \u003d\u003d \u0027:\u0027) {","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"willyamped"},"content":"                    LocalTime lt \u003d LocalTime.parse(arr[i]);","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"willyamped"},"content":"                    int hour \u003d lt.getHour();","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"willyamped"},"content":"                    String hourSuffix \u003d hour \u003c 12 ? \"AM\" : \"PM\";","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"willyamped"},"content":"                    if (hour \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"willyamped"},"content":"                        hour \u003d 12;","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"willyamped"},"content":"                    } else if (hour \u003e 12) {","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"willyamped"},"content":"                        hour -\u003d 12;","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"willyamped"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"willyamped"},"content":"                    int minute \u003d lt.getMinute();","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"willyamped"},"content":"                    String minutePrefix \u003d minute \u003c 10 ? \"0\" : \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"willyamped"},"content":"                    str +\u003d hour + \":\" + minutePrefix + minute + \" \" + hourSuffix;","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"willyamped"},"content":"                    if (i !\u003d arr.length - 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"willyamped"},"content":"                        str +\u003d \" \";","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"willyamped"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"willyamped"},"content":"                } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"willyamped"},"content":"                    str +\u003d arr[i];","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"willyamped"},"content":"                    if (i !\u003d arr.length - 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"willyamped"},"content":"                        str +\u003d \" \";","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"willyamped"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"willyamped"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"willyamped"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"willyamped"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"willyamped"},"content":"        return str;","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"willyamped"},"content":"     * Adds a task to the collection of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"willyamped"},"content":"     * @param task The task to be added.","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"willyamped"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"willyamped"},"content":"        ls.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"willyamped"},"content":"     * Removes a task at a certain index in the collection.","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"willyamped"},"content":"     * @param index Index of the task to be removed.","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"willyamped"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"willyamped"},"content":"        ls.remove(index);","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"willyamped"},"content":"     * Sets isBoolean to true.","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"willyamped"},"content":"     * @param index Index of the task to be marked as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"willyamped"},"content":"    public void markAsDone(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"willyamped"},"content":"        ls.get(index).markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"willyamped"},"content":"     * Returns a task a certain index in the location.","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"willyamped"},"content":"     * @param index Index of the task to be returned.","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"willyamped"},"content":"     * @return a Task at a certain index.","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"willyamped"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"willyamped"},"content":"        return ls.get(index);","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"willyamped"},"content":"     * Returns the size of the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"willyamped"},"content":"     * @return The size of the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":133,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"willyamped"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"willyamped"},"content":"        return ls.size();","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"willyamped"},"content":"     * Prints the list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":140,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"willyamped"},"content":"    public void displayList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"willyamped"},"content":"        if (ls.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"willyamped"},"content":"            System.out.println(\"You currently do not have any task!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"willyamped"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"willyamped"},"content":"            System.out.println(\"Here are the tasks in your list: \");","lastModifiedDate":"2021-08-24"},{"lineNumber":146,"author":{"gitId":"willyamped"},"content":"            for (int i \u003d 0; i \u003c ls.size(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":147,"author":{"gitId":"willyamped"},"content":"                System.out.println((i + 1) + \".\" + ls.get(i).toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":148,"author":{"gitId":"willyamped"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":149,"author":{"gitId":"willyamped"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":150,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":151,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":152,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":153,"author":{"gitId":"willyamped"},"content":"     * Prints the acknowledgement and the current number of tasks in the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":154,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":155,"author":{"gitId":"willyamped"},"content":"    public void printAddTask() {","lastModifiedDate":"2021-08-24"},{"lineNumber":156,"author":{"gitId":"willyamped"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2021-08-24"},{"lineNumber":157,"author":{"gitId":"willyamped"},"content":"        System.out.println(ls.get(ls.size() - 1).toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":158,"author":{"gitId":"willyamped"},"content":"        System.out.println(\"Now you have \" + ls.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":159,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":160,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":161,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":162,"author":{"gitId":"willyamped"},"content":"     * Allows the user to find a task in the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":163,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":164,"author":{"gitId":"willyamped"},"content":"     * @param search The search term.","lastModifiedDate":"2021-08-25"},{"lineNumber":165,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":166,"author":{"gitId":"willyamped"},"content":"    public void findTask(String search) {","lastModifiedDate":"2021-08-24"},{"lineNumber":167,"author":{"gitId":"willyamped"},"content":"        searchList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":168,"author":{"gitId":"willyamped"},"content":"        for (int i \u003d 0; i \u003c ls.size(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":169,"author":{"gitId":"willyamped"},"content":"            String[] arr \u003d ls.get(i).getDescription().split(\" \");","lastModifiedDate":"2021-08-26"},{"lineNumber":170,"author":{"gitId":"willyamped"},"content":"            for(int j \u003d 0; j \u003c arr.length; j++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":171,"author":{"gitId":"willyamped"},"content":"                if (arr[j].equals(search)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":172,"author":{"gitId":"willyamped"},"content":"                    searchList.add(ls.get(i));","lastModifiedDate":"2021-08-24"},{"lineNumber":173,"author":{"gitId":"willyamped"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":174,"author":{"gitId":"willyamped"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":175,"author":{"gitId":"willyamped"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":176,"author":{"gitId":"willyamped"},"content":"        if (searchList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":177,"author":{"gitId":"willyamped"},"content":"            System.out.println(\"No matching tasks!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":178,"author":{"gitId":"willyamped"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":179,"author":{"gitId":"willyamped"},"content":"            System.out.println(\"Here are the matching tasks in your list: \");","lastModifiedDate":"2021-08-24"},{"lineNumber":180,"author":{"gitId":"willyamped"},"content":"            for (int i \u003d 0; i \u003c searchList.size(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":181,"author":{"gitId":"willyamped"},"content":"                System.out.println((i + 1) + \".\" + searchList.get(i).toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":182,"author":{"gitId":"willyamped"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":183,"author":{"gitId":"willyamped"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":184,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":185,"author":{"gitId":"willyamped"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"willyamped":185}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willyamped"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"willyamped"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"willyamped"},"content":" * Represents a task that only has a description.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"willyamped"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"willyamped"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"willyamped"},"content":"    protected String by;","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"willyamped"},"content":"     * A constructor to create a Todo object.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"willyamped"},"content":"     * @param description A description about the Todo object.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"willyamped"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"willyamped"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"willyamped"},"content":"     * Returns the string representation of a Todo object.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"willyamped"},"content":"     * @return The string representation of a Todo object.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"willyamped"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"willyamped"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"willyamped"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"willyamped"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"willyamped":27}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willyamped"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"willyamped"},"content":"import static java.lang.Integer.parseInt;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"willyamped"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"willyamped"},"content":" * Represents a class that deals with interaction with the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"willyamped"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"willyamped"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"willyamped"},"content":"     * Prints the welcome message.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"willyamped"},"content":"    public void printWelcome() {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"willyamped"},"content":"        System.out.println(","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"willyamped"},"content":"                \"Hello! I\u0027m Amped :) \\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"willyamped"},"content":"                        + \"Type: \\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"willyamped"},"content":"                        + \"1. A task (todo/deadline/event) followed by description to add tasks \\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"willyamped"},"content":"                        + \"   e.g \\\"deadline submit homework /by Sunday 12 pm\\\" \\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"willyamped"},"content":"                        + \"2. \\\"list\\\" to see the list of tasks \\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"willyamped"},"content":"                        + \"3. \\\"find [keyword]\\\" to find a matching task \\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"willyamped"},"content":"                        + \"4. \\\"done [number]\\\" to mark a particular task as done \\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"willyamped"},"content":"                        + \"5. \\\"delete [number]\\\" to delete a particular task \\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"willyamped"},"content":"                        + \"6. \\\"bye\\\" to exit\"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"willyamped"},"content":"        );","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"willyamped"},"content":"     * Prints the goodbye message.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"willyamped"},"content":"    public void printBye() {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"willyamped"},"content":"        System.out.println(\"Good Bye. Have a nice day!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"willyamped"},"content":"     * Informs the user that a task has been marked as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"willyamped"},"content":"    public void printDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"willyamped"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done: \");","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"willyamped"},"content":"     * Informs the user that a task has been removed from the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"willyamped"},"content":"    public void printRemove() {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"willyamped"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task: \");","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"willyamped"},"content":"     * Informs the user that a task has been added.","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"willyamped"},"content":"     * @param ls The list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"willyamped"},"content":"    public void printAddTask(TaskList ls) {","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"willyamped"},"content":"        ls.printAddTask();","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"willyamped"},"content":"     * Displays the list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"willyamped"},"content":"     * @param ls The list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"willyamped"},"content":"    public void displayList(TaskList ls) {","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"willyamped"},"content":"        ls.displayList();","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"willyamped"},"content":"     * Prints a task at a certain index in the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"willyamped"},"content":"     * @param ls The list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"willyamped"},"content":"     * @param index The index of the tasks in the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"willyamped"},"content":"    public void printCurrentTask(TaskList ls, int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"willyamped"},"content":"        System.out.println(ls.getTask(index).toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"willyamped"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"willyamped":72}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willyamped"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"willyamped"},"content":"import org.junit.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"willyamped"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"willyamped"},"content":"import static org.junit.Assert.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"willyamped"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"willyamped"},"content":"    String s \u003d \"event swimming /on Monday 2pm\";","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"willyamped"},"content":"    String[] arr \u003d s.split(\" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"willyamped"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"willyamped"},"content":"    public void testGetDescription() {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"willyamped"},"content":"        assertEquals(\"swimming \",TaskList.getDescription(arr));","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"willyamped"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"willyamped"},"content":"    public void testGetDeadline() {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"willyamped"},"content":"        assertEquals(\"on: Monday 2pm\", TaskList.getDeadline(arr));","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"willyamped"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"willyamped"},"content":"    public void testGetSize() {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"willyamped"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"willyamped"},"content":"        assertEquals(0, taskList.getSize());","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"willyamped"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"willyamped":30}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"willyamped"},"content":"todo stretch everyday","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"willyamped"},"content":"deadline math homework /by Sunday","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"willyamped"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"willyamped"},"content":"done 1","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"willyamped"},"content":"done 2","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"willyamped"},"content":"bye","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"willyamped":6}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"willyamped"},"content":"if ! javac -cp ../src/main/java/duke -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"willyamped"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"willyamped":2,"-":32}}]
