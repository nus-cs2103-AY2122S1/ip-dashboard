[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"willyamped"},"content":"    String javaFxVersion \u003d \u002714\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"willyamped"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"willyamped"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"willyamped"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"willyamped"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"willyamped"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"willyamped"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"willyamped"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"willyamped"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"willyamped"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"willyamped"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"willyamped"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"willyamped"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"willyamped"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"willyamped"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"willyamped":15,"-":45}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"willyamped"},"content":"1.T|NotDone math homework ","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"willyamped":1}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"willyamped"},"content":"1. Ensure you have Java 11 or above installed in your Computer.","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"willyamped"},"content":"2. Download the latest release from [here](https://github.com/willyamped/ip/releases/tag/A-Release).","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"willyamped"},"content":"3. Copy the file to the folder you want to use as the home folder for your Duke.","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"willyamped"},"content":"4. Double-click the .jar file to start the app. The GUI should look similar to the screenshot below.\u003cbr\u003e![Screenshot](Ui.png)","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"willyamped"},"content":"5. Type in a command in the command box and press Enter to execute it. \u003cbr\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"willyamped"},"content":"### Adding a task : `todo/deadline/event`","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":13,"author":{"gitId":"willyamped"},"content":"Adds a task to the list. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"willyamped"},"content":"A todo is a task with a description and needs to be done before a specific deadline. \u003cbr\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"willyamped"},"content":"A deadline is a task with a description and starts at a specific deadline. \u003cbr\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"willyamped"},"content":"Format: [task] [description] /[deadline]","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"willyamped"},"content":"### Viewing all tasks: `list`","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"willyamped"},"content":"Views all tasks in the list.","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"willyamped"},"content":"Format: list","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"willyamped"},"content":"### Finding a task based on a keyword that exactly matches a description: `find`","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"willyamped"},"content":"Finds a task based on a search term.","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"willyamped"},"content":"Format: find [keyword]","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"willyamped"},"content":"### Finding a task based on a keyword that partially/ exactly matches a description: `search`","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"willyamped"},"content":"Finds a task based on a keyword that partially/exactly matches a task.","lastModifiedDate":"2021-09-13"},{"lineNumber":39,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":40,"author":{"gitId":"willyamped"},"content":"Format: search [keyword]","lastModifiedDate":"2021-09-13"},{"lineNumber":41,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":42,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":43,"author":{"gitId":"willyamped"},"content":"### Marking a task as done: `done`","lastModifiedDate":"2021-09-13"},{"lineNumber":44,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":45,"author":{"gitId":"willyamped"},"content":"Marks a task as done as shown by the symbol \u0027X\u0027.","lastModifiedDate":"2021-09-13"},{"lineNumber":46,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":47,"author":{"gitId":"willyamped"},"content":"Format: done [number]","lastModifiedDate":"2021-09-13"},{"lineNumber":48,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":49,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":50,"author":{"gitId":"willyamped"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2021-09-13"},{"lineNumber":51,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":52,"author":{"gitId":"willyamped"},"content":"Deletes a particular task in the list.","lastModifiedDate":"2021-09-13"},{"lineNumber":53,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":54,"author":{"gitId":"willyamped"},"content":"Format: done [number]","lastModifiedDate":"2021-09-13"},{"lineNumber":55,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":56,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":57,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":58,"author":{"gitId":"willyamped"},"content":"### Exiting the program: `bye`","lastModifiedDate":"2021-09-13"},{"lineNumber":59,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":60,"author":{"gitId":"willyamped"},"content":"Exits the whole program.","lastModifiedDate":"2021-09-13"},{"lineNumber":61,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":62,"author":{"gitId":"willyamped"},"content":"Format: bye","lastModifiedDate":"2021-09-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":66,"author":{"gitId":"willyamped"},"content":"`todo`","lastModifiedDate":"2021-09-13"},{"lineNumber":67,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":68,"author":{"gitId":"willyamped"},"content":"Creates a todo task.","lastModifiedDate":"2021-09-13"},{"lineNumber":69,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":70,"author":{"gitId":"willyamped"},"content":"Example:","lastModifiedDate":"2021-09-13"},{"lineNumber":71,"author":{"gitId":"willyamped"},"content":"- todo math homework","lastModifiedDate":"2021-09-13"},{"lineNumber":72,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":73,"author":{"gitId":"willyamped"},"content":"Expected outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":74,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":75,"author":{"gitId":"willyamped"},"content":"Returns an acknowledgement message and outputs the number of tasks in the list.","lastModifiedDate":"2021-09-13"},{"lineNumber":76,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":77,"author":{"gitId":"willyamped"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":78,"author":{"gitId":"willyamped"},"content":"Duke says: Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-13"},{"lineNumber":79,"author":{"gitId":"willyamped"},"content":"[T][] math homework","lastModifiedDate":"2021-09-13"},{"lineNumber":80,"author":{"gitId":"willyamped"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2021-09-13"},{"lineNumber":81,"author":{"gitId":"willyamped"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":82,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":83,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":84,"author":{"gitId":"willyamped"},"content":"`deadline`","lastModifiedDate":"2021-09-13"},{"lineNumber":85,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":86,"author":{"gitId":"willyamped"},"content":"Creates a deadline task.","lastModifiedDate":"2021-09-13"},{"lineNumber":87,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":88,"author":{"gitId":"willyamped"},"content":"Example:","lastModifiedDate":"2021-09-13"},{"lineNumber":89,"author":{"gitId":"willyamped"},"content":"- deadline math homework /by Sunday","lastModifiedDate":"2021-09-13"},{"lineNumber":90,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":91,"author":{"gitId":"willyamped"},"content":"Expected outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":92,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":93,"author":{"gitId":"willyamped"},"content":"Returns an acknowledgement message and outputs the number of tasks in the list.","lastModifiedDate":"2021-09-13"},{"lineNumber":94,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":95,"author":{"gitId":"willyamped"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":96,"author":{"gitId":"willyamped"},"content":"Duke says: Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-13"},{"lineNumber":97,"author":{"gitId":"willyamped"},"content":"[D][] math homework (by: Sunday)","lastModifiedDate":"2021-09-13"},{"lineNumber":98,"author":{"gitId":"willyamped"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2021-09-13"},{"lineNumber":99,"author":{"gitId":"willyamped"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":100,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":101,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":102,"author":{"gitId":"willyamped"},"content":"`event`","lastModifiedDate":"2021-09-13"},{"lineNumber":103,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":104,"author":{"gitId":"willyamped"},"content":"Creates an event task.","lastModifiedDate":"2021-09-13"},{"lineNumber":105,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":106,"author":{"gitId":"willyamped"},"content":"Example:","lastModifiedDate":"2021-09-13"},{"lineNumber":107,"author":{"gitId":"willyamped"},"content":"- event formal dinner /on Monday","lastModifiedDate":"2021-09-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":109,"author":{"gitId":"willyamped"},"content":"Expected outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":110,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":111,"author":{"gitId":"willyamped"},"content":"Returns an acknowledgement message and outputs the number of tasks in the list.","lastModifiedDate":"2021-09-13"},{"lineNumber":112,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":113,"author":{"gitId":"willyamped"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":114,"author":{"gitId":"willyamped"},"content":"Duke says: Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-13"},{"lineNumber":115,"author":{"gitId":"willyamped"},"content":"[E][] formal dinner (on: Monday)","lastModifiedDate":"2021-09-13"},{"lineNumber":116,"author":{"gitId":"willyamped"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2021-09-13"},{"lineNumber":117,"author":{"gitId":"willyamped"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":118,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":119,"author":{"gitId":"willyamped"},"content":"`list`","lastModifiedDate":"2021-09-13"},{"lineNumber":120,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":121,"author":{"gitId":"willyamped"},"content":"Shows all tasks in the list","lastModifiedDate":"2021-09-13"},{"lineNumber":122,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":123,"author":{"gitId":"willyamped"},"content":"Example:","lastModifiedDate":"2021-09-13"},{"lineNumber":124,"author":{"gitId":"willyamped"},"content":"- list","lastModifiedDate":"2021-09-13"},{"lineNumber":125,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":126,"author":{"gitId":"willyamped"},"content":"Expected outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":127,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":128,"author":{"gitId":"willyamped"},"content":"Outputs all tasks in the list.","lastModifiedDate":"2021-09-13"},{"lineNumber":129,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":130,"author":{"gitId":"willyamped"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":131,"author":{"gitId":"willyamped"},"content":"Duke says: Here are the tasks in your list:","lastModifiedDate":"2021-09-13"},{"lineNumber":132,"author":{"gitId":"willyamped"},"content":"1.[E][] formal dinner (on: Monday)","lastModifiedDate":"2021-09-13"},{"lineNumber":133,"author":{"gitId":"willyamped"},"content":"2.[T][] cs2100","lastModifiedDate":"2021-09-13"},{"lineNumber":134,"author":{"gitId":"willyamped"},"content":"3.[T][] math homework","lastModifiedDate":"2021-09-13"},{"lineNumber":135,"author":{"gitId":"willyamped"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":136,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":137,"author":{"gitId":"willyamped"},"content":"`find`","lastModifiedDate":"2021-09-13"},{"lineNumber":138,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":139,"author":{"gitId":"willyamped"},"content":"Finds a task based on a search term.","lastModifiedDate":"2021-09-13"},{"lineNumber":140,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":141,"author":{"gitId":"willyamped"},"content":"Example:","lastModifiedDate":"2021-09-13"},{"lineNumber":142,"author":{"gitId":"willyamped"},"content":"- find swimming","lastModifiedDate":"2021-09-13"},{"lineNumber":143,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":144,"author":{"gitId":"willyamped"},"content":"Expected outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":145,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":146,"author":{"gitId":"willyamped"},"content":"Returns tasks that match the keyword.","lastModifiedDate":"2021-09-13"},{"lineNumber":147,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":148,"author":{"gitId":"willyamped"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":149,"author":{"gitId":"willyamped"},"content":"Duke says: Here are the matching task(s) in your list:","lastModifiedDate":"2021-09-13"},{"lineNumber":150,"author":{"gitId":"willyamped"},"content":"1.[E][] swimming (on: Monday)","lastModifiedDate":"2021-09-13"},{"lineNumber":151,"author":{"gitId":"willyamped"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":152,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":153,"author":{"gitId":"willyamped"},"content":"`search`","lastModifiedDate":"2021-09-13"},{"lineNumber":154,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":155,"author":{"gitId":"willyamped"},"content":"Finds a task based on a keyword that partially/exactly matches a task.","lastModifiedDate":"2021-09-13"},{"lineNumber":156,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":157,"author":{"gitId":"willyamped"},"content":"Example:","lastModifiedDate":"2021-09-13"},{"lineNumber":158,"author":{"gitId":"willyamped"},"content":"- find swim","lastModifiedDate":"2021-09-13"},{"lineNumber":159,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":160,"author":{"gitId":"willyamped"},"content":"Expected outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":161,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":162,"author":{"gitId":"willyamped"},"content":"Returns tasks that contain the keyword in the description.","lastModifiedDate":"2021-09-13"},{"lineNumber":163,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":164,"author":{"gitId":"willyamped"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":165,"author":{"gitId":"willyamped"},"content":"Duke says: Here are the matching keyword(s) in your list:","lastModifiedDate":"2021-09-13"},{"lineNumber":166,"author":{"gitId":"willyamped"},"content":"1.[E][] swimming (on: Monday)","lastModifiedDate":"2021-09-13"},{"lineNumber":167,"author":{"gitId":"willyamped"},"content":"2.[E][] swim (on: Sunday)","lastModifiedDate":"2021-09-13"},{"lineNumber":168,"author":{"gitId":"willyamped"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":169,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":170,"author":{"gitId":"willyamped"},"content":"`done`","lastModifiedDate":"2021-09-13"},{"lineNumber":171,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":172,"author":{"gitId":"willyamped"},"content":"Marks a task as done as shown by the symbol \u0027X\u0027.","lastModifiedDate":"2021-09-13"},{"lineNumber":173,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":174,"author":{"gitId":"willyamped"},"content":"Example:","lastModifiedDate":"2021-09-13"},{"lineNumber":175,"author":{"gitId":"willyamped"},"content":"- done 2","lastModifiedDate":"2021-09-13"},{"lineNumber":176,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":177,"author":{"gitId":"willyamped"},"content":"Expected outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":178,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":179,"author":{"gitId":"willyamped"},"content":"Returns an acknowledgement message.","lastModifiedDate":"2021-09-13"},{"lineNumber":180,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":181,"author":{"gitId":"willyamped"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":182,"author":{"gitId":"willyamped"},"content":"Duke says: Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2021-09-13"},{"lineNumber":183,"author":{"gitId":"willyamped"},"content":"[E][X] swimming (on: Monday)","lastModifiedDate":"2021-09-13"},{"lineNumber":184,"author":{"gitId":"willyamped"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":185,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":186,"author":{"gitId":"willyamped"},"content":"`delete`","lastModifiedDate":"2021-09-13"},{"lineNumber":187,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":188,"author":{"gitId":"willyamped"},"content":"Deletes a particular task in the list.","lastModifiedDate":"2021-09-13"},{"lineNumber":189,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":190,"author":{"gitId":"willyamped"},"content":"Example:","lastModifiedDate":"2021-09-13"},{"lineNumber":191,"author":{"gitId":"willyamped"},"content":"- delete 1","lastModifiedDate":"2021-09-13"},{"lineNumber":192,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":193,"author":{"gitId":"willyamped"},"content":"Expected outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":194,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":195,"author":{"gitId":"willyamped"},"content":"Returns an acknowledgement message and outputs the number of tasks in the list.","lastModifiedDate":"2021-09-13"},{"lineNumber":196,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":197,"author":{"gitId":"willyamped"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":198,"author":{"gitId":"willyamped"},"content":"Duke says: Noted. I\u0027ve removed this task:","lastModifiedDate":"2021-09-13"},{"lineNumber":199,"author":{"gitId":"willyamped"},"content":"[E][X] swimming (on: Monday)","lastModifiedDate":"2021-09-13"},{"lineNumber":200,"author":{"gitId":"willyamped"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2021-09-13"},{"lineNumber":201,"author":{"gitId":"willyamped"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":203,"author":{"gitId":"willyamped"},"content":"`bye`","lastModifiedDate":"2021-09-13"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":205,"author":{"gitId":"willyamped"},"content":"Exits the program","lastModifiedDate":"2021-09-13"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":207,"author":{"gitId":"willyamped"},"content":"Example:","lastModifiedDate":"2021-09-13"},{"lineNumber":208,"author":{"gitId":"willyamped"},"content":"- bye","lastModifiedDate":"2021-09-13"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"Description of the outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":214,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":215,"author":{"gitId":"willyamped"},"content":"Duke says: Good Bye. Have a nice day!","lastModifiedDate":"2021-09-13"},{"lineNumber":216,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"willyamped":196,"-":20}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willyamped"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"willyamped"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"willyamped"},"content":" * Represents a task that has a description and deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"willyamped"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"willyamped"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"willyamped"},"content":"    protected String deadline;","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"willyamped"},"content":"     * A constructor to create a Deadline object.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"willyamped"},"content":"     * @param description The description of the Deadline object.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"willyamped"},"content":"     * @param deadline The deadline of the Deadline object.","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"willyamped"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"willyamped"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"willyamped"},"content":"        this.deadline \u003d deadline.equals(\"\") ? \"by: \" : deadline;","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"willyamped"},"content":"        super.deadline \u003d this.deadline;","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"willyamped"},"content":"     * Returns the string representation of a Deadline object.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"willyamped"},"content":"     * @return The string representation of a Deadline object.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"willyamped"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"willyamped"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"willyamped"},"content":"        return \"[D]\" + super.toString() + \"(\" + deadline + \")\";","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"willyamped"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"willyamped":30}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willyamped"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"willyamped"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"willyamped"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"willyamped"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"willyamped"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"willyamped"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"willyamped"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"willyamped"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"willyamped"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"willyamped"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"willyamped"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"willyamped"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"willyamped"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"willyamped"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"willyamped"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label.","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"willyamped"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"willyamped"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"willyamped"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"willyamped"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"willyamped"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"willyamped"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"willyamped"},"content":"     * Constructor for a DialogBox instance.","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"willyamped"},"content":"     * @param text The text to be displayed.","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"willyamped"},"content":"     * @param img The image to be displayed.","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"willyamped"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"willyamped"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"willyamped"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"willyamped"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"willyamped"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"willyamped"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"willyamped"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"willyamped"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"willyamped"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"willyamped"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"willyamped"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"willyamped"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"willyamped"},"content":"    private void flip() {","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"willyamped"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"willyamped"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"willyamped"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"willyamped"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"willyamped"},"content":"     * Produces a dialog box for the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"willyamped"},"content":"     * @param text Text to be displayed.","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"willyamped"},"content":"     * @param img Image to be displayed.","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"willyamped"},"content":"     * @return A dialog box with text and image.","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"willyamped"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"willyamped"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"willyamped"},"content":"     * Produces a dialog box for the bot.","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"willyamped"},"content":"     * @param text Text to be displayed.","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"willyamped"},"content":"     * @param img Image to be displayed.","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"willyamped"},"content":"     * @return A dialog box with text and image.","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"willyamped"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"willyamped"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-31"},{"lineNumber":77,"author":{"gitId":"willyamped"},"content":"        db.flip();","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"willyamped"},"content":"        return db;","lastModifiedDate":"2021-08-31"},{"lineNumber":79,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"willyamped"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"willyamped":80}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willyamped"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"willyamped"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"willyamped"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"willyamped"},"content":" * Represents a chat bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"willyamped"},"content":" *","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"willyamped"},"content":" * @author Willy Angga Prawira.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"willyamped"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"willyamped"},"content":"public class Duke {","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"willyamped"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"willyamped"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"willyamped"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"willyamped"},"content":"     * A constructor to create a Duke object.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"willyamped"},"content":"     * @param filepath Location of the file that keeps track of the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"willyamped"},"content":"    public Duke(String filepath) {","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"willyamped"},"content":"        taskList \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"willyamped"},"content":"        storage \u003d new Storage(filepath);","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"willyamped"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"willyamped"},"content":"     * A constructor to create a Duke object.","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"willyamped"},"content":"    public Duke() {","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"willyamped"},"content":"        taskList \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"willyamped"},"content":"        storage \u003d new Storage(\"./data/duke.txt\");","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"willyamped"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"willyamped"},"content":"        storage.readFile(taskList);","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"willyamped"},"content":"     * Receives an input from the user and outputs the appropriate response.","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"willyamped"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"willyamped"},"content":"        String parsed \u003d new Parser(taskList, ui).parse(input);","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"willyamped"},"content":"        storage.saveFile(taskList);","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"willyamped"},"content":"        return \"Duke says: \" + parsed;","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"willyamped":44,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willyamped"},"content":"package duke;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"willyamped"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"willyamped"},"content":"    DukeException(String message) {","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"willyamped"},"content":"        super(message);","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"willyamped"},"content":"     * Returns the string representation of DukeException.","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"willyamped"},"content":"     * @return The string representation of DukeException.","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"willyamped"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"willyamped"},"content":"    public String toString() {","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"willyamped"},"content":"        return \"DukeException: \" + getMessage();","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"willyamped"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"willyamped":17}},{"path":"src/main/java/duke/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willyamped"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"willyamped"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"willyamped"},"content":" * Represents an error when the description is empty.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"willyamped"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"willyamped"},"content":"public class EmptyDescriptionException extends DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"willyamped"},"content":"    EmptyDescriptionException(String message) {","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"willyamped"},"content":"        super(message);","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"willyamped"},"content":"     * Returns the string representation of EmptyDescriptionException.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"willyamped"},"content":"     * @return The string representation of EmptyDescriptionException.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"willyamped"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"willyamped"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"willyamped"},"content":"        return \"EmptyDescriptionException: \" + getMessage();","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"willyamped"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"willyamped":20}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willyamped"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"willyamped"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"willyamped"},"content":" * Represents a task that has a description and time.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"willyamped"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"willyamped"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"willyamped"},"content":"    protected String deadline;","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"willyamped"},"content":"     * A constructor to create an Event object.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"willyamped"},"content":"     * @param description The description of an Event object.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"willyamped"},"content":"     * @param deadline The deadline of an Event object.","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"willyamped"},"content":"    public Event(String description, String deadline) {","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"willyamped"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"willyamped"},"content":"        this.deadline \u003d deadline.equals(\"\") ? \"at: \" : deadline;","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"willyamped"},"content":"        super.deadline \u003d this.deadline;","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"willyamped"},"content":"     * Returns the string representation of a Event object.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"willyamped"},"content":"     * @return The string representation of a Event object.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"willyamped"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"willyamped"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"willyamped"},"content":"        return \"[E]\" + super.toString() + \"(\" + deadline + \")\";","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"willyamped"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"willyamped":30}},{"path":"src/main/java/duke/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willyamped"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"willyamped"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"willyamped"},"content":" * Represents an error when the command is invalid.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"willyamped"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"willyamped"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"willyamped"},"content":"    InvalidCommandException(String message) {","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"willyamped"},"content":"        super(message);","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"willyamped"},"content":"     * Returns the string representation of InvalidCommandException.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"willyamped"},"content":"     * @return The string representation of InvalidCommandException.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"willyamped"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"willyamped"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"willyamped"},"content":"        return \"InvalidCommandException: \" + getMessage();","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"willyamped"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"willyamped":20}},{"path":"src/main/java/duke/InvalidValueException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willyamped"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"willyamped"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"willyamped"},"content":" * Represents an error when the value is invalid.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"willyamped"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"willyamped"},"content":"public class InvalidValueException extends DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"willyamped"},"content":"    InvalidValueException(String message) {","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"willyamped"},"content":"        super(message);","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"willyamped"},"content":"     * Returns the string representation of InvalidValueException.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"willyamped"},"content":"     * @return The string representation of InvalidValueException.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"willyamped"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"willyamped"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"willyamped"},"content":"        return \"InvalidValueException: \" + getMessage();","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"willyamped"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"willyamped":20}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willyamped"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"willyamped"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"willyamped"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"willyamped"},"content":" * Launches the Main class.","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"willyamped"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"willyamped"},"content":"public class Launcher {","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"willyamped"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"willyamped"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"willyamped"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"willyamped":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willyamped"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"willyamped"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"willyamped"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"willyamped"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"willyamped"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"willyamped"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"willyamped"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"willyamped"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"willyamped"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"willyamped"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"willyamped"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"willyamped"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"willyamped"},"content":"     * Starts the application.","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"willyamped"},"content":"     * @param stage The stage to set the scene.","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"willyamped"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"willyamped"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"willyamped"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"willyamped"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"willyamped"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"willyamped"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"willyamped"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"willyamped"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"willyamped"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"willyamped"},"content":"            stage.show();","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"willyamped"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"willyamped"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"willyamped"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"willyamped"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"willyamped":36}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willyamped"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"willyamped"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"willyamped"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"willyamped"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"willyamped"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"willyamped"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"willyamped"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"willyamped"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"willyamped"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"willyamped"},"content":"import javafx.util.Duration;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"willyamped"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"willyamped"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"willyamped"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"willyamped"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"willyamped"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"willyamped"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"willyamped"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"willyamped"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"willyamped"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"willyamped"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"willyamped"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"willyamped"},"content":"    private boolean isBye;","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"willyamped"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"willyamped"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"willyamped"},"content":"     * Initialises the main window.","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"willyamped"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"willyamped"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"willyamped"},"content":"        isBye \u003d false;","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"willyamped"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"willyamped"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"willyamped"},"content":"                DialogBox.getDukeDialog(new Ui().printWelcome(), dukeImage)","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"willyamped"},"content":"        );","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"willyamped"},"content":"     * Sets Duke to a value d.","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"willyamped"},"content":"     * @param d Duke value.","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"willyamped"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"willyamped"},"content":"        duke \u003d d;","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"willyamped"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"willyamped"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"willyamped"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"willyamped"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"willyamped"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"willyamped"},"content":"        isBye \u003d input.equals(\"bye\") \u0026\u0026 (isBye \u003d true);","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"willyamped"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"willyamped"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"willyamped"},"content":"                DialogBox.getUserDialog(\"I say: \" + input + \" \", userImage),","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"willyamped"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"willyamped"},"content":"        );","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"willyamped"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"willyamped"},"content":"        if (isBye) {","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"willyamped"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(1.5));","lastModifiedDate":"2021-09-05"},{"lineNumber":67,"author":{"gitId":"willyamped"},"content":"            delay.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"willyamped"},"content":"            delay.play();","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"willyamped"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"willyamped"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"willyamped":71}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willyamped"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"willyamped"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"willyamped"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"willyamped"},"content":"import static java.lang.Integer.decode;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"willyamped"},"content":"import static java.lang.Integer.parseInt;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"willyamped"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"willyamped"},"content":" * Represents the main logic of the code when the user enters an input.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"willyamped"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"willyamped"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"willyamped"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"willyamped"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"willyamped"},"content":"    private String arr[];","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"willyamped"},"content":"     * A constructor to create a parser object.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"willyamped"},"content":"     * @param taskList A list that keeps track of all tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"willyamped"},"content":"     * @param ui An object that perform tasks related to interactions with user.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"willyamped"},"content":"    Parser(TaskList taskList, Ui ui) {","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"willyamped"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"willyamped"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"willyamped"},"content":"     * Checks if a string is an integer or not.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"willyamped"},"content":"     * @param s A string from the user input.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"willyamped"},"content":"     * @return True if it is an integer, false otherwise.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"willyamped"},"content":"    public static boolean isNumeric(String s) {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"willyamped"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"willyamped"},"content":"            Integer.parseInt(s);","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"willyamped"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"willyamped"},"content":"            return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"willyamped"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"willyamped"},"content":"        return true;","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"willyamped"},"content":"     * Converts the user input.","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"willyamped"},"content":"     * @return A response given an input from the user.","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"willyamped"},"content":"    public String parse(String input) {","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"willyamped"},"content":"        do {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"willyamped"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"willyamped"},"content":"                arr \u003d input.split(\" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"willyamped"},"content":"                String firstWord \u003d arr[0];","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"willyamped"},"content":"                switch (firstWord) {","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"willyamped"},"content":"                    case \"bye\":","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"willyamped"},"content":"                        return ui.printBye();","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"willyamped"},"content":"                    case \"done\":","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"willyamped"},"content":"                        return parseDone(arr);","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"willyamped"},"content":"                    case \"delete\":","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"willyamped"},"content":"                        return parseDelete(arr);","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"willyamped"},"content":"                    case \"todo\":","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"willyamped"},"content":"                        return parseTodo(arr);","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"willyamped"},"content":"                    case \"deadline\":","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"willyamped"},"content":"                        return parseDeadline(arr);","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"willyamped"},"content":"                    case \"event\":","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"willyamped"},"content":"                        return parseEvent(arr);","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"willyamped"},"content":"                    case \"list\":","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"willyamped"},"content":"                        return parseList();","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"willyamped"},"content":"                    case \"find\":","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"willyamped"},"content":"                        return parseFind(arr);","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"willyamped"},"content":"                    case \"search\":","lastModifiedDate":"2021-09-05"},{"lineNumber":70,"author":{"gitId":"willyamped"},"content":"                        return parseSearch(arr);","lastModifiedDate":"2021-09-05"},{"lineNumber":71,"author":{"gitId":"willyamped"},"content":"                    default:","lastModifiedDate":"2021-09-05"},{"lineNumber":72,"author":{"gitId":"willyamped"},"content":"                        throw new InvalidCommandException(\"Command Not Found\");","lastModifiedDate":"2021-09-05"},{"lineNumber":73,"author":{"gitId":"willyamped"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"willyamped"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":75,"author":{"gitId":"willyamped"},"content":"                return e.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"willyamped"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"willyamped"},"content":"                return e.getMessage();","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"willyamped"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"willyamped"},"content":"        } while (!input.equals(\"bye\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"willyamped"},"content":"     * Deals with the user input when the user types \"done\".","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"willyamped"},"content":"     * @param arr Array of strings from the user input.","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"willyamped"},"content":"     * @throws InvalidCommandException If the following input is not valid.","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"willyamped"},"content":"     * @return A response when the user types done.","lastModifiedDate":"2021-09-05"},{"lineNumber":88,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"willyamped"},"content":"    public String parseDone(String[] arr) throws InvalidCommandException,","lastModifiedDate":"2021-09-05"},{"lineNumber":90,"author":{"gitId":"willyamped"},"content":"            InvalidValueException {","lastModifiedDate":"2021-09-05"},{"lineNumber":91,"author":{"gitId":"willyamped"},"content":"        assert arr.length \u003d\u003d 2 : \"Please enter [done] [number]\";","lastModifiedDate":"2021-09-02"},{"lineNumber":92,"author":{"gitId":"willyamped"},"content":"        return check(arr);","lastModifiedDate":"2021-09-05"},{"lineNumber":93,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"willyamped"},"content":"     * Deals with the user input when the user types \"delete\".","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"willyamped"},"content":"     * @param arr Array of strings from the user input.","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"willyamped"},"content":"     * @throws InvalidCommandException If the following input is not valid.","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"willyamped"},"content":"     * @throws InvalidValueException If the following input is not a valid number.","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"willyamped"},"content":"     * @return A response when the user types delete.","lastModifiedDate":"2021-09-05"},{"lineNumber":102,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"willyamped"},"content":"    public String parseDelete(String[] arr) throws InvalidCommandException,","lastModifiedDate":"2021-08-31"},{"lineNumber":104,"author":{"gitId":"willyamped"},"content":"            InvalidValueException {","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"willyamped"},"content":"        assert arr.length \u003d\u003d 2 : \"Please enter [delete] [number]\";","lastModifiedDate":"2021-09-02"},{"lineNumber":106,"author":{"gitId":"willyamped"},"content":"        return check(arr);","lastModifiedDate":"2021-09-05"},{"lineNumber":107,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"willyamped"},"content":"     * Deals with the user input when the user types \"todo\".","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"willyamped"},"content":"     * @param arr Array of strings from the user input.","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"willyamped"},"content":"     * @throws EmptyDescriptionException If the next input is missing.","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"willyamped"},"content":"     * @return A response when the user types todo.","lastModifiedDate":"2021-09-05"},{"lineNumber":115,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"willyamped"},"content":"    public String parseTodo(String[] arr) throws EmptyDescriptionException {","lastModifiedDate":"2021-08-31"},{"lineNumber":117,"author":{"gitId":"willyamped"},"content":"        if (arr.length \u003c 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"willyamped"},"content":"            throw new EmptyDescriptionException(\"Missing description / date\");","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"willyamped"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"willyamped"},"content":"        taskList.addTask(new Todo(TaskList.getDescription(arr)));","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"willyamped"},"content":"        return ui.printAddTask(taskList);","lastModifiedDate":"2021-08-31"},{"lineNumber":122,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"willyamped"},"content":"     * Deals with the user input when the user types \"deadline\".","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"willyamped"},"content":"     * @param arr Array of strings from the user input.","lastModifiedDate":"2021-08-25"},{"lineNumber":128,"author":{"gitId":"willyamped"},"content":"     * @throws EmptyDescriptionException If the next input is missing.","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"willyamped"},"content":"     * @return A response when the user types deadline.","lastModifiedDate":"2021-09-05"},{"lineNumber":130,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"willyamped"},"content":"    public String parseDeadline(String[] arr) throws EmptyDescriptionException {","lastModifiedDate":"2021-08-31"},{"lineNumber":132,"author":{"gitId":"willyamped"},"content":"        if (arr.length \u003c 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"willyamped"},"content":"            throw new EmptyDescriptionException(\"Missing description / date\");","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"willyamped"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"willyamped"},"content":"        taskList.addTask(new Deadline(TaskList.getDescription(arr), TaskList.getDeadline(arr)));","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"willyamped"},"content":"        return ui.printAddTask(taskList);","lastModifiedDate":"2021-08-31"},{"lineNumber":137,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":139,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":140,"author":{"gitId":"willyamped"},"content":"     * Deals with the user input when the user types \"event\".","lastModifiedDate":"2021-08-25"},{"lineNumber":141,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":142,"author":{"gitId":"willyamped"},"content":"     * @param arr Array of strings from the user input.","lastModifiedDate":"2021-08-25"},{"lineNumber":143,"author":{"gitId":"willyamped"},"content":"     * @throws EmptyDescriptionException If the next input is missing.","lastModifiedDate":"2021-08-25"},{"lineNumber":144,"author":{"gitId":"willyamped"},"content":"     * @return A response when the user types event.","lastModifiedDate":"2021-09-05"},{"lineNumber":145,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":146,"author":{"gitId":"willyamped"},"content":"    public String parseEvent(String[] arr) throws EmptyDescriptionException {","lastModifiedDate":"2021-08-31"},{"lineNumber":147,"author":{"gitId":"willyamped"},"content":"        if (arr.length \u003c 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":148,"author":{"gitId":"willyamped"},"content":"            throw new EmptyDescriptionException(\"Missing description / date\");","lastModifiedDate":"2021-08-24"},{"lineNumber":149,"author":{"gitId":"willyamped"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":150,"author":{"gitId":"willyamped"},"content":"        taskList.addTask(new Event(TaskList.getDescription(arr), TaskList.getDeadline(arr)));","lastModifiedDate":"2021-08-31"},{"lineNumber":151,"author":{"gitId":"willyamped"},"content":"        return ui.printAddTask(taskList);","lastModifiedDate":"2021-08-31"},{"lineNumber":152,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":153,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":154,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":155,"author":{"gitId":"willyamped"},"content":"     * Deals with the user input when the user types \"list\".","lastModifiedDate":"2021-08-25"},{"lineNumber":156,"author":{"gitId":"willyamped"},"content":"     * @return A response when the user types list.","lastModifiedDate":"2021-09-05"},{"lineNumber":157,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":158,"author":{"gitId":"willyamped"},"content":"    public String parseList() {","lastModifiedDate":"2021-08-31"},{"lineNumber":159,"author":{"gitId":"willyamped"},"content":"        return ui.displayList(taskList);","lastModifiedDate":"2021-08-31"},{"lineNumber":160,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":161,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":162,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":163,"author":{"gitId":"willyamped"},"content":"     * Deals with the user input when the user types \"find\".","lastModifiedDate":"2021-08-25"},{"lineNumber":164,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":165,"author":{"gitId":"willyamped"},"content":"     * @param arr Array of strings from the user input.","lastModifiedDate":"2021-08-25"},{"lineNumber":166,"author":{"gitId":"willyamped"},"content":"     * @throws InvalidCommandException If the following input is not valid.","lastModifiedDate":"2021-08-25"},{"lineNumber":167,"author":{"gitId":"willyamped"},"content":"     * @return A response when the user types find.","lastModifiedDate":"2021-09-05"},{"lineNumber":168,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":169,"author":{"gitId":"willyamped"},"content":"    public String parseFind(String[] arr) throws InvalidCommandException {","lastModifiedDate":"2021-08-31"},{"lineNumber":170,"author":{"gitId":"willyamped"},"content":"        if (arr.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":171,"author":{"gitId":"willyamped"},"content":"            throw new InvalidCommandException(\"Please specify a task you want to search\");","lastModifiedDate":"2021-08-24"},{"lineNumber":172,"author":{"gitId":"willyamped"},"content":"        } else if (taskList.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":173,"author":{"gitId":"willyamped"},"content":"            throw new InvalidCommandException(\"You have not added any task!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":174,"author":{"gitId":"willyamped"},"content":"        } else if (arr.length \u003e 2) {","lastModifiedDate":"2021-08-26"},{"lineNumber":175,"author":{"gitId":"willyamped"},"content":"            throw new InvalidCommandException(\"Please enter a single keyword!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":176,"author":{"gitId":"willyamped"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":177,"author":{"gitId":"willyamped"},"content":"            return taskList.findTask(arr[1]);","lastModifiedDate":"2021-08-31"},{"lineNumber":178,"author":{"gitId":"willyamped"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":179,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":180,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":181,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":182,"author":{"gitId":"willyamped"},"content":"     * Deals with the user input when the user types \"find\".","lastModifiedDate":"2021-09-05"},{"lineNumber":183,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":184,"author":{"gitId":"willyamped"},"content":"     * @param arr Array of strings from the user input.","lastModifiedDate":"2021-09-05"},{"lineNumber":185,"author":{"gitId":"willyamped"},"content":"     * @throws InvalidCommandException If the following input is not valid.","lastModifiedDate":"2021-09-05"},{"lineNumber":186,"author":{"gitId":"willyamped"},"content":"     * @return A string containing a list of tasks that matches the keyword.","lastModifiedDate":"2021-09-05"},{"lineNumber":187,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":188,"author":{"gitId":"willyamped"},"content":"    public String parseSearch(String[] arr) throws InvalidCommandException {","lastModifiedDate":"2021-09-05"},{"lineNumber":189,"author":{"gitId":"willyamped"},"content":"        if (arr.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-05"},{"lineNumber":190,"author":{"gitId":"willyamped"},"content":"            throw new InvalidCommandException(\"Please specify a keyword you want to search\");","lastModifiedDate":"2021-09-05"},{"lineNumber":191,"author":{"gitId":"willyamped"},"content":"        } else if (taskList.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-09-05"},{"lineNumber":192,"author":{"gitId":"willyamped"},"content":"            throw new InvalidCommandException(\"You have not added any task!\");","lastModifiedDate":"2021-09-05"},{"lineNumber":193,"author":{"gitId":"willyamped"},"content":"        } else if (arr.length \u003e 2) {","lastModifiedDate":"2021-09-05"},{"lineNumber":194,"author":{"gitId":"willyamped"},"content":"            throw new InvalidCommandException(\"Please enter a single keyword!\");","lastModifiedDate":"2021-09-05"},{"lineNumber":195,"author":{"gitId":"willyamped"},"content":"        } else {","lastModifiedDate":"2021-09-05"},{"lineNumber":196,"author":{"gitId":"willyamped"},"content":"            return taskList.searchTask(arr[1]);","lastModifiedDate":"2021-09-05"},{"lineNumber":197,"author":{"gitId":"willyamped"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":198,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":199,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":200,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":201,"author":{"gitId":"willyamped"},"content":"     * Checks for invalid inputs for parseDone and parseDelete.","lastModifiedDate":"2021-09-05"},{"lineNumber":202,"author":{"gitId":"willyamped"},"content":"     * @param arr An input from the user.","lastModifiedDate":"2021-09-05"},{"lineNumber":203,"author":{"gitId":"willyamped"},"content":"     * @return An appropriate response for done or delete.","lastModifiedDate":"2021-09-05"},{"lineNumber":204,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":205,"author":{"gitId":"willyamped"},"content":"    public String check(String[] arr) {","lastModifiedDate":"2021-09-05"},{"lineNumber":206,"author":{"gitId":"willyamped"},"content":"        if (arr.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-05"},{"lineNumber":207,"author":{"gitId":"willyamped"},"content":"            throw new InvalidCommandException(\"Please specify a number\");","lastModifiedDate":"2021-09-05"},{"lineNumber":208,"author":{"gitId":"willyamped"},"content":"        } else if (!isNumeric(arr[1])) {","lastModifiedDate":"2021-09-05"},{"lineNumber":209,"author":{"gitId":"willyamped"},"content":"            throw new InvalidCommandException(\"Please enter a number\");","lastModifiedDate":"2021-09-05"},{"lineNumber":210,"author":{"gitId":"willyamped"},"content":"        } else if (taskList.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-09-05"},{"lineNumber":211,"author":{"gitId":"willyamped"},"content":"            throw new InvalidCommandException(\"You have not added any task!\");","lastModifiedDate":"2021-09-05"},{"lineNumber":212,"author":{"gitId":"willyamped"},"content":"        } else if ((Integer.parseInt(arr[1]) \u003e taskList.getSize()","lastModifiedDate":"2021-09-05"},{"lineNumber":213,"author":{"gitId":"willyamped"},"content":"                || Integer.parseInt(arr[1]) \u003c\u003d 0)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":214,"author":{"gitId":"willyamped"},"content":"            throw new InvalidValueException(\"Enter a valid number!\");","lastModifiedDate":"2021-09-05"},{"lineNumber":215,"author":{"gitId":"willyamped"},"content":"        } else {","lastModifiedDate":"2021-09-05"},{"lineNumber":216,"author":{"gitId":"willyamped"},"content":"            if (arr[0].equals(\"done\")) {","lastModifiedDate":"2021-09-05"},{"lineNumber":217,"author":{"gitId":"willyamped"},"content":"                taskList.markAsDone(parseInt(arr[1]) - 1);","lastModifiedDate":"2021-09-05"},{"lineNumber":218,"author":{"gitId":"willyamped"},"content":"                String str \u003d ui.printDone() + \"\\n\";","lastModifiedDate":"2021-09-05"},{"lineNumber":219,"author":{"gitId":"willyamped"},"content":"                str +\u003d ui.printCurrentTask(taskList, parseInt(arr[1]) - 1) + \"\\n\";","lastModifiedDate":"2021-09-05"},{"lineNumber":220,"author":{"gitId":"willyamped"},"content":"                return str;","lastModifiedDate":"2021-09-05"},{"lineNumber":221,"author":{"gitId":"willyamped"},"content":"            } else {","lastModifiedDate":"2021-09-05"},{"lineNumber":222,"author":{"gitId":"willyamped"},"content":"                String str \u003d ui.printRemove() + \"\\n\";","lastModifiedDate":"2021-09-05"},{"lineNumber":223,"author":{"gitId":"willyamped"},"content":"                str +\u003d ui.printCurrentTask(taskList, parseInt(arr[1]) - 1) + \"\\n\";","lastModifiedDate":"2021-09-05"},{"lineNumber":224,"author":{"gitId":"willyamped"},"content":"                taskList.removeTask(parseInt(arr[1]) - 1);","lastModifiedDate":"2021-09-05"},{"lineNumber":225,"author":{"gitId":"willyamped"},"content":"                str +\u003d \"Now you have \" + taskList.getSize() + \" tasks in the list. \\n\";","lastModifiedDate":"2021-09-13"},{"lineNumber":226,"author":{"gitId":"willyamped"},"content":"                return str;","lastModifiedDate":"2021-09-05"},{"lineNumber":227,"author":{"gitId":"willyamped"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":228,"author":{"gitId":"willyamped"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":229,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":230,"author":{"gitId":"willyamped"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"willyamped":230}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willyamped"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"willyamped"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"willyamped"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"willyamped"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"willyamped"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"willyamped"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"willyamped"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"willyamped"},"content":" * Represents the file used to load and save data.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"willyamped"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"willyamped"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"willyamped"},"content":"    private String filepath;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"willyamped"},"content":"     * A constructor to create a Storage object.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"willyamped"},"content":"     * @param filepath The location of the file to load from and save to.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"willyamped"},"content":"    Storage(String filepath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"willyamped"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"willyamped"},"content":"     * Reads the list of tasks from a file.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"willyamped"},"content":"     * @param ls A list to keep track of all tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"willyamped"},"content":"    public void readFile(TaskList ls) {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"willyamped"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"willyamped"},"content":"            String arr[];","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"willyamped"},"content":"            File myObj \u003d new File(this.filepath);","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"willyamped"},"content":"            Scanner myScanner \u003d new Scanner(myObj);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"willyamped"},"content":"            while (myScanner.hasNextLine()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"willyamped"},"content":"                String data \u003d myScanner.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"willyamped"},"content":"                arr \u003d data.split(\" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"willyamped"},"content":"                String task \u003d arr[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"willyamped"},"content":"                String description \u003d \"\";","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"willyamped"},"content":"                int counter \u003d 0;","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"willyamped"},"content":"                for(int i \u003d 1; i \u003c arr.length; i++) {","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"willyamped"},"content":"                    if (!(arr[i].charAt(0) \u003d\u003d \u0027(\u0027)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"willyamped"},"content":"                        description +\u003d arr[i] + \" \";","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"willyamped"},"content":"                    }","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"willyamped"},"content":"                    else {","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"willyamped"},"content":"                        counter \u003d i;","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"willyamped"},"content":"                        break;","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"willyamped"},"content":"                    }","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"willyamped"},"content":"                }","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"willyamped"},"content":"                if (task.charAt(2) \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"willyamped"},"content":"                    String deadline \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"willyamped"},"content":"                    for (int i \u003d counter; i \u003c arr.length; i++) {","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"willyamped"},"content":"                        if (i \u003d\u003d counter) {","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"willyamped"},"content":"                            deadline +\u003d arr[i].substring(1);","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"willyamped"},"content":"                        } else if (i \u003d\u003d arr.length - 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"willyamped"},"content":"                            deadline +\u003d \" \" + arr[i].substring(0, arr[i].length() - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"willyamped"},"content":"                        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"willyamped"},"content":"                            deadline +\u003d \" \" + arr[i];","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"willyamped"},"content":"                        }","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"willyamped"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"willyamped"},"content":"                    Deadline item \u003d new Deadline(description, deadline);","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"willyamped"},"content":"                    ls.addTask(item);","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"willyamped"},"content":"                    if (task.substring(4).equals(\"Done\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"willyamped"},"content":"                        ls.markAsDone(ls.getSize()-1);","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"willyamped"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"willyamped"},"content":"                } else if (task.charAt(2) \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"willyamped"},"content":"                    String deadline \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"willyamped"},"content":"                    for (int i \u003d counter; i \u003c arr.length; i++) {","lastModifiedDate":"2021-09-05"},{"lineNumber":69,"author":{"gitId":"willyamped"},"content":"                        if (i \u003d\u003d counter) {","lastModifiedDate":"2021-09-05"},{"lineNumber":70,"author":{"gitId":"willyamped"},"content":"                            deadline +\u003d arr[i].substring(1);","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"willyamped"},"content":"                        } else if (i \u003d\u003d arr.length - 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"willyamped"},"content":"                            deadline +\u003d \" \" + arr[i].substring(0, arr[i].length() - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"willyamped"},"content":"                        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"willyamped"},"content":"                            deadline +\u003d \" \" + arr[i];","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"willyamped"},"content":"                        }","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"willyamped"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"willyamped"},"content":"                    Event item \u003d new Event(description, deadline);","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"willyamped"},"content":"                    ls.addTask(item);","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"willyamped"},"content":"                    if (task.substring(4).equals(\"Done\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"willyamped"},"content":"                        ls.markAsDone(ls.getSize() - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"willyamped"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"willyamped"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"willyamped"},"content":"                else {","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"willyamped"},"content":"                    Todo item \u003d new Todo(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"willyamped"},"content":"                    ls.addTask(item);","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"willyamped"},"content":"                    if (task.substring(4).equals(\"Done\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"willyamped"},"content":"                        ls.markAsDone(ls.getSize() - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"willyamped"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"willyamped"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"willyamped"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"willyamped"},"content":"            myScanner.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"willyamped"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"willyamped"},"content":"            System.out.println(\"Read File Error.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"willyamped"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"willyamped"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"willyamped"},"content":"     * Writes to a file.","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"willyamped"},"content":"     * @param ls A list to keep track of all files.","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"willyamped"},"content":"    public static void saveFile(TaskList ls) {","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"willyamped"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"willyamped"},"content":"            String str \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"willyamped"},"content":"            for (int i \u003d 0; i \u003c ls.getSize(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"willyamped"},"content":"                str +\u003d (i + 1) + \".\"","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"willyamped"},"content":"                        + ls.getTask(i).toString().charAt(1)","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"willyamped"},"content":"                        + \"|\" + ls.getTask(i).getStatus() + \" \" + ls.getTask(i).getDescription();","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"willyamped"},"content":"                if (ls.getTask(i) instanceof Deadline || ls.getTask(i) instanceof Event) {","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"willyamped"},"content":"                    str +\u003d \"(\" + ls.getTask(i).getDeadline() + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"willyamped"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"willyamped"},"content":"                if (i !\u003d ls.getSize() - 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"willyamped"},"content":"                    str +\u003d \"\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"willyamped"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"willyamped"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"willyamped"},"content":"            FileWriter fileWriter \u003d new FileWriter(\"data/duke.txt\");","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"willyamped"},"content":"            fileWriter.write(str);","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"willyamped"},"content":"            fileWriter.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"willyamped"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"willyamped"},"content":"            System.out.println(\"Save File Error.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"willyamped"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"willyamped"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"willyamped"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"willyamped":127}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willyamped"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"willyamped"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"willyamped"},"content":" * Represents a task when the user creates a new task.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"willyamped"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"willyamped"},"content":"public class Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"willyamped"},"content":"    protected String description;","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"willyamped"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"willyamped"},"content":"    protected String deadline \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"willyamped"},"content":"     * A constructor to create a Task object.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"willyamped"},"content":"     * @param description A description about the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"willyamped"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"willyamped"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"willyamped"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"willyamped"},"content":"     * Returns either \"X\" for marked tasks or \" \" for unmarked tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"willyamped"},"content":"     * @return Either \"X\" or \" \".","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"willyamped"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"willyamped"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"willyamped"},"content":"     * Returns \"Done\" for marked tasks and \"NotDone\" for unmarked tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"willyamped"},"content":"     * @return The status of a task.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"willyamped"},"content":"    public String getStatus() {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"willyamped"},"content":"        return isDone ? \"Done\" : \"NotDone\";","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"willyamped"},"content":"     * Returns the description of a task.","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"willyamped"},"content":"     * @return The description of a task.","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"willyamped"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"willyamped"},"content":"        return this.description;","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"willyamped"},"content":"     * Returns the deadline of a task.","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"willyamped"},"content":"     * @return The deadline of a task.","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"willyamped"},"content":"    public String getDeadline() {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"willyamped"},"content":"        return this.deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":58,"author":{"gitId":"willyamped"},"content":"     * Sets isDone to true.","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":60,"author":{"gitId":"willyamped"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":61,"author":{"gitId":"willyamped"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":62,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":63,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":64,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":65,"author":{"gitId":"willyamped"},"content":"     * Returns the string representation of a task description.","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":67,"author":{"gitId":"willyamped"},"content":"     * @return The string representation of a task description.","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":69,"author":{"gitId":"willyamped"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":70,"author":{"gitId":"willyamped"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":71,"author":{"gitId":"willyamped"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2021-08-16"},{"lineNumber":72,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":73,"author":{"gitId":"willyamped"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"willyamped":73}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willyamped"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"willyamped"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"willyamped"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"willyamped"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"willyamped"},"content":"import java.time.format.TextStyle;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"willyamped"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"willyamped"},"content":"import java.util.List;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"willyamped"},"content":"import java.util.Locale;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"willyamped"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"willyamped"},"content":" * Represents a list of tasks with its operations.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"willyamped"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"willyamped"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"willyamped"},"content":"    private ArrayList\u003cTask\u003e ls;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"willyamped"},"content":"    private ArrayList\u003cTask\u003e searchList;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"willyamped"},"content":"    TaskList(ArrayList\u003cTask\u003e ls) {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"willyamped"},"content":"        this.ls \u003d ls;","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"willyamped"},"content":"     * Returns the description from a task entered by the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"willyamped"},"content":"     * @param arr The array that contains strings from the user input.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"willyamped"},"content":"     * @return A string containing the description only.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"willyamped"},"content":"    public static String getDescription(String[] arr) {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"willyamped"},"content":"        String str \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"willyamped"},"content":"        for(int i \u003d 1; i \u003c arr.length; i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"willyamped"},"content":"            if (!(arr[i].charAt(0) \u003d\u003d \u0027/\u0027)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"willyamped"},"content":"                str +\u003d arr[i] + \" \";","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"willyamped"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"willyamped"},"content":"            else {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"willyamped"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"willyamped"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"willyamped"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"willyamped"},"content":"        return str;","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"willyamped"},"content":"     * Returns the deadline from a task entered by the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"willyamped"},"content":"     * @param arr The array that contains strings from the user input.","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"willyamped"},"content":"     * @return A string containing the deadline only.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"willyamped"},"content":"    public static String getDeadline(String[] arr) throws DateTimeParseException {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"willyamped"},"content":"        String str \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"willyamped"},"content":"        boolean bool \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"willyamped"},"content":"        for(int i \u003d 1; i \u003c arr.length; i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"willyamped"},"content":"            if (!bool) {","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"willyamped"},"content":"                if (arr[i].charAt(0) \u003d\u003d \u0027/\u0027) {","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"willyamped"},"content":"                    bool \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"willyamped"},"content":"                    str +\u003d arr[i].substring(1) + \": \";","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"willyamped"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"willyamped"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"willyamped"},"content":"                if (arr[i].length() \u003d\u003d 10 \u0026\u0026 arr[i].charAt(4) \u003d\u003d \u0027-\u0027 \u0026\u0026 arr[i].charAt(7) \u003d\u003d \u0027-\u0027) {","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"willyamped"},"content":"                    LocalDate ld \u003d LocalDate.parse(arr[i]);","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"willyamped"},"content":"                    str +\u003d ld.getDayOfMonth() + \" \"","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"willyamped"},"content":"                            + ld.getMonth().getDisplayName(TextStyle.SHORT, Locale.ENGLISH) + \" \"","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"willyamped"},"content":"                            + ld.getYear();","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"willyamped"},"content":"                    if (i !\u003d arr.length - 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"willyamped"},"content":"                        str +\u003d \" \";","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"willyamped"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"willyamped"},"content":"                } else if (arr[i].length() \u003d\u003d 5 \u0026\u0026 arr[i].charAt(2) \u003d\u003d \u0027:\u0027) {","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"willyamped"},"content":"                    LocalTime lt \u003d LocalTime.parse(arr[i]);","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"willyamped"},"content":"                    int hour \u003d lt.getHour();","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"willyamped"},"content":"                    String hourSuffix \u003d hour \u003c 12 ? \"AM\" : \"PM\";","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"willyamped"},"content":"                    if (hour \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"willyamped"},"content":"                        hour \u003d 12;","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"willyamped"},"content":"                    } else if (hour \u003e 12) {","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"willyamped"},"content":"                        hour -\u003d 12;","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"willyamped"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"willyamped"},"content":"                    int minute \u003d lt.getMinute();","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"willyamped"},"content":"                    String minutePrefix \u003d minute \u003c 10 ? \"0\" : \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"willyamped"},"content":"                    str +\u003d hour + \":\" + minutePrefix + minute + \" \" + hourSuffix;","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"willyamped"},"content":"                    if (i !\u003d arr.length - 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"willyamped"},"content":"                        str +\u003d \" \";","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"willyamped"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"willyamped"},"content":"                } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"willyamped"},"content":"                    str +\u003d arr[i];","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"willyamped"},"content":"                    if (i !\u003d arr.length - 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"willyamped"},"content":"                        str +\u003d \" \";","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"willyamped"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"willyamped"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"willyamped"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"willyamped"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"willyamped"},"content":"        return str;","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"willyamped"},"content":"     * Adds a task to the collection of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"willyamped"},"content":"     * @param task The task to be added.","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"willyamped"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"willyamped"},"content":"        ls.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"willyamped"},"content":"     * Removes a task at a certain index in the collection.","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"willyamped"},"content":"     * @param index Index of the task to be removed.","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"willyamped"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"willyamped"},"content":"        System.out.println(index);","lastModifiedDate":"2021-09-01"},{"lineNumber":108,"author":{"gitId":"willyamped"},"content":"        ls.remove(index);","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"willyamped"},"content":"     * Sets isBoolean to true.","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"willyamped"},"content":"     * @param index Index of the task to be marked as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"willyamped"},"content":"    public void markAsDone(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"willyamped"},"content":"        ls.get(index).markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"willyamped"},"content":"     * Returns a task a certain index in the location.","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"willyamped"},"content":"     * @param index Index of the task to be returned.","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"willyamped"},"content":"     * @return a Task at a certain index.","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"willyamped"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"willyamped"},"content":"        return ls.get(index);","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"willyamped"},"content":"     * Returns the size of the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"willyamped"},"content":"     * @return The size of the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":134,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"willyamped"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"willyamped"},"content":"        return ls.size();","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"willyamped"},"content":"     * Prints the list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":141,"author":{"gitId":"willyamped"},"content":"     * @return A string that contains the list of tasks.","lastModifiedDate":"2021-09-05"},{"lineNumber":142,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"willyamped"},"content":"    public String displayList() {","lastModifiedDate":"2021-08-31"},{"lineNumber":144,"author":{"gitId":"willyamped"},"content":"        if (ls.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"willyamped"},"content":"            return \"You currently do not have any task!\";","lastModifiedDate":"2021-08-31"},{"lineNumber":146,"author":{"gitId":"willyamped"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":147,"author":{"gitId":"willyamped"},"content":"            String str \u003d \"\";","lastModifiedDate":"2021-08-31"},{"lineNumber":148,"author":{"gitId":"willyamped"},"content":"            str +\u003d \"Here are the tasks in your list: \\n \";","lastModifiedDate":"2021-08-31"},{"lineNumber":149,"author":{"gitId":"willyamped"},"content":"            for (int i \u003d 0; i \u003c ls.size(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":150,"author":{"gitId":"willyamped"},"content":"                str +\u003d (i + 1) + \".\" + ls.get(i).toString() + \"\\n\";","lastModifiedDate":"2021-08-31"},{"lineNumber":151,"author":{"gitId":"willyamped"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":152,"author":{"gitId":"willyamped"},"content":"            return str;","lastModifiedDate":"2021-08-31"},{"lineNumber":153,"author":{"gitId":"willyamped"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":154,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":155,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":156,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":157,"author":{"gitId":"willyamped"},"content":"     * Prints the acknowledgement and the current number of tasks in the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":158,"author":{"gitId":"willyamped"},"content":"     * @return A string to show that a task has been added.","lastModifiedDate":"2021-09-05"},{"lineNumber":159,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":160,"author":{"gitId":"willyamped"},"content":"    public String printAddTask() {","lastModifiedDate":"2021-08-31"},{"lineNumber":161,"author":{"gitId":"willyamped"},"content":"        String str \u003d \"\";","lastModifiedDate":"2021-08-31"},{"lineNumber":162,"author":{"gitId":"willyamped"},"content":"        str +\u003d \"Got it. I\u0027ve added this task: \\n\";","lastModifiedDate":"2021-08-31"},{"lineNumber":163,"author":{"gitId":"willyamped"},"content":"        str +\u003d ls.get(ls.size() - 1).toString() + \"\\n\";","lastModifiedDate":"2021-08-31"},{"lineNumber":164,"author":{"gitId":"willyamped"},"content":"        str +\u003d \"Now you have \" + ls.size() + \" tasks in the list. \\n\";","lastModifiedDate":"2021-08-31"},{"lineNumber":165,"author":{"gitId":"willyamped"},"content":"        return str;","lastModifiedDate":"2021-08-31"},{"lineNumber":166,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":167,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":168,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":169,"author":{"gitId":"willyamped"},"content":"     * Allows the user to find a task in the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":170,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":171,"author":{"gitId":"willyamped"},"content":"     * @param search The search term.","lastModifiedDate":"2021-08-25"},{"lineNumber":172,"author":{"gitId":"willyamped"},"content":"     * @return A string to show if a task is found in the list of not.","lastModifiedDate":"2021-09-05"},{"lineNumber":173,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":174,"author":{"gitId":"willyamped"},"content":"    public String findTask(String search) {","lastModifiedDate":"2021-08-31"},{"lineNumber":175,"author":{"gitId":"willyamped"},"content":"        searchList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":176,"author":{"gitId":"willyamped"},"content":"        for (int i \u003d 0; i \u003c ls.size(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":177,"author":{"gitId":"willyamped"},"content":"            String[] arr \u003d ls.get(i).getDescription().split(\" \");","lastModifiedDate":"2021-08-26"},{"lineNumber":178,"author":{"gitId":"willyamped"},"content":"            for(int j \u003d 0; j \u003c arr.length; j++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":179,"author":{"gitId":"willyamped"},"content":"                if (arr[j].equals(search)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":180,"author":{"gitId":"willyamped"},"content":"                    searchList.add(ls.get(i));","lastModifiedDate":"2021-08-24"},{"lineNumber":181,"author":{"gitId":"willyamped"},"content":"                    break;","lastModifiedDate":"2021-09-05"},{"lineNumber":182,"author":{"gitId":"willyamped"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":183,"author":{"gitId":"willyamped"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":184,"author":{"gitId":"willyamped"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":185,"author":{"gitId":"willyamped"},"content":"        if (searchList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":186,"author":{"gitId":"willyamped"},"content":"            return \"No matching tasks!\";","lastModifiedDate":"2021-08-31"},{"lineNumber":187,"author":{"gitId":"willyamped"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":188,"author":{"gitId":"willyamped"},"content":"            String str \u003d \"\";","lastModifiedDate":"2021-08-31"},{"lineNumber":189,"author":{"gitId":"willyamped"},"content":"            str +\u003d \"Here are the matching task(s) in your list: \\n\";","lastModifiedDate":"2021-09-05"},{"lineNumber":190,"author":{"gitId":"willyamped"},"content":"            for (int i \u003d 0; i \u003c searchList.size(); i++) {","lastModifiedDate":"2021-09-05"},{"lineNumber":191,"author":{"gitId":"willyamped"},"content":"                str +\u003d (i + 1) + \".\" + searchList.get(i).toString() + \"\\n\";","lastModifiedDate":"2021-09-05"},{"lineNumber":192,"author":{"gitId":"willyamped"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":193,"author":{"gitId":"willyamped"},"content":"            return str;","lastModifiedDate":"2021-09-05"},{"lineNumber":194,"author":{"gitId":"willyamped"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":195,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":196,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":197,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":198,"author":{"gitId":"willyamped"},"content":"     * Allows the user to search for any keyword in the tasks.","lastModifiedDate":"2021-09-05"},{"lineNumber":199,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":200,"author":{"gitId":"willyamped"},"content":"     * @param search The search term.","lastModifiedDate":"2021-09-05"},{"lineNumber":201,"author":{"gitId":"willyamped"},"content":"     * @return A string containing the list of tasks matching the keyword.","lastModifiedDate":"2021-09-05"},{"lineNumber":202,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":203,"author":{"gitId":"willyamped"},"content":"    public String searchTask(String search) {","lastModifiedDate":"2021-09-05"},{"lineNumber":204,"author":{"gitId":"willyamped"},"content":"        searchList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-05"},{"lineNumber":205,"author":{"gitId":"willyamped"},"content":"        for (int i \u003d 0; i \u003c ls.size(); i++) {","lastModifiedDate":"2021-09-05"},{"lineNumber":206,"author":{"gitId":"willyamped"},"content":"            String[] arr \u003d ls.get(i).getDescription().split(\" \");","lastModifiedDate":"2021-09-05"},{"lineNumber":207,"author":{"gitId":"willyamped"},"content":"            for(int j \u003d 0; j \u003c arr.length; j++) {","lastModifiedDate":"2021-09-05"},{"lineNumber":208,"author":{"gitId":"willyamped"},"content":"                if (arr[j].contains(search)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":209,"author":{"gitId":"willyamped"},"content":"                    searchList.add(ls.get(i));","lastModifiedDate":"2021-09-05"},{"lineNumber":210,"author":{"gitId":"willyamped"},"content":"                    break;","lastModifiedDate":"2021-09-05"},{"lineNumber":211,"author":{"gitId":"willyamped"},"content":"                }","lastModifiedDate":"2021-09-05"},{"lineNumber":212,"author":{"gitId":"willyamped"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":213,"author":{"gitId":"willyamped"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":214,"author":{"gitId":"willyamped"},"content":"        if (searchList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-05"},{"lineNumber":215,"author":{"gitId":"willyamped"},"content":"            return \"No matching tasks!\";","lastModifiedDate":"2021-09-05"},{"lineNumber":216,"author":{"gitId":"willyamped"},"content":"        } else {","lastModifiedDate":"2021-09-05"},{"lineNumber":217,"author":{"gitId":"willyamped"},"content":"            String str \u003d \"\";","lastModifiedDate":"2021-09-05"},{"lineNumber":218,"author":{"gitId":"willyamped"},"content":"            str +\u003d \"Here are the matching keyword(s) in your list: \\n\";","lastModifiedDate":"2021-09-05"},{"lineNumber":219,"author":{"gitId":"willyamped"},"content":"            for (int i \u003d 0; i \u003c searchList.size(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":220,"author":{"gitId":"willyamped"},"content":"                str +\u003d (i + 1) + \".\" + searchList.get(i).toString() + \"\\n\";","lastModifiedDate":"2021-09-05"},{"lineNumber":221,"author":{"gitId":"willyamped"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":222,"author":{"gitId":"willyamped"},"content":"            return str;","lastModifiedDate":"2021-08-31"},{"lineNumber":223,"author":{"gitId":"willyamped"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":224,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":225,"author":{"gitId":"willyamped"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"willyamped":225}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willyamped"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"willyamped"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"willyamped"},"content":" * Represents a task that only has a description.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"willyamped"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"willyamped"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"willyamped"},"content":"    protected String by;","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"willyamped"},"content":"     * A constructor to create a Todo object.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"willyamped"},"content":"     * @param description A description about the Todo object.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"willyamped"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"willyamped"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"willyamped"},"content":"     * Returns the string representation of a Todo object.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"willyamped"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"willyamped"},"content":"     * @return The string representation of a Todo object.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"willyamped"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"willyamped"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"willyamped"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"willyamped"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"willyamped":27}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willyamped"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"willyamped"},"content":"import static java.lang.Integer.parseInt;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"willyamped"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"willyamped"},"content":" * Represents a class that deals with interaction with the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"willyamped"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"willyamped"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"willyamped"},"content":"     * Prints the welcome message.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"willyamped"},"content":"     * @return A string containing a welcome message.","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"willyamped"},"content":"    public String printWelcome() {","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"willyamped"},"content":"        return (","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"willyamped"},"content":"                \"Hello! I\u0027m Duke :) \\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"willyamped"},"content":"                        + \"Type: \\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"willyamped"},"content":"                        + \"1. A task (todo/deadline/event) followed by description to add tasks \\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"willyamped"},"content":"                        + \"   e.g \\\"deadline submit homework /by Sunday 12 pm\\\" \\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"willyamped"},"content":"                        + \"2. \\\"list\\\" to see the list of tasks \\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"willyamped"},"content":"                        + \"3. \\\"find [keyword]\\\" to find a matching task \\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"willyamped"},"content":"                        + \"4. \\\"search [keyword]\\\" to find a matching keyword contained in a task \\n\"","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"willyamped"},"content":"                        + \"5. \\\"done [number]\\\" to mark a particular task as done \\n\"","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"willyamped"},"content":"                        + \"6. \\\"delete [number]\\\" to delete a particular task \\n\"","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"willyamped"},"content":"                        + \"7. \\\"bye\\\" to exit\"","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"willyamped"},"content":"        );","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"willyamped"},"content":"     * Prints the goodbye message.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"willyamped"},"content":"     * @return A string containing a goodbye message.","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"willyamped"},"content":"    public String printBye() {","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"willyamped"},"content":"        return \"Good Bye. Have a nice day!\";","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"willyamped"},"content":"     * Informs the user that a task has been marked as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"willyamped"},"content":"     * @return A string to show that a task has been marked as done.","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"willyamped"},"content":"    public String printDone() { return \"Nice! I\u0027ve marked this task as done: \";","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"willyamped"},"content":"     * Informs the user that a task has been removed from the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"willyamped"},"content":"     * @return A string to show that a task has been removed.","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"willyamped"},"content":"    public String printRemove() {","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"willyamped"},"content":"        return \"Noted. I\u0027ve removed this task: \";","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"willyamped"},"content":"     * Informs the user that a task has been added.","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"willyamped"},"content":"     * @param ls The list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"willyamped"},"content":"     * @return A string that shows a task has been added.","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"willyamped"},"content":"    public String printAddTask(TaskList ls) {","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"willyamped"},"content":"        assert ls !\u003d null : \"List cannot be null\";","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"willyamped"},"content":"        return ls.printAddTask();","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"willyamped"},"content":"     * Displays the list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"willyamped"},"content":"     * @param ls The list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"willyamped"},"content":"     * @return A string that contains the list of tasks.","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"willyamped"},"content":"    public String displayList(TaskList ls) {","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"willyamped"},"content":"        assert ls !\u003d null : \"List cannot be null\";","lastModifiedDate":"2021-09-05"},{"lineNumber":69,"author":{"gitId":"willyamped"},"content":"        return ls.displayList();","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"willyamped"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"willyamped"},"content":"     * Prints a task at a certain index in the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"willyamped"},"content":"     * @param ls The list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"willyamped"},"content":"     * @param index The index of the tasks in the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"willyamped"},"content":"     * @return A string representation of a task.","lastModifiedDate":"2021-09-05"},{"lineNumber":77,"author":{"gitId":"willyamped"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"willyamped"},"content":"    public String printCurrentTask(TaskList ls, int index) {","lastModifiedDate":"2021-08-31"},{"lineNumber":79,"author":{"gitId":"willyamped"},"content":"        assert ls !\u003d null : \"List cannot be null\";","lastModifiedDate":"2021-09-05"},{"lineNumber":80,"author":{"gitId":"willyamped"},"content":"        return ls.getTask(index).toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":81,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"willyamped"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"willyamped":82}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"willyamped"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"willyamped"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"willyamped"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"willyamped"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"willyamped"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"willyamped"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"willyamped"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"willyamped"},"content":"        \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-background-color: #b8bade; -fx-background-radius: 10; -fx-padding: 10;\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\" maxHeight\u003d\"Infinity\" prefWidth\u003d\"260\"/\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"willyamped"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"69.0\" fitWidth\u003d\"69.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"willyamped"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"willyamped"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"willyamped"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"willyamped"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"willyamped"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"willyamped":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"willyamped"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"willyamped"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"willyamped"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"willyamped"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"willyamped"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"willyamped"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"willyamped"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"willyamped"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"willyamped"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"willyamped"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"willyamped"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"willyamped"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"willyamped"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"willyamped"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"willyamped"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"willyamped"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"willyamped"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"willyamped":19}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willyamped"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"willyamped"},"content":"import org.junit.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"willyamped"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"willyamped"},"content":"import static org.junit.Assert.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"willyamped"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"willyamped"},"content":"    String s \u003d \"event swimming /on Monday 2pm\";","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"willyamped"},"content":"    String[] arr \u003d s.split(\" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"willyamped"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"willyamped"},"content":"    public void testGetDescription() {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"willyamped"},"content":"        assertEquals(\"swimming \",TaskList.getDescription(arr));","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"willyamped"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"willyamped"},"content":"    public void testGetDeadline() {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"willyamped"},"content":"        assertEquals(\"on: Monday 2pm\", TaskList.getDeadline(arr));","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"willyamped"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"willyamped"},"content":"    public void testGetSize() {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"willyamped"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"willyamped"},"content":"        assertEquals(0, taskList.getSize());","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"willyamped"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"willyamped"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"willyamped"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"willyamped":30}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"willyamped"},"content":"todo stretch everyday","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"willyamped"},"content":"deadline math homework /by Sunday","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"willyamped"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"willyamped"},"content":"done 1","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"willyamped"},"content":"done 2","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"willyamped"},"content":"bye","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"willyamped":6}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"willyamped"},"content":"if ! javac -cp ../src/main/java/duke -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"willyamped"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"willyamped":2,"-":32}}]
