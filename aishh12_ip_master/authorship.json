[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"aishh12"},"content":"# Blitz project template","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"aishh12"},"content":"3. After that, locate the `src/main/java/Blitz.java` file, right-click it, and choose `Run Blitz.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"aishh12":2,"-":22}},{"path":"src/main/java/Blitz.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aishh12"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"aishh12"},"content":"import java.util.List;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"aishh12"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"aishh12"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"aishh12"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"aishh12"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"aishh12"},"content":"public class Blitz {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"aishh12"},"content":"    private static List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"aishh12"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"aishh12"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"aishh12"},"content":"            readFileContents(\"data/blitz.txt\");","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"aishh12"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"aishh12"},"content":"            System.err.println(e);","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"aishh12"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"aishh12"},"content":"        printLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"aishh12"},"content":"        System.out.println(\"\\tHola! I\u0027m Blitz :)\");","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"aishh12"},"content":"        printList();","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"aishh12"},"content":"        printFormatted(\"So what can I do for you today?\");","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"aishh12"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"aishh12"},"content":"        //command from the user","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"aishh12"},"content":"        String command \u003d scanner.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"aishh12"},"content":"        while (!command.equals(\"bye\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"aishh12"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"aishh12"},"content":"                checkCommand(command);","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"aishh12"},"content":"            } catch (BlitzException ex) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"aishh12"},"content":"                printFormatted(ex.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"aishh12"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"aishh12"},"content":"            command \u003d scanner.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"aishh12"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"aishh12"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"aishh12"},"content":"            updateFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"aishh12"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"aishh12"},"content":"            System.err.println(e);","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"aishh12"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"aishh12"},"content":"        //if the user enter \"bye\"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"aishh12"},"content":"        printFormatted(\"Adi√≥s. Hope to see you again soon!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"aishh12"},"content":"    /* To print horizontal line */","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"aishh12"},"content":"    private static void printLine() {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"aishh12"},"content":"        System.out.print(\u0027\\t\u0027);","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"aishh12"},"content":"        for (int i \u003d 0; i \u003c 60; i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"aishh12"},"content":"            System.out.print(\u0027_\u0027);","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"aishh12"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"aishh12"},"content":"        System.out.println(\"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"aishh12"},"content":"    /* To print a given string between horizontal lines */","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"aishh12"},"content":"    private static void printFormatted(String str) {","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"aishh12"},"content":"        printLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"aishh12"},"content":"        System.out.println(\"\\t\" + str);","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"aishh12"},"content":"        printLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"aishh12"},"content":"    /* To print list of tasks between horizontal lines */","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"aishh12"},"content":"    public static void printList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"aishh12"},"content":"        int ctr \u003d 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"aishh12"},"content":"        System.out.println(\"\\tHere are the tasks in your list:\");","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"aishh12"},"content":"        if(tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"aishh12"},"content":"            System.out.println(\"\\t---No items stored yet---\");","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"aishh12"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"aishh12"},"content":"            for (Task task: tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"aishh12"},"content":"                System.out.println(\"\\t\" + ctr + \".\" + tasks.get(ctr - 1));","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"aishh12"},"content":"                ctr++;","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"aishh12"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"aishh12"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"aishh12"},"content":"    /* To get the index of the task completed or to be deleted */","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"aishh12"},"content":"    private static int getTaskNumber(String keyword, String task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"aishh12"},"content":"        int idx \u003d 0;","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"aishh12"},"content":"        for (int i \u003d task.length() - 1; i \u003e keyword.length(); i--) {","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"aishh12"},"content":"            idx+\u003d (task.charAt(i) - 48) * Math.pow(10, task.length() - 1 - i);","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"aishh12"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"aishh12"},"content":"        return idx - 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"aishh12"},"content":"    /* Returns index of task completed or to be deleted if valid, otherwise, throws exception */","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"aishh12"},"content":"    private static int getIndex(String command) throws BlitzException {","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"aishh12"},"content":"        String keyword \u003d command.substring(0, command.indexOf(\u0027 \u0027));","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"aishh12"},"content":"        int index \u003d getTaskNumber(keyword,command);","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"aishh12"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"aishh12"},"content":"            throw new BlitzException(\"You are attempting to \"","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"aishh12"},"content":"                    + (keyword.equals(\"done\") ? \"mark\" : \"delete\") + \" an invalid task number!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"aishh12"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"aishh12"},"content":"        return index;","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"aishh12"},"content":"    /* Reads the tasks from the file and stores them in the list when program starts */","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"aishh12"},"content":"    private static void readFileContents(String filePath) throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"aishh12"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"aishh12"},"content":"        if (f.exists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"aishh12"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"aishh12"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"aishh12"},"content":"                String task \u003d s.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"aishh12"},"content":"                String[] keywords \u003d task.split(\" \\\\| \");","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"aishh12"},"content":"                String done \u003d keywords[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"aishh12"},"content":"                Task current \u003d new Task(\"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"aishh12"},"content":"                switch(task.charAt(0)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"aishh12"},"content":"                case \u0027T\u0027 :","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"aishh12"},"content":"                    current \u003d new Todo(keywords[2]);","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"aishh12"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"aishh12"},"content":"                case \u0027D\u0027 :","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"aishh12"},"content":"                    current \u003d new Deadline(keywords[2], keywords[3]);","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"aishh12"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"aishh12"},"content":"                default :","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"aishh12"},"content":"                    current \u003d new Event(keywords[2], keywords[3]);","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"aishh12"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"aishh12"},"content":"                if(done.equals(1)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"aishh12"},"content":"                    current.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"aishh12"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"aishh12"},"content":"                tasks.add(current);","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"aishh12"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"aishh12"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"aishh12"},"content":"            if(f.getParentFile() !\u003d null \u0026\u0026 !f.getParentFile().exists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"aishh12"},"content":"                f.getParentFile().mkdirs();","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"aishh12"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"aishh12"},"content":"            f.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"aishh12"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"aishh12"},"content":"    /* Updates the text file with current state of list before exiting */","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"aishh12"},"content":"    private static void updateFile() throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"aishh12"},"content":"        FileWriter fw \u003d new FileWriter(\"data/blitz.txt\");","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"aishh12"},"content":"        for(Task t : tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"aishh12"},"content":"            if(t instanceof Todo) {","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"aishh12"},"content":"                fw.write(\"T | \" + t.getStatusIcon() + \" | \" + t.getDescription()","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"aishh12"},"content":"                        + System.lineSeparator());","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"aishh12"},"content":"            } else if (t instanceof Deadline) {","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"aishh12"},"content":"                fw.write(\"D | \" + t.getStatusIcon() + \" | \" + t.getDescription()","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"aishh12"},"content":"                        + \" | \" + ((Deadline) t).getBy() + System.lineSeparator());","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"aishh12"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"aishh12"},"content":"                fw.write(\"E | \" + t.getStatusIcon() + \" | \" + t.getDescription()","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"aishh12"},"content":"                        + \" | \" + ((Event) t).getDate() + System.lineSeparator());","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"aishh12"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":146,"author":{"gitId":"aishh12"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":147,"author":{"gitId":"aishh12"},"content":"        fw.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":148,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":149,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":150,"author":{"gitId":"aishh12"},"content":"    /* Method to check for the validity of user input */","lastModifiedDate":"2021-08-24"},{"lineNumber":151,"author":{"gitId":"aishh12"},"content":"    public static void checkCommand(String command) throws BlitzException {","lastModifiedDate":"2021-08-24"},{"lineNumber":152,"author":{"gitId":"aishh12"},"content":"        String[] keywords \u003d command.split(\" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":153,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":154,"author":{"gitId":"aishh12"},"content":"        //stores the first word (keyword) in the user input","lastModifiedDate":"2021-08-24"},{"lineNumber":155,"author":{"gitId":"aishh12"},"content":"        String firstKeyword \u003d keywords[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":156,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":157,"author":{"gitId":"aishh12"},"content":"        //stores whether keyword is a task or calling a feature","lastModifiedDate":"2021-08-24"},{"lineNumber":158,"author":{"gitId":"aishh12"},"content":"        boolean isTask \u003d firstKeyword.equals(\"todo\") || firstKeyword.equals(\"event\")","lastModifiedDate":"2021-08-24"},{"lineNumber":159,"author":{"gitId":"aishh12"},"content":"                || firstKeyword.equals(\"deadline\");","lastModifiedDate":"2021-08-24"},{"lineNumber":160,"author":{"gitId":"aishh12"},"content":"        boolean isFeature \u003d firstKeyword.equals(\"list\") || firstKeyword.equals(\"done\")","lastModifiedDate":"2021-08-24"},{"lineNumber":161,"author":{"gitId":"aishh12"},"content":"                || firstKeyword.equals(\"delete\");","lastModifiedDate":"2021-08-24"},{"lineNumber":162,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":163,"author":{"gitId":"aishh12"},"content":"        //suppose it\u0027s a valid keyword","lastModifiedDate":"2021-08-24"},{"lineNumber":164,"author":{"gitId":"aishh12"},"content":"        if(isTask || isFeature) {","lastModifiedDate":"2021-08-24"},{"lineNumber":165,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":166,"author":{"gitId":"aishh12"},"content":"            //when keyword is not followed by anything","lastModifiedDate":"2021-08-24"},{"lineNumber":167,"author":{"gitId":"aishh12"},"content":"            if (isTask \u0026\u0026 command.length() \u003c firstKeyword.length() + 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":168,"author":{"gitId":"aishh12"},"content":"                throw new BlitzException(\"The description of a \" + firstKeyword","lastModifiedDate":"2021-08-24"},{"lineNumber":169,"author":{"gitId":"aishh12"},"content":"                        + \" cannot be empty.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":170,"author":{"gitId":"aishh12"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":171,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":172,"author":{"gitId":"aishh12"},"content":"            if (isFeature) {","lastModifiedDate":"2021-08-24"},{"lineNumber":173,"author":{"gitId":"aishh12"},"content":"                switch (firstKeyword) {","lastModifiedDate":"2021-08-24"},{"lineNumber":174,"author":{"gitId":"aishh12"},"content":"                case \"list\":","lastModifiedDate":"2021-08-24"},{"lineNumber":175,"author":{"gitId":"aishh12"},"content":"                    if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":176,"author":{"gitId":"aishh12"},"content":"                        throw new BlitzException(\"No items added to list yet!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":177,"author":{"gitId":"aishh12"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":178,"author":{"gitId":"aishh12"},"content":"                    printLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":179,"author":{"gitId":"aishh12"},"content":"                    printList();","lastModifiedDate":"2021-08-24"},{"lineNumber":180,"author":{"gitId":"aishh12"},"content":"                    printLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":181,"author":{"gitId":"aishh12"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":182,"author":{"gitId":"aishh12"},"content":"                case \"done\":","lastModifiedDate":"2021-08-24"},{"lineNumber":183,"author":{"gitId":"aishh12"},"content":"                    try {","lastModifiedDate":"2021-08-24"},{"lineNumber":184,"author":{"gitId":"aishh12"},"content":"                        int index \u003d getIndex(command);","lastModifiedDate":"2021-08-24"},{"lineNumber":185,"author":{"gitId":"aishh12"},"content":"                        Task finished \u003d tasks.get(index);","lastModifiedDate":"2021-08-24"},{"lineNumber":186,"author":{"gitId":"aishh12"},"content":"                        finished.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":187,"author":{"gitId":"aishh12"},"content":"                        printFormatted(\"Nice! I\u0027ve marked this task as done:\\n\" + \"\\t\\t\"","lastModifiedDate":"2021-08-24"},{"lineNumber":188,"author":{"gitId":"aishh12"},"content":"                                + finished);","lastModifiedDate":"2021-08-24"},{"lineNumber":189,"author":{"gitId":"aishh12"},"content":"                        } catch (BlitzException ex) {","lastModifiedDate":"2021-08-24"},{"lineNumber":190,"author":{"gitId":"aishh12"},"content":"                            printFormatted(ex.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":191,"author":{"gitId":"aishh12"},"content":"                        }","lastModifiedDate":"2021-08-24"},{"lineNumber":192,"author":{"gitId":"aishh12"},"content":"                        break;","lastModifiedDate":"2021-08-24"},{"lineNumber":193,"author":{"gitId":"aishh12"},"content":"                case \"delete\":","lastModifiedDate":"2021-08-24"},{"lineNumber":194,"author":{"gitId":"aishh12"},"content":"                        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":195,"author":{"gitId":"aishh12"},"content":"                            int index \u003d getIndex(command);","lastModifiedDate":"2021-08-24"},{"lineNumber":196,"author":{"gitId":"aishh12"},"content":"                            Task deleted \u003d tasks.remove(index);","lastModifiedDate":"2021-08-24"},{"lineNumber":197,"author":{"gitId":"aishh12"},"content":"                            printFormatted(\"Noted. I\u0027ve removed this task:\" + \"\\n\\t\\t\" + deleted","lastModifiedDate":"2021-08-24"},{"lineNumber":198,"author":{"gitId":"aishh12"},"content":"                                    + \"\\n\\tNow you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":199,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":200,"author":{"gitId":"aishh12"},"content":"                        } catch (BlitzException ex) {","lastModifiedDate":"2021-08-24"},{"lineNumber":201,"author":{"gitId":"aishh12"},"content":"                            printFormatted(ex.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":202,"author":{"gitId":"aishh12"},"content":"                        }","lastModifiedDate":"2021-08-24"},{"lineNumber":203,"author":{"gitId":"aishh12"},"content":"                        break;","lastModifiedDate":"2021-08-24"},{"lineNumber":204,"author":{"gitId":"aishh12"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":205,"author":{"gitId":"aishh12"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":206,"author":{"gitId":"aishh12"},"content":"                Task current \u003d new Task(\"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":207,"author":{"gitId":"aishh12"},"content":"                String[] dateParts \u003d command.split(\" /\");","lastModifiedDate":"2021-08-24"},{"lineNumber":208,"author":{"gitId":"aishh12"},"content":"                String[] descriptionParts \u003d dateParts[0].split(\" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":209,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":210,"author":{"gitId":"aishh12"},"content":"                switch (firstKeyword) {","lastModifiedDate":"2021-08-24"},{"lineNumber":211,"author":{"gitId":"aishh12"},"content":"                case \"todo\":","lastModifiedDate":"2021-08-24"},{"lineNumber":212,"author":{"gitId":"aishh12"},"content":"                    current \u003d new Todo(command.substring(5));","lastModifiedDate":"2021-08-24"},{"lineNumber":213,"author":{"gitId":"aishh12"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":214,"author":{"gitId":"aishh12"},"content":"                case \"deadline\":","lastModifiedDate":"2021-08-24"},{"lineNumber":215,"author":{"gitId":"aishh12"},"content":"                    current \u003d new Deadline(command.substring(9, command.indexOf(\u0027/\u0027) - 1),","lastModifiedDate":"2021-08-24"},{"lineNumber":216,"author":{"gitId":"aishh12"},"content":"                            command.substring(command.indexOf(\u0027/\u0027) + 4));","lastModifiedDate":"2021-08-24"},{"lineNumber":217,"author":{"gitId":"aishh12"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":218,"author":{"gitId":"aishh12"},"content":"                default:","lastModifiedDate":"2021-08-24"},{"lineNumber":219,"author":{"gitId":"aishh12"},"content":"                    current \u003d new Event(command.substring(6, command.indexOf(\u0027/\u0027) - 1),","lastModifiedDate":"2021-08-24"},{"lineNumber":220,"author":{"gitId":"aishh12"},"content":"                            command.substring(command.indexOf(\u0027/\u0027) + 4));","lastModifiedDate":"2021-08-24"},{"lineNumber":221,"author":{"gitId":"aishh12"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":222,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":223,"author":{"gitId":"aishh12"},"content":"                tasks.add(current);","lastModifiedDate":"2021-08-24"},{"lineNumber":224,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":225,"author":{"gitId":"aishh12"},"content":"                printFormatted(\"Got it. I\u0027ve added this task:\" + \"\\n\\t\\t\" + current + \"\\n\\tNow you have \"","lastModifiedDate":"2021-08-24"},{"lineNumber":226,"author":{"gitId":"aishh12"},"content":"                        + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":227,"author":{"gitId":"aishh12"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":228,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":229,"author":{"gitId":"aishh12"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":230,"author":{"gitId":"aishh12"},"content":"            //if the keyword is not valid","lastModifiedDate":"2021-08-24"},{"lineNumber":231,"author":{"gitId":"aishh12"},"content":"            throw new BlitzException(\"Sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-24"},{"lineNumber":232,"author":{"gitId":"aishh12"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":233,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":234,"author":{"gitId":"aishh12"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"aishh12":234}},{"path":"src/main/java/BlitzException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aishh12"},"content":"public class BlitzException extends Exception {","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"aishh12"},"content":"    protected String message;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"aishh12"},"content":"    public BlitzException(String message) {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"aishh12"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"aishh12"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"aishh12"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"aishh12"},"content":"        return \"OOPS!!! \" + this.message;","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"aishh12"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"aishh12":12}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aishh12"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"aishh12"},"content":"    protected String by;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"aishh12"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"aishh12"},"content":"            super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"aishh12"},"content":"            this.by \u003d by;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"aishh12"},"content":"    public String getBy() {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"aishh12"},"content":"        return this.by;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"aishh12"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"aishh12"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"aishh12"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"aishh12"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"aishh12":19}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aishh12"},"content":"public class Event extends Task{","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"aishh12"},"content":"    protected String date;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"aishh12"},"content":"    public Event(String description, String date) {","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"aishh12"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"aishh12"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"aishh12"},"content":"    public String getDate() {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"aishh12"},"content":"        return this.date;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"aishh12"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"aishh12"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"aishh12"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.date + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"aishh12"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"aishh12":19}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aishh12"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"aishh12"},"content":"        protected String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"aishh12"},"content":"        protected boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"aishh12"},"content":"        public Task(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"aishh12"},"content":"            this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"aishh12"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"aishh12"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"aishh12"},"content":"        public String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"aishh12"},"content":"            return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"aishh12"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"aishh12"},"content":"        public void markAsDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"aishh12"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"aishh12"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"aishh12"},"content":"        public String getDescription() {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"aishh12"},"content":"            return description;","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"aishh12"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"aishh12"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"aishh12"},"content":"        public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"aishh12"},"content":"            return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"aishh12"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"aishh12"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"aishh12":26}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aishh12"},"content":"public class Todo extends Task{","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"aishh12"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"aishh12"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"aishh12"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"aishh12"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"aishh12"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"aishh12"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"aishh12":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"aishh12"},"content":"todo go cycling","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"aishh12"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"aishh12"},"content":"list","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"aishh12"},"content":"delete 4","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"aishh12"},"content":"list","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"aishh12"},"content":"done 3","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"aishh12"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"aishh12"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"aishh12":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"aishh12"},"content":"java -classpath ..\\bin Blitz \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"aishh12":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"aishh12"},"content":"# delete data from previous run","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"aishh12"},"content":"if [ -e \"./data\" ]","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"aishh12"},"content":"then","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"aishh12"},"content":"    rm -rf ./data","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"aishh12"},"content":"fi","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"aishh12"},"content":"java -classpath ../bin Blitz \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"aishh12":7,"-":37}}]
