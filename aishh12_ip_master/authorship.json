[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aishh12"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"aishh12"},"content":"    protected String by;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"aishh12"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"aishh12"},"content":"            super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"aishh12"},"content":"            this.by \u003d by;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"aishh12"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"aishh12"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"aishh12"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"aishh12"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"aishh12":15}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aishh12"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"aishh12"},"content":"import java.util.List;","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"aishh12"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"aishh12"},"content":"    private static List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"aishh12"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"aishh12"},"content":"        printFormatted(\"Hola! I\u0027m Blitz :)\\n\\tWhat can I do for you?\");","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"aishh12"},"content":"        //command from the user","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"aishh12"},"content":"        String command \u003d scanner.nextLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"aishh12"},"content":"        while (!command.equals(\"bye\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"aishh12"},"content":"            try {","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"aishh12"},"content":"                checkCommand(command);","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"aishh12"},"content":"            } catch (DukeException ex) {","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"aishh12"},"content":"                printFormatted(ex.toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"aishh12"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"aishh12"},"content":"            command \u003d scanner.nextLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"aishh12"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"aishh12"},"content":"        //if the user enter \"bye\"","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"aishh12"},"content":"        printFormatted(\"Adi√≥s. Hope to see you again soon!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"aishh12"},"content":"    /* To print horizontal line */","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"aishh12"},"content":"    public static void printLine() {","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"aishh12"},"content":"        System.out.print(\u0027\\t\u0027);","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"aishh12"},"content":"        for (int i \u003d 0; i \u003c 60; i++) {","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"aishh12"},"content":"            System.out.print(\u0027_\u0027);","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"aishh12"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"aishh12"},"content":"        System.out.println(\"\");","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"aishh12"},"content":"    /* To print a given string between horizontal lines */","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"aishh12"},"content":"    public static void printFormatted(String str) {","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"aishh12"},"content":"        printLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"aishh12"},"content":"        System.out.println(\"\\t\" + str);","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"aishh12"},"content":"        printLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"aishh12"},"content":"    /* To print list of tasks between horizontal lines */","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"aishh12"},"content":"    public static void printList() {","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"aishh12"},"content":"        int ctr \u003d 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"aishh12"},"content":"        printLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"aishh12"},"content":"        System.out.println(\"\\tHere are the tasks in your list:\");","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"aishh12"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"aishh12"},"content":"            System.out.println(\"\\t\" + ctr+ \".\" + tasks.get(ctr - 1));","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"aishh12"},"content":"            ctr++;","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"aishh12"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"aishh12"},"content":"        printLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"aishh12"},"content":"    /*To get the index of the task completed or to be deleted */","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"aishh12"},"content":"    public static int getTaskNumber(String keyword, String task) {","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"aishh12"},"content":"        int idx \u003d 0;","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"aishh12"},"content":"        for (int i \u003d task.length() - 1; i \u003e keyword.length(); i--) {","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"aishh12"},"content":"            idx+\u003d (task.charAt(i) - 48) * Math.pow(10, task.length() - 1 - i);","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"aishh12"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"aishh12"},"content":"        return idx - 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"aishh12"},"content":"    /*Returns index of task completed or to be deleted if valid, otherwise, throws exception*/","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"aishh12"},"content":"    public static int getIndex(String command) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"aishh12"},"content":"        String keyword \u003d command.substring(0, command.indexOf(\u0027 \u0027));","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"aishh12"},"content":"        int index \u003d getTaskNumber(keyword,command);","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"aishh12"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"aishh12"},"content":"            throw new DukeException(\"You are attempting to \" + (keyword.equals(\"done\") ? \"mark\" : \"delete\")","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"aishh12"},"content":"                    +\" an invalid task number!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"aishh12"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"aishh12"},"content":"        return index;","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"aishh12"},"content":"    /*Method to check for the validity of user input */","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"aishh12"},"content":"    public static void checkCommand(String command) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"aishh12"},"content":"        //stores the first word (keyword) in the user input","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"aishh12"},"content":"        String keyword \u003d command.substring(0, command.contains(\" \") ? command.indexOf(\u0027 \u0027) : command.length());","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"aishh12"},"content":"        //stores whether keyword is a task or calling a feature","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"aishh12"},"content":"        boolean isTask \u003d keyword.equals(\"todo\") || keyword.equals(\"event\") || keyword.equals(\"deadline\");","lastModifiedDate":"2021-08-19"},{"lineNumber":85,"author":{"gitId":"aishh12"},"content":"        boolean isFeature \u003d keyword.equals(\"list\") || keyword.equals(\"done\") || keyword.equals(\"delete\");","lastModifiedDate":"2021-08-19"},{"lineNumber":86,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":87,"author":{"gitId":"aishh12"},"content":"        //suppose it\u0027s a valid keyword","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"aishh12"},"content":"        if(isTask || isFeature) {","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"aishh12"},"content":"            //when keyword is not followed by anything","lastModifiedDate":"2021-08-19"},{"lineNumber":91,"author":{"gitId":"aishh12"},"content":"            if (isTask \u0026\u0026 command.length() \u003c keyword.length() + 2) {","lastModifiedDate":"2021-08-19"},{"lineNumber":92,"author":{"gitId":"aishh12"},"content":"                throw new DukeException(\"The description of a \" + keyword + \" cannot be empty.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":93,"author":{"gitId":"aishh12"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":94,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":95,"author":{"gitId":"aishh12"},"content":"            if (isFeature) {","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"aishh12"},"content":"                switch (keyword) {","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"aishh12"},"content":"                case \"list\":","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"aishh12"},"content":"                    if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-19"},{"lineNumber":99,"author":{"gitId":"aishh12"},"content":"                        throw new DukeException(\"No items added to list yet!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":100,"author":{"gitId":"aishh12"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":101,"author":{"gitId":"aishh12"},"content":"                    printList();","lastModifiedDate":"2021-08-19"},{"lineNumber":102,"author":{"gitId":"aishh12"},"content":"                    break;","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"aishh12"},"content":"                case \"done\":","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"aishh12"},"content":"                    try {","lastModifiedDate":"2021-08-19"},{"lineNumber":105,"author":{"gitId":"aishh12"},"content":"                        int index \u003d getIndex(command);","lastModifiedDate":"2021-08-19"},{"lineNumber":106,"author":{"gitId":"aishh12"},"content":"                        Task finished \u003d tasks.get(index);","lastModifiedDate":"2021-08-19"},{"lineNumber":107,"author":{"gitId":"aishh12"},"content":"                        finished.markAsDone();","lastModifiedDate":"2021-08-19"},{"lineNumber":108,"author":{"gitId":"aishh12"},"content":"                        printFormatted(\"Nice! I\u0027ve marked this task as done:\\n\" + \"\\t\\t\"","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"aishh12"},"content":"                                + finished);","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"aishh12"},"content":"                        } catch (DukeException ex) {","lastModifiedDate":"2021-08-19"},{"lineNumber":111,"author":{"gitId":"aishh12"},"content":"                            printFormatted(ex.toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":112,"author":{"gitId":"aishh12"},"content":"                        }","lastModifiedDate":"2021-08-19"},{"lineNumber":113,"author":{"gitId":"aishh12"},"content":"                        break;","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"aishh12"},"content":"                case \"delete\":","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"aishh12"},"content":"                        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":116,"author":{"gitId":"aishh12"},"content":"                            int index \u003d getIndex(command);","lastModifiedDate":"2021-08-19"},{"lineNumber":117,"author":{"gitId":"aishh12"},"content":"                            Task deleted \u003d tasks.remove(index);","lastModifiedDate":"2021-08-19"},{"lineNumber":118,"author":{"gitId":"aishh12"},"content":"                            printFormatted(\"Noted. I\u0027ve removed this task:\" + \"\\n\\t\\t\" + deleted + \"\\n\\tNow you have \"","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"aishh12"},"content":"                                    + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":121,"author":{"gitId":"aishh12"},"content":"                        } catch (DukeException ex) {","lastModifiedDate":"2021-08-19"},{"lineNumber":122,"author":{"gitId":"aishh12"},"content":"                            printFormatted(ex.toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":123,"author":{"gitId":"aishh12"},"content":"                        }","lastModifiedDate":"2021-08-19"},{"lineNumber":124,"author":{"gitId":"aishh12"},"content":"                        break;","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"aishh12"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"aishh12"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"aishh12"},"content":"                Task current \u003d new Task(\"\");","lastModifiedDate":"2021-08-19"},{"lineNumber":128,"author":{"gitId":"aishh12"},"content":"                switch (keyword) {","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"aishh12"},"content":"                case \"todo\":","lastModifiedDate":"2021-08-23"},{"lineNumber":130,"author":{"gitId":"aishh12"},"content":"                    current \u003d new Todo(command.substring(5));","lastModifiedDate":"2021-08-19"},{"lineNumber":131,"author":{"gitId":"aishh12"},"content":"                    break;","lastModifiedDate":"2021-08-23"},{"lineNumber":132,"author":{"gitId":"aishh12"},"content":"                case \"deadline\":","lastModifiedDate":"2021-08-23"},{"lineNumber":133,"author":{"gitId":"aishh12"},"content":"                    current \u003d new Deadline(command.substring(9, command.indexOf(\u0027/\u0027) - 1),","lastModifiedDate":"2021-08-19"},{"lineNumber":134,"author":{"gitId":"aishh12"},"content":"                        command.substring(command.indexOf(\u0027/\u0027) + 4));","lastModifiedDate":"2021-08-19"},{"lineNumber":135,"author":{"gitId":"aishh12"},"content":"                    break;","lastModifiedDate":"2021-08-23"},{"lineNumber":136,"author":{"gitId":"aishh12"},"content":"                case \"event\":","lastModifiedDate":"2021-08-23"},{"lineNumber":137,"author":{"gitId":"aishh12"},"content":"                    current \u003d new Event(command.substring(6, command.indexOf(\u0027/\u0027) - 1),","lastModifiedDate":"2021-08-19"},{"lineNumber":138,"author":{"gitId":"aishh12"},"content":"                        command.substring(command.indexOf(\u0027/\u0027) + 4, command.indexOf(\u0027-\u0027)),","lastModifiedDate":"2021-08-19"},{"lineNumber":139,"author":{"gitId":"aishh12"},"content":"                        command.substring(command.indexOf(\u0027-\u0027) + 1));","lastModifiedDate":"2021-08-19"},{"lineNumber":140,"author":{"gitId":"aishh12"},"content":"                    break;","lastModifiedDate":"2021-08-23"},{"lineNumber":141,"author":{"gitId":"aishh12"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":142,"author":{"gitId":"aishh12"},"content":"                tasks.add(current);","lastModifiedDate":"2021-08-19"},{"lineNumber":143,"author":{"gitId":"aishh12"},"content":"                printFormatted(\"Got it. I\u0027ve added this task:\" + \"\\n\\t\\t\" + current + \"\\n\\tNow you have \"","lastModifiedDate":"2021-08-23"},{"lineNumber":144,"author":{"gitId":"aishh12"},"content":"                        + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":145,"author":{"gitId":"aishh12"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":146,"author":{"gitId":"aishh12"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":147,"author":{"gitId":"aishh12"},"content":"            //if the keyword is not valid","lastModifiedDate":"2021-08-23"},{"lineNumber":148,"author":{"gitId":"aishh12"},"content":"            throw new DukeException(\"Sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-19"},{"lineNumber":149,"author":{"gitId":"aishh12"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"aishh12":146,"-":5}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aishh12"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"aishh12"},"content":"    protected String message;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"aishh12"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"aishh12"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"aishh12"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"aishh12"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"aishh12"},"content":"        return \"OOPS!!! \" + this.message;","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"aishh12"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"aishh12":12}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aishh12"},"content":"public class Event extends Task{","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"aishh12"},"content":"    protected String start;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"aishh12"},"content":"    protected String end;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"aishh12"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"aishh12"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"aishh12"},"content":"        this.start \u003d start;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"aishh12"},"content":"        this.end \u003d end;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"aishh12"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"aishh12"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"aishh12"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.start + \"-\" + this.end + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"aishh12"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"aishh12":17}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aishh12"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"aishh12"},"content":"        protected String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"aishh12"},"content":"        protected boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"aishh12"},"content":"        public Task(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"aishh12"},"content":"            this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"aishh12"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"aishh12"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"aishh12"},"content":"        public String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"aishh12"},"content":"            return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"aishh12"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"aishh12"},"content":"        public void markAsDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"aishh12"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"aishh12"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"aishh12"},"content":"        @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"aishh12"},"content":"        public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"aishh12"},"content":"            return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"aishh12"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"aishh12"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"aishh12":22}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aishh12"},"content":"public class Todo extends Task{","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"aishh12"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"aishh12"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"aishh12"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"aishh12"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"aishh12"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"aishh12"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"aishh12":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"aishh12"},"content":"todo read book","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"aishh12"},"content":"deadline return book /by June 6th","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"aishh12"},"content":"event project meeting/at Aug 6th 2-4pm","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"aishh12"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"aishh12"},"content":"delete 4","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"aishh12"},"content":"done 3","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"aishh12"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"aishh12"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"aishh12":8}}]
