[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"aishh12"},"content":"# Blitz project template","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"aishh12"},"content":"3. After that, locate the `src/main/java/Blitz.java` file, right-click it, and choose `Run Blitz.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"aishh12":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"aishh12"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.8\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"aishh12"},"content":"checkstyle {","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"aishh12"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"aishh12"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"aishh12"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"aishh12"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"aishh12"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"aishh12"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"aishh12"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"aishh12"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"aishh12"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"aishh12"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"aishh12"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"aishh12"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"aishh12"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"aishh12"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"aishh12"},"content":"javafx {","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"aishh12"},"content":"    modules \u003d [\u0027javafx.base\u0027, \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027, \u0027javafx.base\u0027]","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"aishh12"},"content":"    archiveBaseName \u003d \"Blitz\"","lastModifiedDate":"2021-09-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"aishh12"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"aishh12":25,"-":45}},{"path":"src/main/java/Blitz.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aishh12"},"content":"public class Blitz {","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"aishh12"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"aishh12"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"aishh12"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"aishh12"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"aishh12"},"content":"     * Creates Blitz object with given file path.","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"aishh12"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"aishh12"},"content":"     * @param filePath","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"aishh12"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"aishh12"},"content":"    public Blitz(String filePath) {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"aishh12"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"aishh12"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"aishh12"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"aishh12"},"content":"            tasks \u003d new TaskList(storage.loadFileContents());","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"aishh12"},"content":"        } catch (BlitzException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"aishh12"},"content":"            ui.getLoadErrorMessage();","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"aishh12"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"aishh12"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"aishh12"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"aishh12"},"content":"     * Returns Blitz\u0027s storage object.","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"aishh12"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"aishh12"},"content":"     * @return Blitz\u0027s storage object.","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"aishh12"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"aishh12"},"content":"    public Storage getStorage() {","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"aishh12"},"content":"        return storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"aishh12"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"aishh12"},"content":"     * Returns list of tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"aishh12"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"aishh12"},"content":"     * @return list of tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"aishh12"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"aishh12"},"content":"    public TaskList getTasks() {","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"aishh12"},"content":"        return tasks;","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"aishh12"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"aishh12"},"content":"     * Returns Blitz\u0027s Ui.","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"aishh12"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"aishh12"},"content":"     * @return Blitz\u0027s Ui.","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"aishh12"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"aishh12"},"content":"    public Ui getUi() {","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"aishh12"},"content":"        return ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"aishh12"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"aishh12":50}},{"path":"src/main/java/BlitzException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aishh12"},"content":"public class BlitzException extends Exception {","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"aishh12"},"content":"    protected String message;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"aishh12"},"content":"    public BlitzException(String message) {","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"aishh12"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"aishh12"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"aishh12"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"aishh12"},"content":"        return \"OOPS!!! \" + this.message;","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"aishh12"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"aishh12":13}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aishh12"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"aishh12"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"aishh12"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"aishh12"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"aishh12"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"aishh12"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"aishh12"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"aishh12"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"aishh12"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"aishh12"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"aishh12"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"aishh12"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"aishh12"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"aishh12"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"aishh12"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"aishh12"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"aishh12"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"aishh12"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"aishh12"},"content":"     * Creates dialog box with the given text and image.","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"aishh12"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"aishh12"},"content":"     * @param text test to be displayed beside image.","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"aishh12"},"content":"     * @param img image to be displayed beside text.","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"aishh12"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"aishh12"},"content":"    public DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"aishh12"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"aishh12"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"aishh12"},"content":"                    .getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"aishh12"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"aishh12"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"aishh12"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"aishh12"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"aishh12"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"aishh12"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"aishh12"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"aishh12"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"aishh12"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"aishh12"},"content":"     * Flips the dialog box such that the ImageView is on the left.","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"aishh12"},"content":"     *     and text on the right.","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"aishh12"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"aishh12"},"content":"    private void flip() {","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"aishh12"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"aishh12"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"aishh12"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"aishh12"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"aishh12"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"aishh12"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"aishh12"},"content":"    public static DialogBox getBlitzDialog(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"aishh12"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"aishh12"},"content":"        db.flip();","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"aishh12"},"content":"        return db;","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"aishh12"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"aishh12":63}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aishh12"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"aishh12"},"content":"public class Launcher {","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"aishh12"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"aishh12"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"aishh12"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"aishh12":7}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aishh12"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"aishh12"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"aishh12"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"aishh12"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"aishh12"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"aishh12"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"aishh12"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"aishh12"},"content":"    private Blitz blitz \u003d new Blitz(\"data/blitz.txt\");","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"aishh12"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"aishh12"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"aishh12"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"aishh12"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"aishh12"},"content":"                    .getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"aishh12"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"aishh12"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"aishh12"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"aishh12"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setBlitz(blitz);","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"aishh12"},"content":"            stage.show();","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"aishh12"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"aishh12"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"aishh12"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"aishh12"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"aishh12":27}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aishh12"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"aishh12"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"aishh12"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"aishh12"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"aishh12"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"aishh12"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"aishh12"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"aishh12"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"aishh12"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"aishh12"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"aishh12"},"content":"    private boolean flag \u003d false;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"aishh12"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"aishh12"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"aishh12"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"aishh12"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"aishh12"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"aishh12"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"aishh12"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"aishh12"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"aishh12"},"content":"    private Blitz blitz;","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"aishh12"},"content":"    private Image userImage \u003d new Image(this.getClass()","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"aishh12"},"content":"            .getResourceAsStream(\"/images/hamster.png\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"aishh12"},"content":"    private Image blitzImage \u003d new Image(this.getClass()","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"aishh12"},"content":"            .getResourceAsStream(\"/images/penguin.png\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"aishh12"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"aishh12"},"content":"     * Initializes main window.","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"aishh12"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"aishh12"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"aishh12"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"aishh12"},"content":"        scrollPane.vvalueProperty()","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"aishh12"},"content":"                .bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"aishh12"},"content":"    public void setBlitz(Blitz d) {","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"aishh12"},"content":"        blitz \u003d d;","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"aishh12"},"content":"        String listOfTasks \u003d \"\";","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"aishh12"},"content":"        try {","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"aishh12"},"content":"            listOfTasks \u003d blitz.getTasks().listToString(blitz.getUi().getGreetingMessage(), blitz.getUi());","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"aishh12"},"content":"        } catch (BlitzException ex) {","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"aishh12"},"content":"            listOfTasks \u003d ex.toString();","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"aishh12"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"aishh12"},"content":"        assert(listOfTasks.equals(new BlitzException(\"\\\"No items currently in the list!!\\\"\")));","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"aishh12"},"content":"        String openingMessage \u003d listOfTasks + \"\\nSo what can I do for you today?\";","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"aishh12"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"aishh12"},"content":"                DialogBox.getBlitzDialog(openingMessage, blitzImage)","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"aishh12"},"content":"        );","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"aishh12"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"aishh12"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"aishh12"},"content":"     *     Blitz\u0027s reply and then appends them to the dialog container. Clears","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"aishh12"},"content":"     *     the user input after processing.","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"aishh12"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"aishh12"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"aishh12"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"aishh12"},"content":"        if (flag) {","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"aishh12"},"content":"            Platform.exit();","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"aishh12"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"aishh12"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"aishh12"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"aishh12"},"content":"            try {","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"aishh12"},"content":"                blitz.getStorage().saveTasksInFile(blitz.getTasks());","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"aishh12"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"aishh12"},"content":"                System.err.println(e);","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"aishh12"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"aishh12"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"aishh12"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"aishh12"},"content":"                    DialogBox.getBlitzDialog(blitz.getUi().getGoodbyeMessage(), blitzImage)","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"aishh12"},"content":"            );","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"aishh12"},"content":"            assert(!flag);","lastModifiedDate":"2021-09-08"},{"lineNumber":78,"author":{"gitId":"aishh12"},"content":"            flag \u003d true;","lastModifiedDate":"2021-09-01"},{"lineNumber":79,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":80,"author":{"gitId":"aishh12"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":81,"author":{"gitId":"aishh12"},"content":"            String response \u003d Parser.parseCommand(input, blitz.getTasks(), blitz.getUi());","lastModifiedDate":"2021-09-08"},{"lineNumber":82,"author":{"gitId":"aishh12"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-01"},{"lineNumber":83,"author":{"gitId":"aishh12"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-01"},{"lineNumber":84,"author":{"gitId":"aishh12"},"content":"                    DialogBox.getBlitzDialog(response, blitzImage)","lastModifiedDate":"2021-09-01"},{"lineNumber":85,"author":{"gitId":"aishh12"},"content":"            );","lastModifiedDate":"2021-09-01"},{"lineNumber":86,"author":{"gitId":"aishh12"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":87,"author":{"gitId":"aishh12"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-01"},{"lineNumber":88,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":89,"author":{"gitId":"aishh12"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"aishh12":89}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aishh12"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"aishh12"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"aishh12"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"aishh12"},"content":"import tasks.Deadline;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"aishh12"},"content":"import tasks.Event;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"aishh12"},"content":"import tasks.Todo;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"aishh12"},"content":"public class Parser {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"aishh12"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"aishh12"},"content":"     * Parses string in d/M/YYYY HHmm format.","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"aishh12"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"aishh12"},"content":"     * @param dateTime string containing date and time to be parsed.","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"aishh12"},"content":"     * @return LocalDateTime object that represents the provided string.","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"aishh12"},"content":"     * @throws DateTimeParseException when dateTime isn\u0027t of proper format.","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"aishh12"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"aishh12"},"content":"    public static LocalDateTime parseDateTime(String dateTime) throws DateTimeParseException {","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"aishh12"},"content":"        return LocalDateTime.parse(dateTime,","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"aishh12"},"content":"                DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"aishh12"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"aishh12"},"content":"     * Makes sense of the user command and performs the","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"aishh12"},"content":"     * required action.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"aishh12"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"aishh12"},"content":"     * @param command command entered by the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"aishh12"},"content":"     * @param tasks current list of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"aishh12"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"aishh12"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"aishh12"},"content":"    public static String parseCommand (String command, TaskList tasks, Ui ui) {","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"aishh12"},"content":"        String[] keywords \u003d command.split(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"aishh12"},"content":"        assert(keywords.length \u003e 0);","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"aishh12"},"content":"        //stores the first word (keyword) in the user input","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"aishh12"},"content":"        String firstKeyword \u003d keywords[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"aishh12"},"content":"        //stores whether keyword is a task or calling a feature","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"aishh12"},"content":"        boolean isTask \u003d firstKeyword.equals(\"todo\") || firstKeyword.equals(\"event\")","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"aishh12"},"content":"                || firstKeyword.equals(\"deadline\");","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"aishh12"},"content":"        boolean isFeature \u003d firstKeyword.equals(\"list\") || firstKeyword.equals(\"done\")","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"aishh12"},"content":"                || firstKeyword.equals(\"delete\") || firstKeyword.equals(\"find\");","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"aishh12"},"content":"        //stores the string representation of parse result","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"aishh12"},"content":"        String result \u003d \"\";","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"aishh12"},"content":"        /*If the keyword is a task or a feature other than \"list\"","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"aishh12"},"content":"        then it cannot be the only word in the command */","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"aishh12"},"content":"        if ((isTask || (isFeature \u0026\u0026 !firstKeyword.equals(\"list\"))) \u0026\u0026 keywords.length \u003c 2) {","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"aishh12"},"content":"            return isTask ? ui.getTaskDescriptionCannotBeEmptyMessage()","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"aishh12"},"content":"                          : ui.getInvalidCommandFormatMessage();","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"aishh12"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"aishh12"},"content":"        try {","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"aishh12"},"content":"            switch (firstKeyword) {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"aishh12"},"content":"            case \"list\":","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"aishh12"},"content":"                result \u003d tasks.listToString(ui.getListMessage(), ui);","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"aishh12"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"aishh12"},"content":"            case \"done\":","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"aishh12"},"content":"                int taskToMarkDone \u003d Integer.valueOf(keywords[1]);","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"aishh12"},"content":"                result \u003d tasks.markTaskAsDone(taskToMarkDone - 1);","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"aishh12"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"aishh12"},"content":"            case \"delete\":","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"aishh12"},"content":"                int taskToDelete \u003d Integer.valueOf(keywords[1]);","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"aishh12"},"content":"                result \u003d tasks.deleteTask(taskToDelete - 1);","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"aishh12"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"aishh12"},"content":"            case \"find\":","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"aishh12"},"content":"                String findKeyword \u003d keywords[1];","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"aishh12"},"content":"                TaskList matchingList \u003d tasks.findMatchingTasks(findKeyword);","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"aishh12"},"content":"                result \u003d matchingList.listToString(ui.getMatchingListMessage(), ui);","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"aishh12"},"content":"                break;","lastModifiedDate":"2021-09-08"},{"lineNumber":70,"author":{"gitId":"aishh12"},"content":"            case \"todo\" :","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"aishh12"},"content":"                String todoTask \u003d command.substring(5);","lastModifiedDate":"2021-09-08"},{"lineNumber":72,"author":{"gitId":"aishh12"},"content":"                result \u003d tasks.addTask(new Todo(todoTask));","lastModifiedDate":"2021-09-08"},{"lineNumber":73,"author":{"gitId":"aishh12"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"aishh12"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"aishh12"},"content":"                String deadlineTask \u003d command.substring(9, command.indexOf(\u0027/\u0027) - 1);","lastModifiedDate":"2021-09-08"},{"lineNumber":76,"author":{"gitId":"aishh12"},"content":"                String deadlineDateTime \u003d command.substring(command.indexOf(\u0027/\u0027) + 4);","lastModifiedDate":"2021-09-08"},{"lineNumber":77,"author":{"gitId":"aishh12"},"content":"                result \u003d tasks.addTask(new Deadline(deadlineTask, parseDateTime(deadlineDateTime)));","lastModifiedDate":"2021-09-08"},{"lineNumber":78,"author":{"gitId":"aishh12"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"aishh12"},"content":"            case \"event\":","lastModifiedDate":"2021-09-08"},{"lineNumber":80,"author":{"gitId":"aishh12"},"content":"                String eventName \u003d command.substring(6, command.indexOf(\u0027/\u0027) - 1);","lastModifiedDate":"2021-09-08"},{"lineNumber":81,"author":{"gitId":"aishh12"},"content":"                String eventDateTime \u003d command.substring(command.indexOf(\u0027/\u0027) + 4);","lastModifiedDate":"2021-09-08"},{"lineNumber":82,"author":{"gitId":"aishh12"},"content":"                result \u003d tasks.addTask(new Event(eventName, parseDateTime(eventDateTime)));","lastModifiedDate":"2021-09-08"},{"lineNumber":83,"author":{"gitId":"aishh12"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"aishh12"},"content":"            default:","lastModifiedDate":"2021-09-08"},{"lineNumber":85,"author":{"gitId":"aishh12"},"content":"                result \u003d ui.getCommandNotFoundMessage();","lastModifiedDate":"2021-09-08"},{"lineNumber":86,"author":{"gitId":"aishh12"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"aishh12"},"content":"        } catch (BlitzException e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":88,"author":{"gitId":"aishh12"},"content":"            return e.toString();","lastModifiedDate":"2021-09-08"},{"lineNumber":89,"author":{"gitId":"aishh12"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":90,"author":{"gitId":"aishh12"},"content":"            return ui.getIncorrectDateTimeFormatMessage();","lastModifiedDate":"2021-09-08"},{"lineNumber":91,"author":{"gitId":"aishh12"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":92,"author":{"gitId":"aishh12"},"content":"            return ui.getInvalidCommandFormatMessage();","lastModifiedDate":"2021-09-08"},{"lineNumber":93,"author":{"gitId":"aishh12"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"aishh12"},"content":"        return result;","lastModifiedDate":"2021-09-01"},{"lineNumber":95,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"aishh12"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"aishh12":96}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aishh12"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"aishh12"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"aishh12"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"aishh12"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"aishh12"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"aishh12"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"aishh12"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"aishh12"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"aishh12"},"content":"import tasks.Deadline;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"aishh12"},"content":"import tasks.Event;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"aishh12"},"content":"import tasks.Task;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"aishh12"},"content":"import tasks.Todo;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"aishh12"},"content":"public class Storage {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"aishh12"},"content":"    private String filePath;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"aishh12"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"aishh12"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"aishh12"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"aishh12"},"content":"     * Loads contents from the file and stores data in a list.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"aishh12"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"aishh12"},"content":"     * @return list containing tasks from the file.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"aishh12"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"aishh12"},"content":"    public ArrayList\u003cTask\u003e loadFileContents() throws BlitzException {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"aishh12"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"aishh12"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"aishh12"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"aishh12"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"aishh12"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"aishh12"},"content":"                String task \u003d s.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"aishh12"},"content":"                String[] keywords \u003d task.split(\" \\\\| \");","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"aishh12"},"content":"                assert(keywords.length \u003e\u003d 3);","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"aishh12"},"content":"                String done \u003d keywords[1];","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"aishh12"},"content":"                Task current \u003d new Task(\"\");","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"aishh12"},"content":"                switch(task.charAt(0)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"aishh12"},"content":"                case \u0027T\u0027 :","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"aishh12"},"content":"                    current \u003d new Todo(keywords[2]);","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"aishh12"},"content":"                    break;","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"aishh12"},"content":"                case \u0027D\u0027 :","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"aishh12"},"content":"                    current \u003d new Deadline(keywords[2], LocalDateTime.parse(keywords[3],","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"aishh12"},"content":"                            DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\")));","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"aishh12"},"content":"                    break;","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"aishh12"},"content":"                default :","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"aishh12"},"content":"                    current \u003d new Event(keywords[2], LocalDateTime.parse(keywords[3],","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"aishh12"},"content":"                            DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\")));","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"aishh12"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"aishh12"},"content":"                if (done.equals(\"X\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"aishh12"},"content":"                    current.markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"aishh12"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"aishh12"},"content":"                tasks.add(current);","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"aishh12"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"aishh12"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"aishh12"},"content":"            if (f.getParentFile() !\u003d null \u0026\u0026 !f.getParentFile().exists()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"aishh12"},"content":"                f.getParentFile().mkdirs();","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"aishh12"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"aishh12"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"aishh12"},"content":"                f.createNewFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"aishh12"},"content":"            } catch (IOException ex) {","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"aishh12"},"content":"                throw new BlitzException(\"Error creating file!!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"aishh12"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"aishh12"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"aishh12"},"content":"        return tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"aishh12"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"aishh12"},"content":"     * Saves the updates list of tasks to the file.","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"aishh12"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"aishh12"},"content":"     * @param tasks list of tasks to be saved onto the file.","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"aishh12"},"content":"     * @throws IOException if the program cannot create or","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"aishh12"},"content":"     *     write to the file indicated.","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"aishh12"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"aishh12"},"content":"    public void saveTasksInFile(TaskList tasks) throws IOException {","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"aishh12"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-09-08"},{"lineNumber":78,"author":{"gitId":"aishh12"},"content":"        for (Task t : tasks.getTaskList()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"aishh12"},"content":"            assert(!t.getDescription().isEmpty());","lastModifiedDate":"2021-09-08"},{"lineNumber":80,"author":{"gitId":"aishh12"},"content":"            if (t instanceof Todo) {","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"aishh12"},"content":"                fw.write(\"T | \" + t.getStatusIcon() + \" | \" + t.getDescription()","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"aishh12"},"content":"                        + System.lineSeparator());","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"aishh12"},"content":"            } else if (t instanceof Deadline) {","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"aishh12"},"content":"                fw.write(\"D | \" + t.getStatusIcon() + \" | \" + t.getDescription()","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"aishh12"},"content":"                        + \" | \" + ((Deadline) t).getBy() + System.lineSeparator());","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"aishh12"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"aishh12"},"content":"                fw.write(\"E | \" + t.getStatusIcon() + \" | \" + t.getDescription()","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"aishh12"},"content":"                        + \" | \" + ((Event) t).getDate() + System.lineSeparator());","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"aishh12"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"aishh12"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"aishh12"},"content":"        fw.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"aishh12"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"aishh12":93}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aishh12"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"aishh12"},"content":"import java.util.List;","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"aishh12"},"content":"import tasks.Task;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"aishh12"},"content":"public class TaskList {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"aishh12"},"content":"    private List\u003cTask\u003e taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"aishh12"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"aishh12"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"aishh12"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"aishh12"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e(taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"aishh12"},"content":"    public List\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"aishh12"},"content":"        return taskList;","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"aishh12"},"content":"    public Task get(int index) {","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"aishh12"},"content":"        return taskList.get(index);","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"aishh12"},"content":"    public int size() {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"aishh12"},"content":"        return taskList.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"aishh12"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"aishh12"},"content":"     * Adds given task to the task list.","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"aishh12"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"aishh12"},"content":"     * @param taskToAdd","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"aishh12"},"content":"     * @return","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"aishh12"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"aishh12"},"content":"    public String addTask(Task taskToAdd) throws BlitzException {","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"aishh12"},"content":"        if (taskList.contains(taskToAdd)) {","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"aishh12"},"content":"            throw new BlitzException(\"This task already exists in the list! \"","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"aishh12"},"content":"                    + \"Do you want to consider adding some other task?\");","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"aishh12"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"aishh12"},"content":"        taskList.add(taskToAdd);","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"aishh12"},"content":"        return \"Got it. I\u0027ve added this task:\" + \"\\n\\t\" + taskToAdd","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"aishh12"},"content":"                + \"\\n\\nNow you have \" + size() + \" tasks in the list.\";","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"aishh12"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"aishh12"},"content":"     * Deletes task at the given index from the task list.","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"aishh12"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"aishh12"},"content":"     * @param taskIndex Index of task to be deleted.","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"aishh12"},"content":"     * @return Message to be displayed upon successful deletion.","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"aishh12"},"content":"     * @throws BlitzException when taskIndex is invalid.","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"aishh12"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"aishh12"},"content":"    public String deleteTask(int taskIndex) throws BlitzException {","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"aishh12"},"content":"        if (size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"aishh12"},"content":"            throw new BlitzException(\"Cannot perform deletion on empty list!!\");","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"aishh12"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"aishh12"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d size()) {","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"aishh12"},"content":"            throw new BlitzException(\"You are attempting to delete an invalid task number!\");","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"aishh12"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"aishh12"},"content":"        Task deletedTask \u003d taskList.remove(taskIndex);","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"aishh12"},"content":"        return \"Noted. I\u0027ve removed this task:\" + \"\\n\\t\" + deletedTask","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"aishh12"},"content":"                + \"\\n\\nNow you have \" + size() + \" tasks in the list.\";","lastModifiedDate":"2021-09-08"},{"lineNumber":62,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"aishh12"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"aishh12"},"content":"     * Marks task at given index as done in the task list.","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"aishh12"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":67,"author":{"gitId":"aishh12"},"content":"     * @param taskIndex index of task to be marked as done.","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"aishh12"},"content":"     * @throws BlitzException if taskIndex is invalid.","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"aishh12"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"aishh12"},"content":"    public String markTaskAsDone(int taskIndex) throws BlitzException {","lastModifiedDate":"2021-09-08"},{"lineNumber":71,"author":{"gitId":"aishh12"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d size()) {","lastModifiedDate":"2021-09-08"},{"lineNumber":72,"author":{"gitId":"aishh12"},"content":"            throw new BlitzException(\"You are attempting to mark an invalid task number!\");","lastModifiedDate":"2021-09-08"},{"lineNumber":73,"author":{"gitId":"aishh12"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"aishh12"},"content":"        taskList.get(taskIndex).markAsDone();","lastModifiedDate":"2021-09-08"},{"lineNumber":75,"author":{"gitId":"aishh12"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + \"\\t\" + taskList.get(taskIndex);","lastModifiedDate":"2021-09-08"},{"lineNumber":76,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"aishh12"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":79,"author":{"gitId":"aishh12"},"content":"     * Finds tasks which contain the given keyword.","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"aishh12"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":81,"author":{"gitId":"aishh12"},"content":"     * @param keyword specifies keyword to be searched for.","lastModifiedDate":"2021-08-31"},{"lineNumber":82,"author":{"gitId":"aishh12"},"content":"     * @return list of tasks that contain the given keyword.","lastModifiedDate":"2021-08-31"},{"lineNumber":83,"author":{"gitId":"aishh12"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":84,"author":{"gitId":"aishh12"},"content":"    public TaskList findMatchingTasks(String keyword) throws BlitzException {","lastModifiedDate":"2021-09-08"},{"lineNumber":85,"author":{"gitId":"aishh12"},"content":"        if (size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-08"},{"lineNumber":86,"author":{"gitId":"aishh12"},"content":"            throw new BlitzException(\"Cannot perform find on empty list!!\");","lastModifiedDate":"2021-09-08"},{"lineNumber":87,"author":{"gitId":"aishh12"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":88,"author":{"gitId":"aishh12"},"content":"        ArrayList\u003cTask\u003e matchList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"aishh12"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"aishh12"},"content":"            if (task.toString().contains(keyword)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"aishh12"},"content":"                matchList.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"aishh12"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"aishh12"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"aishh12"},"content":"        if (matchList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-08"},{"lineNumber":95,"author":{"gitId":"aishh12"},"content":"            throw new BlitzException(\"No matches found!!\");","lastModifiedDate":"2021-09-08"},{"lineNumber":96,"author":{"gitId":"aishh12"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":97,"author":{"gitId":"aishh12"},"content":"        return new TaskList(matchList);","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"aishh12"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":100,"author":{"gitId":"aishh12"},"content":"     * Returns string representation of list items to be printed on screen.","lastModifiedDate":"2021-09-08"},{"lineNumber":101,"author":{"gitId":"aishh12"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":102,"author":{"gitId":"aishh12"},"content":"     * @param str string to be displayed before list.","lastModifiedDate":"2021-09-08"},{"lineNumber":103,"author":{"gitId":"aishh12"},"content":"     * @return string representation of list items to be printed on screen.","lastModifiedDate":"2021-09-08"},{"lineNumber":104,"author":{"gitId":"aishh12"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":105,"author":{"gitId":"aishh12"},"content":"    public String listToString(String str, Ui ui) throws BlitzException {","lastModifiedDate":"2021-09-08"},{"lineNumber":106,"author":{"gitId":"aishh12"},"content":"        String result \u003d str;","lastModifiedDate":"2021-09-08"},{"lineNumber":107,"author":{"gitId":"aishh12"},"content":"        int ctr \u003d 1;","lastModifiedDate":"2021-09-08"},{"lineNumber":108,"author":{"gitId":"aishh12"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-08"},{"lineNumber":109,"author":{"gitId":"aishh12"},"content":"            if (str.equals(ui.getGreetingMessage())) {","lastModifiedDate":"2021-09-08"},{"lineNumber":110,"author":{"gitId":"aishh12"},"content":"                result \u003d result.concat(\"\\n\\n---No items added yet ---\\n\");","lastModifiedDate":"2021-09-08"},{"lineNumber":111,"author":{"gitId":"aishh12"},"content":"            } else {","lastModifiedDate":"2021-09-08"},{"lineNumber":112,"author":{"gitId":"aishh12"},"content":"                throw new BlitzException(\"No items currently in the list!!\");","lastModifiedDate":"2021-09-08"},{"lineNumber":113,"author":{"gitId":"aishh12"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":114,"author":{"gitId":"aishh12"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":115,"author":{"gitId":"aishh12"},"content":"        for (Task t: taskList) {","lastModifiedDate":"2021-09-08"},{"lineNumber":116,"author":{"gitId":"aishh12"},"content":"            result \u003d result.concat(\"\\n\" + ctr + \". \" + taskList.get(ctr - 1));","lastModifiedDate":"2021-09-08"},{"lineNumber":117,"author":{"gitId":"aishh12"},"content":"            ctr++;","lastModifiedDate":"2021-09-08"},{"lineNumber":118,"author":{"gitId":"aishh12"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":119,"author":{"gitId":"aishh12"},"content":"        System.out.println(result);","lastModifiedDate":"2021-09-08"},{"lineNumber":120,"author":{"gitId":"aishh12"},"content":"        return result + \"\\n\";","lastModifiedDate":"2021-09-08"},{"lineNumber":121,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"aishh12"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"aishh12":122}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aishh12"},"content":"public class Ui {","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"aishh12"},"content":"    private String greetingMessage \u003d \"Hola! I\u0027m Blitz :)\\nHere are the tasks in your list:\";","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"aishh12"},"content":"    private String goodbyeMessage \u003d \"Adiós. Hope to see you again soon!\\n\\n--Press enter to exit application--\";","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"aishh12"},"content":"    private String loadErrorMessage \u003d \"Error loading contents from file!!\";","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"aishh12"},"content":"    private String commandNotFoundMessage \u003d \"Sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"aishh12"},"content":"    private String listMessage \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"aishh12"},"content":"    private String matchingListMessage \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"aishh12"},"content":"    private String incorrectDateTimeFormatMessage \u003d \"Incorrect date/time format! Please enter \"","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"aishh12"},"content":"            + \"deadline date/time in \\\"d M yyyy HHmm\\\" format\";","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"aishh12"},"content":"    private String invalidCommandFormatMessage \u003d \"Invalid command format!!\";","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"aishh12"},"content":"    private String taskDescriptionCannotBeEmptyMessage \u003d \"Task description cannot be empty!!\";","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"aishh12"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"aishh12"},"content":"     * Returns greeting message.","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"aishh12"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"aishh12"},"content":"     * @return greeting message.","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"aishh12"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"aishh12"},"content":"    public String getGreetingMessage() {","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"aishh12"},"content":"        return greetingMessage;","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"aishh12"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"aishh12"},"content":"     * Returns goodbye message.","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"aishh12"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"aishh12"},"content":"     * @return goodbye message.","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"aishh12"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"aishh12"},"content":"    public String getGoodbyeMessage() {","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"aishh12"},"content":"        return goodbyeMessage;","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"aishh12"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"aishh12"},"content":"     * Returns loading error message.","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"aishh12"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"aishh12"},"content":"     * @return loading error message","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"aishh12"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"aishh12"},"content":"    public String getLoadErrorMessage() {","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"aishh12"},"content":"        return loadErrorMessage;","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"aishh12"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"aishh12"},"content":"     * Returns command not found message.","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"aishh12"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"aishh12"},"content":"     * @return command not found message.","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"aishh12"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"aishh12"},"content":"    public String getCommandNotFoundMessage() {","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"aishh12"},"content":"        return commandNotFoundMessage;","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"aishh12"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"aishh12"},"content":"     * Returns message to be displayed before printing the list of tasks.","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"aishh12"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"aishh12"},"content":"     * @return message to be displayed before printing the list of tasks.","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"aishh12"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"aishh12"},"content":"    public String getListMessage() {","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"aishh12"},"content":"        return listMessage;","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"aishh12"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"aishh12"},"content":"     * Returns message to be displayed before printing the list of tasks matching","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"aishh12"},"content":"     * a given keyword.","lastModifiedDate":"2021-09-08"},{"lineNumber":62,"author":{"gitId":"aishh12"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"aishh12"},"content":"     * @return message to be displayed before printing the list of tasks matching","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"aishh12"},"content":"     *     a given keyword.","lastModifiedDate":"2021-09-08"},{"lineNumber":65,"author":{"gitId":"aishh12"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"aishh12"},"content":"    public String getMatchingListMessage() {","lastModifiedDate":"2021-09-08"},{"lineNumber":67,"author":{"gitId":"aishh12"},"content":"        return matchingListMessage;","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":70,"author":{"gitId":"aishh12"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":71,"author":{"gitId":"aishh12"},"content":"     * Returns display message when user enters the incorrect format","lastModifiedDate":"2021-09-08"},{"lineNumber":72,"author":{"gitId":"aishh12"},"content":"     * for date and time.","lastModifiedDate":"2021-09-08"},{"lineNumber":73,"author":{"gitId":"aishh12"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":74,"author":{"gitId":"aishh12"},"content":"     * @return display message when user enters the incorrect format","lastModifiedDate":"2021-09-08"},{"lineNumber":75,"author":{"gitId":"aishh12"},"content":"     *     for date and time.","lastModifiedDate":"2021-09-08"},{"lineNumber":76,"author":{"gitId":"aishh12"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":77,"author":{"gitId":"aishh12"},"content":"    public String getIncorrectDateTimeFormatMessage() {","lastModifiedDate":"2021-09-08"},{"lineNumber":78,"author":{"gitId":"aishh12"},"content":"        return incorrectDateTimeFormatMessage;","lastModifiedDate":"2021-09-08"},{"lineNumber":79,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":80,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":81,"author":{"gitId":"aishh12"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":82,"author":{"gitId":"aishh12"},"content":"     * Returns display message when user enters the incorrect format","lastModifiedDate":"2021-09-08"},{"lineNumber":83,"author":{"gitId":"aishh12"},"content":"     * for a command.","lastModifiedDate":"2021-09-08"},{"lineNumber":84,"author":{"gitId":"aishh12"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":85,"author":{"gitId":"aishh12"},"content":"     * @return display message when user enters the incorrect format","lastModifiedDate":"2021-09-08"},{"lineNumber":86,"author":{"gitId":"aishh12"},"content":"     *     for the delete/done command.","lastModifiedDate":"2021-09-08"},{"lineNumber":87,"author":{"gitId":"aishh12"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":88,"author":{"gitId":"aishh12"},"content":"    public String getInvalidCommandFormatMessage() {","lastModifiedDate":"2021-09-08"},{"lineNumber":89,"author":{"gitId":"aishh12"},"content":"        return invalidCommandFormatMessage;","lastModifiedDate":"2021-09-08"},{"lineNumber":90,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":91,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":92,"author":{"gitId":"aishh12"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":93,"author":{"gitId":"aishh12"},"content":"     * Returns display message when a user enters a task without description.","lastModifiedDate":"2021-09-08"},{"lineNumber":94,"author":{"gitId":"aishh12"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":95,"author":{"gitId":"aishh12"},"content":"     * @return display message when a user enters a task without description.","lastModifiedDate":"2021-09-08"},{"lineNumber":96,"author":{"gitId":"aishh12"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":97,"author":{"gitId":"aishh12"},"content":"    public String getTaskDescriptionCannotBeEmptyMessage() {","lastModifiedDate":"2021-09-08"},{"lineNumber":98,"author":{"gitId":"aishh12"},"content":"        return taskDescriptionCannotBeEmptyMessage;","lastModifiedDate":"2021-09-08"},{"lineNumber":99,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":100,"author":{"gitId":"aishh12"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"aishh12":100}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aishh12"},"content":"package tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"aishh12"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"aishh12"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"aishh12"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"aishh12"},"content":"    private LocalDateTime by;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"aishh12"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"aishh12"},"content":"     * Creates a Deadline with the given description, date and time by","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"aishh12"},"content":"     * which the task is to be completed.","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"aishh12"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"aishh12"},"content":"     * @param description mentions what the task to be completed is.","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"aishh12"},"content":"     * @param by date and time by which the task is to be completed.","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"aishh12"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"aishh12"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"aishh12"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"aishh12"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"aishh12"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"aishh12"},"content":"     * Returns date and time by which this task must be completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"aishh12"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"aishh12"},"content":"     * @return date and time by which this task must be completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"aishh12"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"aishh12"},"content":"    public String getBy() {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"aishh12"},"content":"        return this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"aishh12"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"aishh12"},"content":"     * Returns string representation of Deadline object.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"aishh12"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"aishh12"},"content":"     * @return string representation of Deadline object.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"aishh12"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"aishh12"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"aishh12"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"aishh12"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"aishh12"},"content":"            + this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\")) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"aishh12"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"aishh12":41}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aishh12"},"content":"package tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"aishh12"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"aishh12"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"aishh12"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"aishh12"},"content":"    protected LocalDateTime date;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"aishh12"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"aishh12"},"content":"     * Creates an Event based on the given description, date and time.","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"aishh12"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"aishh12"},"content":"     * @param description mentions what the event is.","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"aishh12"},"content":"     * @param date date and time of event.","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"aishh12"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"aishh12"},"content":"    public Event(String description, LocalDateTime date) {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"aishh12"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"aishh12"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"aishh12"},"content":"    public String getDate() {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"aishh12"},"content":"        return this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"aishh12"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"aishh12"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"aishh12"},"content":"        return \"[E]\" + super.toString() + \" (at: \"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"aishh12"},"content":"            + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\")) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"aishh12"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"aishh12":31}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aishh12"},"content":"package tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"aishh12"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"aishh12"},"content":"    private String description;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"aishh12"},"content":"    private boolean isDone;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"aishh12"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"aishh12"},"content":"     * Creates task with given description.","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"aishh12"},"content":"     * @param description describes what the task is.","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"aishh12"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"aishh12"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"aishh12"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"aishh12"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"aishh12"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"aishh12"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"aishh12"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"aishh12"},"content":"     * @return X if task is done, and \" \" if task isn\u0027t done yet.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"aishh12"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"aishh12"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"aishh12"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"aishh12"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"aishh12"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"aishh12"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"aishh12"},"content":"        return description;","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"aishh12"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"aishh12"},"content":"     * Returns the string representation of the Task object.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"aishh12"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"aishh12"},"content":"     * @return string representation of the Task object.","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"aishh12"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"aishh12"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"aishh12"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"aishh12"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"aishh12"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"aishh12"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"aishh12"},"content":"        if (o instanceof Task) {","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"aishh12"},"content":"            Task t \u003d (Task) o;","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"aishh12"},"content":"            return t.getDescription().equals(description);","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"aishh12"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"aishh12"},"content":"        return false;","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"aishh12"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"aishh12":54}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aishh12"},"content":"package tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"aishh12"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"aishh12"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"aishh12"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"aishh12"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"aishh12"},"content":"     * Returns the string representation of the Todo object.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"aishh12"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"aishh12"},"content":"     * @return string representation of the Todo object.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"aishh12"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"aishh12"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"aishh12"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"aishh12"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"aishh12"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"aishh12":20}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"aishh12"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"aishh12"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"aishh12"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"aishh12"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"aishh12"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"aishh12"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"aishh12"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"aishh12"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"aishh12"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"aishh12"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"aishh12"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"aishh12"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"aishh12"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"aishh12"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"aishh12"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"aishh12"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"aishh12"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"aishh12"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"aishh12"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"aishh12"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"aishh12":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"aishh12"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"aishh12"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"aishh12"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"aishh12"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"aishh12"},"content":"\u003c?import javafx.scene.effect.Blend?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"aishh12"},"content":"\u003c?import javafx.scene.effect.ColorInput?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"aishh12"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"aishh12"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"aishh12"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"aishh12"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"aishh12"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"3.0\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"317.0\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"aishh12"},"content":"         \u003ceffect\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"aishh12"},"content":"            \u003cBlend\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"aishh12"},"content":"               \u003ctopInput\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"aishh12"},"content":"                  \u003cColorInput paint\u003d\"#0ee2e6\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"aishh12"},"content":"               \u003c/topInput\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"aishh12"},"content":"            \u003c/Blend\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"aishh12"},"content":"         \u003c/effect\u003e\u003c/TextField\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"aishh12"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"322.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"aishh12"},"content":"         \u003ceffect\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"aishh12"},"content":"            \u003cBlend /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"aishh12"},"content":"         \u003c/effect\u003e\u003c/Button\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"aishh12"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"aishh12"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"aishh12"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"aishh12"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"aishh12"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"aishh12"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"aishh12"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"aishh12":31}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aishh12"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"aishh12"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"aishh12"},"content":"import tasks.Deadline;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"aishh12"},"content":"import tasks.Todo;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"aishh12"},"content":"class ParserTest {","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"aishh12"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"aishh12"},"content":"    void parseCommand_invalidCommandEntered_errorMessage() {","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"aishh12"},"content":"        Blitz b \u003d new Blitz(\"data/blitz.txt\");","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"aishh12"},"content":"        boolean isEqual \u003d \"Sorry, but I don\u0027t know what that means :-(\"","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"aishh12"},"content":"                .equals(Parser.parseCommand(\"hello\", b.getTasks(), b.getUi()));","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"aishh12"},"content":"        assertEquals(true, isEqual);","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"aishh12"},"content":"    @Test","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"aishh12"},"content":"    void parseCommand_taskWithEmptyDescription_errorMessage() {","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"aishh12"},"content":"        Blitz b \u003d new Blitz(\"data/blitz.txt\");","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"aishh12"},"content":"        String result \u003d Parser.parseCommand(\"todo\", b.getTasks(), b.getUi());","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"aishh12"},"content":"        boolean isEqual \u003d b.getUi().getTaskDescriptionCannotBeEmptyMessage()","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"aishh12"},"content":"                .equals(result);","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"aishh12"},"content":"        assertEquals(true, isEqual);","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"aishh12"},"content":"    @Test","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"aishh12"},"content":"    void parseCommand_taskToAdd_invalidDateTimeFormat() {","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"aishh12"},"content":"        Blitz b \u003d new Blitz(\"data/blitz.txt\");","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"aishh12"},"content":"        String result \u003d Parser.parseCommand(\"event party /on Sunday\", b.getTasks(), b.getUi());","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"aishh12"},"content":"        boolean isEqual \u003d b.getUi().getIncorrectDateTimeFormatMessage().equals(result);","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"aishh12"},"content":"        assertEquals(true, isEqual);","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"aishh12"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"aishh12"},"content":"    void parseCommand_taskToAdd_success() {","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"aishh12"},"content":"        Blitz b \u003d new Blitz(\"data/blitz.txt\");","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"aishh12"},"content":"        String result \u003d Parser.parseCommand(\"deadline return book /by 12/08/2021 2359\", b.getTasks(), b.getUi());","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"aishh12"},"content":"        String message \u003d \"Got it. I\u0027ve added this task:\" + \"\\n\\t\" + new Deadline(\"return book\",","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"aishh12"},"content":"                Parser.parseDateTime(\"12/08/2021 2359\")) + \"\\n\\nNow you have \"","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"aishh12"},"content":"                + b.getTasks().size() + \" tasks in the list.\";","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"aishh12"},"content":"        boolean isEqual \u003d message.equals(result);","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"aishh12"},"content":"        assertEquals(true, isEqual);","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"aishh12"},"content":"    @Test","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"aishh12"},"content":"    void parseCommand_duplicateTaskToAdd_exceptionThrown() throws BlitzException {","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"aishh12"},"content":"        Blitz b \u003d new Blitz(\"data/blitz.txt\");","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"aishh12"},"content":"        b.getTasks().addTask(new Todo(\"go running\"));","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"aishh12"},"content":"        String result \u003d Parser.parseCommand(\"todo go running\", b.getTasks(), b.getUi());","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"aishh12"},"content":"        boolean isEquals \u003d result.equals(\"OOPS!!! This task already exists in the list! \"","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"aishh12"},"content":"                + \"Do you want to consider adding some other task?\");","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"aishh12"},"content":"        assertEquals(true, isEquals);","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"aishh12"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"aishh12":52}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aishh12"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"aishh12"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"aishh12"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"aishh12"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"aishh12"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"aishh12"},"content":"import tasks.Deadline;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"aishh12"},"content":"import tasks.Task;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"aishh12"},"content":"import tasks.Todo;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"aishh12"},"content":"class TaskListTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"aishh12"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"aishh12"},"content":"    void get() {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"aishh12"},"content":"        String date \u003d \"2/12/2019 1800\";","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"aishh12"},"content":"        LocalDateTime d \u003d LocalDateTime.parse(date,","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"aishh12"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"aishh12"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e() {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"aishh12"},"content":"            {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"aishh12"},"content":"                add(new Todo(\"read book\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"aishh12"},"content":"                add(new Deadline(\"return book\", d));","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"aishh12"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"aishh12"},"content":"        };","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"aishh12"},"content":"        assertEquals(\"[T][ ] read book\", new TaskList(new ArrayList\u003c\u003e(tasks)).get(0).toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"aishh12"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"aishh12"},"content":"    void addTask() throws BlitzException {","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"aishh12"},"content":"        String date \u003d \"2/12/2019 1800\";","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"aishh12"},"content":"        LocalDateTime d \u003d LocalDateTime.parse(date,","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"aishh12"},"content":"                DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"aishh12"},"content":"        TaskList tasksOld \u003d new TaskList(new ArrayList\u003c\u003e() {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"aishh12"},"content":"            {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"aishh12"},"content":"                add(new Todo(\"read book\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"aishh12"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"aishh12"},"content":"        });","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"aishh12"},"content":"        TaskList tasksNew \u003d new TaskList(new ArrayList\u003c\u003e() {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"aishh12"},"content":"            {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"aishh12"},"content":"                add(new Todo(\"read book\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"aishh12"},"content":"                add(new Deadline(\"return book\", d));","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"aishh12"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"aishh12"},"content":"        });","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"aishh12"},"content":"        tasksOld.addTask(new Deadline(\"return book\", d));","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"aishh12"},"content":"        boolean isEqual \u003d tasksNew.getTaskList().toString().equals(tasksOld.getTaskList().toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"aishh12"},"content":"        assertEquals(true, isEqual);","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"aishh12"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"aishh12"},"content":"    void deleteTask() throws BlitzException {","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"aishh12"},"content":"        String date \u003d \"2/12/2019 1800\";","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"aishh12"},"content":"        LocalDateTime d \u003d LocalDateTime.parse(date,","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"aishh12"},"content":"                DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"aishh12"},"content":"        TaskList tasksOld \u003d new TaskList(new ArrayList\u003c\u003e() {","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"aishh12"},"content":"            {","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"aishh12"},"content":"                add(new Todo(\"read book\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"aishh12"},"content":"                add(new Deadline(\"return book\", d));","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"aishh12"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"aishh12"},"content":"        });","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"aishh12"},"content":"        TaskList tasksNew \u003d new TaskList(new ArrayList\u003c\u003e() {","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"aishh12"},"content":"            {","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"aishh12"},"content":"                add(new Todo(\"read book\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"aishh12"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"aishh12"},"content":"        });","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"aishh12"},"content":"        tasksOld.deleteTask(1);","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"aishh12"},"content":"        boolean isEqual \u003d tasksNew.getTaskList().toString().equals(tasksOld.getTaskList().toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"aishh12"},"content":"        assertEquals(true, isEqual);","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"aishh12"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"aishh12"},"content":"    void size() {","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"aishh12"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003c\u003e() {","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"aishh12"},"content":"            {","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"aishh12"},"content":"                add(new Todo(\"read book\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"aishh12"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"aishh12"},"content":"        });","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"aishh12"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"aishh12"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"aishh12"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"aishh12":89}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"aishh12"},"content":"todo read book","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"aishh12"},"content":"deadline return book /by Monday","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"aishh12"},"content":"deadline return book /by 2/12/2019 1800","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"aishh12"},"content":"event project meeting /on 12/08/2021 2359","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"aishh12"},"content":"list","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"aishh12"},"content":"delete 2","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"aishh12"},"content":"done 3","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"aishh12"},"content":"done 2","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"aishh12"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"aishh12"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"aishh12":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"aishh12"},"content":"java -classpath ..\\bin Blitz \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"aishh12":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"aishh12"},"content":"# delete data from previous run","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"aishh12"},"content":"if [ -e \"./data\" ]","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"aishh12"},"content":"then","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"aishh12"},"content":"    rm -rf ./data","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"aishh12"},"content":"fi","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"aishh12"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"aishh12"},"content":"java -classpath ../bin Blitz \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"aishh12":7,"-":37}}]
