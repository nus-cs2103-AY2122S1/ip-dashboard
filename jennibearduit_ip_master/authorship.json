[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jennibearduit"},"content":"# Morgan project template","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"jennibearduit"},"content":"3. After that, locate the `src/main/java/Morgan.java` file, right-click it, and choose `Run Morgan.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"jennibearduit":2}},{"path":"src/main/java/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jennibearduit"},"content":"import commands.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jennibearduit"},"content":"import exceptions.MorganException;","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jennibearduit"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jennibearduit"},"content":" * This is an CommandParser class, which translates user input","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"jennibearduit"},"content":" * into commands.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jennibearduit"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jennibearduit"},"content":"public class CommandParser {","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"jennibearduit"},"content":"    private final static String DELIMITER \u003d \"\\\\s+\";","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jennibearduit"},"content":"    private final static int COMMAND_INDEX \u003d 0;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jennibearduit"},"content":"    private final static String DELIMITER_FOUND_ERROR_MESSAGE \u003d \"Please \"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"jennibearduit"},"content":"            + \"avoid using the symbol \\\"\" + Storage.DELIMITER + \"\\\".\";","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jennibearduit"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jennibearduit"},"content":"     * Returns the command specified by the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jennibearduit"},"content":"     * @param userInput The input string entered by the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jennibearduit"},"content":"     * @return The command specified by the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jennibearduit"},"content":"     * @throws MorganException","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"jennibearduit"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jennibearduit"},"content":"    public Command getCommand(String userInput) throws MorganException {","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"jennibearduit"},"content":"        String trimmedUserInput \u003d userInput.trim();","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jennibearduit"},"content":"        String[] words \u003d trimmedUserInput.split(DELIMITER);","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jennibearduit"},"content":"        String commandKeyword \u003d words[COMMAND_INDEX].toLowerCase();","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jennibearduit"},"content":"        if (userInput.contains(TaskParser.DELIMITER)) {","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"jennibearduit"},"content":"            throw new MorganException(DELIMITER_FOUND_ERROR_MESSAGE);","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"jennibearduit"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"jennibearduit"},"content":"        switch (commandKeyword) {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"jennibearduit"},"content":"        case FindCommand.KEYWORD:","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jennibearduit"},"content":"            return new FindCommand(trimmedUserInput);","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"jennibearduit"},"content":"        case DeleteCommand.KEYWORD:","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"jennibearduit"},"content":"            return new DeleteCommand(trimmedUserInput);","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"jennibearduit"},"content":"        case AddEventCommand.KEYWORD:","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"jennibearduit"},"content":"            return new AddEventCommand(trimmedUserInput);","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"jennibearduit"},"content":"        case AddDeadlineCommand.KEYWORD:","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"jennibearduit"},"content":"            return new AddDeadlineCommand(trimmedUserInput);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"jennibearduit"},"content":"        case AddToDoCommand.KEYWORD:","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"jennibearduit"},"content":"            return new AddToDoCommand(trimmedUserInput);","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"jennibearduit"},"content":"        case MarkDoneCommand.KEYWORD:","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"jennibearduit"},"content":"            return new MarkDoneCommand(trimmedUserInput);","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"jennibearduit"},"content":"        case ListCommand.KEYWORD:","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"jennibearduit"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"jennibearduit"},"content":"        default:","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"jennibearduit"},"content":"            // User gave an invalid command","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"jennibearduit"},"content":"            return new InvalidCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"jennibearduit"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"jennibearduit"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"jennibearduit":47}},{"path":"src/main/java/Morgan.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jennibearduit"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jennibearduit"},"content":"import commands.Command;","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"jennibearduit"},"content":"import exceptions.MorganException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"jennibearduit"},"content":"public class Morgan {","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"jennibearduit"},"content":"    private static final String EXIT_KEYWORD \u003d \"bye\";","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"jennibearduit"},"content":"        Morgan.launch();","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"jennibearduit"},"content":"    private static void launch() {","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"jennibearduit"},"content":"        // Initialize UI","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"jennibearduit"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jennibearduit"},"content":"        ui.printStartDisplay();","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"jennibearduit"},"content":"        // Initialize TaskList and CommandParser","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"jennibearduit"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jennibearduit"},"content":"        CommandParser p \u003d new CommandParser();","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"jennibearduit"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"jennibearduit"},"content":"            // Initialize and load storage","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"jennibearduit"},"content":"            Storage s \u003d new Storage();","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"jennibearduit"},"content":"            s.load(tl);","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"jennibearduit"},"content":"            // Read user input and check whether input is exit keyword","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"jennibearduit"},"content":"            String userInput \u003d ui.getInput();","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"jennibearduit"},"content":"            boolean isExitKeyword \u003d userInput.trim().equalsIgnoreCase(EXIT_KEYWORD);","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"jennibearduit"},"content":"            while (!isExitKeyword) {","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"jennibearduit"},"content":"                try {","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"jennibearduit"},"content":"                    // Obtain and execute command to retrieve output message","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"jennibearduit"},"content":"                    Command command \u003d p.getCommand(userInput);","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"jennibearduit"},"content":"                    String output \u003d command.execute(tl);","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"jennibearduit"},"content":"                    // Save updated task list","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"jennibearduit"},"content":"                    s.save(tl);","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"jennibearduit"},"content":"                    // Print output message","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"jennibearduit"},"content":"                    ui.print(output);","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"jennibearduit"},"content":"                } catch (MorganException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"jennibearduit"},"content":"                    ui.print(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"jennibearduit"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"jennibearduit"},"content":"                // Retrieves user input and check if input is exit keyword","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"jennibearduit"},"content":"                userInput \u003d ui.getInput();","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"jennibearduit"},"content":"                isExitKeyword \u003d userInput.trim().equalsIgnoreCase(EXIT_KEYWORD);","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"jennibearduit"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"jennibearduit"},"content":"            // Print end display","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"jennibearduit"},"content":"            ui.printEndDisplay();","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"jennibearduit"},"content":"        } catch (MorganException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"jennibearduit"},"content":"            ui.print(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"jennibearduit"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":3,"jennibearduit":52}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jennibearduit"},"content":"import java.io.File;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"jennibearduit"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"jennibearduit"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"jennibearduit"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"jennibearduit"},"content":"import exceptions.MorganException;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"jennibearduit"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jennibearduit"},"content":"import tasks.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"jennibearduit"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jennibearduit"},"content":" * This is a Storage class, which encapsulates storage of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jennibearduit"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jennibearduit"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jennibearduit"},"content":"    private static final String DIRECTORY_PATH \u003d \"./morgan-files\";","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"jennibearduit"},"content":"    private static final String FILE_PATH \u003d DIRECTORY_PATH + \"/tasks.txt\";","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"jennibearduit"},"content":"    private final TaskParser parser \u003d new TaskParser();","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"jennibearduit"},"content":"    private final File file;","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"jennibearduit"},"content":"    protected static final String DELIMITER \u003d TaskParser.DELIMITER;","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"jennibearduit"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jennibearduit"},"content":"     * Constructor for Storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jennibearduit"},"content":"     * @throws MorganException","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"jennibearduit"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jennibearduit"},"content":"    public Storage() throws MorganException {","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"jennibearduit"},"content":"        File directory \u003d new File(DIRECTORY_PATH);","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"jennibearduit"},"content":"        boolean isDirectoryExist \u003d directory.exists();","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"jennibearduit"},"content":"        if (!isDirectoryExist) {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"jennibearduit"},"content":"            directory.mkdir();","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jennibearduit"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"jennibearduit"},"content":"        this.file \u003d new File(FILE_PATH);","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"jennibearduit"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"jennibearduit"},"content":"            this.file.createNewFile();","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"jennibearduit"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"jennibearduit"},"content":"            throw new MorganException(\"OOPS!!! \" + e.getMessage());","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"jennibearduit"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"jennibearduit"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"jennibearduit"},"content":"     * Loads data from specified file.","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"jennibearduit"},"content":"     * @param taskList The existing list of tasks from the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"jennibearduit"},"content":"     * @throws MorganException","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"jennibearduit"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"jennibearduit"},"content":"    public void load(TaskList taskList) throws MorganException {","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"jennibearduit"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"jennibearduit"},"content":"            Scanner sc \u003d new Scanner(this.file);","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"jennibearduit"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"jennibearduit"},"content":"                String taskString \u003d sc.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"jennibearduit"},"content":"                try {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"jennibearduit"},"content":"                    Task task \u003d parser.decode(taskString);","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"jennibearduit"},"content":"                    taskList.addTask(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"jennibearduit"},"content":"                } catch (MorganException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"jennibearduit"},"content":"                    //TODO: edit this","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"jennibearduit"},"content":"                    continue;","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"jennibearduit"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"jennibearduit"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"jennibearduit"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"jennibearduit"},"content":"            throw new MorganException(e.getMessage());","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"jennibearduit"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"jennibearduit"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"jennibearduit"},"content":"     * Saves the list of tasks into a file.","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"jennibearduit"},"content":"     * @param taskList The list of tasks to be saved.","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"jennibearduit"},"content":"     * @throws MorganException","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"jennibearduit"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"jennibearduit"},"content":"    public void save(TaskList taskList) throws MorganException {","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"jennibearduit"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"jennibearduit"},"content":"            FileWriter fileWriter \u003d new FileWriter(this.file);","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"jennibearduit"},"content":"            StringBuilder storageString \u003d new StringBuilder();","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"jennibearduit"},"content":"            int numOfTasks \u003d taskList.getNumOfTasks();","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"jennibearduit"},"content":"            for (int i \u003d 1; i \u003c\u003d numOfTasks; i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"jennibearduit"},"content":"                Task t \u003d taskList.getTask(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"jennibearduit"},"content":"                storageString.append(parser.encode(t));","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"jennibearduit"},"content":"                if (i !\u003d numOfTasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"jennibearduit"},"content":"                    storageString.append(\"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"jennibearduit"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"jennibearduit"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"jennibearduit"},"content":"            fileWriter.write(String.valueOf(storageString));","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"jennibearduit"},"content":"            fileWriter.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"jennibearduit"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"jennibearduit"},"content":"            throw new MorganException(\"OOPS!!! \" + e.getMessage());","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"jennibearduit"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"jennibearduit"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"jennibearduit":85}},{"path":"src/main/java/TaskParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jennibearduit"},"content":"import exceptions.MorganException;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"jennibearduit"},"content":"import tasks.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jennibearduit"},"content":"import tasks.EventTask;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jennibearduit"},"content":"import tasks.DeadlineTask;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jennibearduit"},"content":"import tasks.ToDoTask;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jennibearduit"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jennibearduit"},"content":" * This is a TaskParser class, which translates a task string","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"jennibearduit"},"content":" * into a Task object and vise versa.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jennibearduit"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jennibearduit"},"content":"public class TaskParser {","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"jennibearduit"},"content":"    private final static int TASK_INDEX \u003d 0; // Task type","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jennibearduit"},"content":"    private final static int STATUS_INDEX \u003d 1; // Task status","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jennibearduit"},"content":"    private final static int DESCRIPTION_INDEX \u003d 2; // Task description","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jennibearduit"},"content":"    private final static int DATETIME_INDEX \u003d 3; // Task date/time (if applicable)","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jennibearduit"},"content":"    protected final static String DELIMITER \u003d \"¬\";","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jennibearduit"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jennibearduit"},"content":"     * Translates a task into its storage string representation.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jennibearduit"},"content":"     * @param task The task to be parsed.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jennibearduit"},"content":"     * @return The storage string representation of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jennibearduit"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jennibearduit"},"content":"    public String encode(Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jennibearduit"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"jennibearduit"},"content":"        String status \u003d String.valueOf(task.getStatus());","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"jennibearduit"},"content":"        String description \u003d task.getDescription();","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"jennibearduit"},"content":"        if (task instanceof EventTask) {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jennibearduit"},"content":"            EventTask event \u003d (EventTask) task;","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"jennibearduit"},"content":"            return EventTask.KEYWORD + DELIMITER + status + DELIMITER","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"jennibearduit"},"content":"                    + description + DELIMITER + event.getDateTime();","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"jennibearduit"},"content":"        } else if (task instanceof DeadlineTask) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"jennibearduit"},"content":"            DeadlineTask deadline \u003d (DeadlineTask) task;","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"jennibearduit"},"content":"            return DeadlineTask.KEYWORD + DELIMITER + status + DELIMITER","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"jennibearduit"},"content":"                    + description + DELIMITER + deadline.getDateTime();","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"jennibearduit"},"content":"        } else if (task instanceof ToDoTask) {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"jennibearduit"},"content":"            ToDoTask todo \u003d (ToDoTask) task;","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"jennibearduit"},"content":"            return ToDoTask.KEYWORD + DELIMITER + status + DELIMITER","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"jennibearduit"},"content":"                    + description;","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"jennibearduit"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"jennibearduit"},"content":"        return \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"jennibearduit"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"jennibearduit"},"content":"     * Translates a task in string format to a Task object.","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"jennibearduit"},"content":"     * @param string The string to be parsed.","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"jennibearduit"},"content":"     * @return The Task object based on the string.","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"jennibearduit"},"content":"     * @throws MorganException","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"jennibearduit"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"jennibearduit"},"content":"    public Task decode(String string) throws MorganException {","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"jennibearduit"},"content":"        String[] data \u003d string.split(DELIMITER);","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"jennibearduit"},"content":"        if (data.length \u003c\u003d DESCRIPTION_INDEX) {","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"jennibearduit"},"content":"            throw new MorganException(\"OOPS!!! Storage data has been tampered.\");","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"jennibearduit"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"jennibearduit"},"content":"        String taskType \u003d data[TASK_INDEX].trim();","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"jennibearduit"},"content":"        boolean isDone \u003d Boolean.parseBoolean(data[STATUS_INDEX].trim());","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"jennibearduit"},"content":"        String description \u003d data[DESCRIPTION_INDEX].trim();","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"jennibearduit"},"content":"        String dateTimeString \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"jennibearduit"},"content":"        Task task;","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"jennibearduit"},"content":"        switch(taskType) {","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"jennibearduit"},"content":"        case (EventTask.KEYWORD):","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"jennibearduit"},"content":"            if (data.length \u003c\u003d DATETIME_INDEX) {","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"jennibearduit"},"content":"                throw new MorganException(\"OOPS!!! Storage data has been tampered.\");","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"jennibearduit"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"jennibearduit"},"content":"            dateTimeString \u003d data[DATETIME_INDEX].trim();","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"jennibearduit"},"content":"            task \u003d new EventTask(description, dateTimeString);","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"jennibearduit"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"jennibearduit"},"content":"        case (DeadlineTask.KEYWORD):","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"jennibearduit"},"content":"            if (data.length \u003c\u003d DATETIME_INDEX) {","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"jennibearduit"},"content":"                throw new MorganException(\"OOPS!!! Storage data has been tampered.\");","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"jennibearduit"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"jennibearduit"},"content":"            dateTimeString \u003d data[DATETIME_INDEX].trim();","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"jennibearduit"},"content":"            task \u003d new DeadlineTask(description, dateTimeString);","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"jennibearduit"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"jennibearduit"},"content":"        default:","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"jennibearduit"},"content":"            task \u003d new ToDoTask(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"jennibearduit"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"jennibearduit"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"jennibearduit"},"content":"            task.markDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"jennibearduit"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"jennibearduit"},"content":"        return task;","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"jennibearduit"},"content":"}","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"jennibearduit":87}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jennibearduit"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jennibearduit"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jennibearduit"},"content":" * This is a Ui class, which encapsulates all interactions with the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jennibearduit"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jennibearduit"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jennibearduit"},"content":"    private static final String LINE \u003d \"\\n\" +","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"jennibearduit"},"content":"            \"————————————————————————————————————————————————————————————\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jennibearduit"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jennibearduit"},"content":"     * Retrieves input with a Scanner object.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jennibearduit"},"content":"     * @return The input string read by a Scanner object.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jennibearduit"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jennibearduit"},"content":"    public String getInput() {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jennibearduit"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jennibearduit"},"content":"        return sc.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jennibearduit"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jennibearduit"},"content":"     * Prints the starting display to the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jennibearduit"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jennibearduit"},"content":"    public void printStartDisplay() {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jennibearduit"},"content":"        print(logo());","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"jennibearduit"},"content":"        print(startGreeting());","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"jennibearduit"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"jennibearduit"},"content":"     * Prints the ending display to the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jennibearduit"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"jennibearduit"},"content":"    public void printEndDisplay() {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"jennibearduit"},"content":"        print(endGreeting());","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"jennibearduit"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"jennibearduit"},"content":"     * Prints string between 2 lines.","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"jennibearduit"},"content":"     * @param s The string to be printed.","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"jennibearduit"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"jennibearduit"},"content":"    public void print(String s) {","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"jennibearduit"},"content":"        System.out.print(LINE + s + LINE);","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"jennibearduit"},"content":"    private String logo() {","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"jennibearduit"},"content":"        String logo \u003d \"\\t\\t\\t\\t \\t—————      —————\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"jennibearduit"},"content":"                + \"\\t\\t\\t\\tM\\t|      \\\\/      |\\tM\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"jennibearduit"},"content":"                + \"\\t\\t\\t\\to\\t|              |\\tO\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"jennibearduit"},"content":"                + \"\\t\\t\\t\\tR\\t|    |\\\\  /|    |\\tR\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"jennibearduit"},"content":"                + \"\\t\\t\\t\\tG\\t|    | \\\\/ |    |\\tG\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"jennibearduit"},"content":"                + \"\\t\\t\\t\\tA\\t|    |    |    |\\tA\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"jennibearduit"},"content":"                + \"\\t\\t\\t\\tN\\t|    |    |    |\\tN\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"jennibearduit"},"content":"                + \"\\t\\t\\t\\t \\t ————      ————\";","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"jennibearduit"},"content":"        return logo;","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"jennibearduit"},"content":"    private String startGreeting() {","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"jennibearduit"},"content":"        String startGreeting \u003d \"Hello, my name is Morgan. I\u0027m your personal task manager.\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"jennibearduit"},"content":"                + \"What can I do for you today?\";","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"jennibearduit"},"content":"        return startGreeting;","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"jennibearduit"},"content":"    private String endGreeting() {","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"jennibearduit"},"content":"        String endGreeting \u003d \"Bye. Hope to see you again soon.\";","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"jennibearduit"},"content":"        return endGreeting;","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"jennibearduit"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"jennibearduit":64}},{"path":"src/main/java/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jennibearduit"},"content":"package commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"jennibearduit"},"content":"import tasks.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"jennibearduit"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"jennibearduit"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jennibearduit"},"content":" * This is an abstract AddCommand Class, which inherits from Command.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jennibearduit"},"content":" * This class abstracts the execution() method of its subclasses.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jennibearduit"},"content":" * The execution of this command will add a task to the task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jennibearduit"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jennibearduit"},"content":"public abstract class AddCommand extends Command {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"jennibearduit"},"content":"    protected Task task;","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"jennibearduit"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jennibearduit"},"content":"     * Add a task to the task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jennibearduit"},"content":"     * @param taskList The existing list where the task will be added to.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jennibearduit"},"content":"     * @return The completion message after execution.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jennibearduit"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jennibearduit"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jennibearduit"},"content":"        taskList.addTask(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jennibearduit"},"content":"        int numTasks \u003d taskList.getNumOfTasks();","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jennibearduit"},"content":"        return \"Got it. I\u0027ve added this task:\\n\\t\" + this.task","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"jennibearduit"},"content":"                + \"\\nNow you have \" + numTasks + \" tasks in the list.\";","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"jennibearduit"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"jennibearduit":24}},{"path":"src/main/java/commands/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jennibearduit"},"content":"package commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"jennibearduit"},"content":"import exceptions.MorganException;","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"jennibearduit"},"content":"import tasks.DeadlineTask;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"jennibearduit"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"jennibearduit"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jennibearduit"},"content":" * This is an AddDeadlineCommand Class, which inherits from AddCommand.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jennibearduit"},"content":" * The execution of this command will add a deadline task to the task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jennibearduit"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jennibearduit"},"content":"public class AddDeadlineCommand extends AddCommand {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"jennibearduit"},"content":"    private static final String DELIMITER \u003d \"/by\";","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"jennibearduit"},"content":"    public static final String KEYWORD \u003d \"deadline\";","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"jennibearduit"},"content":"    private static final int TASK_INDEX \u003d 0;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"jennibearduit"},"content":"    private static final int DATETIME_INDEX \u003d 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"jennibearduit"},"content":"    private static final int INPUT_PARAMETERS \u003d 2;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jennibearduit"},"content":"    private static final String INPUT_FORMAT \u003d String.format(\"\\t\\\"%s [task] %s \" +","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jennibearduit"},"content":"            \"[dd-mm-yyyy hh:mm]\\\"\", KEYWORD, DELIMITER);","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jennibearduit"},"content":"    private static final String INPUT_FORMAT_ERROR_MESSAGE \u003d String.format(\"Please \" +","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"jennibearduit"},"content":"            \"ensure your input is in the following format:\\n\" + INPUT_FORMAT);","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"jennibearduit"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jennibearduit"},"content":"     * Constructor for AddDeadlineCommand.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jennibearduit"},"content":"     * @param userInput The input string entered by the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jennibearduit"},"content":"     * @throws MorganException","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"jennibearduit"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"jennibearduit"},"content":"    public AddDeadlineCommand(String userInput) throws MorganException {","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"jennibearduit"},"content":"        // Check whether input contains delimiter","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"jennibearduit"},"content":"        boolean hasDelimiter \u003d userInput.contains(DELIMITER);","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"jennibearduit"},"content":"        if (!hasDelimiter) {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"jennibearduit"},"content":"            throw new MorganException(INPUT_FORMAT_ERROR_MESSAGE);","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"jennibearduit"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"jennibearduit"},"content":"        // Check whether input contains task and date/time","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"jennibearduit"},"content":"        String[] inputData \u003d userInput.substring(KEYWORD.length()).trim().split(DELIMITER);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"jennibearduit"},"content":"        boolean isValidInput \u003d (inputData.length \u003d\u003d INPUT_PARAMETERS);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"jennibearduit"},"content":"        if (!isValidInput) {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"jennibearduit"},"content":"            throw new MorganException(INPUT_FORMAT_ERROR_MESSAGE);","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"jennibearduit"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"jennibearduit"},"content":"        // Retrieve input parameters","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"jennibearduit"},"content":"        String taskName \u003d inputData[TASK_INDEX].trim();","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"jennibearduit"},"content":"        String dateTime \u003d inputData[DATETIME_INDEX].trim();","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"jennibearduit"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"jennibearduit"},"content":"            this.task \u003d new DeadlineTask(taskName, dateTime);","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"jennibearduit"},"content":"        } catch(DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"jennibearduit"},"content":"            throw new MorganException(INPUT_FORMAT_ERROR_MESSAGE);","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"jennibearduit"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"jennibearduit"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"jennibearduit":50}},{"path":"src/main/java/commands/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jennibearduit"},"content":"package commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"jennibearduit"},"content":"import exceptions.MorganException;","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"jennibearduit"},"content":"import tasks.EventTask;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"jennibearduit"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"jennibearduit"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jennibearduit"},"content":" * This is an AddEventCommand Class, which inherits from AddCommand.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jennibearduit"},"content":" * The execution of this command will add an event task to the task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jennibearduit"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jennibearduit"},"content":"public class AddEventCommand extends AddCommand {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"jennibearduit"},"content":"    private static final String DELIMITER \u003d \"/at\";","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"jennibearduit"},"content":"    public static final String KEYWORD \u003d \"event\";","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"jennibearduit"},"content":"    private static final int TASK_INDEX \u003d 0;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"jennibearduit"},"content":"    private static final int DATETIME_INDEX \u003d 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"jennibearduit"},"content":"    private static final int INPUT_PARAMETERS \u003d 2;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jennibearduit"},"content":"    private static final String INPUT_FORMAT \u003d String.format(\"\\t\\\"%s [task] %s \" +","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jennibearduit"},"content":"            \"[dd-mm-yyyy hh:mm]\\\"\", KEYWORD, DELIMITER);","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jennibearduit"},"content":"    private static final String INPUT_FORMAT_ERROR_MESSAGE \u003d String.format(\"Please \" +","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"jennibearduit"},"content":"            \"ensure your input is in the following format:\\n\" + INPUT_FORMAT);","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"jennibearduit"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jennibearduit"},"content":"     * Constructor for AddEventCommand.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jennibearduit"},"content":"     * @param userInput The input string entered by the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jennibearduit"},"content":"     * @throws MorganException","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"jennibearduit"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"jennibearduit"},"content":"    public AddEventCommand (String userInput) throws MorganException {","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"jennibearduit"},"content":"        // Check whether input contains delimiter","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"jennibearduit"},"content":"        boolean hasDelimiter \u003d userInput.contains(DELIMITER);","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"jennibearduit"},"content":"        if (!hasDelimiter) {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"jennibearduit"},"content":"            throw new MorganException(INPUT_FORMAT_ERROR_MESSAGE);","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"jennibearduit"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"jennibearduit"},"content":"        // Check whether input contains task and date/time","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"jennibearduit"},"content":"        String[] inputData \u003d userInput.substring(KEYWORD.length()).trim().split(DELIMITER);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"jennibearduit"},"content":"        boolean isValidInput \u003d (inputData.length \u003d\u003d INPUT_PARAMETERS);","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"jennibearduit"},"content":"        if (!isValidInput) {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"jennibearduit"},"content":"            throw new MorganException(INPUT_FORMAT_ERROR_MESSAGE);","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"jennibearduit"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"jennibearduit"},"content":"        // Retrieve input parameters","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"jennibearduit"},"content":"        String taskName \u003d inputData[TASK_INDEX].trim();","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"jennibearduit"},"content":"        String dateTime \u003d inputData[DATETIME_INDEX].trim();","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"jennibearduit"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"jennibearduit"},"content":"            this.task \u003d new EventTask(taskName, dateTime);","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"jennibearduit"},"content":"        } catch(DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"jennibearduit"},"content":"            throw new MorganException(INPUT_FORMAT_ERROR_MESSAGE);","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"jennibearduit"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"jennibearduit"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"jennibearduit":50}},{"path":"src/main/java/commands/AddToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jennibearduit"},"content":"package commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"jennibearduit"},"content":"import exceptions.MorganException;","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"jennibearduit"},"content":"import tasks.ToDoTask;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"jennibearduit"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jennibearduit"},"content":" * This is an AddToDoCommand Class, which inherits from AddCommand.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jennibearduit"},"content":" * The execution of this command will add a to-do task to the task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jennibearduit"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jennibearduit"},"content":"public class AddToDoCommand extends AddCommand {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"jennibearduit"},"content":"    public static final String KEYWORD \u003d \"todo\";","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"jennibearduit"},"content":"    private static final String INPUT_FORMAT \u003d String.format(\"\\t\\\"%s [task]\\\"\", KEYWORD);","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"jennibearduit"},"content":"    private static final String INPUT_FORMAT_ERROR_MESSAGE \u003d String.format(\"Please \" +","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"jennibearduit"},"content":"            \"ensure your input is in the following format:\\n\" + INPUT_FORMAT);","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"jennibearduit"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jennibearduit"},"content":"     * Constructor for AddToDoCommand.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jennibearduit"},"content":"     * @param userInput The input string entered by the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jennibearduit"},"content":"     * @throws MorganException","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"jennibearduit"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jennibearduit"},"content":"    public AddToDoCommand (String userInput) throws MorganException {","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"jennibearduit"},"content":"        String inputData \u003d userInput.substring(KEYWORD.length()).trim();","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"jennibearduit"},"content":"        // Check whether input contains task","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"jennibearduit"},"content":"        boolean hasTask \u003d !inputData.isEmpty();","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"jennibearduit"},"content":"        if (!hasTask) {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"jennibearduit"},"content":"            throw new MorganException(INPUT_FORMAT_ERROR_MESSAGE);","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"jennibearduit"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"jennibearduit"},"content":"        this.task \u003d new ToDoTask(inputData);","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"jennibearduit"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"jennibearduit":31}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jennibearduit"},"content":"package commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"jennibearduit"},"content":"import exceptions.MorganException;","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"jennibearduit"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"jennibearduit"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jennibearduit"},"content":" * This is an abstract Command class. Sub-classes of Command class will have","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jennibearduit"},"content":" * to inherit the execute() method to simulate the execution of the command.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jennibearduit"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jennibearduit"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"jennibearduit"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jennibearduit"},"content":"     * An abstract execute method to be inherited by sub-classes of Command.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jennibearduit"},"content":"     * @param taskList The existing list where the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jennibearduit"},"content":"     * @return The completion message after execution.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jennibearduit"},"content":"     * @throws MorganException","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"jennibearduit"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jennibearduit"},"content":"    public abstract String execute(TaskList taskList) throws MorganException;","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"jennibearduit"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"jennibearduit":17}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jennibearduit"},"content":"package commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"jennibearduit"},"content":"import exceptions.MorganException;","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"jennibearduit"},"content":"import tasks.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"jennibearduit"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"jennibearduit"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jennibearduit"},"content":" * This is an DeleteCommand Class, which inherits from Command.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jennibearduit"},"content":" * The execution of this command will delete a task from the task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jennibearduit"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jennibearduit"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"jennibearduit"},"content":"    private final int taskNumber;","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"jennibearduit"},"content":"    public static final String KEYWORD \u003d \"delete\";","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"jennibearduit"},"content":"    private static final String INPUT_FORMAT \u003d String.format(\"\\t\\\"%s [task number]\\\"\", KEYWORD);","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"jennibearduit"},"content":"    private static final String INPUT_FORMAT_ERROR_MESSAGE \u003d String.format(\"Please \" +","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"jennibearduit"},"content":"            \"ensure your input is in the following format:\\n\" + INPUT_FORMAT);","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"jennibearduit"},"content":"    private static final String TASK_NUMBER_ERROR_MESSAGE \u003d String.format(\"Please \" +","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"jennibearduit"},"content":"            \"provide a valid task number.\");","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"jennibearduit"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jennibearduit"},"content":"     * Constructor for DeleteCommand","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jennibearduit"},"content":"     * @param userInput The input string entered by the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jennibearduit"},"content":"     * @throws MorganException","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"jennibearduit"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jennibearduit"},"content":"    public DeleteCommand(String userInput) throws MorganException {","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"jennibearduit"},"content":"        String intString \u003d userInput.substring(KEYWORD.length()).trim();","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"jennibearduit"},"content":"        // Checks if user specified task number","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"jennibearduit"},"content":"        if (intString.isEmpty()) {","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"jennibearduit"},"content":"            throw new MorganException(INPUT_FORMAT_ERROR_MESSAGE);","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"jennibearduit"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"jennibearduit"},"content":"        // Checks if task number is an integer","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"jennibearduit"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"jennibearduit"},"content":"            this.taskNumber \u003d Integer.parseInt(intString);","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"jennibearduit"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"jennibearduit"},"content":"            throw new MorganException(TASK_NUMBER_ERROR_MESSAGE);","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"jennibearduit"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"jennibearduit"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"jennibearduit"},"content":"     * Delete a task from the task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"jennibearduit"},"content":"     * @param taskList The existing list where a task will be deleted from.","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"jennibearduit"},"content":"     * @return The completion message after execution.","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"jennibearduit"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"jennibearduit"},"content":"    public String execute(TaskList taskList) throws MorganException {","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"jennibearduit"},"content":"        boolean isValidTaskNumber \u003d this.taskNumber \u003c\u003d taskList.getNumOfTasks()","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"jennibearduit"},"content":"                \u0026\u0026 this.taskNumber \u003e 0;","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"jennibearduit"},"content":"        // Checks if task number is valid","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"jennibearduit"},"content":"        if (!isValidTaskNumber) {","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"jennibearduit"},"content":"            throw new MorganException(TASK_NUMBER_ERROR_MESSAGE);","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"jennibearduit"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"jennibearduit"},"content":"        // Obtain task and remove","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"jennibearduit"},"content":"        Task task \u003d taskList.getTask(this.taskNumber);","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"jennibearduit"},"content":"        taskList.remove(this.taskNumber);","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"jennibearduit"},"content":"        // Message displayed upon execution","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"jennibearduit"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\\t\" + task.toString()","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"jennibearduit"},"content":"                + \"\\nNow you have \" + taskList.getNumOfTasks()","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"jennibearduit"},"content":"                + \" tasks in the list.\";","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"jennibearduit"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"jennibearduit":63}},{"path":"src/main/java/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jennibearduit"},"content":"package commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jennibearduit"},"content":"import exceptions.MorganException;","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"jennibearduit"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jennibearduit"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jennibearduit"},"content":" * This is an FindCommand Class, which inherits from Command.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jennibearduit"},"content":" * The execution of this command will return a list of tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jennibearduit"},"content":" * which contains the keyword.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jennibearduit"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jennibearduit"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jennibearduit"},"content":"    public static final String KEYWORD \u003d \"find\";","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jennibearduit"},"content":"    private static final String INPUT_FORMAT \u003d String.format(\"\\t\\\"%s [keyword]\\\"\", KEYWORD);","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"jennibearduit"},"content":"    private static final String INPUT_FORMAT_ERROR_MESSAGE \u003d String.format(\"Please \" +","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"jennibearduit"},"content":"            \"ensure your input is in the following format:\\n\" + INPUT_FORMAT);","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"jennibearduit"},"content":"    private final String NOT_FOUND_ERROR_MESSAGE \u003d \"No matching task found. \"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"jennibearduit"},"content":"            + \"Please try another keyword.\";","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"jennibearduit"},"content":"    private final String keyTerm;","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jennibearduit"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jennibearduit"},"content":"     * Constructor for command.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jennibearduit"},"content":"     * @param userInput The input string entered by the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jennibearduit"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jennibearduit"},"content":"    public FindCommand(String userInput) throws MorganException {","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"jennibearduit"},"content":"        String inputData \u003d userInput.substring(KEYWORD.length()).trim();","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"jennibearduit"},"content":"        this.keyTerm \u003d inputData.toLowerCase();","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"jennibearduit"},"content":"        // Checks if user specified key term","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"jennibearduit"},"content":"        if (keyTerm.isEmpty()) {","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"jennibearduit"},"content":"            throw new MorganException(INPUT_FORMAT_ERROR_MESSAGE);","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"jennibearduit"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"jennibearduit"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"jennibearduit"},"content":"     * Returns a list of tasks containing the specified keyword.","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"jennibearduit"},"content":"     * @param taskList The existing list of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"jennibearduit"},"content":"     * @return The list of tasks containing the specified keyword.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"jennibearduit"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"jennibearduit"},"content":"    public String execute(TaskList taskList) throws MorganException {","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"jennibearduit"},"content":"        TaskList foundTasks \u003d taskList.findTasks(keyTerm);","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"jennibearduit"},"content":"        // Throws exception if no matching task found","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"jennibearduit"},"content":"        if (foundTasks.isEmpty()) {","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"jennibearduit"},"content":"            throw new MorganException(NOT_FOUND_ERROR_MESSAGE) ;","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"jennibearduit"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"jennibearduit"},"content":"        // Message displayed upon execution","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"jennibearduit"},"content":"        String output \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"jennibearduit"},"content":"        output +\u003d foundTasks.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"jennibearduit"},"content":"        return output;","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"jennibearduit"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"jennibearduit":51}},{"path":"src/main/java/commands/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jennibearduit"},"content":"package commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"jennibearduit"},"content":"import exceptions.MorganException;","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"jennibearduit"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"jennibearduit"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jennibearduit"},"content":" * This class inherits from Command and encapsulates an invalid command.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jennibearduit"},"content":" * Execution of this command will send a message to user to enter a","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jennibearduit"},"content":" * valid command.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jennibearduit"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jennibearduit"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"jennibearduit"},"content":"    private final String INVALID_COMMAND_ERROR_MESSAGE \u003d \"Please enter a valid command.\";","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"jennibearduit"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jennibearduit"},"content":"     * Throws an exception to prompt user to enter a valid command.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jennibearduit"},"content":"     * @param taskList The existing list of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jennibearduit"},"content":"     * @return The completion message after execution.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jennibearduit"},"content":"     * @throws MorganException","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"jennibearduit"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jennibearduit"},"content":"    public String execute(TaskList taskList) throws MorganException {","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"jennibearduit"},"content":"        throw new MorganException(INVALID_COMMAND_ERROR_MESSAGE);","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"jennibearduit"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"jennibearduit":22}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jennibearduit"},"content":"package commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"jennibearduit"},"content":"import exceptions.MorganException;","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"jennibearduit"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"jennibearduit"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jennibearduit"},"content":" * This is an AddDeadlineCommand Class, which inherits from Command.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jennibearduit"},"content":" * The execution of this command will output the current list of tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jennibearduit"},"content":" * to the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jennibearduit"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jennibearduit"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"jennibearduit"},"content":"    public static final String KEYWORD \u003d \"list\";","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"jennibearduit"},"content":"    private final String EMPTY_LIST_ERROR_MESSAGE \u003d \"There is no existing task.\";","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"jennibearduit"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jennibearduit"},"content":"     * Return list of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jennibearduit"},"content":"     * @param taskList The existing list of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jennibearduit"},"content":"     * @return The list of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jennibearduit"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jennibearduit"},"content":"    public String execute(TaskList taskList) throws MorganException {","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"jennibearduit"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"jennibearduit"},"content":"            throw new MorganException(EMPTY_LIST_ERROR_MESSAGE);","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"jennibearduit"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"jennibearduit"},"content":"        return \"Here are the tasks in your list:\\n\" + taskList.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"jennibearduit"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"jennibearduit":25}},{"path":"src/main/java/commands/MarkDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jennibearduit"},"content":"package commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"jennibearduit"},"content":"import exceptions.MorganException;","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"jennibearduit"},"content":"import tasks.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"jennibearduit"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"jennibearduit"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jennibearduit"},"content":" * This is a MarkDoneCommand Class, which inherits from Command.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jennibearduit"},"content":" * The execution of this command will mark a task as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jennibearduit"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jennibearduit"},"content":"public class MarkDoneCommand extends Command {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"jennibearduit"},"content":"    private final int taskNumber;","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"jennibearduit"},"content":"    public static final String KEYWORD \u003d \"done\";","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"jennibearduit"},"content":"    private static final String INPUT_FORMAT \u003d String.format(\"\\t\\\"%s [task number]\\\"\", KEYWORD);","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"jennibearduit"},"content":"    private static final String INPUT_FORMAT_ERROR_MESSAGE \u003d String.format(\"Please \" +","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"jennibearduit"},"content":"            \"ensure your input is in the following format:\\n\" + INPUT_FORMAT);","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"jennibearduit"},"content":"    private static final String TASK_NUMBER_ERROR_MESSAGE \u003d String.format(\"Please \" +","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"jennibearduit"},"content":"            \"provide a valid task number.\");","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"jennibearduit"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jennibearduit"},"content":"     * Constructor for MarkDoneCommand.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jennibearduit"},"content":"     * @param userInput The input string entered by the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jennibearduit"},"content":"     * @throws MorganException","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"jennibearduit"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jennibearduit"},"content":"    public MarkDoneCommand(String userInput) throws MorganException {","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"jennibearduit"},"content":"        String intString \u003d userInput.substring(KEYWORD.length()).trim();","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"jennibearduit"},"content":"        // Checks if user specified task number","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"jennibearduit"},"content":"        if (intString.isEmpty()) {","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"jennibearduit"},"content":"            throw new MorganException(INPUT_FORMAT_ERROR_MESSAGE);","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"jennibearduit"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"jennibearduit"},"content":"        // Checks if task number is an integer","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"jennibearduit"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"jennibearduit"},"content":"            this.taskNumber \u003d Integer.parseInt(intString);","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"jennibearduit"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"jennibearduit"},"content":"            throw new MorganException(TASK_NUMBER_ERROR_MESSAGE);","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"jennibearduit"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"jennibearduit"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"jennibearduit"},"content":"     * Mark a task as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"jennibearduit"},"content":"     * @param taskList The existing list where the task is.","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"jennibearduit"},"content":"     * @return The completion message after execution.","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"jennibearduit"},"content":"     * @throws MorganException","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"jennibearduit"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"jennibearduit"},"content":"    public String execute(TaskList taskList) throws MorganException {","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"jennibearduit"},"content":"        boolean isValidTaskNumber \u003d this.taskNumber \u003c\u003d taskList.getNumOfTasks()","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"jennibearduit"},"content":"                \u0026\u0026 this.taskNumber \u003e 0;","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"jennibearduit"},"content":"        // Checks if task number is valid","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"jennibearduit"},"content":"        if (!isValidTaskNumber) {","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"jennibearduit"},"content":"            throw new MorganException(TASK_NUMBER_ERROR_MESSAGE);","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"jennibearduit"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"jennibearduit"},"content":"        // Obtain task and mark done","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"jennibearduit"},"content":"        taskList.markAsDone(this.taskNumber);","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"jennibearduit"},"content":"        Task task \u003d taskList.getTask(this.taskNumber);","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"jennibearduit"},"content":"        // Message displayed upon execution","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"jennibearduit"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\\t\"","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"jennibearduit"},"content":"                + task.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"jennibearduit"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"jennibearduit":63}},{"path":"src/main/java/exceptions/MorganException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jennibearduit"},"content":"package exceptions;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"jennibearduit"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jennibearduit"},"content":" * This class encapsulates all checked exceptions in Morgan.","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"jennibearduit"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jennibearduit"},"content":"public class MorganException extends Exception {","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"jennibearduit"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jennibearduit"},"content":"     * Constructor for MorganException.","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"jennibearduit"},"content":"     * @param message The error message to be displayed to user.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jennibearduit"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jennibearduit"},"content":"    public MorganException(String message) {","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"jennibearduit"},"content":"        super(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"jennibearduit"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"jennibearduit":14}},{"path":"src/main/java/tasks/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jennibearduit"},"content":"package tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"jennibearduit"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jennibearduit"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jennibearduit"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"jennibearduit"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jennibearduit"},"content":" * This is a DeadlineTask class, which inherits from Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jennibearduit"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jennibearduit"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"jennibearduit"},"content":"    private static final DateTimeFormatter INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"d-M-yyyy k:mm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jennibearduit"},"content":"    private static final DateTimeFormatter OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy hh.mma\");","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jennibearduit"},"content":"    public static final String KEYWORD \u003d \"[Deadline]\";","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"jennibearduit"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"jennibearduit"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jennibearduit"},"content":"     * Constructor for DeadlineTask.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jennibearduit"},"content":"     * @param taskName The description of the deadline task.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jennibearduit"},"content":"     * @param dateTime The deadline of the task in \"dd-mm-yyyy hh:mm\".","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jennibearduit"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jennibearduit"},"content":"    public DeadlineTask(String taskName, String dateTime) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jennibearduit"},"content":"        super(taskName);","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"jennibearduit"},"content":"        this.dateTime \u003d LocalDateTime.parse(dateTime, INPUT_FORMAT);","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"jennibearduit"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"jennibearduit"},"content":"     * Returns the date and time as the input format to the constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"jennibearduit"},"content":"     * @return The string representation of the date and time.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"jennibearduit"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jennibearduit"},"content":"    public String getDateTime() {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"jennibearduit"},"content":"        return this.dateTime.format(INPUT_FORMAT);","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"jennibearduit"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"jennibearduit"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"jennibearduit"},"content":"        return KEYWORD + \" \" + super.toString() + \"\\n\\t(by: \"","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"jennibearduit"},"content":"                + this.dateTime.format(OUTPUT_FORMAT) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"jennibearduit"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"jennibearduit":38}},{"path":"src/main/java/tasks/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jennibearduit"},"content":"package tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"jennibearduit"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jennibearduit"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"jennibearduit"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jennibearduit"},"content":" * This is an EventTask class, which inherits from Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jennibearduit"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jennibearduit"},"content":"public class EventTask extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"jennibearduit"},"content":"    private static final DateTimeFormatter INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"d-M-yyyy k:mm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jennibearduit"},"content":"    private static final DateTimeFormatter OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy hh.mma\");","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jennibearduit"},"content":"    public static final String KEYWORD \u003d \"[Event]\";","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"jennibearduit"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"jennibearduit"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jennibearduit"},"content":"     * Constructor for EventTask.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jennibearduit"},"content":"     * @param taskName The description of the deadline task.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jennibearduit"},"content":"     * @param dateTime The deadline of the task in \"dd-mm-yyyy hh:mm\".","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jennibearduit"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jennibearduit"},"content":"    public EventTask(String taskName, String dateTime) {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jennibearduit"},"content":"        super(taskName);","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"jennibearduit"},"content":"        this.dateTime \u003d LocalDateTime.parse(dateTime, INPUT_FORMAT);","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"jennibearduit"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"jennibearduit"},"content":"     * Returns the date and time as the input format to the constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"jennibearduit"},"content":"     * @return The string representation of the date and time.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"jennibearduit"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"jennibearduit"},"content":"    public String getDateTime() {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jennibearduit"},"content":"        return this.dateTime.format(INPUT_FORMAT);","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"jennibearduit"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"jennibearduit"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"jennibearduit"},"content":"        return KEYWORD + \" \" + super.toString() + \"\\n\\t(at: \"","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"jennibearduit"},"content":"                + this.dateTime.format(OUTPUT_FORMAT) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"jennibearduit"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"jennibearduit":37}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jennibearduit"},"content":"package tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"jennibearduit"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jennibearduit"},"content":" * This is a Task Class, which encapsulates task name and","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jennibearduit"},"content":" * task status (done / not done).","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jennibearduit"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jennibearduit"},"content":"public class Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"jennibearduit"},"content":"    protected final String taskName;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jennibearduit"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"jennibearduit"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jennibearduit"},"content":"     * Constructor for Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jennibearduit"},"content":"     * @param taskName The description of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jennibearduit"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jennibearduit"},"content":"    public Task(String taskName) {","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"jennibearduit"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"jennibearduit"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"jennibearduit"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jennibearduit"},"content":"     * Returns the status of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jennibearduit"},"content":"     * @return The boolean status of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jennibearduit"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jennibearduit"},"content":"    public boolean getStatus() {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"jennibearduit"},"content":"        // Mark done task with X","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"jennibearduit"},"content":"        return isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"jennibearduit"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"jennibearduit"},"content":"     * Returns \"true\" if task is done, \"false otherwise.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"jennibearduit"},"content":"     * @return The string \"true\" if task is done, \"false otherwise.","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"jennibearduit"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"jennibearduit"},"content":"    public String markDone() {","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"jennibearduit"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"jennibearduit"},"content":"        return this.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"jennibearduit"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"jennibearduit"},"content":"     * Returns the task name.","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"jennibearduit"},"content":"     * @return The task name.","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"jennibearduit"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"jennibearduit"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"jennibearduit"},"content":"        return this.taskName;","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"jennibearduit"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"jennibearduit"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"jennibearduit"},"content":"        String status \u003d isDone ? \"X\" : \" \";","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"jennibearduit"},"content":"        return \"[\" + status + \"]  \" + this.taskName ;","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"jennibearduit"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"jennibearduit":51}},{"path":"src/main/java/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jennibearduit"},"content":"package tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"jennibearduit"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"jennibearduit"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jennibearduit"},"content":" * This TaskList class encapsulates the collection of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jennibearduit"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jennibearduit"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jennibearduit"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"jennibearduit"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jennibearduit"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jennibearduit"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jennibearduit"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jennibearduit"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"jennibearduit"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jennibearduit"},"content":"     * Adds a task to the existing task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jennibearduit"},"content":"     * @param task The task to be added into the list.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jennibearduit"},"content":"     * @return True","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jennibearduit"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jennibearduit"},"content":"    public boolean addTask(Task task) {","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"jennibearduit"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"jennibearduit"},"content":"        return true;","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"jennibearduit"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jennibearduit"},"content":"     * Finds a task specified by the keyword.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"jennibearduit"},"content":"     * @param keyword The keyword used to find tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"jennibearduit"},"content":"     * @return The list of tasks that contains the keyword.","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"jennibearduit"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"jennibearduit"},"content":"    public TaskList findTasks(String keyword) {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"jennibearduit"},"content":"        TaskList output \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"jennibearduit"},"content":"        for (Task t : this.tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"jennibearduit"},"content":"            String taskString \u003d t.toString().toLowerCase();","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"jennibearduit"},"content":"            boolean isKeywordFound \u003d taskString.contains(keyword);","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"jennibearduit"},"content":"            if (isKeywordFound) {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"jennibearduit"},"content":"                output.addTask(t);","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"jennibearduit"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"jennibearduit"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"jennibearduit"},"content":"        return output;","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"jennibearduit"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"jennibearduit"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"jennibearduit"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"jennibearduit"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"jennibearduit"},"content":"    public int getNumOfTasks() {","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"jennibearduit"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"jennibearduit"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"jennibearduit"},"content":"     * Marks a task of the specified index as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"jennibearduit"},"content":"     * @param taskNumber The index of the task to be marked as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"jennibearduit"},"content":"     * @return True","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"jennibearduit"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"jennibearduit"},"content":"    public boolean markAsDone(int taskNumber) {","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"jennibearduit"},"content":"        tasks.get(taskNumber - 1).markDone();","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"jennibearduit"},"content":"        return true;","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"jennibearduit"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"jennibearduit"},"content":"     * Returns a task specified by the index.","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"jennibearduit"},"content":"     * @param taskNumber The index of the task to be retrieved.","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"jennibearduit"},"content":"     * @return The task specified by the index.","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"jennibearduit"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"jennibearduit"},"content":"    public Task getTask(int taskNumber) {","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"jennibearduit"},"content":"        return tasks.get(taskNumber - 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"jennibearduit"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"jennibearduit"},"content":"     * Removes a task specified by the index.","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"jennibearduit"},"content":"     * @param taskNumber the index of the task to be removed.","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"jennibearduit"},"content":"     * @return The task specified by the index.","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"jennibearduit"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"jennibearduit"},"content":"    public boolean remove(int taskNumber) {","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"jennibearduit"},"content":"        tasks.remove(taskNumber - 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"jennibearduit"},"content":"        return true;","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"jennibearduit"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"jennibearduit"},"content":"     * Returns true if the task list is empty.","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"jennibearduit"},"content":"     * @return True if the task list is empty; false otherwise.","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"jennibearduit"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"jennibearduit"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"jennibearduit"},"content":"        return this.tasks.isEmpty();","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"jennibearduit"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":91,"author":{"gitId":"jennibearduit"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":92,"author":{"gitId":"jennibearduit"},"content":"        // Empty task list will print nothing","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"jennibearduit"},"content":"        StringBuilder listString \u003d new StringBuilder();","lastModifiedDate":"2021-08-19"},{"lineNumber":94,"author":{"gitId":"jennibearduit"},"content":"        int numTasks \u003d tasks.size();","lastModifiedDate":"2021-08-19"},{"lineNumber":95,"author":{"gitId":"jennibearduit"},"content":"        for (int i \u003d 0; i \u003c numTasks; i++) {","lastModifiedDate":"2021-08-19"},{"lineNumber":96,"author":{"gitId":"jennibearduit"},"content":"            listString.append(i + 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":97,"author":{"gitId":"jennibearduit"},"content":"            listString.append(\". \");","lastModifiedDate":"2021-08-19"},{"lineNumber":98,"author":{"gitId":"jennibearduit"},"content":"            listString.append(tasks.get(i).toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":99,"author":{"gitId":"jennibearduit"},"content":"            if (i !\u003d numTasks - 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":100,"author":{"gitId":"jennibearduit"},"content":"                listString.append(\"\\n\");","lastModifiedDate":"2021-08-19"},{"lineNumber":101,"author":{"gitId":"jennibearduit"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":102,"author":{"gitId":"jennibearduit"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":103,"author":{"gitId":"jennibearduit"},"content":"        return listString.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":104,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":105,"author":{"gitId":"jennibearduit"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"jennibearduit":105}},{"path":"src/main/java/tasks/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jennibearduit"},"content":"package tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"jennibearduit"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jennibearduit"},"content":" * This is a ToDoTask class, which inherits from Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jennibearduit"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jennibearduit"},"content":"public class ToDoTask extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"jennibearduit"},"content":"    public static final String KEYWORD \u003d \"[Todo]\";","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jennibearduit"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jennibearduit"},"content":"     * Constructor for ToDoTask.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jennibearduit"},"content":"     * @param taskName The description of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jennibearduit"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jennibearduit"},"content":"    public ToDoTask(String taskName) {","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"jennibearduit"},"content":"        super(taskName);","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"jennibearduit"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"jennibearduit"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"jennibearduit"},"content":"        return KEYWORD + \" \" + super.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"jennibearduit"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"jennibearduit":21}},{"path":"src/test/java/CommandParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jennibearduit"},"content":"import commands.AddDeadlineCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jennibearduit"},"content":"import commands.AddEventCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jennibearduit"},"content":"import commands.AddToDoCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jennibearduit"},"content":"import commands.DeleteCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jennibearduit"},"content":"import commands.MarkDoneCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"jennibearduit"},"content":"import exceptions.MorganException;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"jennibearduit"},"content":"import org.testng.annotations.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"jennibearduit"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jennibearduit"},"content":"import tasks.ToDoTask;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jennibearduit"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jennibearduit"},"content":"public class CommandParserTest {","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"jennibearduit"},"content":"    private final CommandParser parser \u003d new CommandParser();","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"jennibearduit"},"content":"    private final Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jennibearduit"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jennibearduit"},"content":"    public void testDelete() {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jennibearduit"},"content":"        TaskList t1 \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jennibearduit"},"content":"        TaskList t2 \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jennibearduit"},"content":"        t1.addTask(new ToDoTask(\"todo do CS2030 quiz\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jennibearduit"},"content":"        t2.addTask(new ToDoTask(\"todo do CS2030 quiz\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jennibearduit"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jennibearduit"},"content":"            String expected \u003d (new DeleteCommand(\"delete 1\")).execute(t1);","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"jennibearduit"},"content":"            String actual \u003d parser.getCommand(\"delete 1\").execute(t2);","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"jennibearduit"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"jennibearduit"},"content":"        } catch (MorganException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"jennibearduit"},"content":"            ui.print(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jennibearduit"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"jennibearduit"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"jennibearduit"},"content":"    public void testMarkDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"jennibearduit"},"content":"        TaskList t1 \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"jennibearduit"},"content":"        TaskList t2 \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"jennibearduit"},"content":"        t1.addTask(new ToDoTask(\"todo do CS2030 quiz\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"jennibearduit"},"content":"        t2.addTask(new ToDoTask(\"todo do CS2030 quiz\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"jennibearduit"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"jennibearduit"},"content":"            String expected \u003d (new MarkDoneCommand(\"done 1\")).execute(t1);","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"jennibearduit"},"content":"            String actual \u003d parser.getCommand(\"done 1\").execute(t2);","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"jennibearduit"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"jennibearduit"},"content":"        } catch (MorganException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"jennibearduit"},"content":"            ui.print(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"jennibearduit"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"jennibearduit"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"jennibearduit"},"content":"    public void testAddTodo() {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"jennibearduit"},"content":"        TaskList t1 \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"jennibearduit"},"content":"        TaskList t2 \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"jennibearduit"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"jennibearduit"},"content":"            String expected \u003d (new AddToDoCommand(\"todo do CS2030 quiz\")).execute(t1);","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"jennibearduit"},"content":"            String actual \u003d parser.getCommand(\"todo do CS2030 quiz\").execute(t2);","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"jennibearduit"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"jennibearduit"},"content":"        } catch (MorganException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"jennibearduit"},"content":"            ui.print(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"jennibearduit"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"jennibearduit"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"jennibearduit"},"content":"    public void testAddEvent() {","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"jennibearduit"},"content":"        TaskList t1 \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"jennibearduit"},"content":"        TaskList t2 \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"jennibearduit"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"jennibearduit"},"content":"            String expected \u003d (new AddEventCommand(\"event do CS2030 quiz /at 27-08-2021 18:00\"))","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"jennibearduit"},"content":"                    .execute(t1);","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"jennibearduit"},"content":"            String actual \u003d parser.getCommand(\"event do CS2030 quiz /at 27-08-2021 18:00\")","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"jennibearduit"},"content":"                    .execute(t2);","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"jennibearduit"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"jennibearduit"},"content":"        } catch (MorganException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"jennibearduit"},"content":"            ui.print(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"jennibearduit"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"jennibearduit"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"jennibearduit"},"content":"    public void testAddDeadline() {","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"jennibearduit"},"content":"        TaskList t1 \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"jennibearduit"},"content":"        TaskList t2 \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"jennibearduit"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"jennibearduit"},"content":"            String expected \u003d (new AddDeadlineCommand(\"deadline do CS2030 quiz /by 27-08-2021 18:00\"))","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"jennibearduit"},"content":"                    .execute(t1);","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"jennibearduit"},"content":"            String actual \u003d parser.getCommand(\"deadline do CS2030 quiz /by 27-08-2021 18:00\")","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"jennibearduit"},"content":"                    .execute(t2);","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"jennibearduit"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"jennibearduit"},"content":"        } catch (MorganException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"jennibearduit"},"content":"            ui.print(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"jennibearduit"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"jennibearduit"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"jennibearduit":89}},{"path":"src/test/java/MorganTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jennibearduit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jennibearduit"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jennibearduit"},"content":"public class MorganTest {","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"jennibearduit"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jennibearduit"},"content":"    public void dummyTest(){","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jennibearduit"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jennibearduit"},"content":"        new Morgan();","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jennibearduit"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"jennibearduit":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jennibearduit"},"content":"invalid command","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"jennibearduit"},"content":"deadline","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"jennibearduit"},"content":"todo Do CS2103 Quiz","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"jennibearduit"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"jennibearduit"},"content":"todo","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"jennibearduit"},"content":"deadline /by","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"jennibearduit"},"content":"deadline Do CS2103 Individual Project /by Thursday","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"jennibearduit"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"jennibearduit"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"jennibearduit"},"content":"event CS2103 Tutorial","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"jennibearduit"},"content":"event CS2103 Tutorial /at","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"jennibearduit"},"content":"event CS2103 Tutorial /at Mon 3-4pm","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"jennibearduit"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"jennibearduit"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"jennibearduit":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"jennibearduit"},"content":"java -classpath ..\\bin Morgan \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"jennibearduit":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"jennibearduit"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":33,"jennibearduit":1}}]
