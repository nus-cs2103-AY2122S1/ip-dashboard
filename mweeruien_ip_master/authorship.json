[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"mweeruien"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"mweeruien"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"mweeruien":2}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"mweeruien"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"mweeruien"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"mweeruien"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"mweeruien"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"mweeruien"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"mweeruien"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"mweeruien"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"mweeruien"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"mweeruien"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"mweeruien"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"mweeruien"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"mweeruien"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"mweeruien"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"mweeruien"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":45,"mweeruien":16}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mweeruien"},"content":"T@1@watch anime@ @fun cri @","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"mweeruien"},"content":"D@1@finish episode @2021-05-21T22:00@ @","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"mweeruien"},"content":"T@0@watch lecture episode@ @ @","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"mweeruien"},"content":"T@0@visit Japan!!@ @YAY uwu??? @","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"mweeruien"},"content":"D@0@cri @2020-12-12T10:00@ @","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"mweeruien"},"content":"E@1@CRYYY @2021-05-21T22:00~23:00@ @","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"mweeruien"},"content":"E@0@Take a nap @2020-12-21T22:00~23:00@ @","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"mweeruien":7}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"mweeruien"},"content":"# _**Notaro User Guide**_","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"mweeruien"},"content":"# Features","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"mweeruien"},"content":"* [Add Deadline](#add-deadline-deadline)","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"mweeruien"},"content":"* [Add Event](#add-event-event)","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"mweeruien"},"content":"* [Add Todo](#add-todo-todo)","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"mweeruien"},"content":"* [List Tasks](#list-tasks-list)","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"mweeruien"},"content":"* [Mark Task as Done](#mark-tasks-as-done-done)","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"mweeruien"},"content":"* [Tag Task](#tag-task-tag)","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"mweeruien"},"content":"* [Delete Task](#delete-tasks-delete)","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"mweeruien"},"content":"* [Find Tasks](#find-tasks-find)","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"mweeruien"},"content":"* [Exit-Program](#exit-program-bye)","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"mweeruien"},"content":"# How to use","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"mweeruien"},"content":"### Add Deadline: `deadline`","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"mweeruien"},"content":"Adds a Deadline task to the list of tasks.","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":19,"author":{"gitId":"mweeruien"},"content":"**Format**  ","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"mweeruien"},"content":"`deadline DEADLINE_NAME /by DATE TIME`  ","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"mweeruien"},"content":"(Note that the \"DATE TIME\" must be in format : `YYYY-MM-DD HH:MM`)","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":23,"author":{"gitId":"mweeruien"},"content":"**Example**  ","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"mweeruien"},"content":"Input : `deadline finish episode /by 2021-05-21 23:59`  ","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"mweeruien"},"content":"Output : ","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"mweeruien"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"mweeruien"},"content":"Okay! I\u0027ve added the following:","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"mweeruien"},"content":"[D][ ] finish episode (by: 21 May 2021 11.59 pm)","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"mweeruien"},"content":"1 more tasks to go!","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"mweeruien"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"mweeruien"},"content":"___","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"mweeruien"},"content":"### Add Event: `event`","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"mweeruien"},"content":"Adds an Event task to the list of tasks.","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"mweeruien"},"content":"**Format**  ","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"mweeruien"},"content":"`event EVENT_NAME /at DATE START_TIME~END_TIME`","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"mweeruien"},"content":"(Note that the dates must be in format : `YYYY-MM-DD`, and times in format: `HH:MM`)","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"mweeruien"},"content":"**Example**  ","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"mweeruien"},"content":"Input : `event afa /at 2019-11-27 15:00~20:00`","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"mweeruien"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"mweeruien"},"content":"Okay! I\u0027ve added the following:","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"mweeruien"},"content":"[E][ ] afa (at: 27 Nov 2019 3:00 pm - 8:00 pm)","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"mweeruien"},"content":"2 more tasks to go!","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"mweeruien"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":47,"author":{"gitId":"mweeruien"},"content":"___","lastModifiedDate":"2021-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"mweeruien"},"content":"### Add Todo: `todo`","lastModifiedDate":"2021-09-14"},{"lineNumber":50,"author":{"gitId":"mweeruien"},"content":"Adds a Todo task to the list of tasks.","lastModifiedDate":"2021-09-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":52,"author":{"gitId":"mweeruien"},"content":"**Format**  ","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"mweeruien"},"content":"`todo TODO_NAME`","lastModifiedDate":"2021-09-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"mweeruien"},"content":"**Example**  ","lastModifiedDate":"2021-09-16"},{"lineNumber":56,"author":{"gitId":"mweeruien"},"content":"Input: `todo watch anime`  ","lastModifiedDate":"2021-09-14"},{"lineNumber":57,"author":{"gitId":"mweeruien"},"content":"Output:","lastModifiedDate":"2021-09-14"},{"lineNumber":58,"author":{"gitId":"mweeruien"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":59,"author":{"gitId":"mweeruien"},"content":"Okay! I\u0027ve added the following:","lastModifiedDate":"2021-09-14"},{"lineNumber":60,"author":{"gitId":"mweeruien"},"content":"[T][ ] watch anime","lastModifiedDate":"2021-09-14"},{"lineNumber":61,"author":{"gitId":"mweeruien"},"content":"3 more tasks to go!","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"mweeruien"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":63,"author":{"gitId":"mweeruien"},"content":"---","lastModifiedDate":"2021-09-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":65,"author":{"gitId":"mweeruien"},"content":"### List Tasks: `list`","lastModifiedDate":"2021-09-14"},{"lineNumber":66,"author":{"gitId":"mweeruien"},"content":"Lists out all the tasks.","lastModifiedDate":"2021-09-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":68,"author":{"gitId":"mweeruien"},"content":"**Format**  ","lastModifiedDate":"2021-09-16"},{"lineNumber":69,"author":{"gitId":"mweeruien"},"content":"`list`","lastModifiedDate":"2021-09-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":71,"author":{"gitId":"mweeruien"},"content":"**Example**  ","lastModifiedDate":"2021-09-16"},{"lineNumber":72,"author":{"gitId":"mweeruien"},"content":"Input : `list`  ","lastModifiedDate":"2021-09-14"},{"lineNumber":73,"author":{"gitId":"mweeruien"},"content":"Output :","lastModifiedDate":"2021-09-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":75,"author":{"gitId":"mweeruien"},"content":"Here are your tasks:","lastModifiedDate":"2021-09-14"},{"lineNumber":76,"author":{"gitId":"mweeruien"},"content":"1. [D][ ] finish episode (by: 21 May 2021 11.59 pm)","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"mweeruien"},"content":"2. [E][ ] afa (at: 27 Nov 2019 3:00 pm - 8:00 pm)","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"mweeruien"},"content":"3. [T][ ] watch anime","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":80,"author":{"gitId":"mweeruien"},"content":"---","lastModifiedDate":"2021-09-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":82,"author":{"gitId":"mweeruien"},"content":"### Mark Tasks as Done: `done`","lastModifiedDate":"2021-09-14"},{"lineNumber":83,"author":{"gitId":"mweeruien"},"content":"Mark a task as done.","lastModifiedDate":"2021-09-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":85,"author":{"gitId":"mweeruien"},"content":"**Format**  ","lastModifiedDate":"2021-09-16"},{"lineNumber":86,"author":{"gitId":"mweeruien"},"content":"`done INDEX`","lastModifiedDate":"2021-09-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":88,"author":{"gitId":"mweeruien"},"content":"**Example**  ","lastModifiedDate":"2021-09-16"},{"lineNumber":89,"author":{"gitId":"mweeruien"},"content":"Input : `done 1`  ","lastModifiedDate":"2021-09-14"},{"lineNumber":90,"author":{"gitId":"mweeruien"},"content":"Output : ","lastModifiedDate":"2021-09-14"},{"lineNumber":91,"author":{"gitId":"mweeruien"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":92,"author":{"gitId":"mweeruien"},"content":"Yay good job! [D][X] finish episode (by: 21 May 2021 11.59 pm) has been completed","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"mweeruien"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":94,"author":{"gitId":"mweeruien"},"content":"---","lastModifiedDate":"2021-09-14"},{"lineNumber":95,"author":{"gitId":"mweeruien"},"content":"### Tag Task: `tag`","lastModifiedDate":"2021-09-14"},{"lineNumber":96,"author":{"gitId":"mweeruien"},"content":"Tag tasks with additional descriptions.","lastModifiedDate":"2021-09-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":98,"author":{"gitId":"mweeruien"},"content":"**Format**  ","lastModifiedDate":"2021-09-16"},{"lineNumber":99,"author":{"gitId":"mweeruien"},"content":"`tag INDEX TAG_DESCRIPTION`","lastModifiedDate":"2021-09-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":101,"author":{"gitId":"mweeruien"},"content":"**Example**  ","lastModifiedDate":"2021-09-16"},{"lineNumber":102,"author":{"gitId":"mweeruien"},"content":"Input: `tag 3 fun`  ","lastModifiedDate":"2021-09-17"},{"lineNumber":103,"author":{"gitId":"mweeruien"},"content":"Output:","lastModifiedDate":"2021-09-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":105,"author":{"gitId":"mweeruien"},"content":"Oki! The tag fun has been added. Here is the modified task!","lastModifiedDate":"2021-09-14"},{"lineNumber":106,"author":{"gitId":"mweeruien"},"content":"[T][ ] watch anime #fun","lastModifiedDate":"2021-09-17"},{"lineNumber":107,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":108,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":109,"author":{"gitId":"mweeruien"},"content":"---","lastModifiedDate":"2021-09-14"},{"lineNumber":110,"author":{"gitId":"mweeruien"},"content":"### Delete Tasks: `delete`","lastModifiedDate":"2021-09-14"},{"lineNumber":111,"author":{"gitId":"mweeruien"},"content":"Delete tasks from list of tasks.","lastModifiedDate":"2021-09-14"},{"lineNumber":112,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":113,"author":{"gitId":"mweeruien"},"content":"**Format**  ","lastModifiedDate":"2021-09-16"},{"lineNumber":114,"author":{"gitId":"mweeruien"},"content":"`delete INDEX`","lastModifiedDate":"2021-09-16"},{"lineNumber":115,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":116,"author":{"gitId":"mweeruien"},"content":"**Example**  ","lastModifiedDate":"2021-09-16"},{"lineNumber":117,"author":{"gitId":"mweeruien"},"content":"Input : `delete 2`  ","lastModifiedDate":"2021-09-17"},{"lineNumber":118,"author":{"gitId":"mweeruien"},"content":"Output :","lastModifiedDate":"2021-09-14"},{"lineNumber":119,"author":{"gitId":"mweeruien"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":120,"author":{"gitId":"mweeruien"},"content":"Oki! I have removed this task:","lastModifiedDate":"2021-09-14"},{"lineNumber":121,"author":{"gitId":"mweeruien"},"content":"[E][ ] afa (at: 27 Nov 2019 3:00 pm - 8:00 pm)","lastModifiedDate":"2021-09-17"},{"lineNumber":122,"author":{"gitId":"mweeruien"},"content":"2 more tasks to go!","lastModifiedDate":"2021-09-14"},{"lineNumber":123,"author":{"gitId":"mweeruien"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":124,"author":{"gitId":"mweeruien"},"content":"---","lastModifiedDate":"2021-09-14"},{"lineNumber":125,"author":{"gitId":"mweeruien"},"content":"### Find Tasks: `find`","lastModifiedDate":"2021-09-14"},{"lineNumber":126,"author":{"gitId":"mweeruien"},"content":"Search for tasks that match the given keyword.","lastModifiedDate":"2021-09-14"},{"lineNumber":127,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":128,"author":{"gitId":"mweeruien"},"content":"**Format**  ","lastModifiedDate":"2021-09-16"},{"lineNumber":129,"author":{"gitId":"mweeruien"},"content":"`find KEYWORD`","lastModifiedDate":"2021-09-16"},{"lineNumber":130,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":131,"author":{"gitId":"mweeruien"},"content":"**Example**  ","lastModifiedDate":"2021-09-16"},{"lineNumber":132,"author":{"gitId":"mweeruien"},"content":"Input : `find episode`  ","lastModifiedDate":"2021-09-17"},{"lineNumber":133,"author":{"gitId":"mweeruien"},"content":"Output:","lastModifiedDate":"2021-09-14"},{"lineNumber":134,"author":{"gitId":"mweeruien"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":135,"author":{"gitId":"mweeruien"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2021-09-14"},{"lineNumber":136,"author":{"gitId":"mweeruien"},"content":"2.  [D][ ] finish episode (by: 21 May 2021)","lastModifiedDate":"2021-09-17"},{"lineNumber":137,"author":{"gitId":"mweeruien"},"content":"3.  [T][ ] watch lecture episode","lastModifiedDate":"2021-09-14"},{"lineNumber":138,"author":{"gitId":"mweeruien"},"content":"Good luck!","lastModifiedDate":"2021-09-14"},{"lineNumber":139,"author":{"gitId":"mweeruien"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":140,"author":{"gitId":"mweeruien"},"content":"---","lastModifiedDate":"2021-09-14"},{"lineNumber":141,"author":{"gitId":"mweeruien"},"content":"### Exit Program: `bye`","lastModifiedDate":"2021-09-14"},{"lineNumber":142,"author":{"gitId":"mweeruien"},"content":"Exits the program.","lastModifiedDate":"2021-09-14"},{"lineNumber":143,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":144,"author":{"gitId":"mweeruien"},"content":"Format:  ","lastModifiedDate":"2021-09-16"},{"lineNumber":145,"author":{"gitId":"mweeruien"},"content":"`bye`","lastModifiedDate":"2021-09-16"},{"lineNumber":146,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":147,"author":{"gitId":"mweeruien"},"content":"---","lastModifiedDate":"2021-09-14"},{"lineNumber":148,"author":{"gitId":"mweeruien"},"content":"## FAQ  ","lastModifiedDate":"2021-09-14"},{"lineNumber":149,"author":{"gitId":"mweeruien"},"content":"Q: What version of Java should I use?  ","lastModifiedDate":"2021-09-17"},{"lineNumber":150,"author":{"gitId":"mweeruien"},"content":"A: Please use Java 11 or a later version.","lastModifiedDate":"2021-09-17"},{"lineNumber":151,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":152,"author":{"gitId":"mweeruien"},"content":"Q: How do I save my progress?  ","lastModifiedDate":"2021-09-14"},{"lineNumber":153,"author":{"gitId":"mweeruien"},"content":"A: Data is automatically saved in your computer :)","lastModifiedDate":"2021-09-14"},{"lineNumber":154,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":155,"author":{"gitId":"mweeruien"},"content":"Q: What is the data/duke.txt file generated after running the app?  ","lastModifiedDate":"2021-09-16"},{"lineNumber":156,"author":{"gitId":"mweeruien"},"content":"A: It is the save file of the app. Please do not edit the folder and file in any way, ","lastModifiedDate":"2021-09-16"},{"lineNumber":157,"author":{"gitId":"mweeruien"},"content":"as it can lead to file corruption.","lastModifiedDate":"2021-09-16"},{"lineNumber":158,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":159,"author":{"gitId":"mweeruien"},"content":"Q: Why does my JAR file not run?  ","lastModifiedDate":"2021-09-16"},{"lineNumber":160,"author":{"gitId":"mweeruien"},"content":"A: It is likely that the save file has been corrupted. ","lastModifiedDate":"2021-09-16"},{"lineNumber":161,"author":{"gitId":"mweeruien"},"content":"Check the duke.txt file saved in the data folder for any noticeable errors.","lastModifiedDate":"2021-09-16"},{"lineNumber":162,"author":{"gitId":"mweeruien"},"content":"If all else fails, clear the file or delete the folder.   ","lastModifiedDate":"2021-09-16"},{"lineNumber":163,"author":{"gitId":"mweeruien"},"content":"Do note that doing so erases your progress.","lastModifiedDate":"2021-09-14"},{"lineNumber":164,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"-":21,"mweeruien":143}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mweeruien"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"mweeruien"},"content":" * This function simulates a chat bot who interacts with a user to keep track of a todo list.","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"mweeruien"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"mweeruien"},"content":" * @author Megan Wee Rui En","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"mweeruien"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"mweeruien"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"mweeruien"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"mweeruien"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"mweeruien"},"content":"import duke.command.CommandExecutor;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"mweeruien"},"content":"import duke.exceptions.DukeDataLoadException;","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"mweeruien"},"content":"import duke.exceptions.DukeExceptions;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"mweeruien"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"mweeruien"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"mweeruien"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"mweeruien"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"mweeruien"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"mweeruien"},"content":"public class Duke extends AnchorPane {","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"mweeruien"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"mweeruien"},"content":"     * Constructs a Duke object.","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"mweeruien"},"content":"     * @throws IOException If the file saved fails to load.","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"mweeruien"},"content":"     * @throws DukeDataLoadException If the save file cannot be read properly","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"mweeruien"},"content":"    public Duke() throws IOException, DukeDataLoadException {","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"mweeruien"},"content":"        Ui ui \u003d new Ui(); // Performs the self introduction upon successful initialization.","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"mweeruien"},"content":"        Storage storage \u003d new Storage(\"data/duke.txt\");","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"mweeruien"},"content":"        TaskList taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"mweeruien"},"content":"        this.commandExecutor \u003d new CommandExecutor(storage, ui, taskList);","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"mweeruien"},"content":"     * Generates output and performs actions based on the input provided by the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"mweeruien"},"content":"     * @param input The user input received.","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"mweeruien"},"content":"     * @return Output corresponding to the input received.","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"mweeruien"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"mweeruien"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"mweeruien"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"mweeruien"},"content":"                commandExecutor.execute(input);","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"mweeruien"},"content":"                Platform.exit();","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"mweeruien"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"mweeruien"},"content":"            return commandExecutor.execute(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"mweeruien"},"content":"        } catch (DukeExceptions | IOException exception) {","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"mweeruien"},"content":"            return \"Ohno! You were so exceptional, an error has occurred!\\n\" + exception.getMessage();","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"mweeruien"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":2,"mweeruien":55}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mweeruien"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"mweeruien"},"content":" * This launches the program. A launcher class to workaround classpath issues.","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"mweeruien"},"content":" *","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"mweeruien"},"content":" * @author Megan Wee Rui En","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"mweeruien"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"mweeruien"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"mweeruien"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"mweeruien"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"mweeruien"},"content":"public class Launcher {","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"mweeruien"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"mweeruien"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"mweeruien"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"mweeruien":16}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mweeruien"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"mweeruien"},"content":" * This function starts the program and creates the window.  A GUI for Duke using FXML.","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"mweeruien"},"content":" *","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"mweeruien"},"content":" * @author Megan Wee Rui En","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"mweeruien"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"mweeruien"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"mweeruien"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"mweeruien"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"mweeruien"},"content":"import duke.exceptions.DukeDataLoadException;","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"mweeruien"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"mweeruien"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"mweeruien"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"mweeruien"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"mweeruien"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"mweeruien"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"mweeruien"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"mweeruien"},"content":"    private final Duke duke \u003d new Duke();","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"mweeruien"},"content":"     * Constructor for Main.","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"mweeruien"},"content":"     * @throws IOException If there are errors processing the file.","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"mweeruien"},"content":"    public Main() throws IOException, DukeDataLoadException {","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"mweeruien"},"content":"     * Starts the GUI.","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"mweeruien"},"content":"     * @param stage The stage where elements of the GUI are situated.","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"mweeruien"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"mweeruien"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"mweeruien"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"mweeruien"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"mweeruien"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"mweeruien"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"mweeruien"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"mweeruien"},"content":"            stage.getIcons().add(new Image(\"/images/DaUser.png\"));","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"mweeruien"},"content":"            stage.setTitle(\"Notaro\");","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"mweeruien"},"content":"            fxmlLoader.\u003cduke.ui.MainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"mweeruien"},"content":"            stage.show();","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"mweeruien"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"mweeruien"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"mweeruien"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"mweeruien"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"mweeruien":53}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mweeruien"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"mweeruien"},"content":" * This class performs the commands in Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"mweeruien"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"mweeruien"},"content":" * @author Megan Wee Rui En","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"mweeruien"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"mweeruien"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"mweeruien"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"mweeruien"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"mweeruien"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"mweeruien"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"mweeruien"},"content":"import duke.exceptions.DateNotAcceptedException;","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"mweeruien"},"content":"import duke.exceptions.EmptyDescriptionException;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"mweeruien"},"content":"import duke.exceptions.InvalidIntegerInput;","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"mweeruien"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"mweeruien"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"mweeruien"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"mweeruien"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"mweeruien"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"mweeruien"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"mweeruien"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"mweeruien"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"mweeruien"},"content":"public class Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"mweeruien"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"mweeruien"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"mweeruien"},"content":"     * Constructs a Command object.","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"mweeruien"},"content":"     * @param storage The Storage object handling the information.","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"mweeruien"},"content":"     * @param ui The Ui object handling user interactions.","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"mweeruien"},"content":"    public Command(Storage storage, Ui ui) {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"mweeruien"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"mweeruien"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"mweeruien"},"content":"     * Adds a deadline to the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"mweeruien"},"content":"     * @param userCommand The command inputted from the user","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"mweeruien"},"content":"     * @param taskList The task list which contains the tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"mweeruien"},"content":"     * @throws EmptyDescriptionException","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"mweeruien"},"content":"     * @throws IOException","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"mweeruien"},"content":"    public String addDeadline(String userCommand, TaskList taskList)","lastModifiedDate":"2021-09-14"},{"lineNumber":52,"author":{"gitId":"mweeruien"},"content":"            throws EmptyDescriptionException, IOException, DateNotAcceptedException {","lastModifiedDate":"2021-09-09"},{"lineNumber":53,"author":{"gitId":"mweeruien"},"content":"        Parser parser \u003d new Parser(userCommand);","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"mweeruien"},"content":"        String deadlineInfo \u003d parser.getDeadlineInfo();","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"mweeruien"},"content":"        LocalDateTime dateTime \u003d parser.getDeadlineDateTime();","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"mweeruien"},"content":"        Deadline deadline \u003d new Deadline(deadlineInfo, dateTime);","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"mweeruien"},"content":"        taskList.add(deadline);","lastModifiedDate":"2021-09-14"},{"lineNumber":59,"author":{"gitId":"mweeruien"},"content":"        storage.addTask(taskList.getLastStatusString());","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"mweeruien"},"content":"        return ui.showAddition(deadline.toString(), taskList.size());","lastModifiedDate":"2021-09-14"},{"lineNumber":61,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"mweeruien"},"content":"     * Adds an event to the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"mweeruien"},"content":"     * @param userCommand The command inputted from the user","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"mweeruien"},"content":"     * @param taskList The task list which contains the tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"mweeruien"},"content":"     * @throws EmptyDescriptionException","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"mweeruien"},"content":"     * @throws IOException","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"mweeruien"},"content":"    public String addEvent(String userCommand, TaskList taskList)","lastModifiedDate":"2021-09-14"},{"lineNumber":72,"author":{"gitId":"mweeruien"},"content":"            throws EmptyDescriptionException, IOException, DateNotAcceptedException {","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"mweeruien"},"content":"        Parser parser \u003d new Parser(userCommand);","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"mweeruien"},"content":"        String eventInfo \u003d parser.getEventInfo();","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"mweeruien"},"content":"        LocalDateTime eventStartDateTime \u003d parser.getEventStartDateTime();","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"mweeruien"},"content":"        LocalTime eventEndTime \u003d parser.getEventEndTime();","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"mweeruien"},"content":"        Event event \u003d new Event(eventInfo, eventStartDateTime, eventEndTime);","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"mweeruien"},"content":"        taskList.add(event);","lastModifiedDate":"2021-09-14"},{"lineNumber":80,"author":{"gitId":"mweeruien"},"content":"        storage.addTask(taskList.getLastStatusString());","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"mweeruien"},"content":"        return ui.showAddition(event.toString(), taskList.size());","lastModifiedDate":"2021-09-14"},{"lineNumber":82,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"mweeruien"},"content":"     * Adds a todo to the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"mweeruien"},"content":"     * @param userCommand The command inputted from the user","lastModifiedDate":"2021-08-31"},{"lineNumber":88,"author":{"gitId":"mweeruien"},"content":"     * @param taskList The task list which contains the tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"mweeruien"},"content":"     * @throws EmptyDescriptionException","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"mweeruien"},"content":"     * @throws IOException","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"mweeruien"},"content":"    public String addTodo(String userCommand, TaskList taskList)","lastModifiedDate":"2021-09-14"},{"lineNumber":93,"author":{"gitId":"mweeruien"},"content":"            throws EmptyDescriptionException, IOException {","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"mweeruien"},"content":"        Parser parser \u003d new Parser(userCommand);","lastModifiedDate":"2021-08-31"},{"lineNumber":95,"author":{"gitId":"mweeruien"},"content":"        String taskInfo \u003d parser.getTodoInfo();","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"mweeruien"},"content":"        Todo todo \u003d new Todo(taskInfo);","lastModifiedDate":"2021-09-14"},{"lineNumber":97,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"mweeruien"},"content":"        taskList.add(todo);","lastModifiedDate":"2021-09-14"},{"lineNumber":99,"author":{"gitId":"mweeruien"},"content":"        storage.addTask(taskList.getLastStatusString());","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"mweeruien"},"content":"        return ui.showAddition(todo.toString(), taskList.size());","lastModifiedDate":"2021-09-14"},{"lineNumber":101,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"mweeruien"},"content":"     * Logs the goodbye message.","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":106,"author":{"gitId":"mweeruien"},"content":"     * @return The bot\u0027s output for the bye command.","lastModifiedDate":"2021-08-31"},{"lineNumber":107,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"mweeruien"},"content":"    public String bye() {","lastModifiedDate":"2021-08-31"},{"lineNumber":109,"author":{"gitId":"mweeruien"},"content":"        return ui.showBye();","lastModifiedDate":"2021-08-31"},{"lineNumber":110,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"mweeruien"},"content":"     * Deletes a specified item from the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"mweeruien"},"content":"     * @param userCommand The command inputted from the user","lastModifiedDate":"2021-08-31"},{"lineNumber":116,"author":{"gitId":"mweeruien"},"content":"     * @param taskList The task list which contains the tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"mweeruien"},"content":"     * @return The bot\u0027s output for the delete command.","lastModifiedDate":"2021-08-31"},{"lineNumber":118,"author":{"gitId":"mweeruien"},"content":"     * @throws InvalidIntegerInput If there are errors processing the \"done\" command.","lastModifiedDate":"2021-09-17"},{"lineNumber":119,"author":{"gitId":"mweeruien"},"content":"     * @throws IOException If there are errors processing the file.","lastModifiedDate":"2021-08-31"},{"lineNumber":120,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"mweeruien"},"content":"    public String delete(String userCommand, TaskList taskList) throws InvalidIntegerInput, IOException {","lastModifiedDate":"2021-09-17"},{"lineNumber":122,"author":{"gitId":"mweeruien"},"content":"        Parser parser \u003d new Parser(userCommand);","lastModifiedDate":"2021-08-31"},{"lineNumber":123,"author":{"gitId":"mweeruien"},"content":"        int ref \u003d parser.getSecondInteger(taskList.size()) - 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"mweeruien"},"content":"        String taskRemoved \u003d taskList.get(ref).toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":125,"author":{"gitId":"mweeruien"},"content":"        taskList.remove(ref);","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"mweeruien"},"content":"        storage.removeTask(ref);","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"mweeruien"},"content":"        return ui.showDeletion(taskRemoved, taskList.size());","lastModifiedDate":"2021-09-14"},{"lineNumber":128,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":130,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"mweeruien"},"content":"     * Marks a specified item from the task list as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":133,"author":{"gitId":"mweeruien"},"content":"     * @param userCommand The command inputted from the user","lastModifiedDate":"2021-08-31"},{"lineNumber":134,"author":{"gitId":"mweeruien"},"content":"     * @param taskList The task list which contains the tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":135,"author":{"gitId":"mweeruien"},"content":"     * @return The bot\u0027s output for the done command.","lastModifiedDate":"2021-08-31"},{"lineNumber":136,"author":{"gitId":"mweeruien"},"content":"     * @throws InvalidIntegerInput If there are errors processing the \"done\" command.","lastModifiedDate":"2021-09-17"},{"lineNumber":137,"author":{"gitId":"mweeruien"},"content":"     * @throws IOException If there are errors processing the file.","lastModifiedDate":"2021-08-31"},{"lineNumber":138,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":139,"author":{"gitId":"mweeruien"},"content":"    public String done(String userCommand, TaskList taskList) throws IOException, InvalidIntegerInput {","lastModifiedDate":"2021-09-17"},{"lineNumber":140,"author":{"gitId":"mweeruien"},"content":"        Parser parser \u003d new Parser(userCommand);","lastModifiedDate":"2021-08-31"},{"lineNumber":141,"author":{"gitId":"mweeruien"},"content":"        int ref \u003d parser.getSecondInteger(taskList.size()) - 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":142,"author":{"gitId":"mweeruien"},"content":"        Task task \u003d taskList.get(ref);","lastModifiedDate":"2021-08-25"},{"lineNumber":143,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":144,"author":{"gitId":"mweeruien"},"content":"        if (task.getStatusIcon().equals(\"X\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":145,"author":{"gitId":"mweeruien"},"content":"            return \"You\u0027ve already done this!\";","lastModifiedDate":"2021-08-31"},{"lineNumber":146,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":147,"author":{"gitId":"mweeruien"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":148,"author":{"gitId":"mweeruien"},"content":"            task.markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":149,"author":{"gitId":"mweeruien"},"content":"            storage.updateDone(ref, task.getStatusString());","lastModifiedDate":"2021-08-25"},{"lineNumber":150,"author":{"gitId":"mweeruien"},"content":"            return ui.showCompletion(taskList.get(ref).toString());","lastModifiedDate":"2021-08-31"},{"lineNumber":151,"author":{"gitId":"mweeruien"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":152,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":153,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":154,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":155,"author":{"gitId":"mweeruien"},"content":"     * Finds all items from the task list that match a given string.","lastModifiedDate":"2021-08-25"},{"lineNumber":156,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":157,"author":{"gitId":"mweeruien"},"content":"     * @param userCommand The command inputted from the user","lastModifiedDate":"2021-08-31"},{"lineNumber":158,"author":{"gitId":"mweeruien"},"content":"     * @param taskList The task list which contains the tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":159,"author":{"gitId":"mweeruien"},"content":"     * @return The bot\u0027s output for the find command.","lastModifiedDate":"2021-08-31"},{"lineNumber":160,"author":{"gitId":"mweeruien"},"content":"     * @throws EmptyDescriptionException If the user input is missing extra information after the command.","lastModifiedDate":"2021-08-31"},{"lineNumber":161,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":162,"author":{"gitId":"mweeruien"},"content":"    public String find(String userCommand, TaskList taskList) throws EmptyDescriptionException {","lastModifiedDate":"2021-08-31"},{"lineNumber":163,"author":{"gitId":"mweeruien"},"content":"        Parser parser \u003d new Parser(userCommand);","lastModifiedDate":"2021-08-31"},{"lineNumber":164,"author":{"gitId":"mweeruien"},"content":"        String wordSearch \u003d parser.getSecondWord().toLowerCase();","lastModifiedDate":"2021-08-25"},{"lineNumber":165,"author":{"gitId":"mweeruien"},"content":"        return ui.showSearch(taskList.search(wordSearch));","lastModifiedDate":"2021-08-31"},{"lineNumber":166,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":167,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":168,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":169,"author":{"gitId":"mweeruien"},"content":"     * Lists all the items in the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":170,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":171,"author":{"gitId":"mweeruien"},"content":"     * @param taskList The task list which contains the tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":172,"author":{"gitId":"mweeruien"},"content":"     * @return The bot\u0027s output for the list command.","lastModifiedDate":"2021-08-31"},{"lineNumber":173,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":174,"author":{"gitId":"mweeruien"},"content":"    public String list(TaskList taskList) {","lastModifiedDate":"2021-08-31"},{"lineNumber":175,"author":{"gitId":"mweeruien"},"content":"        return ui.showList(taskList);","lastModifiedDate":"2021-08-31"},{"lineNumber":176,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":177,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":178,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":179,"author":{"gitId":"mweeruien"},"content":"     * Finds all items from the task list that match a given string.","lastModifiedDate":"2021-09-09"},{"lineNumber":180,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":181,"author":{"gitId":"mweeruien"},"content":"     * @param userCommand The command inputted from the user","lastModifiedDate":"2021-09-09"},{"lineNumber":182,"author":{"gitId":"mweeruien"},"content":"     * @param taskList The task list which contains the tasks","lastModifiedDate":"2021-09-09"},{"lineNumber":183,"author":{"gitId":"mweeruien"},"content":"     * @return The bot\u0027s output for the tag command.","lastModifiedDate":"2021-09-09"},{"lineNumber":184,"author":{"gitId":"mweeruien"},"content":"     * @throws EmptyDescriptionException If the user input is missing extra information after the command.","lastModifiedDate":"2021-09-09"},{"lineNumber":185,"author":{"gitId":"mweeruien"},"content":"     * @throws InvalidIntegerInput If there are errors processing the \"done\" command.","lastModifiedDate":"2021-09-17"},{"lineNumber":186,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":187,"author":{"gitId":"mweeruien"},"content":"    public String tag(String userCommand, TaskList taskList) throws EmptyDescriptionException, InvalidIntegerInput,","lastModifiedDate":"2021-09-17"},{"lineNumber":188,"author":{"gitId":"mweeruien"},"content":"            IOException {","lastModifiedDate":"2021-09-09"},{"lineNumber":189,"author":{"gitId":"mweeruien"},"content":"        Parser parser \u003d new Parser(userCommand);","lastModifiedDate":"2021-09-09"},{"lineNumber":190,"author":{"gitId":"mweeruien"},"content":"        int ref \u003d parser.getSecondInteger(taskList.size()) - 1;","lastModifiedDate":"2021-09-09"},{"lineNumber":191,"author":{"gitId":"mweeruien"},"content":"        String tagInfo \u003d parser.getTagInfo();","lastModifiedDate":"2021-09-09"},{"lineNumber":192,"author":{"gitId":"mweeruien"},"content":"        taskList.get(ref).addTag(tagInfo);","lastModifiedDate":"2021-09-09"},{"lineNumber":193,"author":{"gitId":"mweeruien"},"content":"        storage.addTag(ref, taskList.get(ref).getStatusString());","lastModifiedDate":"2021-09-09"},{"lineNumber":194,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":195,"author":{"gitId":"mweeruien"},"content":"        return ui.showTag(tagInfo, taskList.get(ref));","lastModifiedDate":"2021-09-09"},{"lineNumber":196,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":197,"author":{"gitId":"mweeruien"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"mweeruien":197}},{"path":"src/main/java/duke/command/CommandExecutor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mweeruien"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"mweeruien"},"content":" * This function interprets the user command and invokes the corresponding commands.","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"mweeruien"},"content":" *","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"mweeruien"},"content":" * @author Megan Wee Rui En","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"mweeruien"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"mweeruien"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"mweeruien"},"content":"package duke.command;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"mweeruien"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"mweeruien"},"content":"import duke.exceptions.CommandDoesNotExist;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"mweeruien"},"content":"import duke.exceptions.DukeExceptions;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"mweeruien"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"mweeruien"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"mweeruien"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"mweeruien"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"mweeruien"},"content":"public class CommandExecutor {","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"mweeruien"},"content":"    private final Command command;","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"mweeruien"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"mweeruien"},"content":"    private final TaskList taskList;","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"mweeruien"},"content":"     * Contructs a CommandExecutor object.","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"mweeruien"},"content":"     * @param storage Handles the storage and retrieval of information from a file.","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"mweeruien"},"content":"     * @param ui Handles user interface.","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"mweeruien"},"content":"     * @param taskList Handles the list of tasks.","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"mweeruien"},"content":"    public CommandExecutor(Storage storage, Ui ui, TaskList taskList) {","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"mweeruien"},"content":"        this.command \u003d new Command(storage, ui);","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"mweeruien"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"mweeruien"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"mweeruien"},"content":"     * Interprets the user input and executes the corresponding commands.","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"mweeruien"},"content":"     * @param userCommand The user input.","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"mweeruien"},"content":"     * @return A String for the robot to output in response to the user input.","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"mweeruien"},"content":"     * @throws DukeExceptions If there are errors with processing the user input.","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"mweeruien"},"content":"     * @throws IOException If there are errors processing the file.","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"mweeruien"},"content":"    public String execute(String userCommand) throws DukeExceptions, IOException {","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"mweeruien"},"content":"        assert userCommand !\u003d null : \"The user command is empty or not passed through properly\";","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"mweeruien"},"content":"        Parser parser \u003d new Parser(userCommand);","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"mweeruien"},"content":"        String cmd \u003d parser.getFirstWord(); // the first word of the command received from the user","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"mweeruien"},"content":"        // \u0027bye\u0027 : Ends the program","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"mweeruien"},"content":"        if (userCommand.equals(\"bye\") || cmd.equals(\"bye\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"mweeruien"},"content":"            return command.bye();","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"mweeruien"},"content":"            // \u0027list\u0027 : Retrieves information from the hard drive and prints it","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"mweeruien"},"content":"        } else if (cmd.equals(\"list\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"mweeruien"},"content":"            return command.list(taskList);","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"mweeruien"},"content":"            // \u0027done [int]\u0027 : marks the corresponding number in the list as done","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"mweeruien"},"content":"        } else if (cmd.equals(\"done\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"mweeruien"},"content":"            return command.done(userCommand, taskList);","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"mweeruien"},"content":"            // \u0027delete [int]\u0027 : delete the corresponding number","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"mweeruien"},"content":"        } else if (cmd.equals(\"delete\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"mweeruien"},"content":"            return command.delete(userCommand, taskList);","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"mweeruien"},"content":"            // \u0027find\u0027 [String] : finds all matching instances and prints them","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"mweeruien"},"content":"        } else if (cmd.equals(\"find\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"mweeruien"},"content":"            return command.find(userCommand, taskList);","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"mweeruien"},"content":"        } else if (cmd.equals(\"tag\")) {","lastModifiedDate":"2021-09-09"},{"lineNumber":72,"author":{"gitId":"mweeruien"},"content":"            return command.tag(userCommand, taskList);","lastModifiedDate":"2021-09-09"},{"lineNumber":73,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":74,"author":{"gitId":"mweeruien"},"content":"            // Else, an item has been added to the chat bot","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"mweeruien"},"content":"            // Commands are either todo, deadline or event","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"mweeruien"},"content":"        } else if (cmd.equals(\"todo\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":77,"author":{"gitId":"mweeruien"},"content":"            return command.addTodo(userCommand, taskList);","lastModifiedDate":"2021-09-14"},{"lineNumber":78,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":79,"author":{"gitId":"mweeruien"},"content":"        } else if (cmd.equals(\"deadline\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"mweeruien"},"content":"            return command.addDeadline(userCommand, taskList);","lastModifiedDate":"2021-09-14"},{"lineNumber":81,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":82,"author":{"gitId":"mweeruien"},"content":"        } else if (cmd.equals(\"event\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":83,"author":{"gitId":"mweeruien"},"content":"            return command.addEvent(userCommand, taskList);","lastModifiedDate":"2021-09-14"},{"lineNumber":84,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":85,"author":{"gitId":"mweeruien"},"content":"            // If the command did not match the previous commands, throw an error","lastModifiedDate":"2021-08-31"},{"lineNumber":86,"author":{"gitId":"mweeruien"},"content":"        } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":87,"author":{"gitId":"mweeruien"},"content":"            throw new CommandDoesNotExist(userCommand);","lastModifiedDate":"2021-08-31"},{"lineNumber":88,"author":{"gitId":"mweeruien"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":89,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":90,"author":{"gitId":"mweeruien"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"mweeruien":90}},{"path":"src/main/java/duke/exceptions/CommandDoesNotExist.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mweeruien"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"mweeruien"},"content":" * This function encapsulates exceptions thrown by the chat bot when the user gives a command that does not exist.","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"mweeruien"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"mweeruien"},"content":" * @author Megan Wee Rui En","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"mweeruien"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"mweeruien"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"mweeruien"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"mweeruien"},"content":"public class CommandDoesNotExist extends DukeExceptions {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"mweeruien"},"content":"    public CommandDoesNotExist(String message) {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"mweeruien"},"content":"        super(\"Sorry! The command \\\"\" + message + \"\\\" doesn\u0027t exist :(\\nPlease try again!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"mweeruien"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"mweeruien":14}},{"path":"src/main/java/duke/exceptions/DateNotAcceptedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mweeruien"},"content":"/**","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"mweeruien"},"content":" * This function encapsulates exceptions thrown by the chat bot where there is an error with the user date","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"mweeruien"},"content":" *","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"mweeruien"},"content":" * @author Megan Wee Rui En","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"mweeruien"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"mweeruien"},"content":" */","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"mweeruien"},"content":"package duke.exceptions;","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":10,"author":{"gitId":"mweeruien"},"content":"public class DateNotAcceptedException extends DukeExceptions {","lastModifiedDate":"2021-09-09"},{"lineNumber":11,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":12,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":13,"author":{"gitId":"mweeruien"},"content":"     * Constructs a DateNotAcceptedException.","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"mweeruien"},"content":"     * @param message Message shown by the exception.","lastModifiedDate":"2021-09-09"},{"lineNumber":16,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":17,"author":{"gitId":"mweeruien"},"content":"    public DateNotAcceptedException(String message) {","lastModifiedDate":"2021-09-09"},{"lineNumber":18,"author":{"gitId":"mweeruien"},"content":"        super(\"There was an error with the Date inputted. Please recheck and input in the form \"","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"mweeruien"},"content":"                + \"\\\"YYYY-MM-DD HH:MM\\\" for Deadlines or  \\\"YYYY-MM-DD HH:MM~HH:MM\\\" for Events!\\n\" + message);","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":21,"author":{"gitId":"mweeruien"},"content":"}","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"mweeruien":21}},{"path":"src/main/java/duke/exceptions/DeletionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mweeruien"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"mweeruien"},"content":" * This function encapsulates exceptions thrown by the chat bot where there is an error deleting an item.","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"mweeruien"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"mweeruien"},"content":" * @author Megan Wee Rui En","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"mweeruien"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"mweeruien"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"mweeruien"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"mweeruien"},"content":"public class DeletionException extends DukeExceptions {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":12,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":13,"author":{"gitId":"mweeruien"},"content":"     * Constructor for DeletionException.","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"mweeruien"},"content":"     * @param start The start integer accepted (inclusive).","lastModifiedDate":"2021-09-09"},{"lineNumber":16,"author":{"gitId":"mweeruien"},"content":"     * @param end The end integer accepted (inclusive).","lastModifiedDate":"2021-09-09"},{"lineNumber":17,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":18,"author":{"gitId":"mweeruien"},"content":"    public DeletionException(String start, String end) {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"mweeruien"},"content":"        super(\"Please input an integer in the range of \" + start + \" to \" + end + \"!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"mweeruien"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"mweeruien":21}},{"path":"src/main/java/duke/exceptions/DukeDataLoadException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mweeruien"},"content":"package duke.exceptions;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"mweeruien"},"content":"public class DukeDataLoadException extends DukeExceptions {","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"mweeruien"},"content":"    public DukeDataLoadException(String message) {","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"mweeruien"},"content":"        super(\"There was an error loading the save file!: \" + message);","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"mweeruien"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"mweeruien":8}},{"path":"src/main/java/duke/exceptions/DukeExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mweeruien"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"mweeruien"},"content":" * This function encapsulates exceptions thrown by the chat bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"mweeruien"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"mweeruien"},"content":" * @author Megan Wee Rui En","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"mweeruien"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"mweeruien"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"mweeruien"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"mweeruien"},"content":"public class DukeExceptions extends Exception {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"mweeruien"},"content":"    public DukeExceptions(String message) {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"mweeruien"},"content":"        super(message);","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"mweeruien"},"content":"}","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"mweeruien":16}},{"path":"src/main/java/duke/exceptions/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mweeruien"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"mweeruien"},"content":" * This function encapsulates exceptions thrown by the chat bot where the description for a task is empty.","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"mweeruien"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"mweeruien"},"content":" * @author Megan Wee Rui En","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"mweeruien"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"mweeruien"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"mweeruien"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"mweeruien"},"content":"public class EmptyDescriptionException extends DukeExceptions {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"mweeruien"},"content":"    public EmptyDescriptionException(String message) {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"mweeruien"},"content":"        super(\"Sorry! There needs to be a description for a \" + message + \" item :(\\nPlease try again!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"mweeruien"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"mweeruien":14}},{"path":"src/main/java/duke/exceptions/EmptyDetailsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mweeruien"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"mweeruien"},"content":" * This function encapsulates exceptions thrown by the chat bot where details are missing from a task.","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"mweeruien"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"mweeruien"},"content":" * @author Megan Wee Rui En","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"mweeruien"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"mweeruien"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"mweeruien"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"mweeruien"},"content":"public class EmptyDetailsException extends DukeExceptions {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"mweeruien"},"content":"    public EmptyDetailsException(String message) {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"mweeruien"},"content":"        super(\"Sorry! Please include more details for a \" + message + \" item :(\\nPlease try again!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"mweeruien"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"mweeruien":14}},{"path":"src/main/java/duke/exceptions/InvalidIntegerInput.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mweeruien"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"mweeruien"},"content":" * This function encapsulates exceptions thrown by the chat bot when commands for \"done\" is not entered correctly.","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"mweeruien"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"mweeruien"},"content":" * @author Megan Wee Rui En","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"mweeruien"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"mweeruien"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"mweeruien"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"mweeruien"},"content":"public class InvalidIntegerInput extends DukeExceptions {","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"mweeruien"},"content":"    public InvalidIntegerInput(String start, String end) {","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"mweeruien"},"content":"        super(\"Please input an integer in the range of \" + start + \" to \" + end + \"!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"mweeruien"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"mweeruien":14}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mweeruien"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"mweeruien"},"content":" * This class handles interaction with the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"mweeruien"},"content":" * Interprets user command and creates logs","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"mweeruien"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"mweeruien"},"content":" * @author Megan Wee Rui En","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"mweeruien"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"mweeruien"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"mweeruien"},"content":"package duke.parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"mweeruien"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"mweeruien"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"mweeruien"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"mweeruien"},"content":"import duke.exceptions.DateNotAcceptedException;","lastModifiedDate":"2021-09-09"},{"lineNumber":16,"author":{"gitId":"mweeruien"},"content":"import duke.exceptions.EmptyDescriptionException;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"mweeruien"},"content":"import duke.exceptions.InvalidIntegerInput;","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"mweeruien"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"mweeruien"},"content":"    private final String command;","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"mweeruien"},"content":"    private final String[] commandWords;","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"mweeruien"},"content":"     * Constructs a Parser object.","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"mweeruien"},"content":"     * @param command The command issued by the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"mweeruien"},"content":"    public Parser(String command) {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"mweeruien"},"content":"        assert command !\u003d null : \"Command to be parsed cannot be null\";","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"mweeruien"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"mweeruien"},"content":"        this.commandWords \u003d command.toLowerCase().split(\" \");","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"mweeruien"},"content":"     * Returns the first word (the command) given.","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"mweeruien"},"content":"     * @return The first word from the user, which is the command","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"mweeruien"},"content":"    public String getFirstWord() {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"mweeruien"},"content":"        return commandWords[0];","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"mweeruien"},"content":"     * Returns the second word given.","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"mweeruien"},"content":"     * @return The second word from the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"mweeruien"},"content":"    public String getSecondWord() throws EmptyDescriptionException {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"mweeruien"},"content":"        if (commandWords.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"mweeruien"},"content":"            throw new EmptyDescriptionException(\"todo\");","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"mweeruien"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"mweeruien"},"content":"        return commandWords[1];","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"mweeruien"},"content":"     * Checks if the second integer is viable for the done and delete commands and returns it.","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"mweeruien"},"content":"     * @param size The length of the taskList","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"mweeruien"},"content":"     * @return The second word (aka the number) from the user","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"mweeruien"},"content":"     * @throws InvalidIntegerInput If there are issues with extracting the second integer from user input.","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"mweeruien"},"content":"    public int getSecondInteger(int size) throws InvalidIntegerInput {","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"mweeruien"},"content":"        int secondInteger;","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"mweeruien"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"mweeruien"},"content":"            secondInteger \u003d Integer.parseInt(commandWords[1]);","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"mweeruien"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"mweeruien"},"content":"            throw new InvalidIntegerInput(\"1\", String.valueOf(size));","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"mweeruien"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"mweeruien"},"content":"        if (commandWords.length \u003d\u003d 1","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"mweeruien"},"content":"                || secondInteger \u003c 1","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"mweeruien"},"content":"                || secondInteger \u003e size) {","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"mweeruien"},"content":"            throw new InvalidIntegerInput(\"1\", String.valueOf(size));","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"mweeruien"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"mweeruien"},"content":"        return secondInteger;","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"mweeruien"},"content":"     * Returns the information of a Todo task.","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"mweeruien"},"content":"     * @return The description of a Todo task","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"mweeruien"},"content":"     * @throws EmptyDescriptionException If the user input is missing extra information after the command.","lastModifiedDate":"2021-08-31"},{"lineNumber":86,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"mweeruien"},"content":"    public String getTodoInfo() throws EmptyDescriptionException {","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"mweeruien"},"content":"        if (commandWords.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"mweeruien"},"content":"            throw new EmptyDescriptionException(\"todo\");","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"mweeruien"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"mweeruien"},"content":"        return this.command.split(\" \", 2)[1];","lastModifiedDate":"2021-09-14"},{"lineNumber":94,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"mweeruien"},"content":"     * Returns information about a Deadline task.","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"mweeruien"},"content":"     * @return The description of a Deadline task","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"mweeruien"},"content":"     * @throws EmptyDescriptionException If the user input is missing extra information after the command.","lastModifiedDate":"2021-08-31"},{"lineNumber":101,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"mweeruien"},"content":"    public String getDeadlineInfo() throws EmptyDescriptionException {","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"mweeruien"},"content":"        if (commandWords.length \u003d\u003d 1 || this.command.split(\" \", 2).length \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"mweeruien"},"content":"            throw new EmptyDescriptionException(\"deadline\");","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"mweeruien"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"mweeruien"},"content":"        String allDetails \u003d this.command.split(\" \", 2)[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"mweeruien"},"content":"        return allDetails.split(\"/by\", 2)[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"mweeruien"},"content":"     * Returns the date of a Deadline task.","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"mweeruien"},"content":"     * @return The date and time of a Deadline task","lastModifiedDate":"2021-09-17"},{"lineNumber":116,"author":{"gitId":"mweeruien"},"content":"     * @throws EmptyDescriptionException If the user input is missing extra information after the command.","lastModifiedDate":"2021-08-31"},{"lineNumber":117,"author":{"gitId":"mweeruien"},"content":"     * @throws DateNotAcceptedException If there is an error with the date inputted.","lastModifiedDate":"2021-09-09"},{"lineNumber":118,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"mweeruien"},"content":"    public LocalDateTime getDeadlineDateTime() throws EmptyDescriptionException, DateNotAcceptedException {","lastModifiedDate":"2021-09-17"},{"lineNumber":120,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"mweeruien"},"content":"        if (commandWords.length \u003d\u003d 1 || this.command.split(\" \", 2).length \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"mweeruien"},"content":"            throw new EmptyDescriptionException(\"deadline\");","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"mweeruien"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"mweeruien"},"content":"        String allDetails \u003d this.command.split(\" \", 2)[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"mweeruien"},"content":"        try {","lastModifiedDate":"2021-09-09"},{"lineNumber":127,"author":{"gitId":"mweeruien"},"content":"            return LocalDateTime.parse(allDetails.split(\"/by \", 2)[1].replace(\" \", \"T\"));","lastModifiedDate":"2021-09-17"},{"lineNumber":128,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":129,"author":{"gitId":"mweeruien"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":130,"author":{"gitId":"mweeruien"},"content":"            throw new DateNotAcceptedException(\"Please recheck your date and time inputs!\");","lastModifiedDate":"2021-09-17"},{"lineNumber":131,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":132,"author":{"gitId":"mweeruien"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":133,"author":{"gitId":"mweeruien"},"content":"            throw new EmptyDescriptionException(\"There isn\u0027t enough information :(\");","lastModifiedDate":"2021-09-17"},{"lineNumber":134,"author":{"gitId":"mweeruien"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":135,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"mweeruien"},"content":"     * Returns the information of an Event task.","lastModifiedDate":"2021-08-25"},{"lineNumber":139,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"mweeruien"},"content":"     * @return The description of an Event task","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"mweeruien"},"content":"     * @throws EmptyDescriptionException If the user input is missing extra information after the command.","lastModifiedDate":"2021-08-31"},{"lineNumber":142,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"mweeruien"},"content":"    public String getEventInfo() throws EmptyDescriptionException {","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":145,"author":{"gitId":"mweeruien"},"content":"        if (commandWords.length \u003d\u003d 1 || this.command.split(\" \", 2).length \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":146,"author":{"gitId":"mweeruien"},"content":"            throw new EmptyDescriptionException(\"event\");","lastModifiedDate":"2021-08-24"},{"lineNumber":147,"author":{"gitId":"mweeruien"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":148,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":149,"author":{"gitId":"mweeruien"},"content":"        String allDetails \u003d this.command.split(\" \", 2)[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":150,"author":{"gitId":"mweeruien"},"content":"        return allDetails.split(\"/at\", 2)[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":151,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":152,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":153,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":154,"author":{"gitId":"mweeruien"},"content":"     * Returns the starting date and time of an Event task.","lastModifiedDate":"2021-09-17"},{"lineNumber":155,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":156,"author":{"gitId":"mweeruien"},"content":"     * @return The starting time and date of an Event task.","lastModifiedDate":"2021-09-17"},{"lineNumber":157,"author":{"gitId":"mweeruien"},"content":"     * @throws EmptyDescriptionException If the user input is missing extra information after the command.","lastModifiedDate":"2021-08-31"},{"lineNumber":158,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":159,"author":{"gitId":"mweeruien"},"content":"    public LocalDateTime getEventStartDateTime() throws EmptyDescriptionException, DateNotAcceptedException {","lastModifiedDate":"2021-09-17"},{"lineNumber":160,"author":{"gitId":"mweeruien"},"content":"        if (commandWords.length \u003d\u003d 1 || this.command.split(\" \", 2).length \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":161,"author":{"gitId":"mweeruien"},"content":"            throw new EmptyDescriptionException(\"event\");","lastModifiedDate":"2021-08-24"},{"lineNumber":162,"author":{"gitId":"mweeruien"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":163,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":164,"author":{"gitId":"mweeruien"},"content":"        String allDetails \u003d this.command.split(\" \", 2)[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":165,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":166,"author":{"gitId":"mweeruien"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":167,"author":{"gitId":"mweeruien"},"content":"            return LocalDateTime.parse(allDetails.split(\"/at \", 2)[1]","lastModifiedDate":"2021-09-17"},{"lineNumber":168,"author":{"gitId":"mweeruien"},"content":"                    .split(\"~\", 2)[0].replace(\" \", \"T\"));","lastModifiedDate":"2021-09-17"},{"lineNumber":169,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":170,"author":{"gitId":"mweeruien"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":171,"author":{"gitId":"mweeruien"},"content":"            throw new DateNotAcceptedException(\"Please recheck your date and time inputs!\");","lastModifiedDate":"2021-09-17"},{"lineNumber":172,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":173,"author":{"gitId":"mweeruien"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":174,"author":{"gitId":"mweeruien"},"content":"            throw new EmptyDescriptionException(\"There isn\u0027t enough information :(\");","lastModifiedDate":"2021-09-17"},{"lineNumber":175,"author":{"gitId":"mweeruien"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":176,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":177,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":178,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":179,"author":{"gitId":"mweeruien"},"content":"     * Returns the end time information of an Event task.","lastModifiedDate":"2021-09-17"},{"lineNumber":180,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":181,"author":{"gitId":"mweeruien"},"content":"     * @return The end time of an Event task","lastModifiedDate":"2021-09-17"},{"lineNumber":182,"author":{"gitId":"mweeruien"},"content":"     * @throws EmptyDescriptionException If the user input is missing extra information after the command.","lastModifiedDate":"2021-09-17"},{"lineNumber":183,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":184,"author":{"gitId":"mweeruien"},"content":"    public LocalTime getEventEndTime() throws EmptyDescriptionException, DateNotAcceptedException {","lastModifiedDate":"2021-09-17"},{"lineNumber":185,"author":{"gitId":"mweeruien"},"content":"        if (commandWords.length \u003d\u003d 1 || this.command.split(\" \", 2).length \u003d\u003d 1) {","lastModifiedDate":"2021-09-17"},{"lineNumber":186,"author":{"gitId":"mweeruien"},"content":"            throw new EmptyDescriptionException(\"event\");","lastModifiedDate":"2021-09-17"},{"lineNumber":187,"author":{"gitId":"mweeruien"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":188,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":189,"author":{"gitId":"mweeruien"},"content":"        String allDetails \u003d this.command.split(\" \", 2)[1];","lastModifiedDate":"2021-09-17"},{"lineNumber":190,"author":{"gitId":"mweeruien"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":191,"author":{"gitId":"mweeruien"},"content":"            return LocalTime.parse(allDetails.split(\"/at \", 2)[1]","lastModifiedDate":"2021-09-17"},{"lineNumber":192,"author":{"gitId":"mweeruien"},"content":"                    .split(\"~\", 2)[1]);","lastModifiedDate":"2021-09-17"},{"lineNumber":193,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":194,"author":{"gitId":"mweeruien"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":195,"author":{"gitId":"mweeruien"},"content":"            throw new DateNotAcceptedException(\"Please recheck your date and time inputs!\");","lastModifiedDate":"2021-09-17"},{"lineNumber":196,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":197,"author":{"gitId":"mweeruien"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":198,"author":{"gitId":"mweeruien"},"content":"            throw new EmptyDescriptionException(\"There isn\u0027t enough information :(\");","lastModifiedDate":"2021-09-17"},{"lineNumber":199,"author":{"gitId":"mweeruien"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":200,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":201,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":202,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":203,"author":{"gitId":"mweeruien"},"content":"     * Returns the information of a Tag.","lastModifiedDate":"2021-09-09"},{"lineNumber":204,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":205,"author":{"gitId":"mweeruien"},"content":"     * @return The information of a Tag","lastModifiedDate":"2021-09-09"},{"lineNumber":206,"author":{"gitId":"mweeruien"},"content":"     * @throws EmptyDescriptionException If the user input is missing extra information after the command.","lastModifiedDate":"2021-09-09"},{"lineNumber":207,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":208,"author":{"gitId":"mweeruien"},"content":"    public String getTagInfo() throws EmptyDescriptionException {","lastModifiedDate":"2021-09-09"},{"lineNumber":209,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":210,"author":{"gitId":"mweeruien"},"content":"        if (commandWords.length \u003d\u003d 1 || this.command.split(\" \", 3).length \u003c 3) {","lastModifiedDate":"2021-09-09"},{"lineNumber":211,"author":{"gitId":"mweeruien"},"content":"            throw new EmptyDescriptionException(\"event\");","lastModifiedDate":"2021-09-09"},{"lineNumber":212,"author":{"gitId":"mweeruien"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":213,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":214,"author":{"gitId":"mweeruien"},"content":"        return this.command.split(\" \", 3)[2];","lastModifiedDate":"2021-09-09"},{"lineNumber":215,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":216,"author":{"gitId":"mweeruien"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"mweeruien":216}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mweeruien"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"mweeruien"},"content":" * This class handles the storage of the current list (i.e. the updating and retrieval).","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"mweeruien"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"mweeruien"},"content":" * @author Megan Wee Rui En","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"mweeruien"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"mweeruien"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"mweeruien"},"content":"package duke.storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"mweeruien"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"mweeruien"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"mweeruien"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"mweeruien"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"mweeruien"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"mweeruien"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"mweeruien"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"mweeruien"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"mweeruien"},"content":"import duke.exceptions.DukeDataLoadException;","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"mweeruien"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"mweeruien"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"mweeruien"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"mweeruien"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"mweeruien"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"mweeruien"},"content":"    private final ArrayList\u003cString\u003e commandsSaved \u003d new ArrayList\u003c\u003e(); // array of saved lines in the new txt file","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"mweeruien"},"content":"    private final File file;","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"mweeruien"},"content":"     * Constructs a Storage object.","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"mweeruien"},"content":"     * @param filePath The filePath where the file is found or will be created.","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"mweeruien"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"mweeruien"},"content":"        file \u003d new File(filePath);","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"mweeruien"},"content":"     * Loads the existing file for the todo list if it exists, or creates a file if it does not.","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"mweeruien"},"content":"     * @return an ArrayList of tasks for the todo list","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"mweeruien"},"content":"     * @throws IOException If there are errors processing the file.","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"mweeruien"},"content":"     * @throws DukeDataLoadException If the save file cannot be read properly","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"mweeruien"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException, DukeDataLoadException {","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"mweeruien"},"content":"        if (!file.exists()) {","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"mweeruien"},"content":"            // Create the data folder if it does not exist.","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"mweeruien"},"content":"            if (!file.getParentFile().exists()) {","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"mweeruien"},"content":"                file.getParentFile().mkdir();","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"mweeruien"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":54,"author":{"gitId":"mweeruien"},"content":"            file.createNewFile(); // Create the duke.txt file.","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"mweeruien"},"content":"            return new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-09-16"},{"lineNumber":56,"author":{"gitId":"mweeruien"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":57,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":58,"author":{"gitId":"mweeruien"},"content":"        if (file.length() \u003d\u003d 0) {","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"mweeruien"},"content":"            return new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"mweeruien"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":61,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"mweeruien"},"content":"        return readFileAddTasks();","lastModifiedDate":"2021-09-16"},{"lineNumber":63,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"mweeruien"},"content":"     * Reads the saved file and adds tasks to the tasklist.","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"mweeruien"},"content":"     * @return An ArrayList of tasks read from the save file.","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"mweeruien"},"content":"     * @throws FileNotFoundException If saved file cannot be found.","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"mweeruien"},"content":"     * @throws DukeDataLoadException If the data could not be loaded.","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"mweeruien"},"content":"    private ArrayList\u003cTask\u003e readFileAddTasks() throws FileNotFoundException, DukeDataLoadException {","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"mweeruien"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"mweeruien"},"content":"        Scanner fileSc \u003d new Scanner(file);","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"mweeruien"},"content":"        while (fileSc.hasNext()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"mweeruien"},"content":"            String nextLine \u003d fileSc.nextLine();","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"mweeruien"},"content":"            // Interprets each line of the file / each command","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"mweeruien"},"content":"            String[] txtFileCmd \u003d nextLine.split(\"@\");","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"mweeruien"},"content":"            String taskType \u003d txtFileCmd[0];","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"mweeruien"},"content":"            boolean taskState \u003d Integer.parseInt(txtFileCmd[1]) !\u003d 0; // 0 for not done, 1 for done","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"mweeruien"},"content":"            String taskInfo \u003d txtFileCmd[2];","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"mweeruien"},"content":"            String dateTime \u003d txtFileCmd[3];","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"mweeruien"},"content":"            ArrayList\u003cString\u003e taskTags \u003d formTagList(txtFileCmd[4]);","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"mweeruien"},"content":"            addExistingTask(tasks, taskType, taskState, taskInfo, dateTime, taskTags);","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"mweeruien"},"content":"            commandsSaved.add(nextLine);","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"mweeruien"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"mweeruien"},"content":"        fileSc.close();","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"mweeruien"},"content":"        return tasks;","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":97,"author":{"gitId":"mweeruien"},"content":"     * Adds a Task parsed from the save file (data/duke.txt) into an ArrayList of tasks.","lastModifiedDate":"2021-09-16"},{"lineNumber":98,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":99,"author":{"gitId":"mweeruien"},"content":"     * @param tasks The ArrayList of tasks to which the saved task will be added.","lastModifiedDate":"2021-09-16"},{"lineNumber":100,"author":{"gitId":"mweeruien"},"content":"     * @param taskType The type of task to be added.","lastModifiedDate":"2021-09-16"},{"lineNumber":101,"author":{"gitId":"mweeruien"},"content":"     * @param taskState Whether the task has been completed.","lastModifiedDate":"2021-09-16"},{"lineNumber":102,"author":{"gitId":"mweeruien"},"content":"     * @param taskInfo Description of the task.","lastModifiedDate":"2021-09-16"},{"lineNumber":103,"author":{"gitId":"mweeruien"},"content":"     * @param dateTime Additional task information. dateBy for Deadline; eventDetails for Events; Empty for Todo","lastModifiedDate":"2021-09-17"},{"lineNumber":104,"author":{"gitId":"mweeruien"},"content":"     * @param taskTags Tags attached to the task.","lastModifiedDate":"2021-09-16"},{"lineNumber":105,"author":{"gitId":"mweeruien"},"content":"     * @throws DukeDataLoadException The exception is thrown when the task is not recognised.","lastModifiedDate":"2021-09-16"},{"lineNumber":106,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":107,"author":{"gitId":"mweeruien"},"content":"    private void addExistingTask(ArrayList\u003cTask\u003e tasks, String taskType, boolean taskState, String taskInfo,","lastModifiedDate":"2021-09-16"},{"lineNumber":108,"author":{"gitId":"mweeruien"},"content":"                                 String dateTime, ArrayList\u003cString\u003e taskTags) throws DukeDataLoadException {","lastModifiedDate":"2021-09-17"},{"lineNumber":109,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":110,"author":{"gitId":"mweeruien"},"content":"        // Checks the task type (i.e. deadline, todo or event) and add them to tasks respectively","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"mweeruien"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"mweeruien"},"content":"        case \"T\": {","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"mweeruien"},"content":"            tasks.add(new Todo(taskInfo, taskState, taskTags));","lastModifiedDate":"2021-09-09"},{"lineNumber":114,"author":{"gitId":"mweeruien"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"mweeruien"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"mweeruien"},"content":"        case \"D\": {","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"mweeruien"},"content":"            // String dateBy \u003d txtFileCmd[3];","lastModifiedDate":"2021-09-09"},{"lineNumber":119,"author":{"gitId":"mweeruien"},"content":"            tasks.add(new Deadline(taskInfo, LocalDateTime.parse(dateTime), taskState, taskTags));","lastModifiedDate":"2021-09-17"},{"lineNumber":120,"author":{"gitId":"mweeruien"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"mweeruien"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"mweeruien"},"content":"        case \"E\": {","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"mweeruien"},"content":"            // String eventDetails \u003d txtFileCmd[3];","lastModifiedDate":"2021-09-09"},{"lineNumber":125,"author":{"gitId":"mweeruien"},"content":"            String startDateTime \u003d dateTime.split(\"~\")[0];","lastModifiedDate":"2021-09-17"},{"lineNumber":126,"author":{"gitId":"mweeruien"},"content":"            String endTime \u003d dateTime.split(\"~\")[1];","lastModifiedDate":"2021-09-17"},{"lineNumber":127,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":128,"author":{"gitId":"mweeruien"},"content":"            tasks.add(new Event(taskInfo, LocalDateTime.parse(startDateTime), LocalTime.parse(endTime),","lastModifiedDate":"2021-09-17"},{"lineNumber":129,"author":{"gitId":"mweeruien"},"content":"                    taskState, taskTags));","lastModifiedDate":"2021-09-17"},{"lineNumber":130,"author":{"gitId":"mweeruien"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"mweeruien"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"mweeruien"},"content":"        default:","lastModifiedDate":"2021-08-31"},{"lineNumber":133,"author":{"gitId":"mweeruien"},"content":"            throw new DukeDataLoadException(\"The task is not recognized!\");","lastModifiedDate":"2021-09-07"},{"lineNumber":134,"author":{"gitId":"mweeruien"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":138,"author":{"gitId":"mweeruien"},"content":"     * Forms an ArrayList of String called tags from a String of tags.","lastModifiedDate":"2021-09-16"},{"lineNumber":139,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":140,"author":{"gitId":"mweeruien"},"content":"     * @param tags the String of tags to be put into the ArrayList","lastModifiedDate":"2021-09-09"},{"lineNumber":141,"author":{"gitId":"mweeruien"},"content":"     * @return the ArrayList formed from the tags","lastModifiedDate":"2021-09-09"},{"lineNumber":142,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":143,"author":{"gitId":"mweeruien"},"content":"    private ArrayList\u003cString\u003e formTagList(String tags) {","lastModifiedDate":"2021-09-09"},{"lineNumber":144,"author":{"gitId":"mweeruien"},"content":"        String[] splitTags \u003d tags.split(\" \");","lastModifiedDate":"2021-09-09"},{"lineNumber":145,"author":{"gitId":"mweeruien"},"content":"        if (splitTags.length \u003d\u003d 0) {","lastModifiedDate":"2021-09-09"},{"lineNumber":146,"author":{"gitId":"mweeruien"},"content":"            return new ArrayList\u003cString\u003e();","lastModifiedDate":"2021-09-09"},{"lineNumber":147,"author":{"gitId":"mweeruien"},"content":"        } else {","lastModifiedDate":"2021-09-09"},{"lineNumber":148,"author":{"gitId":"mweeruien"},"content":"            ArrayList\u003cString\u003e tagList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-09"},{"lineNumber":149,"author":{"gitId":"mweeruien"},"content":"            for (String s : splitTags) {","lastModifiedDate":"2021-09-09"},{"lineNumber":150,"author":{"gitId":"mweeruien"},"content":"                tagList.add(s);","lastModifiedDate":"2021-09-09"},{"lineNumber":151,"author":{"gitId":"mweeruien"},"content":"            }","lastModifiedDate":"2021-09-09"},{"lineNumber":152,"author":{"gitId":"mweeruien"},"content":"            return tagList;","lastModifiedDate":"2021-09-09"},{"lineNumber":153,"author":{"gitId":"mweeruien"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":154,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":155,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":156,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":157,"author":{"gitId":"mweeruien"},"content":"     * Updates the file.","lastModifiedDate":"2021-08-25"},{"lineNumber":158,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":159,"author":{"gitId":"mweeruien"},"content":"     * @throws FileNotFoundException If the file is not found.","lastModifiedDate":"2021-08-31"},{"lineNumber":160,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":161,"author":{"gitId":"mweeruien"},"content":"    private void update() throws FileNotFoundException {","lastModifiedDate":"2021-08-24"},{"lineNumber":162,"author":{"gitId":"mweeruien"},"content":"        StringBuilder txt \u003d new StringBuilder();","lastModifiedDate":"2021-08-25"},{"lineNumber":163,"author":{"gitId":"mweeruien"},"content":"        for (String s : commandsSaved) {","lastModifiedDate":"2021-08-25"},{"lineNumber":164,"author":{"gitId":"mweeruien"},"content":"            txt.append(s).append(\"\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":165,"author":{"gitId":"mweeruien"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":166,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":167,"author":{"gitId":"mweeruien"},"content":"        PrintWriter pw \u003d new PrintWriter(file);","lastModifiedDate":"2021-09-16"},{"lineNumber":168,"author":{"gitId":"mweeruien"},"content":"        pw.append(txt.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":169,"author":{"gitId":"mweeruien"},"content":"        pw.flush();","lastModifiedDate":"2021-08-24"},{"lineNumber":170,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":171,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":172,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":173,"author":{"gitId":"mweeruien"},"content":"     * Updates the textArr element after it has been marked as \"done\".","lastModifiedDate":"2021-08-25"},{"lineNumber":174,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":175,"author":{"gitId":"mweeruien"},"content":"     * @param ref The index of the item in the textArr being referenced to","lastModifiedDate":"2021-08-25"},{"lineNumber":176,"author":{"gitId":"mweeruien"},"content":"     * @param s The string to be added to the textArr","lastModifiedDate":"2021-08-25"},{"lineNumber":177,"author":{"gitId":"mweeruien"},"content":"     * @throws IOException If there are errors processing the file.","lastModifiedDate":"2021-08-31"},{"lineNumber":178,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":179,"author":{"gitId":"mweeruien"},"content":"    public void updateDone(int ref, String s) throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":180,"author":{"gitId":"mweeruien"},"content":"        commandsSaved.set(ref, s);","lastModifiedDate":"2021-08-25"},{"lineNumber":181,"author":{"gitId":"mweeruien"},"content":"        update();","lastModifiedDate":"2021-08-24"},{"lineNumber":182,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":183,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":184,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":185,"author":{"gitId":"mweeruien"},"content":"     * Adds a task to the commandsSaved.","lastModifiedDate":"2021-08-25"},{"lineNumber":186,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":187,"author":{"gitId":"mweeruien"},"content":"     * @param s The string to be added to the commandsSaved.","lastModifiedDate":"2021-08-25"},{"lineNumber":188,"author":{"gitId":"mweeruien"},"content":"     * @throws IOException If there are errors processing the file.","lastModifiedDate":"2021-08-31"},{"lineNumber":189,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":190,"author":{"gitId":"mweeruien"},"content":"    public void addTask(String s) throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":191,"author":{"gitId":"mweeruien"},"content":"        commandsSaved.add(s);","lastModifiedDate":"2021-08-25"},{"lineNumber":192,"author":{"gitId":"mweeruien"},"content":"        update();","lastModifiedDate":"2021-08-24"},{"lineNumber":193,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":194,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":195,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":196,"author":{"gitId":"mweeruien"},"content":"     * Adds a task to the commandsSaved.","lastModifiedDate":"2021-09-09"},{"lineNumber":197,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":198,"author":{"gitId":"mweeruien"},"content":"     * @param ref The index of the item in the commandsSaved being referenced to add the tag to.","lastModifiedDate":"2021-09-09"},{"lineNumber":199,"author":{"gitId":"mweeruien"},"content":"     * @param task The string to be added to the commandsSaved.","lastModifiedDate":"2021-09-09"},{"lineNumber":200,"author":{"gitId":"mweeruien"},"content":"     * @throws IOException If there are errors processing the file.","lastModifiedDate":"2021-09-09"},{"lineNumber":201,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":202,"author":{"gitId":"mweeruien"},"content":"    public void addTag(int ref, String task) throws IOException {","lastModifiedDate":"2021-09-09"},{"lineNumber":203,"author":{"gitId":"mweeruien"},"content":"        commandsSaved.set(ref, task);","lastModifiedDate":"2021-09-09"},{"lineNumber":204,"author":{"gitId":"mweeruien"},"content":"        update();","lastModifiedDate":"2021-09-09"},{"lineNumber":205,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":206,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":207,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":208,"author":{"gitId":"mweeruien"},"content":"     * Removes the task referenced to from commandsSaved.","lastModifiedDate":"2021-08-25"},{"lineNumber":209,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":210,"author":{"gitId":"mweeruien"},"content":"     * @param ref The index of the item in the commandsSaved being referenced to be removed.","lastModifiedDate":"2021-08-25"},{"lineNumber":211,"author":{"gitId":"mweeruien"},"content":"     * @throws IOException If there are errors processing the file.","lastModifiedDate":"2021-08-31"},{"lineNumber":212,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":213,"author":{"gitId":"mweeruien"},"content":"    public void removeTask(int ref) throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":214,"author":{"gitId":"mweeruien"},"content":"        commandsSaved.remove(ref);","lastModifiedDate":"2021-08-25"},{"lineNumber":215,"author":{"gitId":"mweeruien"},"content":"        update();","lastModifiedDate":"2021-08-24"},{"lineNumber":216,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":217,"author":{"gitId":"mweeruien"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"mweeruien":217}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mweeruien"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"mweeruien"},"content":" * This function handles the list of tasks maintained by the system.","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"mweeruien"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"mweeruien"},"content":" * @author Megan Wee Rui En","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"mweeruien"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"mweeruien"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"mweeruien"},"content":"package duke.tasklist;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"mweeruien"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"mweeruien"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"mweeruien"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"mweeruien"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"mweeruien"},"content":"    // The constructor takes in an array of tasks and saves it as the taskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"mweeruien"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"mweeruien"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"mweeruien"},"content":"     * Adds a task to taskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"mweeruien"},"content":"     * @param task the task to be added","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"mweeruien"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"mweeruien"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"mweeruien"},"content":"     * Returns the number of elements in the taskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"mweeruien"},"content":"     * @return The number of elements in the taskList","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"mweeruien"},"content":"    public int size() {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"mweeruien"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"mweeruien"},"content":"     * Returns a specific element from the taskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"mweeruien"},"content":"     * @param index The index of the task in the taskList","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"mweeruien"},"content":"     * @return The desired element at the index specified","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"mweeruien"},"content":"    public Task get(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"mweeruien"},"content":"        return tasks.get(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"mweeruien"},"content":"     * Returns the StatusString (the string to be saved into the text file) of the last element in the taskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"mweeruien"},"content":"     * @return The StatusString (the string to be saved into the text file) of the last element in the taskList","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"mweeruien"},"content":"    public String getLastStatusString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"mweeruien"},"content":"        return tasks.get(tasks.size() - 1).getStatusString();","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"mweeruien"},"content":"     * Removes a specified element from the taskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"mweeruien"},"content":"     * @param index the index of the task to remove","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"mweeruien"},"content":"    public void remove(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"mweeruien"},"content":"        tasks.remove(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"mweeruien"},"content":"     * Returns an ArrayList of String representing tasks that match the searched word.","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"mweeruien"},"content":"     * @param word The word that is searched for in the tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"mweeruien"},"content":"     * @return An ArrayList of String representing tasks that match the searched word.","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"mweeruien"},"content":"    public ArrayList\u003cString\u003e search(String word) {","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"mweeruien"},"content":"        ArrayList\u003cString\u003e wordList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"mweeruien"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"mweeruien"},"content":"            if (t.toString().toLowerCase().contains(word)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"mweeruien"},"content":"                wordList.add((tasks.indexOf(t) + 1) + \". \" + t.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"mweeruien"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"mweeruien"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"mweeruien"},"content":"        return wordList;","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"mweeruien"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"mweeruien":85}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mweeruien"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"mweeruien"},"content":" * This class encapsulates the Deadline Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"mweeruien"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"mweeruien"},"content":" * @author Megan Wee Rui En","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"mweeruien"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"mweeruien"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"mweeruien"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"mweeruien"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"mweeruien"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"mweeruien"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-09"},{"lineNumber":13,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"mweeruien"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"mweeruien"},"content":"    protected ArrayList\u003cString\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-09"},{"lineNumber":17,"author":{"gitId":"mweeruien"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"mweeruien"},"content":"    // This is used only for loading from the storage","lastModifiedDate":"2021-09-09"},{"lineNumber":21,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":22,"author":{"gitId":"mweeruien"},"content":"     * Constructs a Deadline object.","lastModifiedDate":"2021-09-09"},{"lineNumber":23,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":24,"author":{"gitId":"mweeruien"},"content":"     * @param description Description of Deadline object","lastModifiedDate":"2021-09-09"},{"lineNumber":25,"author":{"gitId":"mweeruien"},"content":"     * @param isDone whether the task has been completed","lastModifiedDate":"2021-09-09"},{"lineNumber":26,"author":{"gitId":"mweeruien"},"content":"     * @param dateTimeBy The date the deadline task is due by.","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":28,"author":{"gitId":"mweeruien"},"content":"    public Deadline(String description, LocalDateTime dateTimeBy, boolean isDone, ArrayList\u003cString\u003e tags) {","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"mweeruien"},"content":"        super(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"mweeruien"},"content":"        this.dateTime \u003d dateTimeBy;","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"mweeruien"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-09-09"},{"lineNumber":32,"author":{"gitId":"mweeruien"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2021-09-09"},{"lineNumber":33,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":36,"author":{"gitId":"mweeruien"},"content":"     * Constructs a Deadline object.","lastModifiedDate":"2021-09-09"},{"lineNumber":37,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":38,"author":{"gitId":"mweeruien"},"content":"     * @param description Description of Deadline object","lastModifiedDate":"2021-09-09"},{"lineNumber":39,"author":{"gitId":"mweeruien"},"content":"     * @param dateTime The date and time the deadline task is due by.","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":41,"author":{"gitId":"mweeruien"},"content":"    public Deadline(String description, LocalDateTime dateTime) {","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"mweeruien"},"content":"        super(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"mweeruien"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"mweeruien"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-09-09"},{"lineNumber":45,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"mweeruien"},"content":"     * Returns the string of the task to be represented in the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"mweeruien"},"content":"     * @return the string of the task to be represented in the list","lastModifiedDate":"2021-09-09"},{"lineNumber":51,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"mweeruien"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"mweeruien"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"mweeruien"},"content":"        return String.format(\"[D]%s%s (by: %s) %s\", super.toString(), description,","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"mweeruien"},"content":"                dateTime.format(DateTimeFormatter.ofPattern(\"d MMM yyyy h:mm a\")), getTags(this.tags));","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"mweeruien"},"content":"     * Returns the string of the task to be represented in the text file.","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"mweeruien"},"content":"     * @return the string of the task to be represented in the text file","lastModifiedDate":"2021-09-09"},{"lineNumber":62,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"mweeruien"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"mweeruien"},"content":"    public String getStatusString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"mweeruien"},"content":"        return String.format(\"D@%d@%s@%s@%s@\", (isDone ? 1 : 0), this.description, this.dateTime.toString(),","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"mweeruien"},"content":"                getTagsForStorage(this.tags));","lastModifiedDate":"2021-09-09"},{"lineNumber":67,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"mweeruien"},"content":"     * Returns a String representation of the tags to any event.","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"mweeruien"},"content":"     * @param tagInfo The information associated with a tag.","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"mweeruien"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"mweeruien"},"content":"    public void addTag(String tagInfo) {","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"mweeruien"},"content":"        this.tags.add(tagInfo);","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"mweeruien"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"mweeruien":78}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mweeruien"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"mweeruien"},"content":" * This class encapsulates the Event Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"mweeruien"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"mweeruien"},"content":" * @author Megan Wee Rui En","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"mweeruien"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"mweeruien"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"mweeruien"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"mweeruien"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"mweeruien"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"mweeruien"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"mweeruien"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-09"},{"lineNumber":13,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"mweeruien"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"mweeruien"},"content":"    protected final LocalDateTime dateTimeOf;","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"mweeruien"},"content":"    protected final LocalTime timeEnd;","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"mweeruien"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-09-09"},{"lineNumber":19,"author":{"gitId":"mweeruien"},"content":"    protected ArrayList\u003cString\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-09"},{"lineNumber":20,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":22,"author":{"gitId":"mweeruien"},"content":"     * Constructs an Event object.","lastModifiedDate":"2021-09-09"},{"lineNumber":23,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":24,"author":{"gitId":"mweeruien"},"content":"     * @param description Description of new Event object.","lastModifiedDate":"2021-09-09"},{"lineNumber":25,"author":{"gitId":"mweeruien"},"content":"     * @param dateTimeOf Details of new Event object.","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":27,"author":{"gitId":"mweeruien"},"content":"    public Event(String description, LocalDateTime dateTimeOf, LocalTime timeEnd,","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"mweeruien"},"content":"                 boolean isDone, ArrayList\u003cString\u003e tags) {","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"mweeruien"},"content":"        super(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"mweeruien"},"content":"        this.dateTimeOf \u003d dateTimeOf;","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"mweeruien"},"content":"        this.timeEnd \u003d timeEnd;","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"mweeruien"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-09-09"},{"lineNumber":33,"author":{"gitId":"mweeruien"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2021-09-09"},{"lineNumber":34,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":37,"author":{"gitId":"mweeruien"},"content":"     * Constructs an Event object.","lastModifiedDate":"2021-09-09"},{"lineNumber":38,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":39,"author":{"gitId":"mweeruien"},"content":"     * @param description Description of new Event object.","lastModifiedDate":"2021-09-09"},{"lineNumber":40,"author":{"gitId":"mweeruien"},"content":"     * @param dateTimeOf Details of new Event object.","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":42,"author":{"gitId":"mweeruien"},"content":"    public Event(String description, LocalDateTime dateTimeOf, LocalTime timeEnd) {","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"mweeruien"},"content":"        super(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"mweeruien"},"content":"        this.dateTimeOf \u003d dateTimeOf;","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"mweeruien"},"content":"        this.timeEnd \u003d timeEnd;","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"mweeruien"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-09-09"},{"lineNumber":47,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"mweeruien"},"content":"     * This function returns the string of the task to be represented in the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"mweeruien"},"content":"     * @return the string of the task to be represented in the list","lastModifiedDate":"2021-09-09"},{"lineNumber":53,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"mweeruien"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"mweeruien"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"mweeruien"},"content":"        return String.format(\"[E]%s%s (at: %s - %s) %s\", super.toString(), description,","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"mweeruien"},"content":"                dateTimeOf.format(DateTimeFormatter.ofPattern(\"d MMM yyyy h:mm a\")),","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"mweeruien"},"content":"                timeEnd.format(DateTimeFormatter.ofPattern(\"h:mm a\")),","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"mweeruien"},"content":"                getTags(this.tags));","lastModifiedDate":"2021-09-09"},{"lineNumber":60,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"mweeruien"},"content":"     * This function returns the string of the task to be represented in the text file.","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"mweeruien"},"content":"     * @return the string of the task to be represented in the text file","lastModifiedDate":"2021-09-09"},{"lineNumber":66,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"mweeruien"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"mweeruien"},"content":"    public String getStatusString() {","lastModifiedDate":"2021-09-09"},{"lineNumber":69,"author":{"gitId":"mweeruien"},"content":"        return String.format(\"E@%d@%s@%s~%s@%s@\", (isDone ? 1 : 0),","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"mweeruien"},"content":"                this.description, this.dateTimeOf.toString(), this.timeEnd.toString(),","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"mweeruien"},"content":"                getTagsForStorage(this.tags));","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"mweeruien"},"content":"     * Returns a String representation of the tags to any event.","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"mweeruien"},"content":"     * @param tagInfo The information associated with a tag.","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"mweeruien"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"mweeruien"},"content":"    public void addTag(String tagInfo) {","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"mweeruien"},"content":"        this.tags.add(tagInfo);","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":83,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":84,"author":{"gitId":"mweeruien"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"mweeruien":84}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mweeruien"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"mweeruien"},"content":" * This class encapsulates the  Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"mweeruien"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"mweeruien"},"content":" * @author Megan Wee Rui En","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"mweeruien"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"mweeruien"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"mweeruien"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"mweeruien"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-09"},{"lineNumber":11,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":12,"author":{"gitId":"mweeruien"},"content":"public class Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"mweeruien"},"content":"    protected final String description;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"mweeruien"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"mweeruien"},"content":"    protected ArrayList\u003cString\u003e eventTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-09"},{"lineNumber":17,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":19,"author":{"gitId":"mweeruien"},"content":"     * Constructor of Task objects.","lastModifiedDate":"2021-09-09"},{"lineNumber":20,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":21,"author":{"gitId":"mweeruien"},"content":"     * @param description The description of the Task","lastModifiedDate":"2021-09-09"},{"lineNumber":22,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":23,"author":{"gitId":"mweeruien"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"mweeruien"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"mweeruien"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"mweeruien"},"content":"     * Returns an \u0027X\u0027 if the task has been marked as done, and an \" \" otherwise.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"mweeruien"},"content":"     * @return the string of the task to be represented in the list","lastModifiedDate":"2021-09-09"},{"lineNumber":32,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"mweeruien"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"mweeruien"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"mweeruien"},"content":"     * Sets the isDone attribute to true, which marks a task as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"mweeruien"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"mweeruien"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"mweeruien"},"content":"     * Returns the string representation of the task completion.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"mweeruien"},"content":"     * @return the string representation of the task completion","lastModifiedDate":"2021-09-09"},{"lineNumber":48,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"mweeruien"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"mweeruien"},"content":"        return \"[\" + this.getStatusIcon() + \"] \";","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"mweeruien"},"content":"     * Returns the representation of the task to be saved in the text file.","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"mweeruien"},"content":"     * @return an empty string","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"mweeruien"},"content":"    public String getStatusString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"mweeruien"},"content":"        return \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":63,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":64,"author":{"gitId":"mweeruien"},"content":"     * Returns a String representation of the tags to any event.","lastModifiedDate":"2021-09-09"},{"lineNumber":65,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":66,"author":{"gitId":"mweeruien"},"content":"     * @return String representation of the tags to any event.","lastModifiedDate":"2021-09-09"},{"lineNumber":67,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":68,"author":{"gitId":"mweeruien"},"content":"    // TODO where should this fnc be","lastModifiedDate":"2021-09-09"},{"lineNumber":69,"author":{"gitId":"mweeruien"},"content":"    public String getTags(ArrayList\u003cString\u003e eventTags) {","lastModifiedDate":"2021-09-09"},{"lineNumber":70,"author":{"gitId":"mweeruien"},"content":"        StringBuilder eventTagsStr \u003d new StringBuilder();","lastModifiedDate":"2021-09-09"},{"lineNumber":71,"author":{"gitId":"mweeruien"},"content":"        if (!eventTags.isEmpty()) {","lastModifiedDate":"2021-09-09"},{"lineNumber":72,"author":{"gitId":"mweeruien"},"content":"            for (String s : eventTags) {","lastModifiedDate":"2021-09-09"},{"lineNumber":73,"author":{"gitId":"mweeruien"},"content":"                eventTagsStr.append(String.format(\" #%s\", s));","lastModifiedDate":"2021-09-09"},{"lineNumber":74,"author":{"gitId":"mweeruien"},"content":"            }","lastModifiedDate":"2021-09-09"},{"lineNumber":75,"author":{"gitId":"mweeruien"},"content":"            return eventTagsStr.toString();","lastModifiedDate":"2021-09-09"},{"lineNumber":76,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":77,"author":{"gitId":"mweeruien"},"content":"        } else {","lastModifiedDate":"2021-09-09"},{"lineNumber":78,"author":{"gitId":"mweeruien"},"content":"            return \"\";","lastModifiedDate":"2021-09-09"},{"lineNumber":79,"author":{"gitId":"mweeruien"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":80,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":81,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":82,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":83,"author":{"gitId":"mweeruien"},"content":"     * Returns a String representation of the tags to any event.","lastModifiedDate":"2021-09-09"},{"lineNumber":84,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":85,"author":{"gitId":"mweeruien"},"content":"     * @return String representation of the tags to any event.","lastModifiedDate":"2021-09-09"},{"lineNumber":86,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":87,"author":{"gitId":"mweeruien"},"content":"    // TODO where should this fnc be","lastModifiedDate":"2021-09-09"},{"lineNumber":88,"author":{"gitId":"mweeruien"},"content":"    public String getTagsForStorage(ArrayList\u003cString\u003e tags) {","lastModifiedDate":"2021-09-09"},{"lineNumber":89,"author":{"gitId":"mweeruien"},"content":"        StringBuilder eventTagsStr \u003d new StringBuilder();","lastModifiedDate":"2021-09-09"},{"lineNumber":90,"author":{"gitId":"mweeruien"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2021-09-09"},{"lineNumber":91,"author":{"gitId":"mweeruien"},"content":"            for (String s : tags) {","lastModifiedDate":"2021-09-09"},{"lineNumber":92,"author":{"gitId":"mweeruien"},"content":"                eventTagsStr.append(s).append(\" \");","lastModifiedDate":"2021-09-09"},{"lineNumber":93,"author":{"gitId":"mweeruien"},"content":"            }","lastModifiedDate":"2021-09-09"},{"lineNumber":94,"author":{"gitId":"mweeruien"},"content":"            return eventTagsStr.toString();","lastModifiedDate":"2021-09-09"},{"lineNumber":95,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":96,"author":{"gitId":"mweeruien"},"content":"        } else {","lastModifiedDate":"2021-09-09"},{"lineNumber":97,"author":{"gitId":"mweeruien"},"content":"            return \" \";","lastModifiedDate":"2021-09-09"},{"lineNumber":98,"author":{"gitId":"mweeruien"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":99,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":100,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":101,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":102,"author":{"gitId":"mweeruien"},"content":"     * Returns a String representation of the tags to any event.","lastModifiedDate":"2021-09-09"},{"lineNumber":103,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":104,"author":{"gitId":"mweeruien"},"content":"     * @param tagInfo The information associated with a tag.","lastModifiedDate":"2021-09-09"},{"lineNumber":105,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":106,"author":{"gitId":"mweeruien"},"content":"    public void addTag(String tagInfo) {","lastModifiedDate":"2021-09-09"},{"lineNumber":107,"author":{"gitId":"mweeruien"},"content":"        this.eventTags.add(tagInfo);","lastModifiedDate":"2021-09-09"},{"lineNumber":108,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":109,"author":{"gitId":"mweeruien"},"content":"}","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"mweeruien":110}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mweeruien"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"mweeruien"},"content":" * This class encapsulates the Todo Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"mweeruien"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"mweeruien"},"content":" * @author Megan Wee Rui En","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"mweeruien"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"mweeruien"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"mweeruien"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"mweeruien"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-09"},{"lineNumber":11,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":12,"author":{"gitId":"mweeruien"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"mweeruien"},"content":"    protected ArrayList\u003cString\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":16,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"mweeruien"},"content":"     * Constructs a Todo object. This is used in creating a new Todo object.","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"mweeruien"},"content":"     * @param description The description of the Todo object.","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"mweeruien"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"mweeruien"},"content":"        super(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"mweeruien"},"content":"     * Constructs a Todo object based on previous saved data. This is used when loading the saved file.","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"mweeruien"},"content":"     * @param description The description of the Todo object.","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"mweeruien"},"content":"     * @param isDone Whether the Todo object has been done or yet.","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"mweeruien"},"content":"    public Todo(String description, boolean isDone, ArrayList\u003cString\u003e tags) {","lastModifiedDate":"2021-09-09"},{"lineNumber":32,"author":{"gitId":"mweeruien"},"content":"        super(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"mweeruien"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"mweeruien"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2021-09-09"},{"lineNumber":35,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"mweeruien"},"content":"     * Returns the string of the task to be represented in the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"mweeruien"},"content":"     * @return the string of the task to be represented in the list","lastModifiedDate":"2021-09-09"},{"lineNumber":41,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"mweeruien"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"mweeruien"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"mweeruien"},"content":"        return String.format(\"[T]%s%s %s\", super.toString(), description, getTags(this.tags));","lastModifiedDate":"2021-09-09"},{"lineNumber":45,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"mweeruien"},"content":"     * Returns the string of the task to be represented in the text file.","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"mweeruien"},"content":"     * @return the string of the task to be represented in the text file","lastModifiedDate":"2021-09-09"},{"lineNumber":51,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"mweeruien"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"mweeruien"},"content":"    public String getStatusString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"mweeruien"},"content":"        return String.format(\"T@%d@%s@ @%s@\", (isDone ? 1 : 0), this.description, getTagsForStorage(this.tags));","lastModifiedDate":"2021-09-09"},{"lineNumber":55,"author":{"gitId":"mweeruien"},"content":"        // return \"T@\" + (isDone ? 1 : 0) + \"@\" + this.description;","lastModifiedDate":"2021-09-09"},{"lineNumber":56,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":57,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":58,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":59,"author":{"gitId":"mweeruien"},"content":"     * Returns a String representation of the tags to any event.","lastModifiedDate":"2021-09-09"},{"lineNumber":60,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":61,"author":{"gitId":"mweeruien"},"content":"     * @param tagInfo The information associated with a tag.","lastModifiedDate":"2021-09-09"},{"lineNumber":62,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":63,"author":{"gitId":"mweeruien"},"content":"    @Override","lastModifiedDate":"2021-09-09"},{"lineNumber":64,"author":{"gitId":"mweeruien"},"content":"    public void addTag(String tagInfo) {","lastModifiedDate":"2021-09-09"},{"lineNumber":65,"author":{"gitId":"mweeruien"},"content":"        this.tags.add(tagInfo);","lastModifiedDate":"2021-09-09"},{"lineNumber":66,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"mweeruien"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"mweeruien":67}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mweeruien"},"content":"package duke.ui;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"mweeruien"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"mweeruien"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"mweeruien"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"mweeruien"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"mweeruien"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"mweeruien"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"mweeruien"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"mweeruien"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"mweeruien"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"mweeruien"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"mweeruien"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"mweeruien"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"mweeruien"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"mweeruien"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"mweeruien"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"mweeruien"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"mweeruien"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"mweeruien"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"mweeruien"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"mweeruien"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"mweeruien"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"mweeruien"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"mweeruien"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"mweeruien"},"content":"     * Constructs a DialogBox.","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"mweeruien"},"content":"     * @param text The text to be inputted into the DialogBox.","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"mweeruien"},"content":"     * @param img The image associated with the \"sender\" of the text.","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"mweeruien"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"mweeruien"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"mweeruien"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(duke.ui.MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"mweeruien"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"mweeruien"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"mweeruien"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"mweeruien"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"mweeruien"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"mweeruien"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"mweeruien"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"mweeruien"},"content":"        // dialog.setPadding(new Insets(0,10,0,10));","lastModifiedDate":"2021-09-14"},{"lineNumber":47,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":48,"author":{"gitId":"mweeruien"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"mweeruien"},"content":"        displayPicture.setClip(new Circle(50, 35, 35));","lastModifiedDate":"2021-09-14"},{"lineNumber":50,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":51,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"mweeruien"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"mweeruien"},"content":"    private void flip() {","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"mweeruien"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"mweeruien"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"mweeruien"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"mweeruien"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"mweeruien"},"content":"     * This presents the UserDialog in the form of a DialogBox.","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"mweeruien"},"content":"     * @param text The text inputted by the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"mweeruien"},"content":"     * @param img The image representative of the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"mweeruien"},"content":"     * @return the user\u0027s dialogue in the form of a DialogBox.","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"mweeruien"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"mweeruien"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"mweeruien"},"content":"     * This presents the Robot\u0027s Dialog in the form of a DialogBox.","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":77,"author":{"gitId":"mweeruien"},"content":"     * @param text The text outputted by the robot.","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"mweeruien"},"content":"     * @param img The image representative of the robot.","lastModifiedDate":"2021-08-31"},{"lineNumber":79,"author":{"gitId":"mweeruien"},"content":"     * @return the robot\u0027s dialogue in the form of a DialogBox.","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":81,"author":{"gitId":"mweeruien"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":82,"author":{"gitId":"mweeruien"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-31"},{"lineNumber":83,"author":{"gitId":"mweeruien"},"content":"        // db.setStyle(\"-fx-background-color: #c6e6fb; -fx-background-radius: 20px; -fx-border-radius: 20px;\");","lastModifiedDate":"2021-09-14"},{"lineNumber":84,"author":{"gitId":"mweeruien"},"content":"        db.flip();","lastModifiedDate":"2021-08-31"},{"lineNumber":85,"author":{"gitId":"mweeruien"},"content":"        return db;","lastModifiedDate":"2021-08-31"},{"lineNumber":86,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":87,"author":{"gitId":"mweeruien"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"mweeruien":87}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mweeruien"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"mweeruien"},"content":" * This function is responsible for the Main Window of the GUI.","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"mweeruien"},"content":" *","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"mweeruien"},"content":" * @author Megan Wee Rui En","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"mweeruien"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"mweeruien"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"mweeruien"},"content":"package duke.ui;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"mweeruien"},"content":"import java.util.Objects;","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"mweeruien"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"mweeruien"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"mweeruien"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"mweeruien"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"mweeruien"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"mweeruien"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"mweeruien"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"mweeruien"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"mweeruien"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"mweeruien"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"mweeruien"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"mweeruien"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"mweeruien"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"mweeruien"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"mweeruien"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"mweeruien"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"mweeruien"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"mweeruien"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"mweeruien"},"content":"    private final Image userImage \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"mweeruien"},"content":"            this.getClass().getResourceAsStream(\"/images/DaUser.png\")));","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"mweeruien"},"content":"    private final Image dukeImage \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"mweeruien"},"content":"            this.getClass().getResourceAsStream(\"/images/DaDuke.png\")));","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"mweeruien"},"content":"     * Initialises a dialog container.","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"mweeruien"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"mweeruien"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"mweeruien"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"mweeruien"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"mweeruien"},"content":"                DialogBox.getDukeDialog(ui.showWelcome(), dukeImage)","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"mweeruien"},"content":"        );","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"mweeruien"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"mweeruien"},"content":"     * Assigns parameter d to the duke attribute to param d.","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"mweeruien"},"content":"     * @param d The duke object the attribute duke will be assigned to.","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"mweeruien"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"mweeruien"},"content":"        duke \u003d d;","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"mweeruien"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"mweeruien"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"mweeruien"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"mweeruien"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"mweeruien"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"mweeruien"},"content":"        assert input !\u003d null : \"The user input cannot be null.\";","lastModifiedDate":"2021-09-07"},{"lineNumber":67,"author":{"gitId":"mweeruien"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":69,"author":{"gitId":"mweeruien"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"mweeruien"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"mweeruien"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"mweeruien"},"content":"        );","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"mweeruien"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"mweeruien"},"content":"}","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"mweeruien":76}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mweeruien"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"mweeruien"},"content":" * This class handles the outputs for logging purposes and responding to the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"mweeruien"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"mweeruien"},"content":" * @author Megan Wee Rui En","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"mweeruien"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"mweeruien"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"mweeruien"},"content":"package duke.ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"mweeruien"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"mweeruien"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"mweeruien"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"mweeruien"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"mweeruien"},"content":"     * Constructs an Ui object, and prints a message when it does.","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"mweeruien"},"content":"    public Ui() {}","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"mweeruien"},"content":"     * Prints out a welcome message when a user starts using the chatbot, and prints the possible order","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"mweeruien"},"content":"     * @return The welcome message.","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"mweeruien"},"content":"    public String showWelcome() {","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"mweeruien"},"content":"        return \"Haro, I\u0027m Taro! Taro is short for Notaro because I\u0027m Not-a-ro-bot!! \\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"mweeruien"},"content":"                + \"What can I do for you today? :\u003e\";","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"mweeruien"},"content":"     * Prints out a message when a \u0027bye\u0027 command is entered  (when the program ends).","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"mweeruien"},"content":"     * @return The bot\u0027s output for the bye command.","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"mweeruien"},"content":"    public String showBye() {","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"mweeruien"},"content":"        return \"Bye bye!! It was nice meeting you!\";","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"mweeruien"},"content":"     * Logs the addition of a Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"mweeruien"},"content":"     * @param taskAdded The string representation of the task which has been added.","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"mweeruien"},"content":"     * @param taskListSize The size of the current list of tasks.","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"mweeruien"},"content":"     * @return The bot\u0027s output for the done command.","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"mweeruien"},"content":"    public String showAddition(String taskAdded, int taskListSize) {","lastModifiedDate":"2021-09-14"},{"lineNumber":49,"author":{"gitId":"mweeruien"},"content":"        return String.format(\"Okay! I\u0027ve added the following: \\n%s\\n\" + \"%d more tasks to go!\",","lastModifiedDate":"2021-09-14"},{"lineNumber":50,"author":{"gitId":"mweeruien"},"content":"                taskAdded, taskListSize);","lastModifiedDate":"2021-09-14"},{"lineNumber":51,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"mweeruien"},"content":"     * Logs the removal of a Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"mweeruien"},"content":"     * @param taskRemoved The task removed by the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"mweeruien"},"content":"     * @param taskListSize The size of the current list of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"mweeruien"},"content":"     * @return The bot\u0027s output for the delete command.","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"mweeruien"},"content":"    public String showDeletion(String taskRemoved, int taskListSize) {","lastModifiedDate":"2021-09-14"},{"lineNumber":61,"author":{"gitId":"mweeruien"},"content":"        return String.format(\"Oki! I have removed this task:\\n%s\\n%d more tasks to go!\",","lastModifiedDate":"2021-09-14"},{"lineNumber":62,"author":{"gitId":"mweeruien"},"content":"                taskRemoved,","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"mweeruien"},"content":"                taskListSize);","lastModifiedDate":"2021-09-14"},{"lineNumber":64,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"mweeruien"},"content":"     * Prints out the taskList in a neat manner.","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"mweeruien"},"content":"     * @param tasks The current list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"mweeruien"},"content":"     * @return The bot\u0027s output for the list command.","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"mweeruien"},"content":"    public String showList(TaskList tasks) {","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"mweeruien"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"mweeruien"},"content":"            return \"Yay! Nothing on your list right now :\u003e\";","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"mweeruien"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"mweeruien"},"content":"            StringBuilder tasksString \u003d new StringBuilder();","lastModifiedDate":"2021-08-31"},{"lineNumber":77,"author":{"gitId":"mweeruien"},"content":"            for (int count \u003d 0; count \u003c tasks.size(); count++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"mweeruien"},"content":"                tasksString.append((count + 1) + \". \" + tasks.get(count).toString() + \"\\n\");","lastModifiedDate":"2021-09-07"},{"lineNumber":79,"author":{"gitId":"mweeruien"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"mweeruien"},"content":"            return \"Here are your tasks:\\n\" + tasksString.toString();","lastModifiedDate":"2021-09-14"},{"lineNumber":81,"author":{"gitId":"mweeruien"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"mweeruien"},"content":"     * Logs the completion of a Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"mweeruien"},"content":"     * @param command The task which has been completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"mweeruien"},"content":"     * @return The bot\u0027s output for the done command if a task has been completed.","lastModifiedDate":"2021-08-31"},{"lineNumber":89,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"mweeruien"},"content":"    public String showCompletion(String command) {","lastModifiedDate":"2021-08-31"},{"lineNumber":91,"author":{"gitId":"mweeruien"},"content":"        return String.format(\"Yay good job! %s has been completed\", command);","lastModifiedDate":"2021-08-31"},{"lineNumber":92,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"mweeruien"},"content":"     * Logs the completion of a Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"mweeruien"},"content":"     * @param wordList The list of commands with matches to the searched word.","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"mweeruien"},"content":"     * @return The bot\u0027s output for the find command.","lastModifiedDate":"2021-08-31"},{"lineNumber":99,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"mweeruien"},"content":"    public String showSearch(ArrayList\u003cString\u003e wordList) {","lastModifiedDate":"2021-08-31"},{"lineNumber":101,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"mweeruien"},"content":"        if (wordList.isEmpty()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"mweeruien"},"content":"            return \"You don\u0027t have anything in your todo list with that word!\";","lastModifiedDate":"2021-08-31"},{"lineNumber":104,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"mweeruien"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"mweeruien"},"content":"            StringBuilder words \u003d new StringBuilder();","lastModifiedDate":"2021-08-31"},{"lineNumber":107,"author":{"gitId":"mweeruien"},"content":"            for (String s : wordList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"mweeruien"},"content":"                words.append(s).append(\"\\n\");","lastModifiedDate":"2021-08-31"},{"lineNumber":109,"author":{"gitId":"mweeruien"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"mweeruien"},"content":"            return String.format(\"Here are the matching tasks in your list:\\n%sGood luck!\", words.toString());","lastModifiedDate":"2021-09-14"},{"lineNumber":111,"author":{"gitId":"mweeruien"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":114,"author":{"gitId":"mweeruien"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":115,"author":{"gitId":"mweeruien"},"content":"     * Logs the completion of a Task.","lastModifiedDate":"2021-09-09"},{"lineNumber":116,"author":{"gitId":"mweeruien"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":117,"author":{"gitId":"mweeruien"},"content":"     * @param tagInfo The information of the tag.","lastModifiedDate":"2021-09-09"},{"lineNumber":118,"author":{"gitId":"mweeruien"},"content":"     * @param task The task that the added tag is associated with.","lastModifiedDate":"2021-09-09"},{"lineNumber":119,"author":{"gitId":"mweeruien"},"content":"     * @return The bot\u0027s output for the tag command.","lastModifiedDate":"2021-09-09"},{"lineNumber":120,"author":{"gitId":"mweeruien"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":121,"author":{"gitId":"mweeruien"},"content":"    public String showTag(String tagInfo, Task task) {","lastModifiedDate":"2021-09-09"},{"lineNumber":122,"author":{"gitId":"mweeruien"},"content":"        return String.format(\"Oki! The tag %s has been added. Here is the modified task!\\n %s\",","lastModifiedDate":"2021-09-09"},{"lineNumber":123,"author":{"gitId":"mweeruien"},"content":"                tagInfo, task.toString());","lastModifiedDate":"2021-09-09"},{"lineNumber":124,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":125,"author":{"gitId":"mweeruien"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"mweeruien":125}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"mweeruien"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"mweeruien"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"mweeruien"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"mweeruien"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"mweeruien"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"mweeruien"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"mweeruien"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"mweeruien"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"mweeruien"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":12,"author":{"gitId":"mweeruien"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"mweeruien"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"mweeruien"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"mweeruien"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"mweeruien"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"mweeruien"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"mweeruien":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"mweeruien"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"mweeruien"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"mweeruien"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"mweeruien"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"mweeruien"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"mweeruien"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"mweeruien"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"mweeruien"},"content":"            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"mweeruien"},"content":"            fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"mweeruien"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"mweeruien"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\"","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"mweeruien"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"mweeruien"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"mweeruien"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"mweeruien"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"mweeruien"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"mweeruien"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"mweeruien"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"mweeruien"},"content":"                      style\u003d\"-fx-background-color: #e8f5fd\" /\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"mweeruien"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"mweeruien"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"mweeruien"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"mweeruien"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"mweeruien":25}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mweeruien"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"mweeruien"},"content":" * This class represents a test file for Duke.java.","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"mweeruien"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"mweeruien"},"content":" * @author Megan Wee Rui En","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"mweeruien"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"mweeruien"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"mweeruien"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"mweeruien"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"mweeruien"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"mweeruien"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"mweeruien"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"mweeruien"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"mweeruien"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"mweeruien"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"mweeruien"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"mweeruien"},"content":"    public void Deadline_createDeadline_deadlineStringReturned() {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"mweeruien"},"content":"        Deadline deadline \u003d new Deadline(","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"mweeruien"},"content":"                \"Finish assignment\",","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"mweeruien"},"content":"                LocalDateTime.parse(\"2020-12-12T23:59\")","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"mweeruien"},"content":"        );","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"mweeruien"},"content":"        assertEquals(\"[D][ ] Finish assignment (by: 12 Dec 2020 11:59 PM) \", deadline.toString());","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"mweeruien"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"mweeruien"},"content":"    public void Todo_completeTodo_TodoStringReturned() {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"mweeruien"},"content":"        Todo todo \u003d new Todo(","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"mweeruien"},"content":"                \"Eat my potatoes\"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"mweeruien"},"content":"        );","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"mweeruien"},"content":"        todo.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"mweeruien"},"content":"        assertEquals(\"[T][X] Eat my potatoes \", todo.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"mweeruien"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"mweeruien"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"mweeruien"},"content":"    public void Event_completeEvent_EventStringReturned() {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"mweeruien"},"content":"        Event event \u003d new Event(","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"mweeruien"},"content":"                \"Meeting friends\",","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"mweeruien"},"content":"                LocalDateTime.parse(\"2021-09-09T10:30\"),","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"mweeruien"},"content":"                LocalTime.parse(\"11:30\")","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"mweeruien"},"content":"        );","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"mweeruien"},"content":"        event.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"mweeruien"},"content":"        assertEquals(\"[E][X] Meeting friends (at: 9 Sep 2021 10:30 AM - 11:30 AM) \", event.toString());","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"mweeruien"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"mweeruien"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"mweeruien":49}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mweeruien"},"content":"D@1@lecture @ Friday","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"mweeruien"},"content":"D@1@finish this assignment","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"mweeruien"},"content":"D@0@submit @ Thursday","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"mweeruien"},"content":"D@0@lecture @ Friday","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"mweeruien":4}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mweeruien"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"mweeruien"},"content":"todo finish this assignment","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"mweeruien"},"content":"deadline submit /by Thursday","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"mweeruien"},"content":"event lecture /at Friday","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"mweeruien"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"mweeruien"},"content":"done 7","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"mweeruien"},"content":"delete 7","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"mweeruien"},"content":"delete 6","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"mweeruien"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"mweeruien"},"content":"done 5","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"mweeruien"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"mweeruien"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"mweeruien":12}}]
