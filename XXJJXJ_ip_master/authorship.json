[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"XXJJXJ":2,"-":22}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package duke;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import duke.exceptions.DukeFileException;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":" * This is the Duke class that interacts with users using inputs from users in CLI.","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"     * The following are private class fields of a Duke instance.","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"    private Storage store;","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"     * This is the Constructor of Duke.","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"        this.store \u003d new Storage(filePath);","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"            taskList \u003d new TaskList(store.load());","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"        } catch (DukeFileException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"     * This is the main point of interaction of user and duke.Duke.","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"    public void run() {","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"        while(!isExit) {","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"            try {","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"                Command c \u003d Parser.decipher(fullCommand);","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"                c.execute(taskList, store, ui);","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"        java.nio.file.Path filepath \u003d java.nio.file.Paths.get(\"src\",","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"                \"main\", \"java\",\"data\",\"StoredData.txt\");","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"        new Duke(filepath.toString()).run();","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"XXJJXJ":56,"-":4}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package duke;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import duke.commands.AddCommand;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import duke.commands.DoneCommand;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import duke.commands.ExitCommand;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"import duke.exceptions.EmptyDescriptionException;","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"import duke.exceptions.UnknownCommandException;","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":" * This is a Parser class that deals with making sense of the user command.","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"public class Parser {","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"     * Returns a Command instance based on the input String from the user.","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"     * @param command A String representing the command and details keyed in by the user.","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"     * @return  A Command object that when its execute() method is called, make changes to the tasks list or Duke.","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"     * @throws EmptyDescriptionException An exception thrown when no description follows a recognizable command.","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"     * @throws UnknownCommandException  An exception thrown when the command is not recognizable.","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"    public static Command decipher(String command)","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"            throws EmptyDescriptionException, UnknownCommandException {","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"        Scanner s \u003d new Scanner(command);","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"        String commandType \u003d s.next();","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"        switch (commandType) {","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"        case \"list\":","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"        case \"event\":","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"            if (!s.hasNext()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"                throw new EmptyDescriptionException(\"event\");","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"            String eventDetails \u003d s.nextLine().trim();","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"            return new AddCommand(\"event\", eventDetails);","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"            if (!s.hasNext()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"                throw new EmptyDescriptionException(\"deadline\");","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"            String deadlineDetails \u003d s.nextLine().trim();","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"            return new AddCommand(\"deadline\", deadlineDetails);","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"            if (!s.hasNext()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"                throw new EmptyDescriptionException(\"todo\");","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"            String description \u003d s.nextLine().trim();","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"            return new AddCommand(\"todo\", description);","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"            if (!s.hasNext()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"                throw new EmptyDescriptionException(\"delete\");","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"            int indexToDelete \u003d s.nextInt() - 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"            return new DeleteCommand(indexToDelete);","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"        case \"done\":","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"XXJJXJ"},"content":"            if (!s.hasNext()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"XXJJXJ"},"content":"                throw new EmptyDescriptionException(\"done\");","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"XXJJXJ"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"XXJJXJ"},"content":"            int indexToMark \u003d s.nextInt() - 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"XXJJXJ"},"content":"            return new DoneCommand(indexToMark);","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"XXJJXJ"},"content":"        case \"find\":","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"XXJJXJ"},"content":"            if (!s.hasNext()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"XXJJXJ"},"content":"                throw new EmptyDescriptionException(\"find\");","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"XXJJXJ"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"XXJJXJ"},"content":"            String keyword \u003d s.nextLine().trim();","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"XXJJXJ"},"content":"            return new FindCommand(keyword);","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"XXJJXJ"},"content":"        default:","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"XXJJXJ"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":85,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":86,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"XXJJXJ":86}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package duke;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import duke.exceptions.CommandParamException;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import duke.exceptions.DukeFileException;","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"import java.io.File;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":" * This is a Storage class that deals with loading tasks","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":" * from the file and saving tasks in the file.","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"public class Storage {","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"     * This is the private class field of a Storage instance.","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"    private final String filePath;","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"     * This is the constructor for a Storage instance.","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"     * @param filePath   A string representing the filepath in the operating system.","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"     * Returns an Arraylist of Task loaded from the filePath.","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"     * @return An ArrayList of Task that was stored in the file located in the filePath.","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"     * @throws DukeFileException  An exception thrown when there is error reading or creating the file.","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeFileException {","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"            java.nio.file.Path directoryPath \u003d java.nio.file.Paths.get(\"src\", \"main\", \"java\", \"data\");","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"            File f \u003d new File(this.filePath);","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"            if (!Files.isDirectory(directoryPath)) {","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"                //create directory","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"                Files.createDirectories(directoryPath);","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"            if (!f.exists()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"                //create file if it does not exist","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"                f.createNewFile();","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"            ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"                // input received here will definitely be correct and accurate","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"                // either, todo, deadline, delete, event, done","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"                String fullLineOfCommand \u003d s.nextLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"                Scanner lineSplitter \u003d new Scanner(fullLineOfCommand);","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"                String command \u003d lineSplitter.next().trim();","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"                try {","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"                    if (command.equals(\"todo\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"                        String description \u003d lineSplitter.nextLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"                        taskList.add(new ToDo(description.trim()));","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"XXJJXJ"},"content":"                    } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"XXJJXJ"},"content":"                        String description \u003d lineSplitter.nextLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"XXJJXJ"},"content":"                        String[] parts \u003d description.split(\"/by\");","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"XXJJXJ"},"content":"                        taskList.add(new Deadline(parts[0].trim(), parts[1].trim()));","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"XXJJXJ"},"content":"                    } else if (command.equals(\"event\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"XXJJXJ"},"content":"                        String description \u003d lineSplitter.nextLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"XXJJXJ"},"content":"                        String[] parts \u003d description.split(\"/at\");","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"XXJJXJ"},"content":"                        taskList.add(new Event(parts[0].trim(), parts[1].trim()));","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"XXJJXJ"},"content":"                    } else if (command.equals(\"done\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"XXJJXJ"},"content":"                        int indexToMark \u003d lineSplitter.nextInt();","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"XXJJXJ"},"content":"                        taskList.get(indexToMark - 1).markAsDone();","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"XXJJXJ"},"content":"                    } else if (command.equals(\"delete\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"XXJJXJ"},"content":"                        int indexToDelete \u003d lineSplitter.nextInt();","lastModifiedDate":"2021-08-18"},{"lineNumber":85,"author":{"gitId":"XXJJXJ"},"content":"                        taskList.remove(indexToDelete - 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"XXJJXJ"},"content":"                    }","lastModifiedDate":"2021-08-18"},{"lineNumber":88,"author":{"gitId":"XXJJXJ"},"content":"                } catch (CommandParamException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":89,"author":{"gitId":"XXJJXJ"},"content":"                    System.out.println(\"\\tError initiating database.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":90,"author":{"gitId":"XXJJXJ"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":91,"author":{"gitId":"XXJJXJ"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":92,"author":{"gitId":"XXJJXJ"},"content":"            return taskList;","lastModifiedDate":"2021-08-18"},{"lineNumber":93,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"XXJJXJ"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":95,"author":{"gitId":"XXJJXJ"},"content":"            throw new DukeFileException();","lastModifiedDate":"2021-08-19"},{"lineNumber":96,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":97,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":99,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":100,"author":{"gitId":"XXJJXJ"},"content":"     * Appends a line of command into the file located at the filePath.","lastModifiedDate":"2021-08-21"},{"lineNumber":101,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":102,"author":{"gitId":"XXJJXJ"},"content":"     * @param taskCommand A String representing the input given to the Parser to generate a Task.","lastModifiedDate":"2021-08-21"},{"lineNumber":103,"author":{"gitId":"XXJJXJ"},"content":"     * @throws IOException  An exception thrown when FileWriter is unable to find or append to the file at filePath.","lastModifiedDate":"2021-08-21"},{"lineNumber":104,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":105,"author":{"gitId":"XXJJXJ"},"content":"    public void appendCommand(String taskCommand) throws IOException {","lastModifiedDate":"2021-08-18"},{"lineNumber":106,"author":{"gitId":"XXJJXJ"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath, true);","lastModifiedDate":"2021-08-21"},{"lineNumber":107,"author":{"gitId":"XXJJXJ"},"content":"        fw.append(taskCommand + System.lineSeparator());","lastModifiedDate":"2021-08-18"},{"lineNumber":108,"author":{"gitId":"XXJJXJ"},"content":"        fw.close();","lastModifiedDate":"2021-08-18"},{"lineNumber":109,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":110,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":111,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":112,"author":{"gitId":"XXJJXJ"},"content":"     * Overwrites the file located at the filePath with the minimal commands to regenerate the current Task list.","lastModifiedDate":"2021-08-21"},{"lineNumber":113,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":114,"author":{"gitId":"XXJJXJ"},"content":"     * @param taskList An ArrayList of Task to be saved as text in the file located at filePath.","lastModifiedDate":"2021-08-21"},{"lineNumber":115,"author":{"gitId":"XXJJXJ"},"content":"     * @throws IOException An exception thrown when the FileWriter is unable to find or write to the file at filePath.","lastModifiedDate":"2021-08-21"},{"lineNumber":116,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":117,"author":{"gitId":"XXJJXJ"},"content":"    public void safeFile(ArrayList\u003cTask\u003e taskList) throws IOException {","lastModifiedDate":"2021-08-18"},{"lineNumber":118,"author":{"gitId":"XXJJXJ"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2021-08-21"},{"lineNumber":119,"author":{"gitId":"XXJJXJ"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-18"},{"lineNumber":120,"author":{"gitId":"XXJJXJ"},"content":"            Task t \u003d taskList.get(i);","lastModifiedDate":"2021-08-18"},{"lineNumber":121,"author":{"gitId":"XXJJXJ"},"content":"            fw.append(t.fullCommand() + System.lineSeparator());","lastModifiedDate":"2021-08-18"},{"lineNumber":122,"author":{"gitId":"XXJJXJ"},"content":"            if (t.isDone()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":123,"author":{"gitId":"XXJJXJ"},"content":"                int index \u003d i + 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":124,"author":{"gitId":"XXJJXJ"},"content":"                fw.append(\"done \" + index + System.lineSeparator());","lastModifiedDate":"2021-08-18"},{"lineNumber":125,"author":{"gitId":"XXJJXJ"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":126,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":127,"author":{"gitId":"XXJJXJ"},"content":"        fw.close();","lastModifiedDate":"2021-08-18"},{"lineNumber":128,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":129,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":130,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"XXJJXJ":130}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package duke;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import duke.exceptions.DukeFileException;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import duke.exceptions.EmptyListException;","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import duke.exceptions.TaskIsCompleteException;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import duke.exceptions.TaskNotFoundException;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":" * This is a TaskList class that contains the task list.","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"public class TaskList {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"     * This is the private class fields of a TaskList instance.","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"     * Constructors of TaskList.","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"     * Adds a task to the current ArrayList of task.","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"     * @param t A task that is created by the user.","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"    public void addToList(Task t) {","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"        tasks.add(t);","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"     * Prints out the contents of all the tasks in the ArrayList of task.","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"     * @param ui","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"     * @throws EmptyListException","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"    public void printTasks(Ui ui) throws EmptyListException {","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"        if (this.tasks.size() \u003c\u003d 0) {","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"            throw new EmptyListException();","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"        ui.printList(this.tasks);","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"     * Searches the ArrayList of Task for tasks with the specified keyword and uses an Ui to print it out.","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"     * @param ui An Ui instance that prints the list of task containing the keyword.","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"     * @param keyword A String representing the keyword.","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"     * @throws EmptyListException An exception thrown when the ArrayList of Task is empty.","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"    public void printFindTasks(Ui ui, String keyword) throws EmptyListException, TaskNotFoundException {","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"        if (this.tasks.size() \u003c\u003d 0) {","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"            throw new EmptyListException();","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"        ArrayList\u003cTask\u003e listOfTaskWithKeyword \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"XXJJXJ"},"content":"            if (this.tasks.get(i).toString().contains(keyword)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"XXJJXJ"},"content":"                listOfTaskWithKeyword.add(this.tasks.get(i));","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"XXJJXJ"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"XXJJXJ"},"content":"        if (listOfTaskWithKeyword.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"XXJJXJ"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"XXJJXJ"},"content":"        ui.printFindTask(listOfTaskWithKeyword);","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"XXJJXJ"},"content":"     * Saves the current ArrayList of task using a Storage instance.","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"XXJJXJ"},"content":"     * @param store  A Storage instance that helps to save the task list in a text file.","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"XXJJXJ"},"content":"     * @throws DukeFileException An exception thrown when store encounters an error when storing the tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"XXJJXJ"},"content":"    public void safeTasks(Storage store) throws DukeFileException {","lastModifiedDate":"2021-08-19"},{"lineNumber":86,"author":{"gitId":"XXJJXJ"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":87,"author":{"gitId":"XXJJXJ"},"content":"            store.safeFile(this.tasks);","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"XXJJXJ"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"XXJJXJ"},"content":"            throw new DukeFileException();","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":91,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":92,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":93,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"XXJJXJ"},"content":"     * Marks a task in the ArrayList of Task as done.","lastModifiedDate":"2021-08-21"},{"lineNumber":95,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":96,"author":{"gitId":"XXJJXJ"},"content":"     * @param index  An int representing the index of task to be marked.","lastModifiedDate":"2021-08-21"},{"lineNumber":97,"author":{"gitId":"XXJJXJ"},"content":"     * @param store  A Storage instance to save this action into the text file.","lastModifiedDate":"2021-08-21"},{"lineNumber":98,"author":{"gitId":"XXJJXJ"},"content":"     * @param ui     An Ui instance that helps to print out the message of this action to the user.","lastModifiedDate":"2021-08-21"},{"lineNumber":99,"author":{"gitId":"XXJJXJ"},"content":"     * @throws TaskIsCompleteException An exception thrown when the task to be mark is already done.","lastModifiedDate":"2021-08-21"},{"lineNumber":100,"author":{"gitId":"XXJJXJ"},"content":"     * @throws DukeFileException    An exception thrown when the store gets an error from storing the action.","lastModifiedDate":"2021-08-21"},{"lineNumber":101,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":102,"author":{"gitId":"XXJJXJ"},"content":"    public void markTask(int index, Storage store, Ui ui)","lastModifiedDate":"2021-08-19"},{"lineNumber":103,"author":{"gitId":"XXJJXJ"},"content":"            throws TaskIsCompleteException, DukeFileException {","lastModifiedDate":"2021-08-19"},{"lineNumber":104,"author":{"gitId":"XXJJXJ"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":105,"author":{"gitId":"XXJJXJ"},"content":"            Task t \u003d tasks.get(index);","lastModifiedDate":"2021-08-19"},{"lineNumber":106,"author":{"gitId":"XXJJXJ"},"content":"            if (t.isDone()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":107,"author":{"gitId":"XXJJXJ"},"content":"                throw new TaskIsCompleteException(index + 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":108,"author":{"gitId":"XXJJXJ"},"content":"            } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":109,"author":{"gitId":"XXJJXJ"},"content":"                int indexOnList \u003d index + 1;","lastModifiedDate":"2021-08-21"},{"lineNumber":110,"author":{"gitId":"XXJJXJ"},"content":"                store.appendCommand(\"done \" + indexOnList);","lastModifiedDate":"2021-08-21"},{"lineNumber":111,"author":{"gitId":"XXJJXJ"},"content":"                t.markAsDone();","lastModifiedDate":"2021-08-19"},{"lineNumber":112,"author":{"gitId":"XXJJXJ"},"content":"                ui.printMarkTaskDone(t);","lastModifiedDate":"2021-08-19"},{"lineNumber":113,"author":{"gitId":"XXJJXJ"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":114,"author":{"gitId":"XXJJXJ"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":115,"author":{"gitId":"XXJJXJ"},"content":"            throw new DukeFileException();","lastModifiedDate":"2021-08-19"},{"lineNumber":116,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":117,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":118,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":119,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":120,"author":{"gitId":"XXJJXJ"},"content":"     * Deletes a task from the ArrayList of Task.","lastModifiedDate":"2021-08-21"},{"lineNumber":121,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":122,"author":{"gitId":"XXJJXJ"},"content":"     * @param index An int representing the index of the task to be deleted.","lastModifiedDate":"2021-08-21"},{"lineNumber":123,"author":{"gitId":"XXJJXJ"},"content":"     * @param store A Storage instance to save this action into a text file.","lastModifiedDate":"2021-08-21"},{"lineNumber":124,"author":{"gitId":"XXJJXJ"},"content":"     * @param ui    An Ui instance to print the message of this action to the user.","lastModifiedDate":"2021-08-21"},{"lineNumber":125,"author":{"gitId":"XXJJXJ"},"content":"     * @throws DukeFileException  An exception thrown when the store gets an error from storing the action.","lastModifiedDate":"2021-08-21"},{"lineNumber":126,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":127,"author":{"gitId":"XXJJXJ"},"content":"    public void deleteTask(int index, Storage store, Ui ui)","lastModifiedDate":"2021-08-19"},{"lineNumber":128,"author":{"gitId":"XXJJXJ"},"content":"            throws DukeFileException {","lastModifiedDate":"2021-08-19"},{"lineNumber":129,"author":{"gitId":"XXJJXJ"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":130,"author":{"gitId":"XXJJXJ"},"content":"            Task t \u003d tasks.get(index);","lastModifiedDate":"2021-08-19"},{"lineNumber":131,"author":{"gitId":"XXJJXJ"},"content":"            int indexOnList \u003d index + 1;","lastModifiedDate":"2021-08-21"},{"lineNumber":132,"author":{"gitId":"XXJJXJ"},"content":"            store.appendCommand(\"delete \" + indexOnList);","lastModifiedDate":"2021-08-21"},{"lineNumber":133,"author":{"gitId":"XXJJXJ"},"content":"            tasks.remove(index);","lastModifiedDate":"2021-08-19"},{"lineNumber":134,"author":{"gitId":"XXJJXJ"},"content":"            ui.printRemoveTask(t, tasks.size());","lastModifiedDate":"2021-08-19"},{"lineNumber":135,"author":{"gitId":"XXJJXJ"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":136,"author":{"gitId":"XXJJXJ"},"content":"            throw new DukeFileException();","lastModifiedDate":"2021-08-19"},{"lineNumber":137,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":138,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":139,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":140,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":141,"author":{"gitId":"XXJJXJ"},"content":"     * Returns an int representing the number of Task in the list.","lastModifiedDate":"2021-08-21"},{"lineNumber":142,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":143,"author":{"gitId":"XXJJXJ"},"content":"     * @return An int representing the number of Tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":144,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":145,"author":{"gitId":"XXJJXJ"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-19"},{"lineNumber":146,"author":{"gitId":"XXJJXJ"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-19"},{"lineNumber":147,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":148,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":149,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"XXJJXJ":149}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package duke;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":" * This is an Ui class that deals with interaction with Users.","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"public class Ui {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"     * These are class fields and constants of Ui.","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"    private static final String LINE_SEPARATOR \u003d \"    _______________________________\";","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"    private Scanner scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"    public Ui() {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"     * Prints the standard welcome message user sees when initiating duke.","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"        System.out.println(\"Hello I\u0027m FullOfBugs. What can I do for you?\");","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"     * Prints the standard line separator for each message.","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"    public void printLine() {","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"     * Prints the error message from DukeExceptions.","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"     * @param message A String representing the message to be printed.","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"    public void showError(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"        printLine();","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"        System.out.printf(\"    %s\\n\", message);","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"        printLine();","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"     * Prints the message when a task is added to the list.","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"     * @param task  A Task instance that contains details of the newly added task and to be printed.","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"     * @param newSize An int representing the new size of the Task list.","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"    public void printAddTask(Task task, int newSize) {","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"        printLine();","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"        System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"        System.out.printf(\"      %s\\n\", task);","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"        System.out.printf(\"    Now you have %d \", newSize);","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"        System.out.println((newSize \u003c\u003d 1 ? \"task\" : \"tasks\") + \" in the list.\");","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"        printLine();","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"     * Prints the message when a task is removed from the list.","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"XXJJXJ"},"content":"     * @param task  A Task instance that contains the details of the removed task.","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"XXJJXJ"},"content":"     * @param remainingSize An int representing the newly updated size of task list.","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"XXJJXJ"},"content":"    public void printRemoveTask(Task task, int remainingSize) {","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"XXJJXJ"},"content":"        printLine();","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"XXJJXJ"},"content":"        System.out.println(\"    Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"XXJJXJ"},"content":"        System.out.printf(\"      %s\\n\", task);","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"XXJJXJ"},"content":"        System.out.printf(\"    Now you have %d \", remainingSize);","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"XXJJXJ"},"content":"        System.out.println((remainingSize \u003c\u003d 1 ? \"task\" : \"tasks\") + \" in the list.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"XXJJXJ"},"content":"        printLine();","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"XXJJXJ"},"content":"     * Prints the message when a task is marked as done.","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"XXJJXJ"},"content":"     * @param task A Task instance that contains details of the task marked as done.","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"XXJJXJ"},"content":"    public void printMarkTaskDone(Task task) {","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"XXJJXJ"},"content":"        printLine();","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"XXJJXJ"},"content":"        System.out.println(\"    Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"XXJJXJ"},"content":"        System.out.printf(\"    %s\\n\", task);","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"XXJJXJ"},"content":"        printLine();","lastModifiedDate":"2021-08-19"},{"lineNumber":91,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":92,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":93,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"XXJJXJ"},"content":"     * Prints a list of all the task currently in the list.","lastModifiedDate":"2021-08-21"},{"lineNumber":95,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":96,"author":{"gitId":"XXJJXJ"},"content":"     * @param tasks A TaskList instance containing a list of task.","lastModifiedDate":"2021-08-21"},{"lineNumber":97,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":98,"author":{"gitId":"XXJJXJ"},"content":"    public void printList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-19"},{"lineNumber":99,"author":{"gitId":"XXJJXJ"},"content":"        printLine();","lastModifiedDate":"2021-08-19"},{"lineNumber":100,"author":{"gitId":"XXJJXJ"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-19"},{"lineNumber":101,"author":{"gitId":"XXJJXJ"},"content":"            System.out.printf(\"    %d. %s\\n\", i + 1, tasks.get(i));","lastModifiedDate":"2021-08-21"},{"lineNumber":102,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":103,"author":{"gitId":"XXJJXJ"},"content":"        printLine();","lastModifiedDate":"2021-08-19"},{"lineNumber":104,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":105,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":106,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":107,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":108,"author":{"gitId":"XXJJXJ"},"content":"     * Prints a list of task that contains a specified keyword.","lastModifiedDate":"2021-08-22"},{"lineNumber":109,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":110,"author":{"gitId":"XXJJXJ"},"content":"     * @param tasks  An ArrayList of task that contains the keyword in its description.","lastModifiedDate":"2021-08-22"},{"lineNumber":111,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":112,"author":{"gitId":"XXJJXJ"},"content":"    public void printFindTask(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-22"},{"lineNumber":113,"author":{"gitId":"XXJJXJ"},"content":"        printLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":114,"author":{"gitId":"XXJJXJ"},"content":"        System.out.println(\"    Here are the matching tasks in your list:\");","lastModifiedDate":"2021-08-22"},{"lineNumber":115,"author":{"gitId":"XXJJXJ"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":116,"author":{"gitId":"XXJJXJ"},"content":"            System.out.printf(\"    %d. %s\\n\", i + 1, tasks.get(i));","lastModifiedDate":"2021-08-22"},{"lineNumber":117,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":118,"author":{"gitId":"XXJJXJ"},"content":"        printLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":119,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":121,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":122,"author":{"gitId":"XXJJXJ"},"content":"     * Prints the farewell message when the user says bye to Duke.","lastModifiedDate":"2021-08-21"},{"lineNumber":123,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":124,"author":{"gitId":"XXJJXJ"},"content":"    public void bidFarewell() {","lastModifiedDate":"2021-08-19"},{"lineNumber":125,"author":{"gitId":"XXJJXJ"},"content":"        printLine();","lastModifiedDate":"2021-08-19"},{"lineNumber":126,"author":{"gitId":"XXJJXJ"},"content":"        System.out.println(\"    Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-21"},{"lineNumber":127,"author":{"gitId":"XXJJXJ"},"content":"        printLine();","lastModifiedDate":"2021-08-19"},{"lineNumber":128,"author":{"gitId":"XXJJXJ"},"content":"        this.scanner.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":130,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":131,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":132,"author":{"gitId":"XXJJXJ"},"content":"     * Returns a string representing the command keyed in by the user.","lastModifiedDate":"2021-08-21"},{"lineNumber":133,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":134,"author":{"gitId":"XXJJXJ"},"content":"     * @return A String representing a single command.","lastModifiedDate":"2021-08-21"},{"lineNumber":135,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":136,"author":{"gitId":"XXJJXJ"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-19"},{"lineNumber":137,"author":{"gitId":"XXJJXJ"},"content":"        String command \u003d this.scanner.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"XXJJXJ"},"content":"        return command;","lastModifiedDate":"2021-08-19"},{"lineNumber":139,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":140,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":141,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"XXJJXJ":141}},{"path":"src/main/java/duke/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package duke.commands;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import duke.exceptions.CommandParamException;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import duke.exceptions.DukeFileException;","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import duke.exceptions.EmptyDescriptionException;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import duke.exceptions.UnknownCommandException;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":" * This is an AddCommand class that extends Command.","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"     * This is the constructor for AddCommand.","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"     * @param taskType A String representing the task to be created.","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"     * @param description A String containing the details of the task to be created.","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"    public AddCommand(String taskType, String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"        super(taskType, description);","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"    public void execute(TaskList taskList, Storage store, Ui ui)","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"            throws CommandParamException, DukeFileException, EmptyDescriptionException, UnknownCommandException {","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"            Task task;","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"            if (this.command.equals(\"todo\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"                if (description.trim().equals(\"\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"                    throw new EmptyDescriptionException(\"todo\");","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"                task \u003d new ToDo(this.description);","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"            } else if (this.command.equals(\"deadline\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"                if (description.equals(\"\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"                    throw new EmptyDescriptionException(\"deadline\");","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"                if (description.contains(\"/by\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"                    String[] parts \u003d description.split(\"/by\");","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"                    if (parts.length \u003c 2 || parts[0].trim().equals(\"\") || parts[1].trim().equals(\"\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"                        throw new CommandParamException(\"deadline\");","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"                    task \u003d new Deadline(parts[0].trim(), parts[1].trim());","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"                } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"                    throw new CommandParamException(\"deadline\");","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"            } else if (this.command.equals(\"event\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"                if (description.equals(\"\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"                    throw new EmptyDescriptionException(\"event\");","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"                if (description.contains(\"/at\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"                    String[] parts \u003d description.split(\"/at\");","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"                    if (parts.length \u003c 2 || parts[0].trim().equals(\"\") || parts[1].trim().equals(\"\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"                        throw new CommandParamException(\"event\");","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"                    task \u003d new Event(parts[0].trim(), parts[1].trim());","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"                } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"                    throw new CommandParamException(\"event\");","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"XXJJXJ"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"XXJJXJ"},"content":"            } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"XXJJXJ"},"content":"                throw new UnknownCommandException();","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"XXJJXJ"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"XXJJXJ"},"content":"            taskList.addToList(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"XXJJXJ"},"content":"            store.appendCommand(task.fullCommand());","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"XXJJXJ"},"content":"            ui.printAddTask(task, taskList.getSize());","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"XXJJXJ"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"XXJJXJ"},"content":"            throw new DukeFileException();","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":84,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":85,"author":{"gitId":"XXJJXJ"},"content":"    public String toString() {","lastModifiedDate":"2021-08-20"},{"lineNumber":86,"author":{"gitId":"XXJJXJ"},"content":"        return this.command + \" \" + this.description;","lastModifiedDate":"2021-08-20"},{"lineNumber":87,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":88,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"XXJJXJ":88}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package duke.commands;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":" * This is an abstract Command class.","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"     * These are class fields of a Command instance.","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"    protected final String command;","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"    protected final Boolean isExit;","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"    protected final String description;","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"    protected int index;","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"     * This is the constructor for a Command instance.","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"     * @param command A String representing the type of command created.","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"    protected Command(String command) {","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"        this.description \u003d \"\";","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"        if (command.equals(\"bye\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"            this.isExit \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"            this.isExit \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"     * This is the overloaded constructor for Command instance.","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"     * @param command A String representing the type of command created.","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"     * @param description A String representing the details of the command.","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"    protected Command(String command, String description) {","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"     * This is an overloaded constructor for Command instance.","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"     * @param command A String representing the type of command.","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"     * @param index  An int representing an index of the task list.","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"    protected Command(String command, int index) {","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"        this.description \u003d \"\";","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"     * This is an abstract method that runs the action as specified by the command.","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"     * @param taskList  A TaskList instance that may store or remove task (if any) by command.","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"     * @param store  A Storage instance that records the task list after executing the command.","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"     * @param ui  An Ui instance that prints the message generated from the action specified by the command.","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"     * @throws DukeException An Exception thrown if Duke gets an Error","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"XXJJXJ"},"content":"    public abstract void execute(TaskList taskList, Storage store, Ui ui)","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"XXJJXJ"},"content":"            throws DukeException;","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"XXJJXJ"},"content":"     * Returns a boolean indicating if user is exiting Duke.","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"XXJJXJ"},"content":"     * @return A boolean representing if the user is exiting Duke.","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"XXJJXJ"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"XXJJXJ"},"content":"        return this.isExit;","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"XXJJXJ"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"XXJJXJ"},"content":"        if (!(o instanceof Command)) {","lastModifiedDate":"2021-08-19"},{"lineNumber":85,"author":{"gitId":"XXJJXJ"},"content":"            return false;","lastModifiedDate":"2021-08-19"},{"lineNumber":86,"author":{"gitId":"XXJJXJ"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":87,"author":{"gitId":"XXJJXJ"},"content":"            Command other \u003d (Command) o;","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"XXJJXJ"},"content":"            return this.command.equals(other.command)","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"XXJJXJ"},"content":"                    \u0026\u0026 this.description.equals(other.description)","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"XXJJXJ"},"content":"                    \u0026\u0026 (this.index \u003d\u003d other.index);","lastModifiedDate":"2021-08-19"},{"lineNumber":91,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":92,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":93,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"XXJJXJ":93}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package duke.commands;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import duke.exceptions.DukeFileException;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import duke.exceptions.TaskNotFoundException;","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":" * This is a DeleteCommand class that extends Command.","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"     * This is the constructor of a DeleteCommand.","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"     * @param index An int representing the index of task to be deleted.","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"        super(\"delete\", index);","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"    public void execute(TaskList taskList, Storage store, Ui ui)","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"            throws DukeFileException, TaskNotFoundException {","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"        if (taskList.getSize() - 1 \u003e\u003d this.index \u0026\u0026 this.index \u003e\u003d 0) {","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"            taskList.deleteTask(this.index, store, ui);","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"            throw new TaskNotFoundException(this.index + 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"    public String toString() {","lastModifiedDate":"2021-08-20"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"        return this.command + \" \" + (this.index + 1);","lastModifiedDate":"2021-08-20"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"XXJJXJ":37}},{"path":"src/main/java/duke/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package duke.commands;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import duke.exceptions.DukeFileException;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import duke.exceptions.TaskIsCompleteException;","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import duke.exceptions.TaskNotFoundException;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":" * This is a DoneCommand class that extends Command.","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"     * This is the constructor of a DoneCommand.","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"     * @param index An int representing the index of task to be marked done.","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"    public DoneCommand(int index) {","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"        super(\"done\", index);","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"    public void execute(TaskList taskList, Storage store, Ui ui)","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"            throws DukeFileException, TaskIsCompleteException, TaskNotFoundException {","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"        if (taskList.getSize() - 1 \u003e\u003d this.index \u0026\u0026 this.index \u003e\u003d 0) {","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"            taskList.markTask(this.index, store, ui);","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"            throw new TaskNotFoundException(this.index + 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"    public String toString() {","lastModifiedDate":"2021-08-20"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"        return this.command + \" \" + (this.index + 1);","lastModifiedDate":"2021-08-20"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"XXJJXJ":38}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package duke.commands;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import duke.exceptions.DukeFileException;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":" * This is an ExitCommand class that extends Command.","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"     * This is an ExitCommand Constructor.","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"    public ExitCommand() {","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"        super(\"bye\");","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"    public void execute(TaskList taskList, Storage store, Ui ui) throws DukeFileException {","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"        taskList.safeTasks(store);","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"        ui.bidFarewell();","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"    public String toString() {","lastModifiedDate":"2021-08-20"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"        return this.command;","lastModifiedDate":"2021-08-20"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"XXJJXJ":30}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package duke.commands;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import duke.exceptions.EmptyListException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import duke.exceptions.TaskNotFoundException;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":" * This is a FindCommand class that extends Command","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"     * This is the class field of a FindCommand","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"    private final String keyword;","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"     * This is the FindCommand constructor.","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"        super(\"find\");","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"    public void execute(TaskList taskList, Storage store, Ui ui) throws EmptyListException, TaskNotFoundException {","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"        taskList.printFindTasks(ui, this.keyword);","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"XXJJXJ":31}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package duke.commands;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import duke.exceptions.EmptyListException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":" * This is a ListCommand class that extends Command.","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"     * This is a ListCommand Constructor","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"    public ListCommand() {","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"        super(\"list\");","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"    public void execute(TaskList taskList, Storage store, Ui ui) throws EmptyListException {","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"        taskList.printTasks(ui);","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"    public String toString() {","lastModifiedDate":"2021-08-20"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"        return this.command;","lastModifiedDate":"2021-08-20"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"XXJJXJ":29}},{"path":"src/main/java/duke/exceptions/CommandParamException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":" * This is a CommandParamException that extends DukeException.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":" * This exception is thrown when unfitting parameters to a command is provided.","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"public class CommandParamException extends DukeException {","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"     * This is the class field of a CommandParamException instance.","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"    private final String command;","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"     * This is a CommandParamException Constructor.","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"     * @param command","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"    public CommandParamException(String command) {","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"        super(\"\");","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"        return String.format(\"☹ OOPS! I don\u0027t think your %s is keyed in correctly.☹\", this.command);","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"XXJJXJ":27}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":" * This is a DukeException class that is thrown when Duke encounters an error.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"     * This is a DukeException constructor.","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"     * @param description","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"    public DukeException(String description) {","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"XXJJXJ":16}},{"path":"src/main/java/duke/exceptions/DukeFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":" * This is a DukeFileException class that extends DukeException.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":" * This exception is thrown when Duke gets an error when trying to access or write to a file.","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"public class DukeFileException extends DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"     * This is a DukeFileException constructor.","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"    public DukeFileException() {","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"        super(\"☹ OOPS!!! Error loading file!!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"XXJJXJ":16}},{"path":"src/main/java/duke/exceptions/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":" * This is an EmptyDescriptionException that extends DukeException.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":" * This exception is thrown when a Command is provided without descriptions.","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"public class EmptyDescriptionException extends DukeException {","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"     * This is the class field of EmptyDescriptionException instance.","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"    private final String command;","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"     * This is a EmptyDescriptionException Contructor.","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"     * @param command A String representing the command provided but without description.","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"    public EmptyDescriptionException(String command) {","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"        super(\"\");","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"        return String.format(\"☹ OOPS!!! The description of %s cannot be empty.\", this.command);","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"XXJJXJ":28}},{"path":"src/main/java/duke/exceptions/EmptyListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":" * This is an EmptyListException class that extends DukeException.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":" * This exception is thrown when the user wants to see the list when it is empty.","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"public class EmptyListException extends DukeException {","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"     * This is the EmptyListException constructor.","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"    public EmptyListException() {","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"        super(\"☹ Sorry! The list is empty! ☹\");","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"XXJJXJ":16}},{"path":"src/main/java/duke/exceptions/TaskIsCompleteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":" * This is a TaskIsCompleteException that extends DukeException.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":" * This exception is thrown when the user attempts to mark an already complete task as done.","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"public class TaskIsCompleteException extends DukeException {","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"     * This is the class field of TaskIsCompleteException.","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"    private final int index;","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"     * This is the TaskIsCompleteException constructor.","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"     * @param indexToMark An index representing the index of an already complete task.","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"    public TaskIsCompleteException(int indexToMark) {","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"        super(\"\");","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"        this.index \u003d indexToMark;","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"        return String.format(\"☹ OOPS! I think you have already completed task %d !☹\", this.index);","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"XXJJXJ":30}},{"path":"src/main/java/duke/exceptions/TaskNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":" * This is a TaskNotFoundException that extends DukeException.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":" * This exception is thrown when the task at specified index is not found.","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"public class TaskNotFoundException extends DukeException {","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"     * This is the class field of TaskNotFoundException.","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"    private final int index;","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"    private final boolean hasIndex;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"     * This is the TaskNotFoundException constructor.","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"     * @param index An index representing the task the user attempts to find, but does not exist.","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"    public TaskNotFoundException(int index) {","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"        super(\"☹ OOPS!!! There is no such task!\");","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"        this.hasIndex \u003d true;","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"     * This is an Overloaded TaskNotFoundException for no index specified.","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"    public TaskNotFoundException() {","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"        super(\"☹ OOPS!!! There is no such task!\");","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"        this.index \u003d 0;","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"        this.hasIndex \u003d false;","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"        if (this.hasIndex) {","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"            return super.getMessage()","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"                    + String.format(\"\\n    I can\u0027t seem to find the task at number %d !\", this.index);","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"            return super.getMessage();","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"XXJJXJ":45}},{"path":"src/main/java/duke/exceptions/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":" * This is an UnknownCommandException that extends DukeException.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":" * This exception is thrown when the user keys in random unrecognized commands.","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"public class UnknownCommandException extends DukeException {","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"     * This is the UnknownCommandException constructor.","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what you mean ☹\");","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"XXJJXJ":16}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package duke.task;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import duke.exceptions.CommandParamException;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":" * This is a Deadline class that extends Task.","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"     * These are class field of Deadline.","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"    protected LocalTime time;","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"     * This is a Deadline Constructor.","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"     * @param description A String representing the description of the deadline.","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"     * @param by A String representing the date and time of deadline.","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"     * @throws CommandParamException An exception thrown when the date and time is not formatted properly.","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"    public Deadline(String description, String by) throws CommandParamException {","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"        String[] dateTime \u003d by.trim().split(\" \");","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"        //index 0 is date, 1 is time","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"        //date should be yyyy-mm-dd, time should be 2359...","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"        if (dateTime.length \u003c\u003d 1 || dateTime.length \u003e 2) {","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"            throw new CommandParamException(\"deadline\");","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"            if (dateTime[1].length() \u003c 4) {","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"                throw new CommandParamException(\"deadline\");","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"            String timeReformatted \u003d dateTime[1].substring(0, 2) + \":\" + dateTime[1].substring(2, 4);","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"            LocalDate date \u003d LocalDate.parse(dateTime[0].trim());","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"            LocalTime time \u003d LocalTime.parse(timeReformatted);","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"            this.date \u003d date;","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"            this.time \u003d time;","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"            throw new CommandParamException(\"deadline\");","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"    public String fullCommand() {","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"        return \"deadline \" + this.description + \" /by \"","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"                + this.date.toString()","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"                + \" \"","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"                + this.time.format(DateTimeFormatter.ofPattern(\"kkmm\"));","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"                + this.date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"                + \" \"","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"                + this.time.format(DateTimeFormatter.ofPattern((\"h:mma\")))","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"                + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"XXJJXJ"},"content":"        if (super.equals(o)) {","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"XXJJXJ"},"content":"            if (!(o instanceof Deadline)) {","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"XXJJXJ"},"content":"                return false;","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"XXJJXJ"},"content":"            } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"XXJJXJ"},"content":"                Deadline other \u003d (Deadline) o;","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"XXJJXJ"},"content":"                return other.date.equals(this.date) \u0026\u0026 other.time.equals(this.time);","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"XXJJXJ"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"XXJJXJ"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"XXJJXJ"},"content":"            return false;","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"XXJJXJ":80}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package duke.task;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import duke.exceptions.CommandParamException;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":" * This is an Event class that extends Task.","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"     * These are class field of Event.","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"    protected LocalTime time;","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"     * This is a Event constructor.","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"     * @param description A String representing the description of the event.","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"     * @param at A String representing the date and time of the event.","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"     * @throws CommandParamException An exception thrown when the date and time is not formatted properly.","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"    public Event(String description, String at) throws CommandParamException {","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"        String[] dateTime \u003d at.trim().split(\" \");","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"        //index 0 is date, 1 is time","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"        //date should be yyyy-mm-dd, time should be 2359 format","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"        if (dateTime.length \u003c\u003d 1 || dateTime.length \u003e 2) {","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"            throw new CommandParamException(\"event\");","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"            if (dateTime[1].length() \u003c 4) {","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"                throw new CommandParamException(\"event\");","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"            String timeReformatted \u003d dateTime[1].substring(0, 2) + \":\" + dateTime[1].substring(2, 4);","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"            LocalDate date \u003d LocalDate.parse(dateTime[0].trim());","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"            LocalTime time \u003d LocalTime.parse(timeReformatted);","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"            this.date \u003d date;","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"            this.time \u003d time;","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"            throw new CommandParamException(\"event\");","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"    public String fullCommand() {","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"        return \"event \" + this.description + \" /at \"","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"                + this.date.toString()","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"                + \" \"","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"                + this.time.format(DateTimeFormatter.ofPattern(\"kkmm\"));","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"        return \"[E]\" + super.toString() + \" (at: \"","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"                + this.date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"                + \" \"","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"                + this.time.format(DateTimeFormatter.ofPattern(\"h:mma\"))","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"                + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"XXJJXJ"},"content":"        if (super.equals(o)) {","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"XXJJXJ"},"content":"            if (!(o instanceof Event)) {","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"XXJJXJ"},"content":"                return false;","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"XXJJXJ"},"content":"            } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"XXJJXJ"},"content":"                Event other \u003d (Event) o;","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"XXJJXJ"},"content":"                return other.date.equals(this.date) \u0026\u0026 other.time.equals(this.time);","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"XXJJXJ"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"XXJJXJ"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"XXJJXJ"},"content":"            return false;","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"XXJJXJ":80}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package duke.task;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":" * This is a Task Class that represent the Task user keys into Duke.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"     * These are class field of a Task.","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"    protected String description;","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"     * This is a Task Constructor.","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"     * @param description A String representing description of task.","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"     * Returns \"X\" when a task is done and \" \" when it is not done.","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"     * @return A String representing the completion status of a Task.","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"     * Marks the task as done.","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"     * Returns a boolean indicating if the task is done.","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"     * @return A boolean representing the completion status of the task","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"        return this.isDone;","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"     * Returns the full command required to create this task.","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"     * @return A String representing the command that created this task.","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"    public abstract String fullCommand();","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), description);","lastModifiedDate":"2021-08-14"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"        if (!(o instanceof Task)) {","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"            return false;","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"            Task other \u003d (Task) o;","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"            return this.description.equals(other.description) \u0026\u0026 (isDone \u003d\u003d other.isDone);","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-08-14"},{"lineNumber":71,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"XXJJXJ":71}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package duke.task;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":" * This is a ToDo class that extends Task.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"     * This is a ToDo Constructor.","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"     * @param description A String representing the details of the ToDo task.","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"    public String fullCommand() {","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"        return \"todo \" + this.description;","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"XXJJXJ":26}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package duke;","lastModifiedDate":"2021-08-20"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import duke.commands.AddCommand;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import duke.commands.DoneCommand;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import duke.commands.ExitCommand;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"import duke.exceptions.EmptyDescriptionException;","lastModifiedDate":"2021-08-20"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"import duke.exceptions.UnknownCommandException;","lastModifiedDate":"2021-08-20"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-20"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-20"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-20"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-20"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-08-20"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"    public void addCommandTest_todo_sameResult()","lastModifiedDate":"2021-08-20"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"            throws EmptyDescriptionException, UnknownCommandException {","lastModifiedDate":"2021-08-20"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(new AddCommand(\"todo\", \"go jogging\"),","lastModifiedDate":"2021-08-20"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"                Parser.decipher(\"todo go jogging\"));","lastModifiedDate":"2021-08-20"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-08-20"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"    public void addCommandTest_todo_emptyDescriptionExceptionThrown() {","lastModifiedDate":"2021-08-20"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"        try {","lastModifiedDate":"2021-08-20"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"            assertEquals(new AddCommand(\"todo\", \"qwe\"), Parser.decipher(\"todo\"));","lastModifiedDate":"2021-08-20"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"            fail();","lastModifiedDate":"2021-08-20"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-20"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"            assertEquals(new EmptyDescriptionException(\"todo\").getMessage(), e.getMessage());","lastModifiedDate":"2021-08-20"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-08-20"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"    public void addCommandTest_deadline_sameResult()","lastModifiedDate":"2021-08-20"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"            throws EmptyDescriptionException, UnknownCommandException {","lastModifiedDate":"2021-08-20"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(new AddCommand(\"deadline\", \"go jogging /by 2021-08-21 2359\"),","lastModifiedDate":"2021-08-20"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"                Parser.decipher(\"deadline go jogging /by 2021-08-21 2359\"));","lastModifiedDate":"2021-08-20"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-08-20"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"    public void addCommandTest_deadline_emptyDescriptionExceptionThrown() {","lastModifiedDate":"2021-08-20"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"        try {","lastModifiedDate":"2021-08-20"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"            assertEquals(new AddCommand(\"deadline\", \"\"), Parser.decipher(\"deadline\"));","lastModifiedDate":"2021-08-20"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"            fail();","lastModifiedDate":"2021-08-20"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-20"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"            assertEquals(new EmptyDescriptionException(\"deadline\").getMessage(), e.getMessage());","lastModifiedDate":"2021-08-20"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-08-20"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"    public void addCommandTest_event_sameResult()","lastModifiedDate":"2021-08-20"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"            throws EmptyDescriptionException, UnknownCommandException {","lastModifiedDate":"2021-08-20"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(new AddCommand(\"event\", \"go jogging /at 2021-08-21 2359\"),","lastModifiedDate":"2021-08-20"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"                Parser.decipher(\"event go jogging /at 2021-08-21 2359\"));","lastModifiedDate":"2021-08-20"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-08-20"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"    public void addCommandTest_event_emptyDescriptionExceptionThrown() {","lastModifiedDate":"2021-08-20"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"        try {","lastModifiedDate":"2021-08-20"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"            assertEquals(new AddCommand(\"event\", \"\"), Parser.decipher(\"event\"));","lastModifiedDate":"2021-08-20"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"            fail();","lastModifiedDate":"2021-08-20"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-20"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"            assertEquals(new EmptyDescriptionException(\"event\").getMessage(), e.getMessage());","lastModifiedDate":"2021-08-20"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":69,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":70,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":71,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-08-20"},{"lineNumber":72,"author":{"gitId":"XXJJXJ"},"content":"    public void deleteCommandTest_sameResult()","lastModifiedDate":"2021-08-20"},{"lineNumber":73,"author":{"gitId":"XXJJXJ"},"content":"            throws EmptyDescriptionException, UnknownCommandException {","lastModifiedDate":"2021-08-20"},{"lineNumber":74,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(new DeleteCommand(0), Parser.decipher(\"delete 1\"));","lastModifiedDate":"2021-08-20"},{"lineNumber":75,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(new DeleteCommand(1), Parser.decipher(\"delete 2\"));","lastModifiedDate":"2021-08-20"},{"lineNumber":76,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(new DeleteCommand(2), Parser.decipher(\"delete 3\"));","lastModifiedDate":"2021-08-20"},{"lineNumber":77,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":78,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":79,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"XXJJXJ"},"content":"    public void deleteCommandTest_emptyDescriptionExceptionThrown() {","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"XXJJXJ"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"XXJJXJ"},"content":"            assertEquals(new DeleteCommand(123), Parser.decipher(\"delete\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"XXJJXJ"},"content":"            fail();","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"XXJJXJ"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"XXJJXJ"},"content":"            assertEquals(new EmptyDescriptionException(\"delete\").getMessage(), e.getMessage());","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-08-20"},{"lineNumber":90,"author":{"gitId":"XXJJXJ"},"content":"    public void doneCommandTest_sameResult()","lastModifiedDate":"2021-08-20"},{"lineNumber":91,"author":{"gitId":"XXJJXJ"},"content":"            throws EmptyDescriptionException, UnknownCommandException {","lastModifiedDate":"2021-08-20"},{"lineNumber":92,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(new DoneCommand(0), Parser.decipher(\"done 1\"));","lastModifiedDate":"2021-08-20"},{"lineNumber":93,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(new DoneCommand(1), Parser.decipher(\"done 2\"));","lastModifiedDate":"2021-08-20"},{"lineNumber":94,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(new DoneCommand(2), Parser.decipher(\"done 3\"));","lastModifiedDate":"2021-08-20"},{"lineNumber":95,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":96,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":97,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":98,"author":{"gitId":"XXJJXJ"},"content":"    public void doneCommandTest_emptyDescriptionExceptionThrown() {","lastModifiedDate":"2021-08-21"},{"lineNumber":99,"author":{"gitId":"XXJJXJ"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":100,"author":{"gitId":"XXJJXJ"},"content":"            assertEquals(new DoneCommand(123), Parser.decipher(\"done\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":101,"author":{"gitId":"XXJJXJ"},"content":"            fail();","lastModifiedDate":"2021-08-21"},{"lineNumber":102,"author":{"gitId":"XXJJXJ"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":103,"author":{"gitId":"XXJJXJ"},"content":"            assertEquals(new EmptyDescriptionException(\"done\").getMessage(), e.getMessage());","lastModifiedDate":"2021-08-21"},{"lineNumber":104,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":105,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":106,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":107,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-08-20"},{"lineNumber":108,"author":{"gitId":"XXJJXJ"},"content":"    public void exitCommandTest_sameResult()","lastModifiedDate":"2021-08-20"},{"lineNumber":109,"author":{"gitId":"XXJJXJ"},"content":"            throws EmptyDescriptionException, UnknownCommandException {","lastModifiedDate":"2021-08-20"},{"lineNumber":110,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(new ExitCommand(), Parser.decipher(\"bye\"));","lastModifiedDate":"2021-08-20"},{"lineNumber":111,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":112,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":113,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-08-20"},{"lineNumber":114,"author":{"gitId":"XXJJXJ"},"content":"    public void listCommandTest_sameResult()","lastModifiedDate":"2021-08-20"},{"lineNumber":115,"author":{"gitId":"XXJJXJ"},"content":"            throws EmptyDescriptionException, UnknownCommandException {","lastModifiedDate":"2021-08-20"},{"lineNumber":116,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(new ListCommand(), Parser.decipher(\"list\"));","lastModifiedDate":"2021-08-20"},{"lineNumber":117,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":118,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":119,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":120,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"XXJJXJ":120}},{"path":"src/test/java/duke/commands/CommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package duke.commands;","lastModifiedDate":"2021-08-20"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"public class CommandTest {","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"    public void addCommandTest_todo_sameResult() {","lastModifiedDate":"2021-08-20"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(\"todo go home\",","lastModifiedDate":"2021-08-20"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"                new AddCommand(\"todo\", \"go home\").toString());","lastModifiedDate":"2021-08-20"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-08-20"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"    public void addCommandTest_deadline_sameResult() {","lastModifiedDate":"2021-08-20"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(\"deadline go home /by 2021-08-21 2359\",","lastModifiedDate":"2021-08-20"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"                new AddCommand(\"deadline\", \"go home /by 2021-08-21 2359\").toString());","lastModifiedDate":"2021-08-20"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-08-20"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"    public void addCommandTest_event_sameResult() {","lastModifiedDate":"2021-08-20"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(\"event go home /at 2021-08-21 2359\",","lastModifiedDate":"2021-08-20"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"                new AddCommand(\"event\", \"go home /at 2021-08-21 2359\").toString());","lastModifiedDate":"2021-08-20"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-08-20"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"    public void deleteCommandTest_sameResult() {","lastModifiedDate":"2021-08-20"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(\"delete 1\", new DeleteCommand(0).toString());","lastModifiedDate":"2021-08-20"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-08-20"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"    public void doneCommandTest_sameResult() {","lastModifiedDate":"2021-08-20"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(\"done 1\", new DoneCommand(0).toString());","lastModifiedDate":"2021-08-20"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-08-20"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"    public void exitCommand_sameResult() {","lastModifiedDate":"2021-08-20"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(\"bye\", new ExitCommand().toString());","lastModifiedDate":"2021-08-20"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-08-20"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"    public void listCommand_sameResult() {","lastModifiedDate":"2021-08-20"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(\"list\", new ListCommand().toString());","lastModifiedDate":"2021-08-20"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"XXJJXJ":45}},{"path":"src/test/java/duke/exceptions/DukeExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":" * This class test the construction of DukeExceptions.","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"public class DukeExceptionTest {","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"    public void commandParamException_deadline_sameMessage() {","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"        CommandParamException e \u003d new CommandParamException(\"deadline\");","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(\"☹ OOPS! I don\u0027t think your deadline is keyed in correctly.☹\", e.getMessage());","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"    public void commandParamException_event_sameMessage() {","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"        CommandParamException e \u003d new CommandParamException(\"event\");","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(\"☹ OOPS! I don\u0027t think your event is keyed in correctly.☹\", e.getMessage());","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"    public void dukeFileException_sameMessage() {","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"        DukeFileException e \u003d new DukeFileException();","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(\"☹ OOPS!!! Error loading file!!\", e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"    public void emptyDescriptionException_todo_sameMessage() {","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"        EmptyDescriptionException e \u003d new EmptyDescriptionException(\"todo\");","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(\"☹ OOPS!!! The description of todo cannot be empty.\", e.getMessage());","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"    public void emptyDescriptionException_deadline_sameMessage() {","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"        EmptyDescriptionException e \u003d new EmptyDescriptionException(\"deadline\");","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(\"☹ OOPS!!! The description of deadline cannot be empty.\", e.getMessage());","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"    public void emptyDescriptionException_event_sameMessage() {","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"        EmptyDescriptionException e \u003d new EmptyDescriptionException(\"event\");","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(\"☹ OOPS!!! The description of event cannot be empty.\", e.getMessage());","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"    public void emptyDescriptionException_delete_sameMessage() {","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"        EmptyDescriptionException e \u003d new EmptyDescriptionException(\"delete\");","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(\"☹ OOPS!!! The description of delete cannot be empty.\", e.getMessage());","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"    public void emptyDescriptionException_done_sameMessage() {","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"        EmptyDescriptionException e \u003d new EmptyDescriptionException(\"done\");","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(\"☹ OOPS!!! The description of done cannot be empty.\", e.getMessage());","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"    public void emptyListException_sameMessage() {","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"        EmptyListException e \u003d new EmptyListException();","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(\"☹ Sorry! The list is empty! ☹\", e.getMessage());","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"    public void taskIsCompleteException_sameMessage() {","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"        TaskIsCompleteException e \u003d new TaskIsCompleteException(123);","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(\"☹ OOPS! I think you have already completed task 123 !☹\", e.getMessage());","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"XXJJXJ"},"content":"    public void taskNotFoundException_sameMessage() {","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"XXJJXJ"},"content":"        TaskNotFoundException e \u003d new TaskNotFoundException(123);","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"XXJJXJ"},"content":"        String expectedMessage \u003d \"☹ OOPS!!! There is no such task!\"","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"XXJJXJ"},"content":"                + \"\\n    I can\u0027t seem to find the task at number 123 !\";","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(expectedMessage, e.getMessage());","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"XXJJXJ"},"content":"    public void unknownCommandException_sameMessage() {","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"XXJJXJ"},"content":"        UnknownCommandException e \u003d new UnknownCommandException();","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what you mean ☹\", e.getMessage());","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"XXJJXJ":85}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package duke.task;","lastModifiedDate":"2021-08-20"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import duke.exceptions.CommandParamException;","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"public class TaskTest {","lastModifiedDate":"2021-08-20"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-08-20"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"    public void todoTest_fromCommandLineInput_sameResult() {","lastModifiedDate":"2021-08-20"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(\"todo go jogging\", new ToDo(\"go jogging\").fullCommand());","lastModifiedDate":"2021-08-20"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-08-20"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"    public void deadlineTest_fromCommandLineInput_sameResult() throws CommandParamException {","lastModifiedDate":"2021-08-20"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(\"deadline go jogging /by 2021-08-21 2359\",","lastModifiedDate":"2021-08-20"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"                new Deadline(\"go jogging\",\"2021-08-21 2359\").fullCommand());","lastModifiedDate":"2021-08-20"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-08-20"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"    public void eventTest_fromCommandLineInput_sameResult() throws CommandParamException {","lastModifiedDate":"2021-08-20"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(\"event go jogging /at 2021-08-21 2359\",","lastModifiedDate":"2021-08-20"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"                new Event(\"go jogging\",\"2021-08-21 2359\").fullCommand());","lastModifiedDate":"2021-08-20"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"XXJJXJ":28}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"todo borrow book","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"deadline return book /by 2021-08-18 2359","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"done 1","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"done 2","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"event project meeting /at 2021-08-18 2359","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"deadline do homework /by 2021-08-18 2359","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"done 3","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"done 4","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"deadline gg /by qweqwe","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"event try /at pota","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"deadline go jogging /by 2021-08-15 1200","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"done 5","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"delete 1","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"delete 1","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"delete 1","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"bye","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"XXJJXJ":19}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"javac  -cp ..\\src\\main\\java\\ -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"XXJJXJ":2,"-":19}}]
