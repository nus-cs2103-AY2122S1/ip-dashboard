[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"sherrpass"},"content":"# duke.DukeMaster project template","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"sherrpass"},"content":"3. After that, locate the `src/main/java/duke.DukeMaster.java` file, right-click it, and choose `Run duke.DukeMaster.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"sherrpass":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"sherrpass"},"content":"compileJava {","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"sherrpass"},"content":"    options.encoding \u003d \u0027UTF-8\u0027","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"sherrpass"},"content":"    options.compilerArgs \u003c\u003c \"-Xlint:unchecked\" \u003c\u003c \"-Xlint:deprecation\"","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"sherrpass"},"content":"}","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"sherrpass"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"sherrpass"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"sherrpass"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"sherrpass"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"sherrpass"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"sherrpass"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"sherrpass"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"sherrpass"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"sherrpass"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"sherrpass"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"sherrpass"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"sherrpass"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"sherrpass"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"sherrpass"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"sherrpass"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"sherrpass":22,"-":45}},{"path":"dataTest/dataTest.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sherrpass"},"content":"T| |todo description","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"sherrpass"},"content":"D|X|deadline description|2021-12-12","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"sherrpass"},"content":"E| |event description|2012-11-11","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"sherrpass":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"sherrpass"},"content":"### List all tasks: `list`","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"sherrpass"},"content":"Lists all tasks in the task list.","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"sherrpass"},"content":"format: `list`","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"sherrpass"},"content":"### Delete a task: `delete`","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"sherrpass"},"content":"Deletes a task from the task list given the task index.","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"sherrpass"},"content":"Format: `delete TASK-INDEX`","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"sherrpass"},"content":"### Mark a task as done: `done`","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"sherrpass"},"content":"Marks a task from the task list as done given the task index.","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"sherrpass"},"content":"Format: `done TASK-INDEX`","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"sherrpass"},"content":"### Create a Todo: `todo`","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"sherrpass"},"content":"Create a todo by providing a description and adds it to the task list.","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":27,"author":{"gitId":"sherrpass"},"content":"Format: `todo DESCRIPTION`","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"sherrpass"},"content":"Examples:","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"sherrpass"},"content":"* `todo buy some milk`","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"sherrpass"},"content":"* `todo never come back`","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"sherrpass"},"content":"### Create an Event: `event`","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"sherrpass"},"content":"Create an event with a description that occurs at a provided date and adds it to the task list.","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"sherrpass"},"content":"Format: `event DESCRIPTION /at DATE`","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"sherrpass"},"content":"Examples:","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"sherrpass"},"content":"* `event son\u0027s birthday /at 2021-12-12`","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"sherrpass"},"content":"* `event one-way flight to columbia /at 2021-12-11`","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"sherrpass"},"content":"### Create a Deadline: `deadline`","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"sherrpass"},"content":"Create a deadline with a description that is due by a provided date and adds it to the task list.","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"sherrpass"},"content":"Format: `deadline DESCRIPTION /by DATE`","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"sherrpass"},"content":"### Get Tasks occurring on date: `occurring`","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"sherrpass"},"content":"Get all events and deadlines that occur on a provided date.","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"sherrpass"},"content":"Format: `occurring DATE`","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"sherrpass"},"content":"### Find Tasks matching query: \u0027find\u0027","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"sherrpass"},"content":"Find all tasks that matches a provided query.","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"sherrpass"},"content":"* Not case-sensitive","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"sherrpass"},"content":"* Matches with description or date","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"sherrpass"},"content":"Format: `find QUERY`","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"sherrpass"},"content":"Examples:","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"sherrpass"},"content":"* `find father` Finds a task like an event with a description of \"father\u0027s day\"","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"sherrpass"},"content":"* `find Dec 12` Finds a task like an event with a date of \"2021-12-12\"","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"sherrpass"},"content":"![Image of Yaktocat](../src/main/resources/images/findDemo.png)","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"sherrpass"},"content":"##FAQ","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"sherrpass"},"content":"**Q**: How do I transfer my data to another Computer?  ","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"sherrpass"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it ","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"sherrpass"},"content":"creates with the file that contains the data of your previous DukeMaster home folder.","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"sherrpass":57,"-":15}},{"path":"src/main/java/duke/Action.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sherrpass"},"content":"package duke;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"sherrpass"},"content":"public enum Action {","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"sherrpass"},"content":"    LIST, DELETE, DONE, TODO, DEADLINE, EVENT, OCCURRING, FIND, BYE, UNDO","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"sherrpass"},"content":"}","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"sherrpass":5}},{"path":"src/main/java/duke/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sherrpass"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"sherrpass"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"sherrpass"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"sherrpass"},"content":" * Represents a command to add tasks to the task list.","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"sherrpass"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"sherrpass"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"sherrpass"},"content":"    private String taskType;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"sherrpass"},"content":"    private String description;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"sherrpass"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"sherrpass"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"sherrpass"},"content":"     * Sole constructor for this class","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"sherrpass"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"sherrpass"},"content":"     * @param taskType Task type to add.","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"sherrpass"},"content":"     * @param description Task description.","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"sherrpass"},"content":"     * @param date Task date for events and deadlines.","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"sherrpass"},"content":"     * @throws DukeException If description is empty.","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"sherrpass"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"sherrpass"},"content":"    public AddCommand(String taskType, String description, LocalDate date) throws DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"sherrpass"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"sherrpass"},"content":"            throw new DukeException(\"Please provide a description to the task.\");","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"sherrpass"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"sherrpass"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"sherrpass"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"sherrpass"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"sherrpass"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"sherrpass"},"content":"     * Creates the task, adds it to the task list, updates the data file and displays the the new task to the UI.","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"sherrpass"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"sherrpass"},"content":"     * @param tasks Task list component.","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"sherrpass"},"content":"     * @param storage Storage component.","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"sherrpass"},"content":"     * @param ui UI component.","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"sherrpass"},"content":"     * @throws DukeException If invalid task type was provided.","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"sherrpass"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"sherrpass"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"sherrpass"},"content":"    public void execute(TaskList tasks, Storage storage, Ui ui) throws DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"sherrpass"},"content":"        TaskList copyOfTaskListBeforeChange \u003d tasks.clone();","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"sherrpass"},"content":"        Task newTask;","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"sherrpass"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"sherrpass"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"sherrpass"},"content":"            newTask \u003d new Todo(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"sherrpass"},"content":"            break;","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"sherrpass"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"sherrpass"},"content":"            newTask \u003d new Deadline(description, date);","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"sherrpass"},"content":"            break;","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"sherrpass"},"content":"        case \"event\":","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"sherrpass"},"content":"            newTask \u003d new Event(description, date);","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"sherrpass"},"content":"            break;","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"sherrpass"},"content":"        default:","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"sherrpass"},"content":"            throw new DukeException(\"Invalid task type provided!\");","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"sherrpass"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"sherrpass"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"sherrpass"},"content":"        assert tasks.doesContain(newTask) : \"Should have added new task into TaskList\";","lastModifiedDate":"2021-09-09"},{"lineNumber":57,"author":{"gitId":"sherrpass"},"content":"        storage.updateTasks(tasks);","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"sherrpass"},"content":"        storage.addToHistory(copyOfTaskListBeforeChange, this);","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"sherrpass"},"content":"        ui.showAddedNewTask(newTask, tasks);","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"sherrpass"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"sherrpass"},"content":"    public String toString() {","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"sherrpass"},"content":"        return \"Add Tasks Command\";","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"sherrpass"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"sherrpass":66}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sherrpass"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"sherrpass"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"sherrpass"},"content":" * Represents a generic command.","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"sherrpass"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"sherrpass"},"content":"public abstract class Command implements Cloneable {","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"sherrpass"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"sherrpass"},"content":"     * Executes the command.","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"sherrpass"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"sherrpass"},"content":"     * @param tasks Task list component.","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"sherrpass"},"content":"     * @param storage Storage component.","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"sherrpass"},"content":"     * @param ui UI component.","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"sherrpass"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"sherrpass"},"content":"    public abstract void execute(TaskList tasks, Storage storage, Ui ui);","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"sherrpass"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"sherrpass"},"content":"    public abstract String toString();","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"sherrpass"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"sherrpass"},"content":"    public Command clone() {","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"sherrpass"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"sherrpass"},"content":"            return (Command) super.clone();","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"sherrpass"},"content":"        } catch (CloneNotSupportedException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"sherrpass"},"content":"            throw new DukeException(\"Command cannot be cloned.\");","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"sherrpass"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"sherrpass"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"sherrpass":26}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sherrpass"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"sherrpass"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"sherrpass"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"sherrpass"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"sherrpass"},"content":" * Represents a deadline task.","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"sherrpass"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"sherrpass"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"sherrpass"},"content":"    protected LocalDate by;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"sherrpass"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"sherrpass"},"content":"     * Constructor for deadline class.","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"sherrpass"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"sherrpass"},"content":"     * @param description Deadline description.","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"sherrpass"},"content":"     * @param by Due date of deadline.","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"sherrpass"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"sherrpass"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"sherrpass"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"sherrpass"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"sherrpass"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"sherrpass"},"content":"     * Returns the task\u0027s details in a String.","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"sherrpass"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"sherrpass"},"content":"     * @return Task\u0027s details in a String.","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"sherrpass"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"sherrpass"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"sherrpass"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"sherrpass"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"sherrpass"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"sherrpass"},"content":"     * Returns deadline\u0027s due date.","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"sherrpass"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"sherrpass"},"content":"     * @return Deadline\u0027s due date.","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"sherrpass"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"sherrpass"},"content":"    public LocalDate getDueDate() {","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"sherrpass"},"content":"        return by;","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"sherrpass"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"sherrpass"},"content":"     * Returns task\u0027s details in a format that will be stored in the data file.","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"sherrpass"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"sherrpass"},"content":"     * @return Task\u0027s details in a format that will be stored in the data file.","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"sherrpass"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"sherrpass"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"sherrpass"},"content":"    public String toStringData() {","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"sherrpass"},"content":"        return \"D\" + super.toStringData() + \"|\" + by;","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"sherrpass"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"sherrpass"},"content":"    public boolean matches(String query) {","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"sherrpass"},"content":"        return super.matches(query)","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"sherrpass"},"content":"                || by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")).toLowerCase().contains(query.toLowerCase())","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"sherrpass"},"content":"                || query.equalsIgnoreCase(\"deadline\");","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"sherrpass"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"sherrpass":58}},{"path":"src/main/java/duke/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sherrpass"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"sherrpass"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"sherrpass"},"content":" * Represents the delete task command.","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"sherrpass"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"sherrpass"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"sherrpass"},"content":"    private int taskIndex;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"sherrpass"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"sherrpass"},"content":"     * Constructor for DeleteCommand","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"sherrpass"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"sherrpass"},"content":"     * @param taskIndex Index of task to delete.","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"sherrpass"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"sherrpass"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"sherrpass"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"sherrpass"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"sherrpass"},"content":"     * Removes task from task list, updates tasks in data file and shows that task has been removed on UI.","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"sherrpass"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"sherrpass"},"content":"     * @param tasks Task list component.","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"sherrpass"},"content":"     * @param storage Storage component.","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"sherrpass"},"content":"     * @param ui UI component.","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"sherrpass"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"sherrpass"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"sherrpass"},"content":"    public void execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"sherrpass"},"content":"        TaskList copyOfTaskListBeforeChange \u003d tasks.clone();","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"sherrpass"},"content":"        if (tasks.getLength() \u003c\u003d taskIndex || 0 \u003e taskIndex) {","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"sherrpass"},"content":"            throw new DukeException(\"Invalid task index provided!\");","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"sherrpass"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"sherrpass"},"content":"        storage.addToHistory(tasks, this);","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"sherrpass"},"content":"        Task removedTask \u003d tasks.removeTask(taskIndex);","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"sherrpass"},"content":"        assert !tasks.doesContain(removedTask) : \"Should have removed new task from TaskList\";","lastModifiedDate":"2021-09-09"},{"lineNumber":34,"author":{"gitId":"sherrpass"},"content":"        storage.updateTasks(tasks);","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"sherrpass"},"content":"        storage.addToHistory(copyOfTaskListBeforeChange, this);","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"sherrpass"},"content":"        ui.showRemovedTask(removedTask, tasks);","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"sherrpass"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"sherrpass"},"content":"    public String toString() {","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"sherrpass"},"content":"        return \"Delete Task Command\";","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"sherrpass"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"sherrpass":43}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sherrpass"},"content":"package duke;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"sherrpass"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"sherrpass"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"sherrpass"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"sherrpass"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"sherrpass"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"sherrpass"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"sherrpass"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"sherrpass"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"sherrpass"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"sherrpass"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"sherrpass"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"sherrpass"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"sherrpass"},"content":"import javafx.scene.paint.Paint;","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"sherrpass"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"sherrpass"},"content":"    private Label text;","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"sherrpass"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"sherrpass"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"sherrpass"},"content":"     * Constructor for DialogBox.","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"sherrpass"},"content":"     * @param l Label for dialog box.","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"sherrpass"},"content":"     * @param iv ImageView for dialog box.","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"sherrpass"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"sherrpass"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"sherrpass"},"content":"        text \u003d l;","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"sherrpass"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"sherrpass"},"content":"        text.setWrapText(true);","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"sherrpass"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"sherrpass"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"sherrpass"},"content":"        this.setPadding(new Insets(10, 10, 10, 10));","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"sherrpass"},"content":"        this.setSpacing(10);","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"sherrpass"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"sherrpass"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"sherrpass"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"sherrpass"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"sherrpass"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"sherrpass"},"content":"    private void flip() {","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"sherrpass"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"sherrpass"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"sherrpass"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"sherrpass"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":50,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":51,"author":{"gitId":"sherrpass"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"sherrpass"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"sherrpass"},"content":"        db.setBackground(new Background(new BackgroundFill(Color.web(\"dfe7fd\"), new CornerRadii(8), Insets.EMPTY)));","lastModifiedDate":"2021-09-03"},{"lineNumber":54,"author":{"gitId":"sherrpass"},"content":"        return db;","lastModifiedDate":"2021-09-03"},{"lineNumber":55,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":56,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":57,"author":{"gitId":"sherrpass"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv, boolean isError) {","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"sherrpass"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2021-09-03"},{"lineNumber":59,"author":{"gitId":"sherrpass"},"content":"        db.flip();","lastModifiedDate":"2021-09-03"},{"lineNumber":60,"author":{"gitId":"sherrpass"},"content":"        Paint backgroundColor \u003d isError ? Color.LIGHTPINK : Color.WHITE;","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"sherrpass"},"content":"        db.setBackground(new Background(new BackgroundFill(backgroundColor, new CornerRadii(8), Insets.EMPTY)));","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"sherrpass"},"content":"        return db;","lastModifiedDate":"2021-09-03"},{"lineNumber":63,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":64,"author":{"gitId":"sherrpass"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"sherrpass":64}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sherrpass"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"sherrpass"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"sherrpass"},"content":" * Represents an expected exception that occurred within the operation of the Duke application.","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"sherrpass"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"sherrpass"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"sherrpass"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"sherrpass"},"content":"     * Constructor for DukeException","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"sherrpass"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"sherrpass"},"content":"     * @param errorMessage Error message.","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"sherrpass"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"sherrpass"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-08-20"},{"lineNumber":14,"author":{"gitId":"sherrpass"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-20"},{"lineNumber":15,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":16,"author":{"gitId":"sherrpass"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"sherrpass":16}},{"path":"src/main/java/duke/DukeMaster.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sherrpass"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"sherrpass"},"content":"import java.util.Objects;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"sherrpass"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"sherrpass"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"sherrpass"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"sherrpass"},"content":" * The DukeMaster Application.","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"sherrpass"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"sherrpass"},"content":"public class DukeMaster extends Application {","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"sherrpass"},"content":"    private final String dataFilePath \u003d \"./data/tasks.txt\";","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"sherrpass"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"sherrpass"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"sherrpass"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"sherrpass"},"content":"    public DukeMaster() {}","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"sherrpass"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"sherrpass"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"sherrpass"},"content":"        ui \u003d new Ui(stage);","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"sherrpass"},"content":"        storage \u003d new Storage(dataFilePath);","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"sherrpass"},"content":"        tasks \u003d generateTaskList();","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"sherrpass"},"content":"        setEventHandlers();","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"sherrpass"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"sherrpass"},"content":"    private TaskList generateTaskList() {","lastModifiedDate":"2021-09-10"},{"lineNumber":31,"author":{"gitId":"sherrpass"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"sherrpass"},"content":"            return new TaskList(storage.load());","lastModifiedDate":"2021-09-10"},{"lineNumber":33,"author":{"gitId":"sherrpass"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"sherrpass"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"sherrpass"},"content":"            return new TaskList();","lastModifiedDate":"2021-09-10"},{"lineNumber":36,"author":{"gitId":"sherrpass"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":37,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"sherrpass"},"content":"    private void setEventHandlers() {","lastModifiedDate":"2021-09-10"},{"lineNumber":40,"author":{"gitId":"sherrpass"},"content":"        ui.getSendButton().setOnMouseClicked((event) -\u003e handleUserInput(ui.readCommand()));","lastModifiedDate":"2021-09-10"},{"lineNumber":41,"author":{"gitId":"sherrpass"},"content":"        ui.getUserInput().setOnAction((event) -\u003e handleUserInput(ui.readCommand()));","lastModifiedDate":"2021-09-10"},{"lineNumber":42,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"sherrpass"},"content":"    private void handleUserInput(String fullCommand) {","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"sherrpass"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"sherrpass"},"content":"            ui.showFullCommand(fullCommand);","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"sherrpass"},"content":"            ui.clearInput();","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"sherrpass"},"content":"            Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"sherrpass"},"content":"            assert !Objects.isNull(c) : \"Should always return a command, if no error thrown.\";","lastModifiedDate":"2021-09-09"},{"lineNumber":50,"author":{"gitId":"sherrpass"},"content":"            c.execute(tasks, storage, ui);","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"sherrpass"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"sherrpass"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"sherrpass"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"sherrpass"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"sherrpass":55}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sherrpass"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"sherrpass"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"sherrpass"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"sherrpass"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"sherrpass"},"content":" * Represents an Event task.","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"sherrpass"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"sherrpass"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"sherrpass"},"content":"    protected LocalDate at;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"sherrpass"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"sherrpass"},"content":"     * Constructor for Event.","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"sherrpass"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"sherrpass"},"content":"     * @param description Event\u0027s description.","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"sherrpass"},"content":"     * @param at Event\u0027s date.","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"sherrpass"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"sherrpass"},"content":"    public Event(String description, LocalDate at) {","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"sherrpass"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"sherrpass"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"sherrpass"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"sherrpass"},"content":"     * Returns the Event\u0027s details in a String.","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"sherrpass"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"sherrpass"},"content":"     * @return Event\u0027s details in a String.","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"sherrpass"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"sherrpass"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"sherrpass"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"sherrpass"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"sherrpass"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"sherrpass"},"content":"     * Returns Event\u0027s date.","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"sherrpass"},"content":"     * @return Event\u0027s date.","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"sherrpass"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"sherrpass"},"content":"    public LocalDate getEventDate() {","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"sherrpass"},"content":"        return at;","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"sherrpass"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"sherrpass"},"content":"     * Returns task\u0027s details in a format that will be stored in the data file.","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"sherrpass"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"sherrpass"},"content":"     * @return Task\u0027s details in a format that will be stored in the data file.","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"sherrpass"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"sherrpass"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"sherrpass"},"content":"    public String toStringData() {","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"sherrpass"},"content":"        return \"E\" + super.toStringData() + \"|\" + at;","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"sherrpass"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"sherrpass"},"content":"    public boolean matches(String query) {","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"sherrpass"},"content":"        return super.matches(query)","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"sherrpass"},"content":"                || at.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")).toLowerCase().contains(query.toLowerCase())","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"sherrpass"},"content":"                || query.equalsIgnoreCase(\"event\");","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"sherrpass"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"sherrpass":57}},{"path":"src/main/java/duke/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sherrpass"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"sherrpass"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"sherrpass"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"sherrpass"},"content":" * Represents an exit command that will end the application run.","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"sherrpass"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"sherrpass"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"sherrpass"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"sherrpass"},"content":"     * Displays goodbye message on UI.","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"sherrpass"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"sherrpass"},"content":"     * @param tasks Task list component.","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"sherrpass"},"content":"     * @param storage Storage component.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"sherrpass"},"content":"     * @param ui UI component.","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"sherrpass"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"sherrpass"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"sherrpass"},"content":"    public void execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"sherrpass"},"content":"        ui.showGoodbye();","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"sherrpass"},"content":"        Platform.exit();","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"sherrpass"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"sherrpass"},"content":"    public String toString() {","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"sherrpass"},"content":"        return \"Exit Program Command\";","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"sherrpass"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"sherrpass":27}},{"path":"src/main/java/duke/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sherrpass"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"sherrpass"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"sherrpass"},"content":"    private String query;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"sherrpass"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"sherrpass"},"content":"     * Constructor for FindCommand.","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"sherrpass"},"content":"     * @param query Query string to find.","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"sherrpass"},"content":"     * @throws DukeException","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"sherrpass"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"sherrpass"},"content":"    public FindCommand(String query) throws DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"sherrpass"},"content":"        if (query.equals(\"\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"sherrpass"},"content":"            throw new DukeException(\"Query should not be empty.\");","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"sherrpass"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"sherrpass"},"content":"        this.query \u003d query;","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"sherrpass"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"sherrpass"},"content":"    public void execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"sherrpass"},"content":"        ui.showMatchingTasks(query, tasks);","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"sherrpass"},"content":"        storage.addToHistory(tasks, this);","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"sherrpass"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"sherrpass"},"content":"    public String toString() {","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"sherrpass"},"content":"        return \"Find tasks with query Command\";","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"sherrpass"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"sherrpass":28}},{"path":"src/main/java/duke/HistoryState.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sherrpass"},"content":"package duke;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"sherrpass"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"sherrpass"},"content":" * Represents a state of history where a command has led to the task list.","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"sherrpass"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"sherrpass"},"content":"public class HistoryState {","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"sherrpass"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"sherrpass"},"content":"    private Command command;","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"sherrpass"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"sherrpass"},"content":"     * Creates a history tagging a command to the task list right after executing the command.","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"sherrpass"},"content":"     * @param taskList","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"sherrpass"},"content":"     * @param command","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"sherrpass"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"sherrpass"},"content":"    public HistoryState(TaskList taskList, Command command) {","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"sherrpass"},"content":"        this.taskList \u003d taskList.clone();","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"sherrpass"},"content":"        this.command \u003d command.clone();","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"sherrpass"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"sherrpass"},"content":"     * Returns the task list of the history,","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"sherrpass"},"content":"     * @return The task list.","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"sherrpass"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"sherrpass"},"content":"    public TaskList getTaskList() {","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"sherrpass"},"content":"        return taskList;","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"sherrpass"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"sherrpass"},"content":"     * Returns the command of the history;","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"sherrpass"},"content":"     * @return The command.","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"sherrpass"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"sherrpass"},"content":"    public Command getCommand() {","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"sherrpass"},"content":"        return command;","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"sherrpass"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"sherrpass":35}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sherrpass"},"content":"package duke;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"sherrpass"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"sherrpass"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"sherrpass"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"sherrpass"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"sherrpass"},"content":"public class Launcher {","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"sherrpass"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"sherrpass"},"content":"        Application.launch(DukeMaster.class, args);","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"sherrpass"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"sherrpass":12}},{"path":"src/main/java/duke/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sherrpass"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"sherrpass"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"sherrpass"},"content":" * Represents list command that lists all tasks in task list.","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"sherrpass"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"sherrpass"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"sherrpass"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"sherrpass"},"content":"     * Shows all tasks in UI.","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"sherrpass"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"sherrpass"},"content":"     * @param tasks Task list component.","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"sherrpass"},"content":"     * @param storage Storage component.","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"sherrpass"},"content":"     * @param ui UI component.","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"sherrpass"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"sherrpass"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"sherrpass"},"content":"    public void execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"sherrpass"},"content":"        ui.showTaskList(tasks);","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"sherrpass"},"content":"        storage.addToHistory(tasks, this);","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"sherrpass"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"sherrpass"},"content":"    public String toString() {","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"sherrpass"},"content":"        return \"List all tasks Command\";","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"sherrpass"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"sherrpass":25}},{"path":"src/main/java/duke/OccurringCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sherrpass"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"sherrpass"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"sherrpass"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"sherrpass"},"content":" * Represents occurring command that shows all tasks that occurs on a given date.","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"sherrpass"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"sherrpass"},"content":"public class OccurringCommand extends Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"sherrpass"},"content":"    private LocalDate queryDate;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"sherrpass"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"sherrpass"},"content":"     * Constructor for OccurringCommand.","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"sherrpass"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"sherrpass"},"content":"     * @param queryDate Date to query.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"sherrpass"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"sherrpass"},"content":"    public OccurringCommand(LocalDate queryDate) {","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"sherrpass"},"content":"        this.queryDate \u003d queryDate;","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"sherrpass"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"sherrpass"},"content":"     * Shows all tasks that occurs on a given date.","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"sherrpass"},"content":"     * @param tasks Task list component.","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"sherrpass"},"content":"     * @param storage Storage component.","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"sherrpass"},"content":"     * @param ui UI component.","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"sherrpass"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"sherrpass"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"sherrpass"},"content":"    public void execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"sherrpass"},"content":"        ui.showOccurringTasks(queryDate, tasks);","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"sherrpass"},"content":"        storage.addToHistory(tasks, this);","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"sherrpass"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"sherrpass"},"content":"    public String toString() {","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"sherrpass"},"content":"        return \"Show tasks occurring on date Command\";","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"sherrpass"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"sherrpass":36}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sherrpass"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"sherrpass"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"sherrpass"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"sherrpass"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"sherrpass"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"sherrpass"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"sherrpass"},"content":" * Represents a Parser that parses user input and returns corresponding command.","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"sherrpass"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"sherrpass"},"content":"public class Parser {","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"sherrpass"},"content":"    private static Action parseAction(String actionString) throws DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"sherrpass"},"content":"        try {","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"sherrpass"},"content":"            return Action.valueOf(actionString.toUpperCase());","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"sherrpass"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"sherrpass"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"sherrpass"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"sherrpass"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"sherrpass"},"content":"     * Parses user input and returns corresponding command.","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"sherrpass"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"sherrpass"},"content":"     * @param input User input in String.","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"sherrpass"},"content":"     * @return Parsed command.","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"sherrpass"},"content":"     * @throws DukeException If target task index not provided for deleting or marking task as done,","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"sherrpass"},"content":"     * if invalid action command is provided or if date provided is in an invalid format.","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"sherrpass"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"sherrpass"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"sherrpass"},"content":"        String[] inputList \u003d input.split(\" \");","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"sherrpass"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"sherrpass"},"content":"            switch (parseAction(inputList[0])) {","lastModifiedDate":"2021-09-10"},{"lineNumber":31,"author":{"gitId":"sherrpass"},"content":"            case LIST:","lastModifiedDate":"2021-09-10"},{"lineNumber":32,"author":{"gitId":"sherrpass"},"content":"                return new ListCommand();","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"sherrpass"},"content":"            case DELETE:","lastModifiedDate":"2021-09-10"},{"lineNumber":34,"author":{"gitId":"sherrpass"},"content":"                return new DeleteCommand(getTaskIndex(inputList));","lastModifiedDate":"2021-09-10"},{"lineNumber":35,"author":{"gitId":"sherrpass"},"content":"            case DONE:","lastModifiedDate":"2021-09-10"},{"lineNumber":36,"author":{"gitId":"sherrpass"},"content":"                return new SetDoneCommand(getTaskIndex(inputList));","lastModifiedDate":"2021-09-10"},{"lineNumber":37,"author":{"gitId":"sherrpass"},"content":"            case TODO:","lastModifiedDate":"2021-09-10"},{"lineNumber":38,"author":{"gitId":"sherrpass"},"content":"                return new AddCommand(\"todo\",","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"sherrpass"},"content":"                        getTodoDescription(input),","lastModifiedDate":"2021-09-10"},{"lineNumber":40,"author":{"gitId":"sherrpass"},"content":"                        null);","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"sherrpass"},"content":"            case DEADLINE:","lastModifiedDate":"2021-09-10"},{"lineNumber":42,"author":{"gitId":"sherrpass"},"content":"                return new AddCommand(\"deadline\",","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"sherrpass"},"content":"                        getDeadlineDescription(input),","lastModifiedDate":"2021-09-10"},{"lineNumber":44,"author":{"gitId":"sherrpass"},"content":"                        getDeadlineDate(input));","lastModifiedDate":"2021-09-10"},{"lineNumber":45,"author":{"gitId":"sherrpass"},"content":"            case EVENT:","lastModifiedDate":"2021-09-10"},{"lineNumber":46,"author":{"gitId":"sherrpass"},"content":"                return new AddCommand(\"event\",","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"sherrpass"},"content":"                        getEventDescription(input),","lastModifiedDate":"2021-09-10"},{"lineNumber":48,"author":{"gitId":"sherrpass"},"content":"                        getEventDate(input));","lastModifiedDate":"2021-09-10"},{"lineNumber":49,"author":{"gitId":"sherrpass"},"content":"            case OCCURRING:","lastModifiedDate":"2021-09-10"},{"lineNumber":50,"author":{"gitId":"sherrpass"},"content":"                return new OccurringCommand(getQueryDate(inputList));","lastModifiedDate":"2021-09-10"},{"lineNumber":51,"author":{"gitId":"sherrpass"},"content":"            case FIND:","lastModifiedDate":"2021-09-10"},{"lineNumber":52,"author":{"gitId":"sherrpass"},"content":"                return new FindCommand(getQuery(inputList));","lastModifiedDate":"2021-09-10"},{"lineNumber":53,"author":{"gitId":"sherrpass"},"content":"            case BYE:","lastModifiedDate":"2021-09-10"},{"lineNumber":54,"author":{"gitId":"sherrpass"},"content":"                return new ExitCommand();","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"sherrpass"},"content":"            case UNDO:","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"sherrpass"},"content":"                return new UndoCommand();","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"sherrpass"},"content":"            default:","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"sherrpass"},"content":"                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"sherrpass"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"sherrpass"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"sherrpass"},"content":"            throw new DukeException(\"Date provided should be in YYYY-MM-DD format.\");","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"sherrpass"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":65,"author":{"gitId":"sherrpass"},"content":"    private static int getTaskIndex(String[] inputList) throws DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":66,"author":{"gitId":"sherrpass"},"content":"        if (inputList.length !\u003d 2) {","lastModifiedDate":"2021-09-10"},{"lineNumber":67,"author":{"gitId":"sherrpass"},"content":"            throw new DukeException(\"Please provide the target task index!\");","lastModifiedDate":"2021-09-10"},{"lineNumber":68,"author":{"gitId":"sherrpass"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":69,"author":{"gitId":"sherrpass"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"sherrpass"},"content":"            return Integer.parseInt(inputList[1]) - 1;","lastModifiedDate":"2021-09-10"},{"lineNumber":71,"author":{"gitId":"sherrpass"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"sherrpass"},"content":"            throw new DukeException(\"Please provide a valid number as the task index!\");","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"sherrpass"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":75,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":76,"author":{"gitId":"sherrpass"},"content":"    private static String getTodoDescription(String input) {","lastModifiedDate":"2021-09-10"},{"lineNumber":77,"author":{"gitId":"sherrpass"},"content":"        return input.replaceFirst(Pattern.quote(\"todo\"), \"\").trim();","lastModifiedDate":"2021-09-10"},{"lineNumber":78,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":79,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":80,"author":{"gitId":"sherrpass"},"content":"    private static LocalDate getQueryDate(String[] inputList) throws DukeException {","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"sherrpass"},"content":"        if (inputList.length !\u003d 2) {","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"sherrpass"},"content":"            throw new DukeException(\"Please provide the query date!\");","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"sherrpass"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"sherrpass"},"content":"        return LocalDate.parse(inputList[1]);","lastModifiedDate":"2021-09-10"},{"lineNumber":85,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":86,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":87,"author":{"gitId":"sherrpass"},"content":"    private static String getQuery(String[] inputList) throws DukeException {","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"sherrpass"},"content":"        if (inputList.length \u003c 2) {","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"sherrpass"},"content":"            throw new DukeException(\"Please provide the query!\");","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"sherrpass"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"sherrpass"},"content":"        return String.join(\" \",","lastModifiedDate":"2021-09-10"},{"lineNumber":92,"author":{"gitId":"sherrpass"},"content":"                Arrays.copyOfRange(inputList, 1, inputList.length));","lastModifiedDate":"2021-09-10"},{"lineNumber":93,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":94,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":95,"author":{"gitId":"sherrpass"},"content":"    private static String getEventDescription(String input) throws DukeException {","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"sherrpass"},"content":"        String[] eventInfo \u003d extractEventInfo(input);","lastModifiedDate":"2021-09-10"},{"lineNumber":97,"author":{"gitId":"sherrpass"},"content":"        return eventInfo[0].trim();","lastModifiedDate":"2021-09-10"},{"lineNumber":98,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":99,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":100,"author":{"gitId":"sherrpass"},"content":"    private static LocalDate getEventDate(String input) throws DukeException {","lastModifiedDate":"2021-09-17"},{"lineNumber":101,"author":{"gitId":"sherrpass"},"content":"        String[] eventInfo \u003d extractEventInfo(input);","lastModifiedDate":"2021-09-10"},{"lineNumber":102,"author":{"gitId":"sherrpass"},"content":"        return LocalDate.parse(eventInfo[1].trim());","lastModifiedDate":"2021-09-10"},{"lineNumber":103,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":104,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":105,"author":{"gitId":"sherrpass"},"content":"    private static String getDeadlineDescription(String input) throws DukeException {","lastModifiedDate":"2021-09-17"},{"lineNumber":106,"author":{"gitId":"sherrpass"},"content":"        String[] deadlineInfo \u003d extractDeadlineInfo(input);","lastModifiedDate":"2021-09-10"},{"lineNumber":107,"author":{"gitId":"sherrpass"},"content":"        return deadlineInfo[0].trim();","lastModifiedDate":"2021-09-10"},{"lineNumber":108,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":109,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":110,"author":{"gitId":"sherrpass"},"content":"    private static LocalDate getDeadlineDate(String input) throws DukeException {","lastModifiedDate":"2021-09-17"},{"lineNumber":111,"author":{"gitId":"sherrpass"},"content":"        String[] deadlineInfo \u003d extractDeadlineInfo(input);","lastModifiedDate":"2021-09-10"},{"lineNumber":112,"author":{"gitId":"sherrpass"},"content":"        return LocalDate.parse(deadlineInfo[1].trim());","lastModifiedDate":"2021-09-10"},{"lineNumber":113,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":114,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":115,"author":{"gitId":"sherrpass"},"content":"    private static String[] extractEventInfo(String input) throws DukeException {","lastModifiedDate":"2021-09-17"},{"lineNumber":116,"author":{"gitId":"sherrpass"},"content":"        String[] eventInfo \u003d input.replaceFirst(Pattern.quote(\"event\"), \"\").split(\"/at\", 2);","lastModifiedDate":"2021-09-17"},{"lineNumber":117,"author":{"gitId":"sherrpass"},"content":"        if (eventInfo.length \u003c 2) {","lastModifiedDate":"2021-09-17"},{"lineNumber":118,"author":{"gitId":"sherrpass"},"content":"            throw new DukeException(\"Please provide the description and the date!\");","lastModifiedDate":"2021-09-17"},{"lineNumber":119,"author":{"gitId":"sherrpass"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":120,"author":{"gitId":"sherrpass"},"content":"        return eventInfo;","lastModifiedDate":"2021-09-17"},{"lineNumber":121,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":122,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":123,"author":{"gitId":"sherrpass"},"content":"    private static String[] extractDeadlineInfo(String input) throws DukeException {","lastModifiedDate":"2021-09-17"},{"lineNumber":124,"author":{"gitId":"sherrpass"},"content":"        String[] deadlineInfo \u003d input.replaceFirst(Pattern.quote(\"deadline\"), \"\").split(\"/by\", 2);","lastModifiedDate":"2021-09-17"},{"lineNumber":125,"author":{"gitId":"sherrpass"},"content":"        if (deadlineInfo.length \u003c 2) {","lastModifiedDate":"2021-09-17"},{"lineNumber":126,"author":{"gitId":"sherrpass"},"content":"            throw new DukeException(\"Please provide the description and the date!\");","lastModifiedDate":"2021-09-17"},{"lineNumber":127,"author":{"gitId":"sherrpass"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":128,"author":{"gitId":"sherrpass"},"content":"        return deadlineInfo;","lastModifiedDate":"2021-09-17"},{"lineNumber":129,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":130,"author":{"gitId":"sherrpass"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"sherrpass":130}},{"path":"src/main/java/duke/SetDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sherrpass"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"sherrpass"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"sherrpass"},"content":" * Represents the command to mark a task as done.","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"sherrpass"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"sherrpass"},"content":"public class SetDoneCommand extends Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"sherrpass"},"content":"    private int taskIndex;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"sherrpass"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"sherrpass"},"content":"     * Constructor for SetDoneCommand","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"sherrpass"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"sherrpass"},"content":"     * @param taskIndex Index of task to set as done.","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"sherrpass"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"sherrpass"},"content":"    public SetDoneCommand(int taskIndex) {","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"sherrpass"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"sherrpass"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"sherrpass"},"content":"     * Marks intended task as done, updates data file and shows in UI.","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"sherrpass"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"sherrpass"},"content":"     * @param tasks Task list component.","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"sherrpass"},"content":"     * @param storage Storage component.","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"sherrpass"},"content":"     * @param ui UI component.","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"sherrpass"},"content":"     * @throws DukeException If an invalid task index was provided.","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"sherrpass"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"sherrpass"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"sherrpass"},"content":"    public void execute(TaskList tasks, Storage storage, Ui ui) throws DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"sherrpass"},"content":"        TaskList copyOfTaskListBeforeChange \u003d tasks.clone();","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"sherrpass"},"content":"        if (tasks.getLength() \u003c\u003d taskIndex || 0 \u003e taskIndex) {","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"sherrpass"},"content":"            throw new DukeException(\"Invalid task index provided!\");","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"sherrpass"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"sherrpass"},"content":"        Task currTask \u003d tasks.getTask(taskIndex);","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"sherrpass"},"content":"        storage.addToHistory(tasks, this);","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"sherrpass"},"content":"        currTask.markAsDone();","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"sherrpass"},"content":"        assert currTask.getDoneStatus() : \"Task should have been marked as done\";","lastModifiedDate":"2021-09-09"},{"lineNumber":36,"author":{"gitId":"sherrpass"},"content":"        storage.updateTasks(tasks);","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"sherrpass"},"content":"        storage.addToHistory(copyOfTaskListBeforeChange, this);","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"sherrpass"},"content":"        ui.showMarkedAsDone(currTask);","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"sherrpass"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"sherrpass"},"content":"    public String toString() {","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"sherrpass"},"content":"        return \"Set Tasks to Done Command\";","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"sherrpass"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"sherrpass":45}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sherrpass"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"sherrpass"},"content":"import java.io.File;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"sherrpass"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"sherrpass"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"sherrpass"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"sherrpass"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"sherrpass"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"sherrpass"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"sherrpass"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"sherrpass"},"content":" * Represents the storage of the Duke application that deals with loading from and updating the tasks in the data file.","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"sherrpass"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"sherrpass"},"content":"public class Storage {","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"sherrpass"},"content":"    private String dataFilePath;","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"sherrpass"},"content":"    private ArrayList\u003cHistoryState\u003e history \u003d new ArrayList\u003cHistoryState\u003e();","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"sherrpass"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"sherrpass"},"content":"     * Constructor for Storage.","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"sherrpass"},"content":"     * Sets the data folder and file path.","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"sherrpass"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"sherrpass"},"content":"     * @param dataFilePath Path to the data file.","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"sherrpass"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"sherrpass"},"content":"    public Storage(String dataFilePath) {","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"sherrpass"},"content":"        this.dataFilePath \u003d dataFilePath;","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"sherrpass"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"sherrpass"},"content":"     * Set task list and command to history","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"sherrpass"},"content":"     * @param taskList","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"sherrpass"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"sherrpass"},"content":"    public void addToHistory(TaskList taskList, Command command) {","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"sherrpass"},"content":"        history.add(new HistoryState(taskList, command));","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"sherrpass"},"content":"    public boolean isHistoryEmpty() {","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"sherrpass"},"content":"        return history \u003d\u003d null;","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"sherrpass"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"sherrpass"},"content":"     * Returns history and clears it.","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"sherrpass"},"content":"     * @return last saved task list","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"sherrpass"},"content":"     * @throws DukeException","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"sherrpass"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"sherrpass"},"content":"    public HistoryState popFromHistory() throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"sherrpass"},"content":"        if (history.isEmpty()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"sherrpass"},"content":"            throw new DukeException(\"There is nothing saved in the history!\");","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"sherrpass"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"sherrpass"},"content":"        HistoryState lastHistoryState \u003d history.remove(history.size() - 1);","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"sherrpass"},"content":"        return lastHistoryState;","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"sherrpass"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"sherrpass"},"content":"     * Loads data from the data file, if any.","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"sherrpass"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"sherrpass"},"content":"     * @return ArrayList of tasks loaded from the data file.","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"sherrpass"},"content":"     * @throws DukeException If IOException is thrown while creating a new datafile, data file is not found","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"sherrpass"},"content":"     * or there exists an invalid file type in the data file.","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"sherrpass"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"sherrpass"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"sherrpass"},"content":"        File f \u003d getDataFile();","lastModifiedDate":"2021-09-10"},{"lineNumber":60,"author":{"gitId":"sherrpass"},"content":"        assert f.exists() : \"Data File should be present\";","lastModifiedDate":"2021-09-09"},{"lineNumber":61,"author":{"gitId":"sherrpass"},"content":"        Scanner s \u003d getScanner(f);","lastModifiedDate":"2021-09-10"},{"lineNumber":62,"author":{"gitId":"sherrpass"},"content":"        ArrayList\u003cTask\u003e tasks \u003d getStoredTasks(s);","lastModifiedDate":"2021-09-10"},{"lineNumber":63,"author":{"gitId":"sherrpass"},"content":"        return tasks;","lastModifiedDate":"2021-09-10"},{"lineNumber":64,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"sherrpass"},"content":"    private ArrayList\u003cTask\u003e getStoredTasks(Scanner s) {","lastModifiedDate":"2021-09-10"},{"lineNumber":67,"author":{"gitId":"sherrpass"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"sherrpass"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-09-09"},{"lineNumber":69,"author":{"gitId":"sherrpass"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"sherrpass"},"content":"            count++;","lastModifiedDate":"2021-09-09"},{"lineNumber":71,"author":{"gitId":"sherrpass"},"content":"            String l \u003d s.nextLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"sherrpass"},"content":"            String[] taskEntry \u003d l.split(\"\\\\|\");","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"sherrpass"},"content":"            switch(taskEntry[0]) {","lastModifiedDate":"2021-09-02"},{"lineNumber":74,"author":{"gitId":"sherrpass"},"content":"            case \"T\":","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"sherrpass"},"content":"                tasks.add(new Todo(getTaskDescription(taskEntry)));","lastModifiedDate":"2021-09-10"},{"lineNumber":76,"author":{"gitId":"sherrpass"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"sherrpass"},"content":"            case \"D\":","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"sherrpass"},"content":"                tasks.add(new Deadline(getTaskDescription(taskEntry), getTaskDate(taskEntry)));","lastModifiedDate":"2021-09-10"},{"lineNumber":79,"author":{"gitId":"sherrpass"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"sherrpass"},"content":"            case \"E\":","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"sherrpass"},"content":"                tasks.add(new Event(getTaskDescription(taskEntry), getTaskDate(taskEntry)));","lastModifiedDate":"2021-09-10"},{"lineNumber":82,"author":{"gitId":"sherrpass"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"sherrpass"},"content":"            default:","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"sherrpass"},"content":"                throw new DukeException(\"Invalid duke. Task Type stored in Data File\");","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"sherrpass"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"sherrpass"},"content":"            boolean isTaskDone \u003d taskEntry[1].equals(\"X\");","lastModifiedDate":"2021-09-10"},{"lineNumber":87,"author":{"gitId":"sherrpass"},"content":"            if (isTaskDone) {","lastModifiedDate":"2021-09-10"},{"lineNumber":88,"author":{"gitId":"sherrpass"},"content":"                tasks.get(tasks.size() - 1).markAsDone();","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"sherrpass"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":90,"author":{"gitId":"sherrpass"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":91,"author":{"gitId":"sherrpass"},"content":"        assert count \u003d\u003d tasks.size() : \"Should have the same number of tasks as lines in data file\";","lastModifiedDate":"2021-09-09"},{"lineNumber":92,"author":{"gitId":"sherrpass"},"content":"        return tasks;","lastModifiedDate":"2021-08-28"},{"lineNumber":93,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":94,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":95,"author":{"gitId":"sherrpass"},"content":"    private String getTaskDescription(String[] taskEntry) {","lastModifiedDate":"2021-09-10"},{"lineNumber":96,"author":{"gitId":"sherrpass"},"content":"        return taskEntry[2];","lastModifiedDate":"2021-09-10"},{"lineNumber":97,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":98,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":99,"author":{"gitId":"sherrpass"},"content":"    private LocalDate getTaskDate(String[] taskEntry) {","lastModifiedDate":"2021-09-10"},{"lineNumber":100,"author":{"gitId":"sherrpass"},"content":"        return LocalDate.parse(taskEntry[3]);","lastModifiedDate":"2021-09-10"},{"lineNumber":101,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":102,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":103,"author":{"gitId":"sherrpass"},"content":"    private Scanner getScanner(File f) {","lastModifiedDate":"2021-09-10"},{"lineNumber":104,"author":{"gitId":"sherrpass"},"content":"        Scanner s;","lastModifiedDate":"2021-09-10"},{"lineNumber":105,"author":{"gitId":"sherrpass"},"content":"        try {","lastModifiedDate":"2021-09-10"},{"lineNumber":106,"author":{"gitId":"sherrpass"},"content":"            s \u003d new Scanner(f);","lastModifiedDate":"2021-09-10"},{"lineNumber":107,"author":{"gitId":"sherrpass"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-10"},{"lineNumber":108,"author":{"gitId":"sherrpass"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2021-09-10"},{"lineNumber":109,"author":{"gitId":"sherrpass"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":110,"author":{"gitId":"sherrpass"},"content":"        return s;","lastModifiedDate":"2021-09-10"},{"lineNumber":111,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":112,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":113,"author":{"gitId":"sherrpass"},"content":"    private File getDataFile() throws DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":114,"author":{"gitId":"sherrpass"},"content":"        File f;","lastModifiedDate":"2021-09-10"},{"lineNumber":115,"author":{"gitId":"sherrpass"},"content":"        try {","lastModifiedDate":"2021-09-10"},{"lineNumber":116,"author":{"gitId":"sherrpass"},"content":"            f \u003d new File(dataFilePath);","lastModifiedDate":"2021-09-10"},{"lineNumber":117,"author":{"gitId":"sherrpass"},"content":"            if (!f.exists()) {","lastModifiedDate":"2021-09-10"},{"lineNumber":118,"author":{"gitId":"sherrpass"},"content":"                File directory \u003d new File(f.getParent());","lastModifiedDate":"2021-09-10"},{"lineNumber":119,"author":{"gitId":"sherrpass"},"content":"                directory.mkdir();","lastModifiedDate":"2021-09-10"},{"lineNumber":120,"author":{"gitId":"sherrpass"},"content":"                f.createNewFile();","lastModifiedDate":"2021-09-10"},{"lineNumber":121,"author":{"gitId":"sherrpass"},"content":"            }","lastModifiedDate":"2021-09-10"},{"lineNumber":122,"author":{"gitId":"sherrpass"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-10"},{"lineNumber":123,"author":{"gitId":"sherrpass"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2021-09-10"},{"lineNumber":124,"author":{"gitId":"sherrpass"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":125,"author":{"gitId":"sherrpass"},"content":"        return f;","lastModifiedDate":"2021-09-10"},{"lineNumber":126,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":127,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":128,"author":{"gitId":"sherrpass"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":129,"author":{"gitId":"sherrpass"},"content":"     * Updates the data file with the updated task list.","lastModifiedDate":"2021-08-29"},{"lineNumber":130,"author":{"gitId":"sherrpass"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":131,"author":{"gitId":"sherrpass"},"content":"     * @param tasks Updated task list.","lastModifiedDate":"2021-08-29"},{"lineNumber":132,"author":{"gitId":"sherrpass"},"content":"     * @throws DukeException If there is an IOException while writing to the data file.","lastModifiedDate":"2021-08-29"},{"lineNumber":133,"author":{"gitId":"sherrpass"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":134,"author":{"gitId":"sherrpass"},"content":"    public void updateTasks(TaskList tasks) throws DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":135,"author":{"gitId":"sherrpass"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":136,"author":{"gitId":"sherrpass"},"content":"            FileWriter fw \u003d new FileWriter(dataFilePath);","lastModifiedDate":"2021-09-02"},{"lineNumber":137,"author":{"gitId":"sherrpass"},"content":"            for (int i \u003d 0; i \u003c tasks.getLength(); i++) {","lastModifiedDate":"2021-08-28"},{"lineNumber":138,"author":{"gitId":"sherrpass"},"content":"                fw.write(tasks.getTask(i).toStringData() + \"\\n\");","lastModifiedDate":"2021-08-28"},{"lineNumber":139,"author":{"gitId":"sherrpass"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":140,"author":{"gitId":"sherrpass"},"content":"            fw.close();","lastModifiedDate":"2021-08-28"},{"lineNumber":141,"author":{"gitId":"sherrpass"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":142,"author":{"gitId":"sherrpass"},"content":"            throw new DukeException(\"Error writing data file:\" + e.getMessage());","lastModifiedDate":"2021-08-28"},{"lineNumber":143,"author":{"gitId":"sherrpass"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":144,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":145,"author":{"gitId":"sherrpass"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"sherrpass":145}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sherrpass"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"sherrpass"},"content":"public class Task implements Cloneable {","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"sherrpass"},"content":"    protected String description;","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"sherrpass"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"sherrpass"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"sherrpass"},"content":"     * Constructor for Task.","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"sherrpass"},"content":"     * @param description Task\u0027s description.","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"sherrpass"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"sherrpass"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"sherrpass"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"sherrpass"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"sherrpass"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"sherrpass"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"sherrpass"},"content":"    public boolean getDoneStatus() {","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"sherrpass"},"content":"        return isDone;","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"sherrpass"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"sherrpass"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"sherrpass"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"sherrpass"},"content":"        return description;","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"sherrpass"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"sherrpass"},"content":"     * Returns the task\u0027s details in a String.","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"sherrpass"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"sherrpass"},"content":"     * @return Task\u0027s details in a String.","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"sherrpass"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"sherrpass"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"sherrpass"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"sherrpass"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"sherrpass"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"sherrpass"},"content":"     * Returns task\u0027s details in a format that will be stored in the data file.","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"sherrpass"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"sherrpass"},"content":"     * @return Task\u0027s details in a format that will be stored in the data file.","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"sherrpass"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"sherrpass"},"content":"    public String toStringData() {","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"sherrpass"},"content":"        return \"|\" + getStatusIcon() + \"|\" + description;","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"sherrpass"},"content":"    public boolean matches(String query) {","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"sherrpass"},"content":"        return description.contains(query);","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"sherrpass"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"sherrpass"},"content":"    public Task clone() {","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"sherrpass"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"sherrpass"},"content":"            return (Task) super.clone();","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"sherrpass"},"content":"        } catch (CloneNotSupportedException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"sherrpass"},"content":"            throw new DukeException(\"Task cannot be cloned.\");","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"sherrpass"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"sherrpass"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"sherrpass":63}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sherrpass"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"sherrpass"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"sherrpass"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"sherrpass"},"content":"public class TaskList implements Cloneable {","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"sherrpass"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"sherrpass"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"sherrpass"},"content":"        tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"sherrpass"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"sherrpass"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"sherrpass"},"content":"    public void replaceWithTaskList(TaskList taskList) {","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"sherrpass"},"content":"        tasks \u003d taskList.tasks;","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"sherrpass"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"sherrpass"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"sherrpass"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"sherrpass"},"content":"     * Removed the task at index.","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"sherrpass"},"content":"     * @param index Index of task to remove.","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"sherrpass"},"content":"     * @return","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"sherrpass"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"sherrpass"},"content":"    public Task removeTask(int index) {","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"sherrpass"},"content":"        assert tasks.size() \u003e index \u0026\u0026 index \u003e\u003d 0 : \"index should have been valididated\";","lastModifiedDate":"2021-09-09"},{"lineNumber":30,"author":{"gitId":"sherrpass"},"content":"        return tasks.remove(index);","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"sherrpass"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"sherrpass"},"content":"        return tasks.get(index);","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"sherrpass"},"content":"    public ArrayList\u003cTask\u003e getTasksOccurringOn(LocalDate date) {","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"sherrpass"},"content":"        ArrayList\u003cTask\u003e relevantTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"sherrpass"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"sherrpass"},"content":"            if ((task instanceof Deadline \u0026\u0026 ((Deadline) task).by.equals(date))","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"sherrpass"},"content":"                    || (task instanceof Event \u0026\u0026 ((Event) task).at.equals(date))) {","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"sherrpass"},"content":"                relevantTasks.add(task);","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"sherrpass"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"sherrpass"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"sherrpass"},"content":"        return relevantTasks;","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"sherrpass"},"content":"    public int getLength() {","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"sherrpass"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"sherrpass"},"content":"    public ArrayList\u003cTask\u003e getMatchingTasks(String query) {","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"sherrpass"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"sherrpass"},"content":"        matchingTasks.removeIf(task -\u003e !task.matches(query));","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"sherrpass"},"content":"        return matchingTasks;","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":58,"author":{"gitId":"sherrpass"},"content":"    public boolean doesContain(Task task) {","lastModifiedDate":"2021-09-09"},{"lineNumber":59,"author":{"gitId":"sherrpass"},"content":"        return tasks.contains(task);","lastModifiedDate":"2021-09-09"},{"lineNumber":60,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":61,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"sherrpass"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"sherrpass"},"content":"    public TaskList clone() {","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"sherrpass"},"content":"        ArrayList\u003cTask\u003e clonedTaskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"sherrpass"},"content":"        for (Task task: this.tasks) {","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"sherrpass"},"content":"            clonedTaskList.add(task.clone());","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"sherrpass"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"sherrpass"},"content":"        return new TaskList(clonedTaskList);","lastModifiedDate":"2021-09-15"},{"lineNumber":69,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"sherrpass"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"sherrpass":70}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sherrpass"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"sherrpass"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"sherrpass"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"sherrpass"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"sherrpass"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"sherrpass"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"sherrpass"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"sherrpass"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"sherrpass"},"content":"    public String toStringData() {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"sherrpass"},"content":"        return \"T\" + super.toStringData();","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"sherrpass"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"sherrpass"},"content":"    public boolean matches(String query) {","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"sherrpass"},"content":"        return super.matches(query) || query.equalsIgnoreCase(\"todo\");","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"sherrpass"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"sherrpass":23}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sherrpass"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"sherrpass"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"sherrpass"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"sherrpass"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"sherrpass"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"sherrpass"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"sherrpass"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"sherrpass"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"sherrpass"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"sherrpass"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"sherrpass"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"sherrpass"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"sherrpass"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"sherrpass"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"sherrpass"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"sherrpass"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"sherrpass"},"content":"public class Ui {","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"sherrpass"},"content":"    public static final String USER_IMAGE_FILEPATH \u003d \"/images/DaUser.png\";","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"sherrpass"},"content":"    public static final String DUKE_IMAGE_FILEPATH \u003d \"/images/DaDuke.png\";","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"sherrpass"},"content":"    public static final String APP_NAME \u003d \"DukeMaster\";","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"sherrpass"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"sherrpass"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"sherrpass"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"sherrpass"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"sherrpass"},"content":"    private Scene scene;","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"sherrpass"},"content":"    private Image user;","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"sherrpass"},"content":"    private Image duke;","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"sherrpass"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"sherrpass"},"content":"     * Constructor for UI.","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"sherrpass"},"content":"     * @param stage FX Stage for UI.","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"sherrpass"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"sherrpass"},"content":"    public Ui(Stage stage) {","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"sherrpass"},"content":"        AnchorPane mainLayout \u003d createComponents();","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"sherrpass"},"content":"        createScene(mainLayout);","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"sherrpass"},"content":"        displayStage(stage);","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"sherrpass"},"content":"        setProperties(stage, mainLayout);","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"sherrpass"},"content":"    private AnchorPane createComponents() {","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"sherrpass"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"sherrpass"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"sherrpass"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"sherrpass"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"sherrpass"},"content":"        user \u003d new Image(this.getClass().getResourceAsStream(USER_IMAGE_FILEPATH));","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"sherrpass"},"content":"        duke \u003d new Image(this.getClass().getResourceAsStream(DUKE_IMAGE_FILEPATH));","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"sherrpass"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2021-09-03"},{"lineNumber":54,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":55,"author":{"gitId":"sherrpass"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2021-09-03"},{"lineNumber":56,"author":{"gitId":"sherrpass"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2021-09-03"},{"lineNumber":57,"author":{"gitId":"sherrpass"},"content":"        return mainLayout;","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":60,"author":{"gitId":"sherrpass"},"content":"    private void createScene(AnchorPane mainLayout) {","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"sherrpass"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2021-09-03"},{"lineNumber":62,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":64,"author":{"gitId":"sherrpass"},"content":"    private void displayStage(Stage stage) {","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"sherrpass"},"content":"        stage.setScene(scene);","lastModifiedDate":"2021-09-03"},{"lineNumber":66,"author":{"gitId":"sherrpass"},"content":"        stage.show();","lastModifiedDate":"2021-09-03"},{"lineNumber":67,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":69,"author":{"gitId":"sherrpass"},"content":"    private void setProperties(Stage stage, AnchorPane mainLayout) {","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"sherrpass"},"content":"        stage.setTitle(APP_NAME);","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"sherrpass"},"content":"        stage.setResizable(false);","lastModifiedDate":"2021-09-03"},{"lineNumber":72,"author":{"gitId":"sherrpass"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2021-09-03"},{"lineNumber":73,"author":{"gitId":"sherrpass"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2021-09-03"},{"lineNumber":74,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":75,"author":{"gitId":"sherrpass"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2021-09-03"},{"lineNumber":76,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":77,"author":{"gitId":"sherrpass"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2021-09-03"},{"lineNumber":78,"author":{"gitId":"sherrpass"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2021-09-03"},{"lineNumber":79,"author":{"gitId":"sherrpass"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2021-09-03"},{"lineNumber":80,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":81,"author":{"gitId":"sherrpass"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2021-09-03"},{"lineNumber":82,"author":{"gitId":"sherrpass"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2021-09-03"},{"lineNumber":83,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":84,"author":{"gitId":"sherrpass"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2021-09-03"},{"lineNumber":85,"author":{"gitId":"sherrpass"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2021-09-03"},{"lineNumber":86,"author":{"gitId":"sherrpass"},"content":"        dialogContainer.setSpacing(10);","lastModifiedDate":"2021-09-03"},{"lineNumber":87,"author":{"gitId":"sherrpass"},"content":"        dialogContainer.setPadding(new Insets(10, 10, 10, 10));","lastModifiedDate":"2021-09-03"},{"lineNumber":88,"author":{"gitId":"sherrpass"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2021-09-03"},{"lineNumber":89,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":90,"author":{"gitId":"sherrpass"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2021-09-03"},{"lineNumber":91,"author":{"gitId":"sherrpass"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2021-09-03"},{"lineNumber":92,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":93,"author":{"gitId":"sherrpass"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2021-09-03"},{"lineNumber":94,"author":{"gitId":"sherrpass"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2021-09-03"},{"lineNumber":95,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":96,"author":{"gitId":"sherrpass"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2021-09-03"},{"lineNumber":97,"author":{"gitId":"sherrpass"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2021-09-03"},{"lineNumber":98,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":99,"author":{"gitId":"sherrpass"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2021-09-03"},{"lineNumber":100,"author":{"gitId":"sherrpass"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2021-09-03"},{"lineNumber":101,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":102,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":103,"author":{"gitId":"sherrpass"},"content":"    private void showResponse(boolean isError, String response) {","lastModifiedDate":"2021-09-17"},{"lineNumber":104,"author":{"gitId":"sherrpass"},"content":"        Label dukeText \u003d new Label(response);","lastModifiedDate":"2021-09-03"},{"lineNumber":105,"author":{"gitId":"sherrpass"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2021-09-03"},{"lineNumber":106,"author":{"gitId":"sherrpass"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(duke), isError)","lastModifiedDate":"2021-09-17"},{"lineNumber":107,"author":{"gitId":"sherrpass"},"content":"        );","lastModifiedDate":"2021-09-03"},{"lineNumber":108,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":109,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":110,"author":{"gitId":"sherrpass"},"content":"    private void showResponse(boolean isError, String... response) {","lastModifiedDate":"2021-09-17"},{"lineNumber":111,"author":{"gitId":"sherrpass"},"content":"        Label dukeText \u003d new Label(String.join(\"\\n\", response));","lastModifiedDate":"2021-09-03"},{"lineNumber":112,"author":{"gitId":"sherrpass"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2021-09-03"},{"lineNumber":113,"author":{"gitId":"sherrpass"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(duke), isError)","lastModifiedDate":"2021-09-17"},{"lineNumber":114,"author":{"gitId":"sherrpass"},"content":"        );","lastModifiedDate":"2021-09-03"},{"lineNumber":115,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":116,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":117,"author":{"gitId":"sherrpass"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":118,"author":{"gitId":"sherrpass"},"content":"     * Displays the user\u0027s command in the UI.","lastModifiedDate":"2021-09-17"},{"lineNumber":119,"author":{"gitId":"sherrpass"},"content":"     * @param command The command to display.","lastModifiedDate":"2021-09-17"},{"lineNumber":120,"author":{"gitId":"sherrpass"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":121,"author":{"gitId":"sherrpass"},"content":"    public void showFullCommand(String command) {","lastModifiedDate":"2021-09-03"},{"lineNumber":122,"author":{"gitId":"sherrpass"},"content":"        Label userText \u003d new Label(command);","lastModifiedDate":"2021-09-03"},{"lineNumber":123,"author":{"gitId":"sherrpass"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2021-09-03"},{"lineNumber":124,"author":{"gitId":"sherrpass"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user))","lastModifiedDate":"2021-09-03"},{"lineNumber":125,"author":{"gitId":"sherrpass"},"content":"        );","lastModifiedDate":"2021-09-03"},{"lineNumber":126,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":127,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":128,"author":{"gitId":"sherrpass"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":129,"author":{"gitId":"sherrpass"},"content":"     * Displays that undo command is successfully completed.","lastModifiedDate":"2021-09-17"},{"lineNumber":130,"author":{"gitId":"sherrpass"},"content":"     * @param lastHistoryState Previous History State.","lastModifiedDate":"2021-09-17"},{"lineNumber":131,"author":{"gitId":"sherrpass"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":132,"author":{"gitId":"sherrpass"},"content":"    public void showUndone(HistoryState lastHistoryState) {","lastModifiedDate":"2021-09-15"},{"lineNumber":133,"author":{"gitId":"sherrpass"},"content":"        Command previousCommand \u003d lastHistoryState.getCommand();","lastModifiedDate":"2021-09-15"},{"lineNumber":134,"author":{"gitId":"sherrpass"},"content":"        TaskList previousTaskList \u003d lastHistoryState.getTaskList();","lastModifiedDate":"2021-09-15"},{"lineNumber":135,"author":{"gitId":"sherrpass"},"content":"        showResponse(false, \"Successfully undone previous command: \" + previousCommand);","lastModifiedDate":"2021-09-17"},{"lineNumber":136,"author":{"gitId":"sherrpass"},"content":"        showResponse(false, \"Task List after undoing: \");","lastModifiedDate":"2021-09-17"},{"lineNumber":137,"author":{"gitId":"sherrpass"},"content":"        showTaskList(previousTaskList);","lastModifiedDate":"2021-09-15"},{"lineNumber":138,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":139,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":140,"author":{"gitId":"sherrpass"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":141,"author":{"gitId":"sherrpass"},"content":"     * Clears user\u0027s input box.","lastModifiedDate":"2021-09-17"},{"lineNumber":142,"author":{"gitId":"sherrpass"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":143,"author":{"gitId":"sherrpass"},"content":"    public void clearInput() {","lastModifiedDate":"2021-09-03"},{"lineNumber":144,"author":{"gitId":"sherrpass"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-03"},{"lineNumber":145,"author":{"gitId":"sherrpass"},"content":"        assert readCommand().equals(\"\") : \"Should have cleared input field\";","lastModifiedDate":"2021-09-09"},{"lineNumber":146,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":147,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":148,"author":{"gitId":"sherrpass"},"content":"    public Button getSendButton() {","lastModifiedDate":"2021-09-03"},{"lineNumber":149,"author":{"gitId":"sherrpass"},"content":"        return sendButton;","lastModifiedDate":"2021-09-03"},{"lineNumber":150,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":151,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":152,"author":{"gitId":"sherrpass"},"content":"    public TextField getUserInput() {","lastModifiedDate":"2021-09-03"},{"lineNumber":153,"author":{"gitId":"sherrpass"},"content":"        return userInput;","lastModifiedDate":"2021-09-03"},{"lineNumber":154,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":155,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":156,"author":{"gitId":"sherrpass"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-28"},{"lineNumber":157,"author":{"gitId":"sherrpass"},"content":"        return userInput.getText();","lastModifiedDate":"2021-09-03"},{"lineNumber":158,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":159,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":160,"author":{"gitId":"sherrpass"},"content":"    public void showLoadingError() {","lastModifiedDate":"2021-08-28"},{"lineNumber":161,"author":{"gitId":"sherrpass"},"content":"        showResponse(false, \"Error loading data file, starting with empty duke.TaskList.\");","lastModifiedDate":"2021-09-17"},{"lineNumber":162,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":163,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":164,"author":{"gitId":"sherrpass"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2021-08-28"},{"lineNumber":165,"author":{"gitId":"sherrpass"},"content":"        showResponse(true, \"Oops! \" + errorMessage);","lastModifiedDate":"2021-09-17"},{"lineNumber":166,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":167,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":168,"author":{"gitId":"sherrpass"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-08-28"},{"lineNumber":169,"author":{"gitId":"sherrpass"},"content":"        showResponse(false, \"Welcome to \" + APP_NAME, \"What can I do for you?\");","lastModifiedDate":"2021-09-17"},{"lineNumber":170,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":171,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":172,"author":{"gitId":"sherrpass"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":173,"author":{"gitId":"sherrpass"},"content":"     * Displays new task added.","lastModifiedDate":"2021-09-17"},{"lineNumber":174,"author":{"gitId":"sherrpass"},"content":"     * @param task Task added.","lastModifiedDate":"2021-09-17"},{"lineNumber":175,"author":{"gitId":"sherrpass"},"content":"     * @param tasks TaskList after addition of task.","lastModifiedDate":"2021-09-17"},{"lineNumber":176,"author":{"gitId":"sherrpass"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":177,"author":{"gitId":"sherrpass"},"content":"    public void showAddedNewTask(Task task, TaskList tasks) {","lastModifiedDate":"2021-08-28"},{"lineNumber":178,"author":{"gitId":"sherrpass"},"content":"        assert tasks.doesContain(task) : \"Task should be in the TaskList\";","lastModifiedDate":"2021-09-09"},{"lineNumber":179,"author":{"gitId":"sherrpass"},"content":"        showResponse(false, \"Got it. I\u0027ve added this task:\", task.toString(), numberOfTasksToString(tasks));","lastModifiedDate":"2021-09-17"},{"lineNumber":180,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":181,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":182,"author":{"gitId":"sherrpass"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":183,"author":{"gitId":"sherrpass"},"content":"     * Displays task removed.","lastModifiedDate":"2021-09-17"},{"lineNumber":184,"author":{"gitId":"sherrpass"},"content":"     * @param task Task removed.","lastModifiedDate":"2021-09-17"},{"lineNumber":185,"author":{"gitId":"sherrpass"},"content":"     * @param tasks TaskList after removal of task.","lastModifiedDate":"2021-09-17"},{"lineNumber":186,"author":{"gitId":"sherrpass"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":187,"author":{"gitId":"sherrpass"},"content":"    public void showRemovedTask(Task task, TaskList tasks) {","lastModifiedDate":"2021-08-28"},{"lineNumber":188,"author":{"gitId":"sherrpass"},"content":"        assert !tasks.doesContain(task) : \"Task should have been removed from the TaskList\";","lastModifiedDate":"2021-09-09"},{"lineNumber":189,"author":{"gitId":"sherrpass"},"content":"        showResponse(false, \"Noted. I\u0027ve removed this task:\", task.toString(), numberOfTasksToString(tasks));","lastModifiedDate":"2021-09-17"},{"lineNumber":190,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":191,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":192,"author":{"gitId":"sherrpass"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":193,"author":{"gitId":"sherrpass"},"content":"     * Displays task marked as done.","lastModifiedDate":"2021-09-17"},{"lineNumber":194,"author":{"gitId":"sherrpass"},"content":"     * @param task Task marked as done.","lastModifiedDate":"2021-09-17"},{"lineNumber":195,"author":{"gitId":"sherrpass"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":196,"author":{"gitId":"sherrpass"},"content":"    public void showMarkedAsDone(Task task) {","lastModifiedDate":"2021-08-28"},{"lineNumber":197,"author":{"gitId":"sherrpass"},"content":"        assert task.getDoneStatus() : \"Task should have been done\";","lastModifiedDate":"2021-09-09"},{"lineNumber":198,"author":{"gitId":"sherrpass"},"content":"        showResponse(false, \"Nice! I\u0027ve marked this task as done:\", task.toString());","lastModifiedDate":"2021-09-17"},{"lineNumber":199,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":200,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":201,"author":{"gitId":"sherrpass"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":202,"author":{"gitId":"sherrpass"},"content":"     * Displays task list.","lastModifiedDate":"2021-09-17"},{"lineNumber":203,"author":{"gitId":"sherrpass"},"content":"     * @param tasks Task list to display.","lastModifiedDate":"2021-09-17"},{"lineNumber":204,"author":{"gitId":"sherrpass"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":205,"author":{"gitId":"sherrpass"},"content":"    public void showTaskList(TaskList tasks) {","lastModifiedDate":"2021-08-28"},{"lineNumber":206,"author":{"gitId":"sherrpass"},"content":"        StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2021-09-03"},{"lineNumber":207,"author":{"gitId":"sherrpass"},"content":"        for (int i \u003d 0; i \u003c tasks.getLength(); i++) {","lastModifiedDate":"2021-08-28"},{"lineNumber":208,"author":{"gitId":"sherrpass"},"content":"            response.append((i + 1) + \".\" + tasks.getTask(i).toString() + \"\\n\");","lastModifiedDate":"2021-09-03"},{"lineNumber":209,"author":{"gitId":"sherrpass"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":210,"author":{"gitId":"sherrpass"},"content":"        showResponse(false, response.toString());","lastModifiedDate":"2021-09-17"},{"lineNumber":211,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":212,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":213,"author":{"gitId":"sherrpass"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":214,"author":{"gitId":"sherrpass"},"content":"     * Displays the tasks occurring on the date.","lastModifiedDate":"2021-09-17"},{"lineNumber":215,"author":{"gitId":"sherrpass"},"content":"     * @param date Query date.","lastModifiedDate":"2021-09-17"},{"lineNumber":216,"author":{"gitId":"sherrpass"},"content":"     * @param tasks Entire task list.","lastModifiedDate":"2021-09-17"},{"lineNumber":217,"author":{"gitId":"sherrpass"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":218,"author":{"gitId":"sherrpass"},"content":"    public void showOccurringTasks(LocalDate date, TaskList tasks) {","lastModifiedDate":"2021-08-28"},{"lineNumber":219,"author":{"gitId":"sherrpass"},"content":"        ArrayList\u003cTask\u003e relevantTasks \u003d tasks.getTasksOccurringOn(date);","lastModifiedDate":"2021-08-28"},{"lineNumber":220,"author":{"gitId":"sherrpass"},"content":"        showResponse(false, \"Tasks occurring on \"","lastModifiedDate":"2021-09-17"},{"lineNumber":221,"author":{"gitId":"sherrpass"},"content":"                + date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2021-09-03"},{"lineNumber":222,"author":{"gitId":"sherrpass"},"content":"                + \":\", tasksToString(relevantTasks));","lastModifiedDate":"2021-09-03"},{"lineNumber":223,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":224,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":225,"author":{"gitId":"sherrpass"},"content":"    public void showGoodbye() {","lastModifiedDate":"2021-08-29"},{"lineNumber":226,"author":{"gitId":"sherrpass"},"content":"        showResponse(false, \"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-09-17"},{"lineNumber":227,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":228,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":229,"author":{"gitId":"sherrpass"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":230,"author":{"gitId":"sherrpass"},"content":"     * Displays matching tasks based on query.","lastModifiedDate":"2021-09-17"},{"lineNumber":231,"author":{"gitId":"sherrpass"},"content":"     * @param query The query.","lastModifiedDate":"2021-09-17"},{"lineNumber":232,"author":{"gitId":"sherrpass"},"content":"     * @param tasks Entire task list.","lastModifiedDate":"2021-09-17"},{"lineNumber":233,"author":{"gitId":"sherrpass"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":234,"author":{"gitId":"sherrpass"},"content":"    public void showMatchingTasks(String query, TaskList tasks) {","lastModifiedDate":"2021-09-03"},{"lineNumber":235,"author":{"gitId":"sherrpass"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d tasks.getMatchingTasks(query);","lastModifiedDate":"2021-09-03"},{"lineNumber":236,"author":{"gitId":"sherrpass"},"content":"        showResponse(false, \"Here are the matching tasks in your list:\", tasksToString(matchingTasks));","lastModifiedDate":"2021-09-17"},{"lineNumber":237,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":238,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":239,"author":{"gitId":"sherrpass"},"content":"    private String numberOfTasksToString(TaskList tasks) {","lastModifiedDate":"2021-09-03"},{"lineNumber":240,"author":{"gitId":"sherrpass"},"content":"        return \"Now you have \" + tasks.getLength() + \" tasks in the list.\";","lastModifiedDate":"2021-09-03"},{"lineNumber":241,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":242,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":243,"author":{"gitId":"sherrpass"},"content":"    private String tasksToString(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-03"},{"lineNumber":244,"author":{"gitId":"sherrpass"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-08-29"},{"lineNumber":245,"author":{"gitId":"sherrpass"},"content":"        StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2021-09-03"},{"lineNumber":246,"author":{"gitId":"sherrpass"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2021-08-29"},{"lineNumber":247,"author":{"gitId":"sherrpass"},"content":"            response.append((count + 1) + \". \" + task + \"\\n\");","lastModifiedDate":"2021-09-03"},{"lineNumber":248,"author":{"gitId":"sherrpass"},"content":"            count++;","lastModifiedDate":"2021-08-28"},{"lineNumber":249,"author":{"gitId":"sherrpass"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":250,"author":{"gitId":"sherrpass"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-29"},{"lineNumber":251,"author":{"gitId":"sherrpass"},"content":"            response.append(\"No tasks.\");","lastModifiedDate":"2021-09-03"},{"lineNumber":252,"author":{"gitId":"sherrpass"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":253,"author":{"gitId":"sherrpass"},"content":"        return response.toString();","lastModifiedDate":"2021-09-03"},{"lineNumber":254,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":255,"author":{"gitId":"sherrpass"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"sherrpass":255}},{"path":"src/main/java/duke/UndoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sherrpass"},"content":"package duke;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"sherrpass"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"sherrpass"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"sherrpass"},"content":"    public void execute(TaskList tasks, Storage storage, Ui ui) throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"sherrpass"},"content":"        if (storage.isHistoryEmpty()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"sherrpass"},"content":"            throw new DukeException(\"Can no longer undo any more commands.\");","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"sherrpass"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"sherrpass"},"content":"        HistoryState lastHistoryState \u003d storage.popFromHistory();","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"sherrpass"},"content":"        tasks.replaceWithTaskList(lastHistoryState.getTaskList());","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"sherrpass"},"content":"        storage.updateTasks(tasks);","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"sherrpass"},"content":"        ui.showUndone(lastHistoryState);","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"sherrpass"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"sherrpass"},"content":"    public String toString() {","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"sherrpass"},"content":"        return \"Undo previous command Command\";","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"sherrpass"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"sherrpass":19}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sherrpass"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"sherrpass"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"sherrpass"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"sherrpass"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"sherrpass"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"sherrpass"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"sherrpass"},"content":"    public void toStringTest() {","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"sherrpass"},"content":"        Deadline deadline \u003d new Deadline(\"deadline description\", LocalDate.parse(\"2021-12-12\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"sherrpass"},"content":"        assertEquals(\"[D][ ] deadline description (by: Dec 12 2021)\", deadline.toString());","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"sherrpass"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"sherrpass"},"content":"    public void toStringData() {","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"sherrpass"},"content":"        Deadline deadline \u003d new Deadline(\"deadline description\", LocalDate.parse(\"2021-12-12\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"sherrpass"},"content":"        assertEquals(\"D| |deadline description|2021-12-12\", deadline.toStringData());","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"sherrpass"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"sherrpass"},"content":"    public void getDueDate() {","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"sherrpass"},"content":"        Deadline deadline \u003d new Deadline(\"deadline description\", LocalDate.parse(\"2021-12-12\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"sherrpass"},"content":"        assertEquals(LocalDate.parse(\"2021-12-12\"), deadline.getDueDate());","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"sherrpass"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"sherrpass":27}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sherrpass"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"sherrpass"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"sherrpass"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"sherrpass"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"sherrpass"},"content":"import java.io.File;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"sherrpass"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"sherrpass"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"sherrpass"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"sherrpass"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"sherrpass"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"sherrpass"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"sherrpass"},"content":"public class StorageTest {","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"sherrpass"},"content":"    private static final String TEST_DATA_FOLDER_PATH \u003d \"./dataTest\";","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"sherrpass"},"content":"    private static final String TEST_DATA_FILE_PATH \u003d \"./dataTest/dataTest.txt\";","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"sherrpass"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"sherrpass"},"content":"    public void load() {","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"sherrpass"},"content":"        File directory \u003d new File(TEST_DATA_FOLDER_PATH);","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"sherrpass"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"sherrpass"},"content":"            directory.mkdir();","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"sherrpass"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"sherrpass"},"content":"        File f;","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"sherrpass"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"sherrpass"},"content":"            f \u003d new File(TEST_DATA_FILE_PATH);","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"sherrpass"},"content":"            if (!f.exists()) {","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"sherrpass"},"content":"                f.createNewFile();","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"sherrpass"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"sherrpass"},"content":"            FileWriter fw \u003d new FileWriter(TEST_DATA_FILE_PATH);","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"sherrpass"},"content":"            fw.write(\"T| |todo description\\n\");","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"sherrpass"},"content":"            fw.write(\"D|X|deadline description|2021-12-12\\n\");","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"sherrpass"},"content":"            fw.write(\"E| |event description|2012-11-11\");","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"sherrpass"},"content":"            fw.close();","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"sherrpass"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"sherrpass"},"content":"            fail(\"Error creating test data file\");","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"sherrpass"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"sherrpass"},"content":"        Storage storage \u003d new Storage(TEST_DATA_FILE_PATH);","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"sherrpass"},"content":"        ArrayList\u003cTask\u003e actualTasks \u003d storage.load();","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"sherrpass"},"content":"        assertEquals(3, actualTasks.size());","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"sherrpass"},"content":"        assert(actualTasks.get(0) instanceof Todo);","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"sherrpass"},"content":"        assert(actualTasks.get(0).getDescription().equals(\"todo description\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"sherrpass"},"content":"        assertFalse(actualTasks.get(0).getDoneStatus());","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"sherrpass"},"content":"        assert(actualTasks.get(1) instanceof Deadline);","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"sherrpass"},"content":"        assert(actualTasks.get(1).getDescription().equals(\"deadline description\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"sherrpass"},"content":"        assert(actualTasks.get(1).getDoneStatus());","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"sherrpass"},"content":"        assertEquals(LocalDate.parse(\"2021-12-12\"), ((Deadline) actualTasks.get(1)).getDueDate());","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"sherrpass"},"content":"        assert(actualTasks.get(2) instanceof Event);","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"sherrpass"},"content":"        assert(actualTasks.get(2).getDescription().equals(\"event description\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"sherrpass"},"content":"        assertFalse(actualTasks.get(2).getDoneStatus());","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"sherrpass"},"content":"        assertEquals(LocalDate.parse(\"2012-11-11\"), ((Event) actualTasks.get(2)).getEventDate());","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"sherrpass"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"sherrpass"},"content":"    @AfterAll","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"sherrpass"},"content":"    public static void cleanUpDataFile() {","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"sherrpass"},"content":"        File f \u003d new File(TEST_DATA_FILE_PATH);","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"sherrpass"},"content":"        if (f.exists()) {","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"sherrpass"},"content":"            f.delete();","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"sherrpass"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"sherrpass"},"content":"        File directory \u003d new File(TEST_DATA_FOLDER_PATH);","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"sherrpass"},"content":"        if (directory.exists()) {","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"sherrpass"},"content":"            directory.delete();","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"sherrpass"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"sherrpass"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"sherrpass"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"sherrpass":70}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sherrpass"},"content":"todo borrow book","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"sherrpass"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"sherrpass"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"sherrpass"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"sherrpass"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"sherrpass"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"sherrpass"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"sherrpass":7}}]
