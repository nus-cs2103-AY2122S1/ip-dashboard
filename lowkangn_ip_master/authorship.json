[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"lowkangn"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"lowkangn"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"lowkangn"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"lowkangn"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"lowkangn"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"lowkangn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"lowkangn"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"lowkangn"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"lowkangn"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"lowkangn"},"content":"    private Duke(String filepath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"        this.storage \u003d new Storage(filepath);","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"lowkangn"},"content":"            this.taskList \u003d new TaskList(this.storage.load());","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"lowkangn"},"content":"            this.ui.showError(de);","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"lowkangn"},"content":"            this.taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"lowkangn"},"content":"     * Runs the Duke bot.","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"lowkangn"},"content":"    public void run() {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"lowkangn"},"content":"        boolean isDukeOpen \u003d true;","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"lowkangn"},"content":"        while (isDukeOpen) {","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"lowkangn"},"content":"            try {","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"lowkangn"},"content":"                String userInput \u003d this.ui.readCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"lowkangn"},"content":"                Parser.CommandType type \u003d Parser.decipherInput(userInput);","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"lowkangn"},"content":"                if (type \u003d\u003d Parser.CommandType.EXIT) {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"lowkangn"},"content":"                    //Closes the program.","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"lowkangn"},"content":"                    this.storage.save(this.taskList);","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"lowkangn"},"content":"                    isDukeOpen \u003d false;","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"lowkangn"},"content":"                    this.ui.exit();","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"lowkangn"},"content":"                } else if (type \u003d\u003d Parser.CommandType.LIST) {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"lowkangn"},"content":"                    // List all tasks in the task list.","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"lowkangn"},"content":"                    this.ui.printMessage(this.taskList.listTasks());","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"lowkangn"},"content":"                } else if (type \u003d\u003d Parser.CommandType.DONE) {","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"lowkangn"},"content":"                    // Mark a certain task as done.","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"lowkangn"},"content":"                    String[] splitString \u003d userInput.split(\" \");","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"lowkangn"},"content":"                    if (splitString.length \u003e 1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"lowkangn"},"content":"                        int taskNumber \u003d Integer.parseInt(splitString[1].trim());","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"lowkangn"},"content":"                        this.ui.printMessage(this.taskList.markTaskAsDone(taskNumber));","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"lowkangn"},"content":"                        this.storage.save(this.taskList);","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":60,"author":{"gitId":"lowkangn"},"content":"                    } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":61,"author":{"gitId":"lowkangn"},"content":"                        throw new DukeException(\"☹ OOPS!!! Please state which task number \"","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"lowkangn"},"content":"                                + \"you want to mark\\n as done.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"lowkangn"},"content":"                    }","lastModifiedDate":"2021-08-16"},{"lineNumber":64,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":65,"author":{"gitId":"lowkangn"},"content":"                } else if (type \u003d\u003d Parser.CommandType.DELETE) {","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"lowkangn"},"content":"                    // Deletes a task from the task list.","lastModifiedDate":"2021-08-16"},{"lineNumber":67,"author":{"gitId":"lowkangn"},"content":"                    String[] splitString \u003d userInput.split(\" \", 2);","lastModifiedDate":"2021-08-16"},{"lineNumber":68,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":69,"author":{"gitId":"lowkangn"},"content":"                    if (splitString.length \u003e 1 \u0026\u0026 splitString[1].trim().length() \u003e 0) {","lastModifiedDate":"2021-08-16"},{"lineNumber":70,"author":{"gitId":"lowkangn"},"content":"                        int taskNumber \u003d Integer.parseInt(splitString[1].trim());","lastModifiedDate":"2021-08-16"},{"lineNumber":71,"author":{"gitId":"lowkangn"},"content":"                        this.ui.printMessage(this.taskList.deleteTask(taskNumber));","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"lowkangn"},"content":"                        this.storage.save(this.taskList);","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":74,"author":{"gitId":"lowkangn"},"content":"                    } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"lowkangn"},"content":"                        throw new DukeException(\"☹ OOPS!!! Please state which task number \"","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"lowkangn"},"content":"                                + \"you want to\\n delete.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"lowkangn"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"lowkangn"},"content":"                } else if (type \u003d\u003d Parser.CommandType.FIND) {","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"lowkangn"},"content":"                    // Finds the tasks in the task list that contain the String.","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"lowkangn"},"content":"                    String[] splitString \u003d userInput.split(\" \", 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"lowkangn"},"content":"                    if (splitString.length \u003e 1 \u0026\u0026 splitString[1].trim().length() \u003e 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"lowkangn"},"content":"                        String toSearch \u003d splitString[1].trim();","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"lowkangn"},"content":"                        this.ui.printMessage(this.taskList.find(toSearch));","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"lowkangn"},"content":"                    } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"lowkangn"},"content":"                        throw new DukeException(\"☹ OOPS!!! Please give a search query.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"lowkangn"},"content":"                    }","lastModifiedDate":"2021-08-16"},{"lineNumber":90,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":91,"author":{"gitId":"lowkangn"},"content":"                } else if (type \u003d\u003d Parser.CommandType.UNKNOWN) {","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"lowkangn"},"content":"                    // Incorrect user input.","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"lowkangn"},"content":"                    throw new DukeException(","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"lowkangn"},"content":"                            \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":96,"author":{"gitId":"lowkangn"},"content":"                } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"lowkangn"},"content":"                    // Adds a Task to the task list.","lastModifiedDate":"2021-08-16"},{"lineNumber":98,"author":{"gitId":"lowkangn"},"content":"                    String[] split \u003d userInput.split(\" \", 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":100,"author":{"gitId":"lowkangn"},"content":"                    if (split.length \u003e 1 \u0026\u0026 split[1].trim().length() \u003e 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"lowkangn"},"content":"                        String substring \u003d split[1].trim();","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"lowkangn"},"content":"                        Task newTask;","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"lowkangn"},"content":"                        switch (type) {","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"lowkangn"},"content":"                            case TODO:","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"lowkangn"},"content":"                                newTask \u003d new ToDo(substring, false);","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"lowkangn"},"content":"                                break;","lastModifiedDate":"2021-08-22"},{"lineNumber":107,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"lowkangn"},"content":"                            case DEADLINE:","lastModifiedDate":"2021-08-22"},{"lineNumber":109,"author":{"gitId":"lowkangn"},"content":"                                String[] nameAndDeadline \u003d substring.split(\" /by \");","lastModifiedDate":"2021-08-22"},{"lineNumber":110,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"lowkangn"},"content":"                                if (nameAndDeadline.length \u003e 1","lastModifiedDate":"2021-08-22"},{"lineNumber":112,"author":{"gitId":"lowkangn"},"content":"                                        \u0026\u0026 nameAndDeadline[1].trim().length() \u003e 0) {","lastModifiedDate":"2021-08-22"},{"lineNumber":113,"author":{"gitId":"lowkangn"},"content":"                                    LocalDateTime deadline \u003d Parser","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"lowkangn"},"content":"                                            .formatDateTime(nameAndDeadline[1]);","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"lowkangn"},"content":"                                    newTask \u003d new Deadline(nameAndDeadline[0], deadline,","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"lowkangn"},"content":"                                            false);","lastModifiedDate":"2021-08-22"},{"lineNumber":117,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"lowkangn"},"content":"                                } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":119,"author":{"gitId":"lowkangn"},"content":"                                    throw new DukeException(\"☹ OOPS!!! Please provide a date or \"","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"lowkangn"},"content":"                                            + \"time for the deadline.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":121,"author":{"gitId":"lowkangn"},"content":"                                }","lastModifiedDate":"2021-08-16"},{"lineNumber":122,"author":{"gitId":"lowkangn"},"content":"                                break;","lastModifiedDate":"2021-08-22"},{"lineNumber":123,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"lowkangn"},"content":"                            default:","lastModifiedDate":"2021-08-22"},{"lineNumber":125,"author":{"gitId":"lowkangn"},"content":"                                String[] nameAndTime \u003d substring.split(\" /at \");","lastModifiedDate":"2021-08-16"},{"lineNumber":126,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"lowkangn"},"content":"                                if (nameAndTime.length \u003e 1","lastModifiedDate":"2021-08-23"},{"lineNumber":128,"author":{"gitId":"lowkangn"},"content":"                                        \u0026\u0026 nameAndTime[1].trim().length() \u003e 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"lowkangn"},"content":"                                    String[] splitEndTime \u003d nameAndTime[1].split(\" - \");","lastModifiedDate":"2021-08-23"},{"lineNumber":130,"author":{"gitId":"lowkangn"},"content":"                                    LocalDateTime eventTime \u003d Parser","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"lowkangn"},"content":"                                            .formatDateTime(splitEndTime[0]);","lastModifiedDate":"2021-08-23"},{"lineNumber":132,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":133,"author":{"gitId":"lowkangn"},"content":"                                    if (splitEndTime.length \u003e 1","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"lowkangn"},"content":"                                            \u0026\u0026 splitEndTime[1].trim().length() \u003e 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"lowkangn"},"content":"                                        LocalTime endTime \u003d LocalTime.parse(splitEndTime[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"lowkangn"},"content":"                                        newTask \u003d new Event(nameAndTime[0],","lastModifiedDate":"2021-08-23"},{"lineNumber":137,"author":{"gitId":"lowkangn"},"content":"                                                eventTime, endTime, false);","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":139,"author":{"gitId":"lowkangn"},"content":"                                    } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":140,"author":{"gitId":"lowkangn"},"content":"                                        throw new DukeException(\"☹ OOPS!!! Please provide an end \"","lastModifiedDate":"2021-08-23"},{"lineNumber":141,"author":{"gitId":"lowkangn"},"content":"                                                + \"time for the event.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":142,"author":{"gitId":"lowkangn"},"content":"                                    }","lastModifiedDate":"2021-08-23"},{"lineNumber":143,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":144,"author":{"gitId":"lowkangn"},"content":"                                } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":145,"author":{"gitId":"lowkangn"},"content":"                                    throw new DukeException(\"☹ OOPS!!! Please provide a date or \"","lastModifiedDate":"2021-08-22"},{"lineNumber":146,"author":{"gitId":"lowkangn"},"content":"                                            + \"time for the event.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":147,"author":{"gitId":"lowkangn"},"content":"                                }","lastModifiedDate":"2021-08-16"},{"lineNumber":148,"author":{"gitId":"lowkangn"},"content":"                                break;","lastModifiedDate":"2021-08-22"},{"lineNumber":149,"author":{"gitId":"lowkangn"},"content":"                        }","lastModifiedDate":"2021-08-16"},{"lineNumber":150,"author":{"gitId":"lowkangn"},"content":"                        this.ui.printMessage(this.taskList.addTask(newTask));","lastModifiedDate":"2021-08-24"},{"lineNumber":151,"author":{"gitId":"lowkangn"},"content":"                        this.storage.save(this.taskList);","lastModifiedDate":"2021-08-24"},{"lineNumber":152,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":153,"author":{"gitId":"lowkangn"},"content":"                    } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":154,"author":{"gitId":"lowkangn"},"content":"                        throw new DukeException(\"☹ OOPS!!! The description of a \" + split[0]","lastModifiedDate":"2021-08-24"},{"lineNumber":155,"author":{"gitId":"lowkangn"},"content":"                                + \" cannot be empty.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":156,"author":{"gitId":"lowkangn"},"content":"                    }","lastModifiedDate":"2021-08-22"},{"lineNumber":157,"author":{"gitId":"lowkangn"},"content":"                }","lastModifiedDate":"2021-08-16"},{"lineNumber":158,"author":{"gitId":"lowkangn"},"content":"            } catch (DukeException de) {","lastModifiedDate":"2021-08-22"},{"lineNumber":159,"author":{"gitId":"lowkangn"},"content":"                this.ui.showError(de);","lastModifiedDate":"2021-08-24"},{"lineNumber":160,"author":{"gitId":"lowkangn"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":161,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":162,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":163,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":164,"author":{"gitId":"lowkangn"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-24"},{"lineNumber":165,"author":{"gitId":"lowkangn"},"content":"        Duke duke \u003d new Duke(\"save.txt\");","lastModifiedDate":"2021-08-24"},{"lineNumber":166,"author":{"gitId":"lowkangn"},"content":"        duke.run();","lastModifiedDate":"2021-08-24"},{"lineNumber":167,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":2,"lowkangn":166}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"lowkangn"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"lowkangn"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"lowkangn"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"lowkangn"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"lowkangn"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":"public abstract class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"lowkangn"},"content":"    public enum CommandType {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":"        EXIT,","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"lowkangn"},"content":"        LIST,","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"lowkangn"},"content":"        DONE,","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"lowkangn"},"content":"        DELETE,","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"lowkangn"},"content":"        FIND,","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"lowkangn"},"content":"        TODO,","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"        DEADLINE,","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"        EVENT,","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"        UNKNOWN","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"lowkangn"},"content":"     * Takes in the user\u0027s String input and determines the type of Duke command it is.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"lowkangn"},"content":"     * @param input The String input given by the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"lowkangn"},"content":"     * @return The type of Duke command represented by the String input.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"lowkangn"},"content":"    public static CommandType decipherInput(String input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"lowkangn"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"lowkangn"},"content":"            return CommandType.EXIT;","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"lowkangn"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"lowkangn"},"content":"            return CommandType.LIST;","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"lowkangn"},"content":"        } else if (input.startsWith(\"done\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"lowkangn"},"content":"            return CommandType.DONE;","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"lowkangn"},"content":"        } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"lowkangn"},"content":"            return CommandType.DELETE;","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"lowkangn"},"content":"        } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"lowkangn"},"content":"            return CommandType.FIND;","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"lowkangn"},"content":"        } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"lowkangn"},"content":"            return CommandType.TODO;","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"lowkangn"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"lowkangn"},"content":"            return CommandType.DEADLINE;","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"lowkangn"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"lowkangn"},"content":"            return CommandType.EVENT;","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"lowkangn"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"lowkangn"},"content":"            return CommandType.UNKNOWN;","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"lowkangn"},"content":"     * Takes in the string representation of a task and returns the task represented by it.","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"lowkangn"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"lowkangn"},"content":"     * @param taskString The string representation of a task.","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"lowkangn"},"content":"     * @return The task represented by the string.","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"lowkangn"},"content":"    public static Task processTaskString(String taskString) {","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"lowkangn"},"content":"        char type \u003d taskString.charAt(1);","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"lowkangn"},"content":"        boolean isDone \u003d taskString.charAt(0) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"lowkangn"},"content":"        String[] split \u003d taskString.split(\"/\");","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"lowkangn"},"content":"        switch (type) {","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"lowkangn"},"content":"            case \u0027T\u0027:","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"lowkangn"},"content":"                return new ToDo(split[1], isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"lowkangn"},"content":"            case \u0027D\u0027:","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"lowkangn"},"content":"                String deadlineName \u003d split[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"lowkangn"},"content":"                String deadlineDateAndTime \u003d split[2];","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"lowkangn"},"content":"                return new Deadline(deadlineName, LocalDateTime.parse(deadlineDateAndTime), isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"lowkangn"},"content":"            default:","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"lowkangn"},"content":"                String eventName \u003d split[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"lowkangn"},"content":"                String eventDateAndTime \u003d split[2];","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"lowkangn"},"content":"                String eventEndTime \u003d split[3];","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"lowkangn"},"content":"                return new Event(eventName, LocalDateTime.parse(eventDateAndTime),","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"lowkangn"},"content":"                        LocalTime.parse(eventEndTime), isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"lowkangn"},"content":"     * Takes in a string representation of a date and time and parses it into a LocalDateTime object.","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"lowkangn"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"lowkangn"},"content":"     * @param dateAndTime The given date and time.","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"lowkangn"},"content":"     * @return A LocalDateTime object.","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"lowkangn"},"content":"     * @throws DukeException If the input date and time are incorrectly configured.","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"lowkangn"},"content":"    public static LocalDateTime formatDateTime(String dateAndTime) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"lowkangn"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"lowkangn"},"content":"            String[] split \u003d dateAndTime.split(\", \");","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"lowkangn"},"content":"            String toFormat \u003d split[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"lowkangn"},"content":"            if (split.length \u003e 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"lowkangn"},"content":"                toFormat +\u003d \"T\" + split[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"lowkangn"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"lowkangn"},"content":"                toFormat +\u003d \"T\" + \"00:00\";","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"lowkangn"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"lowkangn"},"content":"            return LocalDateTime.parse(toFormat);","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"lowkangn"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"lowkangn"},"content":"            throw new DukeException(\"☹ OOPS!!! Please use the following format for date and time:\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"lowkangn"},"content":"                    + \"yyyy-MM-dd, HH:mm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"lowkangn"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"lowkangn":111}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"lowkangn"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"lowkangn"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"import java.io.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"lowkangn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"lowkangn"},"content":"    private String filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"lowkangn"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"lowkangn"},"content":"     * Reads from the save file if it exists, otherwise a new save file is created.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"lowkangn"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"lowkangn"},"content":"     * @return The previously saved task list, if it exists.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"     * @throws DukeException If there was an error reading or writing to the save file.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"lowkangn"},"content":"        File save \u003d new File(this.filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"lowkangn"},"content":"            ArrayList\u003cTask\u003e savedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"            if (save.isFile()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"lowkangn"},"content":"                // If the save file exists, return the previously saved list.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"lowkangn"},"content":"                BufferedReader br \u003d new BufferedReader(new FileReader(this.filePath));","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"                String nextLine \u003d br.readLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"lowkangn"},"content":"                while (nextLine !\u003d null) {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"lowkangn"},"content":"                    savedList.add(Parser.processTaskString(nextLine));","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"lowkangn"},"content":"                    nextLine \u003d br.readLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"lowkangn"},"content":"                }                br.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"lowkangn"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"lowkangn"},"content":"                // If the save file does not exist, create a new save file.","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"lowkangn"},"content":"                BufferedWriter bw \u003d new BufferedWriter(new FileWriter(this.filePath));","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"lowkangn"},"content":"                bw.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"lowkangn"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"lowkangn"},"content":"            return savedList;","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"lowkangn"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"lowkangn"},"content":"            throw new DukeException(\"☹ OOPS!!! There was an error starting Duke.\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"lowkangn"},"content":"            + \"Your changes may not be saved.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"lowkangn"},"content":"     * Saves the current task list to the save file.","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"lowkangn"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"lowkangn"},"content":"     * @throws DukeException If there was an error writing to the save file.","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"lowkangn"},"content":"    public void save(TaskList taskList) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"lowkangn"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"lowkangn"},"content":"            BufferedWriter bw \u003d new BufferedWriter(new FileWriter(this.filePath));","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"lowkangn"},"content":"            for (Task task : taskList.get()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"lowkangn"},"content":"                bw.write(task.parseToString() + \"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"lowkangn"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"lowkangn"},"content":"            bw.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"lowkangn"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"lowkangn"},"content":"            throw new DukeException(\"☹ OOPS!!! There was an error updating your task list.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"lowkangn"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"lowkangn":64}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"lowkangn"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"lowkangn"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"lowkangn"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"lowkangn"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"lowkangn"},"content":"    private int taskCount;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"lowkangn"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":"        this.taskList \u003d tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"lowkangn"},"content":"        this.taskCount \u003d tasks.size();","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"lowkangn"},"content":"    public ArrayList\u003cTask\u003e get() {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"lowkangn"},"content":"        return this.taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"lowkangn"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"lowkangn"},"content":"     * @param task The task to be added to the task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"lowkangn"},"content":"     * @return A String output indicating that the task had been added to the task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"lowkangn"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"lowkangn"},"content":"        this.taskList.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"        this.taskCount++;","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"lowkangn"},"content":"        String taskCount \u003d (this.taskCount \u003d\u003d 1) ? \"1 task\" : this.taskCount + \" tasks\";","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"lowkangn"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + \"  \" + task.toString()","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"lowkangn"},"content":"                + \"\\n\" + \"Now you have \" + taskCount + \" in the list.\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"lowkangn"},"content":"     * Lists the current tasks in the task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"lowkangn"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"lowkangn"},"content":"     * @return A String representing the tasks in the task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"lowkangn"},"content":"    public String listTasks() {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"lowkangn"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"lowkangn"},"content":"        String header \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"lowkangn"},"content":"        String result \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"lowkangn"},"content":"        for (Task task : this.taskList) {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"lowkangn"},"content":"            if (task !\u003d null) {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"lowkangn"},"content":"                result +\u003d ++i + \".\" + task.toString() + \"\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"lowkangn"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"lowkangn"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"lowkangn"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"lowkangn"},"content":"        if (i \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"lowkangn"},"content":"            return header + \"Your list is currently empty.\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"lowkangn"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"lowkangn"},"content":"            return header + result;","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"lowkangn"},"content":"     * Marks a certain task in the task list as done, using its task number.","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"lowkangn"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"lowkangn"},"content":"     * @param taskNumber The number of the task in the task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"lowkangn"},"content":"     * @return A String output indicating that the task was mark as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"lowkangn"},"content":"     * @throws DukeException If the task number does not exist.","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"lowkangn"},"content":"    public String markTaskAsDone(int taskNumber) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"lowkangn"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"lowkangn"},"content":"            Task doneTask \u003d this.taskList.get(taskNumber - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"lowkangn"},"content":"            doneTask.markDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"lowkangn"},"content":"            return \"Nice! I\u0027ve marked this task as done:\\n\" + \"  \"","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"lowkangn"},"content":"                    + doneTask.toString() +\"\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"lowkangn"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"lowkangn"},"content":"            throw new DukeException(\"☹ OOPS!!! That task does not exist.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"lowkangn"},"content":"     * Deletes a certain task from the task list, using its task number.","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"lowkangn"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"lowkangn"},"content":"     * @param taskNumber The number of the task in the task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"lowkangn"},"content":"     * @return A String output indicating that the task was deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"lowkangn"},"content":"     * @throws DukeException If the task number does not exist.","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"lowkangn"},"content":"    public String deleteTask(int taskNumber) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"lowkangn"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"lowkangn"},"content":"            Task deletedTask \u003d this.taskList.get(taskNumber - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"lowkangn"},"content":"            this.taskList.remove(taskNumber - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"lowkangn"},"content":"            this.taskCount--;","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"lowkangn"},"content":"            String taskCount \u003d (this.taskCount \u003d\u003d 1) ? \"1 task\" : this.taskCount + \" tasks\";","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"lowkangn"},"content":"            return \"Noted. I\u0027ve removed this task:\\n\" + \"  \"","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"lowkangn"},"content":"                    + deletedTask.toString() + \"\\n\" + \"Now you have \" + taskCount","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"lowkangn"},"content":"                    + \" in the list.\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"lowkangn"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"lowkangn"},"content":"            throw new DukeException(\"☹ OOPS!!! That task does not exist.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"lowkangn"},"content":"     * Takes in a String and returns a list of the tasks in the task list that contain the given String","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"lowkangn"},"content":"     * within their descriptions.","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"lowkangn"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"lowkangn"},"content":"     * @param string The given String.","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"lowkangn"},"content":"     * @return A String representing the list of tasks that contain the given String.","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"lowkangn"},"content":"    public String find(String string) {","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"lowkangn"},"content":"        ArrayList\u003cTask\u003e found \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"lowkangn"},"content":"        for (Task task : this.taskList) {","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"lowkangn"},"content":"            if (task.hasSubString(string)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"lowkangn"},"content":"                found.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"lowkangn"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"lowkangn"},"content":"        if (found.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"lowkangn"},"content":"            return \"No matching tasks were found.\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"lowkangn"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"lowkangn"},"content":"            StringBuilder result \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"lowkangn"},"content":"            int i \u003d 0;","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"lowkangn"},"content":"            for (Task task : found) {","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"lowkangn"},"content":"                result.append(++i).append(\".\").append(task.toString()).append(\"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"lowkangn"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"lowkangn"},"content":"            return result.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"lowkangn"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"lowkangn":125}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"lowkangn"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"lowkangn"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"lowkangn"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"lowkangn"},"content":"    private final Scanner sc;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"    private final String LINE_SEPARATOR \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"lowkangn"},"content":"    public Ui() {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"lowkangn"},"content":"        String OPENING_MESSAGE \u003d \"Hello! I\u0027m Duke\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":"                + \"What can I do for you?\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"lowkangn"},"content":"        this.printMessage(OPENING_MESSAGE);","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"lowkangn"},"content":"     * Scans in the next line of user input and converts to a String which is returned.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"     * @return The user input converted to a String.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"lowkangn"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":"        return sc.nextLine().trim();","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"lowkangn"},"content":"     * Takes in a DukeException and wraps its message around with line separators before printing","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"lowkangn"},"content":"     * the error message to console.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"lowkangn"},"content":"     * @param de The given DukeException.","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"lowkangn"},"content":"    public void showError(DukeException de) {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"lowkangn"},"content":"        System.out.println(LINE_SEPARATOR + \"\\n\" + de.getMessage() + \"\\n\" + LINE_SEPARATOR);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"lowkangn"},"content":"     * Takes in a String and wraps it in line separators before printing the result to console.","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"lowkangn"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"lowkangn"},"content":"     * @param string The given String.","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"lowkangn"},"content":"    public void printMessage(String string) {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"lowkangn"},"content":"        System.out.println(LINE_SEPARATOR + \"\\n\" + string + LINE_SEPARATOR);","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"lowkangn"},"content":"     * Exits the UI.","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"lowkangn"},"content":"    public void exit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"lowkangn"},"content":"        sc.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"lowkangn"},"content":"        String CLOSING_MESSAGE \u003d \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"lowkangn"},"content":"        this.printMessage(CLOSING_MESSAGE);","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"lowkangn"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"lowkangn":55}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"lowkangn"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"lowkangn"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"        super(message);","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"lowkangn"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"lowkangn":8}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"lowkangn"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"lowkangn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"lowkangn"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"    private final LocalDateTime dateAndTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"lowkangn"},"content":"    public Deadline(String taskName, LocalDateTime dateAndTime, boolean isDone) {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":"        super(taskName, isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"lowkangn"},"content":"        this.dateAndTime \u003d dateAndTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"lowkangn"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"lowkangn"},"content":"     * Returns the String representation of the Deadline task.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"lowkangn"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"     * @return The String representation of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"     * Returns the string representation of the Deadline task.","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"lowkangn"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"lowkangn"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e Level-9","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"lowkangn"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"lowkangn"},"content":"        String dateAndTime \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy \u0027at\u0027 h:mm a\")","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"                .format(this.dateAndTime);","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"lowkangn"},"content":"        if (super.isDone) {","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"lowkangn"},"content":"            return \"[D][X] \" + super.taskName + \" (by: \" + dateAndTime + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"lowkangn"},"content":"        } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"lowkangn"},"content":"            return \"[D][ ] \" + super.taskName + \" (by: \" + dateAndTime + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"lowkangn"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"lowkangn"},"content":"     * Returns a String representation of the task to store within the save file.","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"lowkangn"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"lowkangn"},"content":"     * @return The String representation of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"lowkangn"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"lowkangn"},"content":"     * Returns a string representation of the task to store within the save file.","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"lowkangn"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"lowkangn"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"lowkangn"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e Level-9","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"lowkangn"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"lowkangn"},"content":"    public String parseToString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"lowkangn"},"content":"        String result \u003d super.isDone ? \"X\" : \"0\";","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"lowkangn"},"content":"        result +\u003d \"D/\" + super.taskName + \"/\" + this.dateAndTime.toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"lowkangn"},"content":"        return result;","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"lowkangn"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"lowkangn":55}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"lowkangn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"lowkangn"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"lowkangn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"lowkangn"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"lowkangn"},"content":"    private final LocalDateTime dateAndTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"    private final LocalTime endTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"lowkangn"},"content":"    public Event(String taskName, LocalDateTime dateAndTime, LocalTime endTime, boolean isDone) {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":"        super(taskName, isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"lowkangn"},"content":"        this.dateAndTime \u003d dateAndTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"lowkangn"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"lowkangn"},"content":"     * Returns the String representation of the Deadline task.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"     * @return The String representation of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"lowkangn"},"content":"     * Returns the string representation of the Deadline task.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"lowkangn"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"lowkangn"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e Level-9","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"lowkangn"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"lowkangn"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"        String dateAndTime \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy \u0027from\u0027 h:mm a\")","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"lowkangn"},"content":"                .format(this.dateAndTime);","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"lowkangn"},"content":"        String endTime \u003d DateTimeFormatter.ofPattern(\"h:mm a\").format(this.endTime);","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"lowkangn"},"content":"        if (super.isDone) {","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"lowkangn"},"content":"            return \"[E][X] \" + super.taskName + \" (at: \" + dateAndTime + \" - \" + endTime + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"lowkangn"},"content":"        } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"lowkangn"},"content":"            return \"[E][ ] \" + super.taskName + \" (at: \" + dateAndTime + \" - \" + endTime + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"lowkangn"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"lowkangn"},"content":"     * Returns a String representation of the task to store within the save file.","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"lowkangn"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"lowkangn"},"content":"     * @return The String representation of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"lowkangn"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"lowkangn"},"content":"     * Returns a string representation of the task to store within the save file.","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"lowkangn"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"lowkangn"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"lowkangn"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e Level-9","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"lowkangn"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"lowkangn"},"content":"    public String parseToString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"lowkangn"},"content":"        String result \u003d super.isDone ? \"X\" : \"0\";","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"lowkangn"},"content":"        result +\u003d \"E/\" + super.taskName + \"/\" + this.dateAndTime.toString() + \"/\"","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"lowkangn"},"content":"                + this.endTime.toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"lowkangn"},"content":"        return result;","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":58,"author":{"gitId":"lowkangn"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"lowkangn":58}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"lowkangn"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"lowkangn"},"content":"    protected String taskName;","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"lowkangn"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"lowkangn"},"content":"    public Task(String taskName, boolean isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"lowkangn"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"lowkangn"},"content":"     * Marks this particular task as done.","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"lowkangn"},"content":"    public void markDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"lowkangn"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"     * Returns a String representation of the task to store within the save file.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"lowkangn"},"content":"     * @return The String representation of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"lowkangn"},"content":"     * Returns a string representation of the task to store within the save file.","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"lowkangn"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"lowkangn"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e Level-9","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"    public abstract String parseToString();","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"lowkangn"},"content":"     * Returns a boolean representing if the given String is a substring of the task\u0027s description.","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"lowkangn"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"lowkangn"},"content":"     * @param string The given String.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"lowkangn"},"content":"     * @return True if the given String is a substring, and false otherwise.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"lowkangn"},"content":"    public boolean hasSubString(String string) {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"lowkangn"},"content":"        return this.taskName.contains(string);","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"lowkangn"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"lowkangn":41}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"lowkangn"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"lowkangn"},"content":"    public ToDo(String taskName, boolean isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"        super(taskName, isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"lowkangn"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"lowkangn"},"content":"     * Returns the String representation of the ToDo task.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"lowkangn"},"content":"     * @return The String representation of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"lowkangn"},"content":"     * Returns the string representation of the ToDo task.","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"lowkangn"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"lowkangn"},"content":"     * @return The string represenation of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"lowkangn"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e Level-9","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"        if (super.isDone) {","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"lowkangn"},"content":"            return \"[T][X] \" + super.taskName;","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":"        } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"lowkangn"},"content":"            return \"[T][ ] \" + super.taskName;","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"lowkangn"},"content":"     * Returns a String representation of the task to store within the save file.","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"lowkangn"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"lowkangn"},"content":"     * @return The String representation of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"lowkangn"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"lowkangn"},"content":"     * Returns a string representation of the task to store within the save file.","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"lowkangn"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"lowkangn"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"lowkangn"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e Level-9","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"lowkangn"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"lowkangn"},"content":"    public String parseToString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"lowkangn"},"content":"        String result \u003d super.isDone ? \"X\" : \"0\";","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"lowkangn"},"content":"        result +\u003d \"T/\" + super.taskName;","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"lowkangn"},"content":"        return result;","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"lowkangn"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"lowkangn":46}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"lowkangn"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"lowkangn"},"content":"import duke.task.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"lowkangn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"lowkangn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"lowkangn"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"lowkangn"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"lowkangn"},"content":"class TaskListTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"lowkangn"},"content":"    void get() {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"lowkangn"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"lowkangn"},"content":"        tasks.add(new ToDo(\"buy bread\", true));","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"lowkangn"},"content":"        tasks.add(new Deadline(\"eat bread\", LocalDateTime.parse(\"2021-08-28T18:00\"), false));","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"        tasks.add(new Event(\"bread-eating contest\", LocalDateTime.parse(\"2021-09-01T15:00\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"                LocalTime.parse(\"16:30\"), false));","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"        TaskList taskList \u003d new TaskList(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":"        assertEquals(tasks, taskList.get());","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"lowkangn"},"content":"    void addTask() {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"lowkangn"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"        TaskList taskList \u003d new TaskList(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"lowkangn"},"content":"        ToDo td \u003d new ToDo(\"learn to bake bread\", false);","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"lowkangn"},"content":"        tasks.add(td);","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"lowkangn"},"content":"        taskList.addTask(td);","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"lowkangn"},"content":"        assertEquals(tasks, taskList.get());","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"lowkangn"},"content":"    void markTaskAsDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"lowkangn"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"lowkangn"},"content":"        tasks.add(new ToDo(\"learn to bake bread\", false));","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"lowkangn"},"content":"        TaskList taskList \u003d new TaskList(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"lowkangn"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"lowkangn"},"content":"            char checkmark \u003d taskList.get().get(0).toString().charAt(4);","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"lowkangn"},"content":"            assertEquals(\u0027 \u0027, checkmark);","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"lowkangn"},"content":"            taskList.markTaskAsDone(1);","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"lowkangn"},"content":"            checkmark \u003d taskList.get().get(0).toString().charAt(4);","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"lowkangn"},"content":"            assertEquals(\u0027X\u0027, checkmark);","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"lowkangn"},"content":"            taskList.markTaskAsDone(3);","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"lowkangn"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"lowkangn"},"content":"            assertEquals(\"☹ OOPS!!! That task does not exist.\", de.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"lowkangn"},"content":"    void deleteTask() {","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"lowkangn"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"lowkangn"},"content":"        ToDo td \u003d new ToDo(\"buy bread\", true);","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"lowkangn"},"content":"        tasks.add(td);","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"lowkangn"},"content":"        tasks.add(new Deadline(\"eat bread\", LocalDateTime.parse(\"2021-08-28T18:00\"), false));","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"lowkangn"},"content":"        TaskList taskList \u003d new TaskList(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"lowkangn"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"lowkangn"},"content":"            assertEquals(2, taskList.get().size());","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"lowkangn"},"content":"            taskList.deleteTask(2);","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"lowkangn"},"content":"            assertEquals(1, taskList.get().size());","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"lowkangn"},"content":"            assertEquals(td, taskList.get().get(0));","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"lowkangn"},"content":"            taskList.deleteTask(2);","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"lowkangn"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"lowkangn"},"content":"            assertEquals(\"☹ OOPS!!! That task does not exist.\", de.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"lowkangn"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"lowkangn":80}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"lowkangn"},"content":"todo read book","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"lowkangn"},"content":"deadline return book /by 2021-06-06","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"lowkangn"},"content":"event project meeting /at 2021-08-06, 14:00 - 16:00","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"lowkangn"},"content":"todo join sports club","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"todo borrow book","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"lowkangn"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"lowkangn"},"content":"done 1","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"done 4","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"lowkangn"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"lowkangn"},"content":"delete 300","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":"delete -5","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"lowkangn"},"content":"delete 1","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":"delete","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"lowkangn"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"lowkangn"},"content":"find book","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"lowkangn"},"content":"find sports","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"lowkangn"},"content":"find 123","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"lowkangn"},"content":"find project meeting a","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"find","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"todo","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"deadline","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"lowkangn"},"content":"event","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":"deadline return book","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"lowkangn"},"content":"event project meeting","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"lowkangn"},"content":"deadline return book /by tonight","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"event project meeting /at 12th Aug","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"lowkangn"},"content":"event project meeting /at 2021-08-06, 14:00","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"lowkangn"},"content":"done 100","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"done -1","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"lowkangn"},"content":"done","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"lowkangn"},"content":"blah","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"lowkangn"},"content":"bye","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"lowkangn":33}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"lowkangn"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"lowkangn"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"lowkangn":2}}]
