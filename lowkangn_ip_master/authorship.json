[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"lowkangn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"lowkangn"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"lowkangn"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"    private final LocalDateTime dateAndTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"lowkangn"},"content":"    public Deadline(String taskName, LocalDateTime dateAndTime, boolean isDone) {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"        super(taskName, isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"lowkangn"},"content":"        this.dateAndTime \u003d dateAndTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":"     * Returns the string representation of the Deadline task.","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"lowkangn"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"lowkangn"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"lowkangn"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"lowkangn"},"content":"        String dateAndTime \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy \u0027at\u0027 h:mm a\")","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"                .format(this.dateAndTime);","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"        if (super.isDone) {","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"            return \"[D][X] \" + super.taskName + \" (by: \" + dateAndTime + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"lowkangn"},"content":"        } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":"            return \"[D][ ] \" + super.taskName + \" (by: \" + dateAndTime + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"lowkangn"},"content":"     * Returns a string representation of the task to store within the save file.","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"lowkangn"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"lowkangn"},"content":"    public String parseToString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"lowkangn"},"content":"        String result \u003d super.isDone ? \"X\" : \"0\";","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"lowkangn"},"content":"        result +\u003d \"D/\" + super.taskName + \"/\" + this.dateAndTime.toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"lowkangn"},"content":"        return result;","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"lowkangn"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"lowkangn":38}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"lowkangn"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"lowkangn"},"content":"import java.io.File;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"lowkangn"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"lowkangn"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"lowkangn"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"lowkangn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":"    enum TaskType {","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"lowkangn"},"content":"        TODO,","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":"        DEADLINE,","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"lowkangn"},"content":"        EVENT,","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"lowkangn"},"content":"        UNKNOWN","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"lowkangn"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"    private int taskIndex;","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"    private Duke(ArrayList\u003cTask\u003e taskList, int taskIndex) {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"lowkangn"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"lowkangn"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"        boolean isDukeOpen \u003d true;","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"lowkangn"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"lowkangn"},"content":"            Duke duke \u003d Duke.readSaveFile();","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"lowkangn"},"content":"            System.out.println(\"Hello! I\u0027m Duke\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"lowkangn"},"content":"                    + \"What can I do for you?\");","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"lowkangn"},"content":"            while (isDukeOpen) {","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"lowkangn"},"content":"                try {","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"lowkangn"},"content":"                    String userInput \u003d sc.nextLine();","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"lowkangn"},"content":"                    if (userInput.equals(\"bye\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"lowkangn"},"content":"                        //Closes the program.","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"lowkangn"},"content":"                        duke.saveToFile();","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"lowkangn"},"content":"                        isDukeOpen \u003d false;","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"lowkangn"},"content":"                        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":46,"author":{"gitId":"lowkangn"},"content":"                    } else if (userInput.equals(\"list\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"lowkangn"},"content":"                        // List all tasks in the task list.","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"lowkangn"},"content":"                        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"lowkangn"},"content":"                        duke.listTasks();","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"lowkangn"},"content":"                    } else if (userInput.startsWith(\"done\")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"lowkangn"},"content":"                        // Mark a certain task as done.","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"lowkangn"},"content":"                        String[] splitString \u003d userInput.split(\" \");","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"lowkangn"},"content":"                        if (splitString.length \u003e 1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"lowkangn"},"content":"                            int taskNumber \u003d Integer.parseInt(splitString[1].trim());","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"lowkangn"},"content":"                            duke.markTaskAsDone(taskNumber);","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"lowkangn"},"content":"                            duke.saveToFile();","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":60,"author":{"gitId":"lowkangn"},"content":"                        } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":61,"author":{"gitId":"lowkangn"},"content":"                            throw new DukeException(\"☹ OOPS!!! Please state which task number \"","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"lowkangn"},"content":"                                    + \"you want to mark as done.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"lowkangn"},"content":"                        }","lastModifiedDate":"2021-08-16"},{"lineNumber":64,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":65,"author":{"gitId":"lowkangn"},"content":"                    } else if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":66,"author":{"gitId":"lowkangn"},"content":"                        // Deletes a task from the task list.","lastModifiedDate":"2021-08-16"},{"lineNumber":67,"author":{"gitId":"lowkangn"},"content":"                        String[] splitString \u003d userInput.split(\" \", 2);","lastModifiedDate":"2021-08-16"},{"lineNumber":68,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":69,"author":{"gitId":"lowkangn"},"content":"                        if (splitString.length \u003e 1 \u0026\u0026 splitString[1].trim().length() \u003e 0) {","lastModifiedDate":"2021-08-16"},{"lineNumber":70,"author":{"gitId":"lowkangn"},"content":"                            int taskNumber \u003d Integer.parseInt(splitString[1].trim());","lastModifiedDate":"2021-08-16"},{"lineNumber":71,"author":{"gitId":"lowkangn"},"content":"                            duke.deleteTask(taskNumber);","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"lowkangn"},"content":"                            duke.saveToFile();","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":74,"author":{"gitId":"lowkangn"},"content":"                        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"lowkangn"},"content":"                            throw new DukeException(\"☹ OOPS!!! Please state which task number\"","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"lowkangn"},"content":"                                    + \"you want to delete.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"lowkangn"},"content":"                        }","lastModifiedDate":"2021-08-16"},{"lineNumber":78,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":79,"author":{"gitId":"lowkangn"},"content":"                    } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":80,"author":{"gitId":"lowkangn"},"content":"                        TaskType type \u003d userInput.startsWith((\"todo\"))","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"lowkangn"},"content":"                                ? TaskType.TODO","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"lowkangn"},"content":"                                : userInput.startsWith(\"deadline\")","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"lowkangn"},"content":"                                ? TaskType.DEADLINE","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"lowkangn"},"content":"                                : userInput.startsWith(\"event\")","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"lowkangn"},"content":"                                ? TaskType.EVENT","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"lowkangn"},"content":"                                : TaskType.UNKNOWN;","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"lowkangn"},"content":"                        if (type \u003d\u003d TaskType.UNKNOWN) {","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"lowkangn"},"content":"                            // Incorrect user input.","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"lowkangn"},"content":"                            throw new DukeException(","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"lowkangn"},"content":"                                    \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":93,"author":{"gitId":"lowkangn"},"content":"                        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"lowkangn"},"content":"                            // Adds a Task to the task list.","lastModifiedDate":"2021-08-16"},{"lineNumber":95,"author":{"gitId":"lowkangn"},"content":"                            String[] splitString \u003d userInput.split(\" \", 2);","lastModifiedDate":"2021-08-16"},{"lineNumber":96,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":97,"author":{"gitId":"lowkangn"},"content":"                            if (splitString.length \u003e 1 \u0026\u0026 splitString[1].trim().length() \u003e 0) {","lastModifiedDate":"2021-08-16"},{"lineNumber":98,"author":{"gitId":"lowkangn"},"content":"                                String substring \u003d splitString[1].trim();","lastModifiedDate":"2021-08-16"},{"lineNumber":99,"author":{"gitId":"lowkangn"},"content":"                                Task newTask;","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"lowkangn"},"content":"                                switch (type) {","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"lowkangn"},"content":"                                    case TODO:","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"lowkangn"},"content":"                                        newTask \u003d new ToDo(substring, false);","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"lowkangn"},"content":"                                        break;","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"lowkangn"},"content":"                                    case DEADLINE:","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"lowkangn"},"content":"                                        String[] nameAndDeadline \u003d substring.split(\" /by \");","lastModifiedDate":"2021-08-22"},{"lineNumber":107,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"lowkangn"},"content":"                                        if (nameAndDeadline.length \u003e 1","lastModifiedDate":"2021-08-22"},{"lineNumber":109,"author":{"gitId":"lowkangn"},"content":"                                                \u0026\u0026 nameAndDeadline[1].trim().length() \u003e 0) {","lastModifiedDate":"2021-08-22"},{"lineNumber":110,"author":{"gitId":"lowkangn"},"content":"                                            LocalDateTime deadline \u003d Duke","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"lowkangn"},"content":"                                                    .formatDateTime(nameAndDeadline[1]);","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"lowkangn"},"content":"                                            newTask \u003d new Deadline(nameAndDeadline[0], deadline,","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"lowkangn"},"content":"                                                    false);","lastModifiedDate":"2021-08-22"},{"lineNumber":114,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"lowkangn"},"content":"                                        } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":116,"author":{"gitId":"lowkangn"},"content":"                                            throw new DukeException(\"☹ OOPS!!! Please provide a date or \"","lastModifiedDate":"2021-08-22"},{"lineNumber":117,"author":{"gitId":"lowkangn"},"content":"                                                    + \"time for the deadline.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":118,"author":{"gitId":"lowkangn"},"content":"                                        }","lastModifiedDate":"2021-08-16"},{"lineNumber":119,"author":{"gitId":"lowkangn"},"content":"                                        break;","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"lowkangn"},"content":"                                    default:","lastModifiedDate":"2021-08-22"},{"lineNumber":122,"author":{"gitId":"lowkangn"},"content":"                                        String[] nameAndTime \u003d substring.split(\" /at \");","lastModifiedDate":"2021-08-16"},{"lineNumber":123,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"lowkangn"},"content":"                                        if (nameAndTime.length \u003e 1","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"lowkangn"},"content":"                                                \u0026\u0026 nameAndTime[1].trim().length() \u003e 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"lowkangn"},"content":"                                            String[] splitEndTime \u003d nameAndTime[1].split(\" - \");","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"lowkangn"},"content":"                                            LocalDateTime eventTime \u003d Duke","lastModifiedDate":"2021-08-23"},{"lineNumber":128,"author":{"gitId":"lowkangn"},"content":"                                                    .formatDateTime(splitEndTime[0]);","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":130,"author":{"gitId":"lowkangn"},"content":"                                            if (splitEndTime.length \u003e 1","lastModifiedDate":"2021-08-23"},{"lineNumber":131,"author":{"gitId":"lowkangn"},"content":"                                                    \u0026\u0026 splitEndTime[1].trim().length() \u003e 0) {                                                LocalTime endTime \u003d LocalTime.parse(splitEndTime[1]);","lastModifiedDate":"2021-08-23"},{"lineNumber":132,"author":{"gitId":"lowkangn"},"content":"                                                newTask \u003d new Event(nameAndTime[0],","lastModifiedDate":"2021-08-23"},{"lineNumber":133,"author":{"gitId":"lowkangn"},"content":"                                                        eventTime, endTime,false);","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"lowkangn"},"content":"                                            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":136,"author":{"gitId":"lowkangn"},"content":"                                                throw new DukeException(\"☹ OOPS!!! Please provide an end \"","lastModifiedDate":"2021-08-23"},{"lineNumber":137,"author":{"gitId":"lowkangn"},"content":"                                                        + \"time for the event.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"lowkangn"},"content":"                                            }","lastModifiedDate":"2021-08-23"},{"lineNumber":139,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":140,"author":{"gitId":"lowkangn"},"content":"                                        } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":141,"author":{"gitId":"lowkangn"},"content":"                                            throw new DukeException(\"☹ OOPS!!! Please provide a date or \"","lastModifiedDate":"2021-08-22"},{"lineNumber":142,"author":{"gitId":"lowkangn"},"content":"                                                    + \"time for the event.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":143,"author":{"gitId":"lowkangn"},"content":"                                        }","lastModifiedDate":"2021-08-16"},{"lineNumber":144,"author":{"gitId":"lowkangn"},"content":"                                        break;","lastModifiedDate":"2021-08-22"},{"lineNumber":145,"author":{"gitId":"lowkangn"},"content":"                                }","lastModifiedDate":"2021-08-16"},{"lineNumber":146,"author":{"gitId":"lowkangn"},"content":"                                duke.addTask(newTask);","lastModifiedDate":"2021-08-22"},{"lineNumber":147,"author":{"gitId":"lowkangn"},"content":"                                duke.saveToFile();","lastModifiedDate":"2021-08-23"},{"lineNumber":148,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":149,"author":{"gitId":"lowkangn"},"content":"                            } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":150,"author":{"gitId":"lowkangn"},"content":"                                throw new DukeException(\"☹ OOPS!!! The description of a \" + splitString[0]","lastModifiedDate":"2021-08-22"},{"lineNumber":151,"author":{"gitId":"lowkangn"},"content":"                                        + \" cannot be empty.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":152,"author":{"gitId":"lowkangn"},"content":"                            }","lastModifiedDate":"2021-08-22"},{"lineNumber":153,"author":{"gitId":"lowkangn"},"content":"                        }","lastModifiedDate":"2021-08-16"},{"lineNumber":154,"author":{"gitId":"lowkangn"},"content":"                    }","lastModifiedDate":"2021-08-16"},{"lineNumber":155,"author":{"gitId":"lowkangn"},"content":"                } catch (DukeException de) {","lastModifiedDate":"2021-08-16"},{"lineNumber":156,"author":{"gitId":"lowkangn"},"content":"                    System.out.println(de.getMessage());","lastModifiedDate":"2021-08-16"},{"lineNumber":157,"author":{"gitId":"lowkangn"},"content":"                }","lastModifiedDate":"2021-08-15"},{"lineNumber":158,"author":{"gitId":"lowkangn"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":159,"author":{"gitId":"lowkangn"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2021-08-22"},{"lineNumber":160,"author":{"gitId":"lowkangn"},"content":"            System.out.println(de.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":161,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":163,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":164,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":165,"author":{"gitId":"lowkangn"},"content":"     * Lists the current tasks in the task list.","lastModifiedDate":"2021-08-22"},{"lineNumber":166,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":167,"author":{"gitId":"lowkangn"},"content":"    public void listTasks() {","lastModifiedDate":"2021-08-22"},{"lineNumber":168,"author":{"gitId":"lowkangn"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-08-22"},{"lineNumber":169,"author":{"gitId":"lowkangn"},"content":"        for (Task task : this.taskList) {","lastModifiedDate":"2021-08-22"},{"lineNumber":170,"author":{"gitId":"lowkangn"},"content":"            if (task !\u003d null) {","lastModifiedDate":"2021-08-22"},{"lineNumber":171,"author":{"gitId":"lowkangn"},"content":"                System.out.println(++i + \".\" + task.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":172,"author":{"gitId":"lowkangn"},"content":"            } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":173,"author":{"gitId":"lowkangn"},"content":"                break;","lastModifiedDate":"2021-08-22"},{"lineNumber":174,"author":{"gitId":"lowkangn"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":175,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":176,"author":{"gitId":"lowkangn"},"content":"        if (i \u003d\u003d 0) {","lastModifiedDate":"2021-08-22"},{"lineNumber":177,"author":{"gitId":"lowkangn"},"content":"            System.out.println(\"Your list is currently empty.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":178,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":179,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":180,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":181,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":182,"author":{"gitId":"lowkangn"},"content":"     * Marks a certain task in the task list as done, using its task number.","lastModifiedDate":"2021-08-22"},{"lineNumber":183,"author":{"gitId":"lowkangn"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":184,"author":{"gitId":"lowkangn"},"content":"     * @param taskNumber The number of the task in the task list.","lastModifiedDate":"2021-08-22"},{"lineNumber":185,"author":{"gitId":"lowkangn"},"content":"     * @throws DukeException If the task number does not exist.","lastModifiedDate":"2021-08-22"},{"lineNumber":186,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":187,"author":{"gitId":"lowkangn"},"content":"    public void markTaskAsDone(int taskNumber) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":188,"author":{"gitId":"lowkangn"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":189,"author":{"gitId":"lowkangn"},"content":"            Task doneTask \u003d this.taskList.get(taskNumber - 1);","lastModifiedDate":"2021-08-22"},{"lineNumber":190,"author":{"gitId":"lowkangn"},"content":"            doneTask.markDone();","lastModifiedDate":"2021-08-22"},{"lineNumber":191,"author":{"gitId":"lowkangn"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + \"  \"","lastModifiedDate":"2021-08-22"},{"lineNumber":192,"author":{"gitId":"lowkangn"},"content":"                    + doneTask.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":193,"author":{"gitId":"lowkangn"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":194,"author":{"gitId":"lowkangn"},"content":"            throw new DukeException(\"☹ OOPS!!! That task does not exist.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":195,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":196,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":197,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":198,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":199,"author":{"gitId":"lowkangn"},"content":"     * Deletes a certain task from the task list, using its task number.","lastModifiedDate":"2021-08-22"},{"lineNumber":200,"author":{"gitId":"lowkangn"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":201,"author":{"gitId":"lowkangn"},"content":"     * @param taskNumber The number of the task in the task list.","lastModifiedDate":"2021-08-22"},{"lineNumber":202,"author":{"gitId":"lowkangn"},"content":"     * @throws DukeException If the task number does not exist.","lastModifiedDate":"2021-08-22"},{"lineNumber":203,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":204,"author":{"gitId":"lowkangn"},"content":"    public void deleteTask(int taskNumber) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":205,"author":{"gitId":"lowkangn"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":206,"author":{"gitId":"lowkangn"},"content":"            Task deletedTask \u003d this.taskList.get(taskNumber - 1);","lastModifiedDate":"2021-08-22"},{"lineNumber":207,"author":{"gitId":"lowkangn"},"content":"            this.taskList.remove(taskNumber - 1);","lastModifiedDate":"2021-08-22"},{"lineNumber":208,"author":{"gitId":"lowkangn"},"content":"            this.taskIndex--;","lastModifiedDate":"2021-08-22"},{"lineNumber":209,"author":{"gitId":"lowkangn"},"content":"            String taskCount \u003d (this.taskIndex \u003d\u003d 1) ? \"1 task\" : this.taskIndex + \" tasks\";","lastModifiedDate":"2021-08-22"},{"lineNumber":210,"author":{"gitId":"lowkangn"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + \"  \"","lastModifiedDate":"2021-08-22"},{"lineNumber":211,"author":{"gitId":"lowkangn"},"content":"                    + deletedTask.toString() + \"\\n\" + \"Now you have \" + taskCount","lastModifiedDate":"2021-08-22"},{"lineNumber":212,"author":{"gitId":"lowkangn"},"content":"                    + \" in the list.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":213,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":214,"author":{"gitId":"lowkangn"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":215,"author":{"gitId":"lowkangn"},"content":"            throw new DukeException(\"☹ OOPS!!! That task does not exist.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":216,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":217,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":218,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":219,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":220,"author":{"gitId":"lowkangn"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2021-08-22"},{"lineNumber":221,"author":{"gitId":"lowkangn"},"content":"     * @param task The task to be added to the task list.","lastModifiedDate":"2021-08-22"},{"lineNumber":222,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":223,"author":{"gitId":"lowkangn"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-22"},{"lineNumber":224,"author":{"gitId":"lowkangn"},"content":"        this.taskList.add(task);","lastModifiedDate":"2021-08-22"},{"lineNumber":225,"author":{"gitId":"lowkangn"},"content":"        this.taskIndex++;","lastModifiedDate":"2021-08-22"},{"lineNumber":226,"author":{"gitId":"lowkangn"},"content":"        String taskCount \u003d (this.taskIndex \u003d\u003d 1) ? \"1 task\" : this.taskIndex + \" tasks\";","lastModifiedDate":"2021-08-22"},{"lineNumber":227,"author":{"gitId":"lowkangn"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + \"  \" + task.toString()","lastModifiedDate":"2021-08-22"},{"lineNumber":228,"author":{"gitId":"lowkangn"},"content":"                + \"\\n\" + \"Now you have \" + taskCount + \" in the list.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":229,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":230,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":231,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":232,"author":{"gitId":"lowkangn"},"content":"     * Saves the current task list to the save file.","lastModifiedDate":"2021-08-22"},{"lineNumber":233,"author":{"gitId":"lowkangn"},"content":"     * @throws DukeException If there was an error writing to the save file.","lastModifiedDate":"2021-08-22"},{"lineNumber":234,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":235,"author":{"gitId":"lowkangn"},"content":"    public void saveToFile() throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":236,"author":{"gitId":"lowkangn"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":237,"author":{"gitId":"lowkangn"},"content":"            BufferedWriter bw \u003d new BufferedWriter(new FileWriter(\"save.txt\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":238,"author":{"gitId":"lowkangn"},"content":"            for (Task task : this.taskList) {","lastModifiedDate":"2021-08-22"},{"lineNumber":239,"author":{"gitId":"lowkangn"},"content":"                bw.write(task.parseToString() + \"\\n\");","lastModifiedDate":"2021-08-23"},{"lineNumber":240,"author":{"gitId":"lowkangn"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":241,"author":{"gitId":"lowkangn"},"content":"            bw.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":242,"author":{"gitId":"lowkangn"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":243,"author":{"gitId":"lowkangn"},"content":"            throw new DukeException(\"☹ OOPS!!! There was an error updating your task list.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":244,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":245,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":246,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":247,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":248,"author":{"gitId":"lowkangn"},"content":"     * Reads from the save file if it exists, otherwise a new save file is created.","lastModifiedDate":"2021-08-22"},{"lineNumber":249,"author":{"gitId":"lowkangn"},"content":"     * @throws DukeException If there was an error reading or writing to the save file.","lastModifiedDate":"2021-08-22"},{"lineNumber":250,"author":{"gitId":"lowkangn"},"content":"     * @return A Duke initialised with the previously saved task list, if it exists.","lastModifiedDate":"2021-08-22"},{"lineNumber":251,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":252,"author":{"gitId":"lowkangn"},"content":"    public static Duke readSaveFile() throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":253,"author":{"gitId":"lowkangn"},"content":"        File save \u003d new File(\"save.txt\");","lastModifiedDate":"2021-08-22"},{"lineNumber":254,"author":{"gitId":"lowkangn"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":255,"author":{"gitId":"lowkangn"},"content":"            if (save.isFile()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":256,"author":{"gitId":"lowkangn"},"content":"                // If the save file exists, create a new Duke with the previously saved data.","lastModifiedDate":"2021-08-22"},{"lineNumber":257,"author":{"gitId":"lowkangn"},"content":"                BufferedReader br \u003d new BufferedReader(new FileReader(\"save.txt\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":258,"author":{"gitId":"lowkangn"},"content":"                ArrayList\u003cTask\u003e savedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":259,"author":{"gitId":"lowkangn"},"content":"                String nextLine \u003d br.readLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":260,"author":{"gitId":"lowkangn"},"content":"                while (nextLine !\u003d null) {","lastModifiedDate":"2021-08-22"},{"lineNumber":261,"author":{"gitId":"lowkangn"},"content":"                    savedList.add(Duke.processTaskString(nextLine));","lastModifiedDate":"2021-08-22"},{"lineNumber":262,"author":{"gitId":"lowkangn"},"content":"                    nextLine \u003d br.readLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":263,"author":{"gitId":"lowkangn"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":264,"author":{"gitId":"lowkangn"},"content":"                br.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":265,"author":{"gitId":"lowkangn"},"content":"                return new Duke(savedList, savedList.size());","lastModifiedDate":"2021-08-22"},{"lineNumber":266,"author":{"gitId":"lowkangn"},"content":"            } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":267,"author":{"gitId":"lowkangn"},"content":"                // If the save file does not exist, create a new Duke with the default values.","lastModifiedDate":"2021-08-22"},{"lineNumber":268,"author":{"gitId":"lowkangn"},"content":"                BufferedWriter bw \u003d new BufferedWriter(new FileWriter(\"save.txt\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":269,"author":{"gitId":"lowkangn"},"content":"                bw.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":270,"author":{"gitId":"lowkangn"},"content":"                return new Duke(new ArrayList\u003c\u003e(), 0);","lastModifiedDate":"2021-08-22"},{"lineNumber":271,"author":{"gitId":"lowkangn"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":272,"author":{"gitId":"lowkangn"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":273,"author":{"gitId":"lowkangn"},"content":"            throw new DukeException(\"☹ OOPS!!! There was an error starting Duke.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":274,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":275,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":276,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":277,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":278,"author":{"gitId":"lowkangn"},"content":"     * Takes in the string representation of a task and returns the task represented by it.","lastModifiedDate":"2021-08-22"},{"lineNumber":279,"author":{"gitId":"lowkangn"},"content":"     * @param taskString The string representation of a task.","lastModifiedDate":"2021-08-22"},{"lineNumber":280,"author":{"gitId":"lowkangn"},"content":"     * @return The task represented by the string.","lastModifiedDate":"2021-08-22"},{"lineNumber":281,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":282,"author":{"gitId":"lowkangn"},"content":"    private static Task processTaskString(String taskString) {","lastModifiedDate":"2021-08-22"},{"lineNumber":283,"author":{"gitId":"lowkangn"},"content":"        char type \u003d taskString.charAt(1);","lastModifiedDate":"2021-08-22"},{"lineNumber":284,"author":{"gitId":"lowkangn"},"content":"        boolean isDone \u003d taskString.charAt(0) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2021-08-23"},{"lineNumber":285,"author":{"gitId":"lowkangn"},"content":"        String[] split \u003d taskString.split(\"/\");","lastModifiedDate":"2021-08-23"},{"lineNumber":286,"author":{"gitId":"lowkangn"},"content":"        switch (type) {","lastModifiedDate":"2021-08-22"},{"lineNumber":287,"author":{"gitId":"lowkangn"},"content":"            case \u0027T\u0027:","lastModifiedDate":"2021-08-22"},{"lineNumber":288,"author":{"gitId":"lowkangn"},"content":"                return new ToDo(split[1], isDone);","lastModifiedDate":"2021-08-23"},{"lineNumber":289,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":290,"author":{"gitId":"lowkangn"},"content":"            case \u0027D\u0027:","lastModifiedDate":"2021-08-22"},{"lineNumber":291,"author":{"gitId":"lowkangn"},"content":"                String deadlineName \u003d split[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":292,"author":{"gitId":"lowkangn"},"content":"                String deadlineDateAndTime \u003d split[2];","lastModifiedDate":"2021-08-23"},{"lineNumber":293,"author":{"gitId":"lowkangn"},"content":"                return new Deadline(deadlineName, LocalDateTime.parse(deadlineDateAndTime), isDone);","lastModifiedDate":"2021-08-23"},{"lineNumber":294,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":295,"author":{"gitId":"lowkangn"},"content":"            default:","lastModifiedDate":"2021-08-22"},{"lineNumber":296,"author":{"gitId":"lowkangn"},"content":"                String eventName \u003d split[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":297,"author":{"gitId":"lowkangn"},"content":"                String eventDateAndTime \u003d split[2];","lastModifiedDate":"2021-08-23"},{"lineNumber":298,"author":{"gitId":"lowkangn"},"content":"                String eventEndTime \u003d split[3];","lastModifiedDate":"2021-08-23"},{"lineNumber":299,"author":{"gitId":"lowkangn"},"content":"                return new Event(eventName, LocalDateTime.parse(eventDateAndTime),","lastModifiedDate":"2021-08-23"},{"lineNumber":300,"author":{"gitId":"lowkangn"},"content":"                        LocalTime.parse(eventEndTime), isDone);","lastModifiedDate":"2021-08-23"},{"lineNumber":301,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":302,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":303,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":304,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":305,"author":{"gitId":"lowkangn"},"content":"     * Takes in a string representation of a date and time and parses it into a LocalDateTime object.","lastModifiedDate":"2021-08-23"},{"lineNumber":306,"author":{"gitId":"lowkangn"},"content":"     * @param dateAndTime The given date and time.","lastModifiedDate":"2021-08-23"},{"lineNumber":307,"author":{"gitId":"lowkangn"},"content":"     * @throws DukeException If the input date and time are incorrectly configured.","lastModifiedDate":"2021-08-23"},{"lineNumber":308,"author":{"gitId":"lowkangn"},"content":"     * @return A LocalDateTime object.","lastModifiedDate":"2021-08-23"},{"lineNumber":309,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":310,"author":{"gitId":"lowkangn"},"content":"    private static LocalDateTime formatDateTime(String dateAndTime) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":311,"author":{"gitId":"lowkangn"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":312,"author":{"gitId":"lowkangn"},"content":"            String[] split \u003d dateAndTime.split(\", \");","lastModifiedDate":"2021-08-23"},{"lineNumber":313,"author":{"gitId":"lowkangn"},"content":"            String toFormat \u003d split[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":314,"author":{"gitId":"lowkangn"},"content":"            if (split.length \u003e 1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":315,"author":{"gitId":"lowkangn"},"content":"                toFormat +\u003d \"T\" + split[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":316,"author":{"gitId":"lowkangn"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":317,"author":{"gitId":"lowkangn"},"content":"                toFormat +\u003d \"T\" + \"00:00\";","lastModifiedDate":"2021-08-23"},{"lineNumber":318,"author":{"gitId":"lowkangn"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":319,"author":{"gitId":"lowkangn"},"content":"            return LocalDateTime.parse(toFormat);","lastModifiedDate":"2021-08-23"},{"lineNumber":320,"author":{"gitId":"lowkangn"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":321,"author":{"gitId":"lowkangn"},"content":"            throw new DukeException(\"☹ OOPS!!! Please use the following format for date and time:\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":322,"author":{"gitId":"lowkangn"},"content":"            + \"yyyy-MM-dd, HH:mm\");","lastModifiedDate":"2021-08-23"},{"lineNumber":323,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":325,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":5,"lowkangn":320}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"lowkangn"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"lowkangn"},"content":"        super(message);","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"lowkangn":6}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"lowkangn"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"lowkangn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"lowkangn"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"    private final LocalDateTime dateAndTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"lowkangn"},"content":"    private final LocalTime endTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"    public Event(String taskName, LocalDateTime dateAndTime, LocalTime endTime, boolean isDone) {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"lowkangn"},"content":"        super(taskName, isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"lowkangn"},"content":"        this.dateAndTime \u003d dateAndTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"lowkangn"},"content":"     * Returns the string representation of the Deadline task.","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"lowkangn"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"lowkangn"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"        String dateAndTime \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy \u0027from\u0027 h:mm a\")","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"                .format(this.dateAndTime);","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"lowkangn"},"content":"        String endTime \u003d DateTimeFormatter.ofPattern(\"h:mm a\").format(this.endTime);","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":"        if (super.isDone) {","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"lowkangn"},"content":"            return \"[E][X] \" + super.taskName + \" (at: \" + dateAndTime + \" - \" + endTime + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"lowkangn"},"content":"        } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"            return \"[E][ ] \" + super.taskName + \" (at: \" + dateAndTime + \" - \" + endTime + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"lowkangn"},"content":"     * Returns a string representation of the task to store within the save file.","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"lowkangn"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"lowkangn"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"lowkangn"},"content":"    public String parseToString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"lowkangn"},"content":"        String result \u003d super.isDone ? \"X\" : \"0\";","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"lowkangn"},"content":"        result +\u003d \"E/\" + super.taskName + \"/\" + this.dateAndTime.toString() + \"/\"","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"lowkangn"},"content":"                + this.endTime.toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"lowkangn"},"content":"        return result;","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"lowkangn"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"lowkangn":42}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"lowkangn"},"content":"    protected String taskName;","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"lowkangn"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"lowkangn"},"content":"    public Task(String taskName, boolean isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"lowkangn"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"lowkangn"},"content":"     * Marks this particular task as done.","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"lowkangn"},"content":"    public void markDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"lowkangn"},"content":"     * Returns a string representation of the task to store within the save file.","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"lowkangn"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"    public abstract String parseToString();","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"lowkangn":22}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"lowkangn"},"content":"    public ToDo(String taskName, boolean isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"lowkangn"},"content":"        super(taskName, isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"lowkangn"},"content":"     * Returns the string representation of the ToDo task.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"     * @return The string represenation of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"lowkangn"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"lowkangn"},"content":"        if (super.isDone) {","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":"            return \"[T][X] \" + super.taskName;","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"lowkangn"},"content":"        } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"lowkangn"},"content":"            return \"[T][ ] \" + super.taskName;","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"     * Returns a string representation of the task to store within the save file.","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"lowkangn"},"content":"    public String parseToString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"lowkangn"},"content":"        String result \u003d super.isDone ? \"X\" : \"0\";","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"        result +\u003d \"T/\" + super.taskName;","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"lowkangn"},"content":"        return result;","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"lowkangn":30}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"lowkangn"},"content":"todo read book","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"lowkangn"},"content":"deadline return book /by 2021-06-06","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"lowkangn"},"content":"event project meeting /at 2021-08-06, 14:00 - 16:00","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"lowkangn"},"content":"todo join sports club","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"todo borrow book","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"lowkangn"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"lowkangn"},"content":"done 1","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"done 4","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"lowkangn"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"lowkangn"},"content":"delete 300","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":"delete -5","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"lowkangn"},"content":"delete 1","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"lowkangn"},"content":"todo","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"lowkangn"},"content":"deadline","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"lowkangn"},"content":"event","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"lowkangn"},"content":"deadline return book","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"lowkangn"},"content":"event project meeting","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"deadline return book /by tonight","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"event project meeting /at 12th Aug","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"event project meeting /at 2021-08-06, 14:00","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"lowkangn"},"content":"done 100","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":"done -1","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"lowkangn"},"content":"done","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"lowkangn"},"content":"blah","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"bye","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"lowkangn":27}}]
