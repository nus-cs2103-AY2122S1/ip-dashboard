[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kawaiigabrielneko"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"kawaiigabrielneko"},"content":"    protected String time;","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"kawaiigabrielneko"},"content":"    public Deadline(String name, String time){","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"kawaiigabrielneko"},"content":"        super(name);","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"kawaiigabrielneko"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"kawaiigabrielneko"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"kawaiigabrielneko"},"content":"    public String toString(){","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"kawaiigabrielneko"},"content":"        if (this.isDone){","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"kawaiigabrielneko"},"content":"            return \"[D][X] \" + name + \" (by: \" + time + \")\";","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"kawaiigabrielneko"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"kawaiigabrielneko"},"content":"        else {","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"kawaiigabrielneko"},"content":"            return \"[D][ ] \" + name + \" (by: \" + time + \")\";","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"kawaiigabrielneko"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"kawaiigabrielneko"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"kawaiigabrielneko":17}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kawaiigabrielneko"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"kawaiigabrielneko"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"kawaiigabrielneko"},"content":"import java.util.List;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"kawaiigabrielneko"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"kawaiigabrielneko"},"content":"        System.out.println(\"----------------------\");","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"kawaiigabrielneko"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"kawaiigabrielneko"},"content":"        System.out.println(\"----------------------\");","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"kawaiigabrielneko"},"content":"        Scanner stdin \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"kawaiigabrielneko"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"kawaiigabrielneko"},"content":"        while (true){","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"kawaiigabrielneko"},"content":"            String command \u003d stdin.nextLine();","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"kawaiigabrielneko"},"content":"            if (\"bye\".equals(command)){","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"kawaiigabrielneko"},"content":"                System.out.println(\"----------------------\");","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"kawaiigabrielneko"},"content":"                System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"kawaiigabrielneko"},"content":"                System.out.println(\"----------------------\");","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"kawaiigabrielneko"},"content":"                break;","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"kawaiigabrielneko"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"kawaiigabrielneko"},"content":"            else if (\"list\".equals(command)){","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"kawaiigabrielneko"},"content":"                System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"kawaiigabrielneko"},"content":"                for (Task task : tasks){","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"kawaiigabrielneko"},"content":"                    System.out.println(task);","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"kawaiigabrielneko"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"kawaiigabrielneko"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"kawaiigabrielneko"},"content":"            else if (command.startsWith(\"done \")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"kawaiigabrielneko"},"content":"                for (Task task : tasks){","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"kawaiigabrielneko"},"content":"                    if (command.substring(5).equals(task.getName())){","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"kawaiigabrielneko"},"content":"                        task.markDone();","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"kawaiigabrielneko"},"content":"                        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"kawaiigabrielneko"},"content":"                        System.out.println(task);","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"kawaiigabrielneko"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"kawaiigabrielneko"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"kawaiigabrielneko"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"kawaiigabrielneko"},"content":"            else if (command.startsWith(\"todo \")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"kawaiigabrielneko"},"content":"                String name \u003d command.substring(5);","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"kawaiigabrielneko"},"content":"                Task task \u003d new ToDo(name);","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"kawaiigabrielneko"},"content":"                if (name.equals(\"\")){","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"kawaiigabrielneko"},"content":"                    System.out.println(\"Oops! The description of the task cannot be empty :(\");","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"kawaiigabrielneko"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"kawaiigabrielneko"},"content":"                else {","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"kawaiigabrielneko"},"content":"                    tasks.add(task);","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"kawaiigabrielneko"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"kawaiigabrielneko"},"content":"                    System.out.println(task);","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"kawaiigabrielneko"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"kawaiigabrielneko"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"kawaiigabrielneko"},"content":"            else if (command.startsWith(\"deadline \")){","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"kawaiigabrielneko"},"content":"                if (command.contains(\"/by \")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"kawaiigabrielneko"},"content":"                    String name \u003d command.split(\"/by \", 2)[0].substring(9);","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"kawaiigabrielneko"},"content":"                    String time \u003d command.split(\"/by \", 2)[1];","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"kawaiigabrielneko"},"content":"                    if (name.equals(\"\") || time.equals(\"\")){","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"kawaiigabrielneko"},"content":"                        System.out.println(\"Oops! The name and/or time of a deadline cannot be empty\");","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"kawaiigabrielneko"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"kawaiigabrielneko"},"content":"                    else {","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"kawaiigabrielneko"},"content":"                        Task task \u003d new Deadline(name, time);","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"kawaiigabrielneko"},"content":"                        tasks.add(task);","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"kawaiigabrielneko"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"kawaiigabrielneko"},"content":"                        System.out.println(task);","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"kawaiigabrielneko"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"kawaiigabrielneko"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"kawaiigabrielneko"},"content":"                else {","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"kawaiigabrielneko"},"content":"                    System.out.println(\"Oops! The deadline must be by a certain time :(\");","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"kawaiigabrielneko"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"kawaiigabrielneko"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"kawaiigabrielneko"},"content":"            else if (command.startsWith(\"event \")){","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"kawaiigabrielneko"},"content":"                if (command.contains(\"/at \")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"kawaiigabrielneko"},"content":"                    String name \u003d command.split(\"/at \", 2)[0].substring(6);","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"kawaiigabrielneko"},"content":"                    String time \u003d command.split(\"/at \", 2)[1];","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"kawaiigabrielneko"},"content":"                    if (name.equals(\"\") || time.equals(\"\")){","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"kawaiigabrielneko"},"content":"                        System.out.println(\"Oops! The name and/or time of an event cannot be empty\");","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"kawaiigabrielneko"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"kawaiigabrielneko"},"content":"                    else {","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"kawaiigabrielneko"},"content":"                        Task task \u003d new Event(name, time);","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"kawaiigabrielneko"},"content":"                        tasks.add(task);","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"kawaiigabrielneko"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"kawaiigabrielneko"},"content":"                        System.out.println(task);","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"kawaiigabrielneko"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":85,"author":{"gitId":"kawaiigabrielneko"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":86,"author":{"gitId":"kawaiigabrielneko"},"content":"                else {","lastModifiedDate":"2021-08-19"},{"lineNumber":87,"author":{"gitId":"kawaiigabrielneko"},"content":"                    System.out.println(\"Oops! The event must be at a certain time :(\");","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"kawaiigabrielneko"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"kawaiigabrielneko"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"kawaiigabrielneko"},"content":"            else if (command.startsWith(\"delete \")){","lastModifiedDate":"2021-08-19"},{"lineNumber":91,"author":{"gitId":"kawaiigabrielneko"},"content":"                String name \u003d command.substring(7);","lastModifiedDate":"2021-08-19"},{"lineNumber":92,"author":{"gitId":"kawaiigabrielneko"},"content":"                boolean taskFound \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":93,"author":{"gitId":"kawaiigabrielneko"},"content":"                for (Task task : tasks){","lastModifiedDate":"2021-08-19"},{"lineNumber":94,"author":{"gitId":"kawaiigabrielneko"},"content":"                    if (task.getName().equals(name)){","lastModifiedDate":"2021-08-19"},{"lineNumber":95,"author":{"gitId":"kawaiigabrielneko"},"content":"                        tasks.remove(task);","lastModifiedDate":"2021-08-19"},{"lineNumber":96,"author":{"gitId":"kawaiigabrielneko"},"content":"                        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-08-19"},{"lineNumber":97,"author":{"gitId":"kawaiigabrielneko"},"content":"                        System.out.println(task);","lastModifiedDate":"2021-08-19"},{"lineNumber":98,"author":{"gitId":"kawaiigabrielneko"},"content":"                        taskFound \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":99,"author":{"gitId":"kawaiigabrielneko"},"content":"                        break;","lastModifiedDate":"2021-08-19"},{"lineNumber":100,"author":{"gitId":"kawaiigabrielneko"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":101,"author":{"gitId":"kawaiigabrielneko"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":102,"author":{"gitId":"kawaiigabrielneko"},"content":"                if (!taskFound){","lastModifiedDate":"2021-08-19"},{"lineNumber":103,"author":{"gitId":"kawaiigabrielneko"},"content":"                    System.out.println(\"Oops! A task of that name could not be found :(\");","lastModifiedDate":"2021-08-19"},{"lineNumber":104,"author":{"gitId":"kawaiigabrielneko"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":105,"author":{"gitId":"kawaiigabrielneko"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":106,"author":{"gitId":"kawaiigabrielneko"},"content":"            else {","lastModifiedDate":"2021-08-19"},{"lineNumber":107,"author":{"gitId":"kawaiigabrielneko"},"content":"                List\u003cString\u003e command_list \u003d Arrays.asList(\"todo\", \"deadline\", \"event\", \"delete\");","lastModifiedDate":"2021-08-19"},{"lineNumber":108,"author":{"gitId":"kawaiigabrielneko"},"content":"                if (command_list.contains(command)){","lastModifiedDate":"2021-08-19"},{"lineNumber":109,"author":{"gitId":"kawaiigabrielneko"},"content":"                    System.out.println(\"Oops! The task description cannot be empty L:(\");","lastModifiedDate":"2021-08-19"},{"lineNumber":110,"author":{"gitId":"kawaiigabrielneko"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":111,"author":{"gitId":"kawaiigabrielneko"},"content":"                else {","lastModifiedDate":"2021-08-19"},{"lineNumber":112,"author":{"gitId":"kawaiigabrielneko"},"content":"                    System.out.println(\"Oops! I\u0027m sorry, but I don\u0027t know what that means :(\");","lastModifiedDate":"2021-08-19"},{"lineNumber":113,"author":{"gitId":"kawaiigabrielneko"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":114,"author":{"gitId":"kawaiigabrielneko"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":115,"author":{"gitId":"kawaiigabrielneko"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":116,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"kawaiigabrielneko":108,"-":10}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kawaiigabrielneko"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"kawaiigabrielneko"},"content":"    protected String time;","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"kawaiigabrielneko"},"content":"    public Event(String name, String time){","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"kawaiigabrielneko"},"content":"        super(name);","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"kawaiigabrielneko"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"kawaiigabrielneko"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"kawaiigabrielneko"},"content":"    public String toString(){","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"kawaiigabrielneko"},"content":"        return String.format(\"[E][%s] %s (at: %s)\",","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"kawaiigabrielneko"},"content":"                this.isDone ? \"X\" : \" \", name, time);","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"kawaiigabrielneko"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"kawaiigabrielneko":14}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kawaiigabrielneko"},"content":"public class Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"kawaiigabrielneko"},"content":"    protected String name;","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"kawaiigabrielneko"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"kawaiigabrielneko"},"content":"    public Task(String name){","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"kawaiigabrielneko"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"kawaiigabrielneko"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"kawaiigabrielneko"},"content":"    public String getName(){","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"kawaiigabrielneko"},"content":"        return name;","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"kawaiigabrielneko"},"content":"    public void markDone(){","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"kawaiigabrielneko"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"kawaiigabrielneko"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"kawaiigabrielneko"},"content":"    public String toString(){","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"kawaiigabrielneko"},"content":"        if (this.isDone){","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"kawaiigabrielneko"},"content":"            return \"[X] \" + name;","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"kawaiigabrielneko"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"kawaiigabrielneko"},"content":"        else {","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"kawaiigabrielneko"},"content":"            return \"[ ] \" + name;","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"kawaiigabrielneko"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"kawaiigabrielneko"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"kawaiigabrielneko":27}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kawaiigabrielneko"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"kawaiigabrielneko"},"content":"    public ToDo(String name){","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"kawaiigabrielneko"},"content":"        super(name);","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"kawaiigabrielneko"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"kawaiigabrielneko"},"content":"    public String toString(){","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"kawaiigabrielneko"},"content":"        if (this.isDone){","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"kawaiigabrielneko"},"content":"            return \"[T][X] \" + this.name;","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"kawaiigabrielneko"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"kawaiigabrielneko"},"content":"        else {","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"kawaiigabrielneko"},"content":"            return \"[T][ ] \" + this.name;","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"kawaiigabrielneko"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"kawaiigabrielneko"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"kawaiigabrielneko":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kawaiigabrielneko"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"kawaiigabrielneko":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"kawaiigabrielneko"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kawaiigabrielneko":1,"-":20}}]
