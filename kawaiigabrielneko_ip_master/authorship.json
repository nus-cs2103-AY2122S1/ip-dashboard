[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"kawaiigabrielneko"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"kawaiigabrielneko"},"content":"repositories {","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"kawaiigabrielneko"},"content":"    mavenCentral()","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"kawaiigabrielneko"},"content":"}","lastModifiedDate":"2021-09-14"},{"lineNumber":47,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":48,"author":{"gitId":"kawaiigabrielneko"},"content":"dependencies {","lastModifiedDate":"2021-09-14"},{"lineNumber":49,"author":{"gitId":"kawaiigabrielneko"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-14"},{"lineNumber":50,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":51,"author":{"gitId":"kawaiigabrielneko"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-14"},{"lineNumber":52,"author":{"gitId":"kawaiigabrielneko"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-14"},{"lineNumber":53,"author":{"gitId":"kawaiigabrielneko"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-14"},{"lineNumber":54,"author":{"gitId":"kawaiigabrielneko"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-14"},{"lineNumber":55,"author":{"gitId":"kawaiigabrielneko"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"kawaiigabrielneko"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-14"},{"lineNumber":57,"author":{"gitId":"kawaiigabrielneko"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-14"},{"lineNumber":58,"author":{"gitId":"kawaiigabrielneko"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-14"},{"lineNumber":59,"author":{"gitId":"kawaiigabrielneko"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-14"},{"lineNumber":60,"author":{"gitId":"kawaiigabrielneko"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-14"},{"lineNumber":61,"author":{"gitId":"kawaiigabrielneko"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-14"},{"lineNumber":62,"author":{"gitId":"kawaiigabrielneko"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-14"},{"lineNumber":63,"author":{"gitId":"kawaiigabrielneko"},"content":"}","lastModifiedDate":"2021-09-14"},{"lineNumber":64,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kawaiigabrielneko":22,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"kawaiigabrielneko"},"content":"### Keep track of your tasks","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"kawaiigabrielneko"},"content":"BTDuke can help you keep track of your tasks, and other information with them. You can classify your tasks into either to-dos, deadlines, or events. ","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"kawaiigabrielneko"},"content":"### Save your tasks between sessions","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"kawaiigabrielneko"},"content":"BTDuke will help you save your tasks between each usage of the app, so you won\u0027t have to remember them. ","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"kawaiigabrielneko"},"content":"Keywords to be substituted by your own details are written in BLOCK_LETTERS.","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"kawaiigabrielneko"},"content":"You should write any dates in YYYY-MM-DD format, where YYYY is the year in four digits, MM is the month in two digits, and DD is the date in two digits.","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"kawaiigabrielneko"},"content":"### `list` - List all tasks","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"kawaiigabrielneko"},"content":"You can list all tasks currently stored in BTDuke with the `list` command.","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"kawaiigabrielneko"},"content":"Example of usage: ","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"kawaiigabrielneko"},"content":"`list`","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"kawaiigabrielneko"},"content":"Expected outcome:","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"kawaiigabrielneko"},"content":"You will see the list of all tasks printed. ","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"kawaiigabrielneko"},"content":"```","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"kawaiigabrielneko"},"content":"[T][X] read book","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"kawaiigabrielneko"},"content":"[D][ ] homework (by: 2021-10-02)","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"kawaiigabrielneko"},"content":"[E][ ] test (at: 2021-10-05)","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"kawaiigabrielneko"},"content":"```","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"kawaiigabrielneko"},"content":"### `todo` - Add a to-do","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"kawaiigabrielneko"},"content":"You can add a to-do to BTDuke using the `todo` command.","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"kawaiigabrielneko"},"content":"Format:","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"kawaiigabrielneko"},"content":"`todo TASK_NAME`","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"kawaiigabrielneko"},"content":"Example of usage: ","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"kawaiigabrielneko"},"content":"`todo My task`","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"kawaiigabrielneko"},"content":"Expected outcome:","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"kawaiigabrielneko"},"content":"You will see a message that the task has been added if it was successful.","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"kawaiigabrielneko"},"content":"```","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"kawaiigabrielneko"},"content":"Added: [T][ ] My to-do","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"kawaiigabrielneko"},"content":"```","lastModifiedDate":"2021-09-23"},{"lineNumber":57,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"kawaiigabrielneko"},"content":"### `deadline` - Add a task with a deadline","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"kawaiigabrielneko"},"content":"You can add a task with a deadline to BTDuke.","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"kawaiigabrielneko"},"content":"Format: ","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"kawaiigabrielneko"},"content":"`deadline TASK_NAME /by DUE_DATE`","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"kawaiigabrielneko"},"content":"Example of usage:","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"kawaiigabrielneko"},"content":"`deadline My task with a deadline /by 2021-09-28`","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"kawaiigabrielneko"},"content":"Expected outcome:","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"kawaiigabrielneko"},"content":"You will see a message that the task has been added if it was successful.","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"kawaiigabrielneko"},"content":"```","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"kawaiigabrielneko"},"content":"Added: [D][ ] My task with a deadline (by: 2021-09-28)","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"kawaiigabrielneko"},"content":"```","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"kawaiigabrielneko"},"content":"### `event` - Add an event","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":79,"author":{"gitId":"kawaiigabrielneko"},"content":"You can add an event to BTDuke. ","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":81,"author":{"gitId":"kawaiigabrielneko"},"content":"Format: ","lastModifiedDate":"2021-09-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":83,"author":{"gitId":"kawaiigabrielneko"},"content":"`event TASK_NAME /at EVENT_DATE`","lastModifiedDate":"2021-09-27"},{"lineNumber":84,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"kawaiigabrielneko"},"content":"Example of usage:","lastModifiedDate":"2021-09-27"},{"lineNumber":86,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":87,"author":{"gitId":"kawaiigabrielneko"},"content":"`event My event /at 2021-09-29`","lastModifiedDate":"2021-09-27"},{"lineNumber":88,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":91,"author":{"gitId":"kawaiigabrielneko"},"content":"You will see a message that the event has been added if it was successful.","lastModifiedDate":"2021-09-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":94,"author":{"gitId":"kawaiigabrielneko"},"content":"Added: [E][ ] My event (at: 2021-09-29)","lastModifiedDate":"2021-09-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":96,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":97,"author":{"gitId":"kawaiigabrielneko"},"content":"### `done` - Mark task as done","lastModifiedDate":"2021-09-27"},{"lineNumber":98,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":99,"author":{"gitId":"kawaiigabrielneko"},"content":"You can mark a task as done in BTDuke.","lastModifiedDate":"2021-09-27"},{"lineNumber":100,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":101,"author":{"gitId":"kawaiigabrielneko"},"content":"Format: ","lastModifiedDate":"2021-09-27"},{"lineNumber":102,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":103,"author":{"gitId":"kawaiigabrielneko"},"content":"`done TASK_NAME`","lastModifiedDate":"2021-09-27"},{"lineNumber":104,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":105,"author":{"gitId":"kawaiigabrielneko"},"content":"Example of usage:","lastModifiedDate":"2021-09-27"},{"lineNumber":106,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":107,"author":{"gitId":"kawaiigabrielneko"},"content":"`done My task`","lastModifiedDate":"2021-09-27"},{"lineNumber":108,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":109,"author":{"gitId":"kawaiigabrielneko"},"content":"Expected outcome:","lastModifiedDate":"2021-09-27"},{"lineNumber":110,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":111,"author":{"gitId":"kawaiigabrielneko"},"content":"You will see a message that the task, if found, has been marked as done.","lastModifiedDate":"2021-09-27"},{"lineNumber":112,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":113,"author":{"gitId":"kawaiigabrielneko"},"content":"```","lastModifiedDate":"2021-09-27"},{"lineNumber":114,"author":{"gitId":"kawaiigabrielneko"},"content":"Yay :) This task is done:","lastModifiedDate":"2021-09-27"},{"lineNumber":115,"author":{"gitId":"kawaiigabrielneko"},"content":"[T][X] My task","lastModifiedDate":"2021-09-27"},{"lineNumber":116,"author":{"gitId":"kawaiigabrielneko"},"content":"```","lastModifiedDate":"2021-09-27"},{"lineNumber":117,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":118,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":119,"author":{"gitId":"kawaiigabrielneko"},"content":"### `delete` - Delete task","lastModifiedDate":"2021-09-27"},{"lineNumber":120,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":121,"author":{"gitId":"kawaiigabrielneko"},"content":"You can delete a task from BTDuke","lastModifiedDate":"2021-09-27"},{"lineNumber":122,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":123,"author":{"gitId":"kawaiigabrielneko"},"content":"Format: ","lastModifiedDate":"2021-09-27"},{"lineNumber":124,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":125,"author":{"gitId":"kawaiigabrielneko"},"content":"`delete TASK_NAME`","lastModifiedDate":"2021-09-27"},{"lineNumber":126,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":127,"author":{"gitId":"kawaiigabrielneko"},"content":"Example of usage:","lastModifiedDate":"2021-09-27"},{"lineNumber":128,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":129,"author":{"gitId":"kawaiigabrielneko"},"content":"`delete My task`","lastModifiedDate":"2021-09-27"},{"lineNumber":130,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":131,"author":{"gitId":"kawaiigabrielneko"},"content":"Expected outcome:","lastModifiedDate":"2021-09-27"},{"lineNumber":132,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":133,"author":{"gitId":"kawaiigabrielneko"},"content":"You will see a message that the task, if found, has been deleted.","lastModifiedDate":"2021-09-27"},{"lineNumber":134,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":135,"author":{"gitId":"kawaiigabrielneko"},"content":"```","lastModifiedDate":"2021-09-27"},{"lineNumber":136,"author":{"gitId":"kawaiigabrielneko"},"content":"Noted. This task has been deleted","lastModifiedDate":"2021-09-27"},{"lineNumber":137,"author":{"gitId":"kawaiigabrielneko"},"content":"[T][X] My task","lastModifiedDate":"2021-09-27"},{"lineNumber":138,"author":{"gitId":"kawaiigabrielneko"},"content":"```","lastModifiedDate":"2021-09-27"},{"lineNumber":139,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":140,"author":{"gitId":"kawaiigabrielneko"},"content":"### `find` - Find task with substring","lastModifiedDate":"2021-09-27"},{"lineNumber":141,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":142,"author":{"gitId":"kawaiigabrielneko"},"content":"You can find all tasks containing any substring in BTDuke. ","lastModifiedDate":"2021-09-27"},{"lineNumber":143,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":144,"author":{"gitId":"kawaiigabrielneko"},"content":"Format:","lastModifiedDate":"2021-09-27"},{"lineNumber":145,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":146,"author":{"gitId":"kawaiigabrielneko"},"content":"`find SUBSTRING`","lastModifiedDate":"2021-09-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2021-09-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":150,"author":{"gitId":"kawaiigabrielneko"},"content":"`find homework`","lastModifiedDate":"2021-09-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2021-09-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":154,"author":{"gitId":"kawaiigabrielneko"},"content":"You will see a list of all tasks which name contains the substring.","lastModifiedDate":"2021-09-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-27"},{"lineNumber":157,"author":{"gitId":"kawaiigabrielneko"},"content":"Noted. This task has been deleted","lastModifiedDate":"2021-09-27"},{"lineNumber":158,"author":{"gitId":"kawaiigabrielneko"},"content":"[T][ ] Math homework","lastModifiedDate":"2021-09-27"},{"lineNumber":159,"author":{"gitId":"kawaiigabrielneko"},"content":"[T][ ] Science homework","lastModifiedDate":"2021-09-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"kawaiigabrielneko":132,"-":28}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kawaiigabrielneko"},"content":"package duke;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"kawaiigabrielneko"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"kawaiigabrielneko"},"content":"public class Deadline extends TimedTask {","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"kawaiigabrielneko"},"content":"    public static final String DEADLINE_NAME \u003d \"deadline\";","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"kawaiigabrielneko"},"content":"    public static final String DEADLINE_INITIAL \u003d \"D\";","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"kawaiigabrielneko"},"content":"    public static final String DEADLINE_TIME_MARKER \u003d \"by\";","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"kawaiigabrielneko"},"content":"    public Deadline(String name, String time){","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"kawaiigabrielneko"},"content":"        super(name, time);","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"kawaiigabrielneko"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"kawaiigabrielneko"},"content":"    public String format(DateTimeFormatter dtformatter){","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"kawaiigabrielneko"},"content":"        return String.format(\"[%s][%s] %s (by: %s)\",","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"kawaiigabrielneko"},"content":"                DEADLINE_INITIAL, this.isDone ? \"X\" : \" \", getName(), dtformatter.format(time));","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"kawaiigabrielneko"},"content":"    public Deadline(String name, String time, boolean isDone){","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"kawaiigabrielneko"},"content":"        super(name, time, isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"kawaiigabrielneko"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"kawaiigabrielneko"},"content":"    public String toCsvRow() {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"kawaiigabrielneko"},"content":"        return String.join(","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"kawaiigabrielneko"},"content":"                \",\", DEADLINE_NAME, name, time.toString(), String.valueOf(isDone));","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"kawaiigabrielneko"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"kawaiigabrielneko"},"content":"    public String toString(){","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"kawaiigabrielneko"},"content":"        return String.format(\"[%s][%s] %s (by: %s)\",","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"kawaiigabrielneko"},"content":"                DEADLINE_INITIAL, this.isDone ? \"X\" : \" \", getName(), time);","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"kawaiigabrielneko"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"kawaiigabrielneko":35}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kawaiigabrielneko"},"content":"package duke;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"kawaiigabrielneko"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"kawaiigabrielneko"},"content":"import duke.ui.UserInterface;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"kawaiigabrielneko"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"kawaiigabrielneko"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"kawaiigabrielneko"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"kawaiigabrielneko"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"kawaiigabrielneko"},"content":"/**","lastModifiedDate":"2021-09-09"},{"lineNumber":13,"author":{"gitId":"kawaiigabrielneko"},"content":" * Represents a runner for the Duke program.","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"kawaiigabrielneko"},"content":" */","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"kawaiigabrielneko"},"content":"public class Duke {","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"kawaiigabrielneko"},"content":"    private UserInterface ui;","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"kawaiigabrielneko"},"content":"    private DateTimeFormatter dtformatter;","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"kawaiigabrielneko"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"kawaiigabrielneko"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"kawaiigabrielneko"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":23,"author":{"gitId":"kawaiigabrielneko"},"content":"     * Class constructor.","lastModifiedDate":"2021-09-09"},{"lineNumber":24,"author":{"gitId":"kawaiigabrielneko"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":25,"author":{"gitId":"kawaiigabrielneko"},"content":"    public Duke(MainWindow mw) {","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"kawaiigabrielneko"},"content":"        ui \u003d new UserInterface(mw);","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"kawaiigabrielneko"},"content":"        dtformatter \u003d DateTimeFormatter.ISO_DATE;","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"kawaiigabrielneko"},"content":"        String home \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"kawaiigabrielneko"},"content":"        Path dukePath \u003d Paths.get(home, \"Documents\", \"duke\", \"data.csv\");","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"kawaiigabrielneko"},"content":"        storage \u003d new Storage(dukePath);","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"kawaiigabrielneko"},"content":"        taskList \u003d storage.load(ui);","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"kawaiigabrielneko"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"kawaiigabrielneko"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"kawaiigabrielneko"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"kawaiigabrielneko"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"kawaiigabrielneko"},"content":"    public void respond(String input) {","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"kawaiigabrielneko"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"kawaiigabrielneko"},"content":"            Command command \u003d Parser.parse(input);","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"kawaiigabrielneko"},"content":"            assert command !\u003d null;","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"kawaiigabrielneko"},"content":"            command.execute(taskList, ui);","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"kawaiigabrielneko"},"content":"        } catch (Exception ex) {","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"kawaiigabrielneko"},"content":"            ui.displayError(ex.getMessage());","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"kawaiigabrielneko"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"kawaiigabrielneko"},"content":"    public void showGreeting() {","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"kawaiigabrielneko"},"content":"        ui.displayGreeting();","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"kawaiigabrielneko"},"content":"    public void save() {","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"kawaiigabrielneko"},"content":"        storage.save(ui, taskList);","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"kawaiigabrielneko":54,"-":1}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kawaiigabrielneko"},"content":"package duke;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"kawaiigabrielneko"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"kawaiigabrielneko"},"content":"public class Event extends TimedTask {","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"kawaiigabrielneko"},"content":"    public static final String EVENT_NAME \u003d \"event\";","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"kawaiigabrielneko"},"content":"    public static final String EVENT_INITIAL \u003d \"E\";","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"kawaiigabrielneko"},"content":"    public static final String EVENT_TIME_MARKER \u003d \"at\";","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"kawaiigabrielneko"},"content":"    public Event(String name, String time){","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"kawaiigabrielneko"},"content":"        super(name, time);","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"kawaiigabrielneko"},"content":"    public Event(String name, String time, boolean isDone){","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"kawaiigabrielneko"},"content":"        super(name, time, isDone);","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"kawaiigabrielneko"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"kawaiigabrielneko"},"content":"    public String format(DateTimeFormatter dtformatter){","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"kawaiigabrielneko"},"content":"        return String.format(\"[%s][%s] %s (at: %s)\",","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"kawaiigabrielneko"},"content":"                EVENT_INITIAL, this.isDone ? \"X\" : \" \", name, dtformatter.format(time));","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"kawaiigabrielneko"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"kawaiigabrielneko"},"content":"    public String toCsvRow() {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"kawaiigabrielneko"},"content":"        return String.join(","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"kawaiigabrielneko"},"content":"                \",\", EVENT_NAME, name, time.toString(), String.valueOf(isDone));","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"kawaiigabrielneko"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"kawaiigabrielneko"},"content":"    public String toString(){","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"kawaiigabrielneko"},"content":"        return String.format(\"[%s][%s] %s (at: %s)\",","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"kawaiigabrielneko"},"content":"                EVENT_INITIAL, this.isDone ? \"X\" : \" \", getName(), time);","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"kawaiigabrielneko"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"kawaiigabrielneko":35}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kawaiigabrielneko"},"content":"package duke;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":3,"author":{"gitId":"kawaiigabrielneko"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"kawaiigabrielneko"},"content":"public class Launcher {","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"kawaiigabrielneko"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"kawaiigabrielneko"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"kawaiigabrielneko"},"content":"}","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"kawaiigabrielneko":9}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kawaiigabrielneko"},"content":"package duke;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"kawaiigabrielneko"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"kawaiigabrielneko"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"kawaiigabrielneko"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"kawaiigabrielneko"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"kawaiigabrielneko"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"kawaiigabrielneko"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"kawaiigabrielneko"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"kawaiigabrielneko"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"kawaiigabrielneko"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"kawaiigabrielneko"},"content":"    public static final String APP_NAME \u003d \"BTDuke\";","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"kawaiigabrielneko"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"kawaiigabrielneko"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"kawaiigabrielneko"},"content":"        MainWindow ap \u003d new MainWindow();","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"kawaiigabrielneko"},"content":"        duke \u003d new Duke(ap);","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"kawaiigabrielneko"},"content":"        ap.setDuke(duke);","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"kawaiigabrielneko"},"content":"        Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"kawaiigabrielneko"},"content":"        stage.setScene(scene);","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"kawaiigabrielneko"},"content":"        stage.setTitle(APP_NAME);","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"kawaiigabrielneko"},"content":"        stage.show();","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"kawaiigabrielneko"},"content":"        duke.showGreeting();","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"kawaiigabrielneko"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"kawaiigabrielneko"},"content":"    public void stop(){","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"kawaiigabrielneko"},"content":"        duke.save();","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"kawaiigabrielneko"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"kawaiigabrielneko":32}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kawaiigabrielneko"},"content":"package duke;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"kawaiigabrielneko"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"kawaiigabrielneko"},"content":"import duke.command.CommandAdd;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"kawaiigabrielneko"},"content":"import duke.command.CommandDelete;","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"kawaiigabrielneko"},"content":"import duke.command.CommandDone;","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"kawaiigabrielneko"},"content":"import duke.command.CommandError;","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"kawaiigabrielneko"},"content":"import duke.command.CommandExit;","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"kawaiigabrielneko"},"content":"import duke.command.CommandFind;","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"kawaiigabrielneko"},"content":"import duke.command.CommandShowList;","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"kawaiigabrielneko"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"kawaiigabrielneko"},"content":"/**","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"kawaiigabrielneko"},"content":" * A helper class that parses a command from a String.","lastModifiedDate":"2021-09-09"},{"lineNumber":16,"author":{"gitId":"kawaiigabrielneko"},"content":" */","lastModifiedDate":"2021-09-09"},{"lineNumber":17,"author":{"gitId":"kawaiigabrielneko"},"content":"public class Parser {","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"kawaiigabrielneko"},"content":"    public static final String EMPTY_COMMAND_MESSAGE \u003d \"Command cannot be empty\";","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"kawaiigabrielneko"},"content":"    public static final String UNKNOWN_COMMAND_MESSAGE \u003d \"Command not recognised\";","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"kawaiigabrielneko"},"content":"    public static final String EMPTY_TASK_SUFFIX \u003d \" must have a name\";","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"kawaiigabrielneko"},"content":"    public static final String MISSING_TIME_MESSAGE \u003d \" must be %s at a certain time\";","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"kawaiigabrielneko"},"content":"    public static final String NO_ARGUMENTS_EXPECTED_SUFFIX \u003d \" command should not have any other arguments\";","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"kawaiigabrielneko"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":26,"author":{"gitId":"kawaiigabrielneko"},"content":"     * Reads a String, and parses it into a Command. ","lastModifiedDate":"2021-09-09"},{"lineNumber":27,"author":{"gitId":"kawaiigabrielneko"},"content":"     * @param fullCommand A string containing a command to be parsed","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"kawaiigabrielneko"},"content":"     * @return The Command parsed from the input String","lastModifiedDate":"2021-09-09"},{"lineNumber":29,"author":{"gitId":"kawaiigabrielneko"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":30,"author":{"gitId":"kawaiigabrielneko"},"content":"    public static Command parse(String fullCommand) {","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"kawaiigabrielneko"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"kawaiigabrielneko"},"content":"            String[] tokens \u003d fullCommand.split(\" \");","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"kawaiigabrielneko"},"content":"            if (tokens.length \u003d\u003d 0){","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"kawaiigabrielneko"},"content":"                throw new IllegalArgumentException(EMPTY_COMMAND_MESSAGE);","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"kawaiigabrielneko"},"content":"            }","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"kawaiigabrielneko"},"content":"            String commandStr \u003d tokens[0];","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"kawaiigabrielneko"},"content":"            String[] otherTokens \u003d Arrays.copyOfRange(tokens, 1, tokens.length);","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"kawaiigabrielneko"},"content":"            if (commandStr.equals(ToDo.TODO_NAME)) {","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"kawaiigabrielneko"},"content":"                return parseToDo(otherTokens);","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"kawaiigabrielneko"},"content":"            } else if (commandStr.equals(Event.EVENT_NAME)) {","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"kawaiigabrielneko"},"content":"                return parseEvent(otherTokens);","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"kawaiigabrielneko"},"content":"            } else if (commandStr.equals(Deadline.DEADLINE_NAME)) {","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"kawaiigabrielneko"},"content":"                return parseDeadline(otherTokens);","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"kawaiigabrielneko"},"content":"            } else if (commandStr.equals(CommandShowList.SHOW_LIST_NAME)) {","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"kawaiigabrielneko"},"content":"                return parseShowList(otherTokens);","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"kawaiigabrielneko"},"content":"            } else if (commandStr.equals(CommandDelete.DELETE_NAME)) {","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"kawaiigabrielneko"},"content":"                return parseDelete(otherTokens);","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"kawaiigabrielneko"},"content":"            } else if (commandStr.equals(CommandDone.DONE_NAME)) {","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"kawaiigabrielneko"},"content":"                return parseDone(otherTokens);","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"kawaiigabrielneko"},"content":"            } else if (commandStr.equals(CommandExit.EXIT_NAME)) {","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"kawaiigabrielneko"},"content":"                return parseExit(otherTokens);","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"kawaiigabrielneko"},"content":"            } else if (commandStr.equals(CommandFind.FIND_NAME)) {","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"kawaiigabrielneko"},"content":"                return parseFind(otherTokens);","lastModifiedDate":"2021-09-20"},{"lineNumber":54,"author":{"gitId":"kawaiigabrielneko"},"content":"            } else {","lastModifiedDate":"2021-09-03"},{"lineNumber":55,"author":{"gitId":"kawaiigabrielneko"},"content":"                throw new IllegalArgumentException(UNKNOWN_COMMAND_MESSAGE);","lastModifiedDate":"2021-09-20"},{"lineNumber":56,"author":{"gitId":"kawaiigabrielneko"},"content":"            }","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"kawaiigabrielneko"},"content":"        } catch (IllegalArgumentException ex) {","lastModifiedDate":"2021-09-20"},{"lineNumber":58,"author":{"gitId":"kawaiigabrielneko"},"content":"            return new CommandError(ex.getMessage());","lastModifiedDate":"2021-09-20"},{"lineNumber":59,"author":{"gitId":"kawaiigabrielneko"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":60,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":61,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":62,"author":{"gitId":"kawaiigabrielneko"},"content":"    private static CommandAdd parseToDo(String[] tokens) {","lastModifiedDate":"2021-09-20"},{"lineNumber":63,"author":{"gitId":"kawaiigabrielneko"},"content":"        String taskName \u003d String.join(\" \", tokens);","lastModifiedDate":"2021-09-20"},{"lineNumber":64,"author":{"gitId":"kawaiigabrielneko"},"content":"        return new CommandAdd(new ToDo(taskName));","lastModifiedDate":"2021-09-03"},{"lineNumber":65,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":66,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":67,"author":{"gitId":"kawaiigabrielneko"},"content":"    private static CommandAdd parseEvent(String[] tokens) {","lastModifiedDate":"2021-09-20"},{"lineNumber":68,"author":{"gitId":"kawaiigabrielneko"},"content":"        int atIdx \u003d Arrays.asList(tokens).indexOf(\"/\" + Event.EVENT_TIME_MARKER);","lastModifiedDate":"2021-09-20"},{"lineNumber":69,"author":{"gitId":"kawaiigabrielneko"},"content":"        if (atIdx \u003d\u003d -1) {","lastModifiedDate":"2021-09-03"},{"lineNumber":70,"author":{"gitId":"kawaiigabrielneko"},"content":"            throw new IllegalArgumentException(Event.EVENT_NAME + String.format(","lastModifiedDate":"2021-09-20"},{"lineNumber":71,"author":{"gitId":"kawaiigabrielneko"},"content":"                    MISSING_TIME_MESSAGE, Event.EVENT_TIME_MARKER","lastModifiedDate":"2021-09-20"},{"lineNumber":72,"author":{"gitId":"kawaiigabrielneko"},"content":"            ));","lastModifiedDate":"2021-09-20"},{"lineNumber":73,"author":{"gitId":"kawaiigabrielneko"},"content":"        } else if (atIdx \u003d\u003d 0) {","lastModifiedDate":"2021-09-20"},{"lineNumber":74,"author":{"gitId":"kawaiigabrielneko"},"content":"            throw new IllegalArgumentException(Event.EVENT_NAME + EMPTY_TASK_SUFFIX);","lastModifiedDate":"2021-09-20"},{"lineNumber":75,"author":{"gitId":"kawaiigabrielneko"},"content":"        } else {","lastModifiedDate":"2021-09-03"},{"lineNumber":76,"author":{"gitId":"kawaiigabrielneko"},"content":"            String taskName \u003d String.join(\" \",","lastModifiedDate":"2021-09-09"},{"lineNumber":77,"author":{"gitId":"kawaiigabrielneko"},"content":"                    Arrays.copyOfRange(tokens, 0, atIdx));","lastModifiedDate":"2021-09-20"},{"lineNumber":78,"author":{"gitId":"kawaiigabrielneko"},"content":"            String timeStr \u003d String.join(\" \",","lastModifiedDate":"2021-09-09"},{"lineNumber":79,"author":{"gitId":"kawaiigabrielneko"},"content":"                    Arrays.copyOfRange(tokens, atIdx + 1, tokens.length));","lastModifiedDate":"2021-09-09"},{"lineNumber":80,"author":{"gitId":"kawaiigabrielneko"},"content":"            return new CommandAdd(new Event(taskName, timeStr));","lastModifiedDate":"2021-09-03"},{"lineNumber":81,"author":{"gitId":"kawaiigabrielneko"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":82,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":83,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":84,"author":{"gitId":"kawaiigabrielneko"},"content":"    private static CommandShowList parseShowList(String[] tokens) {","lastModifiedDate":"2021-09-20"},{"lineNumber":85,"author":{"gitId":"kawaiigabrielneko"},"content":"        if (tokens.length \u003e 0) {","lastModifiedDate":"2021-09-20"},{"lineNumber":86,"author":{"gitId":"kawaiigabrielneko"},"content":"            throw new IllegalArgumentException(CommandShowList.SHOW_LIST_NAME + NO_ARGUMENTS_EXPECTED_SUFFIX);","lastModifiedDate":"2021-09-20"},{"lineNumber":87,"author":{"gitId":"kawaiigabrielneko"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":88,"author":{"gitId":"kawaiigabrielneko"},"content":"        return new CommandShowList();","lastModifiedDate":"2021-09-20"},{"lineNumber":89,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":90,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":91,"author":{"gitId":"kawaiigabrielneko"},"content":"    private static CommandAdd parseDeadline(String[] tokens) {","lastModifiedDate":"2021-09-20"},{"lineNumber":92,"author":{"gitId":"kawaiigabrielneko"},"content":"        int byIdx \u003d Arrays.asList(tokens).indexOf(\"/\" + Deadline.DEADLINE_TIME_MARKER);","lastModifiedDate":"2021-09-20"},{"lineNumber":93,"author":{"gitId":"kawaiigabrielneko"},"content":"        if (byIdx \u003d\u003d -1) {","lastModifiedDate":"2021-09-03"},{"lineNumber":94,"author":{"gitId":"kawaiigabrielneko"},"content":"            throw new IllegalArgumentException(Deadline.DEADLINE_NAME + EMPTY_TASK_SUFFIX);","lastModifiedDate":"2021-09-20"},{"lineNumber":95,"author":{"gitId":"kawaiigabrielneko"},"content":"        } else if (byIdx \u003d\u003d 0) {","lastModifiedDate":"2021-09-20"},{"lineNumber":96,"author":{"gitId":"kawaiigabrielneko"},"content":"            throw new IllegalArgumentException(Deadline.DEADLINE_NAME + String.format(","lastModifiedDate":"2021-09-20"},{"lineNumber":97,"author":{"gitId":"kawaiigabrielneko"},"content":"                    MISSING_TIME_MESSAGE, Deadline.DEADLINE_TIME_MARKER","lastModifiedDate":"2021-09-20"},{"lineNumber":98,"author":{"gitId":"kawaiigabrielneko"},"content":"            ));","lastModifiedDate":"2021-09-20"},{"lineNumber":99,"author":{"gitId":"kawaiigabrielneko"},"content":"        } else {","lastModifiedDate":"2021-09-03"},{"lineNumber":100,"author":{"gitId":"kawaiigabrielneko"},"content":"            String taskName \u003d String.join(\" \",","lastModifiedDate":"2021-09-09"},{"lineNumber":101,"author":{"gitId":"kawaiigabrielneko"},"content":"                    Arrays.copyOfRange(tokens, 0, byIdx));","lastModifiedDate":"2021-09-20"},{"lineNumber":102,"author":{"gitId":"kawaiigabrielneko"},"content":"            String timeStr \u003d String.join(\" \",","lastModifiedDate":"2021-09-09"},{"lineNumber":103,"author":{"gitId":"kawaiigabrielneko"},"content":"                    Arrays.copyOfRange(tokens, byIdx + 1, tokens.length));","lastModifiedDate":"2021-09-09"},{"lineNumber":104,"author":{"gitId":"kawaiigabrielneko"},"content":"            return new CommandAdd(new Deadline(taskName, timeStr));","lastModifiedDate":"2021-09-03"},{"lineNumber":105,"author":{"gitId":"kawaiigabrielneko"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":106,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":107,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":108,"author":{"gitId":"kawaiigabrielneko"},"content":"    private static CommandDelete parseDelete(String[] tokens) {","lastModifiedDate":"2021-09-20"},{"lineNumber":109,"author":{"gitId":"kawaiigabrielneko"},"content":"        String taskName \u003d String.join(\" \", tokens);","lastModifiedDate":"2021-09-20"},{"lineNumber":110,"author":{"gitId":"kawaiigabrielneko"},"content":"        return new CommandDelete(taskName);","lastModifiedDate":"2021-09-03"},{"lineNumber":111,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":112,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":113,"author":{"gitId":"kawaiigabrielneko"},"content":"    private static CommandDone parseDone(String[] tokens) {","lastModifiedDate":"2021-09-20"},{"lineNumber":114,"author":{"gitId":"kawaiigabrielneko"},"content":"        String taskName \u003d String.join(\" \", tokens);","lastModifiedDate":"2021-09-20"},{"lineNumber":115,"author":{"gitId":"kawaiigabrielneko"},"content":"        return new CommandDone(taskName);","lastModifiedDate":"2021-09-03"},{"lineNumber":116,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":117,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":118,"author":{"gitId":"kawaiigabrielneko"},"content":"    private static CommandExit parseExit(String[] tokens) {","lastModifiedDate":"2021-09-20"},{"lineNumber":119,"author":{"gitId":"kawaiigabrielneko"},"content":"        if (tokens.length \u003e 0) {","lastModifiedDate":"2021-09-20"},{"lineNumber":120,"author":{"gitId":"kawaiigabrielneko"},"content":"            throw new IllegalArgumentException(CommandExit.EXIT_NAME + NO_ARGUMENTS_EXPECTED_SUFFIX);","lastModifiedDate":"2021-09-20"},{"lineNumber":121,"author":{"gitId":"kawaiigabrielneko"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":122,"author":{"gitId":"kawaiigabrielneko"},"content":"        return new CommandExit();","lastModifiedDate":"2021-09-20"},{"lineNumber":123,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":124,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":125,"author":{"gitId":"kawaiigabrielneko"},"content":"    private static CommandFind parseFind(String[] tokens) {","lastModifiedDate":"2021-09-20"},{"lineNumber":126,"author":{"gitId":"kawaiigabrielneko"},"content":"        String keyword \u003d String.join(\" \", tokens);","lastModifiedDate":"2021-09-20"},{"lineNumber":127,"author":{"gitId":"kawaiigabrielneko"},"content":"        return new CommandFind(keyword);","lastModifiedDate":"2021-09-20"},{"lineNumber":128,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":129,"author":{"gitId":"kawaiigabrielneko"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"kawaiigabrielneko":129}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kawaiigabrielneko"},"content":"package duke;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"kawaiigabrielneko"},"content":"import duke.ui.UserInterface;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"kawaiigabrielneko"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"kawaiigabrielneko"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"kawaiigabrielneko"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"kawaiigabrielneko"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"kawaiigabrielneko"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"kawaiigabrielneko"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"kawaiigabrielneko"},"content":"public class Storage {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"kawaiigabrielneko"},"content":"    public static final String SAVE_SUCCESSFUL_PREFIX \u003d \"File successfully saved to \";","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"kawaiigabrielneko"},"content":"    public static final String SAVE_FAILURE_MESSAGE \u003d \"Error: Could not save file\";","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"kawaiigabrielneko"},"content":"    public static final String LOAD_FAILURE_MESSAGE \u003d \"File could not be found\";","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"kawaiigabrielneko"},"content":"    public static final String INVALID_TASK_MESSAGE \u003d \"Invalid task found\";","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"kawaiigabrielneko"},"content":"    private File file;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"kawaiigabrielneko"},"content":"    public Storage(Path filepath) {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"kawaiigabrielneko"},"content":"        file \u003d filepath.toFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"kawaiigabrielneko"},"content":"    public TaskList load(UserInterface ui){","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"kawaiigabrielneko"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"kawaiigabrielneko"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"kawaiigabrielneko"},"content":"            Scanner fileReader \u003d new Scanner(file);","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"kawaiigabrielneko"},"content":"            while (fileReader.hasNext()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"kawaiigabrielneko"},"content":"                String row \u003d fileReader.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"kawaiigabrielneko"},"content":"                Task task \u003d parseTask(row);","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"kawaiigabrielneko"},"content":"                taskList.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"kawaiigabrielneko"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"kawaiigabrielneko"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"kawaiigabrielneko"},"content":"            ui.displayError(LOAD_FAILURE_MESSAGE);","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"kawaiigabrielneko"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"kawaiigabrielneko"},"content":"        return taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"kawaiigabrielneko"},"content":"    private Task parseTask(String taskStr) {","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"kawaiigabrielneko"},"content":"        String[] tokens \u003d taskStr.split(\",\");","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"kawaiigabrielneko"},"content":"        String type \u003d tokens[0];","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"kawaiigabrielneko"},"content":"        String[] otherTokens \u003d Arrays.copyOfRange(tokens, 1, tokens.length);","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"kawaiigabrielneko"},"content":"        if (type.equals(ToDo.TODO_NAME)) {","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"kawaiigabrielneko"},"content":"            return parseToDo(otherTokens);","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"kawaiigabrielneko"},"content":"        } else if (type.equals(Event.EVENT_NAME)) {","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"kawaiigabrielneko"},"content":"            return parseEvent(otherTokens);","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"kawaiigabrielneko"},"content":"        } else if (type.equals(Deadline.DEADLINE_NAME)) {","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"kawaiigabrielneko"},"content":"            return parseDeadline(otherTokens);","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"kawaiigabrielneko"},"content":"        } else {","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"kawaiigabrielneko"},"content":"            throw new IllegalArgumentException(INVALID_TASK_MESSAGE);","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"kawaiigabrielneko"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"kawaiigabrielneko"},"content":"    private Task parseToDo(String[] tokens) {","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"kawaiigabrielneko"},"content":"        return new ToDo(tokens[0], Boolean.parseBoolean(tokens[1]));","lastModifiedDate":"2021-09-20"},{"lineNumber":54,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":56,"author":{"gitId":"kawaiigabrielneko"},"content":"    private Task parseEvent(String[] tokens) {","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"kawaiigabrielneko"},"content":"        return new Event(tokens[0], tokens[1], Boolean.parseBoolean(tokens[2]));","lastModifiedDate":"2021-09-20"},{"lineNumber":58,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":59,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":60,"author":{"gitId":"kawaiigabrielneko"},"content":"    private Task parseDeadline(String[] tokens) {","lastModifiedDate":"2021-09-20"},{"lineNumber":61,"author":{"gitId":"kawaiigabrielneko"},"content":"        return new Deadline(tokens[0], tokens[1], Boolean.parseBoolean(tokens[2]));","lastModifiedDate":"2021-09-20"},{"lineNumber":62,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":63,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":64,"author":{"gitId":"kawaiigabrielneko"},"content":"    public void save(UserInterface ui, TaskList taskList) {","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"kawaiigabrielneko"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"kawaiigabrielneko"},"content":"            PrintWriter dukeWriter \u003d new PrintWriter(file);","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"kawaiigabrielneko"},"content":"            dukeWriter.print(taskList.toCsvString());","lastModifiedDate":"2021-09-20"},{"lineNumber":68,"author":{"gitId":"kawaiigabrielneko"},"content":"            dukeWriter.close();","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"kawaiigabrielneko"},"content":"            ui.print(SAVE_SUCCESSFUL_PREFIX + file.getPath());","lastModifiedDate":"2021-09-20"},{"lineNumber":70,"author":{"gitId":"kawaiigabrielneko"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"kawaiigabrielneko"},"content":"            ui.displayError(SAVE_FAILURE_MESSAGE);","lastModifiedDate":"2021-09-20"},{"lineNumber":72,"author":{"gitId":"kawaiigabrielneko"},"content":"        } finally {","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"kawaiigabrielneko"},"content":"            ui.displayFarewell();","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"kawaiigabrielneko"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"kawaiigabrielneko"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"kawaiigabrielneko":76}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kawaiigabrielneko"},"content":"package duke;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"kawaiigabrielneko"},"content":"/**","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"kawaiigabrielneko"},"content":" * Represents a task","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"kawaiigabrielneko"},"content":" */","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"kawaiigabrielneko"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"kawaiigabrielneko"},"content":"    /** The name of the Task */","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"kawaiigabrielneko"},"content":"    protected String name;","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"kawaiigabrielneko"},"content":"    /** Whether the Task is done or not */","lastModifiedDate":"2021-09-09"},{"lineNumber":10,"author":{"gitId":"kawaiigabrielneko"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"kawaiigabrielneko"},"content":"    /** Whether this Task has a timed entry or not */","lastModifiedDate":"2021-09-09"},{"lineNumber":12,"author":{"gitId":"kawaiigabrielneko"},"content":"    private boolean isTimed;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"kawaiigabrielneko"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"kawaiigabrielneko"},"content":"     * Class constructor","lastModifiedDate":"2021-09-09"},{"lineNumber":16,"author":{"gitId":"kawaiigabrielneko"},"content":"     * @param name The name of the Task","lastModifiedDate":"2021-09-09"},{"lineNumber":17,"author":{"gitId":"kawaiigabrielneko"},"content":"     * @param isTimed Whether this Task has a timed entry or not","lastModifiedDate":"2021-09-09"},{"lineNumber":18,"author":{"gitId":"kawaiigabrielneko"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":19,"author":{"gitId":"kawaiigabrielneko"},"content":"    public Task(String name, boolean isTimed){","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"kawaiigabrielneko"},"content":"        assert !name.equals(\"\"); // Name should not ever be empty","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"kawaiigabrielneko"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"kawaiigabrielneko"},"content":"        this.isTimed \u003d isTimed;","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"kawaiigabrielneko"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"kawaiigabrielneko"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":27,"author":{"gitId":"kawaiigabrielneko"},"content":"     * Class constructor","lastModifiedDate":"2021-09-09"},{"lineNumber":28,"author":{"gitId":"kawaiigabrielneko"},"content":"     * @param name The name of the Task","lastModifiedDate":"2021-09-09"},{"lineNumber":29,"author":{"gitId":"kawaiigabrielneko"},"content":"     * @param isTimed Whether this Task has a timed entry or not","lastModifiedDate":"2021-09-09"},{"lineNumber":30,"author":{"gitId":"kawaiigabrielneko"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":31,"author":{"gitId":"kawaiigabrielneko"},"content":"    public Task(String name, boolean isTimed, boolean isDone){","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"kawaiigabrielneko"},"content":"        assert !name.equals(\"\");","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"kawaiigabrielneko"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"kawaiigabrielneko"},"content":"        this.isTimed \u003d isTimed;","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"kawaiigabrielneko"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"kawaiigabrielneko"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":39,"author":{"gitId":"kawaiigabrielneko"},"content":"     * Gets the name of the Task","lastModifiedDate":"2021-09-09"},{"lineNumber":40,"author":{"gitId":"kawaiigabrielneko"},"content":"     * @return The name of the Task","lastModifiedDate":"2021-09-09"},{"lineNumber":41,"author":{"gitId":"kawaiigabrielneko"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":42,"author":{"gitId":"kawaiigabrielneko"},"content":"    public String getName(){","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"kawaiigabrielneko"},"content":"        return name;","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"kawaiigabrielneko"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":47,"author":{"gitId":"kawaiigabrielneko"},"content":"     * Marks this task as finished","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"kawaiigabrielneko"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":49,"author":{"gitId":"kawaiigabrielneko"},"content":"    public void markDone(){","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"kawaiigabrielneko"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"kawaiigabrielneko"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":54,"author":{"gitId":"kawaiigabrielneko"},"content":"     * Converts the Task into a String that represents this Task in a CSV file","lastModifiedDate":"2021-09-09"},{"lineNumber":55,"author":{"gitId":"kawaiigabrielneko"},"content":"     * @return A String representing this Task as a CSV row","lastModifiedDate":"2021-09-09"},{"lineNumber":56,"author":{"gitId":"kawaiigabrielneko"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":57,"author":{"gitId":"kawaiigabrielneko"},"content":"    public abstract String toCsvRow();","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"kawaiigabrielneko"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":60,"author":{"gitId":"kawaiigabrielneko"},"content":"     * Returns whether this Task is timed or not","lastModifiedDate":"2021-09-20"},{"lineNumber":61,"author":{"gitId":"kawaiigabrielneko"},"content":"     * @return \u003ccode\u003eisTimed\u003c/code\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":62,"author":{"gitId":"kawaiigabrielneko"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":63,"author":{"gitId":"kawaiigabrielneko"},"content":"    public boolean isTimed(){","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"kawaiigabrielneko"},"content":"        return isTimed;","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"kawaiigabrielneko"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"kawaiigabrielneko"},"content":"    public String toString(){","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"kawaiigabrielneko"},"content":"        if (this.isDone){","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"kawaiigabrielneko"},"content":"            return \"[X] \" + name;","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"kawaiigabrielneko"},"content":"        } else {","lastModifiedDate":"2021-09-09"},{"lineNumber":72,"author":{"gitId":"kawaiigabrielneko"},"content":"            return \"[ ] \" + name;","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"kawaiigabrielneko"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"kawaiigabrielneko"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"kawaiigabrielneko":75}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kawaiigabrielneko"},"content":"package duke;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"kawaiigabrielneko"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"kawaiigabrielneko"},"content":"import java.util.List;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"kawaiigabrielneko"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"kawaiigabrielneko"},"content":"/**","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"kawaiigabrielneko"},"content":" * Represents a list of any number of Tasks with different names, including zero.","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"kawaiigabrielneko"},"content":" */","lastModifiedDate":"2021-09-09"},{"lineNumber":10,"author":{"gitId":"kawaiigabrielneko"},"content":"public class TaskList {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"kawaiigabrielneko"},"content":"    public static final String DUPLICATE_TASK_MESSAGE_SUFFIX \u003d \" already exists in the TaskList\";","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"kawaiigabrielneko"},"content":"    private List\u003cTask\u003e taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"kawaiigabrielneko"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"kawaiigabrielneko"},"content":"     * Creates an empty TaskList.","lastModifiedDate":"2021-09-09"},{"lineNumber":16,"author":{"gitId":"kawaiigabrielneko"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":17,"author":{"gitId":"kawaiigabrielneko"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"kawaiigabrielneko"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"kawaiigabrielneko"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":22,"author":{"gitId":"kawaiigabrielneko"},"content":"     * Creates a TaskList from a list of Tasks.","lastModifiedDate":"2021-09-09"},{"lineNumber":23,"author":{"gitId":"kawaiigabrielneko"},"content":"     * @param tasks The list of Tasks containing the Tasks this TaskList will have.","lastModifiedDate":"2021-09-09"},{"lineNumber":24,"author":{"gitId":"kawaiigabrielneko"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":25,"author":{"gitId":"kawaiigabrielneko"},"content":"    public TaskList(List\u003c? extends Task\u003e tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"kawaiigabrielneko"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"kawaiigabrielneko"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"kawaiigabrielneko"},"content":"            taskList.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"kawaiigabrielneko"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"kawaiigabrielneko"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":33,"author":{"gitId":"kawaiigabrielneko"},"content":"     * Adds a Task to this TaskList.","lastModifiedDate":"2021-09-09"},{"lineNumber":34,"author":{"gitId":"kawaiigabrielneko"},"content":"     * @param task The Task to be added to this TaskList","lastModifiedDate":"2021-09-09"},{"lineNumber":35,"author":{"gitId":"kawaiigabrielneko"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":36,"author":{"gitId":"kawaiigabrielneko"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"kawaiigabrielneko"},"content":"        if (find(task.getName()) !\u003d null) {","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"kawaiigabrielneko"},"content":"            throw new IllegalArgumentException(task.getName() + DUPLICATE_TASK_MESSAGE_SUFFIX);","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"kawaiigabrielneko"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"kawaiigabrielneko"},"content":"        taskList.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"kawaiigabrielneko"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":44,"author":{"gitId":"kawaiigabrielneko"},"content":"     * Finds the Task with the same name as a supplied String, if any.","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"kawaiigabrielneko"},"content":"     * @param taskName The name of the Task to find","lastModifiedDate":"2021-09-09"},{"lineNumber":46,"author":{"gitId":"kawaiigabrielneko"},"content":"     * @return A Task with the same name, or \u003ccode\u003enull\u003c/code\u003e if none was found.","lastModifiedDate":"2021-09-09"},{"lineNumber":47,"author":{"gitId":"kawaiigabrielneko"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":48,"author":{"gitId":"kawaiigabrielneko"},"content":"    public Task find(String taskName) {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"kawaiigabrielneko"},"content":"        for (Task task: taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"kawaiigabrielneko"},"content":"            if (task.getName().equals(taskName)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"kawaiigabrielneko"},"content":"                return task;","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"kawaiigabrielneko"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"kawaiigabrielneko"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"kawaiigabrielneko"},"content":"        return null;","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"kawaiigabrielneko"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":58,"author":{"gitId":"kawaiigabrielneko"},"content":"     * Finds all Tasks containing a supplied String.","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"kawaiigabrielneko"},"content":"     * @param keyword The name of the Task to find","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"kawaiigabrielneko"},"content":"     * @return A TaskList containing all Tasks from this list","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"kawaiigabrielneko"},"content":"     * with \u003ccode\u003ekeyword\u003c/code\u003e as a substring","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"kawaiigabrielneko"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"kawaiigabrielneko"},"content":"    public TaskList match(String keyword) {","lastModifiedDate":"2021-09-19"},{"lineNumber":64,"author":{"gitId":"kawaiigabrielneko"},"content":"        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-19"},{"lineNumber":65,"author":{"gitId":"kawaiigabrielneko"},"content":"        for (Task task: taskList) {","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"kawaiigabrielneko"},"content":"            if (task.getName().contains(keyword)) {","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"kawaiigabrielneko"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2021-09-19"},{"lineNumber":68,"author":{"gitId":"kawaiigabrielneko"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":69,"author":{"gitId":"kawaiigabrielneko"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":70,"author":{"gitId":"kawaiigabrielneko"},"content":"        return new TaskList(matchingTasks);","lastModifiedDate":"2021-09-19"},{"lineNumber":71,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":72,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":73,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":74,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"kawaiigabrielneko"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":76,"author":{"gitId":"kawaiigabrielneko"},"content":"     * Removes the Task with the same name as a supplied String, if any.","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"kawaiigabrielneko"},"content":"     * @param taskName The name of the Task to be deleted","lastModifiedDate":"2021-09-09"},{"lineNumber":78,"author":{"gitId":"kawaiigabrielneko"},"content":"     * @return The deleted Task, or \u003ccode\u003enull\u003c/code\u003e if none were deleted","lastModifiedDate":"2021-09-09"},{"lineNumber":79,"author":{"gitId":"kawaiigabrielneko"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":80,"author":{"gitId":"kawaiigabrielneko"},"content":"    public Task delete(String taskName) {","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"kawaiigabrielneko"},"content":"        Task taskToDelete \u003d find(taskName);","lastModifiedDate":"2021-09-19"},{"lineNumber":82,"author":{"gitId":"kawaiigabrielneko"},"content":"        if (taskToDelete !\u003d null){","lastModifiedDate":"2021-09-19"},{"lineNumber":83,"author":{"gitId":"kawaiigabrielneko"},"content":"            taskList.remove(taskToDelete);","lastModifiedDate":"2021-09-19"},{"lineNumber":84,"author":{"gitId":"kawaiigabrielneko"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"kawaiigabrielneko"},"content":"        return taskToDelete;","lastModifiedDate":"2021-09-19"},{"lineNumber":86,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":88,"author":{"gitId":"kawaiigabrielneko"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":89,"author":{"gitId":"kawaiigabrielneko"},"content":"     * Converts this TaskList to a String in CSV format","lastModifiedDate":"2021-09-20"},{"lineNumber":90,"author":{"gitId":"kawaiigabrielneko"},"content":"     * @return A CSV representation of this TaskList","lastModifiedDate":"2021-09-20"},{"lineNumber":91,"author":{"gitId":"kawaiigabrielneko"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":92,"author":{"gitId":"kawaiigabrielneko"},"content":"    public String toCsvString() {","lastModifiedDate":"2021-09-20"},{"lineNumber":93,"author":{"gitId":"kawaiigabrielneko"},"content":"        return String.join(\"\\n\", taskList.stream()","lastModifiedDate":"2021-09-20"},{"lineNumber":94,"author":{"gitId":"kawaiigabrielneko"},"content":"                .map(task -\u003e task.toCsvRow())","lastModifiedDate":"2021-09-20"},{"lineNumber":95,"author":{"gitId":"kawaiigabrielneko"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-09-20"},{"lineNumber":96,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":97,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":98,"author":{"gitId":"kawaiigabrielneko"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":99,"author":{"gitId":"kawaiigabrielneko"},"content":"    public String toString() {","lastModifiedDate":"2021-09-19"},{"lineNumber":100,"author":{"gitId":"kawaiigabrielneko"},"content":"        return String.join(\"\\n\", taskList.stream()","lastModifiedDate":"2021-09-19"},{"lineNumber":101,"author":{"gitId":"kawaiigabrielneko"},"content":"                .map(task -\u003e task.toString())","lastModifiedDate":"2021-09-19"},{"lineNumber":102,"author":{"gitId":"kawaiigabrielneko"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-09-19"},{"lineNumber":103,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":104,"author":{"gitId":"kawaiigabrielneko"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"kawaiigabrielneko":104}},{"path":"src/main/java/duke/TimedTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kawaiigabrielneko"},"content":"package duke;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"kawaiigabrielneko"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"kawaiigabrielneko"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"kawaiigabrielneko"},"content":"public abstract class TimedTask extends Task {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"kawaiigabrielneko"},"content":"    protected LocalDate time;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"kawaiigabrielneko"},"content":"    public TimedTask(String name, String time) {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"kawaiigabrielneko"},"content":"        super(name, true);","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"kawaiigabrielneko"},"content":"        this.time \u003d LocalDate.parse(time);","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"kawaiigabrielneko"},"content":"    public TimedTask(String name, String time, boolean isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"kawaiigabrielneko"},"content":"        super(name, true, isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"kawaiigabrielneko"},"content":"        this.time \u003d LocalDate.parse(time);","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"kawaiigabrielneko"},"content":"    public abstract String format(DateTimeFormatter dtformatter);","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"kawaiigabrielneko"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"kawaiigabrielneko":19}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kawaiigabrielneko"},"content":"package duke;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"kawaiigabrielneko"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"kawaiigabrielneko"},"content":"    public static final String TODO_NAME \u003d \"todo\";","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"kawaiigabrielneko"},"content":"    public static final String TODO_INITIAL \u003d \"T\";","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"kawaiigabrielneko"},"content":"    public ToDo(String name){","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"kawaiigabrielneko"},"content":"        super(name, false);","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"kawaiigabrielneko"},"content":"    public ToDo(String name, boolean isDone){","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"kawaiigabrielneko"},"content":"        super(name, false, isDone);","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"kawaiigabrielneko"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"kawaiigabrielneko"},"content":"    public String toCsvRow() {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"kawaiigabrielneko"},"content":"        return String.join(\",\", TODO_NAME, name, String.valueOf(isDone));","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"kawaiigabrielneko"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"kawaiigabrielneko"},"content":"    public String toString(){","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"kawaiigabrielneko"},"content":"        return String.format(\"[%s][%s] %s\", TODO_INITIAL, isDone ? \"X\" : \" \", this.getName());","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"kawaiigabrielneko"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"kawaiigabrielneko":24}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kawaiigabrielneko"},"content":"package duke.command;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"kawaiigabrielneko"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"kawaiigabrielneko"},"content":"import duke.ui.UserInterface;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"kawaiigabrielneko"},"content":"/**","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"kawaiigabrielneko"},"content":" * Represents a Command object","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"kawaiigabrielneko"},"content":" * @author Gabriel Goh","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"kawaiigabrielneko"},"content":" */","lastModifiedDate":"2021-09-09"},{"lineNumber":10,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":11,"author":{"gitId":"kawaiigabrielneko"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"kawaiigabrielneko"},"content":"    private boolean hasMoreCommands;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"kawaiigabrielneko"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"kawaiigabrielneko"},"content":"     * Executes the command on TaskList, writing any output to","lastModifiedDate":"2021-09-09"},{"lineNumber":16,"author":{"gitId":"kawaiigabrielneko"},"content":"     * the input UserInterface.","lastModifiedDate":"2021-09-09"},{"lineNumber":17,"author":{"gitId":"kawaiigabrielneko"},"content":"     * @param taskList The TaskList which this command is to be executed on","lastModifiedDate":"2021-09-09"},{"lineNumber":18,"author":{"gitId":"kawaiigabrielneko"},"content":"     * @param ui       The UserInterface which any output of this command is to be written to","lastModifiedDate":"2021-09-09"},{"lineNumber":19,"author":{"gitId":"kawaiigabrielneko"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":20,"author":{"gitId":"kawaiigabrielneko"},"content":"    public abstract void execute(TaskList taskList, UserInterface ui);","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"kawaiigabrielneko"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":23,"author":{"gitId":"kawaiigabrielneko"},"content":"     * Creates a command object which expects more commands after execution","lastModifiedDate":"2021-09-09"},{"lineNumber":24,"author":{"gitId":"kawaiigabrielneko"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":25,"author":{"gitId":"kawaiigabrielneko"},"content":"    public Command() {","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"kawaiigabrielneko"},"content":"        hasMoreCommands \u003d true;","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"kawaiigabrielneko"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":30,"author":{"gitId":"kawaiigabrielneko"},"content":"     * Creates a command object","lastModifiedDate":"2021-09-09"},{"lineNumber":31,"author":{"gitId":"kawaiigabrielneko"},"content":"     * @param hasMoreCommands Whether more Commands are expected to run after this Command or not","lastModifiedDate":"2021-09-09"},{"lineNumber":32,"author":{"gitId":"kawaiigabrielneko"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":33,"author":{"gitId":"kawaiigabrielneko"},"content":"    public Command(boolean hasMoreCommands) {","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"kawaiigabrielneko"},"content":"        this.hasMoreCommands \u003d hasMoreCommands;","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"kawaiigabrielneko"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":38,"author":{"gitId":"kawaiigabrielneko"},"content":"     * Returns a boolean, indicating if a Command should be executed after this Command.","lastModifiedDate":"2021-09-09"},{"lineNumber":39,"author":{"gitId":"kawaiigabrielneko"},"content":"     * @return Whether a Command should be executed after this Command or not","lastModifiedDate":"2021-09-09"},{"lineNumber":40,"author":{"gitId":"kawaiigabrielneko"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":41,"author":{"gitId":"kawaiigabrielneko"},"content":"    public boolean shouldExecuteNext() {","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"kawaiigabrielneko"},"content":"        return hasMoreCommands;","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"kawaiigabrielneko"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"kawaiigabrielneko":44}},{"path":"src/main/java/duke/command/CommandAdd.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kawaiigabrielneko"},"content":"package duke.command;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"kawaiigabrielneko"},"content":"import duke.Task;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"kawaiigabrielneko"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"kawaiigabrielneko"},"content":"import duke.ui.UserInterface;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"kawaiigabrielneko"},"content":"/**","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"kawaiigabrielneko"},"content":" * Represents a command that adds a Task to a TaskList","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"kawaiigabrielneko"},"content":" */","lastModifiedDate":"2021-09-09"},{"lineNumber":10,"author":{"gitId":"kawaiigabrielneko"},"content":"public class CommandAdd extends Command {","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"kawaiigabrielneko"},"content":"    private Task task;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":13,"author":{"gitId":"kawaiigabrielneko"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"kawaiigabrielneko"},"content":"     * Class constructor","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"kawaiigabrielneko"},"content":"     * @param task The Task to be added to TaskLists from the execution of this Command","lastModifiedDate":"2021-09-09"},{"lineNumber":16,"author":{"gitId":"kawaiigabrielneko"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":17,"author":{"gitId":"kawaiigabrielneko"},"content":"    public CommandAdd(Task task) {","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"kawaiigabrielneko"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"kawaiigabrielneko"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"kawaiigabrielneko"},"content":"    public void execute(TaskList taskList, UserInterface ui) {","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"kawaiigabrielneko"},"content":"        taskList.add(task);","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"kawaiigabrielneko"},"content":"        ui.print(\"Added task: \" + task);","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"kawaiigabrielneko"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"kawaiigabrielneko":26}},{"path":"src/main/java/duke/command/CommandDelete.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kawaiigabrielneko"},"content":"package duke.command;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"kawaiigabrielneko"},"content":"import duke.Task;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"kawaiigabrielneko"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"kawaiigabrielneko"},"content":"import duke.ui.UserInterface;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"kawaiigabrielneko"},"content":"public class CommandDelete extends Command{","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"kawaiigabrielneko"},"content":"    public static final String DELETE_NAME \u003d \"delete\";","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"kawaiigabrielneko"},"content":"    private String taskName;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"kawaiigabrielneko"},"content":"    public CommandDelete(String taskName) {","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"kawaiigabrielneko"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"kawaiigabrielneko"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"kawaiigabrielneko"},"content":"    public void execute(TaskList taskList, UserInterface ui) {","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"kawaiigabrielneko"},"content":"        Task deletedTask \u003d taskList.delete(taskName);","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"kawaiigabrielneko"},"content":"        if (deletedTask !\u003d null) {","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"kawaiigabrielneko"},"content":"            ui.print(\"Noted. This task has been deleted\" + \"\\n\" +","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"kawaiigabrielneko"},"content":"                    deletedTask.toString());","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"kawaiigabrielneko"},"content":"        } else {","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"kawaiigabrielneko"},"content":"            ui.print(\"Oops! That task was not found.\");","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"kawaiigabrielneko"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"kawaiigabrielneko"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"kawaiigabrielneko":25}},{"path":"src/main/java/duke/command/CommandDone.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kawaiigabrielneko"},"content":"package duke.command;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"kawaiigabrielneko"},"content":"import duke.Task;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"kawaiigabrielneko"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"kawaiigabrielneko"},"content":"import duke.ui.UserInterface;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"kawaiigabrielneko"},"content":"public class CommandDone extends Command {","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"kawaiigabrielneko"},"content":"    public static String DONE_NAME \u003d \"done\";","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"kawaiigabrielneko"},"content":"    private String taskName;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"kawaiigabrielneko"},"content":"    public CommandDone(String taskName) {","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"kawaiigabrielneko"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"kawaiigabrielneko"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"kawaiigabrielneko"},"content":"    public void execute(TaskList taskList, UserInterface ui) {","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"kawaiigabrielneko"},"content":"        Task task \u003d taskList.find(taskName);","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"kawaiigabrielneko"},"content":"        if (task \u003d\u003d null){","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"kawaiigabrielneko"},"content":"            ui.displayError(\"No such file found: \" + taskName);","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"kawaiigabrielneko"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"kawaiigabrielneko"},"content":"            task.markDone();","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"kawaiigabrielneko"},"content":"            ui.print(\"Yay :) This task is done:\\n\" + task.toString());","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"kawaiigabrielneko"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"kawaiigabrielneko"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"kawaiigabrielneko":24}},{"path":"src/main/java/duke/command/CommandError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kawaiigabrielneko"},"content":"package duke.command;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"kawaiigabrielneko"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"kawaiigabrielneko"},"content":"import duke.ui.UserInterface;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"kawaiigabrielneko"},"content":"public class CommandError extends Command {","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"kawaiigabrielneko"},"content":"    private String errorMessage;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"kawaiigabrielneko"},"content":"    public CommandError(String errorMessage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"kawaiigabrielneko"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"kawaiigabrielneko"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"kawaiigabrielneko"},"content":"    public void execute(TaskList taskList, UserInterface ui) {","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"kawaiigabrielneko"},"content":"        ui.displayError(errorMessage);","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"kawaiigabrielneko"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"kawaiigabrielneko":17}},{"path":"src/main/java/duke/command/CommandExit.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kawaiigabrielneko"},"content":"package duke.command;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"kawaiigabrielneko"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"kawaiigabrielneko"},"content":"import duke.ui.UserInterface;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"kawaiigabrielneko"},"content":"public class CommandExit extends Command {","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"kawaiigabrielneko"},"content":"    public static final String EXIT_NAME \u003d \"exit\";","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"kawaiigabrielneko"},"content":"    public CommandExit() {","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"kawaiigabrielneko"},"content":"        super(false);","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"kawaiigabrielneko"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"kawaiigabrielneko"},"content":"    public void execute(TaskList taskList, UserInterface ui) {","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"kawaiigabrielneko"},"content":"        ui.displayFarewell();","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"kawaiigabrielneko"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"kawaiigabrielneko":17}},{"path":"src/main/java/duke/command/CommandFind.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kawaiigabrielneko"},"content":"package duke.command;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"kawaiigabrielneko"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"kawaiigabrielneko"},"content":"import duke.ui.UserInterface;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"kawaiigabrielneko"},"content":"public class CommandFind extends Command {","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"kawaiigabrielneko"},"content":"    public static final String FIND_NAME \u003d \"find\";","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"kawaiigabrielneko"},"content":"    private String keyword;","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"kawaiigabrielneko"},"content":"    public CommandFind(String keyword) {","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"kawaiigabrielneko"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"kawaiigabrielneko"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"kawaiigabrielneko"},"content":"    public void execute(TaskList taskList, UserInterface ui) {","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"kawaiigabrielneko"},"content":"        TaskList matchingTasks \u003d taskList.match(keyword);","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"kawaiigabrielneko"},"content":"        ui.print(matchingTasks.toString());","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"kawaiigabrielneko"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"kawaiigabrielneko":20}},{"path":"src/main/java/duke/command/CommandShowList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kawaiigabrielneko"},"content":"package duke.command;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"kawaiigabrielneko"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"kawaiigabrielneko"},"content":"import duke.ui.UserInterface;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"kawaiigabrielneko"},"content":"public class CommandShowList extends Command {","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"kawaiigabrielneko"},"content":"    public static final String SHOW_LIST_NAME \u003d \"list\";","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"kawaiigabrielneko"},"content":"    public CommandShowList () {","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"kawaiigabrielneko"},"content":"        super();","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"kawaiigabrielneko"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"kawaiigabrielneko"},"content":"    public void execute(TaskList taskList, UserInterface ui){","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"kawaiigabrielneko"},"content":"        ui.print(taskList.toString());","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"kawaiigabrielneko"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"kawaiigabrielneko":17}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kawaiigabrielneko"},"content":"package duke.ui;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"kawaiigabrielneko"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"kawaiigabrielneko"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"kawaiigabrielneko"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"kawaiigabrielneko"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"kawaiigabrielneko"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"kawaiigabrielneko"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"kawaiigabrielneko"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"kawaiigabrielneko"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"kawaiigabrielneko"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"kawaiigabrielneko"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"kawaiigabrielneko"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"kawaiigabrielneko"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"kawaiigabrielneko"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"kawaiigabrielneko"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"kawaiigabrielneko"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"kawaiigabrielneko"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"kawaiigabrielneko"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"kawaiigabrielneko"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"kawaiigabrielneko"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"kawaiigabrielneko"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"kawaiigabrielneko"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"kawaiigabrielneko"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"kawaiigabrielneko"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"kawaiigabrielneko"},"content":"    @FXML","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"kawaiigabrielneko"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"kawaiigabrielneko"},"content":"    @FXML","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"kawaiigabrielneko"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"kawaiigabrielneko"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"kawaiigabrielneko"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"kawaiigabrielneko"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"kawaiigabrielneko"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"kawaiigabrielneko"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"kawaiigabrielneko"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"kawaiigabrielneko"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"kawaiigabrielneko"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"kawaiigabrielneko"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"kawaiigabrielneko"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"kawaiigabrielneko"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":47,"author":{"gitId":"kawaiigabrielneko"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":48,"author":{"gitId":"kawaiigabrielneko"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-14"},{"lineNumber":49,"author":{"gitId":"kawaiigabrielneko"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":50,"author":{"gitId":"kawaiigabrielneko"},"content":"    private void flip() {","lastModifiedDate":"2021-09-14"},{"lineNumber":51,"author":{"gitId":"kawaiigabrielneko"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-14"},{"lineNumber":52,"author":{"gitId":"kawaiigabrielneko"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"kawaiigabrielneko"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"kawaiigabrielneko"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":57,"author":{"gitId":"kawaiigabrielneko"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"kawaiigabrielneko"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":60,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":61,"author":{"gitId":"kawaiigabrielneko"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"kawaiigabrielneko"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"kawaiigabrielneko"},"content":"        db.flip();","lastModifiedDate":"2021-09-14"},{"lineNumber":64,"author":{"gitId":"kawaiigabrielneko"},"content":"        return db;","lastModifiedDate":"2021-09-14"},{"lineNumber":65,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":66,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"kawaiigabrielneko"},"content":"    public static DialogBox getErrorDialog(String text, Image img) {","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"kawaiigabrielneko"},"content":"        DialogBox errorDialog \u003d getDukeDialog(text, img);","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"kawaiigabrielneko"},"content":"        errorDialog.setBackground(new Background(new BackgroundFill(","lastModifiedDate":"2021-09-22"},{"lineNumber":70,"author":{"gitId":"kawaiigabrielneko"},"content":"                Color.PINK,","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"kawaiigabrielneko"},"content":"                CornerRadii.EMPTY,","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"kawaiigabrielneko"},"content":"                Insets.EMPTY","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"kawaiigabrielneko"},"content":"        )));","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"kawaiigabrielneko"},"content":"        return errorDialog;","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"kawaiigabrielneko"},"content":"}","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"kawaiigabrielneko":76}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kawaiigabrielneko"},"content":"package duke.ui;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"kawaiigabrielneko"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"kawaiigabrielneko"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"kawaiigabrielneko"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"kawaiigabrielneko"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"kawaiigabrielneko"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"kawaiigabrielneko"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"kawaiigabrielneko"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"kawaiigabrielneko"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"kawaiigabrielneko"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"kawaiigabrielneko"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"kawaiigabrielneko"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"kawaiigabrielneko"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"kawaiigabrielneko"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"kawaiigabrielneko"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"kawaiigabrielneko"},"content":"    @FXML","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"kawaiigabrielneko"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"kawaiigabrielneko"},"content":"    @FXML","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"kawaiigabrielneko"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"kawaiigabrielneko"},"content":"    @FXML","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"kawaiigabrielneko"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"kawaiigabrielneko"},"content":"    @FXML","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"kawaiigabrielneko"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"kawaiigabrielneko"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"kawaiigabrielneko"},"content":"    public static final String USER_IMAGE_LINK \u003d \"/images/Adora.png\";","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"kawaiigabrielneko"},"content":"    public static final String DUKE_IMAGE_LINK \u003d \"/images/Benjamin.png\";","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"kawaiigabrielneko"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(USER_IMAGE_LINK));","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"kawaiigabrielneko"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(DUKE_IMAGE_LINK));","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"kawaiigabrielneko"},"content":"    public MainWindow() {","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"kawaiigabrielneko"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"kawaiigabrielneko"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"kawaiigabrielneko"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"kawaiigabrielneko"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"kawaiigabrielneko"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"kawaiigabrielneko"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"kawaiigabrielneko"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"kawaiigabrielneko"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"kawaiigabrielneko"},"content":"    @FXML","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"kawaiigabrielneko"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"kawaiigabrielneko"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"kawaiigabrielneko"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"kawaiigabrielneko"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"kawaiigabrielneko"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"kawaiigabrielneko"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"kawaiigabrielneko"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"kawaiigabrielneko"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"kawaiigabrielneko"},"content":"    @FXML","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"kawaiigabrielneko"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"kawaiigabrielneko"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"kawaiigabrielneko"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"kawaiigabrielneko"},"content":"                DialogBox.getUserDialog(input, userImage)","lastModifiedDate":"2021-09-19"},{"lineNumber":65,"author":{"gitId":"kawaiigabrielneko"},"content":"        );","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"kawaiigabrielneko"},"content":"        duke.respond(input);","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"kawaiigabrielneko"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":69,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":70,"author":{"gitId":"kawaiigabrielneko"},"content":"    public void print(String message) {","lastModifiedDate":"2021-09-19"},{"lineNumber":71,"author":{"gitId":"kawaiigabrielneko"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-19"},{"lineNumber":72,"author":{"gitId":"kawaiigabrielneko"},"content":"                DialogBox.getDukeDialog(message, dukeImage)","lastModifiedDate":"2021-09-19"},{"lineNumber":73,"author":{"gitId":"kawaiigabrielneko"},"content":"        );","lastModifiedDate":"2021-09-19"},{"lineNumber":74,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"kawaiigabrielneko"},"content":"    public void displayError(String error) {","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"kawaiigabrielneko"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-22"},{"lineNumber":78,"author":{"gitId":"kawaiigabrielneko"},"content":"                DialogBox.getErrorDialog(error, dukeImage)","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"kawaiigabrielneko"},"content":"        );","lastModifiedDate":"2021-09-22"},{"lineNumber":80,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":81,"author":{"gitId":"kawaiigabrielneko"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"kawaiigabrielneko":81}},{"path":"src/main/java/duke/ui/UserInterface.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kawaiigabrielneko"},"content":"package duke.ui;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"kawaiigabrielneko"},"content":"/**","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"kawaiigabrielneko"},"content":" * Represents an interface between the program and the user.","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"kawaiigabrielneko"},"content":" */","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"kawaiigabrielneko"},"content":"public class UserInterface {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"kawaiigabrielneko"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"kawaiigabrielneko"},"content":"    public static final String LOGO","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"kawaiigabrielneko"},"content":"            \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"kawaiigabrielneko"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"kawaiigabrielneko"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"kawaiigabrielneko"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"kawaiigabrielneko"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"kawaiigabrielneko"},"content":"    public static final String GREETING_MESSAGE \u003d \"Hello from\\n\" + LOGO;","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"kawaiigabrielneko"},"content":"    public static final String FAREWELL_MESSAGE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":17,"author":{"gitId":"kawaiigabrielneko"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":18,"author":{"gitId":"kawaiigabrielneko"},"content":"     * Class constructor.","lastModifiedDate":"2021-09-09"},{"lineNumber":19,"author":{"gitId":"kawaiigabrielneko"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":20,"author":{"gitId":"kawaiigabrielneko"},"content":"    public UserInterface(MainWindow mainWindow) {","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"kawaiigabrielneko"},"content":"        this.mainWindow \u003d mainWindow;","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"kawaiigabrielneko"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":25,"author":{"gitId":"kawaiigabrielneko"},"content":"     * Writes a greeting message.","lastModifiedDate":"2021-09-09"},{"lineNumber":26,"author":{"gitId":"kawaiigabrielneko"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":27,"author":{"gitId":"kawaiigabrielneko"},"content":"    public void displayGreeting() {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"kawaiigabrielneko"},"content":"        mainWindow.print(GREETING_MESSAGE);","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"kawaiigabrielneko"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":32,"author":{"gitId":"kawaiigabrielneko"},"content":"     * Writes a farewell message.","lastModifiedDate":"2021-09-09"},{"lineNumber":33,"author":{"gitId":"kawaiigabrielneko"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":34,"author":{"gitId":"kawaiigabrielneko"},"content":"    public void displayFarewell() {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"kawaiigabrielneko"},"content":"        mainWindow.print(FAREWELL_MESSAGE);","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"kawaiigabrielneko"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":39,"author":{"gitId":"kawaiigabrielneko"},"content":"     * Writes a message from a given String.","lastModifiedDate":"2021-09-09"},{"lineNumber":40,"author":{"gitId":"kawaiigabrielneko"},"content":"     * @param message The message to be written","lastModifiedDate":"2021-09-09"},{"lineNumber":41,"author":{"gitId":"kawaiigabrielneko"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":42,"author":{"gitId":"kawaiigabrielneko"},"content":"    public void print(String message) {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"kawaiigabrielneko"},"content":"        mainWindow.print(message);","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"kawaiigabrielneko"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":47,"author":{"gitId":"kawaiigabrielneko"},"content":"     * Writes an error message","lastModifiedDate":"2021-09-09"},{"lineNumber":48,"author":{"gitId":"kawaiigabrielneko"},"content":"     * @param error The error message to be written","lastModifiedDate":"2021-09-09"},{"lineNumber":49,"author":{"gitId":"kawaiigabrielneko"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":50,"author":{"gitId":"kawaiigabrielneko"},"content":"    public void displayError(String error) {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"kawaiigabrielneko"},"content":"        mainWindow.displayError(error);","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"kawaiigabrielneko"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"kawaiigabrielneko":53}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kawaiigabrielneko"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"kawaiigabrielneko"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"kawaiigabrielneko"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"kawaiigabrielneko"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"kawaiigabrielneko"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"kawaiigabrielneko"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"kawaiigabrielneko"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"kawaiigabrielneko"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\" maxHeight\u003d\"Infinity\" /\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"kawaiigabrielneko"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"kawaiigabrielneko"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"kawaiigabrielneko"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"kawaiigabrielneko"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"kawaiigabrielneko"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"kawaiigabrielneko"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"kawaiigabrielneko":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kawaiigabrielneko"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"kawaiigabrielneko"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"kawaiigabrielneko"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"kawaiigabrielneko"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"kawaiigabrielneko"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"kawaiigabrielneko"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"kawaiigabrielneko"},"content":"\u003cfx:root maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" type\u003d\"AnchorPane\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"kawaiigabrielneko"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"kawaiigabrielneko"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"kawaiigabrielneko"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"kawaiigabrielneko"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"kawaiigabrielneko"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"kawaiigabrielneko"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"kawaiigabrielneko"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"kawaiigabrielneko"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"kawaiigabrielneko"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"kawaiigabrielneko"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"kawaiigabrielneko":19}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kawaiigabrielneko"},"content":"package duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"kawaiigabrielneko"},"content":"import org.junit.Test;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"kawaiigabrielneko"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"kawaiigabrielneko"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"kawaiigabrielneko"},"content":"    @Test","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"kawaiigabrielneko"},"content":"    public void constructor() {","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"kawaiigabrielneko"},"content":"        assertEquals(\"[D][ ] homework (by: 2021-08-07)\",","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"kawaiigabrielneko"},"content":"                new Deadline(\"homework\", \"2021-08-07\").toString());","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"kawaiigabrielneko"},"content":"        assertEquals(\"[D][ ] project (by: 2022-09-16)\",","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"kawaiigabrielneko"},"content":"                new Deadline(\"project\", \"2022-09-16\").toString());","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"kawaiigabrielneko"},"content":"        assertEquals(\"[D][ ] submit portfolio (by: 2021-11-10)\",","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"kawaiigabrielneko"},"content":"                new Deadline(\"submit portfolio\", \"2021-11-10\").toString());","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"kawaiigabrielneko"},"content":"    @Test","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"kawaiigabrielneko"},"content":"    public void done() {","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"kawaiigabrielneko"},"content":"        Deadline homework \u003d new Deadline(\"homework\", \"2021-08-07\");","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"kawaiigabrielneko"},"content":"        homework.markDone();","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"kawaiigabrielneko"},"content":"        assertEquals(\"[D][X] homework (by: 2021-08-07)\", homework.toString());","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"kawaiigabrielneko"},"content":"        Deadline project \u003d new Deadline(\"project\", \"2022-09-16\");","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"kawaiigabrielneko"},"content":"        project.markDone();","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"kawaiigabrielneko"},"content":"        assertEquals(\"[D][X] project (by: 2022-09-16)\", project.toString());","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"kawaiigabrielneko"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"kawaiigabrielneko":27}},{"path":"src/test/java/duke/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kawaiigabrielneko"},"content":"package duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"kawaiigabrielneko"},"content":"import org.junit.Test;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"kawaiigabrielneko"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"kawaiigabrielneko"},"content":"public class ToDoTest {","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"kawaiigabrielneko"},"content":"    @Test","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"kawaiigabrielneko"},"content":"    public void constructor() {","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"kawaiigabrielneko"},"content":"        ToDo exercise \u003d new ToDo(\"exercise\");","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"kawaiigabrielneko"},"content":"        assertEquals(\"[T][ ] exercise\", exercise.toString());","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"kawaiigabrielneko"},"content":"        ToDo readBook \u003d new ToDo(\"read book\");","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"kawaiigabrielneko"},"content":"        assertEquals(\"[T][ ] read book\", readBook.toString());","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"kawaiigabrielneko"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"kawaiigabrielneko":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kawaiigabrielneko"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"kawaiigabrielneko":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"kawaiigabrielneko"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kawaiigabrielneko":1,"-":20}}]
