[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Linda124"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"Linda124"},"content":"    protected String by;","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"Linda124"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"Linda124"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"Linda124"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"Linda124"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"Linda124"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"Linda124"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"Linda124"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Linda124":13}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Linda124"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    public static void main (String[]args){","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"Linda124"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"Linda124"},"content":"        ListOfTasks xs \u003d new ListOfTasks();","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"Linda124"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"Linda124"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"Linda124"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"Linda124"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"Linda124"},"content":"        String command \u003d in.nextLine();","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"Linda124"},"content":"        while (!command.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"Linda124"},"content":"            System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"Linda124"},"content":"            if (command.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"Linda124"},"content":"                xs.listOut();","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"Linda124"},"content":"            } else if (command.contains(\"done\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"Linda124"},"content":"                xs.done(command);","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"Linda124"},"content":"            } else if (command.contains(\"deadline\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"Linda124"},"content":"                xs.addDeadline(command);","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"Linda124"},"content":"            } else if (command.contains(\"event\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"Linda124"},"content":"                xs.addEvent(command);","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"Linda124"},"content":"            } else if (command.contains(\"todo\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"Linda124"},"content":"                xs.add(command);","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"Linda124"},"content":"            } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"Linda124"},"content":"                System.out.println(\"    Invalid Input. Please try again.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"Linda124"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"Linda124"},"content":"            System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"Linda124"},"content":"            command \u003d in.nextLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"Linda124"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"Linda124"},"content":"        System.out.println(\"    Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"Linda124"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Linda124":32,"-":11}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Linda124"},"content":"public class Event extends Task{","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"Linda124"},"content":"    protected String time;","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"Linda124"},"content":"    public Event(String information,String time) {","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"Linda124"},"content":"        super(information);","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"Linda124"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"Linda124"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"Linda124"},"content":"    public String toString(){","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"Linda124"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + time + \")\";","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"Linda124"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Linda124":13}},{"path":"src/main/java/ListOfTasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Linda124"},"content":"public class ListOfTasks {","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"Linda124"},"content":"    private static int count;","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"Linda124"},"content":"    private Task[] xs;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"Linda124"},"content":"    public ListOfTasks() {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"Linda124"},"content":"        this.xs \u003d new Task[100];","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"Linda124"},"content":"        this.count \u003d 0;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"Linda124"},"content":"    public void add(String information) {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"Linda124"},"content":"        System.out.println(\"     Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"Linda124"},"content":"        information \u003d remove(information, \"todo\");","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"Linda124"},"content":"        xs[count] \u003d new ToDo(information);","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"Linda124"},"content":"        System.out.println(\"       \" + xs[count].toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"Linda124"},"content":"        count++;","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"Linda124"},"content":"        System.out.println(\"     Now you have \"+ count + \" task\" + ((count \u003e 1) ? \"s\" : \"\" ) +\" in the list.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"Linda124"},"content":"    public void listOut() {","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"Linda124"},"content":"        System.out.println(\"     Here are the tasks in your list:\");","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"Linda124"},"content":"        int a \u003d 0;","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"Linda124"},"content":"        while (a \u003c count) {","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"Linda124"},"content":"            System.out.println(\"     \" + ( a + 1 ) + \". \" + this.xs[a].toString() );","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"Linda124"},"content":"            a \u003d a + 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"Linda124"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"Linda124"},"content":"    public void done(String command) {","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"Linda124"},"content":"        command \u003d remove(command, \"done\");","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"Linda124"},"content":"        int a;","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"Linda124"},"content":"        a \u003d Integer.parseInt(command);","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"Linda124"},"content":"        a \u003d a - 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"Linda124"},"content":"        if (a \u003c count \u0026\u0026 a \u003e\u003d 0) {","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"Linda124"},"content":"            this.xs[a].done();","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"Linda124"},"content":"            System.out.println(\"     Nice! I\u0027ve marked this task as done!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"Linda124"},"content":"            System.out.println(\"     \" + this.xs[a].toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"Linda124"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"Linda124"},"content":"            System.out.println(\"     Invalid task number. Please try again.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"Linda124"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"Linda124"},"content":"    private String remove(String val, String command) {","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"Linda124"},"content":"        int len \u003d command.length();","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"Linda124"},"content":"        val \u003d val.strip();","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"Linda124"},"content":"        val \u003d val.substring(len);","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"Linda124"},"content":"        val \u003d val.strip();","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"Linda124"},"content":"        return val;","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"Linda124"},"content":"    public void addEvent(String information) {","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"Linda124"},"content":"        if (!information.contains(\"/at\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"Linda124"},"content":"            System.out.println(\"    Invalid Input. Please try again.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"Linda124"},"content":"            return;","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"Linda124"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"Linda124"},"content":"        System.out.println(\"     Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"Linda124"},"content":"        information \u003d remove(information, \"event\");","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"Linda124"},"content":"        String[] moreInformation \u003d information.split(\"/at\", 2);","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"Linda124"},"content":"        xs[count] \u003d new Event(moreInformation[0],moreInformation[1].strip());","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"Linda124"},"content":"        System.out.println(\"       \" + xs[count].toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"Linda124"},"content":"        count \u003d count + 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"Linda124"},"content":"        System.out.println(\"     Now you have \"+ count + \" task\" + ((count \u003e 1) ? \"s\" : \"\" ) +\" in the list.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"Linda124"},"content":"    public void addDeadline(String information) {","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"Linda124"},"content":"        if (!information.contains(\"/by\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"Linda124"},"content":"            System.out.println(\"    Invalid Input. Please try again.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"Linda124"},"content":"            return;","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"Linda124"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"Linda124"},"content":"        System.out.println(\"     Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"Linda124"},"content":"        information \u003d remove(information, \"deadline\");","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"Linda124"},"content":"        String[] moreInformation2 \u003d information.split(\"/by\", 2);","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"Linda124"},"content":"        xs[count] \u003d new Deadline(moreInformation2[0],moreInformation2[1].strip());","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"Linda124"},"content":"        System.out.println(\"       \" + xs[count].toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"Linda124"},"content":"        count \u003d count + 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"Linda124"},"content":"        System.out.println(\"     Now you have \"+ count + \" task\" + ((count \u003e 1) ? \"s\" : \"\" ) +\" in the list.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":85,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":86,"author":{"gitId":"Linda124"},"content":"}","lastModifiedDate":"2021-08-19"},{"lineNumber":87,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Linda124":90}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Linda124"},"content":"public class Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"Linda124"},"content":"    protected String information;","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"Linda124"},"content":"    protected Boolean completedTask;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"Linda124"},"content":"    public Task(String information) {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"Linda124"},"content":"        this.information \u003d information;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"Linda124"},"content":"        this.completedTask \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"Linda124"},"content":"    public void done() {","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"Linda124"},"content":"        this.completedTask \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"Linda124"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"Linda124"},"content":"        return getStatusIcon() + this.information;","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"Linda124"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"Linda124"},"content":"        if (completedTask) {","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"Linda124"},"content":"            return \"[X] \";","lastModifiedDate":"2021-08-20"},{"lineNumber":18,"author":{"gitId":"Linda124"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"Linda124"},"content":"            return  \"[ ] \";","lastModifiedDate":"2021-08-20"},{"lineNumber":20,"author":{"gitId":"Linda124"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"Linda124"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Linda124":22}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Linda124"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"Linda124"},"content":"    ToDo(String information) {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"Linda124"},"content":"        super(information);","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"Linda124"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"Linda124"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"Linda124"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"Linda124"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Linda124":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Linda124"},"content":"todo buy things","lastModifiedDate":"2021-08-20"},{"lineNumber":2,"author":{"gitId":"Linda124"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"Linda124"},"content":"event important meeting /at Friday 6-8pm","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"Linda124"},"content":"list","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"Linda124"},"content":"done 1","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"Linda124"},"content":"done 2","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"Linda124"},"content":"list ","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"Linda124"},"content":"bye","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"Linda124":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":23,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"Linda124":2,"-":21}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"Linda124"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2021-08-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Linda124":1,"-":33}}]
