[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"marcuschj"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.7.2\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"marcuschj"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.7.2\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"marcuschj"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"marcuschj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"marcuschj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"marcuschj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"marcuschj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"marcuschj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"marcuschj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"marcuschj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"marcuschj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"marcuschj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"marcuschj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"marcuschj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"marcuschj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"marcuschj"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"marcuschj"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"marcuschj":19,"-":43}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuschj"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"marcuschj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"marcuschj"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"marcuschj"},"content":" * A type of \u003ccode\u003eTask\u003c/code\u003e that has a end time denoted by \u003ccode\u003e/by\u003c/code\u003e in the user input.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"marcuschj"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"marcuschj"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"marcuschj"},"content":"    protected String by;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"marcuschj"},"content":"    protected LocalDate byDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"marcuschj"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"marcuschj"},"content":"     * Returns a Deadline object.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"marcuschj"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"marcuschj"},"content":"     * @param description description of Deadline","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"marcuschj"},"content":"     * @param by String for the time of Deadline","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"marcuschj"},"content":"     * @param isDone indicates if Deadline has been completed","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"marcuschj"},"content":"     * @param hasNotif indicates if a notif needs to be sent to user for the creation of this Deadline","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"marcuschj"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"marcuschj"},"content":"    public Deadline(String description, String by, boolean isDone, boolean hasNotif) {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"marcuschj"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"marcuschj"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"marcuschj"},"content":"        this.category \u003d Category.DEADLINE;","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"marcuschj"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"marcuschj"},"content":"     * Returns a Deadline object.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"marcuschj"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"marcuschj"},"content":"     * @param description description of Deadline","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"marcuschj"},"content":"     * @param byDate LocalDate for the time of Deadline","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"marcuschj"},"content":"     * @param isDone indicates if Deadline has been completed","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"marcuschj"},"content":"     * @param hasNotif indicates if a notif needs to be sent to user for the creation of this Deadline","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"marcuschj"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"marcuschj"},"content":"    public Deadline(String description, LocalDate byDate, boolean isDone, boolean hasNotif) {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"marcuschj"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"marcuschj"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"marcuschj"},"content":"        this.category \u003d Category.DEADLINE;","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"marcuschj"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"marcuschj"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"marcuschj"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + (by !\u003d null ? by : byDate) + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"marcuschj"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"marcuschj":45}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuschj"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"marcuschj"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"marcuschj"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"marcuschj"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"marcuschj"},"content":"import javafx.event.EventHandler;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"marcuschj"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"marcuschj"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"marcuschj"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"marcuschj"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"marcuschj"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"marcuschj"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"marcuschj"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"marcuschj"},"content":"import javafx.scene.layout.GridPane;","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"marcuschj"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"marcuschj"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"marcuschj"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"marcuschj"},"content":" * Represents a chatbot that can be run with functionality of a to-do list keeper.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"marcuschj"},"content":" * Each \u003ccode\u003eDuke\u003c/code\u003e object has a \u003ccode\u003eStorage\u003c/code\u003e to load and save a .txt list,","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"marcuschj"},"content":" * \u003ccode\u003eTaskList\u003c/code\u003e for storing the \u003ccode\u003eTask\u003c/code\u003es, and a \u003ccode\u003eUi\u003c/code\u003e for interacting","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"marcuschj"},"content":" * with user inputs.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"marcuschj"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"marcuschj"},"content":"public class Duke extends Application {","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"marcuschj"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"marcuschj"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"marcuschj"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"marcuschj"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"marcuschj"},"content":"     * Returns a Duke object.","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"marcuschj"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"marcuschj"},"content":"    public Duke() {","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"marcuschj"},"content":"        ui \u003d new Ui(this);","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"marcuschj"},"content":"        storage \u003d new Storage(\"data/list.txt\", this);","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"marcuschj"},"content":"        tasks \u003d new TaskList(this);","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"marcuschj"},"content":"    public TaskList getTasks() {","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"marcuschj"},"content":"        return this.tasks;","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"marcuschj"},"content":"    public Storage getStorage() {","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"marcuschj"},"content":"        return this.storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"marcuschj"},"content":"    public Ui getUi() {","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"marcuschj"},"content":"        return this.ui;","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"marcuschj"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"marcuschj"},"content":"     * Runs the duke chatbot by loading the TaskList and calling the Ui and Parser","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"marcuschj"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"marcuschj"},"content":"    private void run() {","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"marcuschj"},"content":"        System.out.println(ui.showWelcomeMessage());","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"marcuschj"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"marcuschj"},"content":"            System.out.println(storage.loadFileToList());","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"marcuschj"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"marcuschj"},"content":"            System.out.println(ui.showLoadingError());","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"marcuschj"},"content":"        } finally {","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"marcuschj"},"content":"            while (true) {","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"marcuschj"},"content":"                String command \u003d ui.getUserCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"marcuschj"},"content":"                Parser parser \u003d new Parser(this);","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"marcuschj"},"content":"                String response \u003d parser.handleInput(command);","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"marcuschj"},"content":"                System.out.println(response);","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"marcuschj"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"marcuschj"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"marcuschj"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"marcuschj"},"content":"        new Duke().run();","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"marcuschj"},"content":"    private String loadListGui() {","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"marcuschj"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"marcuschj"},"content":"            return storage.loadFileToList();","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"marcuschj"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"marcuschj"},"content":"            return ui.showLoadingError();","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"marcuschj"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"marcuschj"},"content":"    private String parseGui(String command) {","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"marcuschj"},"content":"        Parser parser \u003d new Parser(this);","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"marcuschj"},"content":"        String response \u003d parser.handleInput(command);","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"marcuschj"},"content":"        return response;","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"marcuschj"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"marcuschj"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"marcuschj"},"content":"        String list \u003d loadListGui();","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"marcuschj"},"content":"        Label welcome \u003d new Label(ui.showWelcomeMessage());","lastModifiedDate":"2021-08-29"},{"lineNumber":93,"author":{"gitId":"marcuschj"},"content":"        Label label \u003d new Label(\"Enter your command here!\");","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"marcuschj"},"content":"        TextField inputField \u003d new TextField();","lastModifiedDate":"2021-08-29"},{"lineNumber":95,"author":{"gitId":"marcuschj"},"content":"        Label output \u003d new Label(list);","lastModifiedDate":"2021-08-29"},{"lineNumber":96,"author":{"gitId":"marcuschj"},"content":"        Button button1 \u003d new Button(\"Enter\");","lastModifiedDate":"2021-08-29"},{"lineNumber":97,"author":{"gitId":"marcuschj"},"content":"        Button button2 \u003d new Button(\"Clear\");","lastModifiedDate":"2021-08-29"},{"lineNumber":98,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":99,"author":{"gitId":"marcuschj"},"content":"        // Action event","lastModifiedDate":"2021-08-29"},{"lineNumber":100,"author":{"gitId":"marcuschj"},"content":"        inputField.setOnKeyPressed(event -\u003e {","lastModifiedDate":"2021-08-29"},{"lineNumber":101,"author":{"gitId":"marcuschj"},"content":"            if (event.getCode() \u003d\u003d KeyCode.ENTER ) {","lastModifiedDate":"2021-08-29"},{"lineNumber":102,"author":{"gitId":"marcuschj"},"content":"                output.setText(parseGui(inputField.getText()));","lastModifiedDate":"2021-08-29"},{"lineNumber":103,"author":{"gitId":"marcuschj"},"content":"            } else if (event.getCode() \u003d\u003d KeyCode.ESCAPE ) {","lastModifiedDate":"2021-08-29"},{"lineNumber":104,"author":{"gitId":"marcuschj"},"content":"                output.setText(\"Output cleared.\\nPlease enter a new command\");","lastModifiedDate":"2021-08-29"},{"lineNumber":105,"author":{"gitId":"marcuschj"},"content":"                inputField.setText(\"\");","lastModifiedDate":"2021-08-29"},{"lineNumber":106,"author":{"gitId":"marcuschj"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":107,"author":{"gitId":"marcuschj"},"content":"        });","lastModifiedDate":"2021-08-29"},{"lineNumber":108,"author":{"gitId":"marcuschj"},"content":"        EventHandler\u003cActionEvent\u003e parse \u003d event -\u003e {","lastModifiedDate":"2021-08-29"},{"lineNumber":109,"author":{"gitId":"marcuschj"},"content":"            output.setText(parseGui(inputField.getText()));","lastModifiedDate":"2021-08-29"},{"lineNumber":110,"author":{"gitId":"marcuschj"},"content":"        };","lastModifiedDate":"2021-08-29"},{"lineNumber":111,"author":{"gitId":"marcuschj"},"content":"        EventHandler\u003cActionEvent\u003e clear \u003d event -\u003e {","lastModifiedDate":"2021-08-29"},{"lineNumber":112,"author":{"gitId":"marcuschj"},"content":"            output.setText(\"Output cleared.\\nPlease enter a new command\");","lastModifiedDate":"2021-08-29"},{"lineNumber":113,"author":{"gitId":"marcuschj"},"content":"            inputField.setText(\"\");","lastModifiedDate":"2021-08-29"},{"lineNumber":114,"author":{"gitId":"marcuschj"},"content":"        };","lastModifiedDate":"2021-08-29"},{"lineNumber":115,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":116,"author":{"gitId":"marcuschj"},"content":"        // When button is pressed","lastModifiedDate":"2021-08-29"},{"lineNumber":117,"author":{"gitId":"marcuschj"},"content":"        button1.setOnAction(parse);","lastModifiedDate":"2021-08-29"},{"lineNumber":118,"author":{"gitId":"marcuschj"},"content":"        button2.setOnAction(clear);","lastModifiedDate":"2021-08-29"},{"lineNumber":119,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":120,"author":{"gitId":"marcuschj"},"content":"        // Creating a Grid Pane","lastModifiedDate":"2021-08-29"},{"lineNumber":121,"author":{"gitId":"marcuschj"},"content":"        GridPane gridPane \u003d new GridPane();","lastModifiedDate":"2021-08-29"},{"lineNumber":122,"author":{"gitId":"marcuschj"},"content":"        gridPane.setMinSize(800, 750);","lastModifiedDate":"2021-08-29"},{"lineNumber":123,"author":{"gitId":"marcuschj"},"content":"        gridPane.setPadding(new Insets(10, 10, 10, 10));","lastModifiedDate":"2021-08-29"},{"lineNumber":124,"author":{"gitId":"marcuschj"},"content":"        gridPane.setVgap(5);","lastModifiedDate":"2021-08-29"},{"lineNumber":125,"author":{"gitId":"marcuschj"},"content":"        gridPane.setHgap(5);","lastModifiedDate":"2021-08-29"},{"lineNumber":126,"author":{"gitId":"marcuschj"},"content":"        gridPane.setAlignment(Pos.CENTER);","lastModifiedDate":"2021-08-29"},{"lineNumber":127,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":128,"author":{"gitId":"marcuschj"},"content":"        // Arranging all the nodes in the grid","lastModifiedDate":"2021-08-29"},{"lineNumber":129,"author":{"gitId":"marcuschj"},"content":"        gridPane.add(welcome, 1, 0);","lastModifiedDate":"2021-08-29"},{"lineNumber":130,"author":{"gitId":"marcuschj"},"content":"        gridPane.add(label, 1, 2);","lastModifiedDate":"2021-08-29"},{"lineNumber":131,"author":{"gitId":"marcuschj"},"content":"        gridPane.add(inputField, 1, 3);","lastModifiedDate":"2021-08-29"},{"lineNumber":132,"author":{"gitId":"marcuschj"},"content":"        gridPane.add(button1, 1, 7);","lastModifiedDate":"2021-08-29"},{"lineNumber":133,"author":{"gitId":"marcuschj"},"content":"        gridPane.add(button2, 1, 10);","lastModifiedDate":"2021-08-29"},{"lineNumber":134,"author":{"gitId":"marcuschj"},"content":"        gridPane.add(output, 1, 14);","lastModifiedDate":"2021-08-29"},{"lineNumber":135,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":136,"author":{"gitId":"marcuschj"},"content":"        // Styling nodes","lastModifiedDate":"2021-08-29"},{"lineNumber":137,"author":{"gitId":"marcuschj"},"content":"        button1.setStyle(\"-fx-background-color: darkslateblue; -fx-text-fill: white; \");","lastModifiedDate":"2021-08-29"},{"lineNumber":138,"author":{"gitId":"marcuschj"},"content":"        button1.setFont(Font.font(\"Calibri\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":139,"author":{"gitId":"marcuschj"},"content":"        button2.setStyle(\"-fx-background-color: grey; -fx-text-fill: white; \");","lastModifiedDate":"2021-08-29"},{"lineNumber":140,"author":{"gitId":"marcuschj"},"content":"        button2.setFont(Font.font(\"Calibri\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":141,"author":{"gitId":"marcuschj"},"content":"        welcome.setStyle(\"-fx-font: normal 16px \u0027robota\u0027 \");","lastModifiedDate":"2021-08-29"},{"lineNumber":142,"author":{"gitId":"marcuschj"},"content":"        label.setStyle(\"-fx-font: normal bold 20px \u0027calibri\u0027 \");","lastModifiedDate":"2021-08-29"},{"lineNumber":143,"author":{"gitId":"marcuschj"},"content":"        gridPane.setStyle(\"-fx-background-color: rgb(235, 235, 255);\");","lastModifiedDate":"2021-08-29"},{"lineNumber":144,"author":{"gitId":"marcuschj"},"content":"        output.setStyle(\"-fx-font: normal 16px \u0027robota\u0027 \");","lastModifiedDate":"2021-08-29"},{"lineNumber":145,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":146,"author":{"gitId":"marcuschj"},"content":"        // Creating a scene object","lastModifiedDate":"2021-08-29"},{"lineNumber":147,"author":{"gitId":"marcuschj"},"content":"        Scene scene \u003d new Scene(gridPane);","lastModifiedDate":"2021-08-29"},{"lineNumber":148,"author":{"gitId":"marcuschj"},"content":"        // Setting title to the Stage","lastModifiedDate":"2021-08-29"},{"lineNumber":149,"author":{"gitId":"marcuschj"},"content":"        stage.setTitle(\"Friend - Keep Track of Tasks!\");","lastModifiedDate":"2021-08-29"},{"lineNumber":150,"author":{"gitId":"marcuschj"},"content":"        // Adding scene to the stage","lastModifiedDate":"2021-08-29"},{"lineNumber":151,"author":{"gitId":"marcuschj"},"content":"        stage.setScene(scene);","lastModifiedDate":"2021-08-29"},{"lineNumber":152,"author":{"gitId":"marcuschj"},"content":"        // Displaying the contents of the stage","lastModifiedDate":"2021-08-29"},{"lineNumber":153,"author":{"gitId":"marcuschj"},"content":"        stage.show();","lastModifiedDate":"2021-08-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"marcuschj":153,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuschj"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"marcuschj"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"marcuschj"},"content":" * A class of exceptions that are thrown for invalid user inputs when parsed.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"marcuschj"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"marcuschj"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"marcuschj"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"marcuschj"},"content":"     * Creates a DukeException.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"marcuschj"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"marcuschj"},"content":"    public DukeException() {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"marcuschj"},"content":"        super();","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"marcuschj"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"marcuschj"},"content":"     * A class of \u003ccode\u003eDukeException\u003c/code\u003e thrown when the index for \u003ccode\u003eTask\u003c/code\u003e number is not found within the","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"marcuschj"},"content":"     * \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"marcuschj"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"marcuschj"},"content":"    static class DukeTaskNotFoundException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"marcuschj"},"content":"        @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"marcuschj"},"content":"        public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"marcuschj"},"content":"            return \"Sorry, this task number cannot be found :(\";","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"marcuschj"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"marcuschj"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"marcuschj"},"content":"     * A class of \u003ccode\u003eDukeException\u003c/code\u003e thrown when an invalid \u003ccode\u003eTask\u003c/code\u003e number is provided.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"marcuschj"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"marcuschj"},"content":"    static class DukeTaskFailException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"marcuschj"},"content":"        @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"marcuschj"},"content":"        public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"marcuschj"},"content":"            return \"Sorry, I am not sure what the task number is :(\";","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"marcuschj"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"marcuschj"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"marcuschj"},"content":"     * A class of \u003ccode\u003eDukeException\u003c/code\u003e thrown when an invalid \u003ccode\u003edescription\u003c/code\u003e is provided.","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"marcuschj"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"marcuschj"},"content":"    static class DukeNoDescriptionException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"marcuschj"},"content":"        @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"marcuschj"},"content":"        public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"marcuschj"},"content":"            return \"Oops :( Please key in a valid description!\";","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"marcuschj"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"marcuschj"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"marcuschj"},"content":"     * A class of \u003ccode\u003eDukeException\u003c/code\u003e thrown when no time for a \u003ccode\u003eDeadline\u003c/code\u003e or","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"marcuschj"},"content":"     * \u003ccode\u003eEvent\u003c/code\u003e is provided.","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"marcuschj"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"marcuschj"},"content":"    static class DukeNoTimeGivenException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"marcuschj"},"content":"        @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"marcuschj"},"content":"        public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"marcuschj"},"content":"            return \"Oops :( Please key in a valid time to proceed\";","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"marcuschj"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"marcuschj"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"marcuschj"},"content":"     * A class of \u003ccode\u003eDukeException\u003c/code\u003e thrown when an invalid \u003ccode\u003einput\u003c/code\u003e is provided and","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"marcuschj"},"content":"     * cannot be handled appropriately.","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"marcuschj"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"marcuschj"},"content":"    static class DukeInvalidInputException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"marcuschj"},"content":"        @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"marcuschj"},"content":"        public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"marcuschj"},"content":"            return \"Oops :( Friend does not recognise this command! \"","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"marcuschj"},"content":"                + \"Did you spell your command correctly?\";","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"marcuschj"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"marcuschj"},"content":"    static class DukeNoSearchFoundException extends DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"marcuschj"},"content":"        @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"marcuschj"},"content":"        public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"marcuschj"},"content":"            return \"Oops :( Please key in a valid search to proceed!\";","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"marcuschj"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"marcuschj"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"marcuschj":80}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuschj"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"marcuschj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"marcuschj"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"marcuschj"},"content":" * A type of \u003ccode\u003eTask\u003c/code\u003e that has a start and end time denoted by \u003ccode\u003e/at\u003c/code\u003e in the user input.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"marcuschj"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"marcuschj"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"marcuschj"},"content":"    protected String at;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"marcuschj"},"content":"    protected LocalDate atDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"marcuschj"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"marcuschj"},"content":"     * Returns a Event object.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"marcuschj"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"marcuschj"},"content":"     * @param description description of Event","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"marcuschj"},"content":"     * @param at String for the time of Event","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"marcuschj"},"content":"     * @param isDone indicates if Event has been completed","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"marcuschj"},"content":"     * @param hasNotif indicates if a notif needs to be sent to user for the creation of this Event","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"marcuschj"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"marcuschj"},"content":"    public Event(String description, String at, boolean isDone, boolean hasNotif) {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"marcuschj"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"marcuschj"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"marcuschj"},"content":"        this.category \u003d Category.EVENT;","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"marcuschj"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"marcuschj"},"content":"     * Returns a Event object.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"marcuschj"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"marcuschj"},"content":"     * @param description description of Event","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"marcuschj"},"content":"     * @param atDate LocalDate for the time of Event","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"marcuschj"},"content":"     * @param isDone indicates if Event has been completed","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"marcuschj"},"content":"     * @param hasNotif indicates if a notif needs to be sent to user for the creation of this Event","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"marcuschj"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"marcuschj"},"content":"    public Event(String description, LocalDate atDate, boolean isDone, boolean hasNotif) {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"marcuschj"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"marcuschj"},"content":"        this.atDate \u003d atDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"marcuschj"},"content":"        this.category \u003d Category.EVENT;","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"marcuschj"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"marcuschj"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"marcuschj"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + (at !\u003d null ? at : atDate) + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"marcuschj"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"marcuschj":46}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuschj"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"marcuschj"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"marcuschj"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"marcuschj"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"marcuschj"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"marcuschj"},"content":"public class Launcher {","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"marcuschj"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"marcuschj"},"content":"        Application.launch(Duke.class, args);","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"marcuschj"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"marcuschj":12}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuschj"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"marcuschj"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"marcuschj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"marcuschj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"marcuschj"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"marcuschj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"marcuschj"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"marcuschj"},"content":" * Represents a parser that process the user\u0027s input and handles with appropriate action.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"marcuschj"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"marcuschj"},"content":"public class Parser {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"marcuschj"},"content":"    private static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"marcuschj"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"marcuschj"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"marcuschj"},"content":"     * Returns a Parser object.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"marcuschj"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"marcuschj"},"content":"     * @param duke the Duke object that is the parent.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"marcuschj"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"marcuschj"},"content":"    public Parser(Duke duke) {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"marcuschj"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"marcuschj"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"marcuschj"},"content":"     * Checks if a String is a valid LocalDate of correct yyyy-MM-dd form.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"marcuschj"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"marcuschj"},"content":"     * @param dateStr date in String","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"marcuschj"},"content":"     * @return true if String is valid date.","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"marcuschj"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"marcuschj"},"content":"    public boolean isValid(String dateStr) {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"marcuschj"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"marcuschj"},"content":"            LocalDate.parse(dateStr, FORMATTER);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"marcuschj"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"marcuschj"},"content":"            return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"marcuschj"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"marcuschj"},"content":"        return true;","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"marcuschj"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"marcuschj"},"content":"     * Handles the input that is received by the Ui and performs the corresponding action","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"marcuschj"},"content":"     * based on the command.","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"marcuschj"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"marcuschj"},"content":"     * @param message String command that is received from the Scanner in Ui.","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"marcuschj"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"marcuschj"},"content":"    public String handleInput(String message) {","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"marcuschj"},"content":"        String response \u003d \"\";","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"marcuschj"},"content":"        if (message.trim().equals(\"bye\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"marcuschj"},"content":"            response \u003d response + \"\\n\" + duke.getUi().showGoodbyeMessage();","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"marcuschj"},"content":"            System.exit(0);","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"marcuschj"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"marcuschj"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"marcuschj"},"content":"            // List tasks","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"marcuschj"},"content":"            if (message.trim().equals(\"list\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"marcuschj"},"content":"                response \u003d response + \"\\n\" + duke.getUi().showList();","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"marcuschj"},"content":"            } else if (message.startsWith(\"delete\")) { // Delete tasks","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"marcuschj"},"content":"                if (message.length() \u003e 7 \u0026\u0026 message.substring(6, 7).equals(\" \")","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"marcuschj"},"content":"                    \u0026\u0026 message.substring(7).trim().chars().allMatch(Character::isDigit)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"marcuschj"},"content":"                    int taskIndex \u003d Integer.parseInt(message.substring(7).trim()) - 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"marcuschj"},"content":"                    ArrayList\u003cTask\u003e list \u003d duke.getTasks().getList();","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"marcuschj"},"content":"                    if (0 \u003c\u003d taskIndex \u0026\u0026 taskIndex \u003c list.size()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"marcuschj"},"content":"                        String removed \u003d list.get(taskIndex).toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"marcuschj"},"content":"                        list.remove(taskIndex);","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"marcuschj"},"content":"                        response \u003d response + \"\\n\" + duke.getUi().showRemoveTask(removed);","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"marcuschj"},"content":"                        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"marcuschj"},"content":"                            response \u003d response + \"\\n\" + duke.getStorage().saveListToFile();","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"marcuschj"},"content":"                        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"marcuschj"},"content":"                            response \u003d response + \"\\n\" + duke.getUi().showLoadingError();","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"marcuschj"},"content":"                        }","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"marcuschj"},"content":"                    } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"marcuschj"},"content":"                        throw new DukeException.DukeTaskNotFoundException();","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"marcuschj"},"content":"                    }","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"marcuschj"},"content":"                } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"marcuschj"},"content":"                    throw new DukeException.DukeTaskFailException();","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"marcuschj"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"marcuschj"},"content":"            } else if (message.startsWith(\"done\")) { // Mark tasks as done","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"marcuschj"},"content":"                if (message.length() \u003e 5 \u0026\u0026 message.substring(4, 5).equals(\" \")","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"marcuschj"},"content":"                    \u0026\u0026 message.substring(5).trim().chars().allMatch(Character::isDigit)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"marcuschj"},"content":"                    int taskIndex \u003d Integer.parseInt(message.substring(5).trim()) - 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"marcuschj"},"content":"                    if (0 \u003c\u003d taskIndex \u0026\u0026 taskIndex \u003c duke.getTasks().getList().size()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"marcuschj"},"content":"                        Task task \u003d duke.getTasks().getList().get(taskIndex);","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"marcuschj"},"content":"                        String description \u003d task.description;","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"marcuschj"},"content":"                        if (!task.isDone) {","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"marcuschj"},"content":"                            task.markAsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"marcuschj"},"content":"                            try {","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"marcuschj"},"content":"                                response \u003d response + \"\\n\" + duke.getStorage().saveListToFile();","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"marcuschj"},"content":"                            } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"marcuschj"},"content":"                                response \u003d response + \"\\n\" + duke.getUi().showLoadingError();","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"marcuschj"},"content":"                            }","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"marcuschj"},"content":"                            response \u003d response + \"\\n\" + duke.getUi().showDoneTask(description);","lastModifiedDate":"2021-08-29"},{"lineNumber":96,"author":{"gitId":"marcuschj"},"content":"                        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"marcuschj"},"content":"                            response \u003d response + \"\\n\" + duke.getUi().showAlreadyDoneTask(description);","lastModifiedDate":"2021-08-29"},{"lineNumber":98,"author":{"gitId":"marcuschj"},"content":"                        }","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"marcuschj"},"content":"                    } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"marcuschj"},"content":"                        throw new DukeException.DukeTaskNotFoundException();","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"marcuschj"},"content":"                    }","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"marcuschj"},"content":"                } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"marcuschj"},"content":"                    throw new DukeException.DukeTaskFailException();","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"marcuschj"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"marcuschj"},"content":"            } else if (message.startsWith(\"find \") || message.equals(\"find\")) { // Find","lastModifiedDate":"2021-08-28"},{"lineNumber":106,"author":{"gitId":"marcuschj"},"content":"                if (message.length() \u003e 5 \u0026\u0026 !message.substring(5).isBlank()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"marcuschj"},"content":"                    String search \u003d message.substring(5).trim();","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"marcuschj"},"content":"                    ArrayList\u003cTask\u003e resultsArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"marcuschj"},"content":"                    boolean isFound \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"marcuschj"},"content":"                    for (Task task : duke.getTasks().getList()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"marcuschj"},"content":"                        if (task.description.contains(search)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"marcuschj"},"content":"                            isFound \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"marcuschj"},"content":"                            resultsArray.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"marcuschj"},"content":"                        }","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"marcuschj"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"marcuschj"},"content":"                    if (isFound) {","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"marcuschj"},"content":"                        response \u003d response + \"\\n\" + duke.getUi().showSearchResults(resultsArray);","lastModifiedDate":"2021-08-29"},{"lineNumber":118,"author":{"gitId":"marcuschj"},"content":"                    } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"marcuschj"},"content":"                        response \u003d response + \"\\n\" + duke.getUi().showNoSearchResults();","lastModifiedDate":"2021-08-29"},{"lineNumber":120,"author":{"gitId":"marcuschj"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"marcuschj"},"content":"                } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"marcuschj"},"content":"                    throw new DukeException.DukeNoSearchFoundException();","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"marcuschj"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"marcuschj"},"content":"            } else if (message.startsWith(\"todo \") || message.equals(\"todo\")) { // To Do","lastModifiedDate":"2021-08-28"},{"lineNumber":125,"author":{"gitId":"marcuschj"},"content":"                if (message.length() \u003e 5 \u0026\u0026 !message.substring(5).isBlank()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"marcuschj"},"content":"                    String description \u003d message.substring(5).trim();","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"marcuschj"},"content":"                    response \u003d response + \"\\n\" + duke.getTasks().createTask(description, \"\",","lastModifiedDate":"2021-08-29"},{"lineNumber":128,"author":{"gitId":"marcuschj"},"content":"                        Task.Category.TODO, false, true);","lastModifiedDate":"2021-08-29"},{"lineNumber":129,"author":{"gitId":"marcuschj"},"content":"                } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":130,"author":{"gitId":"marcuschj"},"content":"                    throw new DukeException.DukeNoDescriptionException();","lastModifiedDate":"2021-08-23"},{"lineNumber":131,"author":{"gitId":"marcuschj"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":132,"author":{"gitId":"marcuschj"},"content":"            } else if (message.startsWith(\"deadline \") || message.equals(\"deadline\")) { // deadline","lastModifiedDate":"2021-08-28"},{"lineNumber":133,"author":{"gitId":"marcuschj"},"content":"                if (message.contains(\" /by \")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"marcuschj"},"content":"                    String description \u003d message.substring(9, message.indexOf(\"/by\")).trim();","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"marcuschj"},"content":"                    if (message.length() \u003e message.indexOf(\"/by\") + 3) {","lastModifiedDate":"2021-08-23"},{"lineNumber":136,"author":{"gitId":"marcuschj"},"content":"                        String by \u003d message.substring(message.indexOf(\"/by\") + 4).trim();","lastModifiedDate":"2021-08-23"},{"lineNumber":137,"author":{"gitId":"marcuschj"},"content":"                        LocalDate d1 \u003d null;","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":139,"author":{"gitId":"marcuschj"},"content":"                        if (isValid(by)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":140,"author":{"gitId":"marcuschj"},"content":"                            d1 \u003d LocalDate.parse(by);","lastModifiedDate":"2021-08-23"},{"lineNumber":141,"author":{"gitId":"marcuschj"},"content":"                            by \u003d d1.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":142,"author":{"gitId":"marcuschj"},"content":"                        }","lastModifiedDate":"2021-08-23"},{"lineNumber":143,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":144,"author":{"gitId":"marcuschj"},"content":"                        if (description.isBlank()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":145,"author":{"gitId":"marcuschj"},"content":"                            // blank description","lastModifiedDate":"2021-08-23"},{"lineNumber":146,"author":{"gitId":"marcuschj"},"content":"                            throw new DukeException.DukeNoDescriptionException();","lastModifiedDate":"2021-08-23"},{"lineNumber":147,"author":{"gitId":"marcuschj"},"content":"                        } else if (by.isBlank()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":148,"author":{"gitId":"marcuschj"},"content":"                            // proper description, blank /by","lastModifiedDate":"2021-08-23"},{"lineNumber":149,"author":{"gitId":"marcuschj"},"content":"                            throw new DukeException.DukeNoTimeGivenException();","lastModifiedDate":"2021-08-23"},{"lineNumber":150,"author":{"gitId":"marcuschj"},"content":"                        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":151,"author":{"gitId":"marcuschj"},"content":"                            // proper description and by","lastModifiedDate":"2021-08-23"},{"lineNumber":152,"author":{"gitId":"marcuschj"},"content":"                            if (isValid(by)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":153,"author":{"gitId":"marcuschj"},"content":"                                response \u003d response + \"\\n\" + duke.getTasks().createTaskDate(description,","lastModifiedDate":"2021-08-29"},{"lineNumber":154,"author":{"gitId":"marcuschj"},"content":"                                    d1, Task.Category.DEADLINE,","lastModifiedDate":"2021-08-29"},{"lineNumber":155,"author":{"gitId":"marcuschj"},"content":"                                    false, true);","lastModifiedDate":"2021-08-24"},{"lineNumber":156,"author":{"gitId":"marcuschj"},"content":"                            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":157,"author":{"gitId":"marcuschj"},"content":"                                response \u003d response + \"\\n\" + duke.getTasks().createTask(description,","lastModifiedDate":"2021-08-29"},{"lineNumber":158,"author":{"gitId":"marcuschj"},"content":"                                    by, Task.Category.DEADLINE,","lastModifiedDate":"2021-08-29"},{"lineNumber":159,"author":{"gitId":"marcuschj"},"content":"                                    false, true);","lastModifiedDate":"2021-08-24"},{"lineNumber":160,"author":{"gitId":"marcuschj"},"content":"                            }","lastModifiedDate":"2021-08-23"},{"lineNumber":161,"author":{"gitId":"marcuschj"},"content":"                        }","lastModifiedDate":"2021-08-23"},{"lineNumber":162,"author":{"gitId":"marcuschj"},"content":"                    } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":163,"author":{"gitId":"marcuschj"},"content":"                        throw new DukeException.DukeNoTimeGivenException();","lastModifiedDate":"2021-08-23"},{"lineNumber":164,"author":{"gitId":"marcuschj"},"content":"                    }","lastModifiedDate":"2021-08-23"},{"lineNumber":165,"author":{"gitId":"marcuschj"},"content":"                } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":166,"author":{"gitId":"marcuschj"},"content":"                    if (message.contains(\" /by\") || message.equals(\"deadline\") || message.substring(9).isBlank()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":167,"author":{"gitId":"marcuschj"},"content":"                        throw new DukeException.DukeNoDescriptionException();","lastModifiedDate":"2021-08-23"},{"lineNumber":168,"author":{"gitId":"marcuschj"},"content":"                    } else if (message.contains(\"by\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":169,"author":{"gitId":"marcuschj"},"content":"                        throw new DukeException.DukeInvalidInputException();","lastModifiedDate":"2021-08-23"},{"lineNumber":170,"author":{"gitId":"marcuschj"},"content":"                    } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":171,"author":{"gitId":"marcuschj"},"content":"                        throw new DukeException.DukeNoTimeGivenException();","lastModifiedDate":"2021-08-23"},{"lineNumber":172,"author":{"gitId":"marcuschj"},"content":"                    }","lastModifiedDate":"2021-08-23"},{"lineNumber":173,"author":{"gitId":"marcuschj"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":174,"author":{"gitId":"marcuschj"},"content":"            } else if (message.startsWith(\"event \") || message.equals(\"event\")) { // event","lastModifiedDate":"2021-08-28"},{"lineNumber":175,"author":{"gitId":"marcuschj"},"content":"                if (message.contains(\" /at \")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":176,"author":{"gitId":"marcuschj"},"content":"                    String description \u003d message.substring(6, message.indexOf(\"/at\")).trim();","lastModifiedDate":"2021-08-23"},{"lineNumber":177,"author":{"gitId":"marcuschj"},"content":"                    if (message.length() \u003e message.indexOf(\"/at\") + 3) {","lastModifiedDate":"2021-08-23"},{"lineNumber":178,"author":{"gitId":"marcuschj"},"content":"                        String at \u003d message.substring(message.indexOf(\"/at\") + 4).trim();","lastModifiedDate":"2021-08-23"},{"lineNumber":179,"author":{"gitId":"marcuschj"},"content":"                        LocalDate d1 \u003d null;","lastModifiedDate":"2021-08-23"},{"lineNumber":180,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":181,"author":{"gitId":"marcuschj"},"content":"                        if (isValid(at)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":182,"author":{"gitId":"marcuschj"},"content":"                            d1 \u003d LocalDate.parse(at);","lastModifiedDate":"2021-08-23"},{"lineNumber":183,"author":{"gitId":"marcuschj"},"content":"                            at \u003d d1.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":184,"author":{"gitId":"marcuschj"},"content":"                        }","lastModifiedDate":"2021-08-23"},{"lineNumber":185,"author":{"gitId":"marcuschj"},"content":"                        if (description.isBlank()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":186,"author":{"gitId":"marcuschj"},"content":"                            // blank description","lastModifiedDate":"2021-08-23"},{"lineNumber":187,"author":{"gitId":"marcuschj"},"content":"                            throw new DukeException.DukeNoDescriptionException();","lastModifiedDate":"2021-08-23"},{"lineNumber":188,"author":{"gitId":"marcuschj"},"content":"                        } else if (at.isBlank()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":189,"author":{"gitId":"marcuschj"},"content":"                            // proper description, blank /at","lastModifiedDate":"2021-08-23"},{"lineNumber":190,"author":{"gitId":"marcuschj"},"content":"                            throw new DukeException.DukeNoTimeGivenException();","lastModifiedDate":"2021-08-23"},{"lineNumber":191,"author":{"gitId":"marcuschj"},"content":"                        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":192,"author":{"gitId":"marcuschj"},"content":"                            // proper description and by","lastModifiedDate":"2021-08-23"},{"lineNumber":193,"author":{"gitId":"marcuschj"},"content":"                            if (isValid(at)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":194,"author":{"gitId":"marcuschj"},"content":"                                response \u003d response + \"\\n\" + duke.getTasks().createTaskDate(description,","lastModifiedDate":"2021-08-29"},{"lineNumber":195,"author":{"gitId":"marcuschj"},"content":"                                    d1, Task.Category.EVENT,","lastModifiedDate":"2021-08-29"},{"lineNumber":196,"author":{"gitId":"marcuschj"},"content":"                                    false, true);","lastModifiedDate":"2021-08-24"},{"lineNumber":197,"author":{"gitId":"marcuschj"},"content":"                            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":198,"author":{"gitId":"marcuschj"},"content":"                                response \u003d response + \"\\n\" + duke.getTasks().createTask(description,","lastModifiedDate":"2021-08-29"},{"lineNumber":199,"author":{"gitId":"marcuschj"},"content":"                                    at, Task.Category.EVENT,","lastModifiedDate":"2021-08-29"},{"lineNumber":200,"author":{"gitId":"marcuschj"},"content":"                                    false, true);","lastModifiedDate":"2021-08-24"},{"lineNumber":201,"author":{"gitId":"marcuschj"},"content":"                            }","lastModifiedDate":"2021-08-23"},{"lineNumber":202,"author":{"gitId":"marcuschj"},"content":"                        }","lastModifiedDate":"2021-08-23"},{"lineNumber":203,"author":{"gitId":"marcuschj"},"content":"                    } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":204,"author":{"gitId":"marcuschj"},"content":"                        throw new DukeException.DukeNoTimeGivenException();","lastModifiedDate":"2021-08-23"},{"lineNumber":205,"author":{"gitId":"marcuschj"},"content":"                    }","lastModifiedDate":"2021-08-23"},{"lineNumber":206,"author":{"gitId":"marcuschj"},"content":"                } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":207,"author":{"gitId":"marcuschj"},"content":"                    if (message.contains(\" /at\") || message.equals(\"event\") || message.substring(6).isBlank()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":208,"author":{"gitId":"marcuschj"},"content":"                        throw new DukeException.DukeNoDescriptionException();","lastModifiedDate":"2021-08-23"},{"lineNumber":209,"author":{"gitId":"marcuschj"},"content":"                    } else if (message.contains(\"at\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":210,"author":{"gitId":"marcuschj"},"content":"                        throw new DukeException.DukeInvalidInputException();","lastModifiedDate":"2021-08-23"},{"lineNumber":211,"author":{"gitId":"marcuschj"},"content":"                    } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":212,"author":{"gitId":"marcuschj"},"content":"                        throw new DukeException.DukeNoTimeGivenException();","lastModifiedDate":"2021-08-23"},{"lineNumber":213,"author":{"gitId":"marcuschj"},"content":"                    }","lastModifiedDate":"2021-08-23"},{"lineNumber":214,"author":{"gitId":"marcuschj"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":215,"author":{"gitId":"marcuschj"},"content":"            } else { // invalid input","lastModifiedDate":"2021-08-28"},{"lineNumber":216,"author":{"gitId":"marcuschj"},"content":"                throw new DukeException.DukeInvalidInputException();","lastModifiedDate":"2021-08-23"},{"lineNumber":217,"author":{"gitId":"marcuschj"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":218,"author":{"gitId":"marcuschj"},"content":"        } catch (DukeException error) {","lastModifiedDate":"2021-08-29"},{"lineNumber":219,"author":{"gitId":"marcuschj"},"content":"            response \u003d response + \"\\n\" + duke.getUi().showDukeError(error);","lastModifiedDate":"2021-08-29"},{"lineNumber":220,"author":{"gitId":"marcuschj"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":221,"author":{"gitId":"marcuschj"},"content":"        //        finally {","lastModifiedDate":"2021-08-29"},{"lineNumber":222,"author":{"gitId":"marcuschj"},"content":"        //            String nextMessage \u003d duke.getUi().getUserCommand();","lastModifiedDate":"2021-08-29"},{"lineNumber":223,"author":{"gitId":"marcuschj"},"content":"        //            handleInput(nextMessage);","lastModifiedDate":"2021-08-29"},{"lineNumber":224,"author":{"gitId":"marcuschj"},"content":"        //        }","lastModifiedDate":"2021-08-29"},{"lineNumber":225,"author":{"gitId":"marcuschj"},"content":"        return response;","lastModifiedDate":"2021-08-29"},{"lineNumber":226,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":227,"author":{"gitId":"marcuschj"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"marcuschj":227}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuschj"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"marcuschj"},"content":"import java.io.File;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"marcuschj"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"marcuschj"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"marcuschj"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"marcuschj"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"marcuschj"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"marcuschj"},"content":" * Represents a storage space that loads the \u003ccode\u003elist.txt\u003c/code\u003e of existing tasks and saves new","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"marcuschj"},"content":" * changes to the \u003ccode\u003elist.txt\u003c/code\u003e.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"marcuschj"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"marcuschj"},"content":"public class Storage {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"marcuschj"},"content":"    private String filePath;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"marcuschj"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"marcuschj"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"marcuschj"},"content":"     * Returns a Storage object.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"marcuschj"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"marcuschj"},"content":"     * @param filePath String of the filepath of the list from source folder.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"marcuschj"},"content":"     * @param duke the Duke object that is the parent.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"marcuschj"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"marcuschj"},"content":"    public Storage(String filePath, Duke duke) {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"marcuschj"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"marcuschj"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"marcuschj"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"marcuschj"},"content":"     * Loads the existing \u003ccode\u003eTask\u003c/code\u003es from the \u003ccode\u003eTaskList\u003c/code\u003e when Duke is ran.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"marcuschj"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"marcuschj"},"content":"     * @throws FileNotFoundException if \u003ccode\u003efilePath\u003c/code\u003e specified is invalid.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"marcuschj"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"marcuschj"},"content":"    protected String loadFileToList() throws FileNotFoundException {","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"marcuschj"},"content":"        File f \u003d new File(filePath); // create a File for the given file path","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"marcuschj"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"marcuschj"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"marcuschj"},"content":"            String currentLine \u003d s.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"marcuschj"},"content":"            String[] taskData \u003d currentLine.split(\"\\\\|\");","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"marcuschj"},"content":"            String category \u003d taskData[0].trim();","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"marcuschj"},"content":"            boolean isDone \u003d taskData[1].trim().equals(\"1\");","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"marcuschj"},"content":"            String description \u003d taskData[2].trim();","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"marcuschj"},"content":"            if (category.equals(\"T\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"marcuschj"},"content":"                duke.getTasks().createTask(description, \"\", Task.Category.TODO, isDone, false);","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"marcuschj"},"content":"                continue;","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"marcuschj"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"marcuschj"},"content":"            String time \u003d taskData[3].trim();","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"marcuschj"},"content":"            if (category.equals(\"D\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"marcuschj"},"content":"                duke.getTasks().createTask(description, time, Task.Category.DEADLINE, isDone, false);","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"marcuschj"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"marcuschj"},"content":"            if (category.equals(\"E\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"marcuschj"},"content":"                duke.getTasks().createTask(description, time, Task.Category.EVENT, isDone, false);","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"marcuschj"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"marcuschj"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"marcuschj"},"content":"        return duke.getUi().showListLoad();","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"marcuschj"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"marcuschj"},"content":"     * Saves the new \u003ccode\u003eTask\u003c/code\u003es from the \u003ccode\u003eTaskList\u003c/code\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"marcuschj"},"content":"     * after changes are made to the \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"marcuschj"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"marcuschj"},"content":"     * @throws IOException if \u003ccode\u003efilePath\u003c/code\u003e specified is invalid.","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"marcuschj"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"marcuschj"},"content":"    protected String saveListToFile() throws IOException {","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"marcuschj"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"marcuschj"},"content":"        String newInput \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"marcuschj"},"content":"        for (Task task : this.duke.getTasks().getList()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"marcuschj"},"content":"            switch (task.category) {","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"marcuschj"},"content":"            case TODO:","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"marcuschj"},"content":"                ToDo todo \u003d (ToDo) task;","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"marcuschj"},"content":"                int done \u003d todo.isDone ? 1 : 0;","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"marcuschj"},"content":"                newInput \u003d newInput + (\"T | \" + done + \" | \" + todo.description + \"\\n\");","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"marcuschj"},"content":"                break;","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"marcuschj"},"content":"            case DEADLINE:","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"marcuschj"},"content":"                Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"marcuschj"},"content":"                int done1 \u003d deadline.isDone ? 1 : 0;","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"marcuschj"},"content":"                newInput \u003d newInput + (\"D | \" + done1 + \" | \" + deadline.description + \" | \" + deadline.by + \"\\n\");","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"marcuschj"},"content":"                break;","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"marcuschj"},"content":"            case EVENT:","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"marcuschj"},"content":"                Event event \u003d (Event) task;","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"marcuschj"},"content":"                int done2 \u003d event.isDone ? 1 : 0;","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"marcuschj"},"content":"                newInput \u003d newInput + (\"E | \" + done2 + \" | \" + event.description + \" | \" + event.at + \"\\n\");","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"marcuschj"},"content":"                break;","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"marcuschj"},"content":"            default:","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"marcuschj"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"marcuschj"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"marcuschj"},"content":"        fw.write(newInput);","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"marcuschj"},"content":"        fw.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":95,"author":{"gitId":"marcuschj"},"content":"        return duke.getUi().saveList();","lastModifiedDate":"2021-08-29"},{"lineNumber":96,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"marcuschj"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"marcuschj":97}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuschj"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"marcuschj"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"marcuschj"},"content":" * Represents an element in the \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"marcuschj"},"content":" * Split into 3 types: \u003ccode\u003eTodo, Deadline, Event\u003c/code\u003e.","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"marcuschj"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"marcuschj"},"content":"public class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"marcuschj"},"content":"    protected String description;","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"marcuschj"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"marcuschj"},"content":"    protected Category category;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"marcuschj"},"content":"    public enum Category {","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"marcuschj"},"content":"        TODO, DEADLINE, EVENT","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"marcuschj"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"marcuschj"},"content":"     * Returns a Task object.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"marcuschj"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"marcuschj"},"content":"     * @param description description of Task","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"marcuschj"},"content":"     * @param isDone indicates if Task has been completed","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"marcuschj"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"marcuschj"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"marcuschj"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"marcuschj"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"marcuschj"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"marcuschj"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"marcuschj"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"marcuschj"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"marcuschj"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"marcuschj"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"marcuschj"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"marcuschj"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"marcuschj":40}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuschj"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"marcuschj"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"marcuschj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"marcuschj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"marcuschj"},"content":"import duke.Task.Category;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"marcuschj"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"marcuschj"},"content":" * Represents a list that keeps track of the \u003ccode\u003eTask\u003c/code\u003es that the user has.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"marcuschj"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"marcuschj"},"content":"public class TaskList {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"marcuschj"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"marcuschj"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"marcuschj"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"marcuschj"},"content":"     * Returns a TaskList object.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"marcuschj"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"marcuschj"},"content":"     * @param duke the Duke object that is the parent.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"marcuschj"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"marcuschj"},"content":"    public TaskList(Duke duke) {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"marcuschj"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"marcuschj"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"marcuschj"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"marcuschj"},"content":"        return this.list;","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"marcuschj"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"marcuschj"},"content":"     * Prints the \u003ccode\u003eTaskList\u003c/code\u003e in the correct format to be displayed in Ui.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"marcuschj"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"marcuschj"},"content":"     * @return String of the current \u003ccode\u003eTaskList\u003c/code\u003e that has been formatted properly.","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"marcuschj"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"marcuschj"},"content":"    public String printList() {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"marcuschj"},"content":"        String listString \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"marcuschj"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"marcuschj"},"content":"            int index \u003d i + 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"marcuschj"},"content":"            listString \u003d listString + index + \".\" + list.get(i).toString() + \"\\n\";","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"marcuschj"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"marcuschj"},"content":"        return listString;","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"marcuschj"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"marcuschj"},"content":"     * Adds a \u003ccode\u003eTask\u003c/code\u003e to the \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"marcuschj"},"content":"     *  @param description of the Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"marcuschj"},"content":"     * @param time        of the Task if it is a Deadline or Event.","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"marcuschj"},"content":"     * @param category    in the \u003ccode\u003eTask.CATEGORY\u003c/code\u003e enumeration. Either ToDo, Deadline or Event.","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"marcuschj"},"content":"     * @param isDone      boolean indicating if \u003ccode\u003eTask\u003c/code\u003e has been completed yet.","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"marcuschj"},"content":"     * @param hasNotif    boolean indicating if \u003ccode\u003eTask\u003c/code\u003e addition should be printed to \u003ccode\u003eUi\u003c/code\u003e.","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"marcuschj"},"content":"     * @return","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"marcuschj"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"marcuschj"},"content":"    public String createTask(String description, String time, Category category,","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"marcuschj"},"content":"                             boolean isDone, boolean hasNotif) {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"marcuschj"},"content":"        String response \u003d \"\";","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"marcuschj"},"content":"        switch (category) {","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"marcuschj"},"content":"        case TODO:","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"marcuschj"},"content":"            list.add(new ToDo(description, isDone, hasNotif));","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"marcuschj"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"marcuschj"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"marcuschj"},"content":"            list.add(new Deadline(description, time, isDone, hasNotif));","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"marcuschj"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"marcuschj"},"content":"        case EVENT:","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"marcuschj"},"content":"            list.add(new Event(description, time, isDone, hasNotif));","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"marcuschj"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"marcuschj"},"content":"        default:","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"marcuschj"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"marcuschj"},"content":"        if (hasNotif) {","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"marcuschj"},"content":"            response \u003d response + \"\\n\" + duke.getUi().showAddTask();","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"marcuschj"},"content":"            try {","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"marcuschj"},"content":"                response \u003d response + \"\\n\" + duke.getStorage().saveListToFile();","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"marcuschj"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"marcuschj"},"content":"                response \u003d response + \"\\n\" + duke.getUi().showLoadingError();","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"marcuschj"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"marcuschj"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"marcuschj"},"content":"        return response;","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"marcuschj"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"marcuschj"},"content":"     * Adds a \u003ccode\u003eTask\u003c/code\u003e to the \u003ccode\u003eTaskList\u003c/code\u003e with a date in \u003ccode\u003eLocalDate\u003c/code\u003e format.","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"marcuschj"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"marcuschj"},"content":"     * @param description of the Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"marcuschj"},"content":"     * @param time        of the Task if it is a Deadline or Event, in LocalDate.","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"marcuschj"},"content":"     * @param category    in the \u003ccode\u003eTask.CATEGORY\u003c/code\u003e enumeration. Either ToDo, Deadline or Event.","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"marcuschj"},"content":"     * @param isDone      boolean indicating if \u003ccode\u003eTask\u003c/code\u003e has been completed yet.","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"marcuschj"},"content":"     * @param hasNotif    boolean indicating if \u003ccode\u003eTask\u003c/code\u003e addition should be printed to \u003ccode\u003eUi\u003c/code\u003e.","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"marcuschj"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"marcuschj"},"content":"    public String createTaskDate(String description, LocalDate time, Task.Category category,","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"marcuschj"},"content":"            boolean isDone, boolean hasNotif) {","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"marcuschj"},"content":"        String response \u003d \"\";","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"marcuschj"},"content":"        switch (category) {","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"marcuschj"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"marcuschj"},"content":"            list.add(new Deadline(description, time, isDone, hasNotif));","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"marcuschj"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"marcuschj"},"content":"        case EVENT:","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"marcuschj"},"content":"            list.add(new Event(description, time, isDone, hasNotif));","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"marcuschj"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"marcuschj"},"content":"        default:","lastModifiedDate":"2021-08-28"},{"lineNumber":100,"author":{"gitId":"marcuschj"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"marcuschj"},"content":"        if (hasNotif) {","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"marcuschj"},"content":"            response \u003d response + \"\\n\" + duke.getUi().showAddTask();","lastModifiedDate":"2021-08-29"},{"lineNumber":103,"author":{"gitId":"marcuschj"},"content":"            try {","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"marcuschj"},"content":"                response \u003d response + \"\\n\" + duke.getStorage().saveListToFile();","lastModifiedDate":"2021-08-29"},{"lineNumber":105,"author":{"gitId":"marcuschj"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"marcuschj"},"content":"                response \u003d response + \"\\n\" + duke.getUi().showLoadingError();","lastModifiedDate":"2021-08-29"},{"lineNumber":107,"author":{"gitId":"marcuschj"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"marcuschj"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"marcuschj"},"content":"        return response;","lastModifiedDate":"2021-08-29"},{"lineNumber":110,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"marcuschj"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"marcuschj":111}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuschj"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"marcuschj"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"marcuschj"},"content":" * A type of \u003ccode\u003eTask\u003c/code\u003e that has a description attached to it.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"marcuschj"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"marcuschj"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"marcuschj"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"marcuschj"},"content":"     * Returns a ToDo object.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"marcuschj"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"marcuschj"},"content":"     * @param description description of ToDo","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"marcuschj"},"content":"     * @param isDone indicates if ToDo has been completed","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"marcuschj"},"content":"     * @param hasNotif indicates if a notif needs to be sent to user for the creation of this Todo.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"marcuschj"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"marcuschj"},"content":"    public ToDo(String description, boolean isDone, boolean hasNotif) {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"marcuschj"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"marcuschj"},"content":"        this.category \u003d Category.TODO;","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"marcuschj"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"marcuschj"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"marcuschj"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"marcuschj"},"content":"}","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"marcuschj":25}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuschj"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"marcuschj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"marcuschj"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"marcuschj"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"marcuschj"},"content":" * Represents the interface that interacts with the user, receiving commands from the user and","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"marcuschj"},"content":" * responding to the user directly through the console.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"marcuschj"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"marcuschj"},"content":"public class Ui {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"marcuschj"},"content":"    protected static final String FRIENDGREETING \u003d \"(*^_^*) Friend says: \\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"marcuschj"},"content":"    private static final String LOGO \u003d","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"marcuschj"},"content":"         \" _____     _                          _        \\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"marcuschj"},"content":"        + \"|  ___|  __  _  ___   _,___       | |       \\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"marcuschj"},"content":"        + \"| |_  |/  _|| |/ _ \\\\  |  __  |_____| |       \\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"marcuschj"},"content":"        + \"| __| | /   | |  __/  | / \\\\  |   __   |       \\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"marcuschj"},"content":"        + \"|_|   |_|   |_|\\\\____ |_|  |_|______|       \\n\";","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"marcuschj"},"content":"    private final Scanner sc;","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"marcuschj"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"marcuschj"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"marcuschj"},"content":"     * Returns a Ui object.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"marcuschj"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"marcuschj"},"content":"     * @param duke the Duke object that is the parent.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"marcuschj"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"marcuschj"},"content":"    public Ui(Duke duke) {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"marcuschj"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"marcuschj"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"marcuschj"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"marcuschj"},"content":"     * Prints on user interface the output for Welcome Message.","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"marcuschj"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"marcuschj"},"content":"    public String showWelcomeMessage() {","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"marcuschj"},"content":"        return \"Hi there! Start chatting with your new \\n\" + LOGO","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"marcuschj"},"content":"            + FRIENDGREETING + \"What would you like to do today?\";","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"marcuschj"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"marcuschj"},"content":"     * Prints on user interface the output for Goodbye Message.","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"marcuschj"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"marcuschj"},"content":"    public String showGoodbyeMessage() {","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"marcuschj"},"content":"        return FRIENDGREETING + \"See you again, my friend!\";","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"marcuschj"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"marcuschj"},"content":"     * Prints on user interface the output for Loading Error.","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"marcuschj"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"marcuschj"},"content":"    public String showLoadingError() {","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"marcuschj"},"content":"        return FRIENDGREETING + \"File not found\";","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"marcuschj"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"marcuschj"},"content":"     * Prints on user interface the output for corresponding Duke Error.","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"marcuschj"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"marcuschj"},"content":"    public String showDukeError(DukeException error) {","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"marcuschj"},"content":"        return error.toString();","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"marcuschj"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"marcuschj"},"content":"     * Prints on user interface the output for loaded list from .txt file.","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"marcuschj"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"marcuschj"},"content":"    public String showListLoad() {","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"marcuschj"},"content":"        return FRIENDGREETING + \"These are your existing tasks!\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"marcuschj"},"content":"            + duke.getTasks().printList();","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"marcuschj"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"marcuschj"},"content":"     * Prints on user interface the output for list updated.","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"marcuschj"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"marcuschj"},"content":"    public String showList() {","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"marcuschj"},"content":"        return FRIENDGREETING + \"Your to-do list has the following tasks: \\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"marcuschj"},"content":"            + duke.getTasks().printList();","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"marcuschj"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"marcuschj"},"content":"     * Prints on user interface the output for Task Removed.","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"marcuschj"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"marcuschj"},"content":"     * @param removed String description of removed task.","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"marcuschj"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"marcuschj"},"content":"    public String showRemoveTask(String removed) {","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"marcuschj"},"content":"        return FRIENDGREETING + \"removed the following task from your to-do list: \\n\" + removed","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"marcuschj"},"content":"            + \"\\nNow you have \" + duke.getTasks().getList().size() + \" tasks in the list.\";","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"marcuschj"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"marcuschj"},"content":"     * Prints on user interface the output for Task Added.","lastModifiedDate":"2021-08-28"},{"lineNumber":90,"author":{"gitId":"marcuschj"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":91,"author":{"gitId":"marcuschj"},"content":"    public String showAddTask() {","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"marcuschj"},"content":"        int listSize \u003d duke.getTasks().getList().size();","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"marcuschj"},"content":"        return FRIENDGREETING + \"added: \" + duke.getTasks().getList().get(listSize - 1).toString()","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"marcuschj"},"content":"            + \" to your to-do list!\\n\" + \"Now you have \" + listSize + \" tasks in the list.\";","lastModifiedDate":"2021-08-29"},{"lineNumber":95,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"marcuschj"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":98,"author":{"gitId":"marcuschj"},"content":"     * Prints on user interface the output for Task Done.","lastModifiedDate":"2021-08-28"},{"lineNumber":99,"author":{"gitId":"marcuschj"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":100,"author":{"gitId":"marcuschj"},"content":"     * @param description String description of done task.","lastModifiedDate":"2021-08-28"},{"lineNumber":101,"author":{"gitId":"marcuschj"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":102,"author":{"gitId":"marcuschj"},"content":"    public String showDoneTask(String description) {","lastModifiedDate":"2021-08-29"},{"lineNumber":103,"author":{"gitId":"marcuschj"},"content":"        return FRIENDGREETING + \"Hooray! You\u0027ve completed task \\n[X] \" + description;","lastModifiedDate":"2021-08-29"},{"lineNumber":104,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"marcuschj"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":107,"author":{"gitId":"marcuschj"},"content":"     * Prints on user interface the output for Task Already Done.","lastModifiedDate":"2021-08-28"},{"lineNumber":108,"author":{"gitId":"marcuschj"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":109,"author":{"gitId":"marcuschj"},"content":"     * @param description String description of already done task.","lastModifiedDate":"2021-08-28"},{"lineNumber":110,"author":{"gitId":"marcuschj"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":111,"author":{"gitId":"marcuschj"},"content":"    public String showAlreadyDoneTask(String description) {","lastModifiedDate":"2021-08-29"},{"lineNumber":112,"author":{"gitId":"marcuschj"},"content":"        return FRIENDGREETING + description + \" has already been done! :)\";","lastModifiedDate":"2021-08-29"},{"lineNumber":113,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"marcuschj"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":116,"author":{"gitId":"marcuschj"},"content":"     * Prints on user interface the output for Search results.","lastModifiedDate":"2021-08-28"},{"lineNumber":117,"author":{"gitId":"marcuschj"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":118,"author":{"gitId":"marcuschj"},"content":"     * @param resultsArray ArrayList of \u003ccode\u003eTask\u003c/code\u003e results from search.","lastModifiedDate":"2021-08-28"},{"lineNumber":119,"author":{"gitId":"marcuschj"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":120,"author":{"gitId":"marcuschj"},"content":"    public String showSearchResults(ArrayList\u003cTask\u003e resultsArray) {","lastModifiedDate":"2021-08-29"},{"lineNumber":121,"author":{"gitId":"marcuschj"},"content":"        String result \u003d FRIENDGREETING + \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":122,"author":{"gitId":"marcuschj"},"content":"        int listSize \u003d resultsArray.size();","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"marcuschj"},"content":"        for (int i \u003d 0; i \u003c listSize; i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"marcuschj"},"content":"            Task currTask \u003d resultsArray.get(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"marcuschj"},"content":"            int index \u003d i + 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"marcuschj"},"content":"            result \u003d result + index + \".\" + currTask.toString() + \"\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":127,"author":{"gitId":"marcuschj"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"marcuschj"},"content":"        return result;","lastModifiedDate":"2021-08-29"},{"lineNumber":129,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"marcuschj"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":132,"author":{"gitId":"marcuschj"},"content":"     * Prints on user interface the output for No Search Results.","lastModifiedDate":"2021-08-28"},{"lineNumber":133,"author":{"gitId":"marcuschj"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":134,"author":{"gitId":"marcuschj"},"content":"    public String showNoSearchResults() {","lastModifiedDate":"2021-08-29"},{"lineNumber":135,"author":{"gitId":"marcuschj"},"content":"        return FRIENDGREETING + \"There are no tasks that match your search.\";","lastModifiedDate":"2021-08-29"},{"lineNumber":136,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"marcuschj"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":139,"author":{"gitId":"marcuschj"},"content":"     * Prints on user interface the output for list saved to .txt file.","lastModifiedDate":"2021-08-28"},{"lineNumber":140,"author":{"gitId":"marcuschj"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":141,"author":{"gitId":"marcuschj"},"content":"    public String saveList() {","lastModifiedDate":"2021-08-29"},{"lineNumber":142,"author":{"gitId":"marcuschj"},"content":"        return \"Saving file\";","lastModifiedDate":"2021-08-29"},{"lineNumber":143,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":144,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":145,"author":{"gitId":"marcuschj"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":146,"author":{"gitId":"marcuschj"},"content":"     * Returns the message input from user.","lastModifiedDate":"2021-08-28"},{"lineNumber":147,"author":{"gitId":"marcuschj"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":148,"author":{"gitId":"marcuschj"},"content":"     * @return String which is input from user.","lastModifiedDate":"2021-08-28"},{"lineNumber":149,"author":{"gitId":"marcuschj"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":150,"author":{"gitId":"marcuschj"},"content":"    public String getUserCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":151,"author":{"gitId":"marcuschj"},"content":"        String message \u003d \"e\";","lastModifiedDate":"2021-08-23"},{"lineNumber":152,"author":{"gitId":"marcuschj"},"content":"        message \u003d sc.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":153,"author":{"gitId":"marcuschj"},"content":"        return message;","lastModifiedDate":"2021-08-23"},{"lineNumber":154,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":155,"author":{"gitId":"marcuschj"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"marcuschj":155}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuschj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"marcuschj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"marcuschj"},"content":"import duke.Deadline;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"marcuschj"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"marcuschj"},"content":" * A class to test the methods in \u003ccode\u003eDeadline\u003c/code\u003e.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"marcuschj"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"marcuschj"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"marcuschj"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"marcuschj"},"content":"    public void testDeadlineToString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"marcuschj"},"content":"        Deadline deadline \u003d new Deadline(\"description\", \"tomorrow\", false, false);","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"marcuschj"},"content":"        assertEquals(\"[D][ ] description (by: tomorrow)\", deadline.toString());","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"marcuschj"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"marcuschj":17}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuschj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"marcuschj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"marcuschj"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"marcuschj"},"content":"import duke.Parser;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"marcuschj"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"marcuschj"},"content":" * A class to test the methods in \u003ccode\u003eParser\u003c/code\u003e.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"marcuschj"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"marcuschj"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"marcuschj"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"marcuschj"},"content":"    public void testIfValidDateTrue() {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"marcuschj"},"content":"        Parser parser \u003d new Parser(new Duke());","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"marcuschj"},"content":"        boolean isValidDate \u003d parser.isValid(\"2019-01-01\");","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"marcuschj"},"content":"        assertTrue(isValidDate);","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"marcuschj"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"marcuschj":19}},{"path":"src/test/java/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuschj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"marcuschj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"marcuschj"},"content":"import duke.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"marcuschj"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"marcuschj"},"content":" * A class to test the methods in \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"marcuschj"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"marcuschj"},"content":"public class TaskTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"marcuschj"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"marcuschj"},"content":"    public void testGetStatusIcon() {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"marcuschj"},"content":"        Task task \u003d new Task(\"description\", true);","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"marcuschj"},"content":"        String status \u003d task.getStatusIcon();","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"marcuschj"},"content":"        assertEquals(\"X\", status);","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"marcuschj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"marcuschj"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"marcuschj":18}},{"path":"text-ui-test/data/list.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"marcuschj"},"content":"D | 0 | assignment | 1pm tomorrow","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"marcuschj"},"content":"D | 0 | project | noon","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"marcuschj"},"content":"E | 0 | exam | 9.30am in 6 days","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"marcuschj"},"content":"E | 0 | booksale | Aug 8 2021","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"marcuschj"},"content":"D | 0 | presentation | Aug 2 2021","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"marcuschj":5}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"marcuschj"},"content":"todo read book","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"marcuschj"},"content":"deadline do groceries /by Saturday 3pm","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"marcuschj"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"marcuschj"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"marcuschj"},"content":"event Barbeque /at Friday 8pm","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"marcuschj"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"marcuschj"},"content":"done    2","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"marcuschj"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"marcuschj"},"content":"deadline","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"marcuschj"},"content":"event","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"marcuschj"},"content":".todo","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"marcuschj"},"content":"ssiudhtodo","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"marcuschj"},"content":"deadline /by","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"marcuschj"},"content":"deadline .by","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"marcuschj"},"content":"event /by","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"marcuschj"},"content":"event /at","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"marcuschj"},"content":"event wedding/at 6pm","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"marcuschj"},"content":"event eat /at6pm","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"marcuschj"},"content":"event flight /at 3.45pm","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"marcuschj"},"content":"deadline assignment /by 1pm tomorrow","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"marcuschj"},"content":"deadline       project     /by        noon","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"marcuschj"},"content":"event    exam        /at  9.30am in 6 days","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"marcuschj"},"content":"event booksale /at 2021-08-08","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"marcuschj"},"content":"deadline presentation /by 2021-08-02","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"marcuschj"},"content":"find pres","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"marcuschj"},"content":"find cannotbefound","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"marcuschj"},"content":"find","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"marcuschj"},"content":"delete","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"marcuschj"},"content":"delete 31","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"marcuschj"},"content":"delete31","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"marcuschj"},"content":"delete 0","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"marcuschj"},"content":"delete 1","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"marcuschj"},"content":"delete 1","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"marcuschj"},"content":"delete 2","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"marcuschj"},"content":"delete          1","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"marcuschj"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"marcuschj":36}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"marcuschj"},"content":"REM if exist ..\\text-ui-test\\data\\list.txt echo \"T | 1 | Open Duke!\" \u003e ..\\text-ui-test\\data\\list.txt","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"marcuschj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"marcuschj"},"content":"javac  -cp ..\\src\\main\\java\\duke -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"marcuschj"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"marcuschj":4,"-":19}}]
