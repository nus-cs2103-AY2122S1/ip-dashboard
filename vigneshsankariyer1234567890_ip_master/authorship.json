[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"vigneshsankariyer1234567890":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"vigneshsankariyer1234567890":16,"-":45}},{"path":"src/main/java/duke/CommandResult.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public class CommandResult {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private final String feedbackResult;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private final boolean isExit;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public CommandResult(String feedbackResult, boolean isExit) {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        this.feedbackResult \u003d feedbackResult;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public String getFeedbackResult() {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return this.feedbackResult;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return this.isExit;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"vigneshsankariyer1234567890":19}},{"path":"src/main/java/duke/DateTimeFormatCreator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.time.temporal.ChronoField;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" * An object that creates a custom DateTime format that will be used by the Tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public class DateTimeFormatCreator {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * A class level method that returns a DateTimeFormatter which allows for a custom DateTime format.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @return DateTimeFormatter","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public static DateTimeFormatter format() {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return new DateTimeFormatterBuilder()","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                .appendPattern(\"yyyy-MM-dd[ HH:mm[:ss]]\")","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                .parseDefaulting(ChronoField.HOUR_OF_DAY, 0)","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                .parseDefaulting(ChronoField.MINUTE_OF_HOUR, 0)","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                .parseDefaulting(ChronoField.SECOND_OF_MINUTE, 0)","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                .toFormatter();","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"vigneshsankariyer1234567890":24}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        displayPicture.setClip(new Circle(40, 40, 40));","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private void flip() {","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        db.setStyle(\"-fx-background-color: #ADD8E6;\");","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return db;","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        db.flip();","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        db.setStyle(\"-fx-background-color: #FFB6C1;\");","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return db;","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"vigneshsankariyer1234567890":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" * The driver class of Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    UserInterface userInterface;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    TaskList list;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    Storage storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * A constructor method that creates the driver, with the default storage file path used.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public Duke() {","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        this.userInterface \u003d new UserInterface();","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        this.list \u003d new TaskList();","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        this.storage \u003d Storage.createStorage();","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            this.list \u003d this.storage.load(this.list);","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            System.out.println(\"DB file is corrupted.\\n\" + e.getMessage());","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }    }","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * A constructor method that creates the driver, with the input filepath used.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @param filePath the filepath of the file.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        this.userInterface \u003d new UserInterface();","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        this.list \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        this.storage \u003d Storage.createStorage(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            this.list \u003d this.storage.load(this.list);","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            System.out.println(\"DB file is corrupted.\\n\" + e.getMessage());","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    CommandResult getResponse(String input) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return new Parser(this.list).parse(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void save() throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        this.storage.save(this.list);","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"vigneshsankariyer1234567890":50,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" * The exception class that contains the message to be rendered by the UserInterface.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * The constructor method for DukeException.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @param message The message to be rendered by the UserInterface.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        super(message);","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"vigneshsankariyer1234567890":16}},{"path":"src/main/java/duke/Formatter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.task.TaskType;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" * The class that will format a string to a task or a task to a string.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public class Formatter {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Method that formats a String to a Task object.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @param input the string from file.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @return the formatted task.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @throws DukeException if there are any errors.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public Task formatStringToTask(String input) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        String[] delimitedInput \u003d input.split(\"[|]\");","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        String taskType \u003d delimitedInput[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        if (taskType.equals(TaskType.T.toString())) {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            return new Todo(delimitedInput[2], Boolean.parseBoolean(delimitedInput[1]));","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        if (taskType.equals(TaskType.D.toString())) {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            return new Deadline(delimitedInput[2], delimitedInput[3], Boolean.parseBoolean(delimitedInput[1]));","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        if (taskType.equals(TaskType.E.toString())) {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            return new Event(delimitedInput[2], delimitedInput[3], Boolean.parseBoolean(delimitedInput[1]));","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return Task.emptyTask();","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Method that formats a Task to a String.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @param input the task from a list.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @return the formatted string.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public String formatTaskToString(Task input) {","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        TaskType taskType \u003d input.getTaskType();","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        result.append(taskType.toString())","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                .append(\"|\")","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                .append(input.getCompleted())","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                .append(\"|\")","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                .append(input.getLabel());","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return result.toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"vigneshsankariyer1234567890":50}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public class Launcher {","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"vigneshsankariyer1234567890":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    Duke duke \u003d new Duke(\"data/duke.txt\");","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            stage.show();","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"vigneshsankariyer1234567890":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.util.Timer;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.util.TimerTask;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                DialogBox.getDukeDialog(\"Hello! Welcome to Duke!\", dukeImage)","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        );","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        CommandResult response;","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                    DialogBox.getDukeDialog(response.getFeedbackResult(), dukeImage)","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            );","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            if (response.isExit()) {","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                duke.save();","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                        DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                        DialogBox.getDukeDialog(duke.userInterface.printGoodByeGreeting(), dukeImage)","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                );","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                new Timer().schedule(new TimerTask() {","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                    public void run () {","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                        Platform.exit();","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                    }","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                }, 1000);","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                    DialogBox.getDukeDialog(e.getMessage(), dukeImage)","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            );","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"vigneshsankariyer1234567890":76}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.command.TodoCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    TaskList taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    Parser(TaskList taskList) {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public CommandResult parse(String input) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        String[] words \u003d input.split(\" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        String commandWord \u003d words[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        String rest;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            switch (commandWord) {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            case ListCommand.COMMAND_WORD:","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                return new ListCommand(taskList).execute();","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            case DoneCommand.COMMAND_WORD:","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                return new DoneCommand(taskList, Integer.parseInt(words[1])).execute();","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                return new DeleteCommand(taskList, Integer.parseInt(words[1])).execute();","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            case TodoCommand.COMMAND_WORD:","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                if (words.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                    throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                return new TodoCommand(taskList, combine(words, words.length)).execute();","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            case DeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                rest \u003d combine(words, words.length);","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                return new DeadlineCommand(taskList, rest).execute();","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            case EventCommand.COMMAND_WORD:","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                rest \u003d combine(words, words.length);","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                return new EventCommand(taskList, rest).execute();","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            case FindCommand.COMMAND_WORD:","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                if (words.length \u003c 2) {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                    throw new DukeException(\"You need to include a search word.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                if (words.length \u003e 2) {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                    throw new DukeException(\"You can only include 1 search word.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                return new FindCommand(taskList, words[1]).execute();","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                return new ExitCommand(taskList).execute();","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            default:","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        } catch (java.lang.NumberFormatException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new DukeException(\"OOPS!!! \" + e.getLocalizedMessage() + \" was input instead of an integer.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private String combine(String[] splitList, int end) {","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        for (int i \u003d 1; i \u003c end; i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            result.append(splitList[i]);","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            result.append(\" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return result.substring(0,result.length() - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"vigneshsankariyer1234567890":70}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public class Storage {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private BufferedReader reader;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private BufferedWriter writer;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private Formatter formatter;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public static final String DEFAULT_FILE_NAME \u003d \"duke.txt\";","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public static final String DEFAULT_FILE_DIRECTORY \u003d \"data\";","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private Path targetDirectory;","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private Storage() {","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            this.targetDirectory \u003d","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                    Paths.get(\".\", DEFAULT_FILE_DIRECTORY, DEFAULT_FILE_NAME)","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                            .toAbsolutePath()","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                            .normalize();","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            if (!java.nio.file.Files.exists(this.targetDirectory)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                try {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                    Files.createDirectory(Paths.get(\".\", DEFAULT_FILE_DIRECTORY).toAbsolutePath().normalize());","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                } catch (java.nio.file.FileAlreadyExistsException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                    System.out.println(\"Directory exists but file does not. Creating file...\");","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                Files.createFile(this.targetDirectory);","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            this.reader \u003d Files.newBufferedReader(this.targetDirectory, StandardCharsets.UTF_8);","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            this.formatter \u003d new Formatter();","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private Storage(String[] args) {","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            this.targetDirectory \u003d","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                    Paths.get(\".\", args).toAbsolutePath().normalize();","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            if (!java.nio.file.Files.exists(this.targetDirectory)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                int i \u003d 0;","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                StringBuilder directory \u003d new StringBuilder(\"./\");","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                while (i \u003c args.length - 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                    try {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                        directory.append(args[i]);","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                        Files.createDirectory(Paths.get(directory.toString()).toAbsolutePath().normalize());","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                        directory.append(\"/\");","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                    } catch (java.nio.file.FileAlreadyExistsException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                        System.out.println(\"Directory exists but file does not. Creating file...\");","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                    i++;","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                Files.createFile(this.targetDirectory);","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            this.reader \u003d Files.newBufferedReader(this.targetDirectory, StandardCharsets.UTF_8);","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            this.formatter \u003d new Formatter();","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public static Storage createStorage() {","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return new Storage();","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public static Storage createStorage(String filePath) {","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return new Storage(filePath.split(\"/\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public TaskList load(TaskList taskList) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            String line \u003d this.reader.readLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            if (line \u003d\u003d null || line.isEmpty()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                System.out.println(\"No previous record found.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                return taskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            while (line !\u003d null) {","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                taskList.addTask(this.formatter.formatStringToTask(line));","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                line \u003d this.reader.readLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            System.out.println(\"Unable to load file.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return taskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void save(TaskList taskList) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        try{","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            this.writer \u003d Files.newBufferedWriter(this.targetDirectory, StandardCharsets.UTF_8);","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            System.out.println(\"Exception occurred while initialising writer.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        System.out.println(\"Saving your list now!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            try {","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                this.writer.write(this.formatter.formatTaskToString(taskList.get(i)));","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                this.writer.newLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                System.out.println(\"Exception occurred while writing\");","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            writer.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            System.out.println(\"Exception occurred while closing writer.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"vigneshsankariyer1234567890":118}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.util.List;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public class TaskList {","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    TaskList() {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public int size() {","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public Task get(int taskId) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            return this.tasks.get(taskId - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new DukeException(\"Wrong index input.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        this.tasks.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public Task deleteTask(int taskId) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            return this.tasks.remove(taskId - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        } catch (java.lang.IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new DukeException(\"That task does not exist.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public Task markAsCompleted(int taskId) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            Task currentTask \u003d this.tasks.get(taskId - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            Task completedTask \u003d currentTask.complete();","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            this.tasks.set(taskId - 1, completedTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            return completedTask;","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        } catch (java.lang.IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new DukeException(\"That task does not exist.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public TaskList filter(String input) {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        for ( int i \u003d 0; i \u003c this.size() ; i++ ) {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            Task task \u003d this.tasks.get(i);","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            String nameOfTask \u003d task.getName();","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            if (nameOfTask.contains(input)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                taskList.addTask(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Override()","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public String toString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        for (int j \u003d 1; j \u003c\u003d this.size() ; j++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            String line \u003d \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                line \u003d j + \".\" + this.get(j).toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            result.append(line);","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            if (j \u003c this.size()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                result.append(\"\\n\");","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return result.toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"vigneshsankariyer1234567890":80}},{"path":"src/main/java/duke/UserInterface.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public class UserInterface {","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    Scanner sc;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    UserInterface() {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public String nextCommand() {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return sc.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public String printInitialGreeting() {","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return \"Hello I\u0027m Duke\\n\" + \"What can I do for you?\";","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public String printGoodByeGreeting() {","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void showError(DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        System.out.println(\"OOPS!!! \" + e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void showResult(CommandResult commandResult) {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        System.out.println(commandResult.getFeedbackResult());","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private void printLogo() {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"vigneshsankariyer1234567890":43}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.CommandResult;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" * Application functionality is implemented by creating classes that extends Command. These classes override","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" * execute to achieve its specific task.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public abstract class Command implements ListNumberPrintable {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private final TaskList taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Abstract constructor that will have to be implemented by all classes that extend Command.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @param taskList that is passed by Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    protected Command(TaskList taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Abstract method that will have to be implemented by all classes that extend Comand.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @return CommandResult.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public abstract CommandResult execute() throws DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Getter that retrieves the TaskList that is set when calling the constructor.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @return TaskList of the command.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public TaskList getTaskList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return this.taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Overrides the printListNumber method as indicated by ListNumberPrintable.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @return String that will be passed to UserInterface to be rendered.","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public String printListNumber(TaskList taskList) {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return \"You now have \"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"vigneshsankariyer1234567890":48}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.CommandResult;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" * A command that can add a Deadline task to a TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public class DeadlineCommand extends Command implements TaskListAddable {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /** The rest of the command input by the user passed on by duke*/","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private final String command;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /** Class level constant that signifies the command used to invoke this. */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Constructor that creates DeadlineCommand.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @param taskList The TaskList to be given by Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @param command The entire command input by the user passed on by Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public DeadlineCommand(TaskList taskList, String command) {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        super(taskList);","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Overrides execute() from Command and returns a CommandResult which stores the feedback string","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * to be returned to the UserInterface.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @return CommandResult to be rendered by UserInterface.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @throws DukeException for any incorrect commands input by the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public CommandResult execute() throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        TaskList taskList \u003d super.getTaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        String[] eventList \u003d this.command.split(\" /by \");","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        if (eventList.length !\u003d 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new DukeException(\"Incorrect command was given for deadline. \" + \"Try this: deadline name_here\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                    \" /at date_here\");","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        Task event \u003d new Deadline(eventList[0], eventList[1], false);","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        String feedback \u003d addTaskToTaskList(taskList, event);","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return new CommandResult(feedback, false);","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Overrides addTaskToTaskList(TaskList taskList, Task task) as specified by","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @param taskList The TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @param task The task to be added.","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @return String format of the resultant message to be printed.","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public String addTaskToTaskList(TaskList taskList, Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        taskList.addTask(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return \"Got it. I\u0027ve added this task:\\n  \"","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                + task.getDetails()","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                + \"\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                + printListNumber(taskList);","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"vigneshsankariyer1234567890":63}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.CommandResult;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" * A command that can delete a task from a taskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public class DeleteCommand extends Command implements ListNumberPrintable {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /** The id of the task to delete from the list. */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private final int taskId;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /** Class level constant that signifies the command used to invoke this. */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Constructor that creates DeleteCommand.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @param taskList The TaskList to be given by Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @param taskId The id of the task to be deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public DeleteCommand(TaskList taskList, int taskId) {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        super(taskList);","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        this.taskId \u003d taskId;","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Overrides execute() from Command and returns a CommandResult which stores the feedback string","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * to be returned to the UserInterface.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @return CommandResult to be rendered by UserInterface.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @throws DukeException for any incorrect commands input by the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public CommandResult execute() throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        TaskList taskList \u003d super.getTaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        Task deletedTask \u003d taskList.deleteTask(this.taskId);","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return new CommandResult(\"Noted. I\u0027ve removed this task:\\n \"","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                + deletedTask.getDetails()","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                + \"\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                + printListNumber(taskList),","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                false);","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"vigneshsankariyer1234567890":45}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.CommandResult;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" * A command that can mark a task as completed from a taskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public class DoneCommand extends Command{","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /** The id of the task to marked as completed from the list. */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private final int taskId;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /** Class level constant that signifies the command used to invoke this. */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public static final String COMMAND_WORD \u003d \"done\";","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Constructor that creates DeleteCommand.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @param taskList The TaskList to be given by Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @param taskId The id of the task to be marked as completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public DoneCommand(TaskList taskList, int taskId) {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        super(taskList);","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        this.taskId \u003d taskId;","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Overrides execute() from Command and returns a CommandResult which stores the feedback string","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * to be returned to the UserInterface.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @return CommandResult to be rendered by UserInterface.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @throws DukeException for any incorrect commands input by the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public CommandResult execute() throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        TaskList taskList \u003d super.getTaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        Task completedTask \u003d taskList.markAsCompleted(this.taskId);","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return new CommandResult(\"Nice! I\u0027ve marked this task as done:\\n \"","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                + completedTask.getDetails(), false);","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"vigneshsankariyer1234567890":42}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.CommandResult;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" * A command that can add a Deadline task to a TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public class EventCommand extends Command implements TaskListAddable {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /** The rest of the command input by the user passed on by duke*/","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private final String command;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /** Class level constant that signifies the command used to invoke this. */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Constructor that creates EventCommand.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @param taskList The TaskList to be given by Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @param command The entire command input by the user passed on by Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public EventCommand(TaskList taskList, String command) {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        super(taskList);","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Overrides execute() from Command and returns a CommandResult which stores the feedback string","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * to be returned to the UserInterface.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @return CommandResult to be rendered by UserInterface.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @throws DukeException for any incorrect commands input by the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public CommandResult execute() throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        TaskList taskList \u003d super.getTaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        String[] eventList \u003d this.command.split(\" /at \");","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        if (eventList.length !\u003d 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new DukeException(\"Incorrect command was given for event. \" + \"Try this: event name_here\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                    \" /at date_here\");","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        Task event \u003d new Event(eventList[0], eventList[1], false);","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        String feedback \u003d addTaskToTaskList(taskList, event);","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return new CommandResult(feedback, false);","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Overrides addTaskToTaskList(TaskList taskList, Task task) as specified by","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @param taskList The TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @param task The task to be added.","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @return String format of the resultant message to be printed.","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public String addTaskToTaskList(TaskList taskList, Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        taskList.addTask(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return \"Got it. I\u0027ve added this task:\\n  \"","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                + task.getDetails()","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                + \"\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                + printListNumber(taskList);","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"vigneshsankariyer1234567890":63}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.CommandResult;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" * A command that can signify duke to exit.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /** Class level constant that signifies the command used to invoke this. */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Constructor that creates ExitCommand.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @param taskList The TaskList to be given by Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public ExitCommand(TaskList taskList) {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        super(taskList);","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Overrides execute() from Command and returns a CommandResult which stores the feedback string","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * and the isExit flag to be returned to the UserInterface. This will tell the UserInterface to start","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * exiting and get Duke to save any changes to the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @return CommandResult to be rendered by UserInterface.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return new CommandResult(\"Exiting now...\", true);","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"vigneshsankariyer1234567890":32}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.CommandResult;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private final String searchInput;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public FindCommand(TaskList taskList, String searchInput) {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        super(taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        this.searchInput \u003d searchInput;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public CommandResult execute() throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        TaskList taskList \u003d super.getTaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        TaskList filtered \u003d taskList.filter(this.searchInput);","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        String feedback \u003d \"Here are the matching tasks in your list:\\n\" + filtered.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return new CommandResult(feedback, false);","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"vigneshsankariyer1234567890":24}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.CommandResult;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" * A command that can signify duke to render the TaskList items.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /** Class level constant that signifies the command used to invoke this. */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Constructor that creates ListCommand.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @param taskList The TaskList to be given by Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public ListCommand(TaskList taskList) {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        super(taskList);","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Overrides execute() from Command and returns a CommandResult which stores the feedback string","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * to be returned to the UserInterface.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @return CommandResult to be rendered by UserInterface.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        TaskList taskList \u003d super.getTaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        String feedback \u003d \"Here are the tasks in your list:\\n\" + taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return new CommandResult(feedback, false);","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"vigneshsankariyer1234567890":34}},{"path":"src/main/java/duke/command/ListNumberPrintable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" * This interface allows a contract to be created to return the string of a given TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public interface ListNumberPrintable {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    String printListNumber(TaskList taskList);","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"vigneshsankariyer1234567890":12}},{"path":"src/main/java/duke/command/TaskListAddable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" * This interface allows a contract to be created to return the result of adding a task to a TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public interface TaskListAddable {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    String addTaskToTaskList(TaskList taskList, Task task);","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"vigneshsankariyer1234567890":13}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.CommandResult;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" * A command that can add a Deadline task to a TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public class TodoCommand extends Command implements TaskListAddable {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /** Class level constant that signifies the command used to invoke this. */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /** The rest of the command input by the user passed on by duke*/","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private final String command;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Constructor that creates TodoCommand.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @param taskList The TaskList to be given by Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @param command The entire command input by the user passed on by Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public TodoCommand(TaskList taskList, String command) {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        super(taskList);","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Overrides execute() from Command and returns a CommandResult which stores the feedback string","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * to be returned to the UserInterface.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @return CommandResult to be rendered by UserInterface.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        TaskList taskList \u003d super.getTaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        Task todo \u003d new Todo(this.command, false);","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        String feedback \u003d addTaskToTaskList(taskList, todo);","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return new CommandResult(feedback, false);","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Overrides addTaskToTaskList(TaskList taskList, Task task) as specified by","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @param taskList The TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @param task The task to be added.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @return String format of the resultant message to be printed.","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public String addTaskToTaskList(TaskList taskList, Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        taskList.addTask(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return \"Got it. I\u0027ve added this task:\\n  \"","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                + task.getDetails()","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                + \"\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                + printListNumber(taskList);","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"vigneshsankariyer1234567890":56}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" * The Deadline type task.","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public class Deadline extends TimedTask {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * The constructor of Deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @param name Name of task","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @param by Date of task","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @param isCompleted Completion status of task","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @throws DukeException if date is the wrong format.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public Deadline(String name, String by, boolean isCompleted) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        super(name, by, TaskType.D, isCompleted);","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    protected String getDateTimeString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return \" (by: \" + this.getDateTime() + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public Task updateName(String input) {","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            return new Deadline(input, this.getDateTimeInternal(), this.getCompleted());","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        } catch(DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            return Task.emptyTask();","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public Task complete() {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            return new Deadline(this.getName(), this.getDateTimeInternal(), true);","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        } catch(DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            return Task.emptyTask();","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"vigneshsankariyer1234567890":45}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" * The Event type task.","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public class Event extends TimedTask {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * The constructor of Event.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @param name Name of task","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @param by Date of task","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @param isCompleted Completion status of task","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @throws DukeException if date is the wrong format.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public Event(String name, String by, boolean isCompleted) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        super(name, by, TaskType.E, isCompleted);","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    protected String getDateTimeString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return \" (at: \" + this.getDateTime() + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public Task updateName(String input) {","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            return new Deadline(input, this.getDateTimeInternal(), this.getCompleted());","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        } catch(DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            return Task.emptyTask();","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public Task complete() {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            return new Deadline(this.getName(), this.getDateTimeInternal(), true);","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        } catch(DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            return Task.emptyTask();","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"vigneshsankariyer1234567890":45}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private final String name;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private final boolean isCompleted;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private final TaskType taskType;","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public static final EmptyTask EMPTY_TASK \u003d EmptyTask.empty();","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    Task(String name, TaskType taskType, boolean isCompleted) {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public static Task emptyTask() {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return Task.EMPTY_TASK;","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public String getName() {","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return this.name;","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public boolean getCompleted() {","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return this.isCompleted;","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public abstract Task updateName(String input);","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public abstract Task complete();","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public abstract String getDetails();","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public abstract String getLabel();","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public String getTaskTypeString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return \"[\" + this.taskType.toString() + \"]\";","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public TaskType getTaskType() {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return this.taskType;","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return getDetails();","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public static final class EmptyTask extends Task {","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        EmptyTask() {","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            super(\"\", TaskType.EMPTY, false);","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        public static EmptyTask empty() {","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            return new EmptyTask();","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        public EmptyTask updateName(String input) {","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            return this;","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        public EmptyTask complete() {","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            return this;","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        public String getDetails() {","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            return \"Empty\";","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        public String getLabel() {","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            return \"Empty\";","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"vigneshsankariyer1234567890":79}},{"path":"src/main/java/duke/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" * The enumerated TaskType.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public enum TaskType {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"//    T refers to To-Do, D refers to duke.task.Deadline, E refers to duke.task.Event","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    T, D, E, EMPTY;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"vigneshsankariyer1234567890":9}},{"path":"src/main/java/duke/task/TimedTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.DateTimeFormatCreator;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public abstract class TimedTask extends Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    TimedTask(String name,","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"              String dateTime,","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"              TaskType taskType,","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"              boolean isCompleted) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        super(name, taskType, isCompleted);","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            this.dateTime \u003d LocalDateTime.parse(dateTime.trim(), DateTimeFormatCreator.format());","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new DukeException(\"Incorrect form of date input. Please try yyyy-MM-dd HH:mm instead.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    protected abstract String getDateTimeString();","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    protected String getDateTimeInternal() {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return this.dateTime.toLocalDate().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                + \" \"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                + this.dateTime.format(DateTimeFormatter.ISO_LOCAL_TIME);","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public String getDateTime() {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return this.dateTime.toLocalDate().format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                + \" \"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                + this.dateTime.format(DateTimeFormatter.ISO_LOCAL_TIME);","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public String getLabel() {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return this.getName() + \"|\" + this.getDateTimeInternal();","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public String getDetails() {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        String checkbox \u003d \"[\" + ( getCompleted() ? \"X\" : \" \") + \"]\";","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        String details \u003d getTaskTypeString() + checkbox + \" \" + this.getName();","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return details + getDateTimeString();","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"vigneshsankariyer1234567890":51}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" * The Todo type task.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * The constructor for the Todo task","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @param name Name of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @param isCompleted Completion status of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public Todo(String name, boolean isCompleted) {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        super(name, TaskType.T, isCompleted);","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public Task updateName(String input) {","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return new Todo(input, this.getCompleted());","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public Task complete() {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return new Todo(this.getName(), true);","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public String getDetails() {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        String checkbox \u003d \"[\" + ( getCompleted() ? \"X\" : \" \") + \"]\";","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return getTaskTypeString() + checkbox + \" \" + this.getName();","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public String getLabel() {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return this.getName() + \"|\";","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"vigneshsankariyer1234567890":37}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                \u003cInsets right\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"vigneshsankariyer1234567890":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"vigneshsankariyer1234567890":19}},{"path":"src/test/java/duke/TodoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.command.TodoCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public class TodoCommandTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    Storage store;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            store \u003d Storage.createStorage(\"test/db.txt\");","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    TaskList tl \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    void testAddTodo() {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        Command c \u003d new TodoCommand(this.tl, \"a simple todo task\");","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            c.execute();","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        } catch (duke.DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            fail();","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        Task expected \u003d new Todo(\"a simple todo task\", false);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            assertEquals(expected.getLabel(),tl.get(1).getLabel()); //same label","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            assertEquals(expected.getTaskType(), tl.get(1).getTaskType()); //same type","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        } catch(DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            fail(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(1, tl.size()); //exactly one task added","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    void testAddDeadline() {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        Command c \u003d new DeadlineCommand(this.tl, \"a simple deadline task /by 2020-02-20 00:00:00\");","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            c.execute();","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            Task expected \u003d new Deadline(\"a simple deadline task\", \"2020-02-20 00:00:00\", false);","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            assertEquals(expected.getLabel(), tl.get(1).getLabel());","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            assertEquals(expected.getTaskType(), tl.get(1).getTaskType());","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        } catch(DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            fail(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(1, tl.size());","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    void testAddEvent() {","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        Command c \u003d new EventCommand(this.tl, \"a simple event task /at 2020-02-20 00:00:00\");","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            c.execute();","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            Task expected \u003d new Event(\"a simple event task\", \"2020-02-20 00:00:00\", false);","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            assertEquals(expected.getLabel(), tl.get(1).getLabel());","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            assertEquals(expected.getTaskType(), tl.get(1).getTaskType());","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        } catch(DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            fail(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(1, tl.size());","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public class UiStub extends duke.UserInterface {","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        public void notifySuccessfulAdd(duke.TaskList tl) {","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            Task t \u003d null;","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                t \u003d tl.get(0);","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                fail();","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            System.out.println(\"You have successfully added \" + t);","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"vigneshsankariyer1234567890":87}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"todo borrow book","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"deadline return book /by June 6th","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"done 2","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"todo","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"blah","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"event hello at 3","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"deadline hello by 3","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"delete 2","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"bye","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"vigneshsankariyer1234567890":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"del ACTUAL.TXT","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"vigneshsankariyer1234567890":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"vigneshsankariyer1234567890":1,"-":33}}]
