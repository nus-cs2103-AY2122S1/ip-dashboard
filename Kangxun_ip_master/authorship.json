[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"Kangxun"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":45,"Kangxun":1}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kangxun"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"Kangxun"},"content":"// import java packages","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"Kangxun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"Kangxun"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"Kangxun"},"content":"// import duke packages","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"Kangxun"},"content":"import duke.command.Deadline;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"Kangxun"},"content":"import duke.command.Event;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"Kangxun"},"content":"import duke.command.Todo;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"Kangxun"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"Kangxun"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"Kangxun"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"Kangxun"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"Kangxun"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"Kangxun"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"Kangxun"},"content":" * A chatbot that stores tasks given by a user.","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"Kangxun"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"Kangxun"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"Kangxun"},"content":"    private TaskList commandList;","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"Kangxun"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"Kangxun"},"content":"     * Creates a Duke chatbot.","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"Kangxun"},"content":"     * @param filePath Filepath to save tasks and load tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"Kangxun"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"Kangxun"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"Kangxun"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"Kangxun"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"Kangxun"},"content":"            commandList \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"Kangxun"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"Kangxun"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"Kangxun"},"content":"            commandList \u003d new TaskList();","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"Kangxun"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"Kangxun"},"content":"     * Runs the Duke chatbot.","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"Kangxun"},"content":"    public void run() {","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"Kangxun"},"content":"        ui.sayHello();","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"Kangxun"},"content":"        int count \u003d 0 + commandList.getLength();","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"Kangxun"},"content":"        // Create a scanner to read from standard input.","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"Kangxun"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"Kangxun"},"content":"        String cmd \u003d sc.nextLine();","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"Kangxun"},"content":"        while (Parser.isNotBye(cmd)) {","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"Kangxun"},"content":"            try {","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"Kangxun"},"content":"                // when command given is \"list\"","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"Kangxun"},"content":"                if (Parser.isList(cmd)) {","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"Kangxun"},"content":"                    ui.printList(commandList);","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"Kangxun"},"content":"                } else if (Parser.isDone(cmd)) {","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"Kangxun"},"content":"                    // when command given is \"done\"","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"Kangxun"},"content":"                    int itemNo \u003d Parser.parseDoneCmd(cmd);","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"Kangxun"},"content":"                    // Make sure itemNo is within limit","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"Kangxun"},"content":"                    if ((itemNo \u003c\u003d count) \u0026\u0026 (itemNo \u003e 0)) {","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"Kangxun"},"content":"                        commandList.markDone(itemNo - 1);","lastModifiedDate":"2021-09-02"},{"lineNumber":65,"author":{"gitId":"Kangxun"},"content":"                        storage.saveTasks(commandList.getTasks());","lastModifiedDate":"2021-09-02"},{"lineNumber":66,"author":{"gitId":"Kangxun"},"content":"                    } else {","lastModifiedDate":"2021-09-02"},{"lineNumber":67,"author":{"gitId":"Kangxun"},"content":"                        // throw exception when itemNo not within limit","lastModifiedDate":"2021-09-02"},{"lineNumber":68,"author":{"gitId":"Kangxun"},"content":"                        throw new DukeException(\"i cant seem to find the task you\u0027re looking for\");","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"Kangxun"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"Kangxun"},"content":"                    ui.printTaskDone(commandList, itemNo - 1);","lastModifiedDate":"2021-09-02"},{"lineNumber":71,"author":{"gitId":"Kangxun"},"content":"                } else if (Parser.isValidTask(cmd)) {","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"Kangxun"},"content":"                    String task \u003d Parser.getTaskName(cmd);","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"Kangxun"},"content":"                    String desc \u003d Parser.getDesc(cmd);","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"Kangxun"},"content":"                    if (Parser.isMissingArg(cmd)) {","lastModifiedDate":"2021-09-02"},{"lineNumber":75,"author":{"gitId":"Kangxun"},"content":"                        // when desc is not empty","lastModifiedDate":"2021-09-02"},{"lineNumber":76,"author":{"gitId":"Kangxun"},"content":"                        // case when only a whitespace follows a command","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"Kangxun"},"content":"                        throw new DukeException(\"the description of a \" + task + \" cannot be empty\");","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"Kangxun"},"content":"                    } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"Kangxun"},"content":"                        // Separate into cases","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"Kangxun"},"content":"                        switch (task) {","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"Kangxun"},"content":"                        case \"todo\":","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"Kangxun"},"content":"                            commandList.add(new Todo(desc));","lastModifiedDate":"2021-09-02"},{"lineNumber":83,"author":{"gitId":"Kangxun"},"content":"                            break;","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"Kangxun"},"content":"                        case \"deadline\":","lastModifiedDate":"2021-08-19"},{"lineNumber":85,"author":{"gitId":"Kangxun"},"content":"                            String deadlineInfo \u003d Parser.getDeadlineInfo(desc);","lastModifiedDate":"2021-09-02"},{"lineNumber":86,"author":{"gitId":"Kangxun"},"content":"                            String deadlineDue \u003d Parser.getDeadlineDue(desc);","lastModifiedDate":"2021-09-02"},{"lineNumber":87,"author":{"gitId":"Kangxun"},"content":"                            commandList.add(new Deadline(deadlineInfo, deadlineDue));","lastModifiedDate":"2021-09-02"},{"lineNumber":88,"author":{"gitId":"Kangxun"},"content":"                            break;","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"Kangxun"},"content":"                        case \"event\":","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"Kangxun"},"content":"                            String eventInfo \u003d Parser.getEventInfo(desc);","lastModifiedDate":"2021-09-02"},{"lineNumber":91,"author":{"gitId":"Kangxun"},"content":"                            String eventDue \u003d Parser.getEventDue(desc);","lastModifiedDate":"2021-09-02"},{"lineNumber":92,"author":{"gitId":"Kangxun"},"content":"                            commandList.add(new Event(eventInfo, eventDue));","lastModifiedDate":"2021-09-02"},{"lineNumber":93,"author":{"gitId":"Kangxun"},"content":"                            break;","lastModifiedDate":"2021-08-19"},{"lineNumber":94,"author":{"gitId":"Kangxun"},"content":"                        default:","lastModifiedDate":"2021-09-02"},{"lineNumber":95,"author":{"gitId":"Kangxun"},"content":"                            // should not happen","lastModifiedDate":"2021-09-02"},{"lineNumber":96,"author":{"gitId":"Kangxun"},"content":"                            throw new DukeException(\"the name of task is not valid\");","lastModifiedDate":"2021-09-02"},{"lineNumber":97,"author":{"gitId":"Kangxun"},"content":"                        }","lastModifiedDate":"2021-08-19"},{"lineNumber":98,"author":{"gitId":"Kangxun"},"content":"                        storage.saveTasks(commandList.getTasks());","lastModifiedDate":"2021-09-02"},{"lineNumber":99,"author":{"gitId":"Kangxun"},"content":"                        ui.printTaskAdded(commandList, count);","lastModifiedDate":"2021-09-02"},{"lineNumber":100,"author":{"gitId":"Kangxun"},"content":"                        count++;","lastModifiedDate":"2021-08-19"},{"lineNumber":101,"author":{"gitId":"Kangxun"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":102,"author":{"gitId":"Kangxun"},"content":"                } else if (Parser.isDelete(cmd)) {","lastModifiedDate":"2021-08-27"},{"lineNumber":103,"author":{"gitId":"Kangxun"},"content":"                    int itemNo \u003d Parser.parseDeleteCmd(cmd);","lastModifiedDate":"2021-08-27"},{"lineNumber":104,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":105,"author":{"gitId":"Kangxun"},"content":"                    // Make sure itemNo is within limit","lastModifiedDate":"2021-08-19"},{"lineNumber":106,"author":{"gitId":"Kangxun"},"content":"                    if ((itemNo \u003c\u003d count) \u0026\u0026 (itemNo \u003e 0)) {","lastModifiedDate":"2021-08-19"},{"lineNumber":107,"author":{"gitId":"Kangxun"},"content":"                        // Remove item from lists","lastModifiedDate":"2021-08-19"},{"lineNumber":108,"author":{"gitId":"Kangxun"},"content":"                        ui.printTaskDeleted(commandList, itemNo - 1);","lastModifiedDate":"2021-09-02"},{"lineNumber":109,"author":{"gitId":"Kangxun"},"content":"                        commandList.remove(itemNo - 1);","lastModifiedDate":"2021-09-02"},{"lineNumber":110,"author":{"gitId":"Kangxun"},"content":"                        storage.saveTasks(commandList.getTasks());","lastModifiedDate":"2021-09-02"},{"lineNumber":111,"author":{"gitId":"Kangxun"},"content":"                        count--;","lastModifiedDate":"2021-08-19"},{"lineNumber":112,"author":{"gitId":"Kangxun"},"content":"                    } else {","lastModifiedDate":"2021-09-02"},{"lineNumber":113,"author":{"gitId":"Kangxun"},"content":"                        // throw exception when itemNo not within limit","lastModifiedDate":"2021-09-02"},{"lineNumber":114,"author":{"gitId":"Kangxun"},"content":"                        throw new DukeException(\"i cant seem to find the task you\u0027re looking for\");","lastModifiedDate":"2021-08-19"},{"lineNumber":115,"author":{"gitId":"Kangxun"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":116,"author":{"gitId":"Kangxun"},"content":"                } else if (Parser.isFind(cmd)) {","lastModifiedDate":"2021-08-28"},{"lineNumber":117,"author":{"gitId":"Kangxun"},"content":"                    String desc \u003d Parser.getDesc(cmd);","lastModifiedDate":"2021-08-28"},{"lineNumber":118,"author":{"gitId":"Kangxun"},"content":"                    if (Parser.isMissingArg(cmd)) {","lastModifiedDate":"2021-09-02"},{"lineNumber":119,"author":{"gitId":"Kangxun"},"content":"                        // when desc is not empty","lastModifiedDate":"2021-09-02"},{"lineNumber":120,"author":{"gitId":"Kangxun"},"content":"                        // case when only a whitespace follows a command","lastModifiedDate":"2021-08-28"},{"lineNumber":121,"author":{"gitId":"Kangxun"},"content":"                        throw new DukeException(\"the description of a find cannot be empty\");","lastModifiedDate":"2021-08-28"},{"lineNumber":122,"author":{"gitId":"Kangxun"},"content":"                    }","lastModifiedDate":"2021-08-28"},{"lineNumber":123,"author":{"gitId":"Kangxun"},"content":"                    ArrayList\u003cTask\u003e matchingTasks \u003d commandList.find(desc);","lastModifiedDate":"2021-09-02"},{"lineNumber":124,"author":{"gitId":"Kangxun"},"content":"                    if (matchingTasks.isEmpty()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":125,"author":{"gitId":"Kangxun"},"content":"                        ui.showNoMatch();","lastModifiedDate":"2021-08-28"},{"lineNumber":126,"author":{"gitId":"Kangxun"},"content":"                    } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":127,"author":{"gitId":"Kangxun"},"content":"                        ui.showMatchingTasks(matchingTasks);","lastModifiedDate":"2021-08-28"},{"lineNumber":128,"author":{"gitId":"Kangxun"},"content":"                    }","lastModifiedDate":"2021-08-28"},{"lineNumber":129,"author":{"gitId":"Kangxun"},"content":"                } else {","lastModifiedDate":"2021-09-02"},{"lineNumber":130,"author":{"gitId":"Kangxun"},"content":"                    // throw exception when command not found","lastModifiedDate":"2021-09-02"},{"lineNumber":131,"author":{"gitId":"Kangxun"},"content":"                    // Error handling for todo, deadline \u0026 event","lastModifiedDate":"2021-08-19"},{"lineNumber":132,"author":{"gitId":"Kangxun"},"content":"                    if (Parser.isEmptyTask(cmd)) {","lastModifiedDate":"2021-08-27"},{"lineNumber":133,"author":{"gitId":"Kangxun"},"content":"                        throw new DukeException(\"the description of a \" + Parser.getTaskName(cmd) + \" cannot be empty\");","lastModifiedDate":"2021-08-27"},{"lineNumber":134,"author":{"gitId":"Kangxun"},"content":"                    } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":135,"author":{"gitId":"Kangxun"},"content":"                        throw new DukeException(\"im sorry, but i dont know what that means :(\");","lastModifiedDate":"2021-08-19"},{"lineNumber":136,"author":{"gitId":"Kangxun"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":137,"author":{"gitId":"Kangxun"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":138,"author":{"gitId":"Kangxun"},"content":"                cmd \u003d sc.nextLine();","lastModifiedDate":"2021-08-19"},{"lineNumber":139,"author":{"gitId":"Kangxun"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":140,"author":{"gitId":"Kangxun"},"content":"                ui.showDukeError(e);","lastModifiedDate":"2021-08-27"},{"lineNumber":141,"author":{"gitId":"Kangxun"},"content":"                cmd \u003d sc.nextLine();","lastModifiedDate":"2021-08-19"},{"lineNumber":142,"author":{"gitId":"Kangxun"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":143,"author":{"gitId":"Kangxun"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":144,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":145,"author":{"gitId":"Kangxun"},"content":"        // when command given is \"bye\"","lastModifiedDate":"2021-08-19"},{"lineNumber":146,"author":{"gitId":"Kangxun"},"content":"        ui.sayGoodbye();","lastModifiedDate":"2021-08-27"},{"lineNumber":147,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":148,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":149,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":150,"author":{"gitId":"Kangxun"},"content":"     * Starts the Duke chatbot.","lastModifiedDate":"2021-08-28"},{"lineNumber":151,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":152,"author":{"gitId":"Kangxun"},"content":"     * @param args Arguments to be passed to main function.","lastModifiedDate":"2021-08-28"},{"lineNumber":153,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":154,"author":{"gitId":"Kangxun"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-27"},{"lineNumber":155,"author":{"gitId":"Kangxun"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2021-08-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":157,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":158,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":159,"author":{"gitId":"Kangxun"},"content":"     * Converts Duke to string format.","lastModifiedDate":"2021-08-28"},{"lineNumber":160,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":161,"author":{"gitId":"Kangxun"},"content":"     * @return Duke as a string.","lastModifiedDate":"2021-08-28"},{"lineNumber":162,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":163,"author":{"gitId":"Kangxun"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":164,"author":{"gitId":"Kangxun"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":165,"author":{"gitId":"Kangxun"},"content":"        return \"im a chatbot ☺ - calico\";","lastModifiedDate":"2021-08-28"},{"lineNumber":166,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Kangxun":164,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kangxun"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"Kangxun"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"Kangxun"},"content":" * Deals with exceptions thrown in the Duke chatbot.","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"Kangxun"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"Kangxun"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"Kangxun"},"content":"     * Creates a DukeException.","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"Kangxun"},"content":"     * @param message Description about the exception.","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"Kangxun"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"Kangxun"},"content":"        super(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"Kangxun"},"content":"     * Converts DukeException to string format.","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"Kangxun"},"content":"     * @return DukeException as a string.","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"Kangxun"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"Kangxun"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"Kangxun"},"content":"        return \" ☹ oops..\" + getMessage();","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"Kangxun"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Kangxun":25}},{"path":"src/main/java/duke/command/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kangxun"},"content":"package duke.command;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"Kangxun"},"content":"// import java packages","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"Kangxun"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Kangxun"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"Kangxun"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Kangxun"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Kangxun"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Kangxun"},"content":"import java.util.Date;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Kangxun"},"content":"// import duke packages","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"Kangxun"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"Kangxun"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"Kangxun"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"Kangxun"},"content":" * Represents a task that has to be completed by a due date.","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"Kangxun"},"content":" * A \u003ccode\u003eDeadline\u003c/code\u003e consists of a description and a due date.","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"Kangxun"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"Kangxun"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"Kangxun"},"content":"    protected String byOriginal;","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Kangxun"},"content":"    protected LocalDate by;","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"Kangxun"},"content":"    protected Date time;","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"Kangxun"},"content":"     * Creates a Deadline task.","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"Kangxun"},"content":"     * @param description Description about the task.","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"Kangxun"},"content":"     * @param by Due date of the task.","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"Kangxun"},"content":"     * @throws DukeException If time is not formatted properly.","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"Kangxun"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"Kangxun"},"content":"        super(description, \u0027D\u0027);","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"Kangxun"},"content":"        this.name \u003d \"deadline\";","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"Kangxun"},"content":"        byOriginal \u003d by;","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"Kangxun"},"content":"        String[] temp \u003d by.split(\" \", 2);","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"Kangxun"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"Kangxun"},"content":"            this.by \u003d LocalDate.parse(temp[0]);","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"Kangxun"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"Kangxun"},"content":"            throw new DukeException(\"time has to be in the format yyyy-mm-dd HHmm instead of \" + by);","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"Kangxun"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"Kangxun"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"Kangxun"},"content":"            SimpleDateFormat parseFormat \u003d new SimpleDateFormat(\"HHmm\");","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"Kangxun"},"content":"            this.time \u003d parseFormat.parse(temp[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"Kangxun"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"Kangxun"},"content":"            throw new DukeException(\"time has to be in the format yyyy-mm-dd HHmm instead of \" + by);","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"Kangxun"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"Kangxun"},"content":"     * Converts due date to string format.","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"Kangxun"},"content":"     * @return Due date as a string.","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"Kangxun"},"content":"    protected String dateToString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"Kangxun"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"Kangxun"},"content":"        return formatter.format(by);","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"Kangxun"},"content":"     * Converts due time to string format.","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"Kangxun"},"content":"     * @return Due timing as a string.","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"Kangxun"},"content":"    protected String timeToString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"Kangxun"},"content":"        SimpleDateFormat displayFormat \u003d new SimpleDateFormat(\"hh:mm a\");","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"Kangxun"},"content":"        return displayFormat.format(time);","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"Kangxun"},"content":"     * Gives due time in original format.","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"Kangxun"},"content":"     * @return Due timing in original form.","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"Kangxun"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"Kangxun"},"content":"    public String getDueTime() {","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"Kangxun"},"content":"        return byOriginal;","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"Kangxun"},"content":"     * Converts Deadline task to string format.","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"Kangxun"},"content":"     * @return Deadline as a string.","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"Kangxun"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":87,"author":{"gitId":"Kangxun"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"Kangxun"},"content":"        return \"[\" + this.getCat() + \"]\" + super.toString() + \" (by: \" + dateToString() + \" \" + timeToString() + \")\";","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"Kangxun"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Kangxun":90}},{"path":"src/main/java/duke/command/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kangxun"},"content":"package duke.command;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"Kangxun"},"content":"// import java packages","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"Kangxun"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Kangxun"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Kangxun"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Kangxun"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Kangxun"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Kangxun"},"content":"import java.util.Date;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Kangxun"},"content":"// import duke packages","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"Kangxun"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"Kangxun"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"Kangxun"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"Kangxun"},"content":" * Represents a task that is about to happen on an upcoming date.","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"Kangxun"},"content":" * A \u003ccode\u003eEvent\u003c/code\u003e consists of a description and a date.","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"Kangxun"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"Kangxun"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"Kangxun"},"content":"    protected String atOriginal;","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Kangxun"},"content":"    protected LocalDate at;","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"Kangxun"},"content":"    protected Date time;","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"Kangxun"},"content":"     * Creates an Event task.","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"Kangxun"},"content":"     * @param description Description about the task.","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"Kangxun"},"content":"     * @param at Date of the task.","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"Kangxun"},"content":"     * @throws DukeException If time is not formatted properly.","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"Kangxun"},"content":"    public Event(String description, String at) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"Kangxun"},"content":"        super(description, \u0027E\u0027);","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"Kangxun"},"content":"        this.name \u003d \"event\";","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"Kangxun"},"content":"        atOriginal \u003d at;","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"Kangxun"},"content":"        String[] temp \u003d at.split(\" \", 2);","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"Kangxun"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"Kangxun"},"content":"            this.at \u003d LocalDate.parse(temp[0]);","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"Kangxun"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"Kangxun"},"content":"            throw new DukeException(\"time has to be in the format yyyy-mm-dd HHmm instead of \" + at);","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"Kangxun"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"Kangxun"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"Kangxun"},"content":"            SimpleDateFormat parseFormat \u003d new SimpleDateFormat(\"HHmm\");","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"Kangxun"},"content":"            this.time \u003d parseFormat.parse(temp[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"Kangxun"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"Kangxun"},"content":"            throw new DukeException(\"time has to be in the format yyyy-mm-dd HHmm instead of \" + at);","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"Kangxun"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"Kangxun"},"content":"     * Converts due date to string format.","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"Kangxun"},"content":"     * @return Due date as a string.","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"Kangxun"},"content":"    protected String dateToString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"Kangxun"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"Kangxun"},"content":"        return formatter.format(at);","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"Kangxun"},"content":"     * Converts due time to string format.","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"Kangxun"},"content":"     * @return Due timing as a string.","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"Kangxun"},"content":"    protected String timeToString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"Kangxun"},"content":"        SimpleDateFormat displayFormat \u003d new SimpleDateFormat(\"hh:mm a\");","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"Kangxun"},"content":"        return displayFormat.format(time);","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"Kangxun"},"content":"     * Gives due time in original format.","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"Kangxun"},"content":"     * @return Due timing in original form.","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"Kangxun"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"Kangxun"},"content":"    public String getDueTime() {","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"Kangxun"},"content":"        return atOriginal;","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"Kangxun"},"content":"     * Converts Event task to string format.","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"Kangxun"},"content":"     * @return Event as a string.","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"Kangxun"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":87,"author":{"gitId":"Kangxun"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"Kangxun"},"content":"        return \"[\" + this.getCat() + \"]\" + super.toString() + \" (at: \" + dateToString() + \" \" + timeToString() + \")\";","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"Kangxun"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Kangxun":90}},{"path":"src/main/java/duke/command/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kangxun"},"content":"package duke.command;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"Kangxun"},"content":"// import duke packages","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"Kangxun"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"Kangxun"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"Kangxun"},"content":" * Represents a task that is pending completion.","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"Kangxun"},"content":" * A \u003ccode\u003eTodo\u003c/code\u003e consists of a description.","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Kangxun"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"Kangxun"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"Kangxun"},"content":"     * Creates a Todo task.","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"Kangxun"},"content":"     * @param description Description about the task.","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"Kangxun"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"Kangxun"},"content":"        super(description, \u0027T\u0027);","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Kangxun"},"content":"        this.name \u003d \"todo\";","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"Kangxun"},"content":"     * Converts Todo task to string format.","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"Kangxun"},"content":"     * @return Todo as a string.","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"Kangxun"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"Kangxun"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"Kangxun"},"content":"        return \"[\" + this.getCat() + \"]\" + super.toString();","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"Kangxun"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Kangxun":30}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kangxun"},"content":"package duke.task;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"Kangxun"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"Kangxun"},"content":" * Outlines a general task.","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"Kangxun"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"Kangxun"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Kangxun"},"content":"    protected String description;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"Kangxun"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"Kangxun"},"content":"    protected char category;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Kangxun"},"content":"    protected String name;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"Kangxun"},"content":"     * Initialises properties of a Task.","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"Kangxun"},"content":"     * @param description Description about the task.","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"Kangxun"},"content":"     * @param category Type of task.","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"Kangxun"},"content":"    public Task(String description, char category) {","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Kangxun"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"Kangxun"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"Kangxun"},"content":"        this.category \u003d category;","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"Kangxun"},"content":"        this.name \u003d \"\";","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"Kangxun"},"content":"     * Returns X if task is done and a whitespace if task is not yet done.","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"Kangxun"},"content":"     * @return Whether task is completed.","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"Kangxun"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"Kangxun"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"Kangxun"},"content":"     * Marks this task as done.","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"Kangxun"},"content":"    public void markDone() {","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"Kangxun"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"Kangxun"},"content":"     * Returns information about the task.","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"Kangxun"},"content":"     * @return Description of task.","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"Kangxun"},"content":"    public String getDesc() {","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"Kangxun"},"content":"        return this.description;","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"Kangxun"},"content":"     * Retrieves type of the task.","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"Kangxun"},"content":"     * @return Category of task.","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"Kangxun"},"content":"    public char getCat() {","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"Kangxun"},"content":"        return this.category;","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"Kangxun"},"content":"     * Retrieves end timing of task.","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"Kangxun"},"content":"     * @return Due time of task.","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"Kangxun"},"content":"    public String getDueTime() {","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"Kangxun"},"content":"        return \"\";","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"Kangxun"},"content":"     * Returns task name.","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"Kangxun"},"content":"     * @return Name of task.","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"Kangxun"},"content":"    public String getName() {","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"Kangxun"},"content":"        return this.name;","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"Kangxun"},"content":"     * Converts Task to string format.","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"Kangxun"},"content":"     * @return Task as a string.","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"Kangxun"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"Kangxun"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":85,"author":{"gitId":"Kangxun"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-19"},{"lineNumber":86,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":87,"author":{"gitId":"Kangxun"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Kangxun":87}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kangxun"},"content":"package duke.task;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"Kangxun"},"content":"// import java packages","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"Kangxun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Kangxun"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"Kangxun"},"content":" * Represents a list of tasks to be completed. Supports operations on the tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"Kangxun"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Kangxun"},"content":"public class TaskList {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Kangxun"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"Kangxun"},"content":"     * Creates a TaskList for Duke chatbot using a given list of tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"Kangxun"},"content":"     * @param tasks Filepath to save tasks and load tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"Kangxun"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"Kangxun"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"Kangxun"},"content":"     * Creates an empty TaskList for Duke chatbot.","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"Kangxun"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"Kangxun"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"Kangxun"},"content":"     * Retrieves a task.","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"Kangxun"},"content":"     * @param i Index of task to be retrieved.","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"Kangxun"},"content":"     * @return Task.","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"Kangxun"},"content":"    public Task get(int i) {","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"Kangxun"},"content":"        return tasks.get(i);","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"Kangxun"},"content":"     * Retrieves length of the list of tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"Kangxun"},"content":"     * @return Length of task list.","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"Kangxun"},"content":"    public int getLength() {","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"Kangxun"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"Kangxun"},"content":"     * Retrieves the list of tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"Kangxun"},"content":"     * @return Tasks in an ArrayList.","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"Kangxun"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"Kangxun"},"content":"        return this.tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"Kangxun"},"content":"     * Marks a task as done.","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"Kangxun"},"content":"     * @param i Index of task to be marked.","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"Kangxun"},"content":"    public void markDone(int i) {","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"Kangxun"},"content":"        tasks.get(i).markDone();","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"Kangxun"},"content":"     * Adds a task to the list of tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"Kangxun"},"content":"     * @param t Task to be added.","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"Kangxun"},"content":"    public void add(Task t) {","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"Kangxun"},"content":"        tasks.add(t);","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"Kangxun"},"content":"     * Removes a task from the list of tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"Kangxun"},"content":"     * @param i Index of task to be removed.","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"Kangxun"},"content":"    public void remove(int i) {","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"Kangxun"},"content":"        tasks.remove(i);","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"Kangxun"},"content":"     * Searches for tasks that matches the category.","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":87,"author":{"gitId":"Kangxun"},"content":"     * @param cat Category to search for.","lastModifiedDate":"2021-08-28"},{"lineNumber":88,"author":{"gitId":"Kangxun"},"content":"     * @return ArrayList of matching tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":90,"author":{"gitId":"Kangxun"},"content":"    public ArrayList\u003cTask\u003e findCat(char cat) {","lastModifiedDate":"2021-08-28"},{"lineNumber":91,"author":{"gitId":"Kangxun"},"content":"        ArrayList\u003cTask\u003e results \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-28"},{"lineNumber":92,"author":{"gitId":"Kangxun"},"content":"        for (Task i: tasks) {","lastModifiedDate":"2021-08-28"},{"lineNumber":93,"author":{"gitId":"Kangxun"},"content":"            if (i.getCat() \u003d\u003d cat) {","lastModifiedDate":"2021-08-28"},{"lineNumber":94,"author":{"gitId":"Kangxun"},"content":"                results.add(i);","lastModifiedDate":"2021-08-28"},{"lineNumber":95,"author":{"gitId":"Kangxun"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":96,"author":{"gitId":"Kangxun"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":97,"author":{"gitId":"Kangxun"},"content":"        return results;","lastModifiedDate":"2021-08-28"},{"lineNumber":98,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":99,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":100,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":101,"author":{"gitId":"Kangxun"},"content":"     * Searches for tasks that matches the search query.","lastModifiedDate":"2021-08-28"},{"lineNumber":102,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":103,"author":{"gitId":"Kangxun"},"content":"     * @param query Keyword to search for.","lastModifiedDate":"2021-08-28"},{"lineNumber":104,"author":{"gitId":"Kangxun"},"content":"     * @return ArrayList of matching tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":105,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":106,"author":{"gitId":"Kangxun"},"content":"    public ArrayList\u003cTask\u003e find(String query) {","lastModifiedDate":"2021-08-28"},{"lineNumber":107,"author":{"gitId":"Kangxun"},"content":"        if (query.equals(\"todo\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":108,"author":{"gitId":"Kangxun"},"content":"            return findCat(\u0027T\u0027);","lastModifiedDate":"2021-08-28"},{"lineNumber":109,"author":{"gitId":"Kangxun"},"content":"        } else if (query.equals(\"deadline\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":110,"author":{"gitId":"Kangxun"},"content":"            return findCat(\u0027D\u0027);","lastModifiedDate":"2021-08-28"},{"lineNumber":111,"author":{"gitId":"Kangxun"},"content":"        } else if (query.equals(\"event\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":112,"author":{"gitId":"Kangxun"},"content":"            return findCat(\u0027E\u0027);","lastModifiedDate":"2021-08-28"},{"lineNumber":113,"author":{"gitId":"Kangxun"},"content":"        } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":114,"author":{"gitId":"Kangxun"},"content":"            ArrayList\u003cTask\u003e results \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-28"},{"lineNumber":115,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":116,"author":{"gitId":"Kangxun"},"content":"            for (Task i : tasks) {","lastModifiedDate":"2021-08-28"},{"lineNumber":117,"author":{"gitId":"Kangxun"},"content":"                String s \u003d i.getName() + \" \" + i.getDesc();","lastModifiedDate":"2021-08-28"},{"lineNumber":118,"author":{"gitId":"Kangxun"},"content":"                if (s.matches(\"^.*\" + query + \".*\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":119,"author":{"gitId":"Kangxun"},"content":"                    results.add(i);","lastModifiedDate":"2021-08-28"},{"lineNumber":120,"author":{"gitId":"Kangxun"},"content":"                }","lastModifiedDate":"2021-08-28"},{"lineNumber":121,"author":{"gitId":"Kangxun"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":122,"author":{"gitId":"Kangxun"},"content":"            return results;","lastModifiedDate":"2021-08-28"},{"lineNumber":123,"author":{"gitId":"Kangxun"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":124,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":125,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":126,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":127,"author":{"gitId":"Kangxun"},"content":"     * Converts TaskList to string format.","lastModifiedDate":"2021-08-28"},{"lineNumber":128,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":129,"author":{"gitId":"Kangxun"},"content":"     * @return TaskList as a string.","lastModifiedDate":"2021-08-28"},{"lineNumber":130,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":131,"author":{"gitId":"Kangxun"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":132,"author":{"gitId":"Kangxun"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":133,"author":{"gitId":"Kangxun"},"content":"        return \"contains tasks\";","lastModifiedDate":"2021-08-28"},{"lineNumber":134,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":135,"author":{"gitId":"Kangxun"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"Kangxun":135}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kangxun"},"content":"package duke.util;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"Kangxun"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"Kangxun"},"content":" * Parses the commands given by a user.","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"Kangxun"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"Kangxun"},"content":"public class Parser {","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"Kangxun"},"content":"     * Parses a done command.","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"Kangxun"},"content":"     * @param cmd Command to be processed.","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"Kangxun"},"content":"     * @return Index of task to be marked done.","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"Kangxun"},"content":"    public static int parseDoneCmd(String cmd) {","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"Kangxun"},"content":"        String[] a \u003d cmd.split(\" \");","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"Kangxun"},"content":"        return Integer.parseInt(a[1]);","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"Kangxun"},"content":"     * Checks if command is bye.","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"Kangxun"},"content":"     * @param cmd Command to be processed.","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"Kangxun"},"content":"     * @return Whether is bye command.","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"Kangxun"},"content":"    public static boolean isNotBye(String cmd) {","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"Kangxun"},"content":"        return !cmd.equals(\"bye\");","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"Kangxun"},"content":"     * Checks if command is list.","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"Kangxun"},"content":"     * @param cmd Command to be processed.","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"Kangxun"},"content":"     * @return Whether is list command.","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"Kangxun"},"content":"    public static boolean isList(String cmd) {","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"Kangxun"},"content":"        return cmd.equals(\"list\");","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"Kangxun"},"content":"     * Checks if command is done.","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"Kangxun"},"content":"     * @param cmd Command to be processed.","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"Kangxun"},"content":"     * @return Whether is done command.","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"Kangxun"},"content":"    public static boolean isDone(String cmd) {","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"Kangxun"},"content":"        return cmd.matches(\"^done [0-9]+$\");","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"Kangxun"},"content":"     * Checks if command is a valid task.","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"Kangxun"},"content":"     * @param cmd Command to be processed.","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"Kangxun"},"content":"     * @return Whether task is valid.","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"Kangxun"},"content":"    public static boolean isValidTask(String cmd) {","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"Kangxun"},"content":"        return cmd.matches(\"^todo .*$\")","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"Kangxun"},"content":"                || cmd.matches(\"^deadline .* /by .*$\")","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"Kangxun"},"content":"                || cmd.matches(\"^event .* /at .*$\");","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"Kangxun"},"content":"     * Checks if command is missing description.","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"Kangxun"},"content":"     * @param cmd Command to be processed.","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"Kangxun"},"content":"     * @return Whether command is missing argument.","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"Kangxun"},"content":"    public static boolean isMissingArg(String cmd) {","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"Kangxun"},"content":"        String[] a \u003d cmd.split(\" \", 2);","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"Kangxun"},"content":"        return a[1].matches(\" *\");","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"Kangxun"},"content":"     * Gets the task name in a command.","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"Kangxun"},"content":"     * @param cmd Command to be processed.","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"Kangxun"},"content":"     * @return Name of task.","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"Kangxun"},"content":"    public static String getTaskName(String cmd) {","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"Kangxun"},"content":"        String[] a \u003d cmd.split(\" \", 2);","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"Kangxun"},"content":"        return a[0];","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"Kangxun"},"content":"     * Gets the task description in a command.","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"Kangxun"},"content":"     * @param cmd Command to be processed.","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"Kangxun"},"content":"     * @return Description of task.","lastModifiedDate":"2021-08-28"},{"lineNumber":87,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":88,"author":{"gitId":"Kangxun"},"content":"    public static String getDesc(String cmd) {","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"Kangxun"},"content":"        String[] a \u003d cmd.split(\" \", 2);","lastModifiedDate":"2021-08-27"},{"lineNumber":90,"author":{"gitId":"Kangxun"},"content":"        return a[1];","lastModifiedDate":"2021-08-27"},{"lineNumber":91,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":92,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":93,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":94,"author":{"gitId":"Kangxun"},"content":"     * Gets the deadline information in a deadline description.","lastModifiedDate":"2021-08-28"},{"lineNumber":95,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":96,"author":{"gitId":"Kangxun"},"content":"     * @param desc Command description to be processed.","lastModifiedDate":"2021-08-28"},{"lineNumber":97,"author":{"gitId":"Kangxun"},"content":"     * @return Deadline information.","lastModifiedDate":"2021-08-28"},{"lineNumber":98,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":99,"author":{"gitId":"Kangxun"},"content":"    public static String getDeadlineInfo(String desc) {","lastModifiedDate":"2021-09-02"},{"lineNumber":100,"author":{"gitId":"Kangxun"},"content":"        String[] a \u003d desc.split(\" /by \", 2);","lastModifiedDate":"2021-08-27"},{"lineNumber":101,"author":{"gitId":"Kangxun"},"content":"        return a[0];","lastModifiedDate":"2021-08-27"},{"lineNumber":102,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":103,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":104,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":105,"author":{"gitId":"Kangxun"},"content":"     * Gets the deadline due date in a deadline description.","lastModifiedDate":"2021-08-28"},{"lineNumber":106,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":107,"author":{"gitId":"Kangxun"},"content":"     * @param desc Command description to be processed.","lastModifiedDate":"2021-08-28"},{"lineNumber":108,"author":{"gitId":"Kangxun"},"content":"     * @return Deadline due date.","lastModifiedDate":"2021-08-28"},{"lineNumber":109,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":110,"author":{"gitId":"Kangxun"},"content":"    public static String getDeadlineDue(String desc) {","lastModifiedDate":"2021-09-02"},{"lineNumber":111,"author":{"gitId":"Kangxun"},"content":"        String[] a \u003d desc.split(\" /by \", 2);","lastModifiedDate":"2021-08-27"},{"lineNumber":112,"author":{"gitId":"Kangxun"},"content":"        return a[1];","lastModifiedDate":"2021-08-27"},{"lineNumber":113,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":114,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":115,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":116,"author":{"gitId":"Kangxun"},"content":"     * Gets the event information in a event description.","lastModifiedDate":"2021-08-28"},{"lineNumber":117,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":118,"author":{"gitId":"Kangxun"},"content":"     * @param desc Command description to be processed.","lastModifiedDate":"2021-08-28"},{"lineNumber":119,"author":{"gitId":"Kangxun"},"content":"     * @return Event information.","lastModifiedDate":"2021-08-28"},{"lineNumber":120,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":121,"author":{"gitId":"Kangxun"},"content":"    public static String getEventInfo(String desc) {","lastModifiedDate":"2021-09-02"},{"lineNumber":122,"author":{"gitId":"Kangxun"},"content":"        String[] a \u003d desc.split(\" /at \", 2);","lastModifiedDate":"2021-08-27"},{"lineNumber":123,"author":{"gitId":"Kangxun"},"content":"        return a[0];","lastModifiedDate":"2021-08-27"},{"lineNumber":124,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":125,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":126,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":127,"author":{"gitId":"Kangxun"},"content":"     * Gets the event due date in a event description.","lastModifiedDate":"2021-08-28"},{"lineNumber":128,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":129,"author":{"gitId":"Kangxun"},"content":"     * @param desc Command description to be processed.","lastModifiedDate":"2021-08-28"},{"lineNumber":130,"author":{"gitId":"Kangxun"},"content":"     * @return Event due date.","lastModifiedDate":"2021-08-28"},{"lineNumber":131,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":132,"author":{"gitId":"Kangxun"},"content":"    public static String getEventDue(String desc) {","lastModifiedDate":"2021-09-02"},{"lineNumber":133,"author":{"gitId":"Kangxun"},"content":"        String[] a \u003d desc.split(\" /at \", 2);","lastModifiedDate":"2021-08-27"},{"lineNumber":134,"author":{"gitId":"Kangxun"},"content":"        return a[1];","lastModifiedDate":"2021-08-27"},{"lineNumber":135,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":136,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":137,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":138,"author":{"gitId":"Kangxun"},"content":"     * Checks if command is delete.","lastModifiedDate":"2021-08-28"},{"lineNumber":139,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":140,"author":{"gitId":"Kangxun"},"content":"     * @param cmd Command to be processed.","lastModifiedDate":"2021-08-28"},{"lineNumber":141,"author":{"gitId":"Kangxun"},"content":"     * @return Whether task is a delete command.","lastModifiedDate":"2021-08-28"},{"lineNumber":142,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":143,"author":{"gitId":"Kangxun"},"content":"    public static boolean isDelete(String cmd) {","lastModifiedDate":"2021-08-27"},{"lineNumber":144,"author":{"gitId":"Kangxun"},"content":"        return cmd.matches(\"^delete [0-9]+$\");","lastModifiedDate":"2021-08-27"},{"lineNumber":145,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":146,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":147,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":148,"author":{"gitId":"Kangxun"},"content":"     * Parses a delete command.","lastModifiedDate":"2021-08-28"},{"lineNumber":149,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":150,"author":{"gitId":"Kangxun"},"content":"     * @param cmd Command to be processed.","lastModifiedDate":"2021-08-28"},{"lineNumber":151,"author":{"gitId":"Kangxun"},"content":"     * @return Task index to be deleted.","lastModifiedDate":"2021-08-28"},{"lineNumber":152,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":153,"author":{"gitId":"Kangxun"},"content":"    public static int parseDeleteCmd(String cmd) {","lastModifiedDate":"2021-08-27"},{"lineNumber":154,"author":{"gitId":"Kangxun"},"content":"        String[] a \u003d cmd.split(\" \");","lastModifiedDate":"2021-08-27"},{"lineNumber":155,"author":{"gitId":"Kangxun"},"content":"        return Integer.parseInt(a[1]);","lastModifiedDate":"2021-08-27"},{"lineNumber":156,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":157,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":158,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":159,"author":{"gitId":"Kangxun"},"content":"     * Checks if command is empty.","lastModifiedDate":"2021-08-28"},{"lineNumber":160,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":161,"author":{"gitId":"Kangxun"},"content":"     * @param cmd Command to be processed.","lastModifiedDate":"2021-08-28"},{"lineNumber":162,"author":{"gitId":"Kangxun"},"content":"     * @return Whether task command is empty.","lastModifiedDate":"2021-08-28"},{"lineNumber":163,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":164,"author":{"gitId":"Kangxun"},"content":"    public static boolean isEmptyTask(String cmd) {","lastModifiedDate":"2021-08-27"},{"lineNumber":165,"author":{"gitId":"Kangxun"},"content":"        return cmd.equals(\"todo\")","lastModifiedDate":"2021-08-27"},{"lineNumber":166,"author":{"gitId":"Kangxun"},"content":"                || cmd.matches(\"deadline *\")","lastModifiedDate":"2021-08-27"},{"lineNumber":167,"author":{"gitId":"Kangxun"},"content":"                || cmd.matches(\"event *\")","lastModifiedDate":"2021-08-28"},{"lineNumber":168,"author":{"gitId":"Kangxun"},"content":"                || cmd.matches(\"find *\");","lastModifiedDate":"2021-08-28"},{"lineNumber":169,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":170,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":171,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":172,"author":{"gitId":"Kangxun"},"content":"     * Checks if command is find.","lastModifiedDate":"2021-08-28"},{"lineNumber":173,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":174,"author":{"gitId":"Kangxun"},"content":"     * @param cmd Command to check.","lastModifiedDate":"2021-08-28"},{"lineNumber":175,"author":{"gitId":"Kangxun"},"content":"     * @return Whether command is find.","lastModifiedDate":"2021-08-28"},{"lineNumber":176,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":177,"author":{"gitId":"Kangxun"},"content":"    public static boolean isFind(String cmd) {","lastModifiedDate":"2021-08-28"},{"lineNumber":178,"author":{"gitId":"Kangxun"},"content":"        return cmd.matches(\"^find .*$\");","lastModifiedDate":"2021-08-28"},{"lineNumber":179,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":180,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":181,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":182,"author":{"gitId":"Kangxun"},"content":"     * Converts Parser to string format.","lastModifiedDate":"2021-08-28"},{"lineNumber":183,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":184,"author":{"gitId":"Kangxun"},"content":"     * @return Parser as a string.","lastModifiedDate":"2021-08-28"},{"lineNumber":185,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":186,"author":{"gitId":"Kangxun"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":187,"author":{"gitId":"Kangxun"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":188,"author":{"gitId":"Kangxun"},"content":"        return \"parses commands\";","lastModifiedDate":"2021-08-28"},{"lineNumber":189,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":190,"author":{"gitId":"Kangxun"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"Kangxun":190}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kangxun"},"content":"package duke.util;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"Kangxun"},"content":"// import java packages","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"Kangxun"},"content":"import java.io.File;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"Kangxun"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Kangxun"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"Kangxun"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Kangxun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Kangxun"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Kangxun"},"content":"// import duke packages","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"Kangxun"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"Kangxun"},"content":"import duke.command.Deadline;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"Kangxun"},"content":"import duke.command.Event;","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"Kangxun"},"content":"import duke.command.Todo;","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"Kangxun"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"Kangxun"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"Kangxun"},"content":" * Stores the tasks in an external file.","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"Kangxun"},"content":" * Allows for saving and loading tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"Kangxun"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"Kangxun"},"content":"public class Storage {","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"Kangxun"},"content":"    protected static File f;","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"Kangxun"},"content":"    protected String filePath \u003d \"data/duke.txt\";","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"Kangxun"},"content":"     * Creates a Storage for Duke chatbot.","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"Kangxun"},"content":"     * @param filePath Filepath to save tasks and load tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"Kangxun"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"Kangxun"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"Kangxun"},"content":"        f \u003d new File(this.filePath);","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"Kangxun"},"content":"        f.mkdirs(); // handle the folder-does-not-exist-yet case","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"Kangxun"},"content":"     * Save tasks to storage.","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"Kangxun"},"content":"     * @param tasks Tasks to be saved.","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"Kangxun"},"content":"     * @throws DukeException If unable to write to file.","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"Kangxun"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"Kangxun"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"Kangxun"},"content":"            // create a blank new file to write to","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"Kangxun"},"content":"            if (f.exists()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"Kangxun"},"content":"                f.delete();","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"Kangxun"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"Kangxun"},"content":"            f.createNewFile();","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"Kangxun"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"Kangxun"},"content":"            // write to file","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"Kangxun"},"content":"            for (Task t : tasks) {","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"Kangxun"},"content":"                fw.write(t.getCat() + \",\" + t.getStatusIcon() + \",\" + t.getDesc() + \",\" + t.getDueTime());","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"Kangxun"},"content":"                fw.write(System.getProperty(\"line.separator\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"Kangxun"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"Kangxun"},"content":"            fw.close();","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"Kangxun"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"Kangxun"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"Kangxun"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"Kangxun"},"content":"     * Load tasks from storage.","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"Kangxun"},"content":"     * @return ArrayList of tasks saved in file.","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"Kangxun"},"content":"     * @throws DukeException If unable to create a file for saving.","lastModifiedDate":"2021-09-02"},{"lineNumber":68,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"Kangxun"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"Kangxun"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"Kangxun"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"Kangxun"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"Kangxun"},"content":"            // scan from file","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"Kangxun"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"Kangxun"},"content":"                Task t;","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"Kangxun"},"content":"                String c \u003d s.nextLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"Kangxun"},"content":"                String[] temp \u003d c.split(\",\");","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"Kangxun"},"content":"                // Check type of Task","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"Kangxun"},"content":"                switch (temp[0]) {","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"Kangxun"},"content":"                case \"T\":","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"Kangxun"},"content":"                    t \u003d new Todo(temp[2]);","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"Kangxun"},"content":"                    break;","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"Kangxun"},"content":"                case \"D\":","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"Kangxun"},"content":"                    t \u003d new Deadline(temp[2], temp[3]);","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"Kangxun"},"content":"                    break;","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"Kangxun"},"content":"                case \"E\":","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"Kangxun"},"content":"                    t \u003d new Event(temp[2], temp[3]);","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"Kangxun"},"content":"                    break;","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"Kangxun"},"content":"                default:","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"Kangxun"},"content":"                    throw new DukeException(\"Invalid task type when loading: \" + temp[0]);","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"Kangxun"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"Kangxun"},"content":"                // Check if task is completed","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"Kangxun"},"content":"                if (temp[1].equals(\"X\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"Kangxun"},"content":"                    t.markDone();","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"Kangxun"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"Kangxun"},"content":"                tasks.add(t);","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"Kangxun"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"Kangxun"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"Kangxun"},"content":"            try {","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"Kangxun"},"content":"                // create new file if not found","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"Kangxun"},"content":"                f.createNewFile();","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"Kangxun"},"content":"            } catch (IOException g) {","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"Kangxun"},"content":"                // throws error if file cannot be created","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"Kangxun"},"content":"                throw new DukeException(g.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"Kangxun"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"Kangxun"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"Kangxun"},"content":"        return tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":115,"author":{"gitId":"Kangxun"},"content":"     * Converts Storage to string format.","lastModifiedDate":"2021-08-28"},{"lineNumber":116,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":117,"author":{"gitId":"Kangxun"},"content":"     * @return Storage as a string.","lastModifiedDate":"2021-08-28"},{"lineNumber":118,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":119,"author":{"gitId":"Kangxun"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"Kangxun"},"content":"    public String toString() {","lastModifiedDate":"2021-08-26"},{"lineNumber":121,"author":{"gitId":"Kangxun"},"content":"        return \"file path is \" + filePath;","lastModifiedDate":"2021-08-27"},{"lineNumber":122,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"Kangxun"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"Kangxun":123}},{"path":"src/main/java/duke/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kangxun"},"content":"package duke.util;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"Kangxun"},"content":"// import java packages","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"Kangxun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"Kangxun"},"content":"// import duke packages","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"Kangxun"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"Kangxun"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Kangxun"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"Kangxun"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"Kangxun"},"content":" * Deals with interactions with the user","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"Kangxun"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"Kangxun"},"content":"public class Ui {","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"Kangxun"},"content":"    private String logo;","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"Kangxun"},"content":"    private String line;","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"Kangxun"},"content":"     * Creates an Ui.","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"Kangxun"},"content":"     * @param logo Logo of the chatbot.","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"Kangxun"},"content":"     * @param line Line shown in output.","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"Kangxun"},"content":"    public Ui(String logo, String line) {","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"Kangxun"},"content":"        this.logo \u003d logo;","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"Kangxun"},"content":"        this.line \u003d line;","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"Kangxun"},"content":"     * Creates an Ui with a default logo and line.","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"Kangxun"},"content":"    public Ui() {","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"Kangxun"},"content":"        this.logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"Kangxun"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"Kangxun"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"Kangxun"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"Kangxun"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"Kangxun"},"content":"        this.line \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"Kangxun"},"content":"     * Displays an error in loading file.","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"Kangxun"},"content":"    public void showLoadingError() {","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"Kangxun"},"content":"        System.out.println(line);","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"Kangxun"},"content":"        System.out.println(\"oh no.. i seem to have trouble loading the file\");","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"Kangxun"},"content":"        System.out.println(line);","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"Kangxun"},"content":"     * Displays a list of tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"Kangxun"},"content":"     * @param cmdList Task list to be displayed.","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"Kangxun"},"content":"    public void printList(TaskList cmdList) {","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"Kangxun"},"content":"        System.out.println(line);","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"Kangxun"},"content":"        for (int i \u003d 0; i \u003c cmdList.getLength(); i++) {","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"Kangxun"},"content":"            System.out.println((i + 1) + \".\" + cmdList.get(i));","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"Kangxun"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"Kangxun"},"content":"        System.out.println(line);","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"Kangxun"},"content":"     * Displays successful completion of task.","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"Kangxun"},"content":"     * @param cmdList List containing tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"Kangxun"},"content":"     * @param i Index of task that is completed.","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"Kangxun"},"content":"    public void printTaskDone(TaskList cmdList, int i) {","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"Kangxun"},"content":"        System.out.println(line);","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"Kangxun"},"content":"        System.out.println(\"congrats on completing this task! :\");","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"Kangxun"},"content":"        System.out.println(\"  \" + cmdList.get(i));","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"Kangxun"},"content":"        System.out.println(line);","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"Kangxun"},"content":"     * Displays successful addition of task.","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"Kangxun"},"content":"     * @param cmdList List containing tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"Kangxun"},"content":"     * @param i Index of task that is added.","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"Kangxun"},"content":"    public void printTaskAdded(TaskList cmdList, int i) {","lastModifiedDate":"2021-08-27"},{"lineNumber":83,"author":{"gitId":"Kangxun"},"content":"        System.out.println(line);","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"Kangxun"},"content":"        System.out.println(\"noted! ive added this task:\");","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"Kangxun"},"content":"        System.out.println(\"  \" + cmdList.get(i));","lastModifiedDate":"2021-08-27"},{"lineNumber":86,"author":{"gitId":"Kangxun"},"content":"        System.out.println(\"now you have \" + cmdList.getLength() + \" tasks in your list\");","lastModifiedDate":"2021-08-27"},{"lineNumber":87,"author":{"gitId":"Kangxun"},"content":"        System.out.println(line);","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":90,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":91,"author":{"gitId":"Kangxun"},"content":"     * Displays successful removal of task.","lastModifiedDate":"2021-08-28"},{"lineNumber":92,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":93,"author":{"gitId":"Kangxun"},"content":"     * @param cmdList List containing tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":94,"author":{"gitId":"Kangxun"},"content":"     * @param i Index of task that is removed.","lastModifiedDate":"2021-08-28"},{"lineNumber":95,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":96,"author":{"gitId":"Kangxun"},"content":"    public void printTaskDeleted(TaskList cmdList, int i) {","lastModifiedDate":"2021-08-27"},{"lineNumber":97,"author":{"gitId":"Kangxun"},"content":"        System.out.println(line);","lastModifiedDate":"2021-08-27"},{"lineNumber":98,"author":{"gitId":"Kangxun"},"content":"        System.out.println(\"ok, ive deleted this task :\");","lastModifiedDate":"2021-08-27"},{"lineNumber":99,"author":{"gitId":"Kangxun"},"content":"        System.out.println(\"  \" + cmdList.get(i));","lastModifiedDate":"2021-08-27"},{"lineNumber":100,"author":{"gitId":"Kangxun"},"content":"        System.out.println(\"now you have \" + (cmdList.getLength() - 1) + \" tasks in your list\");","lastModifiedDate":"2021-08-27"},{"lineNumber":101,"author":{"gitId":"Kangxun"},"content":"        System.out.println(line);","lastModifiedDate":"2021-08-27"},{"lineNumber":102,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":103,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":104,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":105,"author":{"gitId":"Kangxun"},"content":"     * Displays welcome message.","lastModifiedDate":"2021-08-28"},{"lineNumber":106,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":107,"author":{"gitId":"Kangxun"},"content":"    public void sayHello() {","lastModifiedDate":"2021-08-27"},{"lineNumber":108,"author":{"gitId":"Kangxun"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-08-27"},{"lineNumber":109,"author":{"gitId":"Kangxun"},"content":"        System.out.println(line);","lastModifiedDate":"2021-08-27"},{"lineNumber":110,"author":{"gitId":"Kangxun"},"content":"        System.out.println(\"hello! i\u0027m calico ☺\");","lastModifiedDate":"2021-08-27"},{"lineNumber":111,"author":{"gitId":"Kangxun"},"content":"        System.out.println(\"how can i assist you?\");","lastModifiedDate":"2021-08-27"},{"lineNumber":112,"author":{"gitId":"Kangxun"},"content":"        System.out.println(line);","lastModifiedDate":"2021-08-27"},{"lineNumber":113,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":114,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":115,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":116,"author":{"gitId":"Kangxun"},"content":"     * Displays DukeException message.","lastModifiedDate":"2021-08-28"},{"lineNumber":117,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":118,"author":{"gitId":"Kangxun"},"content":"     * @param e DukeException to be displayed.","lastModifiedDate":"2021-08-28"},{"lineNumber":119,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":120,"author":{"gitId":"Kangxun"},"content":"    public void showDukeError(DukeException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":121,"author":{"gitId":"Kangxun"},"content":"        System.out.println(line);","lastModifiedDate":"2021-08-27"},{"lineNumber":122,"author":{"gitId":"Kangxun"},"content":"        System.out.println(e);","lastModifiedDate":"2021-08-27"},{"lineNumber":123,"author":{"gitId":"Kangxun"},"content":"        System.out.println(line);","lastModifiedDate":"2021-08-27"},{"lineNumber":124,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":125,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":126,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":127,"author":{"gitId":"Kangxun"},"content":"     * Displays goodbye message.","lastModifiedDate":"2021-08-28"},{"lineNumber":128,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":129,"author":{"gitId":"Kangxun"},"content":"    public void sayGoodbye() {","lastModifiedDate":"2021-08-27"},{"lineNumber":130,"author":{"gitId":"Kangxun"},"content":"        System.out.println(line);","lastModifiedDate":"2021-08-27"},{"lineNumber":131,"author":{"gitId":"Kangxun"},"content":"        System.out.println(\"bye friend!\");","lastModifiedDate":"2021-08-27"},{"lineNumber":132,"author":{"gitId":"Kangxun"},"content":"        System.out.println(line);","lastModifiedDate":"2021-08-27"},{"lineNumber":133,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":134,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":135,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":136,"author":{"gitId":"Kangxun"},"content":"     * Displays successful query of matching tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":137,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":138,"author":{"gitId":"Kangxun"},"content":"     * @param results Successful matches.","lastModifiedDate":"2021-08-28"},{"lineNumber":139,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":140,"author":{"gitId":"Kangxun"},"content":"    public void showMatchingTasks(ArrayList\u003cTask\u003e results) {","lastModifiedDate":"2021-08-28"},{"lineNumber":141,"author":{"gitId":"Kangxun"},"content":"        System.out.println(line);","lastModifiedDate":"2021-08-28"},{"lineNumber":142,"author":{"gitId":"Kangxun"},"content":"        System.out.println(\"ive found some matches for your search query:\");","lastModifiedDate":"2021-08-28"},{"lineNumber":143,"author":{"gitId":"Kangxun"},"content":"        for (int i \u003d 0; i \u003c results.size(); i++) {","lastModifiedDate":"2021-08-28"},{"lineNumber":144,"author":{"gitId":"Kangxun"},"content":"            System.out.println((i + 1) + \".\" + results.get(i));","lastModifiedDate":"2021-08-28"},{"lineNumber":145,"author":{"gitId":"Kangxun"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":146,"author":{"gitId":"Kangxun"},"content":"        System.out.println(line);","lastModifiedDate":"2021-08-28"},{"lineNumber":147,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":148,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":149,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":150,"author":{"gitId":"Kangxun"},"content":"     * Displays no matches found","lastModifiedDate":"2021-08-28"},{"lineNumber":151,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":152,"author":{"gitId":"Kangxun"},"content":"    public void showNoMatch() {","lastModifiedDate":"2021-08-28"},{"lineNumber":153,"author":{"gitId":"Kangxun"},"content":"        System.out.println(line);","lastModifiedDate":"2021-08-28"},{"lineNumber":154,"author":{"gitId":"Kangxun"},"content":"        System.out.println(\"im sorry i couldn\u0027t find any matches :(\");","lastModifiedDate":"2021-08-28"},{"lineNumber":155,"author":{"gitId":"Kangxun"},"content":"        System.out.println(line);","lastModifiedDate":"2021-08-28"},{"lineNumber":156,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":157,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":158,"author":{"gitId":"Kangxun"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":159,"author":{"gitId":"Kangxun"},"content":"     * Converts Ui to string format.","lastModifiedDate":"2021-08-28"},{"lineNumber":160,"author":{"gitId":"Kangxun"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":161,"author":{"gitId":"Kangxun"},"content":"     * @return Ui as a string.","lastModifiedDate":"2021-08-28"},{"lineNumber":162,"author":{"gitId":"Kangxun"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":163,"author":{"gitId":"Kangxun"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":164,"author":{"gitId":"Kangxun"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":165,"author":{"gitId":"Kangxun"},"content":"        return \"handles user interface\";","lastModifiedDate":"2021-08-28"},{"lineNumber":166,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":167,"author":{"gitId":"Kangxun"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"Kangxun":167}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kangxun"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"Kangxun"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"Kangxun"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"Kangxun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"Kangxun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"Kangxun"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"Kangxun"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"Kangxun"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"Kangxun"},"content":" * Unit test for Storage class.","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"Kangxun"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"Kangxun"},"content":"public class StorageTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"Kangxun"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"Kangxun"},"content":"    public void saveTasks_invalidFile_success() {","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"Kangxun"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"Kangxun"},"content":"            String invalidFilePath \u003d \"thisfile/doesnot.exist\";","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"Kangxun"},"content":"            Storage o \u003d new Storage(invalidFilePath);","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"Kangxun"},"content":"            o.saveTasks(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"Kangxun"},"content":"            assertTrue(o.toString().equals(\"file path is thisfile/doesnot.exist\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"Kangxun"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"Kangxun"},"content":"            fail(); // should not have exception","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"Kangxun"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"Kangxun"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"Kangxun"},"content":"    public void loadTasks_invalidFile_success() {","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"Kangxun"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"Kangxun"},"content":"            String invalidFilePath \u003d \"thisfile/doesnot.exist\";","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"Kangxun"},"content":"            Storage o \u003d new Storage(invalidFilePath);","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"Kangxun"},"content":"            ArrayList\u003cTask\u003e tasks \u003d o.loadTasks();","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"Kangxun"},"content":"            assertTrue(o.toString().equals(\"file path is thisfile/doesnot.exist\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"Kangxun"},"content":"            assertTrue(tasks.equals(new ArrayList\u003c\u003e()));","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"Kangxun"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"Kangxun"},"content":"            fail(); // should not have exception","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"Kangxun"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"Kangxun"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"Kangxun":43}},{"path":"src/test/java/duke/util/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kangxun"},"content":"package duke.util;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"Kangxun"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"Kangxun"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"Kangxun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"Kangxun"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Kangxun"},"content":" * Unit test for Parser class.","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"Kangxun"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"Kangxun"},"content":"class ParserTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"Kangxun"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"Kangxun"},"content":"    public void isValidTask_invalidTasks_failure() {","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"Kangxun"},"content":"        assertFalse(Parser.isValidTask(\"deadline /at 1999-12-03 0000\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"Kangxun"},"content":"        assertFalse(Parser.isValidTask(\"event /by 1999-12-03 0000\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"Kangxun"},"content":"        assertFalse(Parser.isValidTask(\"deadline /by /at 1999-12-03 0000\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"Kangxun"},"content":"        assertFalse(Parser.isValidTask(\"event /at /by 1999-12-03 0000\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"Kangxun"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"Kangxun"},"content":"    public void isMissingArg_tasksWithoutDesc_success() {","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"Kangxun"},"content":"        assertTrue(Parser.isMissingArg(\"todo \"));","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"Kangxun"},"content":"        assertTrue(Parser.isMissingArg(\"todo  \"));","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"Kangxun"},"content":"        assertTrue(Parser.isMissingArg(\"todo           \"));","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"Kangxun"},"content":"        assertTrue(Parser.isMissingArg(\"todo                                     \"));","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"Kangxun"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"Kangxun"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"Kangxun":27}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Kangxun"},"content":"first task","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"Kangxun"},"content":"second task","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"Kangxun"},"content":"todo borrow book","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"Kangxun"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"Kangxun"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"Kangxun"},"content":"deadline return book /by 2021-12-25 0000","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Kangxun"},"content":"event project meeting /at 2021-12-31 1234","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Kangxun"},"content":"deadline do homework /by 2021-12-31 2359","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Kangxun"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"Kangxun"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"Kangxun"},"content":"done 5","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"Kangxun"},"content":"done 1000","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"Kangxun"},"content":"done 0","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"Kangxun"},"content":"done 100","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"Kangxun"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"Kangxun"},"content":"done","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"Kangxun"},"content":"todo","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"Kangxun"},"content":"todo","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"Kangxun"},"content":"deadline","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"Kangxun"},"content":"event","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"Kangxun"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"Kangxun"},"content":"blah","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"Kangxun"},"content":"delete 1","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"Kangxun"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"Kangxun"},"content":"find o","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"Kangxun"},"content":"find return","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"Kangxun"},"content":"find zmbowuinb123#@%","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"Kangxun"},"content":"find","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"Kangxun"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Kangxun":30}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"Kangxun"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"Kangxun"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\util\\*.java","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"Kangxun"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\command\\*.java","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"Kangxun"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\task\\*.java","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"Kangxun"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"Kangxun"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"Kangxun":8}}]
