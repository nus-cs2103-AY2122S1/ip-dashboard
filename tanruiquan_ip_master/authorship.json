[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"tanruiquan"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"tanruiquan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"tanruiquan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"tanruiquan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"tanruiquan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"tanruiquan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"tanruiquan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"tanruiquan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"tanruiquan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"tanruiquan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"tanruiquan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"tanruiquan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"tanruiquan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"tanruiquan"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"tanruiquan"},"content":"    enableAssertions\u003d true","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tanruiquan":17,"-":45}},{"path":"config/travis/check-eof-newline.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"#!/bin/sh","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"# Checks that all text files end with a newline.","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":"ret\u003d0","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":"# Preserve filename with spaces by only splitting on newlines.","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":"IFS\u003d\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":"\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":"for filename in $(git grep --cached -I -l -e \u0027\u0027 -- \u0027:/\u0027); do","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":"    if [ \"$(tail -c 1 \"./$filename\")\" !\u003d \u0027\u0027 ]; then","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"tanruiquan"},"content":"        line\u003d\"$(wc -l \"./$filename\" | cut -d\u0027 \u0027 -f1)\"","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"tanruiquan"},"content":"        echo \"ERROR:$filename:$line: no newline at EOF.\"","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"tanruiquan"},"content":"        ret\u003d1","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"    fi","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"tanruiquan"},"content":"done","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"tanruiquan"},"content":"exit $ret","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"tanruiquan":18}},{"path":"config/travis/check-line-endings.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"#!/bin/sh","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"# Checks for prohibited line endings.","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"# Prohibited line endings: \\r\\n","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":"git grep --cached -I -n --no-color -P \u0027\\r$\u0027 -- \u0027:/\u0027 |","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":"awk \u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":"    BEGIN {","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":"        FS \u003d \":\"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":"        OFS \u003d \":\"","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":"        ret \u003d 0","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"tanruiquan"},"content":"    {","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"tanruiquan"},"content":"        ret \u003d 1","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"tanruiquan"},"content":"        print \"ERROR\", $1, $2, \" prohibited \\\\r\\\\n line ending, use \\\\n instead.\"","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"tanruiquan"},"content":"    END {","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":"        exit ret","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"tanruiquan"},"content":"\u0027","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"tanruiquan":19}},{"path":"config/travis/check-trailing-whitespace.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"#!/bin/sh","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"# Checks for trailing whitespace","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":"git grep --cached -I -n --no-color -P \u0027[ \\t]+$\u0027 -- \u0027:/\u0027 |","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":"awk \u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":"    BEGIN {","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":"        FS \u003d \":\"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":"        OFS \u003d \":\"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":"        ret \u003d 0","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":"    {","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"tanruiquan"},"content":"        # Only warn for markdown files (*.md) to accomodate text editors","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"tanruiquan"},"content":"        # which do not properly handle trailing whitespace.","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"tanruiquan"},"content":"        # (e.g. GitHub web editor)","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"        if ($1 ~ /\\.md$/) {","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"tanruiquan"},"content":"            severity \u003d \"WARN\"","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"tanruiquan"},"content":"            severity \u003d \"ERROR\"","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"tanruiquan"},"content":"            ret \u003d 1","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"tanruiquan"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"tanruiquan"},"content":"        print severity, $1, $2, \" trailing whitespace.\"","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"tanruiquan"},"content":"    END {","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"tanruiquan"},"content":"        exit ret","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"tanruiquan"},"content":"\u0027","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"tanruiquan":26}},{"path":"config/travis/run-checks.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"#!/bin/sh","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"# Runs all check-* scripts, and returns a non-zero exit code if any of them fail.","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":"dir\u003d$(CDPATH\u003d cd -- \"$(dirname -- \"$0\")\" \u0026\u0026 pwd) \u0026\u0026","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":"ret\u003d0 \u0026\u0026","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":"for checkscript in \"$dir\"/check-*; do","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":"    if ! \"$checkscript\"; then","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":"        ret\u003d1","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":"    fi","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":"done","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":"exit $ret","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"tanruiquan":11}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":" * Represents Duke, a program that helps people to keep track of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"tanruiquan"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"tanruiquan"},"content":" * @author ruiquan","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"tanruiquan"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"public class Duke {","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"tanruiquan"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"tanruiquan"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"tanruiquan"},"content":"    private final Parser parser;","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"tanruiquan"},"content":"     * Constructs a Duke instance.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"tanruiquan"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"tanruiquan"},"content":"     * @param filePath The path to a text file for storage.","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"tanruiquan"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"tanruiquan"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"tanruiquan"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"tanruiquan"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"tanruiquan"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"tanruiquan"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"tanruiquan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"tanruiquan"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"tanruiquan"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"tanruiquan"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"tanruiquan"},"content":"     * Run Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"tanruiquan"},"content":"    public void run() {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"tanruiquan"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"tanruiquan"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"tanruiquan"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"tanruiquan"},"content":"            try {","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"tanruiquan"},"content":"                String input \u003d ui.readInput();","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"tanruiquan"},"content":"                ui.showLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"tanruiquan"},"content":"                Command c \u003d parser.parse(input);","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"tanruiquan"},"content":"                String message \u003d c.execute(tasks, ui, storage);","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"tanruiquan"},"content":"                ui.reply(message);","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"tanruiquan"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"tanruiquan"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"tanruiquan"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"tanruiquan"},"content":"            } finally {","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"tanruiquan"},"content":"                ui.showLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"tanruiquan"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"tanruiquan"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":58,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":59,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"tanruiquan"},"content":"     * Returns the appropriate response given an input by the user.","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"tanruiquan"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"tanruiquan"},"content":"     * @param input The input by the user.","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"tanruiquan"},"content":"     * @return The response by Duke.","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"tanruiquan"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"tanruiquan"},"content":"        String response;","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"tanruiquan"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"tanruiquan"},"content":"            Command c \u003d parser.parse(input);","lastModifiedDate":"2021-09-05"},{"lineNumber":70,"author":{"gitId":"tanruiquan"},"content":"            response \u003d c.execute(tasks, ui, storage);","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"tanruiquan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"tanruiquan"},"content":"            response \u003d e.getMessage();","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"tanruiquan"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"tanruiquan"},"content":"        return response;","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"tanruiquan"},"content":"     * This is the entry point for the Duke program in CLI.","lastModifiedDate":"2021-09-04"},{"lineNumber":79,"author":{"gitId":"tanruiquan"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":80,"author":{"gitId":"tanruiquan"},"content":"     * @param args An array of String arguments to follow convention.","lastModifiedDate":"2021-09-01"},{"lineNumber":81,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"tanruiquan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"tanruiquan"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"tanruiquan":84,"-":1}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":"public class Launcher {","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":"     * This is the entry point for the Duke program.","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"tanruiquan"},"content":"     * @param args An array of String arguments to follow convention.","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"tanruiquan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"tanruiquan":17}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":"import duke.controllers.MainWindow;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"tanruiquan"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"tanruiquan"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"tanruiquan"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":"    private Duke duke \u003d new Duke(\"data/tasks.txt\");","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"tanruiquan"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"tanruiquan"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"tanruiquan"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"tanruiquan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"tanruiquan"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"tanruiquan"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"tanruiquan"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"tanruiquan"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"tanruiquan"},"content":"            stage.show();","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"tanruiquan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"tanruiquan"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"tanruiquan"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"tanruiquan"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"tanruiquan":32}},{"path":"src/main/java/duke/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"package duke.commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":" * Represents a command that will add Task into the TaskList when executed.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"tanruiquan"},"content":" * @author ruiquan","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"tanruiquan"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"tanruiquan"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"    private final Task task;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"tanruiquan"},"content":"     * Constructs a AddCommand given a Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"tanruiquan"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"tanruiquan"},"content":"     * @param task The task that will be added into the TaskList.","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"tanruiquan"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"tanruiquan"},"content":"        super(false);","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"tanruiquan"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"tanruiquan"},"content":"     * Executes the AddCommand and add the Task into the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"tanruiquan"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"tanruiquan"},"content":"     * @param tasks The collection of tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"tanruiquan"},"content":"     * @param ui The user interface that handles input and output.","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"tanruiquan"},"content":"     * @param storage The storage manager that deals with loading from and","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"tanruiquan"},"content":"     *               saving into a file.","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"tanruiquan"},"content":"     * @throws DukeException If the file that act as storage can not be found.","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"tanruiquan"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"tanruiquan"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"tanruiquan"},"content":"        int before \u003d tasks.size();","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"tanruiquan"},"content":"        tasks.addTask(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"tanruiquan"},"content":"        int after \u003d tasks.size();","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"tanruiquan"},"content":"        assert after \u003d\u003d before + 1 : \"The size of the task list after adding a task should be one more than before\";","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"tanruiquan"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"tanruiquan"},"content":"        int len \u003d tasks.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"tanruiquan"},"content":"        String message \u003d String.format(\"Got it. I\u0027ve added this task:\\n  %s\\nNow you have %d %s in the list.\",","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"tanruiquan"},"content":"                task.toString(),","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"tanruiquan"},"content":"                len,","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"tanruiquan"},"content":"                len \u003c\u003d 1 ? \"task\" : \"tasks\");","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"tanruiquan"},"content":"        return message;","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"tanruiquan"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"tanruiquan":51}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"package duke.commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":" * Represents a command that the Duke program can execute.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":" * @author ruiquan","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"tanruiquan"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"tanruiquan"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"tanruiquan"},"content":"    private final boolean isExit;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":"     * Constructs a Command.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"tanruiquan"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"tanruiquan"},"content":"     * @param isExit Whether the command is an exit command.","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"tanruiquan"},"content":"    public Command(boolean isExit) {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"tanruiquan"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"tanruiquan"},"content":"     * Informs caller if the command is an exit command.","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"tanruiquan"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"tanruiquan"},"content":"     * @return True if the command is an exit command, false otherwise.","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"tanruiquan"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"tanruiquan"},"content":"        return isExit;","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"tanruiquan"},"content":"     * Executes the command which either leads to a state change,","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"tanruiquan"},"content":"     * an output or exit of the program.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"tanruiquan"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"tanruiquan"},"content":"     * @param tasks The collection of tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"tanruiquan"},"content":"     * @param ui The user interface that handles input and output.","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"tanruiquan"},"content":"     * @param storage The storage manager that deals with loading from and","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"tanruiquan"},"content":"     *               saving into a file.","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"tanruiquan"},"content":"     * @throws DukeException If there is an error.","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"tanruiquan"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"tanruiquan"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"tanruiquan":45}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"package duke.commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":" * Represents a command that will delete a Task from the TaskList when executed.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"tanruiquan"},"content":" * @author ruiquan","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"tanruiquan"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"tanruiquan"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"    private final int index;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"tanruiquan"},"content":"     * Constructs a DeleteCommand given an index.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"tanruiquan"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"tanruiquan"},"content":"     * @param index The index of the Task to be deleted.","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"tanruiquan"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"tanruiquan"},"content":"        super(false);","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"tanruiquan"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"tanruiquan"},"content":"     * Executes the DeleteCommand and deletes the Task at the specified index","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"tanruiquan"},"content":"     * from the TaskList.","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"tanruiquan"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"tanruiquan"},"content":"     * @param tasks The collection of tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"tanruiquan"},"content":"     * @param ui The user interface that handles input and output.","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"tanruiquan"},"content":"     * @param storage The storage manager that deals with loading from and","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"tanruiquan"},"content":"     *               saving into a file.","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"tanruiquan"},"content":"     * @throws DukeException If the file that act as storage can not be found.","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"tanruiquan"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"tanruiquan"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"tanruiquan"},"content":"        if (index \u003c\u003d 0 || index \u003e tasks.size()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"tanruiquan"},"content":"            throw new DukeException(\"Looks like there is no such task to be deleted\");","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"tanruiquan"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"tanruiquan"},"content":"        assert index \u003c\u003d tasks.size() \u0026\u0026 index \u003e 0","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"tanruiquan"},"content":"                : \"index should neither be negative nor bigger than the size of task list\";","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"tanruiquan"},"content":"        int before \u003d tasks.size();","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"tanruiquan"},"content":"        Task task \u003d tasks.deleteTask(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"tanruiquan"},"content":"        int after \u003d tasks.size();","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"tanruiquan"},"content":"        assert after \u003d\u003d before - 1","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"tanruiquan"},"content":"                : \"The size of task list after deleting a task should be one lesser than before\";","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"tanruiquan"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"tanruiquan"},"content":"        int len \u003d tasks.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"tanruiquan"},"content":"        String message \u003d String.format(\"Noted. I\u0027ve removed this task:\\n  %s\\nNow you have %d %s in the list.\",","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"tanruiquan"},"content":"                task.toString(),","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"tanruiquan"},"content":"                len,","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"tanruiquan"},"content":"                len \u003c\u003d 1 ? \"task\" : \"tasks\");","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"tanruiquan"},"content":"        return message;","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"tanruiquan"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"tanruiquan":58}},{"path":"src/main/java/duke/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"package duke.commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":" * Represents a command that will mark a Task as done when executed.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"tanruiquan"},"content":" * @author ruiquan","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"tanruiquan"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"tanruiquan"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"    private final int index;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"tanruiquan"},"content":"     * Constructs a DoneCommand given an index.","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"tanruiquan"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"tanruiquan"},"content":"     * @param index The index of the Task to be marked as done.","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"tanruiquan"},"content":"    public DoneCommand(int index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"tanruiquan"},"content":"        super(false);","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"tanruiquan"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"tanruiquan"},"content":"     * Executes the DoneCommand and mark the Task at the specified index","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"tanruiquan"},"content":"     * in the TaskList as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"tanruiquan"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"tanruiquan"},"content":"     * @param tasks The collection of tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"tanruiquan"},"content":"     * @param ui The user interface that handles input and output.","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"tanruiquan"},"content":"     * @param storage The storage manager that deals with loading from and","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"tanruiquan"},"content":"     *               saving into a file.","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"tanruiquan"},"content":"     * @throws DukeException If the file that act as storage can not be found.","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"tanruiquan"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"tanruiquan"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"tanruiquan"},"content":"        if (index \u003c\u003d 0 || index \u003e tasks.size()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"tanruiquan"},"content":"            throw new DukeException(\"Looks like there is no such task to be marked as done\");","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"tanruiquan"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"tanruiquan"},"content":"        assert index \u003c\u003d tasks.size() \u0026\u0026 index \u003e 0","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"tanruiquan"},"content":"                : \"index should neither be negative nor bigger than the size of task list\";","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"tanruiquan"},"content":"        Task task \u003d tasks.markTaskAsDone(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"tanruiquan"},"content":"        assert task.getStatusIcon().equals(\"X\") : \"The status of the task should be done\";","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"tanruiquan"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"tanruiquan"},"content":"        String message \u003d String.format(\"Nice! I\u0027ve marked this task as done:\\n  %s\", task);","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"tanruiquan"},"content":"        return message;","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"tanruiquan"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"tanruiquan":52}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"package duke.commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":" * Represents an ExitCommand that will exit the program when executed.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":" * @author ruiquan","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"tanruiquan"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"     * Constructs an ExitCommand.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":"    public ExitCommand() {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"tanruiquan"},"content":"        super(true);","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"tanruiquan"},"content":"     * Executes the ExitCommand and exit the program.","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"tanruiquan"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"tanruiquan"},"content":"     * @param tasks The collection of tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"tanruiquan"},"content":"     * @param ui The user interface that handles input and output.","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"tanruiquan"},"content":"     * @param storage The storage manager that deals with loading from and","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"tanruiquan"},"content":"     *               saving into a file.","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"tanruiquan"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"tanruiquan"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"tanruiquan"},"content":"        String message \u003d \"Goodbye, hope to see you again soon!\";","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"tanruiquan"},"content":"        return message;","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"tanruiquan"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"tanruiquan":34}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"package duke.commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":"    private final String keyword;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":"     * Constructs a FindCommand given the search query.","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"tanruiquan"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"tanruiquan"},"content":"     * @param keyword The search query.","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"tanruiquan"},"content":"        super(false);","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"tanruiquan"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"tanruiquan"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"tanruiquan"},"content":"        TaskList filteredTasks \u003d tasks.filter(keyword);","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"tanruiquan"},"content":"        String message \u003d String.format(\"Here are the matching %s in your list:\\n%s\",","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"tanruiquan"},"content":"                filteredTasks.size() \u003c\u003d 1 ? \"task\" : \"tasks\", filteredTasks);","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"tanruiquan"},"content":"        return message;","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"tanruiquan"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"tanruiquan":27}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"package duke.commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":" * Represents a ListCommand that will output the list of tasks when executed.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":" * @author ruiquan","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"tanruiquan"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"tanruiquan"},"content":"     * Constructs a ListCommand.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"tanruiquan"},"content":"    public ListCommand() {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":"        super(false);","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"tanruiquan"},"content":"     * Executes the ListCommand and list out all the tasks in the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"tanruiquan"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"tanruiquan"},"content":"     * @param tasks The collection of tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"tanruiquan"},"content":"     * @param ui The user interface that handles input and output.","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"tanruiquan"},"content":"     * @param storage The storage manager that deals with loading from and","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"tanruiquan"},"content":"     *               saving into a file.","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"tanruiquan"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"tanruiquan"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"tanruiquan"},"content":"        String message \u003d String.format(\"Here are the %s in your list:\\n%s\",","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"tanruiquan"},"content":"                tasks.size() \u003c\u003d 1 ? \"task\" : \"tasks\", tasks);","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"tanruiquan"},"content":"        return message;","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"tanruiquan"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"tanruiquan":34}},{"path":"src/main/java/duke/controllers/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"package duke.controllers;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"tanruiquan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"tanruiquan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"tanruiquan"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"tanruiquan"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"tanruiquan"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"tanruiquan"},"content":" *","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"tanruiquan"},"content":" * Adapted from JavaFX tutorial 4: https://se-education.org/guides/tutorials/javaFxPart4.html","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"tanruiquan"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"tanruiquan"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"tanruiquan"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"tanruiquan"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"tanruiquan"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"tanruiquan"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"tanruiquan"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"tanruiquan"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"tanruiquan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"tanruiquan"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"tanruiquan"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"tanruiquan"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"tanruiquan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"tanruiquan"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"tanruiquan"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"tanruiquan"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"tanruiquan"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"tanruiquan"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"tanruiquan"},"content":"    private void flip() {","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"tanruiquan"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"tanruiquan"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"tanruiquan"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"tanruiquan"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"tanruiquan"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"tanruiquan"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"tanruiquan"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"tanruiquan"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"tanruiquan"},"content":"        db.flip();","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"tanruiquan"},"content":"        return db;","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"tanruiquan"},"content":"}","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"tanruiquan":63}},{"path":"src/main/java/duke/controllers/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"package duke.controllers;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"import java.util.Objects;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"tanruiquan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"tanruiquan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"tanruiquan"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"tanruiquan"},"content":" *","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"tanruiquan"},"content":" * Adapted from JavaFX tutorial 4: https://se-education.org/guides/tutorials/javaFxPart4.html","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"tanruiquan"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"tanruiquan"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"tanruiquan"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"tanruiquan"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"tanruiquan"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"tanruiquan"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"tanruiquan"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"tanruiquan"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"tanruiquan"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"tanruiquan"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"tanruiquan"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"tanruiquan"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"tanruiquan"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"tanruiquan"},"content":"     * Initialise the MainWindow and send a welcome message.","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"tanruiquan"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"tanruiquan"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"tanruiquan"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"tanruiquan"},"content":"        String welcomeMessage \u003d \"Hi, I\u0027m Duke, your Personal Assistant Chatbot\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"tanruiquan"},"content":"                + \"What can I do for you today?\";","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"tanruiquan"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"tanruiquan"},"content":"                DialogBox.getDukeDialog(welcomeMessage, dukeImage)","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"tanruiquan"},"content":"        );","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"tanruiquan"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"tanruiquan"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"tanruiquan"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"tanruiquan"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"tanruiquan"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"tanruiquan"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"tanruiquan"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"tanruiquan"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"tanruiquan"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"tanruiquan"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"tanruiquan"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"tanruiquan"},"content":"        );","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"tanruiquan"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"tanruiquan"},"content":"        if (Objects.equals(input, \"exit\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"tanruiquan"},"content":"            Platform.exit();","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"tanruiquan"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"tanruiquan"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"tanruiquan":70}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":" * Represents Exceptions that the Duke program encounters.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":" * @author ruiquan","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":"     * Constructs a DukeException with the given error message.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"tanruiquan"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"tanruiquan"},"content":"     * @param message The error message.","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"tanruiquan"},"content":"        super(message);","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"tanruiquan"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"tanruiquan":18}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"package duke.parser;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":"import duke.commands.AddCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":"import duke.commands.DoneCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"tanruiquan"},"content":"import duke.commands.ExitCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"tanruiquan"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"tanruiquan"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"tanruiquan"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"tanruiquan"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"tanruiquan"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"tanruiquan"},"content":" * Represents a Parser that deals with making sense","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"tanruiquan"},"content":" * of the user inputs.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"tanruiquan"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"tanruiquan"},"content":" * @author ruiquan","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"tanruiquan"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"tanruiquan"},"content":"public class Parser {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"tanruiquan"},"content":"    private static final String COMMAND_EXIT \u003d \"exit\";","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"tanruiquan"},"content":"    private static final String COMMAND_BYE \u003d \"bye\";","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"tanruiquan"},"content":"    private static final String COMMAND_QUIT \u003d \"quit\";","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"tanruiquan"},"content":"    private static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"tanruiquan"},"content":"    private static final String COMMAND_LS \u003d \"ls\";","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"tanruiquan"},"content":"    private static final String COMMAND_DONE \u003d \"done\";","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"tanruiquan"},"content":"    private static final String COMMAND_FINISH \u003d \"finish\";","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"tanruiquan"},"content":"    private static final String COMMAND_COMPLETE \u003d \"complete\";","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"tanruiquan"},"content":"    private static final String COMMAND_TODO \u003d \"todo\";","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"tanruiquan"},"content":"    private static final String COMMAND_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"tanruiquan"},"content":"    private static final String COMMAND_EVENT \u003d \"event\";","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"tanruiquan"},"content":"    private static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"tanruiquan"},"content":"    private static final String COMMAND_REMOVE \u003d \"remove\";","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"tanruiquan"},"content":"    private static final String COMMAND_FIND \u003d \"find\";","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"tanruiquan"},"content":"    private static final String COMMAND_SEARCH \u003d \"search\";","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"tanruiquan"},"content":"     * Takes in a String input by the user and","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"tanruiquan"},"content":"     * returns a Command.","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"tanruiquan"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"tanruiquan"},"content":"     * @param input The String input by the user.","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"tanruiquan"},"content":"     * @return A Command.","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"tanruiquan"},"content":"     * @throws DukeException If the user input is not in the correct form.","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"tanruiquan"},"content":"    public Command parse(String input) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"tanruiquan"},"content":"        String command \u003d extractCommand(input);","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"tanruiquan"},"content":"        String details \u003d extractDetails(input);","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"tanruiquan"},"content":"        if (isExitCommand(command)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"tanruiquan"},"content":"            return handleExit();","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"tanruiquan"},"content":"        } else if (isListCommand(command)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"tanruiquan"},"content":"            return handleList();","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"tanruiquan"},"content":"        } else if (isToDoCommand(command)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"tanruiquan"},"content":"            return handleToDo(details);","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"tanruiquan"},"content":"        } else if (isDeadlineCommand(command)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"tanruiquan"},"content":"            return handleDeadline(details);","lastModifiedDate":"2021-09-05"},{"lineNumber":67,"author":{"gitId":"tanruiquan"},"content":"        } else if (isEventCommand(command)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"tanruiquan"},"content":"            return handleEvent(details);","lastModifiedDate":"2021-09-05"},{"lineNumber":69,"author":{"gitId":"tanruiquan"},"content":"        } else if (isDoneCommand(command)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":70,"author":{"gitId":"tanruiquan"},"content":"            return handleDone(details);","lastModifiedDate":"2021-09-05"},{"lineNumber":71,"author":{"gitId":"tanruiquan"},"content":"        } else if (isDeleteCommand(command)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":72,"author":{"gitId":"tanruiquan"},"content":"            return handleDelete(details);","lastModifiedDate":"2021-09-05"},{"lineNumber":73,"author":{"gitId":"tanruiquan"},"content":"        } else if (isFindCommand(command)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":74,"author":{"gitId":"tanruiquan"},"content":"            return handleFind(details);","lastModifiedDate":"2021-09-05"},{"lineNumber":75,"author":{"gitId":"tanruiquan"},"content":"        } else {","lastModifiedDate":"2021-09-05"},{"lineNumber":76,"author":{"gitId":"tanruiquan"},"content":"            String message \u003d String.format(\"I\u0027m sorry but I don\u0027t know what is %s\", input);","lastModifiedDate":"2021-09-05"},{"lineNumber":77,"author":{"gitId":"tanruiquan"},"content":"            throw new DukeException(message);","lastModifiedDate":"2021-09-05"},{"lineNumber":78,"author":{"gitId":"tanruiquan"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":80,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":81,"author":{"gitId":"tanruiquan"},"content":"    private boolean isExitCommand(String command) {","lastModifiedDate":"2021-09-05"},{"lineNumber":82,"author":{"gitId":"tanruiquan"},"content":"        return command.equals(COMMAND_EXIT) || command.equals(COMMAND_BYE) || command.equals(COMMAND_QUIT);","lastModifiedDate":"2021-09-05"},{"lineNumber":83,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":84,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":85,"author":{"gitId":"tanruiquan"},"content":"    private boolean isListCommand(String command) {","lastModifiedDate":"2021-09-05"},{"lineNumber":86,"author":{"gitId":"tanruiquan"},"content":"        return command.equals(COMMAND_LIST) || command.equals(COMMAND_LS);","lastModifiedDate":"2021-09-05"},{"lineNumber":87,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":88,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":89,"author":{"gitId":"tanruiquan"},"content":"    private boolean isDoneCommand(String command) {","lastModifiedDate":"2021-09-05"},{"lineNumber":90,"author":{"gitId":"tanruiquan"},"content":"        return command.equals(COMMAND_DONE) || command.equals(COMMAND_FINISH) || command.equals(COMMAND_COMPLETE);","lastModifiedDate":"2021-09-05"},{"lineNumber":91,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":92,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":93,"author":{"gitId":"tanruiquan"},"content":"    private boolean isDeleteCommand(String command) {","lastModifiedDate":"2021-09-05"},{"lineNumber":94,"author":{"gitId":"tanruiquan"},"content":"        return command.equals(COMMAND_DELETE) || command.equals(COMMAND_REMOVE);","lastModifiedDate":"2021-09-05"},{"lineNumber":95,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":96,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":97,"author":{"gitId":"tanruiquan"},"content":"    private boolean isFindCommand(String command) {","lastModifiedDate":"2021-09-05"},{"lineNumber":98,"author":{"gitId":"tanruiquan"},"content":"        return command.equals(COMMAND_FIND) || command.equals(COMMAND_SEARCH);","lastModifiedDate":"2021-09-05"},{"lineNumber":99,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":100,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":101,"author":{"gitId":"tanruiquan"},"content":"    private boolean isToDoCommand(String command) {","lastModifiedDate":"2021-09-05"},{"lineNumber":102,"author":{"gitId":"tanruiquan"},"content":"        return command.equals(COMMAND_TODO);","lastModifiedDate":"2021-09-05"},{"lineNumber":103,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":104,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":105,"author":{"gitId":"tanruiquan"},"content":"    private boolean isDeadlineCommand(String command) {","lastModifiedDate":"2021-09-05"},{"lineNumber":106,"author":{"gitId":"tanruiquan"},"content":"        return command.equals(COMMAND_DEADLINE);","lastModifiedDate":"2021-09-05"},{"lineNumber":107,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":108,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":109,"author":{"gitId":"tanruiquan"},"content":"    private boolean isEventCommand(String command) {","lastModifiedDate":"2021-09-05"},{"lineNumber":110,"author":{"gitId":"tanruiquan"},"content":"        return command.equals(COMMAND_EVENT);","lastModifiedDate":"2021-09-05"},{"lineNumber":111,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":112,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":113,"author":{"gitId":"tanruiquan"},"content":"    private String extractCommand(String input) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":114,"author":{"gitId":"tanruiquan"},"content":"        String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"tanruiquan"},"content":"        if (inputArr.length \u003c\u003d 0) {","lastModifiedDate":"2021-09-05"},{"lineNumber":116,"author":{"gitId":"tanruiquan"},"content":"            throw new DukeException(\"Please don\u0027t give me an empty input. My life is already empty enough.\");","lastModifiedDate":"2021-09-05"},{"lineNumber":117,"author":{"gitId":"tanruiquan"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":119,"author":{"gitId":"tanruiquan"},"content":"        return inputArr[0].toLowerCase().trim();","lastModifiedDate":"2021-09-05"},{"lineNumber":120,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":121,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":122,"author":{"gitId":"tanruiquan"},"content":"    private String extractDetails(String input) {","lastModifiedDate":"2021-09-05"},{"lineNumber":123,"author":{"gitId":"tanruiquan"},"content":"        String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"tanruiquan"},"content":"        String details \u003d Arrays","lastModifiedDate":"2021-09-05"},{"lineNumber":125,"author":{"gitId":"tanruiquan"},"content":"                .stream(inputArr)","lastModifiedDate":"2021-09-05"},{"lineNumber":126,"author":{"gitId":"tanruiquan"},"content":"                .skip(1)","lastModifiedDate":"2021-09-05"},{"lineNumber":127,"author":{"gitId":"tanruiquan"},"content":"                .map(String::trim)","lastModifiedDate":"2021-09-05"},{"lineNumber":128,"author":{"gitId":"tanruiquan"},"content":"                .filter(s -\u003e !s.equals(\"\"))","lastModifiedDate":"2021-09-05"},{"lineNumber":129,"author":{"gitId":"tanruiquan"},"content":"                .collect(Collectors.joining(\" \"));","lastModifiedDate":"2021-09-05"},{"lineNumber":130,"author":{"gitId":"tanruiquan"},"content":"        return details;","lastModifiedDate":"2021-09-05"},{"lineNumber":131,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":133,"author":{"gitId":"tanruiquan"},"content":"    private Command handleExit() {","lastModifiedDate":"2021-09-05"},{"lineNumber":134,"author":{"gitId":"tanruiquan"},"content":"        return new ExitCommand();","lastModifiedDate":"2021-09-05"},{"lineNumber":135,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":136,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":137,"author":{"gitId":"tanruiquan"},"content":"    private Command handleList() {","lastModifiedDate":"2021-09-05"},{"lineNumber":138,"author":{"gitId":"tanruiquan"},"content":"        return new ListCommand();","lastModifiedDate":"2021-09-05"},{"lineNumber":139,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":140,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":141,"author":{"gitId":"tanruiquan"},"content":"    private Command handleToDo(String details) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":142,"author":{"gitId":"tanruiquan"},"content":"        if (details.equals(\"\")) {","lastModifiedDate":"2021-09-05"},{"lineNumber":143,"author":{"gitId":"tanruiquan"},"content":"            throw new DukeException(\"Dude, the description of a todo cannot be empty la\");","lastModifiedDate":"2021-09-05"},{"lineNumber":144,"author":{"gitId":"tanruiquan"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":145,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":146,"author":{"gitId":"tanruiquan"},"content":"        return new AddCommand(new ToDo(details));","lastModifiedDate":"2021-09-05"},{"lineNumber":147,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":148,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":149,"author":{"gitId":"tanruiquan"},"content":"    private Command handleDeadline(String details) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":150,"author":{"gitId":"tanruiquan"},"content":"        if (details.equals(\"\")) {","lastModifiedDate":"2021-09-05"},{"lineNumber":151,"author":{"gitId":"tanruiquan"},"content":"            throw new DukeException(\"Dude, the details of a deadline cannot be empty la\");","lastModifiedDate":"2021-09-05"},{"lineNumber":152,"author":{"gitId":"tanruiquan"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":153,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":154,"author":{"gitId":"tanruiquan"},"content":"        String[] argArr \u003d details.split(\"/by\");","lastModifiedDate":"2021-09-05"},{"lineNumber":155,"author":{"gitId":"tanruiquan"},"content":"        if (argArr.length \u003c\u003d 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":156,"author":{"gitId":"tanruiquan"},"content":"            throw new DukeException(\"Please provide both the deadline description and date\");","lastModifiedDate":"2021-09-05"},{"lineNumber":157,"author":{"gitId":"tanruiquan"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":158,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":159,"author":{"gitId":"tanruiquan"},"content":"        String description \u003d argArr[0].trim();","lastModifiedDate":"2021-08-25"},{"lineNumber":160,"author":{"gitId":"tanruiquan"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":161,"author":{"gitId":"tanruiquan"},"content":"            LocalDate date \u003d LocalDate.parse(argArr[1].trim());","lastModifiedDate":"2021-08-25"},{"lineNumber":162,"author":{"gitId":"tanruiquan"},"content":"            return new AddCommand(new Deadline(description, date));","lastModifiedDate":"2021-08-25"},{"lineNumber":163,"author":{"gitId":"tanruiquan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":164,"author":{"gitId":"tanruiquan"},"content":"            throw new DukeException(\"Date must be in the form YYYY-MM-DD\");","lastModifiedDate":"2021-08-25"},{"lineNumber":165,"author":{"gitId":"tanruiquan"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":166,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":167,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":168,"author":{"gitId":"tanruiquan"},"content":"    private Command handleEvent(String details) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":169,"author":{"gitId":"tanruiquan"},"content":"        if (details.equals(\"\")) {","lastModifiedDate":"2021-09-05"},{"lineNumber":170,"author":{"gitId":"tanruiquan"},"content":"            throw new DukeException(\"Dude, the details of an event cannot be empty la\");","lastModifiedDate":"2021-09-05"},{"lineNumber":171,"author":{"gitId":"tanruiquan"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":172,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":173,"author":{"gitId":"tanruiquan"},"content":"        String[] argArr \u003d details.split(\"/at\");","lastModifiedDate":"2021-09-05"},{"lineNumber":174,"author":{"gitId":"tanruiquan"},"content":"        if (argArr.length \u003c\u003d 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":175,"author":{"gitId":"tanruiquan"},"content":"            throw new DukeException(\"Please provide both the event description and date\");","lastModifiedDate":"2021-09-05"},{"lineNumber":176,"author":{"gitId":"tanruiquan"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":177,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":178,"author":{"gitId":"tanruiquan"},"content":"        String description \u003d argArr[0].trim();","lastModifiedDate":"2021-08-25"},{"lineNumber":179,"author":{"gitId":"tanruiquan"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":180,"author":{"gitId":"tanruiquan"},"content":"            LocalDate date \u003d LocalDate.parse(argArr[1].trim());","lastModifiedDate":"2021-08-25"},{"lineNumber":181,"author":{"gitId":"tanruiquan"},"content":"            return new AddCommand(new Event(description, date));","lastModifiedDate":"2021-08-25"},{"lineNumber":182,"author":{"gitId":"tanruiquan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":183,"author":{"gitId":"tanruiquan"},"content":"            throw new DukeException(\"Date must be in the format YYYY-MM-DD\");","lastModifiedDate":"2021-08-25"},{"lineNumber":184,"author":{"gitId":"tanruiquan"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":185,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":186,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":187,"author":{"gitId":"tanruiquan"},"content":"    private Command handleDone(String details) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":188,"author":{"gitId":"tanruiquan"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":189,"author":{"gitId":"tanruiquan"},"content":"            int index \u003d Integer.parseInt(details);","lastModifiedDate":"2021-09-05"},{"lineNumber":190,"author":{"gitId":"tanruiquan"},"content":"            return new DoneCommand(index);","lastModifiedDate":"2021-09-05"},{"lineNumber":191,"author":{"gitId":"tanruiquan"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":192,"author":{"gitId":"tanruiquan"},"content":"            throw new DukeException(\"You need to provide the index number of the task to be mark as done\");","lastModifiedDate":"2021-09-05"},{"lineNumber":193,"author":{"gitId":"tanruiquan"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":194,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":195,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":196,"author":{"gitId":"tanruiquan"},"content":"    private Command handleDelete(String details) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":197,"author":{"gitId":"tanruiquan"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":198,"author":{"gitId":"tanruiquan"},"content":"            int index \u003d Integer.parseInt(details);","lastModifiedDate":"2021-09-05"},{"lineNumber":199,"author":{"gitId":"tanruiquan"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":200,"author":{"gitId":"tanruiquan"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":201,"author":{"gitId":"tanruiquan"},"content":"            throw new DukeException(\"You need to provide the index number of the task to be deleted\");","lastModifiedDate":"2021-09-05"},{"lineNumber":202,"author":{"gitId":"tanruiquan"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":203,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":204,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":205,"author":{"gitId":"tanruiquan"},"content":"    private Command handleFind(String details) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":206,"author":{"gitId":"tanruiquan"},"content":"        if (details.equals(\"\")) {","lastModifiedDate":"2021-09-05"},{"lineNumber":207,"author":{"gitId":"tanruiquan"},"content":"            throw new DukeException(\"Dude, the search query cannot be empty la\");","lastModifiedDate":"2021-09-05"},{"lineNumber":208,"author":{"gitId":"tanruiquan"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":209,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":210,"author":{"gitId":"tanruiquan"},"content":"        return new FindCommand(details);","lastModifiedDate":"2021-09-05"},{"lineNumber":211,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":212,"author":{"gitId":"tanruiquan"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"tanruiquan":212}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"package duke.storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":"import java.util.List;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"tanruiquan"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"tanruiquan"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"tanruiquan"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"tanruiquan"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"tanruiquan"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"tanruiquan"},"content":" * Presents a storage manager that deals with loading tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"tanruiquan"},"content":" * from a file and saving tasks into a file.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"tanruiquan"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"tanruiquan"},"content":" * @author ruiquan","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"tanruiquan"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"tanruiquan"},"content":"public class Storage {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"tanruiquan"},"content":"    private final String filePath;","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"tanruiquan"},"content":"     * Constructs a Storage given a String that represent a path to a text file.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"tanruiquan"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"tanruiquan"},"content":"     * @param filePath The path to the text file that will be used as storage.","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"tanruiquan"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"tanruiquan"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"tanruiquan"},"content":"     * Saves the list of tasks into a text file.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"tanruiquan"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"tanruiquan"},"content":"     * @param tasks The list of tasks to be saved.","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"tanruiquan"},"content":"     * @return True if the tasks are saved and false otherwise.","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"tanruiquan"},"content":"     * @throws DukeException If the file can not be found.","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"tanruiquan"},"content":"    public boolean save(TaskList tasks) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"tanruiquan"},"content":"        // Make the directories to the file if it does not exist","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"tanruiquan"},"content":"        String[] pathArr \u003d filePath.split(\"/\");","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"tanruiquan"},"content":"        String[] dirArr \u003d Arrays.copyOfRange(pathArr, 0, pathArr.length - 1);","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"tanruiquan"},"content":"        String dirPath \u003d String.join(\"/\", dirArr);","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"tanruiquan"},"content":"        new File(dirPath).mkdirs();","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"tanruiquan"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"tanruiquan"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"tanruiquan"},"content":"            PrintWriter writer \u003d new PrintWriter(file);","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"tanruiquan"},"content":"            tasks.getTasks().forEach(task -\u003e writer.write(task.format() + System.lineSeparator()));","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"tanruiquan"},"content":"            writer.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"tanruiquan"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"tanruiquan"},"content":"            throw new DukeException(\"File could not be found\");","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"tanruiquan"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"tanruiquan"},"content":"        return true;","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"tanruiquan"},"content":"    private Task convertStringToTask(String string) throws DukeException {","lastModifiedDate":"2021-09-04"},{"lineNumber":63,"author":{"gitId":"tanruiquan"},"content":"        String[] arr \u003d string.split(\",\");","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"tanruiquan"},"content":"        String type \u003d arr[0].trim();","lastModifiedDate":"2021-09-04"},{"lineNumber":65,"author":{"gitId":"tanruiquan"},"content":"        Task task;","lastModifiedDate":"2021-09-04"},{"lineNumber":66,"author":{"gitId":"tanruiquan"},"content":"        switch (type) {","lastModifiedDate":"2021-09-04"},{"lineNumber":67,"author":{"gitId":"tanruiquan"},"content":"        case \"T\":","lastModifiedDate":"2021-09-04"},{"lineNumber":68,"author":{"gitId":"tanruiquan"},"content":"            task \u003d new ToDo(arr[2].trim(), arr[1].trim().equals(\"1\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"tanruiquan"},"content":"            break;","lastModifiedDate":"2021-09-04"},{"lineNumber":70,"author":{"gitId":"tanruiquan"},"content":"        case \"E\":","lastModifiedDate":"2021-09-04"},{"lineNumber":71,"author":{"gitId":"tanruiquan"},"content":"            task \u003d new Event(arr[2].trim(), arr[1].trim().equals(\"1\"), LocalDate.parse(arr[3].trim()));","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"tanruiquan"},"content":"            break;","lastModifiedDate":"2021-09-04"},{"lineNumber":73,"author":{"gitId":"tanruiquan"},"content":"        case \"D\":","lastModifiedDate":"2021-09-04"},{"lineNumber":74,"author":{"gitId":"tanruiquan"},"content":"            task \u003d new Deadline(arr[2].trim(), arr[1].trim().equals(\"1\"), LocalDate.parse(arr[3].trim()));","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"tanruiquan"},"content":"            break;","lastModifiedDate":"2021-09-04"},{"lineNumber":76,"author":{"gitId":"tanruiquan"},"content":"        default:","lastModifiedDate":"2021-09-04"},{"lineNumber":77,"author":{"gitId":"tanruiquan"},"content":"            throw new DukeException(\"Save file is corrupted\");","lastModifiedDate":"2021-09-04"},{"lineNumber":78,"author":{"gitId":"tanruiquan"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"tanruiquan"},"content":"        return task;","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"tanruiquan"},"content":"     * Reads the tasks in a text file at filePath and","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"tanruiquan"},"content":"     * returns the tasks as a List.","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"tanruiquan"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":86,"author":{"gitId":"tanruiquan"},"content":"     * @return The tasks a List.","lastModifiedDate":"2021-09-01"},{"lineNumber":87,"author":{"gitId":"tanruiquan"},"content":"     * @throws DukeException If the file can not be found.","lastModifiedDate":"2021-09-01"},{"lineNumber":88,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"tanruiquan"},"content":"    public List\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"tanruiquan"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"tanruiquan"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"tanruiquan"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"tanruiquan"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"tanruiquan"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"tanruiquan"},"content":"                tasks.add(convertStringToTask(scanner.nextLine()));","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"tanruiquan"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"tanruiquan"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"tanruiquan"},"content":"            save(new TaskList());","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"tanruiquan"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"tanruiquan"},"content":"        return tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"tanruiquan"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"tanruiquan":102}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":" * Represents a Task with a deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":" * The date of the deadline is stored as a LocalDate object.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":" * @author ruiquan","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"tanruiquan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"tanruiquan"},"content":"    private final LocalDate by;","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"tanruiquan"},"content":"     * Constructs a Deadline given the description and the deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"tanruiquan"},"content":"     * @param description The deadline description.","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"tanruiquan"},"content":"     * @param by The deadline of this task.","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"tanruiquan"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"tanruiquan"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"tanruiquan"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"tanruiquan"},"content":"     * Constructs a Deadline given the description,","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"tanruiquan"},"content":"     * completion status and deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"tanruiquan"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"tanruiquan"},"content":"     * @param description The task description.","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"tanruiquan"},"content":"     * @param isDone Whether the task is completed.","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"tanruiquan"},"content":"     * @param by The deadline of this task.","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"tanruiquan"},"content":"    public Deadline(String description, boolean isDone, LocalDate by) {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"tanruiquan"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"tanruiquan"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"tanruiquan"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"tanruiquan"},"content":"    public String format() {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"tanruiquan"},"content":"        return String.format(\"D, %d, %s, %s\", isDone ? 1 : 0, description, by);","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"tanruiquan"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"tanruiquan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"tanruiquan"},"content":"        return String.format(\"[D]%s (by: %s)\",","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"tanruiquan"},"content":"                super.toString(),","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"tanruiquan"},"content":"                by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"tanruiquan"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"tanruiquan":50}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":" * Represents a Task with a start date.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":" * The date of the Event is stored as a LocalDate object.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":" * @author ruiquan","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"tanruiquan"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"tanruiquan"},"content":"    private final LocalDate at;","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"tanruiquan"},"content":"     * Constructs an Event given the description and start date.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"tanruiquan"},"content":"     * @param description The event description.","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"tanruiquan"},"content":"     * @param at The start date of this event.","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"tanruiquan"},"content":"    public Event(String description, LocalDate at) {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"tanruiquan"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"tanruiquan"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"tanruiquan"},"content":"     * Constructs an Event given the description,","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"tanruiquan"},"content":"     * completion status and start time.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"tanruiquan"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"tanruiquan"},"content":"     * @param description The event description.","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"tanruiquan"},"content":"     * @param isDone Whether the task is completed.","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"tanruiquan"},"content":"     * @param at The start time of this event.","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"tanruiquan"},"content":"    public Event(String description, boolean isDone, LocalDate at) {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"tanruiquan"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"tanruiquan"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"tanruiquan"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"tanruiquan"},"content":"    public String format() {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"tanruiquan"},"content":"        return String.format(\"E, %d, %s, %s\", isDone ? 1 : 0, description, at);","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"tanruiquan"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"tanruiquan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"tanruiquan"},"content":"        return String.format(\"[E]%s (at: %s)\",","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"tanruiquan"},"content":"                super.toString(),","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"tanruiquan"},"content":"                at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"tanruiquan"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"tanruiquan":50}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":" * Represents a Task which has a String description of what the task is and","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":" * a boolean to indicate if the task is completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":" * @author ruiquan","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":"    protected final String description;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"tanruiquan"},"content":"     * Constructs a Task given the description.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"tanruiquan"},"content":"     * @param description The task description.","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"tanruiquan"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"tanruiquan"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"tanruiquan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"tanruiquan"},"content":"     * Constructs a Task given both the description and completion status.","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"tanruiquan"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"tanruiquan"},"content":"     * @param description The task description.","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"tanruiquan"},"content":"     * @param isDone Whether the task is completed.","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"tanruiquan"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"tanruiquan"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"tanruiquan"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"tanruiquan"},"content":"     * Returns a String icon to indicate if the task is completed.","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"tanruiquan"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"tanruiquan"},"content":"     * @return \"X\" if the task is completed and an empty string if it is not.","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"tanruiquan"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"tanruiquan"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"tanruiquan"},"content":"     * Mark the Task as completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"tanruiquan"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"tanruiquan"},"content":"     * @return The completed Task.","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"tanruiquan"},"content":"    public Task markAsDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"tanruiquan"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"tanruiquan"},"content":"        return this;","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"tanruiquan"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"tanruiquan"},"content":"        return this.description;","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"tanruiquan"},"content":"     * Formats the Task into a String that will be saved into a text file for storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"tanruiquan"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"tanruiquan"},"content":"     * @return A String representation of the task.","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"tanruiquan"},"content":"    public abstract String format();","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"tanruiquan"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":65,"author":{"gitId":"tanruiquan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":66,"author":{"gitId":"tanruiquan"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), description);","lastModifiedDate":"2021-08-16"},{"lineNumber":67,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":68,"author":{"gitId":"tanruiquan"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"tanruiquan":68}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":"import java.util.List;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":" * Represents a collection of Tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":" * @author ruiquan","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"tanruiquan"},"content":"public class TaskList {","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"tanruiquan"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"tanruiquan"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"tanruiquan"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"tanruiquan"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"tanruiquan"},"content":"     * Constructs a TaskList given a list of Tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"tanruiquan"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"tanruiquan"},"content":"     * @param tasks The list of Tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"tanruiquan"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"tanruiquan"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"tanruiquan"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"tanruiquan"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"tanruiquan"},"content":"      * @return The list of tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"tanruiquan"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"tanruiquan"},"content":"        return tasks;","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"tanruiquan"},"content":"     * Adds a task into the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"tanruiquan"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"tanruiquan"},"content":"     * @param task The task to be added.","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"tanruiquan"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"tanruiquan"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"tanruiquan"},"content":"     * Marks a Task at the specified position in the TaskList as completed and","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"tanruiquan"},"content":"     * returns the completed Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"tanruiquan"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"tanruiquan"},"content":"     * @param index The index of the Task in the TaskList to be marked as completed.","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"tanruiquan"},"content":"     * @return The completed Task.","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"tanruiquan"},"content":"    public Task markTaskAsDone(int index) {","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"tanruiquan"},"content":"        return tasks.get(index - 1).markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":59,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":60,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"tanruiquan"},"content":"     * Returns the number of Task in the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"tanruiquan"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"tanruiquan"},"content":"     * @return The size of the TaskList.","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"tanruiquan"},"content":"    public int size() {","lastModifiedDate":"2021-08-17"},{"lineNumber":66,"author":{"gitId":"tanruiquan"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":68,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":69,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"tanruiquan"},"content":"     * Deletes a Task at the specified position in the TaskList and","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"tanruiquan"},"content":"     * returns the deleted Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"tanruiquan"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"tanruiquan"},"content":"     * @param index The index of the Task in the TaskList to be deleted.","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"tanruiquan"},"content":"     * @return The deleted Task.","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"tanruiquan"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"tanruiquan"},"content":"        return tasks.remove(index - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":81,"author":{"gitId":"tanruiquan"},"content":"     * Takes in a keyword and returns a TaskList of tasks with the given","lastModifiedDate":"2021-09-05"},{"lineNumber":82,"author":{"gitId":"tanruiquan"},"content":"     * keyword in the description of the task. The matching is case-insensitive.","lastModifiedDate":"2021-09-05"},{"lineNumber":83,"author":{"gitId":"tanruiquan"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":84,"author":{"gitId":"tanruiquan"},"content":"     * @param keyword The search query.","lastModifiedDate":"2021-09-01"},{"lineNumber":85,"author":{"gitId":"tanruiquan"},"content":"     * @return A TaskList of tasks that contains the keyword.","lastModifiedDate":"2021-09-05"},{"lineNumber":86,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":87,"author":{"gitId":"tanruiquan"},"content":"    public TaskList filter(String keyword) {","lastModifiedDate":"2021-09-05"},{"lineNumber":88,"author":{"gitId":"tanruiquan"},"content":"        List\u003cTask\u003e filteredTasks \u003d tasks","lastModifiedDate":"2021-09-01"},{"lineNumber":89,"author":{"gitId":"tanruiquan"},"content":"                .stream()","lastModifiedDate":"2021-09-01"},{"lineNumber":90,"author":{"gitId":"tanruiquan"},"content":"                .filter(task -\u003e task.getDescription().toLowerCase().contains(keyword.toLowerCase()))","lastModifiedDate":"2021-09-05"},{"lineNumber":91,"author":{"gitId":"tanruiquan"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-09-01"},{"lineNumber":92,"author":{"gitId":"tanruiquan"},"content":"        return new TaskList(filteredTasks);","lastModifiedDate":"2021-09-05"},{"lineNumber":93,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"tanruiquan"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":96,"author":{"gitId":"tanruiquan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":97,"author":{"gitId":"tanruiquan"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2021-09-05"},{"lineNumber":98,"author":{"gitId":"tanruiquan"},"content":"        int len \u003d tasks.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"tanruiquan"},"content":"        if (len \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"tanruiquan"},"content":"            return result.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"tanruiquan"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"tanruiquan"},"content":"        for (int i \u003d 1; i \u003c len; i++) {","lastModifiedDate":"2021-08-16"},{"lineNumber":103,"author":{"gitId":"tanruiquan"},"content":"            result.append(String.format(\"%s. %s\\n\", i, tasks.get(i - 1)));","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"tanruiquan"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":105,"author":{"gitId":"tanruiquan"},"content":"        result.append(String.format(\"%s. %s\", len, tasks.get(len - 1)));","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"tanruiquan"},"content":"        return result.toString();","lastModifiedDate":"2021-08-16"},{"lineNumber":107,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":108,"author":{"gitId":"tanruiquan"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"tanruiquan":108}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":" * Represents a Task that has to be done.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":" * @author ruiquan","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"tanruiquan"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"tanruiquan"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"tanruiquan"},"content":"    public String format() {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"tanruiquan"},"content":"        return String.format(\"T, %d, %s\", isDone ? 1 : 0, description);","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"tanruiquan"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"tanruiquan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"tanruiquan"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"tanruiquan"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"tanruiquan":27}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"package duke.ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":" * Represents the user interface that handles the input and output of the program","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":" * when used as a CLI.","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":" * @author ruiquan","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":"public class Ui {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"tanruiquan"},"content":"    static final String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"tanruiquan"},"content":"    private final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"tanruiquan"},"content":"     * Prints a loading error message.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"tanruiquan"},"content":"    public void showLoadingError() {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"tanruiquan"},"content":"        String message \u003d \"Oops, looks like there is a problem loading duke.Duke\";","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"tanruiquan"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"tanruiquan"},"content":"     * Prints a welcome message that includes a logo.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"tanruiquan"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"tanruiquan"},"content":"        String logo \u003d \" ____        _       \\n|  _ \\\\ _   _| | _____\\n| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"tanruiquan"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n|____/ \\\\__,_|_|\\\\_\\\\___|\";","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"tanruiquan"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"tanruiquan"},"content":"        System.out.println(logo);","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"tanruiquan"},"content":"        System.out.println(\"Hi, I\u0027m Duke, your Personal Assistant Chatbot\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"tanruiquan"},"content":"                + \"What can I do for you today?\");","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"tanruiquan"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"tanruiquan"},"content":"     * Prints a line which acts as a divider.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"tanruiquan"},"content":"    public void showLine() {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"tanruiquan"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"tanruiquan"},"content":"     * Prints an error message.","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"tanruiquan"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"tanruiquan"},"content":"     * @param errorMessage The error message to be printed.","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"tanruiquan"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"tanruiquan"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"tanruiquan"},"content":"     * Reads and returns a String representing the user input.","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"tanruiquan"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"tanruiquan"},"content":"     * @return A String representing the user input.","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"tanruiquan"},"content":"    public String readInput() {","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"tanruiquan"},"content":"        return scanner.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"tanruiquan"},"content":"     * Prints a message.","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"tanruiquan"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"tanruiquan"},"content":"     * @param message The message to be printed.","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"tanruiquan"},"content":"    public void reply(String message) {","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"tanruiquan"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"tanruiquan"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"tanruiquan":69}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" style\u003d\"-fx-effect: dropshadow(three-pass-box, rgba(0,0,0,0.8), 10, 0, 0, 0)dropshadow(three-pass-box, rgba(0,0,0,0.8), 10, 0, 0, 0);\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"tanruiquan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"tanruiquan"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"tanruiquan"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"tanruiquan"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"tanruiquan":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.controllers.MainWindow\"\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"tanruiquan"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"tanruiquan"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"tanruiquan"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"tanruiquan"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"tanruiquan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"tanruiquan"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"tanruiquan":19}},{"path":"src/test/java/duke/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"package duke.storage;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"tanruiquan"},"content":"public class StorageTest {","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"tanruiquan"},"content":"    @Test","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"tanruiquan"},"content":"    public void save_invalidPath_exceptionThrown() {","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"tanruiquan"},"content":"            new Storage(\"pathDoesNotExist/fileDoesNotExist.txt\")","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":"                    .save(new TaskList());","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"tanruiquan"},"content":"        });","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"tanruiquan"},"content":"    @Test","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"tanruiquan"},"content":"    public void save_validPath_success() {","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"tanruiquan"},"content":"        Storage storage \u003d new Storage(\"data/tasks.txt\");","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"tanruiquan"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"tanruiquan"},"content":"            assertTrue(storage.save(new TaskList()));","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"tanruiquan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"tanruiquan"},"content":"            fail();","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"tanruiquan"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"tanruiquan"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"tanruiquan":30}},{"path":"src/test/java/duke/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":"public class EventTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":"    public void testStringConversion() {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"tanruiquan"},"content":"        Task event \u003d new Event(\"project meeting\", LocalDate.parse(\"2021-08-29\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"tanruiquan"},"content":"        assertEquals(\"[E][ ] project meeting (at: Aug 29 2021)\", event.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"tanruiquan"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":"    public void testFormatConversion() {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"tanruiquan"},"content":"        Task event \u003d new Event(\"project meeting\", LocalDate.parse(\"2021-08-29\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"tanruiquan"},"content":"        assertEquals(\"E, 0, project meeting, 2021-08-29\", event.format());","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"tanruiquan"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"tanruiquan"},"content":"    public void testMarkAsDone() {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"tanruiquan"},"content":"        Task event \u003d new Event(\"return book\", LocalDate.parse(\"2020-08-29\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"tanruiquan"},"content":"        assertEquals(\" \", event.getStatusIcon());","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"tanruiquan"},"content":"        event.markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"tanruiquan"},"content":"        assertEquals(\"X\", event.getStatusIcon());","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"tanruiquan"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"tanruiquan":29}},{"path":"src/test/java/duke/tasks/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":"public class ToDoTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":"    public void testStringConversion() {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":"        Task toDo \u003d new ToDo(\"return book\");","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":"        assertEquals(\"[T][ ] return book\", toDo.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"tanruiquan"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"    public void testFormatConversion() {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"tanruiquan"},"content":"        Task toDo \u003d new ToDo(\"return book\");","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":"        assertEquals(\"T, 0, return book\", toDo.format());","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"tanruiquan"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"tanruiquan"},"content":"    public void testMarkAsDone() {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"tanruiquan"},"content":"        Task toDo \u003d new ToDo(\"return book\");","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"tanruiquan"},"content":"        assertEquals(\" \", toDo.getStatusIcon());","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"tanruiquan"},"content":"        toDo.markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"tanruiquan"},"content":"        assertEquals(\"X\", toDo.getStatusIcon());","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"tanruiquan"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"tanruiquan":27}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"todo read book","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"deadline return book /by 2021-08-25","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"event project meeting /at 2021-08-29","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":"todo join sports club","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":"done 1","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":"done 4","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":"todo borrow book","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":"deadline return book /by 2021-08-28","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":"event project meeting /at 2021-08-29","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":"todo","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"tanruiquan"},"content":"blah","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"tanruiquan"},"content":"delete 3","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"tanruiquan"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"bye","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"tanruiquan":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":"REM run the program, feed duke.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"tanruiquan"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tanruiquan":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"if [ -e \"./data/tasks.txt\" ]","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"tanruiquan"},"content":"then","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":"    rm ./data/tasks.txt","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"tanruiquan"},"content":"fi","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"tanruiquan"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"tanruiquan"},"content":"# run the program, feed duke.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tanruiquan":7,"-":36}}]
