[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":" * Represents Duke, a program that helps people to keep track of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"tanruiquan"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"tanruiquan"},"content":" * @author ruiquan","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"tanruiquan"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"tanruiquan"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"tanruiquan"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"tanruiquan"},"content":"     * Constructs a Duke instance.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"tanruiquan"},"content":"     * @param filePath the path to a text file for storage","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"tanruiquan"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"tanruiquan"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"tanruiquan"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"tanruiquan"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"tanruiquan"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"tanruiquan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"tanruiquan"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"tanruiquan"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"tanruiquan"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"tanruiquan"},"content":"     * Run Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"tanruiquan"},"content":"    public void run() {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"tanruiquan"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"tanruiquan"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"tanruiquan"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"tanruiquan"},"content":"            try {","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"tanruiquan"},"content":"                String input \u003d ui.readInput();","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"tanruiquan"},"content":"                ui.showLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"tanruiquan"},"content":"                Command c \u003d Parser.parse(input);","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"tanruiquan"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"tanruiquan"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"tanruiquan"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"tanruiquan"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"tanruiquan"},"content":"            } finally {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"tanruiquan"},"content":"                ui.showLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"tanruiquan"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"tanruiquan"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"tanruiquan"},"content":"     * This is the entry point for the Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"tanruiquan"},"content":"     * @param args an array of String arguments that stick to convention","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"tanruiquan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"tanruiquan"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"tanruiquan":61,"-":2}},{"path":"src/main/java/duke/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"package duke.commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":" * Represents a command that will add Task into the TaskList when executed.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"tanruiquan"},"content":" * @author ruiquan","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"tanruiquan"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"tanruiquan"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"    private final Task task;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"tanruiquan"},"content":"     * Constructs a AddCommand given a Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"tanruiquan"},"content":"     * @param task the task that will be added into the TastList","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"tanruiquan"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"tanruiquan"},"content":"        super(false);","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"tanruiquan"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"tanruiquan"},"content":"     * Executes the AddCommand and add the Task into the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"tanruiquan"},"content":"     * @param tasks the collection of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"tanruiquan"},"content":"     * @param ui the user interface that handles input and output","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"tanruiquan"},"content":"     * @param storage the storage manager that deals with loading from and","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"tanruiquan"},"content":"     *               saving into a file","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"tanruiquan"},"content":"     * @throws DukeException if the file that act as storage can not be found","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"tanruiquan"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"tanruiquan"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"tanruiquan"},"content":"        tasks.addTask(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"tanruiquan"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"tanruiquan"},"content":"        int len \u003d tasks.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"tanruiquan"},"content":"        String message \u003d String.format(\"Got it. I\u0027ve added this task:\\n  %s\\nNow you have %d %s in the list.\",","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"tanruiquan"},"content":"                task.toString(),","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"tanruiquan"},"content":"                len,","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"tanruiquan"},"content":"                len \u003c\u003d 1 ? \"task\" : \"tasks\");","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"tanruiquan"},"content":"        ui.reply(message);","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"tanruiquan"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"tanruiquan":45}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"package duke.commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":" * Represents a command that the Duke program can execute.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":" * @author ruiquan","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"tanruiquan"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"tanruiquan"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"tanruiquan"},"content":"    private final boolean isExit;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":"     * Constructs a Command.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"tanruiquan"},"content":"     * @param isExit whether the command is an exit command","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"tanruiquan"},"content":"    public Command(boolean isExit) {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"tanruiquan"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"tanruiquan"},"content":"     * Returns true if the command is an exit command, false otherwise.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"tanruiquan"},"content":"     * @return true if the command is an exit command, false otherwise","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"tanruiquan"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"tanruiquan"},"content":"        return isExit;","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"tanruiquan"},"content":"     * Executes the command which either leads to a state change,","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"tanruiquan"},"content":"     * an output or exit of the program.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"tanruiquan"},"content":"     * @param tasks the collection of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"tanruiquan"},"content":"     * @param ui the user interface that handles input and output","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"tanruiquan"},"content":"     * @param storage the storage manager that deals with loading from and","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"tanruiquan"},"content":"     *               saving into a file","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"tanruiquan"},"content":"     * @throws DukeException if there is an error","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"tanruiquan"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"tanruiquan"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"tanruiquan":42}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"package duke.commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":" * Represents a command that will delete a Task from the TaskList when executed.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"tanruiquan"},"content":" * @author ruiquan","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"tanruiquan"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"tanruiquan"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"    private final int index;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"tanruiquan"},"content":"     * Constructs a DeleteCommand given an index.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"tanruiquan"},"content":"     * @param index the index of the Task to be deleted","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"tanruiquan"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"tanruiquan"},"content":"        super(false);","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"tanruiquan"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"tanruiquan"},"content":"     * Executes the DeleteCommand and deletes the Task at the specified index","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"tanruiquan"},"content":"     * from the TaskList","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"tanruiquan"},"content":"     * @param tasks the collection of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"tanruiquan"},"content":"     * @param ui the user interface that handles input and output","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"tanruiquan"},"content":"     * @param storage the storage manager that deals with loading from and","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"tanruiquan"},"content":"     *               saving into a file","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"tanruiquan"},"content":"     * @throws DukeException if the file that act as storage can not be found","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"tanruiquan"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"tanruiquan"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"tanruiquan"},"content":"        if (index \u003c\u003d 0 || index \u003e tasks.size()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"tanruiquan"},"content":"            throw new DukeException(\"Looks like there is no such task to be deleted\");","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"tanruiquan"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"tanruiquan"},"content":"        Task task \u003d tasks.deleteTask(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"tanruiquan"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"tanruiquan"},"content":"        int len \u003d tasks.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"tanruiquan"},"content":"        String message \u003d String.format(\"Noted. I\u0027ve removed this task:\\n  %s\\nNow you have %d %s in the list.\",","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"tanruiquan"},"content":"                task.toString(),","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"tanruiquan"},"content":"                len,","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"tanruiquan"},"content":"                len \u003c\u003d 1 ? \"task\" : \"tasks\");","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"tanruiquan"},"content":"        ui.reply(message);","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"tanruiquan"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"tanruiquan":49}},{"path":"src/main/java/duke/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"package duke.commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":" * Represents a command that will mark a Task as done when executed.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"tanruiquan"},"content":" * @author ruiquan","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"tanruiquan"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"tanruiquan"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"    private final int index;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"tanruiquan"},"content":"     * Constucts a DoneCommand given an index.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"tanruiquan"},"content":"     * @param index the index of the Task to be marked as done","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"tanruiquan"},"content":"    public DoneCommand(int index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"tanruiquan"},"content":"        super(false);","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"tanruiquan"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"tanruiquan"},"content":"     * Executes the DoneCommand and mark the Task at the specified index","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"tanruiquan"},"content":"     * in the TaskList as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"tanruiquan"},"content":"     * @param tasks the collection of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"tanruiquan"},"content":"     * @param ui the user interface that handles input and output","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"tanruiquan"},"content":"     * @param storage the storage manager that deals with loading from and","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"tanruiquan"},"content":"     *               saving into a file","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"tanruiquan"},"content":"     * @throws DukeException if the file that act as storage can not be found","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"tanruiquan"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"tanruiquan"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"tanruiquan"},"content":"        if (index \u003c\u003d 0 || index \u003e tasks.size()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"tanruiquan"},"content":"            throw new DukeException(\"Looks like there is no such task to be marked as done\");","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"tanruiquan"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"tanruiquan"},"content":"        Task task \u003d tasks.markTaskAsDone(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"tanruiquan"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"tanruiquan"},"content":"        String message \u003d String.format(\"Nice! I\u0027ve marked this task as done:\\n  %s\", task);","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"tanruiquan"},"content":"        ui.reply(message);","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"tanruiquan"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"tanruiquan":45}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"package duke.commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":" * Represents an ExitCommand that will exit the program when executed.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":" * @author ruiquan","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"tanruiquan"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"     * Constructs an ExitCommand.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":"    public ExitCommand() {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"tanruiquan"},"content":"        super(true);","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"tanruiquan"},"content":"     * Excutes the ExitCommand and exit the program.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"tanruiquan"},"content":"     * @param tasks the collection of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"tanruiquan"},"content":"     * @param ui the user interface that handles input and output","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"tanruiquan"},"content":"     * @param storage the storage manager that deals with loading from and","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"tanruiquan"},"content":"     *               saving into a file","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"tanruiquan"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"tanruiquan"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"tanruiquan"},"content":"        String message \u003d \"Goodbye, hope to see you again soon!\";","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"tanruiquan"},"content":"        ui.reply(message);","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"tanruiquan"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"tanruiquan":33}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"package duke.commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":"    private final String keyword;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":"        super(false);","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"tanruiquan"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"tanruiquan"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":"        String message \u003d tasks.find(keyword);","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"tanruiquan"},"content":"        ui.reply(message);","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"tanruiquan"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"tanruiquan":20}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"package duke.commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":" * Represents a ListCommand that will output the list of tasks when executed.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":" * @author ruiquan","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"tanruiquan"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"tanruiquan"},"content":"     * Constructs a ListCommand.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"tanruiquan"},"content":"    public ListCommand() {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":"        super(false);","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"tanruiquan"},"content":"     * Executes the ListCommand and list out all the tasks in the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"tanruiquan"},"content":"     * @param tasks the collection of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"tanruiquan"},"content":"     * @param ui the user interface that handles input and output","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"tanruiquan"},"content":"     * @param storage the storage manager that deals with loading from and","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"tanruiquan"},"content":"     *               saving into a file","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"tanruiquan"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"tanruiquan"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"tanruiquan"},"content":"        String message \u003d tasks.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"tanruiquan"},"content":"        ui.reply(message);","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"tanruiquan"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"tanruiquan":32}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":" * Represents Exceptions that the Duke program encounters.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":" * @author ruiquan","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":"     * Constructs a DukeException with the given error message.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"tanruiquan"},"content":"     * @param message the error message","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"tanruiquan"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"        super(message);","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"tanruiquan":17}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"package duke.parser;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":"import duke.commands.AddCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":"import duke.commands.ExitCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":"import duke.commands.DoneCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"tanruiquan"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"tanruiquan"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"tanruiquan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"tanruiquan"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"tanruiquan"},"content":" * Represents a Parser that deals with making sense","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"tanruiquan"},"content":" * of the user inputs.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"tanruiquan"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"tanruiquan"},"content":" * @author ruiquan","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"tanruiquan"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"tanruiquan"},"content":"public class Parser {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"tanruiquan"},"content":"     * Takes in a String input by the user and","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"tanruiquan"},"content":"     * returns a Command.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"tanruiquan"},"content":"     * @param input the String input by the user","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"tanruiquan"},"content":"     * @return a Command","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"tanruiquan"},"content":"     * @throws DukeException if the user input is not in the correct form","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"tanruiquan"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"tanruiquan"},"content":"        if (input.equals(\"bye\") || input.equals(\"exit\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"tanruiquan"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"tanruiquan"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"tanruiquan"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"tanruiquan"},"content":"        } else if (input.contains(\"done\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"tanruiquan"},"content":"            String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"tanruiquan"},"content":"            if (inputArr.length \u003c\u003d 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"tanruiquan"},"content":"                throw new DukeException(\"OOPS!!! You need to indicate a task for me to mark as done.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"tanruiquan"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"tanruiquan"},"content":"            int index \u003d Integer.parseInt(inputArr[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"tanruiquan"},"content":"            return new DoneCommand(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"tanruiquan"},"content":"        } else if (input.contains(\"todo\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"tanruiquan"},"content":"            String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"tanruiquan"},"content":"            if (inputArr.length \u003c\u003d 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"tanruiquan"},"content":"                throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"tanruiquan"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"tanruiquan"},"content":"            String description \u003d input.substring(5);","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"tanruiquan"},"content":"            return new AddCommand(new ToDo(description));","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"tanruiquan"},"content":"        } else if (input.contains(\"deadline\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"tanruiquan"},"content":"            String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"tanruiquan"},"content":"            if (inputArr.length \u003c\u003d 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"tanruiquan"},"content":"                throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"tanruiquan"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"tanruiquan"},"content":"            String arg \u003d input.substring(9);","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"tanruiquan"},"content":"            String[] argArr \u003d arg.split(\"/by\");","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"tanruiquan"},"content":"            if (argArr.length \u003c\u003d 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"tanruiquan"},"content":"                throw new DukeException(\"Please provide both the task description and date\");","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"tanruiquan"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"tanruiquan"},"content":"            String description \u003d argArr[0].trim();","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"tanruiquan"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"tanruiquan"},"content":"                LocalDate date \u003d LocalDate.parse(argArr[1].trim());","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"tanruiquan"},"content":"                return new AddCommand(new Deadline(description, date));","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"tanruiquan"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"tanruiquan"},"content":"                throw new DukeException(\"Date must be in the form YYYY-MM-DD\");","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"tanruiquan"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"tanruiquan"},"content":"        } else if (input.contains(\"event\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"tanruiquan"},"content":"            String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"tanruiquan"},"content":"            if (inputArr.length \u003c\u003d 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"tanruiquan"},"content":"                throw new DukeException(\"OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"tanruiquan"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"tanruiquan"},"content":"            String arg \u003d input.substring(6);","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"tanruiquan"},"content":"            String[] argArr \u003d arg.split(\"/at\");","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"tanruiquan"},"content":"            if (argArr.length \u003c\u003d 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"tanruiquan"},"content":"                System.out.println(Arrays.toString(argArr));","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"tanruiquan"},"content":"                throw new DukeException(\"Please provide both the description and date\");","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"tanruiquan"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"tanruiquan"},"content":"            String description \u003d argArr[0].trim();","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"tanruiquan"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"tanruiquan"},"content":"                LocalDate date \u003d LocalDate.parse(argArr[1].trim());","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"tanruiquan"},"content":"                return new AddCommand(new Event(description, date));","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"tanruiquan"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"tanruiquan"},"content":"                throw new DukeException(\"Date must be in the format YYYY-MM-DD\");","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"tanruiquan"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"tanruiquan"},"content":"        } else if (input.contains(\"delete\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"tanruiquan"},"content":"            String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"tanruiquan"},"content":"            if (inputArr.length \u003c\u003d 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"tanruiquan"},"content":"                throw new DukeException(\"You need to indicate a task for me to delete\");","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"tanruiquan"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"tanruiquan"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"tanruiquan"},"content":"                int index \u003d Integer.parseInt(inputArr[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"tanruiquan"},"content":"                return new DeleteCommand(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"tanruiquan"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"tanruiquan"},"content":"                throw new DukeException(\"Please provide a number\");","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"tanruiquan"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"tanruiquan"},"content":"        } else if (input.contains(\"find\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"tanruiquan"},"content":"            String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"tanruiquan"},"content":"            if (inputArr.length \u003c\u003d 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"tanruiquan"},"content":"                throw new DukeException(\"You need to provide the search keyword\");","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"tanruiquan"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"tanruiquan"},"content":"            String description \u003d input.substring(5);","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"tanruiquan"},"content":"            return new FindCommand(description);","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"tanruiquan"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"tanruiquan"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"tanruiquan"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"tanruiquan"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"tanruiquan":110}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"package duke.storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"tanruiquan"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"tanruiquan"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"tanruiquan"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"tanruiquan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"tanruiquan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"tanruiquan"},"content":"import java.util.List;","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"tanruiquan"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"tanruiquan"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"tanruiquan"},"content":" * Presents a storage manager that deals with loading tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"tanruiquan"},"content":" * from a file and saving tasks into a file.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"tanruiquan"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"tanruiquan"},"content":" * @author ruiquan","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"tanruiquan"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"tanruiquan"},"content":"public class Storage {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"tanruiquan"},"content":"    private final String filePath;","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"tanruiquan"},"content":"     * Constructs a Storage given a String that represent a path to a text file.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"tanruiquan"},"content":"     * @param filePath the path to the text file that will be used as storage","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"tanruiquan"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"tanruiquan"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"tanruiquan"},"content":"     * Saves the list of tasks into a text file.","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"tanruiquan"},"content":"     * @param tasks the list of tasks to be saved","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"tanruiquan"},"content":"     * @return true if the tasks are saved and false otherwise","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"tanruiquan"},"content":"     * @throws DukeException if the file can not be found","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"tanruiquan"},"content":"    public boolean save(TaskList tasks) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"tanruiquan"},"content":"        Path dirPath \u003d Paths.get(\"data\");","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"tanruiquan"},"content":"        boolean dataPathExists \u003d Files.exists(dirPath);","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"tanruiquan"},"content":"        if (!dataPathExists) {","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"tanruiquan"},"content":"            File dataDir \u003d new File(\"data\");","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"tanruiquan"},"content":"            dataDir.mkdir();","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"tanruiquan"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"tanruiquan"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"tanruiquan"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"tanruiquan"},"content":"            PrintWriter writer \u003d new PrintWriter(file);","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"tanruiquan"},"content":"            tasks.getTasks().forEach(task -\u003e writer.write(task.format() + System.lineSeparator()));","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"tanruiquan"},"content":"            writer.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"tanruiquan"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"tanruiquan"},"content":"            throw new DukeException(\"File could not be found\");","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"tanruiquan"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"tanruiquan"},"content":"        return true;","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"tanruiquan"},"content":"    private Task convertStringToTask(String string) {","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"tanruiquan"},"content":"        String[] arr \u003d string.split(\",\");","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"tanruiquan"},"content":"        Task task \u003d null;","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"tanruiquan"},"content":"        if (arr[0].trim().contains(\"T\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"tanruiquan"},"content":"            task \u003d new ToDo(arr[2].trim(), arr[1].trim().equals(\"1\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"tanruiquan"},"content":"        } else if (arr[0].trim().contains(\"E\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"tanruiquan"},"content":"            task \u003d new Event(arr[2].trim(), arr[1].trim().equals(\"1\"), LocalDate.parse(arr[3].trim()));","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"tanruiquan"},"content":"        } else if (arr[0].trim().contains(\"D\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"tanruiquan"},"content":"            task \u003d new Deadline(arr[2].trim(), arr[1].trim().equals(\"1\"), LocalDate.parse(arr[3].trim()));","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"tanruiquan"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"tanruiquan"},"content":"        return task;","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"tanruiquan"},"content":"     * Reads the tasks in a text file at filePath and","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"tanruiquan"},"content":"     * returns the tasks as a List.","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"tanruiquan"},"content":"     * @return the tasks a List","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"tanruiquan"},"content":"     * @throws DukeException if the file can not be found","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"tanruiquan"},"content":"    public List\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"tanruiquan"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"tanruiquan"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"tanruiquan"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"tanruiquan"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"tanruiquan"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"tanruiquan"},"content":"                tasks.add(convertStringToTask(scanner.nextLine()));","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"tanruiquan"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"tanruiquan"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"tanruiquan"},"content":"            save(new TaskList());","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"tanruiquan"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"tanruiquan"},"content":"        return tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"tanruiquan"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"tanruiquan":97}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":" * Represents a Task with a deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":" * The date of the deadline is stored as a LocalDate object.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":" * @author ruiquan","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"tanruiquan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"tanruiquan"},"content":"    private LocalDate by;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"tanruiquan"},"content":"     * Constructs a Deadline given the description and the deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":"     * @param description the deadline description","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"tanruiquan"},"content":"     * @param by the deadline of this task","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"tanruiquan"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"tanruiquan"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"tanruiquan"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"tanruiquan"},"content":"     * Constructs a Deadline given the description,","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"tanruiquan"},"content":"     * completion status and deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"tanruiquan"},"content":"     * @param description the task description","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"tanruiquan"},"content":"     * @param isDone whether the task is completed","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"tanruiquan"},"content":"     * @param by the deadline of this task","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"tanruiquan"},"content":"    public Deadline(String description, boolean isDone, LocalDate by) {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"tanruiquan"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"tanruiquan"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"tanruiquan"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"tanruiquan"},"content":"    public String format() {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"tanruiquan"},"content":"        return String.format(\"D, %d, %s, %s\", isDone ? 1 : 0, description, by);","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"tanruiquan"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"tanruiquan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"tanruiquan"},"content":"        return String.format(\"[D]%s (by: %s)\",","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"tanruiquan"},"content":"                super.toString(),","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"tanruiquan"},"content":"                by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"tanruiquan"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"tanruiquan":48}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":" * Represents a Task with a start date.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":" * The date of the Event is stored as a LocalDate object.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":" * @author ruiquan","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"tanruiquan"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"tanruiquan"},"content":"    private LocalDate at;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"tanruiquan"},"content":"     * Constructs an Event given the description and start date.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":"     * @param description the event description","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"tanruiquan"},"content":"     * @param at the start date of this event","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"tanruiquan"},"content":"    public Event(String description, LocalDate at) {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"tanruiquan"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"tanruiquan"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"tanruiquan"},"content":"     * Constructs an Event given the description,","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"tanruiquan"},"content":"     * completion status and start time.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"tanruiquan"},"content":"     * @param description the event description","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"tanruiquan"},"content":"     * @param isDone whether the task is completed","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"tanruiquan"},"content":"     * @param at the start time of this event","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"tanruiquan"},"content":"    public Event(String description, boolean isDone, LocalDate at) {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"tanruiquan"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"tanruiquan"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"tanruiquan"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"tanruiquan"},"content":"    public String format() {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"tanruiquan"},"content":"        return String.format(\"E, %d, %s, %s\", isDone ? 1 : 0, description, at);","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"tanruiquan"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"tanruiquan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"tanruiquan"},"content":"        return String.format(\"[E]%s (at: %s)\",","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"tanruiquan"},"content":"                super.toString(),","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"tanruiquan"},"content":"                at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"tanruiquan"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"tanruiquan":48}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":" * Represents a Task which has a String description of what the task is and","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":" * a boolean to indicate if the task is completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":" * @author ruiquan","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":"    protected final String description;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"tanruiquan"},"content":"     * Constructs a Task given the description.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"     * @param description the task description","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"tanruiquan"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"tanruiquan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"tanruiquan"},"content":"     * Constructs a Task given both the description and completion status","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"tanruiquan"},"content":"     * @param description the task description","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"tanruiquan"},"content":"     * @param isDone whether the task is completed","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"tanruiquan"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"tanruiquan"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"tanruiquan"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"tanruiquan"},"content":"     * Returns a String icon to indicate if the task is completed","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"tanruiquan"},"content":"     * @return \"X\" if the task is completed and an empty string if it is not","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"tanruiquan"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"tanruiquan"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"tanruiquan"},"content":"     * Mark the Task as completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"tanruiquan"},"content":"     * @return the completed Task","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"tanruiquan"},"content":"    public Task markAsDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"tanruiquan"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"tanruiquan"},"content":"        return this;","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"tanruiquan"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"tanruiquan"},"content":"        return this.description;","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"tanruiquan"},"content":"     * Formats the Task into a String that will be saved into a text file for storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"tanruiquan"},"content":"     * @return a String representation of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"tanruiquan"},"content":"    abstract public String format();","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"tanruiquan"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":60,"author":{"gitId":"tanruiquan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":61,"author":{"gitId":"tanruiquan"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), description);","lastModifiedDate":"2021-08-16"},{"lineNumber":62,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":63,"author":{"gitId":"tanruiquan"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"tanruiquan":63}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"import java.util.List;","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":" * Represents a collection of Tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":" * @author ruiquan","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"tanruiquan"},"content":"public class TaskList {","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"tanruiquan"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"tanruiquan"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"tanruiquan"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"tanruiquan"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"tanruiquan"},"content":"     * Constructs a TaskList given a list of Tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"tanruiquan"},"content":"     * @param tasks the list of Tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"tanruiquan"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"tanruiquan"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"tanruiquan"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"tanruiquan"},"content":"      * @return the list of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"tanruiquan"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"tanruiquan"},"content":"        return tasks;","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"tanruiquan"},"content":"     * Adds a task into the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"tanruiquan"},"content":"     * @param task the task to be added","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"tanruiquan"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"tanruiquan"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"tanruiquan"},"content":"     * Marks a Task at the specified position in the TaskList as completed and","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"tanruiquan"},"content":"     * returns the completed Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"tanruiquan"},"content":"     * @param index the index of the Task in the TaskList to be marked as completed","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"tanruiquan"},"content":"     * @return the completed Task","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"tanruiquan"},"content":"    public Task markTaskAsDone(int index) {","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"tanruiquan"},"content":"        return tasks.get(index - 1).markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":56,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"tanruiquan"},"content":"     * Returns the number of Task in the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"tanruiquan"},"content":"     * @return the size of the TaskList","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"tanruiquan"},"content":"    public int size() {","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"tanruiquan"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":63,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":64,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"tanruiquan"},"content":"     * Deletes a Task at the specified position in the TaskList and","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"tanruiquan"},"content":"     * returns the deleted Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"tanruiquan"},"content":"     * @param index the index of the Task in the TaskList to be delted","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"tanruiquan"},"content":"     * @return the deleted Task","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"tanruiquan"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"tanruiquan"},"content":"        return tasks.remove(index - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"tanruiquan"},"content":"    public String find(String keyword) {","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"tanruiquan"},"content":"        List\u003cTask\u003e filteredTasks \u003d tasks.stream().filter(task -\u003e task.getDescription().contains(keyword)).collect(Collectors.toList());","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"tanruiquan"},"content":"        String str \u003d String.format(\"Here are the matching %s in your list:\\n\", filteredTasks.size() \u003c\u003d 1 ? \"task\" : \"tasks\");","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"tanruiquan"},"content":"        StringBuilder result \u003d new StringBuilder(str);","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"tanruiquan"},"content":"        int len \u003d filteredTasks.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"tanruiquan"},"content":"        if (len \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"tanruiquan"},"content":"            return result.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"tanruiquan"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"tanruiquan"},"content":"        for (int i \u003d 1; i \u003c len; i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"tanruiquan"},"content":"            result.append(String.format(\"%s. %s\\n\", i, filteredTasks.get(i - 1)));","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"tanruiquan"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"tanruiquan"},"content":"        result.append(String.format(\"%s. %s\", len, filteredTasks.get(len - 1)));","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"tanruiquan"},"content":"        return result.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"tanruiquan"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":90,"author":{"gitId":"tanruiquan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":91,"author":{"gitId":"tanruiquan"},"content":"        String str \u003d String.format(\"Here are the %s in your list:\\n\", tasks.size() \u003c\u003d 1 ? \"task\" : \"tasks\");","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"tanruiquan"},"content":"        StringBuilder result \u003d new StringBuilder(str);","lastModifiedDate":"2021-08-18"},{"lineNumber":93,"author":{"gitId":"tanruiquan"},"content":"        int len \u003d tasks.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"tanruiquan"},"content":"        if (len \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"tanruiquan"},"content":"            return result.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"tanruiquan"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"tanruiquan"},"content":"        for (int i \u003d 1; i \u003c len; i++) {","lastModifiedDate":"2021-08-16"},{"lineNumber":98,"author":{"gitId":"tanruiquan"},"content":"            result.append(String.format(\"%s. %s\\n\", i, tasks.get(i - 1)));","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"tanruiquan"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":100,"author":{"gitId":"tanruiquan"},"content":"        result.append(String.format(\"%s. %s\", len, tasks.get(len - 1)));","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"tanruiquan"},"content":"        return result.toString();","lastModifiedDate":"2021-08-16"},{"lineNumber":102,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":103,"author":{"gitId":"tanruiquan"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"tanruiquan":103}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":" * Represents a Task that has to be done.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":" * @author ruiquan","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"tanruiquan"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"tanruiquan"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"tanruiquan"},"content":"    public String format() {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"tanruiquan"},"content":"        return String.format(\"T, %d, %s\", isDone ? 1 : 0, description);","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"tanruiquan"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"tanruiquan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"tanruiquan"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"tanruiquan"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"tanruiquan":27}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"package duke.ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":" * Represents the user interface that handles the input and output of the program.","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":" * @author ruiquan","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":"public class Ui {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":"    private final String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"tanruiquan"},"content":"    private final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"     * Prints a loading error message.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":"    public void showLoadingError() {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"tanruiquan"},"content":"        String message \u003d \"Oops, looks like there is a problem loading duke.Duke\";","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"tanruiquan"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"tanruiquan"},"content":"     * Prints a welcome message that includes a logo.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"tanruiquan"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"tanruiquan"},"content":"        String logo \u003d \"\"\"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"tanruiquan"},"content":"                 ____        _       \\s","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"tanruiquan"},"content":"                |  _ \\\\ _   _| | _____\\s","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"tanruiquan"},"content":"                | | | | | | | |/ / _ \\\\","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"tanruiquan"},"content":"                | |_| | |_| |   \u003c  __/","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"tanruiquan"},"content":"                |____/ \\\\__,_|_|\\\\_\\\\___|","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"tanruiquan"},"content":"                \"\"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"tanruiquan"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"tanruiquan"},"content":"        System.out.println(logo);","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"tanruiquan"},"content":"        System.out.println(\"Hi, I\u0027m duke.Duke, your Personal Assistant Chatbot\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"tanruiquan"},"content":"                \"What can I do for you today?\");","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"tanruiquan"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"tanruiquan"},"content":"     * Prints a line which acts as a divider.","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"tanruiquan"},"content":"    public void showLine() {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"tanruiquan"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"tanruiquan"},"content":"     * Prints an error message.","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"tanruiquan"},"content":"     * @param errorMessage the error message to be printed","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"tanruiquan"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"tanruiquan"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"tanruiquan"},"content":"     * Reads and returns a String representing the user input.","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"tanruiquan"},"content":"     * @return a String representing the user input","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"tanruiquan"},"content":"    public String readInput() {","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"tanruiquan"},"content":"        return scanner.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"tanruiquan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"tanruiquan"},"content":"     * Prints a message.","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"tanruiquan"},"content":"     * @param message the message to be printed","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"tanruiquan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"tanruiquan"},"content":"    public void reply(String message) {","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"tanruiquan"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"tanruiquan"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"tanruiquan":70}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":"    public void dummyTest() {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":"        assertEquals(2,2);","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"tanruiquan"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"tanruiquan":12}},{"path":"src/test/java/duke/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":"public class EventTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":"    public void testStringConversion() {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"tanruiquan"},"content":"        Task event \u003d new Event(\"project meeting\", LocalDate.parse(\"2021-08-29\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"tanruiquan"},"content":"        assertEquals(\"[E][ ] project meeting (at: Aug 29 2021)\", event.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"tanruiquan"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":"    public void testFormatConversion() {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"tanruiquan"},"content":"        Task event \u003d new Event(\"project meeting\", LocalDate.parse(\"2021-08-29\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"tanruiquan"},"content":"        assertEquals(\"E, 0, project meeting, 2021-08-29\", event.format());","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"tanruiquan"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"tanruiquan"},"content":"    public void testMarkAsDone() {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"tanruiquan"},"content":"        Task event \u003d new Event(\"return book\", LocalDate.parse(\"2020-08-29\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"tanruiquan"},"content":"        assertEquals(\" \", event.getStatusIcon());","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"tanruiquan"},"content":"        event.markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"tanruiquan"},"content":"        assertEquals(\"X\", event.getStatusIcon());","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"tanruiquan"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"tanruiquan":29}},{"path":"src/test/java/duke/tasks/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":"public class ToDoTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":"    public void testStringConversion() {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":"        Task toDo \u003d new ToDo(\"return book\");","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":"        assertEquals(\"[T][ ] return book\", toDo.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"tanruiquan"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"    public void testFormatConversion() {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"tanruiquan"},"content":"        Task toDo \u003d new ToDo(\"return book\");","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":"        assertEquals(\"T, 0, return book\", toDo.format());","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"tanruiquan"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"tanruiquan"},"content":"    public void testMarkAsDone() {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"tanruiquan"},"content":"        Task toDo \u003d new ToDo(\"return book\");","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"tanruiquan"},"content":"        assertEquals(\" \", toDo.getStatusIcon());","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"tanruiquan"},"content":"        toDo.markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"tanruiquan"},"content":"        assertEquals(\"X\", toDo.getStatusIcon());","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"tanruiquan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"tanruiquan"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"tanruiquan":27}},{"path":"text-ui-test/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"T, 1, read book","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"D, 0, return book, 2021-08-25","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"T, 1, join sports club","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":"T, 0, borrow book","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":"D, 0, return book, 2021-08-28","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":"E, 0, project meeting, 2021-08-29","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"tanruiquan":6}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tanruiquan"},"content":"todo read book","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"tanruiquan"},"content":"deadline return book /by 2021-08-25","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"tanruiquan"},"content":"event project meeting /at 2021-08-29","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"tanruiquan"},"content":"todo join sports club","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"tanruiquan"},"content":"done 1","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"tanruiquan"},"content":"done 4","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"tanruiquan"},"content":"todo borrow book","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"tanruiquan"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"tanruiquan"},"content":"deadline return book /by 2021-08-28","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"tanruiquan"},"content":"event project meeting /at 2021-08-29","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"tanruiquan"},"content":"todo","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"tanruiquan"},"content":"blah","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"tanruiquan"},"content":"delete 3","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"tanruiquan"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"bye","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"tanruiquan":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":"REM run the program, feed duke.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"tanruiquan"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tanruiquan":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"tanruiquan"},"content":"if [ -e \"./data/tasks.txt\" ]","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"tanruiquan"},"content":"then","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"tanruiquan"},"content":"    rm ./data/tasks.txt","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"tanruiquan"},"content":"fi","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"tanruiquan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"tanruiquan"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"tanruiquan"},"content":"# run the program, feed duke.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tanruiquan":7,"-":36}}]
