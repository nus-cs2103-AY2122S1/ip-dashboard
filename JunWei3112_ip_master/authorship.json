[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"JunWei3112"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"JunWei3112":1,"-":23}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"JunWei3112"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"JunWei3112"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"JunWei3112"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"JunWei3112"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"JunWei3112"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"JunWei3112"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"JunWei3112"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"JunWei3112"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"JunWei3112"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"JunWei3112"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"JunWei3112"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"JunWei3112"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"JunWei3112"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"JunWei3112"},"content":"    mainClassName \u003d \"duke.gui.Launcher\"","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"JunWei3112"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"JunWei3112":17,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"JunWei3112"},"content":"Sample Screenshot of Duke:","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"JunWei3112"},"content":"\u003cimg src\u003d\"https://raw.github.com/JunWei3112/ip/master/docs/Ui.png\" width\u003d\"300\"\u003e","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"JunWei3112"},"content":"### Add and Delete Tasks","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"JunWei3112"},"content":"Users can add and delete tasks from the task list.","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"JunWei3112"},"content":"### Support for Different Task Types","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"JunWei3112"},"content":"Duke can handle these different task types:","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"JunWei3112"},"content":"- `Deadline` - A task that needs to be done before a specific date","lastModifiedDate":"2021-09-12"},{"lineNumber":17,"author":{"gitId":"JunWei3112"},"content":"- `Event` - A task that is held on a specific date","lastModifiedDate":"2021-09-12"},{"lineNumber":18,"author":{"gitId":"JunWei3112"},"content":"- `Todo` - A task that does not have a specified time frame","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":20,"author":{"gitId":"JunWei3112"},"content":"### Mark a Task as Done","lastModifiedDate":"2021-09-12"},{"lineNumber":21,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"JunWei3112"},"content":"After completing a task, users can mark that completed task.","lastModifiedDate":"2021-09-12"},{"lineNumber":23,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":24,"author":{"gitId":"JunWei3112"},"content":"### List Tasks","lastModifiedDate":"2021-09-12"},{"lineNumber":25,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":26,"author":{"gitId":"JunWei3112"},"content":"Users are able to view the current task list.","lastModifiedDate":"2021-09-12"},{"lineNumber":27,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":28,"author":{"gitId":"JunWei3112"},"content":"### Find Tasks","lastModifiedDate":"2021-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"JunWei3112"},"content":"Users are able to search for tasks in the task list using a keyword.","lastModifiedDate":"2021-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":32,"author":{"gitId":"JunWei3112"},"content":"### Tag a Task","lastModifiedDate":"2021-09-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":34,"author":{"gitId":"JunWei3112"},"content":"Users are able to tag a specific task to allow for categorization of tasks in the task list.","lastModifiedDate":"2021-09-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":36,"author":{"gitId":"JunWei3112"},"content":"### Saving the Data","lastModifiedDate":"2021-09-12"},{"lineNumber":37,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":38,"author":{"gitId":"JunWei3112"},"content":"The data are automatically saved in the hard disk after any command that changes the data has been executed.","lastModifiedDate":"2021-09-12"},{"lineNumber":39,"author":{"gitId":"JunWei3112"},"content":"There is no need for users to save manually. The data are saved as a TXT file `/data/dukeFile.txt`.","lastModifiedDate":"2021-09-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"JunWei3112"},"content":"### `list` - Listing all current tasks","lastModifiedDate":"2021-09-12"},{"lineNumber":44,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":45,"author":{"gitId":"JunWei3112"},"content":"Displays the current list of tasks.","lastModifiedDate":"2021-09-12"},{"lineNumber":46,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":47,"author":{"gitId":"JunWei3112"},"content":"Format: `list`","lastModifiedDate":"2021-09-12"},{"lineNumber":48,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":49,"author":{"gitId":"JunWei3112"},"content":"### `deadline` - Adding a Deadline task","lastModifiedDate":"2021-09-12"},{"lineNumber":50,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":51,"author":{"gitId":"JunWei3112"},"content":"Adds a Deadline task to the current task list.","lastModifiedDate":"2021-09-12"},{"lineNumber":52,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":53,"author":{"gitId":"JunWei3112"},"content":"Format: `deadline TASK_DESCRIPTION /by DATE`","lastModifiedDate":"2021-09-12"},{"lineNumber":54,"author":{"gitId":"JunWei3112"},"content":"- The date must be specified in this format: `YYYY-MM-DD`","lastModifiedDate":"2021-09-12"},{"lineNumber":55,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":56,"author":{"gitId":"JunWei3112"},"content":"Examples of usage:","lastModifiedDate":"2021-09-12"},{"lineNumber":57,"author":{"gitId":"JunWei3112"},"content":"- `deadline return book /by 2021-09-18`","lastModifiedDate":"2021-09-12"},{"lineNumber":58,"author":{"gitId":"JunWei3112"},"content":"- `deadline write argumentative essay /by 2021-09-14`","lastModifiedDate":"2021-09-12"},{"lineNumber":59,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":60,"author":{"gitId":"JunWei3112"},"content":"### `event` - Adding an Event task","lastModifiedDate":"2021-09-12"},{"lineNumber":61,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":62,"author":{"gitId":"JunWei3112"},"content":"Adds an Event task to the current task list.","lastModifiedDate":"2021-09-12"},{"lineNumber":63,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":64,"author":{"gitId":"JunWei3112"},"content":"Format: `event TASK_DESCRIPTION /at DATE`","lastModifiedDate":"2021-09-12"},{"lineNumber":65,"author":{"gitId":"JunWei3112"},"content":"- The date must be specified in this format: `YYYY-MM-DD`","lastModifiedDate":"2021-09-12"},{"lineNumber":66,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":67,"author":{"gitId":"JunWei3112"},"content":"Examples of usage:","lastModifiedDate":"2021-09-12"},{"lineNumber":68,"author":{"gitId":"JunWei3112"},"content":"- `event lunch with friends /at 2021-09-20`","lastModifiedDate":"2021-09-12"},{"lineNumber":69,"author":{"gitId":"JunWei3112"},"content":"- `event CS2101 team meeting /at 2021-09-17`","lastModifiedDate":"2021-09-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":71,"author":{"gitId":"JunWei3112"},"content":"### `todo` - Adding a Todo task","lastModifiedDate":"2021-09-12"},{"lineNumber":72,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":73,"author":{"gitId":"JunWei3112"},"content":"Adds a Todo task to the current task list.","lastModifiedDate":"2021-09-12"},{"lineNumber":74,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":75,"author":{"gitId":"JunWei3112"},"content":"Format: `todo TASK_DESCRIPTION`","lastModifiedDate":"2021-09-12"},{"lineNumber":76,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":77,"author":{"gitId":"JunWei3112"},"content":"Examples of usage:","lastModifiedDate":"2021-09-12"},{"lineNumber":78,"author":{"gitId":"JunWei3112"},"content":"- `todo buy bread`","lastModifiedDate":"2021-09-12"},{"lineNumber":79,"author":{"gitId":"JunWei3112"},"content":"- `todo prepare notes for upcoming meeting`","lastModifiedDate":"2021-09-12"},{"lineNumber":80,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":81,"author":{"gitId":"JunWei3112"},"content":"### `delete` - Deleting a task","lastModifiedDate":"2021-09-12"},{"lineNumber":82,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":83,"author":{"gitId":"JunWei3112"},"content":"Deletes the specified task from the task list.","lastModifiedDate":"2021-09-12"},{"lineNumber":84,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":85,"author":{"gitId":"JunWei3112"},"content":"Format: `delete INDEX`","lastModifiedDate":"2021-09-12"},{"lineNumber":86,"author":{"gitId":"JunWei3112"},"content":"- Deletes the task at the specified `INDEX`","lastModifiedDate":"2021-09-12"},{"lineNumber":87,"author":{"gitId":"JunWei3112"},"content":"- The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2021-09-12"},{"lineNumber":88,"author":{"gitId":"JunWei3112"},"content":"- The index must be a **positive integer** 1, 2, 3...","lastModifiedDate":"2021-09-12"},{"lineNumber":89,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":90,"author":{"gitId":"JunWei3112"},"content":"Example of usage:","lastModifiedDate":"2021-09-12"},{"lineNumber":91,"author":{"gitId":"JunWei3112"},"content":"- `delete 2` deletes the 2nd task in the task list.","lastModifiedDate":"2021-09-12"},{"lineNumber":92,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":93,"author":{"gitId":"JunWei3112"},"content":"### `done` - Marking a task as done","lastModifiedDate":"2021-09-12"},{"lineNumber":94,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":95,"author":{"gitId":"JunWei3112"},"content":"Marks the specified task as done.","lastModifiedDate":"2021-09-12"},{"lineNumber":96,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":97,"author":{"gitId":"JunWei3112"},"content":"Format: `done INDEX`","lastModifiedDate":"2021-09-12"},{"lineNumber":98,"author":{"gitId":"JunWei3112"},"content":"- Marks the task at the specified `INDEX` as done.","lastModifiedDate":"2021-09-12"},{"lineNumber":99,"author":{"gitId":"JunWei3112"},"content":"- The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2021-09-12"},{"lineNumber":100,"author":{"gitId":"JunWei3112"},"content":"- The index must be a **positive integer** 1, 2, 3...","lastModifiedDate":"2021-09-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":103,"author":{"gitId":"JunWei3112"},"content":"- `done 3` marks the 3rd task in the task list as completed.","lastModifiedDate":"2021-09-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":105,"author":{"gitId":"JunWei3112"},"content":"### `find` - Searching for certain tasks","lastModifiedDate":"2021-09-12"},{"lineNumber":106,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":107,"author":{"gitId":"JunWei3112"},"content":"Displays the tasks that contain the search keyword.","lastModifiedDate":"2021-09-12"},{"lineNumber":108,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":109,"author":{"gitId":"JunWei3112"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2021-09-12"},{"lineNumber":110,"author":{"gitId":"JunWei3112"},"content":"- Tasks that only matches the keyword partially will still be shown","lastModifiedDate":"2021-09-12"},{"lineNumber":111,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":112,"author":{"gitId":"JunWei3112"},"content":"Example of usage:","lastModifiedDate":"2021-09-12"},{"lineNumber":113,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":114,"author":{"gitId":"JunWei3112"},"content":"\u003cimg src\u003d\"https://raw.github.com/JunWei3112/ip/master/docs/FindResult.png\" width\u003d\"200\"\u003e","lastModifiedDate":"2021-09-12"},{"lineNumber":115,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":116,"author":{"gitId":"JunWei3112"},"content":"### `tag` - Tagging a task","lastModifiedDate":"2021-09-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":118,"author":{"gitId":"JunWei3112"},"content":"Tags the specified task.","lastModifiedDate":"2021-09-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":120,"author":{"gitId":"JunWei3112"},"content":"Format: `tag INDEX TAG_NAME`","lastModifiedDate":"2021-09-12"},{"lineNumber":121,"author":{"gitId":"JunWei3112"},"content":"- Tags the task at the specified `INDEX`.","lastModifiedDate":"2021-09-12"},{"lineNumber":122,"author":{"gitId":"JunWei3112"},"content":"- The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2021-09-12"},{"lineNumber":123,"author":{"gitId":"JunWei3112"},"content":"- The index must be a **positive integer** 1, 2, 3...","lastModifiedDate":"2021-09-12"},{"lineNumber":124,"author":{"gitId":"JunWei3112"},"content":"- The tag name should only consist of one word, and cannot contain spaces.","lastModifiedDate":"2021-09-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":126,"author":{"gitId":"JunWei3112"},"content":"Example of usage:","lastModifiedDate":"2021-09-12"},{"lineNumber":127,"author":{"gitId":"JunWei3112"},"content":"- `tag 1 study` tags the 1st task in the task list as `#study`","lastModifiedDate":"2021-09-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":129,"author":{"gitId":"JunWei3112"},"content":"### `bye` - Exiting the program","lastModifiedDate":"2021-09-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":131,"author":{"gitId":"JunWei3112"},"content":"Exits the program.","lastModifiedDate":"2021-09-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":133,"author":{"gitId":"JunWei3112"},"content":"Format: `bye`","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"JunWei3112":112,"-":21}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunWei3112"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"JunWei3112"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"JunWei3112"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"JunWei3112"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"JunWei3112"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"JunWei3112"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"JunWei3112"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"JunWei3112"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"JunWei3112"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"JunWei3112"},"content":" * This Duke class implements the functionalities of a chatbot,","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"JunWei3112"},"content":" * helping a person to keep track of various things.","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"JunWei3112"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"JunWei3112"},"content":"    private static final String FILE_PATH \u003d String.valueOf(Paths.get(","lastModifiedDate":"2021-08-20"},{"lineNumber":19,"author":{"gitId":"JunWei3112"},"content":"            System.getProperty(\"user.home\"), \"data\", \"dukeFile.txt\"));","lastModifiedDate":"2021-08-20"},{"lineNumber":20,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"JunWei3112"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"JunWei3112"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"JunWei3112"},"content":"    private Parser parser;","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"JunWei3112"},"content":"     * Constructor for a Duke instance.","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"JunWei3112"},"content":"    public Duke() {","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"JunWei3112"},"content":"        storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"JunWei3112"},"content":"        assert storage.load() !\u003d null : \"An ArrayList should be loadable from the storage system\";","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"JunWei3112"},"content":"        tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"JunWei3112"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"JunWei3112"},"content":"     * Listens to the user input and returns the appropriate message.","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"JunWei3112"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"JunWei3112"},"content":"     * @param input The user input.","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"JunWei3112"},"content":"     * @return A message indicating command execution or user input error.","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"JunWei3112"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"JunWei3112"},"content":"        try {","lastModifiedDate":"2021-08-15"},{"lineNumber":43,"author":{"gitId":"JunWei3112"},"content":"            Command command \u003d parser.parse(input);","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"JunWei3112"},"content":"            assert command !\u003d null : \"A valid Command instance should be provided\";","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"JunWei3112"},"content":"            return command.execute(tasks, storage);","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"JunWei3112"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"JunWei3112"},"content":"            return e.getMessage();","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"JunWei3112"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"JunWei3112"},"content":"            return \"Please specify the date in this format: yyyy-mm-dd\";","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"JunWei3112"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":51,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":52,"author":{"gitId":"JunWei3112"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"JunWei3112":51,"-":1}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunWei3112"},"content":"package duke.command;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"JunWei3112"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"JunWei3112"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"JunWei3112"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"JunWei3112"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"JunWei3112"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"JunWei3112"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"JunWei3112"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"JunWei3112"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"JunWei3112"},"content":" * This AddCommand class represents a command to add a task to the task list.","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"JunWei3112"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"JunWei3112"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"JunWei3112"},"content":"    private String taskType;","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"JunWei3112"},"content":"    private String task;","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"JunWei3112"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"JunWei3112"},"content":"     * Constructor for an AddCommand instance that takes in a task type and task.","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"JunWei3112"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"JunWei3112"},"content":"     * @param taskType The type of the task to be added.","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"JunWei3112"},"content":"     * @param task The description of the task to be added.","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"JunWei3112"},"content":"    public AddCommand(String taskType, String task) {","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"JunWei3112"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"JunWei3112"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"JunWei3112"},"content":"     * Constructor for an AddCommand instance that takes in a task type, task and date.","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"JunWei3112"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"JunWei3112"},"content":"     * @param taskType The type of the task to be added.","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"JunWei3112"},"content":"     * @param task The description of the task to be added.","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"JunWei3112"},"content":"     * @param date The date in which the task is due by / held on.","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"JunWei3112"},"content":"    public AddCommand(String taskType, String task, LocalDate date) {","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"JunWei3112"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"JunWei3112"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"JunWei3112"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"JunWei3112"},"content":"     * Adds a task to the task list and updates the hard disk of the change.","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"JunWei3112"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"JunWei3112"},"content":"     * @param tasks The task list.","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"JunWei3112"},"content":"     * @param storage The storage system of the application.","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"JunWei3112"},"content":"     * @return Completion message of this command.","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"JunWei3112"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"JunWei3112"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"JunWei3112"},"content":"        // Adds the correct Task instance to the TaskList instance","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"JunWei3112"},"content":"        Task taskToBeAdded;","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"JunWei3112"},"content":"        if (taskType.equals(\"todo\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"JunWei3112"},"content":"            taskToBeAdded \u003d new Todo(task);","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"JunWei3112"},"content":"        } else if (taskType.equals(\"deadline\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"JunWei3112"},"content":"            taskToBeAdded \u003d new Deadline(task, date);","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"JunWei3112"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"JunWei3112"},"content":"            taskToBeAdded \u003d new Event(task, date);","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"JunWei3112"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"JunWei3112"},"content":"        tasks.addTask(taskToBeAdded);","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"JunWei3112"},"content":"        // Constructs a message indicating the task has been successfully added to the list","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"JunWei3112"},"content":"        String message \u003d \"Got it. I\u0027ve added this task:\\n\" + \"  \" + taskToBeAdded + \"\\nNow you have \";","lastModifiedDate":"2021-09-05"},{"lineNumber":67,"author":{"gitId":"JunWei3112"},"content":"        int numberOfTasks \u003d tasks.getNumberOfTasks();","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"JunWei3112"},"content":"        assert numberOfTasks \u003e\u003d 0 : \"Number of tasks should not be negative\";","lastModifiedDate":"2021-09-05"},{"lineNumber":69,"author":{"gitId":"JunWei3112"},"content":"        if (numberOfTasks \u003c\u003d 1) {","lastModifiedDate":"2021-09-05"},{"lineNumber":70,"author":{"gitId":"JunWei3112"},"content":"            message +\u003d numberOfTasks + \" task in the list.\";","lastModifiedDate":"2021-09-05"},{"lineNumber":71,"author":{"gitId":"JunWei3112"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"JunWei3112"},"content":"            message +\u003d numberOfTasks + \" tasks in the list.\";","lastModifiedDate":"2021-09-05"},{"lineNumber":73,"author":{"gitId":"JunWei3112"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"JunWei3112"},"content":"        // Saves the updated task list to the hard drive","lastModifiedDate":"2021-09-05"},{"lineNumber":76,"author":{"gitId":"JunWei3112"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"JunWei3112"},"content":"        return message;","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"JunWei3112"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"JunWei3112":80}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunWei3112"},"content":"package duke.command;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"JunWei3112"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"JunWei3112"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"JunWei3112"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"JunWei3112"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"JunWei3112"},"content":" * This abstract Command class represents an executable command.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"JunWei3112"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"JunWei3112"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"JunWei3112"},"content":"     * Executes the command.","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"JunWei3112"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"JunWei3112"},"content":"     * @param tasks The task list.","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"JunWei3112"},"content":"     * @param storage The storage system of the application.","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"JunWei3112"},"content":"     * @throws DukeException If the command cannot be executed.","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"JunWei3112"},"content":"    public abstract String execute(TaskList tasks, Storage storage) throws DukeException;","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"JunWei3112"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"JunWei3112":20}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunWei3112"},"content":"package duke.command;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"JunWei3112"},"content":"import duke.exception.TaskIndexOutOfBoundsException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"JunWei3112"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"JunWei3112"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"JunWei3112"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"JunWei3112"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"JunWei3112"},"content":" * This DeleteCommand class represents a command to delete a task from the task list.","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"JunWei3112"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"JunWei3112"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"JunWei3112"},"content":"    private int taskId;","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"JunWei3112"},"content":"     * Constructor for a DeleteCommand instance that takes in a task id.","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"JunWei3112"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"JunWei3112"},"content":"     * @param taskId The position of the task in the task list.","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"JunWei3112"},"content":"    public DeleteCommand(int taskId) {","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"JunWei3112"},"content":"        this.taskId \u003d taskId;","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"JunWei3112"},"content":"     * Deletes a task from the task list and updates the hard disk of the change.","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"JunWei3112"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"JunWei3112"},"content":"     * @param tasks The task list.","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"JunWei3112"},"content":"     * @param storage The storage system of the application.","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"JunWei3112"},"content":"     * @return Completion message of this command.","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"JunWei3112"},"content":"     * @throws TaskIndexOutOfBoundsException If the task list is accessed with an illegal index.","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"JunWei3112"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"JunWei3112"},"content":"    public String execute(TaskList tasks, Storage storage) throws TaskIndexOutOfBoundsException {","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"JunWei3112"},"content":"        Task removedTask \u003d tasks.deleteTask(taskId);","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"JunWei3112"},"content":"        assert removedTask !\u003d null : \"The deleted task should be returned\";","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"JunWei3112"},"content":"        // Constructs a message indicating the task has been successfully deleted from the list","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"JunWei3112"},"content":"        String message \u003d \"Got it! I\u0027ve removed this task:\\n\" + \"  \" + removedTask + \"\\nNow you have \";","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"JunWei3112"},"content":"        int numberOfTasks \u003d tasks.getNumberOfTasks();","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"JunWei3112"},"content":"        assert numberOfTasks \u003e\u003d 0 : \"Number of tasks should not be negative\";","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"JunWei3112"},"content":"        if (numberOfTasks \u003c\u003d 1) {","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"JunWei3112"},"content":"            message +\u003d numberOfTasks + \" task in the list.\";","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"JunWei3112"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"JunWei3112"},"content":"            message +\u003d numberOfTasks + \" tasks in the list.\";","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"JunWei3112"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"JunWei3112"},"content":"        // Saves the updated task list to the hard drive","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"JunWei3112"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"JunWei3112"},"content":"        return message;","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"JunWei3112"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"JunWei3112":52}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunWei3112"},"content":"package duke.command;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"JunWei3112"},"content":"import duke.exception.TaskAlreadyDoneException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"JunWei3112"},"content":"import duke.exception.TaskIndexOutOfBoundsException;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"JunWei3112"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"JunWei3112"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"JunWei3112"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"JunWei3112"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"JunWei3112"},"content":" * This DoneCommand class represents a command to mark a task as done.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"JunWei3112"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"JunWei3112"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"JunWei3112"},"content":"    private int taskId;","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"JunWei3112"},"content":"     * Constructor for a DoneCommand instance that takes in a task id.","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"JunWei3112"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"JunWei3112"},"content":"     * @param taskId The position of the task in the task list.","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"JunWei3112"},"content":"    public DoneCommand(int taskId) {","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"JunWei3112"},"content":"        this.taskId \u003d taskId;","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"JunWei3112"},"content":"     * Marks a task as done and updates the hard disk of the change.","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"JunWei3112"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"JunWei3112"},"content":"     * @param tasks The task list.","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"JunWei3112"},"content":"     * @param storage The storage system of the application.","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"JunWei3112"},"content":"     * @return Completion message of this command.","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"JunWei3112"},"content":"     * @throws TaskIndexOutOfBoundsException If the task list is accessed with an illegal index.","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"JunWei3112"},"content":"     * @throws TaskAlreadyDoneException If the task has already been marked as done.","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"JunWei3112"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"JunWei3112"},"content":"    public String execute(TaskList tasks, Storage storage) throws TaskIndexOutOfBoundsException,","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"JunWei3112"},"content":"            TaskAlreadyDoneException {","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"JunWei3112"},"content":"        Task completedTask \u003d tasks.markAsDone(this.taskId);","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"JunWei3112"},"content":"        assert completedTask !\u003d null : \"The task should be marked as done and returned accordingly\";","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"JunWei3112"},"content":"        // Saves the updated task list to the hard drive","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"JunWei3112"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"JunWei3112"},"content":"        // Returns a message indicating the task has been successfully marked as done","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"JunWei3112"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n  \" + completedTask.toString();","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"JunWei3112"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"JunWei3112":46}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunWei3112"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"JunWei3112"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"JunWei3112"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"JunWei3112"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"JunWei3112"},"content":" * This FindCommand class represents a command to find tasks using a keyword.","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"JunWei3112"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"JunWei3112"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"JunWei3112"},"content":"    private String keyword;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"JunWei3112"},"content":"     * Constructor for a FindCommand instance that takes in a keyword.","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"JunWei3112"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"JunWei3112"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"JunWei3112"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"JunWei3112"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"JunWei3112"},"content":"     * Displays the matching tasks in the task list to the user.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"JunWei3112"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"JunWei3112"},"content":"     * @param tasks The task list.","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"JunWei3112"},"content":"     * @param storage The storage system of the application.","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"JunWei3112"},"content":"     * @return Completion message of this command.","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"JunWei3112"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"JunWei3112"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"JunWei3112"},"content":"        TaskList tasksWithMatchingKeyword \u003d tasks.findTasksWithKeyword(keyword);","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"JunWei3112"},"content":"        assert tasksWithMatchingKeyword !\u003d null : \"A TaskList instance should be returned\";","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"JunWei3112"},"content":"        return \"Here are the matching tasks in your list:\\n\" + tasksWithMatchingKeyword.toString();","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"JunWei3112"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"JunWei3112":35}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunWei3112"},"content":"package duke.command;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"JunWei3112"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"JunWei3112"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"JunWei3112"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"JunWei3112"},"content":" * This ListCommand class represents a command to list the current tasks in the task list.","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"JunWei3112"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"JunWei3112"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"JunWei3112"},"content":"     * Displays the current tasks in the task list to the user.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"JunWei3112"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"JunWei3112"},"content":"     * @param tasks The task list.","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"JunWei3112"},"content":"     * @param storage The storage system of the application.","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"JunWei3112"},"content":"     * @return Completion message of this command.","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"JunWei3112"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"JunWei3112"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"JunWei3112"},"content":"        return \"Here are the tasks in your list:\\n\" + tasks.toString();","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"JunWei3112"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"JunWei3112":22}},{"path":"src/main/java/duke/command/TagCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunWei3112"},"content":"package duke.command;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"JunWei3112"},"content":"import duke.exception.TaskIndexOutOfBoundsException;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"JunWei3112"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"JunWei3112"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"JunWei3112"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"JunWei3112"},"content":"/**","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"JunWei3112"},"content":" * This TagCommand class represents a command to tag a task in the task list.","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"JunWei3112"},"content":" */","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"JunWei3112"},"content":"public class TagCommand extends Command {","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"JunWei3112"},"content":"    private int taskId;","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"JunWei3112"},"content":"    private String tagName;","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"JunWei3112"},"content":"     * Constructor for a TagCommand instance that takes in a task id and tag name.","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"JunWei3112"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"JunWei3112"},"content":"     * @param taskId The position of the task in the task list.","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"JunWei3112"},"content":"     * @param tagName The name of the tag given to the task.","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"JunWei3112"},"content":"    public TagCommand(int taskId, String tagName) {","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"JunWei3112"},"content":"        this.taskId \u003d taskId;","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"JunWei3112"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"JunWei3112"},"content":"     * Tags a task and updates the hard disk of the change.","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"JunWei3112"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"JunWei3112"},"content":"     * @param tasks The task list.","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"JunWei3112"},"content":"     * @param storage The storage system of the application.","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"JunWei3112"},"content":"     * @return Completion message of this command.","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"JunWei3112"},"content":"     * @throws TaskIndexOutOfBoundsException If the task list is accessed with an illegal index.","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"JunWei3112"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"JunWei3112"},"content":"    public String execute(TaskList tasks, Storage storage) throws TaskIndexOutOfBoundsException {","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"JunWei3112"},"content":"        Task taggedTask \u003d tasks.tagTask(taskId, tagName);","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"JunWei3112"},"content":"        assert taggedTask !\u003d null : \"The task should be tagged and returned accordingly\";","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"JunWei3112"},"content":"        // Saves the updated task list to the hard drive","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"JunWei3112"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"JunWei3112"},"content":"        // Returns a message indicating the task has been successfully tagged","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"JunWei3112"},"content":"        return \"Nice! I\u0027ve tagged this task:\\n  \" + taggedTask.toString();","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"JunWei3112"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"JunWei3112":46}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunWei3112"},"content":"package duke.exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"JunWei3112"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"JunWei3112"},"content":" * Thrown to indicate that the chatbot has received an invalid command,","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"JunWei3112"},"content":" * or unable to execute a given command.","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"JunWei3112"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"JunWei3112"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"JunWei3112"},"content":"     * Constructs a DukeException with the specified detail message.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"JunWei3112"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"JunWei3112"},"content":"     * @param message The detail message.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"JunWei3112"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"JunWei3112"},"content":"        super(message);","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"JunWei3112"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"JunWei3112":17}},{"path":"src/main/java/duke/exception/EmptyTaskDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunWei3112"},"content":"package duke.exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"JunWei3112"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"JunWei3112"},"content":" * Thrown to indicate that the task description has not been provided by the","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"JunWei3112"},"content":" * user when attempting to add a task to the task list.","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"JunWei3112"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"JunWei3112"},"content":"public class EmptyTaskDescriptionException extends DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"JunWei3112"},"content":"     * Constructs an EmptyTaskDescriptionException with an argument","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"JunWei3112"},"content":"     * indicating the specified task type.","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"JunWei3112"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"JunWei3112"},"content":"     * @param taskType The type of the task to be added.","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"JunWei3112"},"content":"    public EmptyTaskDescriptionException(String taskType) {","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"JunWei3112"},"content":"        super(\"The description of a \" + taskType + \" cannot be empty!\");","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"JunWei3112"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"JunWei3112":18}},{"path":"src/main/java/duke/exception/MissingKeywordException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunWei3112"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"JunWei3112"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"JunWei3112"},"content":" * Thrown to indicate that the keyword is missing when the user enters","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"JunWei3112"},"content":" * a command that finds tasks with the matching keyword.","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"JunWei3112"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"JunWei3112"},"content":"public class MissingKeywordException extends DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"JunWei3112"},"content":"     * Constructs a MissingKeywordException with a detail message.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"JunWei3112"},"content":"    public MissingKeywordException() {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"JunWei3112"},"content":"        super(\"Keyword is not specified!\\nPlease follow this format: [find] [keyword]\");","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"JunWei3112"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"JunWei3112":15}},{"path":"src/main/java/duke/exception/MissingTagDetailsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunWei3112"},"content":"package duke.exception;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"JunWei3112"},"content":"/**","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"JunWei3112"},"content":" * Thrown to indicate that either the task index or tag name is missing when the user enters","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"JunWei3112"},"content":" * a command to tag a task in the task list.","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"JunWei3112"},"content":" */","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"JunWei3112"},"content":"public class MissingTagDetailsException extends DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"JunWei3112"},"content":"     * Constructs a MissingTagDetailsException with a detail message.","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"JunWei3112"},"content":"    public MissingTagDetailsException() {","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"JunWei3112"},"content":"        super(\"Task index/Tag name is not specified!\\n\" + \"Please follow this format: tag [index] [tag name]\");","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"JunWei3112"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"JunWei3112":15}},{"path":"src/main/java/duke/exception/MissingTaskIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunWei3112"},"content":"package duke.exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"JunWei3112"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"JunWei3112"},"content":" * Thrown to indicate that the task index is missing when the user enters","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"JunWei3112"},"content":" * a command that requires an index to access the task list.","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"JunWei3112"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"JunWei3112"},"content":"public class MissingTaskIndexException extends DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"JunWei3112"},"content":"     * Constructs a MissingTaskIndexException with a detail message.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"JunWei3112"},"content":"    public MissingTaskIndexException() {","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"JunWei3112"},"content":"        super(\"Task index is not specified!\\n\" + \"Please follow this format: [done/delete] [index]\");","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"JunWei3112"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"JunWei3112":15}},{"path":"src/main/java/duke/exception/TaskAlreadyDoneException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunWei3112"},"content":"package duke.exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"JunWei3112"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"JunWei3112"},"content":" * Thrown to indicate that the task has already been marked as done.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"JunWei3112"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"JunWei3112"},"content":"public class TaskAlreadyDoneException extends DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"JunWei3112"},"content":"     * Constructs a TaskAlreadyDoneException with a detail message.","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"JunWei3112"},"content":"    public TaskAlreadyDoneException() {","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"JunWei3112"},"content":"        super(\"This task has already been done!\");","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"JunWei3112"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"JunWei3112":14}},{"path":"src/main/java/duke/exception/TaskIndexOutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunWei3112"},"content":"package duke.exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"JunWei3112"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"JunWei3112"},"content":" * Thrown to indicate that the task list is accessed with an illegal index.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"JunWei3112"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"JunWei3112"},"content":"public class TaskIndexOutOfBoundsException extends DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"JunWei3112"},"content":"     * Constructs a TaskIndexOutOfBoundsException with a detail message.","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"JunWei3112"},"content":"    public TaskIndexOutOfBoundsException() {","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"JunWei3112"},"content":"        super(\"Invalid task index specified!\");","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"JunWei3112"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"JunWei3112":14}},{"path":"src/main/java/duke/exception/TimeNotSpecifiedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunWei3112"},"content":"package duke.exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"JunWei3112"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"JunWei3112"},"content":" * Thrown to indicate that the time has not been provided by the user","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"JunWei3112"},"content":" * when attempting to add a Deadline/Event to the task list.","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"JunWei3112"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"JunWei3112"},"content":"public class TimeNotSpecifiedException extends DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"JunWei3112"},"content":"     * Constructs a TimeNotSpecifiedException with an argument","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"JunWei3112"},"content":"     * indicating the specified preposition (by/at).","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"JunWei3112"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"JunWei3112"},"content":"     * @param taskPreposition The preposition before the date/time.","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"JunWei3112"},"content":"    public TimeNotSpecifiedException(String taskPreposition) {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"JunWei3112"},"content":"        super(\"The date/time is not specified!\\n\"","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"JunWei3112"},"content":"                + \"Please follow this format: [Task]\" + taskPreposition + \"[Date/Time]\");","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"JunWei3112"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"JunWei3112":19}},{"path":"src/main/java/duke/exception/UnrecognisedCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunWei3112"},"content":"package duke.exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"JunWei3112"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"JunWei3112"},"content":" * Thrown to indicate that the command is not recognised by the bot.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"JunWei3112"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"JunWei3112"},"content":"public class UnrecognisedCommandException extends DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"JunWei3112"},"content":"     * Constructs an UnrecognisedCommandException with a detail message.","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"JunWei3112"},"content":"    public UnrecognisedCommandException() {","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"JunWei3112"},"content":"        super(\"This command is not recognised! Please enter a valid command!\");","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"JunWei3112"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"JunWei3112":14}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunWei3112"},"content":"package duke.gui;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"JunWei3112"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"JunWei3112"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"JunWei3112"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"JunWei3112"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"JunWei3112"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"JunWei3112"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"JunWei3112"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"JunWei3112"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"JunWei3112"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"JunWei3112"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"JunWei3112"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"JunWei3112"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"JunWei3112"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"JunWei3112"},"content":" * This class represents a dialog box consisting of an ImageView to represent the","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"JunWei3112"},"content":" * speaker\u0027s face and a label containing text from the speaker.","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"JunWei3112"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"JunWei3112"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"JunWei3112"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"JunWei3112"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"JunWei3112"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"JunWei3112"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"JunWei3112"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"JunWei3112"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"JunWei3112"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"JunWei3112"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"JunWei3112"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"JunWei3112"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"JunWei3112"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"JunWei3112"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"JunWei3112"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"JunWei3112"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"JunWei3112"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"JunWei3112"},"content":"    private void flip() {","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"JunWei3112"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"JunWei3112"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"JunWei3112"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"JunWei3112"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"JunWei3112"},"content":"     * Creates a dialog box for the user.","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"JunWei3112"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"JunWei3112"},"content":"     * @param text The text inputted by the user.","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"JunWei3112"},"content":"     * @param img The image representing the user.","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"JunWei3112"},"content":"     * @return A user dialog box.","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"JunWei3112"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"JunWei3112"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"JunWei3112"},"content":"     * Creates a dialog box for Duke.","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"JunWei3112"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"JunWei3112"},"content":"     * @param text The text returned by Duke.","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"JunWei3112"},"content":"     * @param img The image representing Duke.","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"JunWei3112"},"content":"     * @return A flipped dialog box for Duke.","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"JunWei3112"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"JunWei3112"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"JunWei3112"},"content":"        db.flip();","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"JunWei3112"},"content":"        return db;","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"JunWei3112"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"JunWei3112":72}},{"path":"src/main/java/duke/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunWei3112"},"content":"package duke.gui;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"JunWei3112"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"JunWei3112"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"JunWei3112"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"JunWei3112"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"JunWei3112"},"content":"public class Launcher {","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"JunWei3112"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"JunWei3112"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"JunWei3112"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"JunWei3112":12}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunWei3112"},"content":"package duke.gui;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"JunWei3112"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"JunWei3112"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"JunWei3112"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"JunWei3112"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"JunWei3112"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"JunWei3112"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"JunWei3112"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"JunWei3112"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"JunWei3112"},"content":" * This Main class serves as a GUI for Duke, bridging between","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"JunWei3112"},"content":" * the existing logic in Duke and the UI in MainWindow.","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"JunWei3112"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"JunWei3112"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"JunWei3112"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"JunWei3112"},"content":"     * Brings up the window for the GUI.","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"JunWei3112"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"JunWei3112"},"content":"     * @param stage The primary stage that JavaFX provides.","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"JunWei3112"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"JunWei3112"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"JunWei3112"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"JunWei3112"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2021-09-12"},{"lineNumber":29,"author":{"gitId":"JunWei3112"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"JunWei3112"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"JunWei3112"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"JunWei3112"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"JunWei3112"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"JunWei3112"},"content":"            stage.show();","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"JunWei3112"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"JunWei3112"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"JunWei3112"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"JunWei3112"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"JunWei3112":39}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunWei3112"},"content":"package duke.gui;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"JunWei3112"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"JunWei3112"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"JunWei3112"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"JunWei3112"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"JunWei3112"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"JunWei3112"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"JunWei3112"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"JunWei3112"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"JunWei3112"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"JunWei3112"},"content":" * Provides the layout for the other controls.","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"JunWei3112"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"JunWei3112"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"JunWei3112"},"content":"    private static final String MESSAGE_GREETING \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\";","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"JunWei3112"},"content":"    private static final String MESSAGE_GOODBYE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"JunWei3112"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"JunWei3112"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"JunWei3112"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"JunWei3112"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"JunWei3112"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"JunWei3112"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"JunWei3112"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"JunWei3112"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"JunWei3112"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.png\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"JunWei3112"},"content":"     * Initializes the layout.","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"JunWei3112"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"JunWei3112"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"JunWei3112"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"JunWei3112"},"content":"                DialogBox.getDukeDialog(MESSAGE_GREETING, dukeImage));","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"JunWei3112"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"JunWei3112"},"content":"     * Specifies the Duke instance to handle the logic behind the GUI.","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"JunWei3112"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"JunWei3112"},"content":"     * @param d The Duke instance to implement the logic.","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"JunWei3112"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"JunWei3112"},"content":"        duke \u003d d;","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"JunWei3112"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"JunWei3112"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"JunWei3112"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"JunWei3112"},"content":"        // Quits the GUI if the user types \"bye\"","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"JunWei3112"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"JunWei3112"},"content":"            dialogContainer.getChildren().add(","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"JunWei3112"},"content":"                    DialogBox.getDukeDialog(MESSAGE_GOODBYE, dukeImage));","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"JunWei3112"},"content":"            userInput.clear();","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"JunWei3112"},"content":"            Platform.exit();","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"JunWei3112"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"JunWei3112"},"content":"        // Executes the appropriate command and displays a message to user","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"JunWei3112"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"JunWei3112"},"content":"        assert !response.isEmpty() : \"A response should be provided to the user\";","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"JunWei3112"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"JunWei3112"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"JunWei3112"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"JunWei3112"},"content":"        );","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"JunWei3112"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"JunWei3112"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"JunWei3112":72}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunWei3112"},"content":"package duke.parser;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"JunWei3112"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"JunWei3112"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"JunWei3112"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"JunWei3112"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"JunWei3112"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"JunWei3112"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"JunWei3112"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"JunWei3112"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"JunWei3112"},"content":"import duke.command.TagCommand;","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"JunWei3112"},"content":"import duke.exception.EmptyTaskDescriptionException;","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"JunWei3112"},"content":"import duke.exception.MissingKeywordException;","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"JunWei3112"},"content":"import duke.exception.MissingTagDetailsException;","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"JunWei3112"},"content":"import duke.exception.MissingTaskIndexException;","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"JunWei3112"},"content":"import duke.exception.TimeNotSpecifiedException;","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"JunWei3112"},"content":"import duke.exception.UnrecognisedCommandException;","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"JunWei3112"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"JunWei3112"},"content":" * Parses user input.","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"JunWei3112"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"JunWei3112"},"content":"public class Parser {","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"JunWei3112"},"content":"     * Parses user input into a command for execution.","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"JunWei3112"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"JunWei3112"},"content":"     * @param command The user input string.","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"JunWei3112"},"content":"     * @return A command to be executed based on the user input.","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"JunWei3112"},"content":"     * @throws UnrecognisedCommandException If the entered command is not recognised.","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"JunWei3112"},"content":"     * @throws MissingTaskIndexException If the task index is not provided.","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"JunWei3112"},"content":"     * @throws EmptyTaskDescriptionException If the task description is not provided.","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"JunWei3112"},"content":"     * @throws TimeNotSpecifiedException If the date is not provided.","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"JunWei3112"},"content":"     * @throws DateTimeParseException If the date cannot be parsed into a LocalDate instance.","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"JunWei3112"},"content":"     * @throws MissingKeywordException If the keyword is missing.","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"JunWei3112"},"content":"    public Command parse(String command) throws UnrecognisedCommandException, MissingTaskIndexException,","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"JunWei3112"},"content":"            EmptyTaskDescriptionException, TimeNotSpecifiedException, DateTimeParseException,","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"JunWei3112"},"content":"            MissingKeywordException, MissingTagDetailsException {","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"JunWei3112"},"content":"        // Splits the string on spaces","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"JunWei3112"},"content":"        String[] wordsArray \u003d command.split(\" \");","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"JunWei3112"},"content":"        String firstWord \u003d wordsArray[0];","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"JunWei3112"},"content":"        // Acts accordingly based on the first word of the user input","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"JunWei3112"},"content":"        if (wordsArray.length \u003d\u003d 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"JunWei3112"},"content":"            throw new UnrecognisedCommandException();","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"JunWei3112"},"content":"        } else if (firstWord.equals(\"list\")) {","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"JunWei3112"},"content":"            return new ListCommand();","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"JunWei3112"},"content":"        } else if (firstWord.equals(\"done\")) {","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"JunWei3112"},"content":"            return markTaskAsDone(command);","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"JunWei3112"},"content":"        } else if (firstWord.equals(\"delete\")) {","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"JunWei3112"},"content":"            return deleteTask(command);","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"JunWei3112"},"content":"        } else if (firstWord.equals(\"find\")) {","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"JunWei3112"},"content":"            return findTasks(command);","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"JunWei3112"},"content":"        } else if (firstWord.equals(\"tag\")) {","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"JunWei3112"},"content":"            return tagTask(command);","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"JunWei3112"},"content":"        } else if (firstWord.equals(\"todo\") || firstWord.equals(\"event\") || firstWord.equals(\"deadline\")) {","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"JunWei3112"},"content":"            return addTask(command);","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"JunWei3112"},"content":"        } else {","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"JunWei3112"},"content":"            throw new UnrecognisedCommandException();","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"JunWei3112"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"JunWei3112"},"content":"    private DoneCommand markTaskAsDone(String userInput) throws MissingTaskIndexException {","lastModifiedDate":"2021-09-02"},{"lineNumber":65,"author":{"gitId":"JunWei3112"},"content":"        String[] wordsArray \u003d userInput.split(\" \");","lastModifiedDate":"2021-09-02"},{"lineNumber":66,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":67,"author":{"gitId":"JunWei3112"},"content":"        // Checks for extra user input, and if the second word is a number","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"JunWei3112"},"content":"        if (wordsArray.length !\u003d 2 || !wordsArray[1].matches(\"-?\\\\d+(\\\\.\\\\d+)?\")) {","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"JunWei3112"},"content":"            throw new MissingTaskIndexException();","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"JunWei3112"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":72,"author":{"gitId":"JunWei3112"},"content":"        int taskId \u003d Integer.valueOf(wordsArray[1]) - 1;","lastModifiedDate":"2021-09-05"},{"lineNumber":73,"author":{"gitId":"JunWei3112"},"content":"        return new DoneCommand(taskId);","lastModifiedDate":"2021-09-05"},{"lineNumber":74,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":75,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":76,"author":{"gitId":"JunWei3112"},"content":"    private DeleteCommand deleteTask(String userInput) throws MissingTaskIndexException {","lastModifiedDate":"2021-09-02"},{"lineNumber":77,"author":{"gitId":"JunWei3112"},"content":"        String[] wordsArray \u003d userInput.split(\" \");","lastModifiedDate":"2021-09-02"},{"lineNumber":78,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":79,"author":{"gitId":"JunWei3112"},"content":"        // Checks for extra user input, and if the second word is a number","lastModifiedDate":"2021-09-05"},{"lineNumber":80,"author":{"gitId":"JunWei3112"},"content":"        if (wordsArray.length !\u003d 2 || !wordsArray[1].matches(\"-?\\\\d+(\\\\.\\\\d+)?\")) {","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"JunWei3112"},"content":"            throw new MissingTaskIndexException();","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"JunWei3112"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":84,"author":{"gitId":"JunWei3112"},"content":"        int taskId \u003d Integer.valueOf(wordsArray[1]) - 1;","lastModifiedDate":"2021-09-05"},{"lineNumber":85,"author":{"gitId":"JunWei3112"},"content":"        return new DeleteCommand(taskId);","lastModifiedDate":"2021-09-05"},{"lineNumber":86,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":87,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":88,"author":{"gitId":"JunWei3112"},"content":"    private FindCommand findTasks(String userInput) throws MissingKeywordException {","lastModifiedDate":"2021-09-02"},{"lineNumber":89,"author":{"gitId":"JunWei3112"},"content":"        String[] wordsArray \u003d userInput.split(\" \");","lastModifiedDate":"2021-09-02"},{"lineNumber":90,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":91,"author":{"gitId":"JunWei3112"},"content":"        // Checks for extra user input","lastModifiedDate":"2021-09-05"},{"lineNumber":92,"author":{"gitId":"JunWei3112"},"content":"        if (wordsArray.length !\u003d 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"JunWei3112"},"content":"            throw new MissingKeywordException();","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"JunWei3112"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":96,"author":{"gitId":"JunWei3112"},"content":"        String searchTerm \u003d wordsArray[1];","lastModifiedDate":"2021-09-05"},{"lineNumber":97,"author":{"gitId":"JunWei3112"},"content":"        return new FindCommand(searchTerm);","lastModifiedDate":"2021-09-05"},{"lineNumber":98,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":99,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":100,"author":{"gitId":"JunWei3112"},"content":"    private TagCommand tagTask(String userInput) throws MissingTagDetailsException {","lastModifiedDate":"2021-09-05"},{"lineNumber":101,"author":{"gitId":"JunWei3112"},"content":"        String[] wordsArray \u003d userInput.split(\" \");","lastModifiedDate":"2021-09-05"},{"lineNumber":102,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":103,"author":{"gitId":"JunWei3112"},"content":"        // Checks if the task index and tag name are provided","lastModifiedDate":"2021-09-05"},{"lineNumber":104,"author":{"gitId":"JunWei3112"},"content":"        if (wordsArray.length !\u003d 3 || !wordsArray[1].matches(\"-?\\\\d+(\\\\.\\\\d+)?\")","lastModifiedDate":"2021-09-05"},{"lineNumber":105,"author":{"gitId":"JunWei3112"},"content":"                || wordsArray[2].trim().isEmpty()) {","lastModifiedDate":"2021-09-05"},{"lineNumber":106,"author":{"gitId":"JunWei3112"},"content":"            throw new MissingTagDetailsException();","lastModifiedDate":"2021-09-05"},{"lineNumber":107,"author":{"gitId":"JunWei3112"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":108,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":109,"author":{"gitId":"JunWei3112"},"content":"        int taskId \u003d Integer.valueOf(wordsArray[1]) - 1;","lastModifiedDate":"2021-09-05"},{"lineNumber":110,"author":{"gitId":"JunWei3112"},"content":"        String tagName \u003d wordsArray[2];","lastModifiedDate":"2021-09-05"},{"lineNumber":111,"author":{"gitId":"JunWei3112"},"content":"        return new TagCommand(taskId, tagName);","lastModifiedDate":"2021-09-05"},{"lineNumber":112,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":113,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":114,"author":{"gitId":"JunWei3112"},"content":"    private AddCommand addTask(String userInput) throws EmptyTaskDescriptionException,","lastModifiedDate":"2021-09-02"},{"lineNumber":115,"author":{"gitId":"JunWei3112"},"content":"            TimeNotSpecifiedException, DateTimeParseException {","lastModifiedDate":"2021-09-02"},{"lineNumber":116,"author":{"gitId":"JunWei3112"},"content":"        String[] wordsArray \u003d userInput.split(\" \");","lastModifiedDate":"2021-09-02"},{"lineNumber":117,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":118,"author":{"gitId":"JunWei3112"},"content":"        // Checks if a task description is provided by the user","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"JunWei3112"},"content":"        String taskType \u003d wordsArray[0];","lastModifiedDate":"2021-09-05"},{"lineNumber":120,"author":{"gitId":"JunWei3112"},"content":"        int indexOfSpaceChar \u003d userInput.indexOf(\" \");","lastModifiedDate":"2021-09-02"},{"lineNumber":121,"author":{"gitId":"JunWei3112"},"content":"        if (indexOfSpaceChar \u003d\u003d -1) {","lastModifiedDate":"2021-08-21"},{"lineNumber":122,"author":{"gitId":"JunWei3112"},"content":"            throw new EmptyTaskDescriptionException(taskType);","lastModifiedDate":"2021-08-21"},{"lineNumber":123,"author":{"gitId":"JunWei3112"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":124,"author":{"gitId":"JunWei3112"},"content":"        String taskDescription \u003d userInput.substring(indexOfSpaceChar + 1);","lastModifiedDate":"2021-09-02"},{"lineNumber":125,"author":{"gitId":"JunWei3112"},"content":"        if (taskDescription.trim().isEmpty()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":126,"author":{"gitId":"JunWei3112"},"content":"            throw new EmptyTaskDescriptionException(taskType);","lastModifiedDate":"2021-08-21"},{"lineNumber":127,"author":{"gitId":"JunWei3112"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":128,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":129,"author":{"gitId":"JunWei3112"},"content":"        // Parsing the user input based on the task type","lastModifiedDate":"2021-08-23"},{"lineNumber":130,"author":{"gitId":"JunWei3112"},"content":"        if (taskType.equals(\"deadline\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":131,"author":{"gitId":"JunWei3112"},"content":"            return addDeadline(taskDescription);","lastModifiedDate":"2021-09-05"},{"lineNumber":132,"author":{"gitId":"JunWei3112"},"content":"        } else if (taskType.equals(\"event\")) {","lastModifiedDate":"2021-09-05"},{"lineNumber":133,"author":{"gitId":"JunWei3112"},"content":"            return addEvent(taskDescription);","lastModifiedDate":"2021-09-05"},{"lineNumber":134,"author":{"gitId":"JunWei3112"},"content":"        } else {","lastModifiedDate":"2021-09-05"},{"lineNumber":135,"author":{"gitId":"JunWei3112"},"content":"            return addTodo(taskDescription);","lastModifiedDate":"2021-09-05"},{"lineNumber":136,"author":{"gitId":"JunWei3112"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":137,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":138,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":139,"author":{"gitId":"JunWei3112"},"content":"    private AddCommand addDeadline(String taskDescription) throws TimeNotSpecifiedException,","lastModifiedDate":"2021-09-05"},{"lineNumber":140,"author":{"gitId":"JunWei3112"},"content":"            DateTimeParseException {","lastModifiedDate":"2021-09-05"},{"lineNumber":141,"author":{"gitId":"JunWei3112"},"content":"        if (!taskDescription.contains(\" /by \")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":142,"author":{"gitId":"JunWei3112"},"content":"            throw new TimeNotSpecifiedException(\" /by \");","lastModifiedDate":"2021-08-21"},{"lineNumber":143,"author":{"gitId":"JunWei3112"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":144,"author":{"gitId":"JunWei3112"},"content":"        String[] descriptionArr \u003d taskDescription.split(\" /by \");","lastModifiedDate":"2021-08-21"},{"lineNumber":145,"author":{"gitId":"JunWei3112"},"content":"        String task \u003d descriptionArr[0];","lastModifiedDate":"2021-09-05"},{"lineNumber":146,"author":{"gitId":"JunWei3112"},"content":"        String deadline \u003d descriptionArr[1];","lastModifiedDate":"2021-08-21"},{"lineNumber":147,"author":{"gitId":"JunWei3112"},"content":"        if (deadline.trim().isEmpty()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":148,"author":{"gitId":"JunWei3112"},"content":"            throw new TimeNotSpecifiedException(\" /by \");","lastModifiedDate":"2021-08-21"},{"lineNumber":149,"author":{"gitId":"JunWei3112"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":150,"author":{"gitId":"JunWei3112"},"content":"        LocalDate date \u003d LocalDate.parse(deadline);","lastModifiedDate":"2021-09-05"},{"lineNumber":151,"author":{"gitId":"JunWei3112"},"content":"        return new AddCommand(\"deadline\", task, date);","lastModifiedDate":"2021-09-05"},{"lineNumber":152,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":153,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":154,"author":{"gitId":"JunWei3112"},"content":"    private AddCommand addEvent(String taskDescription) throws TimeNotSpecifiedException,","lastModifiedDate":"2021-09-05"},{"lineNumber":155,"author":{"gitId":"JunWei3112"},"content":"            DateTimeParseException {","lastModifiedDate":"2021-09-05"},{"lineNumber":156,"author":{"gitId":"JunWei3112"},"content":"        if (!taskDescription.contains(\" /at \")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":157,"author":{"gitId":"JunWei3112"},"content":"            throw new TimeNotSpecifiedException(\" /at \");","lastModifiedDate":"2021-08-21"},{"lineNumber":158,"author":{"gitId":"JunWei3112"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":159,"author":{"gitId":"JunWei3112"},"content":"        String[] descriptionArr \u003d taskDescription.split(\" /at \");","lastModifiedDate":"2021-08-21"},{"lineNumber":160,"author":{"gitId":"JunWei3112"},"content":"        String task \u003d descriptionArr[0];","lastModifiedDate":"2021-09-05"},{"lineNumber":161,"author":{"gitId":"JunWei3112"},"content":"        String timeFrame \u003d descriptionArr[1];","lastModifiedDate":"2021-08-21"},{"lineNumber":162,"author":{"gitId":"JunWei3112"},"content":"        if (timeFrame.trim().isEmpty()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":163,"author":{"gitId":"JunWei3112"},"content":"            throw new TimeNotSpecifiedException(\" /at \");","lastModifiedDate":"2021-08-21"},{"lineNumber":164,"author":{"gitId":"JunWei3112"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":165,"author":{"gitId":"JunWei3112"},"content":"        LocalDate date \u003d LocalDate.parse(timeFrame);","lastModifiedDate":"2021-09-05"},{"lineNumber":166,"author":{"gitId":"JunWei3112"},"content":"        return new AddCommand(\"event\", task, date);","lastModifiedDate":"2021-09-05"},{"lineNumber":167,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":168,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":169,"author":{"gitId":"JunWei3112"},"content":"    private AddCommand addTodo(String taskDescription) {","lastModifiedDate":"2021-09-05"},{"lineNumber":170,"author":{"gitId":"JunWei3112"},"content":"        return new AddCommand(\"todo\", taskDescription);","lastModifiedDate":"2021-09-05"},{"lineNumber":171,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":172,"author":{"gitId":"JunWei3112"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"JunWei3112":172}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunWei3112"},"content":"package duke.storage;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"JunWei3112"},"content":"import java.io.File;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"JunWei3112"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"JunWei3112"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"JunWei3112"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"JunWei3112"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"JunWei3112"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"JunWei3112"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"JunWei3112"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"JunWei3112"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"JunWei3112"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"JunWei3112"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"JunWei3112"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"JunWei3112"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"JunWei3112"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"JunWei3112"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"JunWei3112"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"JunWei3112"},"content":" * Represents the file in the hard disk that stores the tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"JunWei3112"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"JunWei3112"},"content":"public class Storage {","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"JunWei3112"},"content":"    private String filePath;","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"JunWei3112"},"content":"     * Constructor for a Storage instance that takes in a file path.","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"JunWei3112"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"JunWei3112"},"content":"     * @param filePath The path to the file storing the tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"JunWei3112"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"JunWei3112"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"JunWei3112"},"content":"     * Retrieves the tasks from the hard disk.","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"JunWei3112"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"JunWei3112"},"content":"     * @return An ArrayList containing the retrieved tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"JunWei3112"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"JunWei3112"},"content":"        File dukeFile \u003d new File(this.filePath);","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"JunWei3112"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"JunWei3112"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"JunWei3112"},"content":"            Scanner fileScanner \u003d new Scanner(dukeFile);","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"JunWei3112"},"content":"            while (fileScanner.hasNext()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"JunWei3112"},"content":"                String currentLine \u003d fileScanner.nextLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"JunWei3112"},"content":"                taskList.add(translateStringToTask(currentLine));","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"JunWei3112"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"JunWei3112"},"content":"            return taskList;","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"JunWei3112"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"JunWei3112"},"content":"            java.nio.file.Path directoryPath \u003d Paths.get(System.getProperty(\"user.home\"), \"data\");","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"JunWei3112"},"content":"            if (!Files.exists(directoryPath)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"JunWei3112"},"content":"                File directory \u003d new File(String.valueOf(String.valueOf(directoryPath)));","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"JunWei3112"},"content":"                directory.mkdir();","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"JunWei3112"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"JunWei3112"},"content":"            return taskList;","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"JunWei3112"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"JunWei3112"},"content":"    private Task translateStringToTask(String lineOfWords) {","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"JunWei3112"},"content":"        // Splitting the line according to the characteristics of a task","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"JunWei3112"},"content":"        String[] taskStatus \u003d lineOfWords.split(Pattern.quote(\" | \"));","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"JunWei3112"},"content":"        String taskType \u003d taskStatus[0];","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"JunWei3112"},"content":"        String taskProgress \u003d taskStatus[1];","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"JunWei3112"},"content":"        String taskTag \u003d taskStatus[2];","lastModifiedDate":"2021-09-05"},{"lineNumber":67,"author":{"gitId":"JunWei3112"},"content":"        String taskDescription \u003d taskStatus[3];","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"JunWei3112"},"content":"        Task taskToAdd;","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"JunWei3112"},"content":"        if (taskType.equals(\"T\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"JunWei3112"},"content":"            taskToAdd \u003d new Todo(taskDescription);","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"JunWei3112"},"content":"        } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"JunWei3112"},"content":"            taskToAdd \u003d new Deadline(taskDescription, LocalDate.parse(taskStatus[4]));","lastModifiedDate":"2021-09-05"},{"lineNumber":74,"author":{"gitId":"JunWei3112"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"JunWei3112"},"content":"            taskToAdd \u003d new Event(taskDescription, LocalDate.parse(taskStatus[4]));","lastModifiedDate":"2021-09-05"},{"lineNumber":76,"author":{"gitId":"JunWei3112"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":78,"author":{"gitId":"JunWei3112"},"content":"        if (taskProgress.equals(\"1\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"JunWei3112"},"content":"            taskToAdd.markAsDone();","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"JunWei3112"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"JunWei3112"},"content":"        if (!taskTag.trim().isEmpty()) {","lastModifiedDate":"2021-09-05"},{"lineNumber":83,"author":{"gitId":"JunWei3112"},"content":"            taskToAdd.setTag(taskTag);","lastModifiedDate":"2021-09-05"},{"lineNumber":84,"author":{"gitId":"JunWei3112"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":85,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":86,"author":{"gitId":"JunWei3112"},"content":"        assert taskToAdd !\u003d null : \"The task should be initialised as expected\";","lastModifiedDate":"2021-09-05"},{"lineNumber":87,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":88,"author":{"gitId":"JunWei3112"},"content":"        return taskToAdd;","lastModifiedDate":"2021-09-05"},{"lineNumber":89,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":90,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":91,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"JunWei3112"},"content":"     * Saves the current tasks to the hard drive.","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"JunWei3112"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"JunWei3112"},"content":"     * @param taskList The task list.","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"JunWei3112"},"content":"    public void save(TaskList taskList) {","lastModifiedDate":"2021-08-21"},{"lineNumber":97,"author":{"gitId":"JunWei3112"},"content":"        // Format the task list into a String","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"JunWei3112"},"content":"        String textToAdd \u003d \"\";","lastModifiedDate":"2021-08-21"},{"lineNumber":99,"author":{"gitId":"JunWei3112"},"content":"        ArrayList\u003cTask\u003e tasksList \u003d taskList.getTaskList();","lastModifiedDate":"2021-08-21"},{"lineNumber":100,"author":{"gitId":"JunWei3112"},"content":"        for (Task task : tasksList) {","lastModifiedDate":"2021-08-21"},{"lineNumber":101,"author":{"gitId":"JunWei3112"},"content":"            textToAdd +\u003d translateTaskToString(task) + System.lineSeparator();","lastModifiedDate":"2021-09-05"},{"lineNumber":102,"author":{"gitId":"JunWei3112"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":103,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":104,"author":{"gitId":"JunWei3112"},"content":"        // Write to the hard disk","lastModifiedDate":"2021-09-05"},{"lineNumber":105,"author":{"gitId":"JunWei3112"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":106,"author":{"gitId":"JunWei3112"},"content":"            assert Files.exists(Paths.get(this.filePath)) : \"File path should exist\";","lastModifiedDate":"2021-09-05"},{"lineNumber":107,"author":{"gitId":"JunWei3112"},"content":"            FileWriter fileWriter \u003d new FileWriter(this.filePath);","lastModifiedDate":"2021-09-05"},{"lineNumber":108,"author":{"gitId":"JunWei3112"},"content":"            fileWriter.write(textToAdd);","lastModifiedDate":"2021-09-05"},{"lineNumber":109,"author":{"gitId":"JunWei3112"},"content":"            fileWriter.close();","lastModifiedDate":"2021-09-05"},{"lineNumber":110,"author":{"gitId":"JunWei3112"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":111,"author":{"gitId":"JunWei3112"},"content":"            System.out.println(\"Unable to write to ./data/dukeFile.txt\");","lastModifiedDate":"2021-09-05"},{"lineNumber":112,"author":{"gitId":"JunWei3112"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":113,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":114,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":115,"author":{"gitId":"JunWei3112"},"content":"    private String translateTaskToString(Task task) {","lastModifiedDate":"2021-09-05"},{"lineNumber":116,"author":{"gitId":"JunWei3112"},"content":"        String currentLine \u003d \"\";","lastModifiedDate":"2021-08-21"},{"lineNumber":117,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":118,"author":{"gitId":"JunWei3112"},"content":"        // Formatting the task type","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"JunWei3112"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2021-08-21"},{"lineNumber":120,"author":{"gitId":"JunWei3112"},"content":"            currentLine +\u003d \"T | \";","lastModifiedDate":"2021-08-21"},{"lineNumber":121,"author":{"gitId":"JunWei3112"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2021-08-21"},{"lineNumber":122,"author":{"gitId":"JunWei3112"},"content":"            currentLine +\u003d \"D | \";","lastModifiedDate":"2021-08-21"},{"lineNumber":123,"author":{"gitId":"JunWei3112"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":124,"author":{"gitId":"JunWei3112"},"content":"            currentLine +\u003d \"E | \";","lastModifiedDate":"2021-08-21"},{"lineNumber":125,"author":{"gitId":"JunWei3112"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":126,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":127,"author":{"gitId":"JunWei3112"},"content":"        // Formatting the completion status of the task","lastModifiedDate":"2021-08-23"},{"lineNumber":128,"author":{"gitId":"JunWei3112"},"content":"        if (task.isDone()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":129,"author":{"gitId":"JunWei3112"},"content":"            currentLine +\u003d \"1 | \";","lastModifiedDate":"2021-08-21"},{"lineNumber":130,"author":{"gitId":"JunWei3112"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":131,"author":{"gitId":"JunWei3112"},"content":"            currentLine +\u003d \"0 | \";","lastModifiedDate":"2021-08-21"},{"lineNumber":132,"author":{"gitId":"JunWei3112"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":133,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":134,"author":{"gitId":"JunWei3112"},"content":"        // Formatting the tag of the task","lastModifiedDate":"2021-09-05"},{"lineNumber":135,"author":{"gitId":"JunWei3112"},"content":"        currentLine +\u003d task.getTag() + \" | \";","lastModifiedDate":"2021-09-05"},{"lineNumber":136,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":137,"author":{"gitId":"JunWei3112"},"content":"        // Formatting the task description","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"JunWei3112"},"content":"        currentLine +\u003d task.getDescription() + \" | \";","lastModifiedDate":"2021-08-21"},{"lineNumber":139,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":140,"author":{"gitId":"JunWei3112"},"content":"        // Formatting the date associated with the task","lastModifiedDate":"2021-08-23"},{"lineNumber":141,"author":{"gitId":"JunWei3112"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2021-08-21"},{"lineNumber":142,"author":{"gitId":"JunWei3112"},"content":"            currentLine +\u003d ((Deadline) task).getDate().toString();","lastModifiedDate":"2021-08-21"},{"lineNumber":143,"author":{"gitId":"JunWei3112"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2021-08-21"},{"lineNumber":144,"author":{"gitId":"JunWei3112"},"content":"            currentLine +\u003d ((Event) task).getDate().toString();","lastModifiedDate":"2021-08-21"},{"lineNumber":145,"author":{"gitId":"JunWei3112"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":146,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":147,"author":{"gitId":"JunWei3112"},"content":"        assert !currentLine.trim().isEmpty() : \"The current line should be filled up with relevant details\";","lastModifiedDate":"2021-09-05"},{"lineNumber":148,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":149,"author":{"gitId":"JunWei3112"},"content":"        return currentLine;","lastModifiedDate":"2021-09-05"},{"lineNumber":150,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":151,"author":{"gitId":"JunWei3112"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"JunWei3112":151}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunWei3112"},"content":"package duke.task;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"JunWei3112"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"JunWei3112"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"JunWei3112"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"JunWei3112"},"content":" * This Deadline class implements the characteristics of a task","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"JunWei3112"},"content":" * that needs to be done before a specific date/time.","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"JunWei3112"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"JunWei3112"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"JunWei3112"},"content":"    protected LocalDate timeBy;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"JunWei3112"},"content":"     * Constructor for a Deadline instance that takes in a description and deadline.","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"JunWei3112"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"JunWei3112"},"content":"     * @param description The given task description.","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"JunWei3112"},"content":"     * @param timeBy The deadline of the given task.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"JunWei3112"},"content":"    public Deadline(String description, LocalDate timeBy) {","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"JunWei3112"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"JunWei3112"},"content":"        this.timeBy \u003d timeBy;","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"JunWei3112"},"content":"     * Returns the deadline of the current task.","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"JunWei3112"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"JunWei3112"},"content":"     * @return A LocalDate instance representing the deadline.","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"JunWei3112"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"JunWei3112"},"content":"        return this.timeBy;","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"JunWei3112"},"content":"     * Returns the string representation of a Deadline instance.","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"JunWei3112"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"JunWei3112"},"content":"     * @return A string representing a Deadline instance.","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":39,"author":{"gitId":"JunWei3112"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":40,"author":{"gitId":"JunWei3112"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":41,"author":{"gitId":"JunWei3112"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + timeBy.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":43,"author":{"gitId":"JunWei3112"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"JunWei3112":43}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunWei3112"},"content":"package duke.task;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"JunWei3112"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"JunWei3112"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"JunWei3112"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"JunWei3112"},"content":" * This Event class implements the characteristics of a task","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"JunWei3112"},"content":" * that is held on a specific date.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"JunWei3112"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"JunWei3112"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"JunWei3112"},"content":"    protected LocalDate timeAt;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"JunWei3112"},"content":"     * Constructor for an Event instance that takes in a description and date.","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"JunWei3112"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"JunWei3112"},"content":"     * @param description The given task description.","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"JunWei3112"},"content":"     * @param timeAt The date on which the event is held.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"JunWei3112"},"content":"    public Event(String description, LocalDate timeAt) {","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"JunWei3112"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"JunWei3112"},"content":"        this.timeAt \u003d timeAt;","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"JunWei3112"},"content":"     * Returns the date on which the event is held.","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"JunWei3112"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"JunWei3112"},"content":"     * @return A LocalDate instance representing the event date.","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"JunWei3112"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"JunWei3112"},"content":"        return this.timeAt;","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"JunWei3112"},"content":"     * Returns the string representation of an Event instance.","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"JunWei3112"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"JunWei3112"},"content":"     * @return A string representing an Event instance.","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":39,"author":{"gitId":"JunWei3112"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":40,"author":{"gitId":"JunWei3112"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":41,"author":{"gitId":"JunWei3112"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + timeAt.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":43,"author":{"gitId":"JunWei3112"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"JunWei3112":43}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunWei3112"},"content":"package duke.task;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"JunWei3112"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"JunWei3112"},"content":" * This Task class implements the characteristics of a task.","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"JunWei3112"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"JunWei3112"},"content":"public class Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"JunWei3112"},"content":"    protected String description;","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"JunWei3112"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"JunWei3112"},"content":"    protected String tag;","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"JunWei3112"},"content":"    protected boolean isTagged;","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"JunWei3112"},"content":"     * Constructor for a Task instance that takes in a description.","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"JunWei3112"},"content":"     * The task is initially not done.","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"JunWei3112"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"JunWei3112"},"content":"     * @param description The given task description.","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"JunWei3112"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"JunWei3112"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"JunWei3112"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"JunWei3112"},"content":"     * Indicates if the task has been completed.","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"JunWei3112"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"JunWei3112"},"content":"     * @return A boolean value indicating the completion status.","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"JunWei3112"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"JunWei3112"},"content":"        return this.isDone;","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"JunWei3112"},"content":"     * Returns the description of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"JunWei3112"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"JunWei3112"},"content":"     * @return Task description.","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"JunWei3112"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"JunWei3112"},"content":"        return this.description;","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":43,"author":{"gitId":"JunWei3112"},"content":"     * Returns an icon, indicating if the current task has been done.","lastModifiedDate":"2021-08-14"},{"lineNumber":44,"author":{"gitId":"JunWei3112"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":45,"author":{"gitId":"JunWei3112"},"content":"     * @return A String representing the completion status of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":47,"author":{"gitId":"JunWei3112"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-14"},{"lineNumber":48,"author":{"gitId":"JunWei3112"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-14"},{"lineNumber":49,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":50,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":51,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":52,"author":{"gitId":"JunWei3112"},"content":"     * Marks the current task as done.","lastModifiedDate":"2021-08-14"},{"lineNumber":53,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":54,"author":{"gitId":"JunWei3112"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-14"},{"lineNumber":55,"author":{"gitId":"JunWei3112"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-14"},{"lineNumber":56,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":57,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":58,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"JunWei3112"},"content":"     * Labels the task.","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"JunWei3112"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"JunWei3112"},"content":"     * @param tag The specified tag name.","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"JunWei3112"},"content":"    public void setTag(String tag) {","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"JunWei3112"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"JunWei3112"},"content":"        isTagged \u003d true;","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":67,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":69,"author":{"gitId":"JunWei3112"},"content":"     * Returns the attached label of the task.","lastModifiedDate":"2021-09-05"},{"lineNumber":70,"author":{"gitId":"JunWei3112"},"content":"     * If task is not tagged, return an empty String.","lastModifiedDate":"2021-09-05"},{"lineNumber":71,"author":{"gitId":"JunWei3112"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":72,"author":{"gitId":"JunWei3112"},"content":"     * @return The label of the task.","lastModifiedDate":"2021-09-05"},{"lineNumber":73,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":74,"author":{"gitId":"JunWei3112"},"content":"    public String getTag() {","lastModifiedDate":"2021-09-05"},{"lineNumber":75,"author":{"gitId":"JunWei3112"},"content":"        if (isTagged) {","lastModifiedDate":"2021-09-05"},{"lineNumber":76,"author":{"gitId":"JunWei3112"},"content":"            return tag;","lastModifiedDate":"2021-09-05"},{"lineNumber":77,"author":{"gitId":"JunWei3112"},"content":"        } else {","lastModifiedDate":"2021-09-05"},{"lineNumber":78,"author":{"gitId":"JunWei3112"},"content":"            return \" \";","lastModifiedDate":"2021-09-05"},{"lineNumber":79,"author":{"gitId":"JunWei3112"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":80,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":81,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":82,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":83,"author":{"gitId":"JunWei3112"},"content":"     * Returns the string representation of a Task instance.","lastModifiedDate":"2021-08-14"},{"lineNumber":84,"author":{"gitId":"JunWei3112"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":85,"author":{"gitId":"JunWei3112"},"content":"     * @return A string representing a Task instance.","lastModifiedDate":"2021-08-14"},{"lineNumber":86,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":87,"author":{"gitId":"JunWei3112"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":88,"author":{"gitId":"JunWei3112"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":89,"author":{"gitId":"JunWei3112"},"content":"        if (isTagged) {","lastModifiedDate":"2021-09-05"},{"lineNumber":90,"author":{"gitId":"JunWei3112"},"content":"            return \"[\" + getStatusIcon() + \"][#\" + tag + \"] \" + description;","lastModifiedDate":"2021-09-05"},{"lineNumber":91,"author":{"gitId":"JunWei3112"},"content":"        } else {","lastModifiedDate":"2021-09-05"},{"lineNumber":92,"author":{"gitId":"JunWei3112"},"content":"            return \"[\" + getStatusIcon() + \"][ ] \" + description;","lastModifiedDate":"2021-09-05"},{"lineNumber":93,"author":{"gitId":"JunWei3112"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":94,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":95,"author":{"gitId":"JunWei3112"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"JunWei3112":95}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunWei3112"},"content":"package duke.task;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"JunWei3112"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"JunWei3112"},"content":"import duke.exception.TaskAlreadyDoneException;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"JunWei3112"},"content":"import duke.exception.TaskIndexOutOfBoundsException;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"JunWei3112"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"JunWei3112"},"content":" * This TaskList class implements a task list.","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"JunWei3112"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"JunWei3112"},"content":"public class TaskList {","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"JunWei3112"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"JunWei3112"},"content":"     * Constructor for a TaskList instance that takes in a list of tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"JunWei3112"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"JunWei3112"},"content":"     * @param taskList An ArrayList containing the Task instances.","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"JunWei3112"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"JunWei3112"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"JunWei3112"},"content":"     * Returns the current list of tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"JunWei3112"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"JunWei3112"},"content":"     * @return An ArrayList containing the current tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"JunWei3112"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"JunWei3112"},"content":"        return this.taskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"JunWei3112"},"content":"     * Marks the specified task as done.","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"JunWei3112"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"JunWei3112"},"content":"     * @param taskId The id of the task to be marked as done.","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"JunWei3112"},"content":"     * @return The task that was marked as done.","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"JunWei3112"},"content":"     * @throws TaskIndexOutOfBoundsException If the task index is illegal.","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"JunWei3112"},"content":"     * @throws TaskAlreadyDoneException If the task has previously been marked as done.","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"JunWei3112"},"content":"    public Task markAsDone(int taskId) throws TaskIndexOutOfBoundsException, TaskAlreadyDoneException {","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"JunWei3112"},"content":"        if (taskId \u003c 0 || (taskId + 1) \u003e taskList.size()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"JunWei3112"},"content":"            throw new TaskIndexOutOfBoundsException();","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"JunWei3112"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"JunWei3112"},"content":"        Task specifiedTask \u003d taskList.get(taskId);","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"JunWei3112"},"content":"        if (specifiedTask.getStatusIcon().equals(\"X\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"JunWei3112"},"content":"            throw new TaskAlreadyDoneException();","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"JunWei3112"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"JunWei3112"},"content":"        specifiedTask.markAsDone();","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"JunWei3112"},"content":"        assert specifiedTask.isDone() : \"The task should be correctly marked as done\";","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"JunWei3112"},"content":"        return specifiedTask;","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"JunWei3112"},"content":"     * Deletes the specified task from the list.","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"JunWei3112"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"JunWei3112"},"content":"     * @param taskId The index of the task to be deleted.","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"JunWei3112"},"content":"     * @return The task that was deleted.","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"JunWei3112"},"content":"     * @throws TaskIndexOutOfBoundsException If the task index is illegal.","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"JunWei3112"},"content":"    public Task deleteTask(int taskId) throws TaskIndexOutOfBoundsException {","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"JunWei3112"},"content":"        if (taskId \u003c 0 || (taskId + 1) \u003e taskList.size()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"JunWei3112"},"content":"            throw new TaskIndexOutOfBoundsException();","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"JunWei3112"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"JunWei3112"},"content":"        return taskList.remove(taskId);","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"JunWei3112"},"content":"     * Adds the specified task to the list.","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"JunWei3112"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"JunWei3112"},"content":"     * @param taskToBeAdded The task to be added.","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"JunWei3112"},"content":"    public void addTask(Task taskToBeAdded) {","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"JunWei3112"},"content":"        taskList.add(taskToBeAdded);","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":78,"author":{"gitId":"JunWei3112"},"content":"     * Tags a specified task in the list.","lastModifiedDate":"2021-09-05"},{"lineNumber":79,"author":{"gitId":"JunWei3112"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":80,"author":{"gitId":"JunWei3112"},"content":"     * @param taskId The index of the task to be tagged.","lastModifiedDate":"2021-09-05"},{"lineNumber":81,"author":{"gitId":"JunWei3112"},"content":"     * @param tagName The name of the tag given to the task.","lastModifiedDate":"2021-09-05"},{"lineNumber":82,"author":{"gitId":"JunWei3112"},"content":"     * @return The task that was tagged.","lastModifiedDate":"2021-09-05"},{"lineNumber":83,"author":{"gitId":"JunWei3112"},"content":"     * @throws TaskIndexOutOfBoundsException If the task index is illegal.","lastModifiedDate":"2021-09-05"},{"lineNumber":84,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":85,"author":{"gitId":"JunWei3112"},"content":"    public Task tagTask(int taskId, String tagName) throws TaskIndexOutOfBoundsException {","lastModifiedDate":"2021-09-05"},{"lineNumber":86,"author":{"gitId":"JunWei3112"},"content":"        if (taskId \u003c 0 || (taskId + 1) \u003e taskList.size()) {","lastModifiedDate":"2021-09-05"},{"lineNumber":87,"author":{"gitId":"JunWei3112"},"content":"            throw new TaskIndexOutOfBoundsException();","lastModifiedDate":"2021-09-05"},{"lineNumber":88,"author":{"gitId":"JunWei3112"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":89,"author":{"gitId":"JunWei3112"},"content":"        Task taskToBeTagged \u003d taskList.get(taskId);","lastModifiedDate":"2021-09-05"},{"lineNumber":90,"author":{"gitId":"JunWei3112"},"content":"        taskToBeTagged.setTag(tagName);","lastModifiedDate":"2021-09-05"},{"lineNumber":91,"author":{"gitId":"JunWei3112"},"content":"        return taskToBeTagged;","lastModifiedDate":"2021-09-05"},{"lineNumber":92,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":93,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":94,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"JunWei3112"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"JunWei3112"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"JunWei3112"},"content":"     * @return The number of tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"JunWei3112"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2021-08-21"},{"lineNumber":100,"author":{"gitId":"JunWei3112"},"content":"        return taskList.size();","lastModifiedDate":"2021-08-21"},{"lineNumber":101,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":102,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"JunWei3112"},"content":"     * Finds all the tasks with the matching keyword.","lastModifiedDate":"2021-09-12"},{"lineNumber":105,"author":{"gitId":"JunWei3112"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"JunWei3112"},"content":"     * @param keyword The term to search for.","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"JunWei3112"},"content":"     * @return A TaskList with matching tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"JunWei3112"},"content":"    public TaskList findTasksWithKeyword(String keyword) {","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"JunWei3112"},"content":"        ArrayList\u003cTask\u003e tasksWithMatchingKeyword \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"JunWei3112"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"JunWei3112"},"content":"            if (task.toString().contains(keyword)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"JunWei3112"},"content":"                tasksWithMatchingKeyword.add(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"JunWei3112"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"JunWei3112"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"JunWei3112"},"content":"        return new TaskList(tasksWithMatchingKeyword);","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"JunWei3112"},"content":"     * Returns the string representation of a TaskList instance.","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"JunWei3112"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"JunWei3112"},"content":"     * @return A string representing a TaskList instance.","lastModifiedDate":"2021-08-23"},{"lineNumber":123,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"JunWei3112"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"JunWei3112"},"content":"    public String toString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"JunWei3112"},"content":"        String tasksInOrder \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"JunWei3112"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":128,"author":{"gitId":"JunWei3112"},"content":"            tasksInOrder +\u003d (i + 1) + \".\" + taskList.get(i);","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"JunWei3112"},"content":"            if (i !\u003d taskList.size() - 1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":130,"author":{"gitId":"JunWei3112"},"content":"                tasksInOrder +\u003d \"\\n\";","lastModifiedDate":"2021-08-23"},{"lineNumber":131,"author":{"gitId":"JunWei3112"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":132,"author":{"gitId":"JunWei3112"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":133,"author":{"gitId":"JunWei3112"},"content":"        return tasksInOrder;","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"JunWei3112"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"JunWei3112":135}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunWei3112"},"content":"package duke.task;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"JunWei3112"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"JunWei3112"},"content":" * This Todo class implements the characteristics of a task","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"JunWei3112"},"content":" * without any date or time attached to it.","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"JunWei3112"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"JunWei3112"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"JunWei3112"},"content":"     * Constructor for a Todo instance that takes in a description.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"JunWei3112"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"JunWei3112"},"content":"     * @param description The given task description.","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"JunWei3112"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"JunWei3112"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"JunWei3112"},"content":"     * Returns the string representation of a Todo instance.","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"JunWei3112"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"JunWei3112"},"content":"     * @return A string representing a Todo instance.","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"JunWei3112"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"JunWei3112"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"JunWei3112"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"JunWei3112"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"JunWei3112":27}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"JunWei3112"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"JunWei3112"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"JunWei3112"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"JunWei3112"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"JunWei3112"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"JunWei3112"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"JunWei3112"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"JunWei3112"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\" maxHeight\u003d\"Infinity\"/\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"JunWei3112"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"JunWei3112"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"JunWei3112"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"JunWei3112"},"content":"        \u003cInsets bottom\u003d\"7.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"7.0\" /\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"JunWei3112"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"JunWei3112"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"JunWei3112":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"JunWei3112"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"JunWei3112"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"JunWei3112"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"JunWei3112"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"JunWei3112"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"JunWei3112"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"JunWei3112"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"JunWei3112"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"JunWei3112"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"JunWei3112"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"JunWei3112"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"JunWei3112"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"JunWei3112"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"JunWei3112"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"JunWei3112"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"JunWei3112"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"JunWei3112"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"JunWei3112":19}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunWei3112"},"content":"package duke.parser;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"JunWei3112"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"JunWei3112"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"JunWei3112"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"JunWei3112"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"JunWei3112"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"JunWei3112"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"JunWei3112"},"content":"    public void parse_unrecognisedCommand_exceptionThrown() {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"JunWei3112"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"JunWei3112"},"content":"            new Parser().parse(\"blah\");","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"JunWei3112"},"content":"            fail();","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"JunWei3112"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"JunWei3112"},"content":"            assertEquals(\"This command is not recognised! Please enter a valid command!\", e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"JunWei3112"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"JunWei3112"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"JunWei3112":21}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunWei3112"},"content":"package duke.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"JunWei3112"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"JunWei3112"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"JunWei3112"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"JunWei3112"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"JunWei3112"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"JunWei3112"},"content":"    public void testStringConversion() {","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"JunWei3112"},"content":"        assertEquals(\"[D][ ][ ] return book (by: Oct 8 2021)\",","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"JunWei3112"},"content":"                new Deadline(\"return book\", LocalDate.parse(\"2021-10-08\")).toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"JunWei3112"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"JunWei3112":16}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunWei3112"},"content":"package duke.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"JunWei3112"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"JunWei3112"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"JunWei3112"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"JunWei3112"},"content":"public class EventTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"JunWei3112"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"JunWei3112"},"content":"    public void testStringConversion() {","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"JunWei3112"},"content":"        assertEquals(\"[E][ ][ ] project meeting (at: Oct 8 2021)\",","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"JunWei3112"},"content":"                new Event(\"project meeting\", LocalDate.parse(\"2021-10-08\")).toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"JunWei3112"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"JunWei3112":16}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunWei3112"},"content":"package duke.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"JunWei3112"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"JunWei3112"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"JunWei3112"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"JunWei3112"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"JunWei3112"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"JunWei3112"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"JunWei3112"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"JunWei3112"},"content":"    public void markAsDone_negativeTaskId_exceptionThrown() {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"JunWei3112"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"JunWei3112"},"content":"            new TaskList(new ArrayList\u003cTask\u003e()).markAsDone(-1);","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"JunWei3112"},"content":"            fail();","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"JunWei3112"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"JunWei3112"},"content":"            assertEquals(\"Invalid task index specified!\", e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"JunWei3112"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"JunWei3112"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"JunWei3112"},"content":"    public void deleteTask_negativeTaskId_exceptionThrown() {","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"JunWei3112"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"JunWei3112"},"content":"            new TaskList(new ArrayList\u003cTask\u003e()).deleteTask(-1);","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"JunWei3112"},"content":"            fail();","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"JunWei3112"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"JunWei3112"},"content":"            assertEquals(\"Invalid task index specified!\", e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"JunWei3112"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"JunWei3112"},"content":"}","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"JunWei3112":34}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunWei3112"},"content":"package duke.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"JunWei3112"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"JunWei3112"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"JunWei3112"},"content":"public class TodoTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"JunWei3112"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"JunWei3112"},"content":"    public void testStringConversion() {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"JunWei3112"},"content":"        assertEquals(\"[T][ ][ ] buy bread\", new Todo(\"buy bread\").toString());","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"JunWei3112"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"JunWei3112":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JunWei3112"},"content":"todo read book","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"JunWei3112"},"content":"deadline return book /by 2021-06-06","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"JunWei3112"},"content":"event project meeting /at 2021-08-06","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"JunWei3112"},"content":"todo join sports club","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"JunWei3112"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"JunWei3112"},"content":"done 2","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"JunWei3112"},"content":"done 4","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"JunWei3112"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"JunWei3112"},"content":"todo borrow book","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"JunWei3112"},"content":"event orbital meeting /at 2021-09-07","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"JunWei3112"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"JunWei3112"},"content":"done 6","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"JunWei3112"},"content":"done 6","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"JunWei3112"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"JunWei3112"},"content":"find book","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"JunWei3112"},"content":"delete 2","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"JunWei3112"},"content":"delete 4","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"JunWei3112"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"JunWei3112"},"content":"blahblah","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"JunWei3112"},"content":"delete","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"JunWei3112"},"content":"find","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"JunWei3112"},"content":"done","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"JunWei3112"},"content":"done -1","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"JunWei3112"},"content":"delete 10","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"JunWei3112"},"content":"deadline buy stationery","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"JunWei3112"},"content":"event","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"JunWei3112"},"content":"delete 4","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"JunWei3112"},"content":"delete 3","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"JunWei3112"},"content":"delete 2","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"JunWei3112"},"content":"delete 1","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"JunWei3112"},"content":"bye","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"JunWei3112":31}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"JunWei3112"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"JunWei3112":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"JunWei3112"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"JunWei3112":1,"-":37}}]
