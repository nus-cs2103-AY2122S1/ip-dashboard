[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"# Duke.Duke project template","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"3. After that, locate the `src/main/java/Duke.Duke.java` file, right-click it, and choose `Run Duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Gordon25":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"Gordon25"},"content":"    mainClassName \u003d \"duke.main.Launcher\"","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"Gordon25"},"content":"    mainClassName \u003d \"duke.gui.Launcher\"","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"Gordon25"},"content":"    enableAssertions \u003d true;","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":69,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":70,"author":{"gitId":"Gordon25"},"content":"sourceSets {","lastModifiedDate":"2021-09-02"},{"lineNumber":71,"author":{"gitId":"Gordon25"},"content":"    intTest {","lastModifiedDate":"2021-09-02"},{"lineNumber":72,"author":{"gitId":"Gordon25"},"content":"        compileClasspath +\u003d sourceSets.main.output","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"Gordon25"},"content":"        runtimeClasspath +\u003d sourceSets.main.output","lastModifiedDate":"2021-09-02"},{"lineNumber":74,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":75,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"Gordon25":30,"-":45}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"D | 0 | bake chocolate cake | Jan 06","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"E | 1 | attend seminar | Jan 16","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"T | 1 | read book","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"D | 1 | return book | Jun 21","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"E | 1 | project meeting | Aug 12","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"T | 1 | join sports club","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"T | 1 | create group chat","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"D | 1 | set up meeting date | Aug 31","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":"E | 1 | project meeting | Sep 30","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"Gordon25":9}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"package duke.command;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"import duke.main.DukeException;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"import duke.main.Storage;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"import duke.main.Ui;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":" * Represents a command to add a task.","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":" *","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":" * @author Gordon Yit","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":" * @version CS2103T, Semester 2","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"    private String addCommand;","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"     * Class constructor.","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"     * @param addCommand the user inputed string to add a task.","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"    public AddCommand(String addCommand) {","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"        super();","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"        this.addCommand \u003d addCommand;","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"        assert !isExit() : \"isExit should return false\";","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"     * Executes the command to add a task for Duke.Duke to keep track of.","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"Gordon25"},"content":"     * @param tasks lists of tasks","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"     * @param ui the user interface.","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"Gordon25"},"content":"     * @param storage the storage file.","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"Gordon25"},"content":"     * @throws DukeException exception handled by DukeException class","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"Gordon25"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"Gordon25"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"Gordon25"},"content":"        String taskType \u003d addCommand.split(\" \")[0];","lastModifiedDate":"2021-09-10"},{"lineNumber":44,"author":{"gitId":"Gordon25"},"content":"        Task task;","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"Gordon25"},"content":"        try {","lastModifiedDate":"2021-09-10"},{"lineNumber":46,"author":{"gitId":"Gordon25"},"content":"            System.out.println(taskType);","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"Gordon25"},"content":"            switch (taskType) {","lastModifiedDate":"2021-09-10"},{"lineNumber":48,"author":{"gitId":"Gordon25"},"content":"            case \"deadline\" :","lastModifiedDate":"2021-09-10"},{"lineNumber":49,"author":{"gitId":"Gordon25"},"content":"                task \u003d new Deadline(addCommand);","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"Gordon25"},"content":"                break;","lastModifiedDate":"2021-09-10"},{"lineNumber":51,"author":{"gitId":"Gordon25"},"content":"            case \"event\":","lastModifiedDate":"2021-09-10"},{"lineNumber":52,"author":{"gitId":"Gordon25"},"content":"                task \u003d new Event(addCommand);","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"Gordon25"},"content":"                break;","lastModifiedDate":"2021-09-10"},{"lineNumber":54,"author":{"gitId":"Gordon25"},"content":"            case \"todo\" :","lastModifiedDate":"2021-09-10"},{"lineNumber":55,"author":{"gitId":"Gordon25"},"content":"                task \u003d new Todo(addCommand);","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"Gordon25"},"content":"                break;","lastModifiedDate":"2021-09-10"},{"lineNumber":57,"author":{"gitId":"Gordon25"},"content":"            default:","lastModifiedDate":"2021-09-10"},{"lineNumber":58,"author":{"gitId":"Gordon25"},"content":"                throw new IllegalArgumentException();","lastModifiedDate":"2021-09-10"},{"lineNumber":59,"author":{"gitId":"Gordon25"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"Gordon25"},"content":"            assert task !\u003d null : \"the task cannot be null\";","lastModifiedDate":"2021-09-10"},{"lineNumber":61,"author":{"gitId":"Gordon25"},"content":"            Task taskAdded \u003d tasks.add(task);","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"Gordon25"},"content":"            return ui.showTaskAdded(taskAdded, tasks.getNumTasks());","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"Gordon25"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-09-10"},{"lineNumber":64,"author":{"gitId":"Gordon25"},"content":"            throw new DukeException(DukeException.Exceptions.EXCEPTIONS);","lastModifiedDate":"2021-09-10"},{"lineNumber":65,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":67,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"Gordon25":67}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"package duke.command;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"import duke.main.DukeException;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"import duke.main.Storage;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"import duke.main.Ui;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":" * Represents a command given by the user.","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":" *","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":" * @author Gordon Yit","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":" * @version CS2103T, Semester 2","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"    private boolean isExitCommand;","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"     * Class constructor.","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"    public Command() {","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"        isExitCommand \u003d false;","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"        assert !isExit() : \"isExit should return false\";","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"     * Executes the given command.","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"     * @param tasks lists of tasks","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"     * @param ui the user interface.","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"     * @param storage the storage file.","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"     * @throws DukeException exception handled by DukeException Class","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"     * Checks whether the command is an exit command.","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"Gordon25"},"content":"     * @return true if the command is an exit command, false otherwise.","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"Gordon25"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"Gordon25"},"content":"        return isExitCommand;","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"Gordon25":44}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"package duke.command;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"import duke.main.DukeException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"import duke.main.Storage;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"import duke.main.Ui;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":" * Represents a duke.command to delete a duke.task.","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":" *","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":" * @author Gordon Yit","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":" * @version CS2103T, Semester 2","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"    @SuppressWarnings(\"checkstyle:AbbreviationAsWordInName\")","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"    private int taskNum;","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"     * @param taskNumber the serial number of the duke.task.","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"    public DeleteCommand(String taskNumber) throws DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"        assert !isExit() : \"isExit should return false\";","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"        try {","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"            this.taskNum \u003d Integer.parseInt(taskNumber);","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"            throw new DukeException(DukeException.Exceptions.EXCEPTIONS);","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"     * Executes the duke.command to delete a duke.task.","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"Gordon25"},"content":"     * @param tasks   lists of tasks","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"     * @param ui      the user interface.","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"Gordon25"},"content":"     * @param storage the storage file.","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"Gordon25"},"content":"     * @throws DukeException exception handled by DukeException class.","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"Gordon25"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"Gordon25"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"Gordon25"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"Gordon25"},"content":"            Task deletedTask \u003d tasks.delete(taskNum - 1);","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"Gordon25"},"content":"            assert deletedTask !\u003d null : \"the deleted task cannot be null\";","lastModifiedDate":"2021-09-10"},{"lineNumber":46,"author":{"gitId":"Gordon25"},"content":"            int numTasksRemaining \u003d tasks.getNumTasks();","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"Gordon25"},"content":"            return ui.showTaskDeleted(deletedTask, numTasksRemaining);","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"Gordon25"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"Gordon25"},"content":"            throw new DukeException(DukeException.Exceptions.IndexOutOfBoundsException);","lastModifiedDate":"2021-09-10"},{"lineNumber":50,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"Gordon25":52}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"package duke.command;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"import duke.main.DukeException;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"import duke.main.Storage;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"import duke.main.Ui;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":" * Represents a duke.command to exit Duke.","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":" *","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":" * @author Gordon Yit","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":" * @version CS2103T, Semester 2","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"    private static final boolean IS_EXIT \u003d false;","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"    public ExitCommand() {","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"        assert isExit() : \"isExist must return true\";","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"     * Executes the duke.command to exit the chat bot, stores tasks into storage.","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"     * @param tasks   lists of tasks","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"     * @param ui      the user interface.","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"     * @param storage the storage file.","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"     * @throws DukeException exception handled by DukeException class","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"Gordon25"},"content":"            storage.store(tasks);","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"Gordon25"},"content":"            return ui.showFarewell();","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"Gordon25"},"content":"            throw new DukeException(DukeException.Exceptions.IOException);","lastModifiedDate":"2021-09-10"},{"lineNumber":39,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"Gordon25"},"content":"     * Checks if this duke.command is an exit duke.command.","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"Gordon25"},"content":"     * @return true.","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"Gordon25"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"Gordon25"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"Gordon25"},"content":"        return IS_EXIT;","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"Gordon25":51}},{"path":"src/main/java/duke/command/FilterCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"package duke.command;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"import duke.main.DukeException;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"import duke.main.Storage;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"import duke.main.TaskDate;","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"import duke.main.Ui;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":" * Represents a command to filter out tasks that fall on a specific date.","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":" *","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":" * @author Gordon Yit","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":" * @version CS2103T, Semester 2","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"    private TaskDate date;","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"    private String dateString;","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"     * Class constructor.","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"     * @param dateString the date of interest.","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"    public FilterCommand(String dateString) throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"        super();","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"        date \u003d new TaskDate(dateString);","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"        this.dateString \u003d date.toString();","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"        assert date !\u003d null : \"date cannot be null\";","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"        assert !isExit() : \"isExit should return false\";","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"     * Executes a command to filter out tasks falling on the specified date.","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"     * @param tasks lists of tasks","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"     * @param ui the user interface.","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"Gordon25"},"content":"     * @param storage the storage file.","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"Gordon25"},"content":"     * @return message displaying all tasks that falls on the specified date.","lastModifiedDate":"2021-09-10"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"Gordon25"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"Gordon25"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"Gordon25"},"content":"        TaskList matchingTasks \u003d findMatchingTasks(tasks);","lastModifiedDate":"2021-09-10"},{"lineNumber":41,"author":{"gitId":"Gordon25"},"content":"        assert matchingTasks !\u003d null : \"matching task list cannot be null\";","lastModifiedDate":"2021-09-10"},{"lineNumber":42,"author":{"gitId":"Gordon25"},"content":"        String headerMessage \u003d generateHeaderMessage();","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"Gordon25"},"content":"        return ui.showMatchingTasks(matchingTasks, headerMessage);","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":45,"author":{"gitId":"Gordon25"},"content":"    private TaskList findMatchingTasks(TaskList tasks) {","lastModifiedDate":"2021-09-10"},{"lineNumber":46,"author":{"gitId":"Gordon25"},"content":"        return tasks.findMatchingTasks(dateString);","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":48,"author":{"gitId":"Gordon25"},"content":"    private String generateHeaderMessage() {","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"Gordon25"},"content":"        return String.format(\"On %s, you have:\", dateString);","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"Gordon25":51}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"package duke.command;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"import duke.main.DukeException;","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"import duke.main.Storage;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"import duke.main.Ui;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":" * Represents a command to filter out tasks that fall on a specific date.","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":" *","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":" * @author Gordon Yit","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":" * @version CS2103T, Semester 2","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":"    private static final String KEYWORD \u003d \"find \";","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"    private static final String EXECUTION_MESSAGE \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"    private String searchPhrase;","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"     * Class constructor.","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"     * @param userCommand to filter out tasks containing a searchPhrase.","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"     * @throws StringIndexOutOfBoundsException if there is no search phrase.","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"    public FindCommand(String userCommand) throws DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"        super();","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"        assert !isExit() : \"isExit should return false\";","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"        int startingIndex \u003d findStartingIndex(userCommand);","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"        assert startingIndex !\u003d -1 : \"starting index should not be -1, the keyword should be in userCommand\";","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"        this.searchPhrase \u003d getSearchPhrase(userCommand, startingIndex);","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"        if (searchPhrase.equals(\"\")) {","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"            throw new DukeException(DukeException.Exceptions.StringIndexOutOfBoundsException);","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"    private int findStartingIndex(String userCommand) {","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"        return userCommand.indexOf(KEYWORD) + KEYWORD.length();","lastModifiedDate":"2021-09-10"},{"lineNumber":35,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":36,"author":{"gitId":"Gordon25"},"content":"    private String getSearchPhrase(String userCommand, int startingIndex) {","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"        return userCommand.substring(startingIndex);","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"Gordon25"},"content":"     * Executes a command to filter out tasks falling on the specified date.","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"Gordon25"},"content":"     * @param tasks lists of tasks","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"Gordon25"},"content":"     * @param ui the user interface.","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"Gordon25"},"content":"     * @param storage the storage file.","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"Gordon25"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"Gordon25"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"Gordon25"},"content":"        TaskList matchingTasks \u003d tasks.findMatchingTasks(searchPhrase);","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"Gordon25"},"content":"        assert matchingTasks !\u003d null : \"matching tasks cannot be null\";","lastModifiedDate":"2021-09-10"},{"lineNumber":49,"author":{"gitId":"Gordon25"},"content":"        return ui.showMatchingTasks(matchingTasks, EXECUTION_MESSAGE);","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"Gordon25":51}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"package duke.command;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"import duke.main.Storage;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"import duke.main.Ui;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":" * Represents a command to list out the tasks Duke.Duke is keeping track of.","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":" *","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":" * @author Gordon Yit","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":" * @version CS2103T, Semester 2","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"     * Class constructor.","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"    public ListCommand() {","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"        super();","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"        assert !isExit() : \"isExit should return false\";","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"     * Executes the command to list out all tasks Duke.Duke is keeping track of.","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"     * @param tasks taskList of tasks","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"     * @param ui the user interface.","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"     * @param storage the storage file.","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"     * @return message listing out all the tasks currently tracked by Duke.","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"        return ui.showListOfTasks(tasks, tasks.getNumTasks());","lastModifiedDate":"2021-09-10"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"Gordon25":35}},{"path":"src/main/java/duke/command/MarkDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"package duke.command;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"import duke.main.DukeException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"import duke.main.Storage;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"import duke.main.Ui;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":" * Represents a duke.command to mark a duke.task as done.","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":" *","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":" * @author Gordon Yit","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":" * @version CS2103T, Semester 2","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"public class MarkDoneCommand extends Command {","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"    @SuppressWarnings(\"checkstyle:AbbreviationAsWordInName\")","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"    private int taskNum;","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"     * @param taskNumber the serial number of the duke.task.","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"    public MarkDoneCommand(String taskNumber) throws DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"        try {","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"            this.taskNum \u003d Integer.parseInt(taskNumber);","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"            throw new DukeException(DukeException.Exceptions.EXCEPTIONS);","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"        assert taskNum \u003e\u003d 1 : \"TASK_NUM must be a cardinal value\";","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"        assert !isExit() : \"isExit should return false\";","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"     * Executes the duke.command to mark a duke.task as done.","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"Gordon25"},"content":"     * @throws DukeException exception handled by DukeException class","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"Gordon25"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"Gordon25"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"Gordon25"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"Gordon25"},"content":"            Task task \u003d tasks.markDone(taskNum - 1);","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"Gordon25"},"content":"            assert task !\u003d null : \"task cannot be null\";","lastModifiedDate":"2021-09-10"},{"lineNumber":43,"author":{"gitId":"Gordon25"},"content":"            return ui.showMarkTaskDone(task);","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"Gordon25"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"Gordon25"},"content":"            throw new DukeException(DukeException.Exceptions.IndexOutOfBoundsException);","lastModifiedDate":"2021-09-10"},{"lineNumber":46,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"Gordon25":48}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"package duke.gui;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":"import javafx.scene.effect.DropShadow;","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"Gordon25"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"Gordon25"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"            dialog.setMinHeight(Label.USE_PREF_SIZE);","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"Gordon25"},"content":"            dialog.setText(text);","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"Gordon25"},"content":"            displayPicture.setImage(img);","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"Gordon25"},"content":"            Circle imageBoarder \u003d new Circle(displayPicture.getFitWidth() / 2,","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"Gordon25"},"content":"                    displayPicture.getFitHeight() / 2,","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"Gordon25"},"content":"                    displayPicture.getFitWidth() / 2);","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"Gordon25"},"content":"            imageBoarder.setEffect(new DropShadow(+0, 0d, 2d, Color.AZURE));","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"Gordon25"},"content":"            displayPicture.setClip(","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"Gordon25"},"content":"                imageBoarder","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"Gordon25"},"content":"            );","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"Gordon25"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"Gordon25"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"Gordon25"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"Gordon25"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":55,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"Gordon25"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"Gordon25"},"content":"    private void flip() {","lastModifiedDate":"2021-09-06"},{"lineNumber":60,"author":{"gitId":"Gordon25"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"Gordon25"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-06"},{"lineNumber":62,"author":{"gitId":"Gordon25"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-06"},{"lineNumber":63,"author":{"gitId":"Gordon25"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-06"},{"lineNumber":64,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":65,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"Gordon25"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-06"},{"lineNumber":67,"author":{"gitId":"Gordon25"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-06"},{"lineNumber":68,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":69,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":70,"author":{"gitId":"Gordon25"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-06"},{"lineNumber":71,"author":{"gitId":"Gordon25"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-06"},{"lineNumber":72,"author":{"gitId":"Gordon25"},"content":"        db.flip();","lastModifiedDate":"2021-09-06"},{"lineNumber":73,"author":{"gitId":"Gordon25"},"content":"        return db;","lastModifiedDate":"2021-09-06"},{"lineNumber":74,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":75,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"Gordon25":75}},{"path":"src/main/java/duke/gui/DukeApplication.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"package duke.gui;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"import duke.main.DukeException;","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"import duke.main.Parser;","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"import duke.main.Storage;","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"import duke.main.Ui;","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"public class DukeApplication extends Application {","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"    private Scene scene;","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpeg\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.jpg\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"    private TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"    private Storage storage \u003d new Storage(\"data\", \"duke.txt\");","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"Gordon25"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"     * Starts the gui application.","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"Gordon25"},"content":"     * @param stage to stage the gui.","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"Gordon25"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"Gordon25"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"Gordon25"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"Gordon25"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"Gordon25"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"Gordon25"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"Gordon25"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"Gordon25"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"Gordon25"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"Gordon25"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":55,"author":{"gitId":"Gordon25"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":57,"author":{"gitId":"Gordon25"},"content":"        stage.setScene(scene);","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"Gordon25"},"content":"        stage.show();","lastModifiedDate":"2021-09-06"},{"lineNumber":59,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":60,"author":{"gitId":"Gordon25"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"Gordon25"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2021-09-06"},{"lineNumber":62,"author":{"gitId":"Gordon25"},"content":"        stage.setResizable(false);","lastModifiedDate":"2021-09-06"},{"lineNumber":63,"author":{"gitId":"Gordon25"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2021-09-06"},{"lineNumber":64,"author":{"gitId":"Gordon25"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2021-09-06"},{"lineNumber":65,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":66,"author":{"gitId":"Gordon25"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2021-09-06"},{"lineNumber":67,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":68,"author":{"gitId":"Gordon25"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2021-09-06"},{"lineNumber":69,"author":{"gitId":"Gordon25"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2021-09-06"},{"lineNumber":70,"author":{"gitId":"Gordon25"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2021-09-06"},{"lineNumber":71,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":72,"author":{"gitId":"Gordon25"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2021-09-06"},{"lineNumber":73,"author":{"gitId":"Gordon25"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2021-09-06"},{"lineNumber":74,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":75,"author":{"gitId":"Gordon25"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2021-09-06"},{"lineNumber":76,"author":{"gitId":"Gordon25"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2021-09-06"},{"lineNumber":77,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":78,"author":{"gitId":"Gordon25"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2021-09-06"},{"lineNumber":79,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":80,"author":{"gitId":"Gordon25"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2021-09-06"},{"lineNumber":81,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":82,"author":{"gitId":"Gordon25"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2021-09-06"},{"lineNumber":83,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":84,"author":{"gitId":"Gordon25"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2021-09-06"},{"lineNumber":85,"author":{"gitId":"Gordon25"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2021-09-06"},{"lineNumber":86,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":87,"author":{"gitId":"Gordon25"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2021-09-06"},{"lineNumber":88,"author":{"gitId":"Gordon25"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2021-09-06"},{"lineNumber":89,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":90,"author":{"gitId":"Gordon25"},"content":"        //Part 3. Add functionality to handle user input.","lastModifiedDate":"2021-09-06"},{"lineNumber":91,"author":{"gitId":"Gordon25"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2021-09-06"},{"lineNumber":92,"author":{"gitId":"Gordon25"},"content":"            handleUserInput();","lastModifiedDate":"2021-09-06"},{"lineNumber":93,"author":{"gitId":"Gordon25"},"content":"        });","lastModifiedDate":"2021-09-06"},{"lineNumber":94,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":95,"author":{"gitId":"Gordon25"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2021-09-06"},{"lineNumber":96,"author":{"gitId":"Gordon25"},"content":"            handleUserInput();","lastModifiedDate":"2021-09-06"},{"lineNumber":97,"author":{"gitId":"Gordon25"},"content":"        });","lastModifiedDate":"2021-09-06"},{"lineNumber":98,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":99,"author":{"gitId":"Gordon25"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2021-09-06"},{"lineNumber":100,"author":{"gitId":"Gordon25"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2021-09-06"},{"lineNumber":101,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":102,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":103,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":104,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":105,"author":{"gitId":"Gordon25"},"content":"     * Iteration 1:","lastModifiedDate":"2021-09-06"},{"lineNumber":106,"author":{"gitId":"Gordon25"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2021-09-06"},{"lineNumber":107,"author":{"gitId":"Gordon25"},"content":"     * @param text String containing text to add","lastModifiedDate":"2021-09-06"},{"lineNumber":108,"author":{"gitId":"Gordon25"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2021-09-06"},{"lineNumber":109,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":110,"author":{"gitId":"Gordon25"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2021-09-06"},{"lineNumber":111,"author":{"gitId":"Gordon25"},"content":"        // You will need to import `javafx.scene.control.Label`.","lastModifiedDate":"2021-09-06"},{"lineNumber":112,"author":{"gitId":"Gordon25"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2021-09-06"},{"lineNumber":113,"author":{"gitId":"Gordon25"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2021-09-06"},{"lineNumber":114,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":115,"author":{"gitId":"Gordon25"},"content":"        return textToAdd;","lastModifiedDate":"2021-09-06"},{"lineNumber":116,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":117,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":118,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":119,"author":{"gitId":"Gordon25"},"content":"     * Iteration 2:","lastModifiedDate":"2021-09-06"},{"lineNumber":120,"author":{"gitId":"Gordon25"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-06"},{"lineNumber":121,"author":{"gitId":"Gordon25"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-06"},{"lineNumber":122,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":123,"author":{"gitId":"Gordon25"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-06"},{"lineNumber":124,"author":{"gitId":"Gordon25"},"content":"        String userText \u003d userInput.getText();","lastModifiedDate":"2021-09-06"},{"lineNumber":125,"author":{"gitId":"Gordon25"},"content":"        String dukeText \u003d getResponse(userInput.getText());","lastModifiedDate":"2021-09-06"},{"lineNumber":126,"author":{"gitId":"Gordon25"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-06"},{"lineNumber":127,"author":{"gitId":"Gordon25"},"content":"            DialogBox.getUserDialog(userText, user),","lastModifiedDate":"2021-09-06"},{"lineNumber":128,"author":{"gitId":"Gordon25"},"content":"            DialogBox.getDukeDialog(dukeText, duke)","lastModifiedDate":"2021-09-06"},{"lineNumber":129,"author":{"gitId":"Gordon25"},"content":"        );","lastModifiedDate":"2021-09-06"},{"lineNumber":130,"author":{"gitId":"Gordon25"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-06"},{"lineNumber":131,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":132,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":133,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":134,"author":{"gitId":"Gordon25"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2021-09-06"},{"lineNumber":135,"author":{"gitId":"Gordon25"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2021-09-06"},{"lineNumber":136,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":137,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":138,"author":{"gitId":"Gordon25"},"content":"    String getResponse(String input) {","lastModifiedDate":"2021-09-06"},{"lineNumber":139,"author":{"gitId":"Gordon25"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":140,"author":{"gitId":"Gordon25"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2021-09-06"},{"lineNumber":141,"author":{"gitId":"Gordon25"},"content":"            return c.execute(tasks, ui, storage);","lastModifiedDate":"2021-09-07"},{"lineNumber":142,"author":{"gitId":"Gordon25"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":143,"author":{"gitId":"Gordon25"},"content":"            return e.getMessage();","lastModifiedDate":"2021-09-06"},{"lineNumber":144,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":145,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":146,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":147,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":148,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":149,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"Gordon25":149}},{"path":"src/main/java/duke/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"package duke.gui;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"public class Launcher {","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"Gordon25":12}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"package duke.gui;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"    private DukeApplication dukeApplication \u003d new DukeApplication();","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(dukeApplication);","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"            stage.show();","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"Gordon25":31}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"package duke.gui;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"    private DukeApplication dukeApplication;","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpeg\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.jpg\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"    public void setDuke(DukeApplication d) {","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"Gordon25"},"content":"        dukeApplication \u003d d;","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"Gordon25"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"Gordon25"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"Gordon25"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"Gordon25"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"Gordon25"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"Gordon25"},"content":"        String response \u003d dukeApplication.getResponse(input);","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"Gordon25"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"Gordon25"},"content":"            DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"Gordon25"},"content":"            DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"Gordon25"},"content":"        );","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"Gordon25"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"Gordon25":52}},{"path":"src/main/java/duke/main/Date.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"package duke.main;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":" * Represents the local date format of the given date..","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":" *","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":" * @author Gordon Yit","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":" * @version CS2103T Semester 1","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"public class Date {","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"    protected LocalDate localDate;","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"     * @param dateComponents components of the date","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"     * @throws DateTimeParseException exception caused by improper time format.","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"    public Date(String ... dateComponents) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"        assert dateComponents !\u003d null : \"date must not be empty\";","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"            localDate \u003d LocalDate.parse(String.format(\"%s-%s-%s\", \"2021\", dateComponents[1], dateComponents[0]));","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"            assert localDate !\u003d null : \"localDate must not be null\";","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"            throw new DukeException(DukeException.Exceptions.ArrayIndexOutOfBoundsException);","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"            throw new DukeException(DukeException.Exceptions.DateTimeParseException);","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"Gordon25"},"content":"     * Returns string format of the datetime.","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"Gordon25"},"content":"     * @return date in form DD MMM YYYY.","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"Gordon25"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"Gordon25"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"Gordon25"},"content":"        return localDate.format(DateTimeFormatter.ofPattern(\"MMM dd\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"Gordon25"},"content":"     * Retrieves the local date object.","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"Gordon25"},"content":"     * @return the local date of the date due.","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"Gordon25"},"content":"    public LocalDate getLocalDate() {","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"Gordon25"},"content":"        return this.localDate;","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"Gordon25"},"content":"     * Checks if a given local date equals this local date.","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"Gordon25"},"content":"     * @param dateString the given local date object.","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"Gordon25"},"content":"     * @return true if both local dates are equal, false otherwise.","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"Gordon25"},"content":"    public boolean isSameDate(String dateString) {","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"Gordon25"},"content":"        return toString().equals(dateString);","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"Gordon25"},"content":"     * converts a given date string into a date object.","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"Gordon25"},"content":"     * @param dateString in form of DD MMM YYYY.","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"Gordon25"},"content":"     * @return a date object corresponding to the date string.","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"Gordon25"},"content":"     * @throws ParseException exception caused by parsing date in improper format.","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"Gordon25"},"content":"    public static Date convertDateStringToDate(String dateString) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":72,"author":{"gitId":"Gordon25"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":73,"author":{"gitId":"Gordon25"},"content":"            SimpleDateFormat monthDayFormat \u003d new SimpleDateFormat(\"MMM D\");","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"Gordon25"},"content":"            java.util.Date monthDayDate \u003d monthDayFormat.parse(dateString);","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"Gordon25"},"content":"            SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"DD/MM/YYYY\");","lastModifiedDate":"2021-09-10"},{"lineNumber":76,"author":{"gitId":"Gordon25"},"content":"            assert dateFormat !\u003d null : \"dateFormat cannot be null\";","lastModifiedDate":"2021-09-10"},{"lineNumber":77,"author":{"gitId":"Gordon25"},"content":"            return new Date(dateFormat.format(monthDayDate));","lastModifiedDate":"2021-09-10"},{"lineNumber":78,"author":{"gitId":"Gordon25"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":79,"author":{"gitId":"Gordon25"},"content":"            throw new DukeException(DukeException.Exceptions.DateTimeParseException);","lastModifiedDate":"2021-09-13"},{"lineNumber":80,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":81,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":82,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"Gordon25":82}},{"path":"src/main/java/duke/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"package duke.main;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":" * Represents the duke chat bot, which has the ability to log and track and delete tasks.","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":" *","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":" * @author Gordon Yit","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":" * @version CS2103T, Semester 2","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":"public class Duke {","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"     * @param fileName name of the storage file.","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"     * @param filePath directory of the storage file.","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"    public Duke(String filePath, String fileName) {","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"        assert fileName !\u003d null : \"filepath cannot be empty\";","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"        assert fileName !\u003d null : \"filename cannot be empty\";","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"        storage \u003d new Storage(filePath, fileName);","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"            tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"     * Runs the Duke.Duke chat bot.","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"Gordon25"},"content":"     * @param args Unused.","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"Gordon25"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"Gordon25"},"content":"        new Duke(\"data\", \"duke.txt\").run();","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"Gordon25"},"content":"     * Executes the duke chat bot.","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"Gordon25"},"content":"    public void run() {","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"Gordon25"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"Gordon25"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"Gordon25"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"Gordon25"},"content":"            try {","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"Gordon25"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"Gordon25"},"content":"                ui.showLine();","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"Gordon25"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"Gordon25"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"Gordon25"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"Gordon25"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"Gordon25"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"Gordon25"},"content":"            } finally {","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"Gordon25"},"content":"                ui.showLine();","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"Gordon25"},"content":"            }","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"Gordon25":65}},{"path":"src/main/java/duke/main/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"package duke.main;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":" * Represents exceptions raised in Duke.Duke.","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":" *","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":" * @author Gordon Yit","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":" * @version CS2103T, Semester 2.","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":"    private Exceptions exception;","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"     * @param exception the exception thrown.","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"    public DukeException(Exceptions exception) {","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"        this.exception \u003d exception;","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"     * Enum of exceptions handled by DukeException.","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"    public enum Exceptions {","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"        StringIndexOutOfBoundsException,","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"        ArrayIndexOutOfBoundsException,","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"        IndexOutOfBoundsException,","lastModifiedDate":"2021-09-10"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"        IOException,","lastModifiedDate":"2021-09-10"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"        DateTimeParseException,","lastModifiedDate":"2021-09-10"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"        EXCEPTIONS;","lastModifiedDate":"2021-09-10"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":35,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"Gordon25"},"content":"     * Returns a message notifying user of an error.","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"Gordon25"},"content":"     * @return error message.","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"Gordon25"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"Gordon25"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"Gordon25"},"content":"        String message;","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"Gordon25"},"content":"        String exceptionName \u003d exception.toString().split(\":\")[0];","lastModifiedDate":"2021-09-10"},{"lineNumber":44,"author":{"gitId":"Gordon25"},"content":"        switch (exception) {","lastModifiedDate":"2021-09-10"},{"lineNumber":45,"author":{"gitId":"Gordon25"},"content":"        case StringIndexOutOfBoundsException:","lastModifiedDate":"2021-09-10"},{"lineNumber":46,"author":{"gitId":"Gordon25"},"content":"        case ArrayIndexOutOfBoundsException:","lastModifiedDate":"2021-09-10"},{"lineNumber":47,"author":{"gitId":"Gordon25"},"content":"            message \u003d \"☹ The duke.task description or duke.command is incomplete.:$\\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"Gordon25"},"content":"            break;","lastModifiedDate":"2021-09-10"},{"lineNumber":49,"author":{"gitId":"Gordon25"},"content":"        case IndexOutOfBoundsException:","lastModifiedDate":"2021-09-10"},{"lineNumber":50,"author":{"gitId":"Gordon25"},"content":"            message \u003d \"☹ OH NO!!! The duke.task does not exist.\u003e:(\\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"Gordon25"},"content":"            break;","lastModifiedDate":"2021-09-10"},{"lineNumber":52,"author":{"gitId":"Gordon25"},"content":"        case IOException:","lastModifiedDate":"2021-09-10"},{"lineNumber":53,"author":{"gitId":"Gordon25"},"content":"            message \u003d \"☹ OH NO!!! I cannot find the file.\\n\";","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"Gordon25"},"content":"            break;","lastModifiedDate":"2021-09-10"},{"lineNumber":55,"author":{"gitId":"Gordon25"},"content":"        case DateTimeParseException:","lastModifiedDate":"2021-09-10"},{"lineNumber":56,"author":{"gitId":"Gordon25"},"content":"            message \u003d \"Please enter a proper date and time format.\";","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"Gordon25"},"content":"            break;","lastModifiedDate":"2021-09-10"},{"lineNumber":58,"author":{"gitId":"Gordon25"},"content":"        default:","lastModifiedDate":"2021-09-10"},{"lineNumber":59,"author":{"gitId":"Gordon25"},"content":"            message \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\";","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"Gordon25"},"content":"        return message;","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"Gordon25":63}},{"path":"src/main/java/duke/main/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"package duke.main;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"import duke.command.FilterCommand;","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":"import duke.command.MarkDoneCommand;","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":" * Represents a abstraction to read user input.","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":" *","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":" * @author Gordon Yit","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":" * @version CS2103T, Semester 2","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"public class Parser {","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"    private enum Commands { delete, done, filter, list, deadline, event, todo }","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"     * Takes in a user command, logic decides which command to call.","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"     * @param userInput a string of user input command.","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"     * @return a command object to execute the user command.","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"     * @throws DukeException exception handled by DukeException class.","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"    public static Command parse(String userInput) throws DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"        String commandAction \u003d splitActionAndDetails(userInput)[0];","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"            switch (commandAction) {","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"            case \"done\":","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"                return new MarkDoneCommand(splitActionAndDetails(userInput)[1]);","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"            case \"list\":","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"Gordon25"},"content":"                return new ListCommand();","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"Gordon25"},"content":"            case \"delete\":","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"                return new DeleteCommand(splitActionAndDetails(userInput)[1]);","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"Gordon25"},"content":"            case \"filter\":","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"Gordon25"},"content":"                return new FilterCommand(splitActionAndDetails(userInput)[1]);","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"Gordon25"},"content":"            case \"find\":","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"Gordon25"},"content":"                return new FindCommand(userInput);","lastModifiedDate":"2021-09-10"},{"lineNumber":42,"author":{"gitId":"Gordon25"},"content":"            case \"bye\":","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"Gordon25"},"content":"                return new ExitCommand();","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"Gordon25"},"content":"            case \"deadline\" :","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"Gordon25"},"content":"            case \"event\" :","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"Gordon25"},"content":"            case \"todo\" :","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"Gordon25"},"content":"                return new AddCommand(userInput);","lastModifiedDate":"2021-09-11"},{"lineNumber":48,"author":{"gitId":"Gordon25"},"content":"            default:","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"Gordon25"},"content":"                assert commandAction !\u003d \"bye\" : \"action is not bye\";","lastModifiedDate":"2021-09-13"},{"lineNumber":50,"author":{"gitId":"Gordon25"},"content":"                throw new IllegalArgumentException();","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"Gordon25"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"Gordon25"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"Gordon25"},"content":"            throw new DukeException(DukeException.Exceptions.ArrayIndexOutOfBoundsException);","lastModifiedDate":"2021-09-10"},{"lineNumber":54,"author":{"gitId":"Gordon25"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"Gordon25"},"content":"            throw new DukeException(DukeException.Exceptions.EXCEPTIONS);","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":57,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"Gordon25"},"content":"    private static String[] splitActionAndDetails(String userInput) {","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"Gordon25"},"content":"        return userInput.split(\" \", 0);","lastModifiedDate":"2021-09-10"},{"lineNumber":60,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"Gordon25":61}},{"path":"src/main/java/duke/main/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"package duke.main;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"import java.io.File;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":"import duke.task.TaskTag;","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":" * Represents a file to store data, operations to write on the file.","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":" *","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":" * @author Gordon","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":" * @version CS2103T, Semester 2","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"public class Storage {","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"    private String filePath;","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"    private String fileName;","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"    private File file;","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"    private FileWriter fileWriter;","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"     * @param filePath the path from the project directory to the storage file.","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"     * @param fileName the name of the file.","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"    public Storage(String filePath, String fileName) {","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"        assert filePath !\u003d null \u0026\u0026 fileName !\u003d null : \"filepath and filename cannot be null\";","lastModifiedDate":"2021-09-10"},{"lineNumber":35,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"Gordon25"},"content":"     * Opens the storage file, if it exists, else creates a new file.","lastModifiedDate":"2021-09-10"},{"lineNumber":39,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"Gordon25"},"content":"     * @return the storage file.","lastModifiedDate":"2021-09-10"},{"lineNumber":41,"author":{"gitId":"Gordon25"},"content":"     * @throws DukeException thrown if there is an exception from creating a new file.","lastModifiedDate":"2021-09-10"},{"lineNumber":42,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"Gordon25"},"content":"    public File loadStorageFile() throws DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":44,"author":{"gitId":"Gordon25"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"Gordon25"},"content":"            File fileDirectory \u003d new File(filePath);","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"Gordon25"},"content":"            if (!fileDirectory.exists()) {","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"Gordon25"},"content":"                fileDirectory.mkdir();","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"Gordon25"},"content":"            }","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"Gordon25"},"content":"            file \u003d new File(filePath + \"/\" + fileName);","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"Gordon25"},"content":"            if (!file.exists()) {","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"Gordon25"},"content":"                file.createNewFile();","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"Gordon25"},"content":"            }","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"Gordon25"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-10"},{"lineNumber":54,"author":{"gitId":"Gordon25"},"content":"            file \u003d new File(filePath);","lastModifiedDate":"2021-09-10"},{"lineNumber":55,"author":{"gitId":"Gordon25"},"content":"            throw new DukeException(DukeException.Exceptions.IOException);","lastModifiedDate":"2021-09-10"},{"lineNumber":56,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"Gordon25"},"content":"        return file;","lastModifiedDate":"2021-09-10"},{"lineNumber":58,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":60,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":61,"author":{"gitId":"Gordon25"},"content":"     * Loads all the tasks stored in the storage file into an arraylist.","lastModifiedDate":"2021-09-10"},{"lineNumber":62,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":63,"author":{"gitId":"Gordon25"},"content":"     * @return an arraylists of tasks stored.","lastModifiedDate":"2021-09-10"},{"lineNumber":64,"author":{"gitId":"Gordon25"},"content":"     * @throws DukeException thrown if there is an error creating the new tasks.","lastModifiedDate":"2021-09-10"},{"lineNumber":65,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":66,"author":{"gitId":"Gordon25"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":67,"author":{"gitId":"Gordon25"},"content":"        File storageFile \u003d loadStorageFile();","lastModifiedDate":"2021-09-10"},{"lineNumber":68,"author":{"gitId":"Gordon25"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-10"},{"lineNumber":69,"author":{"gitId":"Gordon25"},"content":"        Task task;","lastModifiedDate":"2021-09-10"},{"lineNumber":70,"author":{"gitId":"Gordon25"},"content":"        try {","lastModifiedDate":"2021-09-10"},{"lineNumber":71,"author":{"gitId":"Gordon25"},"content":"            if (storageFile.length() \u003c 1) {","lastModifiedDate":"2021-09-10"},{"lineNumber":72,"author":{"gitId":"Gordon25"},"content":"                return tasks;","lastModifiedDate":"2021-09-10"},{"lineNumber":73,"author":{"gitId":"Gordon25"},"content":"            }","lastModifiedDate":"2021-09-10"},{"lineNumber":74,"author":{"gitId":"Gordon25"},"content":"            Scanner sc \u003d new Scanner(storageFile);","lastModifiedDate":"2021-09-10"},{"lineNumber":75,"author":{"gitId":"Gordon25"},"content":"            String storedTask;","lastModifiedDate":"2021-09-10"},{"lineNumber":76,"author":{"gitId":"Gordon25"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2021-09-10"},{"lineNumber":77,"author":{"gitId":"Gordon25"},"content":"                storedTask \u003d sc.nextLine();","lastModifiedDate":"2021-09-10"},{"lineNumber":78,"author":{"gitId":"Gordon25"},"content":"                task \u003d createNewTask(storedTask);","lastModifiedDate":"2021-09-10"},{"lineNumber":79,"author":{"gitId":"Gordon25"},"content":"                tasks.add(task);","lastModifiedDate":"2021-09-10"},{"lineNumber":80,"author":{"gitId":"Gordon25"},"content":"            }","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"Gordon25"},"content":"            sc.close();","lastModifiedDate":"2021-08-30"},{"lineNumber":82,"author":{"gitId":"Gordon25"},"content":"            return tasks;","lastModifiedDate":"2021-09-10"},{"lineNumber":83,"author":{"gitId":"Gordon25"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":84,"author":{"gitId":"Gordon25"},"content":"            throw new DukeException(DukeException.Exceptions.IOException);","lastModifiedDate":"2021-09-10"},{"lineNumber":85,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":86,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":87,"author":{"gitId":"Gordon25"},"content":"    private Task createNewTask(String taskString) throws DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":88,"author":{"gitId":"Gordon25"},"content":"        Task task;","lastModifiedDate":"2021-09-10"},{"lineNumber":89,"author":{"gitId":"Gordon25"},"content":"        if (taskString.contains(\"D |\")) {","lastModifiedDate":"2021-09-10"},{"lineNumber":90,"author":{"gitId":"Gordon25"},"content":"            String[] taskDescriptionTagAndDate \u003d getTaskDescriptionTagAndDate(taskString, \"| D | \",","lastModifiedDate":"2021-09-20"},{"lineNumber":91,"author":{"gitId":"Gordon25"},"content":"                    \"by \");","lastModifiedDate":"2021-09-20"},{"lineNumber":92,"author":{"gitId":"Gordon25"},"content":"            task \u003d Task.createTask(\"D\", taskDescriptionTagAndDate[0], taskDescriptionTagAndDate[2],","lastModifiedDate":"2021-09-20"},{"lineNumber":93,"author":{"gitId":"Gordon25"},"content":"                    taskDescriptionTagAndDate[1]);","lastModifiedDate":"2021-09-20"},{"lineNumber":94,"author":{"gitId":"Gordon25"},"content":"        } else if (taskString.contains(\"E |\")) {","lastModifiedDate":"2021-09-10"},{"lineNumber":95,"author":{"gitId":"Gordon25"},"content":"            String[] taskDescriptionDateAndTag \u003d getTaskDescriptionTagAndDate(taskString, \"| E | \",","lastModifiedDate":"2021-09-20"},{"lineNumber":96,"author":{"gitId":"Gordon25"},"content":"                    \"at \");","lastModifiedDate":"2021-09-20"},{"lineNumber":97,"author":{"gitId":"Gordon25"},"content":"            task \u003d Task.createTask(\"E\", taskDescriptionDateAndTag[0], taskDescriptionDateAndTag[2],","lastModifiedDate":"2021-09-20"},{"lineNumber":98,"author":{"gitId":"Gordon25"},"content":"                    taskDescriptionDateAndTag[1]);","lastModifiedDate":"2021-09-20"},{"lineNumber":99,"author":{"gitId":"Gordon25"},"content":"        } else {","lastModifiedDate":"2021-09-10"},{"lineNumber":100,"author":{"gitId":"Gordon25"},"content":"            // todo tasks have no dates, so only take task description.","lastModifiedDate":"2021-09-11"},{"lineNumber":101,"author":{"gitId":"Gordon25"},"content":"            String[] taskDescriptionAndTag \u003d getTaskDescriptionTagAndDate(taskString, \"| T | \");","lastModifiedDate":"2021-09-20"},{"lineNumber":102,"author":{"gitId":"Gordon25"},"content":"            task \u003d Task.createTask(\"T\", taskDescriptionAndTag[0], taskDescriptionAndTag[1]);","lastModifiedDate":"2021-09-20"},{"lineNumber":103,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":104,"author":{"gitId":"Gordon25"},"content":"        if (taskString.contains(\"| 0 |\")) {","lastModifiedDate":"2021-09-10"},{"lineNumber":105,"author":{"gitId":"Gordon25"},"content":"            task.markAsDone();","lastModifiedDate":"2021-09-10"},{"lineNumber":106,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":107,"author":{"gitId":"Gordon25"},"content":"        return task;","lastModifiedDate":"2021-09-10"},{"lineNumber":108,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":109,"author":{"gitId":"Gordon25"},"content":"    @SuppressWarnings(\"checkstyle:AbbreviationAsWordInName\")","lastModifiedDate":"2021-09-20"},{"lineNumber":110,"author":{"gitId":"Gordon25"},"content":"    private String[] getTaskDescriptionTagAndDate(String taskString, String taskMarker, String ... timeMarker) {","lastModifiedDate":"2021-09-20"},{"lineNumber":111,"author":{"gitId":"Gordon25"},"content":"        String divider \u003d \" | \";","lastModifiedDate":"2021-09-20"},{"lineNumber":112,"author":{"gitId":"Gordon25"},"content":"        int startOfTaskDescriptionIndex \u003d getStartingIndex(taskString, taskMarker);","lastModifiedDate":"2021-09-20"},{"lineNumber":113,"author":{"gitId":"Gordon25"},"content":"        int startOfTaskDateIndex \u003d -1;","lastModifiedDate":"2021-09-10"},{"lineNumber":114,"author":{"gitId":"Gordon25"},"content":"        String taskTagSymbol \u003d TaskTag.getStorageTagSymbol();","lastModifiedDate":"2021-09-20"},{"lineNumber":115,"author":{"gitId":"Gordon25"},"content":"        if (timeMarker !\u003d null) {","lastModifiedDate":"2021-09-20"},{"lineNumber":116,"author":{"gitId":"Gordon25"},"content":"            startOfTaskDateIndex \u003d getStartingIndex(taskString, timeMarker[0]);","lastModifiedDate":"2021-09-20"},{"lineNumber":117,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":118,"author":{"gitId":"Gordon25"},"content":"        String taskDescription \u003d taskString.substring(startOfTaskDescriptionIndex,","lastModifiedDate":"2021-09-10"},{"lineNumber":119,"author":{"gitId":"Gordon25"},"content":"                startOfTaskDateIndex);","lastModifiedDate":"2021-09-10"},{"lineNumber":120,"author":{"gitId":"Gordon25"},"content":"        String taskDate;","lastModifiedDate":"2021-09-20"},{"lineNumber":121,"author":{"gitId":"Gordon25"},"content":"        String taskTag;","lastModifiedDate":"2021-09-20"},{"lineNumber":122,"author":{"gitId":"Gordon25"},"content":"        if (!taskDescription.contains(TaskTag.getStorageTagSymbol())) {","lastModifiedDate":"2021-09-20"},{"lineNumber":123,"author":{"gitId":"Gordon25"},"content":"            taskDate \u003d taskDescription.substring(startOfTaskDateIndex);","lastModifiedDate":"2021-09-20"},{"lineNumber":124,"author":{"gitId":"Gordon25"},"content":"            taskTag \u003d \"\";","lastModifiedDate":"2021-09-20"},{"lineNumber":125,"author":{"gitId":"Gordon25"},"content":"        } else {","lastModifiedDate":"2021-09-20"},{"lineNumber":126,"author":{"gitId":"Gordon25"},"content":"            int startOfTagIndex \u003d getStartingIndex(taskString, taskTagSymbol);","lastModifiedDate":"2021-09-20"},{"lineNumber":127,"author":{"gitId":"Gordon25"},"content":"            taskDate \u003d taskDescription.substring(startOfTaskDateIndex, startOfTagIndex - taskTagSymbol.length());","lastModifiedDate":"2021-09-20"},{"lineNumber":128,"author":{"gitId":"Gordon25"},"content":"            taskTag \u003d taskTagSymbol.substring(startOfTagIndex - divider.length());","lastModifiedDate":"2021-09-20"},{"lineNumber":129,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":130,"author":{"gitId":"Gordon25"},"content":"        return new String[]{taskDescription, taskTag, taskDate};","lastModifiedDate":"2021-09-20"},{"lineNumber":131,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":132,"author":{"gitId":"Gordon25"},"content":"    private int getStartingIndex(String string, String stringSlicer) {","lastModifiedDate":"2021-09-11"},{"lineNumber":133,"author":{"gitId":"Gordon25"},"content":"        return string.indexOf(stringSlicer) + stringSlicer.length();","lastModifiedDate":"2021-09-10"},{"lineNumber":134,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":135,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":136,"author":{"gitId":"Gordon25"},"content":"     * Stores all the tasks from the tasks array into the storage file.","lastModifiedDate":"2021-08-30"},{"lineNumber":137,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":138,"author":{"gitId":"Gordon25"},"content":"     * @param tasks an arraylist of tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":139,"author":{"gitId":"Gordon25"},"content":"     * @throws IOException exception caused in creating new file.","lastModifiedDate":"2021-09-01"},{"lineNumber":140,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":141,"author":{"gitId":"Gordon25"},"content":"    public void store(TaskList tasks) throws IOException {","lastModifiedDate":"2021-09-01"},{"lineNumber":142,"author":{"gitId":"Gordon25"},"content":"        fileWriter \u003d new FileWriter(file, false);","lastModifiedDate":"2021-08-30"},{"lineNumber":143,"author":{"gitId":"Gordon25"},"content":"        String data \u003d \"\";","lastModifiedDate":"2021-08-30"},{"lineNumber":144,"author":{"gitId":"Gordon25"},"content":"        for (int i \u003d 0; i \u003c tasks.getNumTasks(); i++) {","lastModifiedDate":"2021-09-01"},{"lineNumber":145,"author":{"gitId":"Gordon25"},"content":"            data \u003d data.concat(tasks.getTask(i).formatToStore() + \"\\n\");","lastModifiedDate":"2021-09-02"},{"lineNumber":146,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":147,"author":{"gitId":"Gordon25"},"content":"        fileWriter.write(data);","lastModifiedDate":"2021-08-30"},{"lineNumber":148,"author":{"gitId":"Gordon25"},"content":"        fileWriter.close();","lastModifiedDate":"2021-08-30"},{"lineNumber":149,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":150,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":151,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"Gordon25":151}},{"path":"src/main/java/duke/main/TaskDate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"package duke.main;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"import java.util.Date;","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":" * Represents the local date format of the given date..","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":" *","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":" * @author Gordon Yit","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":" * @version CS2103T Semester 1","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"public class TaskDate {","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"    protected LocalDate localDate;","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"     * @param dateString given in the form dd/mm/yyyy or dd/mm.","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"     * @throws DateTimeParseException exception caused by improper time format.","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"    public TaskDate(String dateString) throws DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"        String[] dayMonthYear \u003d dateString.split(\"/\");","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"            localDate \u003d LocalDate.parse(reformatDateString(dayMonthYear));","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"            throw new DukeException(DukeException.Exceptions.DateTimeParseException);","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"    private String reformatDateString(String ... dayMonthYear) throws DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"        try {","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"Gordon25"},"content":"            return String.format(\"%s-%s-%s\", \"2021\", dayMonthYear[1], dayMonthYear[0]);","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"Gordon25"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"            throw new DukeException(DukeException.Exceptions.ArrayIndexOutOfBoundsException);","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"Gordon25"},"content":"     * Returns string format of the datetime.","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"Gordon25"},"content":"     * @return date in form DD MMM YYYY.","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"Gordon25"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"Gordon25"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"Gordon25"},"content":"        return localDate.format(getDateFormat());","lastModifiedDate":"2021-09-10"},{"lineNumber":48,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"Gordon25"},"content":"    private DateTimeFormatter getDateFormat() {","lastModifiedDate":"2021-09-10"},{"lineNumber":51,"author":{"gitId":"Gordon25"},"content":"        //formats the date in the form mmm dd, ie Jan 01.","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"Gordon25"},"content":"        return DateTimeFormatter.ofPattern(\"MMM dd\");","lastModifiedDate":"2021-09-10"},{"lineNumber":53,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":54,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"Gordon25"},"content":"     * Retrieves the local date object.","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"Gordon25"},"content":"     * @return the local date of the date due.","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"Gordon25"},"content":"    public LocalDate getLocalDate() {","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"Gordon25"},"content":"        return this.localDate;","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"Gordon25"},"content":"     * Checks if a given local date equals this local date.","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"Gordon25"},"content":"     * @param dateString the given local date object.","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"Gordon25"},"content":"     * @return true if both dates are equal, false otherwise.","lastModifiedDate":"2021-09-11"},{"lineNumber":68,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"Gordon25"},"content":"    public boolean equals(String dateString) throws DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":70,"author":{"gitId":"Gordon25"},"content":"        LocalDate date \u003d LocalDate.parse(reformatDateString(dateString.split(\"/\")));","lastModifiedDate":"2021-09-11"},{"lineNumber":71,"author":{"gitId":"Gordon25"},"content":"        return localDate.isEqual(date);","lastModifiedDate":"2021-09-11"},{"lineNumber":72,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"Gordon25"},"content":"     * Converts a given date string into a date object.","lastModifiedDate":"2021-09-11"},{"lineNumber":76,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":77,"author":{"gitId":"Gordon25"},"content":"     * @param dateString in form of DD MMM YYYY.","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"Gordon25"},"content":"     * @return a date object corresponding to the date string.","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"Gordon25"},"content":"     * @throws ParseException exception caused by parsing date in improper format.","lastModifiedDate":"2021-09-01"},{"lineNumber":80,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"Gordon25"},"content":"    public static TaskDate convertDateStringToDate(String dateString) throws DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":82,"author":{"gitId":"Gordon25"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":83,"author":{"gitId":"Gordon25"},"content":"            Date monthDayDate \u003d getFormattedDate(\"MMM D\", dateString);","lastModifiedDate":"2021-09-11"},{"lineNumber":84,"author":{"gitId":"Gordon25"},"content":"            SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"DD/MM/YYYY\");","lastModifiedDate":"2021-09-10"},{"lineNumber":85,"author":{"gitId":"Gordon25"},"content":"            return new TaskDate(getFormattedDateString(dateFormat, monthDayDate));","lastModifiedDate":"2021-09-10"},{"lineNumber":86,"author":{"gitId":"Gordon25"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":87,"author":{"gitId":"Gordon25"},"content":"            throw new DukeException(DukeException.Exceptions.EXCEPTIONS);","lastModifiedDate":"2021-09-10"},{"lineNumber":88,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":89,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":90,"author":{"gitId":"Gordon25"},"content":"    private static Date getFormattedDate(String dateFormatString, String dateString) throws ParseException {","lastModifiedDate":"2021-09-10"},{"lineNumber":91,"author":{"gitId":"Gordon25"},"content":"        SimpleDateFormat monthDayFormat \u003d new SimpleDateFormat(dateFormatString);","lastModifiedDate":"2021-09-10"},{"lineNumber":92,"author":{"gitId":"Gordon25"},"content":"        return monthDayFormat.parse(dateString);","lastModifiedDate":"2021-09-10"},{"lineNumber":93,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":94,"author":{"gitId":"Gordon25"},"content":"    private static String getFormattedDateString(SimpleDateFormat simpleDateFormat, Date monthDayDate) {","lastModifiedDate":"2021-09-11"},{"lineNumber":95,"author":{"gitId":"Gordon25"},"content":"        return simpleDateFormat.format(monthDayDate);","lastModifiedDate":"2021-09-10"},{"lineNumber":96,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":97,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"Gordon25":97}},{"path":"src/main/java/duke/main/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"package duke.main;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":" * Represents user interface abstraction.","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":" *","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":" * @author Gordon Yit","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":" * @version CS2103T","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":"public class Ui {","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"    private static String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"        + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"        + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"        + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"        + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"    private static String padding \u003d \"~\";","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"    private static String firstLine \u003d \" Hello! I\u0027m Duke.Duke \";","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"    private static String secondLine \u003d \" What do you wanna do today? \";","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"    private static int bufferLength \u003d 5;","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"    private static int width \u003d Integer.max(firstLine.length(), secondLine.length()) + bufferLength;","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"    private static final String FAREWELL \u003d \"@@@@ Till we meet again, my friend @@@@\";","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"    private static String buffer1 \u003d padding.repeat((width - firstLine.length()) / 2);","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"    private static String buffer2 \u003d padding.repeat((width - secondLine.length()) / 2);","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"    private static String welcomeMessage \u003d buffer1 + firstLine + buffer1 + \"\\n\" + buffer2 + secondLine + buffer2 + \"\\n\";","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"    private static final String GREETING \u003d \"Hello from\\n\" + logo + welcomeMessage;","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"    private Scanner sc;","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"Gordon25"},"content":"    public Ui() {","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"Gordon25"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"Gordon25"},"content":"     * Welcomes the user.","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"Gordon25"},"content":"    public String showWelcome() {","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"Gordon25"},"content":"        return GREETING;","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"Gordon25"},"content":"     * Reads user commands","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"Gordon25"},"content":"     * @return user commands as a string.","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"Gordon25"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"Gordon25"},"content":"        String command \u003d sc.nextLine();","lastModifiedDate":"2021-09-21"},{"lineNumber":53,"author":{"gitId":"Gordon25"},"content":"        return command;","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"Gordon25"},"content":"     * Shows farewell message to user.","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"Gordon25"},"content":"    public String showFarewell() {","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"Gordon25"},"content":"        return FAREWELL;","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"Gordon25"},"content":"     * Shows the diving line.","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"Gordon25"},"content":"    public String showLine() {","lastModifiedDate":"2021-09-07"},{"lineNumber":67,"author":{"gitId":"Gordon25"},"content":"        String line \u003d \"_________________________________\";","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"Gordon25"},"content":"        return line;","lastModifiedDate":"2021-09-07"},{"lineNumber":69,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"Gordon25"},"content":"     * Shows the error message from loading the file.","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"Gordon25"},"content":"    public String showLoadingError() {","lastModifiedDate":"2021-09-07"},{"lineNumber":75,"author":{"gitId":"Gordon25"},"content":"        String loadingError \u003d \"There was a problem loading the file.\";","lastModifiedDate":"2021-08-30"},{"lineNumber":76,"author":{"gitId":"Gordon25"},"content":"        return loadingError;","lastModifiedDate":"2021-09-07"},{"lineNumber":77,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":80,"author":{"gitId":"Gordon25"},"content":"     * Shows the error message from dukeException class.","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":82,"author":{"gitId":"Gordon25"},"content":"     * @param errorMessage exception message.","lastModifiedDate":"2021-09-01"},{"lineNumber":83,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":84,"author":{"gitId":"Gordon25"},"content":"    public String showError(String errorMessage) {","lastModifiedDate":"2021-09-07"},{"lineNumber":85,"author":{"gitId":"Gordon25"},"content":"        return errorMessage;","lastModifiedDate":"2021-09-07"},{"lineNumber":86,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":87,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":88,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":89,"author":{"gitId":"Gordon25"},"content":"     * Displays a specific duke.task that was marked done.","lastModifiedDate":"2021-09-02"},{"lineNumber":90,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":91,"author":{"gitId":"Gordon25"},"content":"     * @param task the duke.task marked as done.","lastModifiedDate":"2021-09-02"},{"lineNumber":92,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":93,"author":{"gitId":"Gordon25"},"content":"    public String showMarkTaskDone(Task task) {","lastModifiedDate":"2021-09-07"},{"lineNumber":94,"author":{"gitId":"Gordon25"},"content":"        String doneMessage \u003d \"Yay, one task down!\\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":95,"author":{"gitId":"Gordon25"},"content":"        doneMessage +\u003d String.format(\"~~%s~~\", task.toString());","lastModifiedDate":"2021-09-07"},{"lineNumber":96,"author":{"gitId":"Gordon25"},"content":"        return doneMessage;","lastModifiedDate":"2021-09-07"},{"lineNumber":97,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":98,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":99,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":100,"author":{"gitId":"Gordon25"},"content":"     * Shows the task deleted.","lastModifiedDate":"2021-09-07"},{"lineNumber":101,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":102,"author":{"gitId":"Gordon25"},"content":"     * @param task the deleted task.","lastModifiedDate":"2021-08-30"},{"lineNumber":103,"author":{"gitId":"Gordon25"},"content":"     * @param numTasksRemaining number of tasks after deleting the task.","lastModifiedDate":"2021-09-06"},{"lineNumber":104,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":105,"author":{"gitId":"Gordon25"},"content":"    public String showTaskDeleted(Task task, int numTasksRemaining) {","lastModifiedDate":"2021-09-07"},{"lineNumber":106,"author":{"gitId":"Gordon25"},"content":"        assert numTasksRemaining \u003e\u003d 0 : \"number of task remaining cannot be a negative number\";","lastModifiedDate":"2021-09-10"},{"lineNumber":107,"author":{"gitId":"Gordon25"},"content":"        return generateNotificationMessage(\"Alrightty, I\u0027ve removed this task:\", task, numTasksRemaining);","lastModifiedDate":"2021-09-10"},{"lineNumber":108,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":109,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":110,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":111,"author":{"gitId":"Gordon25"},"content":"     * Shows the task added.","lastModifiedDate":"2021-09-10"},{"lineNumber":112,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":113,"author":{"gitId":"Gordon25"},"content":"     * @param task the task added.","lastModifiedDate":"2021-09-10"},{"lineNumber":114,"author":{"gitId":"Gordon25"},"content":"     * @param newNumTasks number of tasks after adding the new duke.task.","lastModifiedDate":"2021-09-02"},{"lineNumber":115,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":116,"author":{"gitId":"Gordon25"},"content":"    public String showTaskAdded(Task task, int newNumTasks) {","lastModifiedDate":"2021-09-07"},{"lineNumber":117,"author":{"gitId":"Gordon25"},"content":"        assert newNumTasks \u003e\u003d 0 : \"new number of tasks cannot be a negative number\";","lastModifiedDate":"2021-09-10"},{"lineNumber":118,"author":{"gitId":"Gordon25"},"content":"        return generateNotificationMessage(\"Got it. I\u0027ve added this task:\", task, newNumTasks);","lastModifiedDate":"2021-09-10"},{"lineNumber":119,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":120,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":121,"author":{"gitId":"Gordon25"},"content":"    @SuppressWarnings(\"checkstyle:SeparatorWrap\")","lastModifiedDate":"2021-09-10"},{"lineNumber":122,"author":{"gitId":"Gordon25"},"content":"    private String generateNotificationMessage(String headerMessage, Task task, int taskNum) {","lastModifiedDate":"2021-09-10"},{"lineNumber":123,"author":{"gitId":"Gordon25"},"content":"        String notificationMessage \u003d String.format(\"%s\\n\", headerMessage);","lastModifiedDate":"2021-09-10"},{"lineNumber":124,"author":{"gitId":"Gordon25"},"content":"        notificationMessage +\u003d String.format(\"~~%S~~\\n\", task.toString());","lastModifiedDate":"2021-09-10"},{"lineNumber":125,"author":{"gitId":"Gordon25"},"content":"        notificationMessage +\u003d String.format(\"Now you have %s %s remaining.\", taskNum, (","lastModifiedDate":"2021-09-21"},{"lineNumber":126,"author":{"gitId":"Gordon25"},"content":"            taskNum \u003e 1 ? \"tasks\" : \"task\"));","lastModifiedDate":"2021-09-21"},{"lineNumber":127,"author":{"gitId":"Gordon25"},"content":"        return notificationMessage;","lastModifiedDate":"2021-09-10"},{"lineNumber":128,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":129,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":130,"author":{"gitId":"Gordon25"},"content":"     * Lists out all the tasks Duke.Duke is keeping track of.","lastModifiedDate":"2021-08-30"},{"lineNumber":131,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":132,"author":{"gitId":"Gordon25"},"content":"     * @param tasks current taskList of tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":133,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":134,"author":{"gitId":"Gordon25"},"content":"    public String showListOfTasks(TaskList tasks, int numTasks) {","lastModifiedDate":"2021-09-10"},{"lineNumber":135,"author":{"gitId":"Gordon25"},"content":"        String header \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2021-08-30"},{"lineNumber":136,"author":{"gitId":"Gordon25"},"content":"        return iterate(header, tasks);","lastModifiedDate":"2021-09-07"},{"lineNumber":137,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":138,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":139,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":140,"author":{"gitId":"Gordon25"},"content":"     * Lists out all the tasks that falls on a specified date.","lastModifiedDate":"2021-08-30"},{"lineNumber":141,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":142,"author":{"gitId":"Gordon25"},"content":"     * @param tasks   list of duke.task that fall on the specified date.","lastModifiedDate":"2021-09-02"},{"lineNumber":143,"author":{"gitId":"Gordon25"},"content":"     * @param message the header message.","lastModifiedDate":"2021-09-01"},{"lineNumber":144,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":145,"author":{"gitId":"Gordon25"},"content":"    public String showMatchingTasks(TaskList tasks, String message) {","lastModifiedDate":"2021-09-10"},{"lineNumber":146,"author":{"gitId":"Gordon25"},"content":"        return iterate(message, tasks);","lastModifiedDate":"2021-09-07"},{"lineNumber":147,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":148,"author":{"gitId":"Gordon25"},"content":"    private String iterate(String headerMessage, TaskList tasks) {","lastModifiedDate":"2021-09-07"},{"lineNumber":149,"author":{"gitId":"Gordon25"},"content":"        String listOfTasksDisplay \u003d String.format(\"%s\\n\", headerMessage);","lastModifiedDate":"2021-09-10"},{"lineNumber":150,"author":{"gitId":"Gordon25"},"content":"        String taskString;","lastModifiedDate":"2021-09-10"},{"lineNumber":151,"author":{"gitId":"Gordon25"},"content":"        for (int i \u003d 0; i \u003c tasks.getNumTasks(); i++) {","lastModifiedDate":"2021-09-01"},{"lineNumber":152,"author":{"gitId":"Gordon25"},"content":"            assert i \u003c tasks.getNumTasks() : \"index should be less than number of tasks\";","lastModifiedDate":"2021-09-11"},{"lineNumber":153,"author":{"gitId":"Gordon25"},"content":"            taskString \u003d tasks.getTask(i).toString();","lastModifiedDate":"2021-09-11"},{"lineNumber":154,"author":{"gitId":"Gordon25"},"content":"            listOfTasksDisplay +\u003d String.format(\"%s.%s\\n\", i + 1, taskString);","lastModifiedDate":"2021-09-10"},{"lineNumber":155,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":156,"author":{"gitId":"Gordon25"},"content":"        return listOfTasksDisplay;","lastModifiedDate":"2021-09-07"},{"lineNumber":157,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":158,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"Gordon25":158}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"package duke.task;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"import duke.main.DukeException;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"import duke.main.TaskDate;","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":" * Represents tasks with deadline.","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":" *","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":" * @author Gordon Yit","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":" * @version CS2103T, Semester 1","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":"    private static final String DEADLINE_MARKER \u003d \"D\";","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":"    private static final String DEADLINE_KEYWORD \u003d \"deadline \";","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"    private static final String BY_CONNECTOR \u003d \"by \";","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"    private String deadlineDescription;","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"    private TaskDate deadlineDate;","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"    private String dateString;","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"    private TaskTag deadlineTag;","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"     * @param description consisting of duke.task description and deadline date.","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"    public Deadline(String description) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"        int startOfDescriptionIndex \u003d getStartingIndexAfter(description, DEADLINE_KEYWORD);","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"        int startOfTimingIndex \u003d getStartingIndexAfter(description, BY_CONNECTOR);","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"        deadlineDescription \u003d getSubString(description, startOfDescriptionIndex,","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"                startOfTimingIndex - BY_CONNECTOR.length());","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"        String descriptionDate \u003d getSubString(description, startOfTimingIndex);","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"        deadlineDate \u003d new TaskDate(descriptionDate);","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"        dateString \u003d getDateString();","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"        int startOfDeadlineTag \u003d getStartingIndexAfter(description, TaskTag.getTagSymbol());","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"        String tag \u003d getSubString(description, startOfDeadlineTag - TaskTag.getTagSymbol().length());","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"Gordon25"},"content":"        deadlineTag \u003d new TaskTag(tag);","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"Gordon25"},"content":"        assert !isDone : false;","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"Gordon25"},"content":"     * Class constructor for loading tasks from storage file.","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"Gordon25"},"content":"     * @param deadlineDescription description of deadline duke.task.","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"Gordon25"},"content":"     * @param dateOfTask          date of the deadline duke.task.","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"Gordon25"},"content":"     * @param tag variable number of tags used to tag this task.","lastModifiedDate":"2021-09-13"},{"lineNumber":45,"author":{"gitId":"Gordon25"},"content":"     * @throws DukeException due to improper date format.","lastModifiedDate":"2021-09-21"},{"lineNumber":46,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"Gordon25"},"content":"    public Deadline(String deadlineDescription, String dateOfTask, String tag) throws DukeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":48,"author":{"gitId":"Gordon25"},"content":"        super();","lastModifiedDate":"2021-09-10"},{"lineNumber":49,"author":{"gitId":"Gordon25"},"content":"        this.deadlineDescription \u003d deadlineDescription;","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"Gordon25"},"content":"        this.deadlineDate \u003d TaskDate.convertDateStringToDate(dateOfTask);","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"Gordon25"},"content":"        dateString \u003d getDateString();","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"Gordon25"},"content":"        this.deadlineTag \u003d new TaskTag(tag);","lastModifiedDate":"2021-09-13"},{"lineNumber":53,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":54,"author":{"gitId":"Gordon25"},"content":"    private String getDateString() {","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"Gordon25"},"content":"        return deadlineDate.toString();","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"Gordon25"},"content":"     * Print out the deadline duke.task,","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"Gordon25"},"content":"     * @return string format of the deadline duke.task,","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"Gordon25"},"content":"     * consisting of the duke.task marker \"D\", duke.task description and deadline of the duke.task.","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"Gordon25"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"Gordon25"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"Gordon25"},"content":"        return String.format(\"[%s]%s %s (by: %s) %s\", DEADLINE_MARKER, super.toString(), deadlineDescription,","lastModifiedDate":"2021-09-13"},{"lineNumber":66,"author":{"gitId":"Gordon25"},"content":"                dateString, deadlineTag.getTag());","lastModifiedDate":"2021-09-13"},{"lineNumber":67,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"Gordon25"},"content":"     * Formats the duke.task in to the storage format.","lastModifiedDate":"2021-09-02"},{"lineNumber":71,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"Gordon25"},"content":"     * @return storage format of the duke.task.","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"Gordon25"},"content":"    public String formatToStore() {","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"Gordon25"},"content":"        return String.format(\"%s %s %s | %s %s\", DEADLINE_MARKER, super.formatToStore(),","lastModifiedDate":"2021-09-20"},{"lineNumber":76,"author":{"gitId":"Gordon25"},"content":"                deadlineDescription, dateString, deadlineTag.getTagInStoreFormat());","lastModifiedDate":"2021-09-13"},{"lineNumber":77,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"Gordon25"},"content":"     * Checks if given datetime matches the tasks date time.","lastModifiedDate":"2021-09-11"},{"lineNumber":80,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"Gordon25"},"content":"     * @param dateString date time (in string form) to compare with.","lastModifiedDate":"2021-09-11"},{"lineNumber":82,"author":{"gitId":"Gordon25"},"content":"     * @return true if the duke.task date time matches the date time given.","lastModifiedDate":"2021-09-11"},{"lineNumber":83,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":84,"author":{"gitId":"Gordon25"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":85,"author":{"gitId":"Gordon25"},"content":"    public boolean isSameDateAs(String dateString) throws DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":86,"author":{"gitId":"Gordon25"},"content":"        assert deadlineDate !\u003d null : \"deadline date must not be unassigned\";","lastModifiedDate":"2021-09-11"},{"lineNumber":87,"author":{"gitId":"Gordon25"},"content":"        return this.deadlineDate.equals(dateString);","lastModifiedDate":"2021-09-11"},{"lineNumber":88,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":89,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":90,"author":{"gitId":"Gordon25"},"content":"     * Overrides contains in task by adding an additional check for date, if the search phrase is a date.","lastModifiedDate":"2021-09-11"},{"lineNumber":91,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":92,"author":{"gitId":"Gordon25"},"content":"     * @param searchPhrase the phrase or word or date of interest.","lastModifiedDate":"2021-09-11"},{"lineNumber":93,"author":{"gitId":"Gordon25"},"content":"     * @return true if this deadline task contains the search phrase.","lastModifiedDate":"2021-09-21"},{"lineNumber":94,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":95,"author":{"gitId":"Gordon25"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":96,"author":{"gitId":"Gordon25"},"content":"    public boolean contains(String searchPhrase) {","lastModifiedDate":"2021-09-11"},{"lineNumber":97,"author":{"gitId":"Gordon25"},"content":"        if (searchPhrase.contains(\"/\")) {","lastModifiedDate":"2021-09-11"},{"lineNumber":98,"author":{"gitId":"Gordon25"},"content":"            try {","lastModifiedDate":"2021-09-11"},{"lineNumber":99,"author":{"gitId":"Gordon25"},"content":"                return isSameDateAs(searchPhrase);","lastModifiedDate":"2021-09-11"},{"lineNumber":100,"author":{"gitId":"Gordon25"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":101,"author":{"gitId":"Gordon25"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-09-11"},{"lineNumber":102,"author":{"gitId":"Gordon25"},"content":"            }","lastModifiedDate":"2021-09-11"},{"lineNumber":103,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":104,"author":{"gitId":"Gordon25"},"content":"        return toString().contains(searchPhrase);","lastModifiedDate":"2021-09-11"},{"lineNumber":105,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":106,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"Gordon25":106}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"import duke.main.DukeException;","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"import duke.main.TaskDate;","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":" * Represents tasks with specific timing.","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":" *","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":" * @author Gordon Yit","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":" * @version CS2103T, Semester 2","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":"public class Event extends Task {","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"    private static final String EVENT_MARKER \u003d \"E\";","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"    private static final String TASK_KEYWORD \u003d \"event \";","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"    private static final String AT_CONNECTOR \u003d \"at \";","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"    private String eventDescription;","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"    private TaskDate eventDate;","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"    private String dateString;","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"    private TaskTag eventTag;","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"     * Class constructor.","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"     * @param description consisting of task description and timing.","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"    public Event(String description) throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"        super();","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"        int startOfDescriptionIndex \u003d getStartingIndexAfter(description, TASK_KEYWORD);","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"        int startOfTimeIndex \u003d getStartingIndexAfter(description, AT_CONNECTOR);","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"        eventDescription \u003d getSubString(description, startOfDescriptionIndex,","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"                startOfTimeIndex - AT_CONNECTOR.length());","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"        String descriptionDate \u003d getSubString(description, startOfTimeIndex);","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"        eventDate \u003d new TaskDate(descriptionDate);","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"Gordon25"},"content":"        dateString \u003d getDateString();","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"Gordon25"},"content":"        int startOfEventTags \u003d getStartingIndexAfter(description, TaskTag.getTagSymbol());","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"        String tag \u003d getSubString(description, startOfEventTags - TaskTag.getTagSymbol().length());","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"Gordon25"},"content":"        eventTag \u003d new TaskTag(tag);","lastModifiedDate":"2021-09-13"},{"lineNumber":39,"author":{"gitId":"Gordon25"},"content":"        assert !isDone : false;","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"Gordon25"},"content":"     * Class constructor for loading tasks from storage file.","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"Gordon25"},"content":"     * @param eventDescription description of event task.","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"Gordon25"},"content":"     * @param dateOfTask date of the event task.","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"Gordon25"},"content":"     * @param tag tag used to tag the task.","lastModifiedDate":"2021-09-13"},{"lineNumber":47,"author":{"gitId":"Gordon25"},"content":"     * @throws ParseException due to improper date format.","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"Gordon25"},"content":"    public Event(String eventDescription, String dateOfTask, String tag) throws DukeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":50,"author":{"gitId":"Gordon25"},"content":"        super();","lastModifiedDate":"2021-09-10"},{"lineNumber":51,"author":{"gitId":"Gordon25"},"content":"        this.eventDescription \u003d eventDescription;","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"Gordon25"},"content":"        eventDate \u003d TaskDate.convertDateStringToDate(dateOfTask);","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"Gordon25"},"content":"        dateString \u003d getDateString();","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"Gordon25"},"content":"        this.eventTag \u003d new TaskTag(tag);","lastModifiedDate":"2021-09-13"},{"lineNumber":55,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"Gordon25"},"content":"    private String getDateString() {","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"Gordon25"},"content":"        return eventDate.toString();","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":60,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":61,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"Gordon25"},"content":"     * Print out the event task,","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"Gordon25"},"content":"     * @return string format of the event task,","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"Gordon25"},"content":"     * consisting of the task marker \"E\", task description and duration of the event.","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":67,"author":{"gitId":"Gordon25"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"Gordon25"},"content":"    public String toString() {","lastModifiedDate":"2021-09-05"},{"lineNumber":69,"author":{"gitId":"Gordon25"},"content":"        return String.format(\"[%s]%s %s (at: %s) %s\", EVENT_MARKER, super.toString(), eventDescription,","lastModifiedDate":"2021-09-20"},{"lineNumber":70,"author":{"gitId":"Gordon25"},"content":"                dateString, eventTag.getTag());","lastModifiedDate":"2021-09-20"},{"lineNumber":71,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":72,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":73,"author":{"gitId":"Gordon25"},"content":"     * Formats the task in to the storage format.","lastModifiedDate":"2021-09-05"},{"lineNumber":74,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":75,"author":{"gitId":"Gordon25"},"content":"     * @return storage format of the task.","lastModifiedDate":"2021-09-05"},{"lineNumber":76,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":77,"author":{"gitId":"Gordon25"},"content":"    public String formatToStore() {","lastModifiedDate":"2021-09-05"},{"lineNumber":78,"author":{"gitId":"Gordon25"},"content":"        return String.format(\"%s %s %s | %s %s\", EVENT_MARKER, super.formatToStore(),","lastModifiedDate":"2021-09-20"},{"lineNumber":79,"author":{"gitId":"Gordon25"},"content":"            eventDescription, dateString, eventTag.getTagInStoreFormat());","lastModifiedDate":"2021-09-20"},{"lineNumber":80,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":81,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":82,"author":{"gitId":"Gordon25"},"content":"     * Checks if given datetime matches the tasks date time.","lastModifiedDate":"2021-09-11"},{"lineNumber":83,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":84,"author":{"gitId":"Gordon25"},"content":"     * @param dateString date to compare with in string form.","lastModifiedDate":"2021-09-11"},{"lineNumber":85,"author":{"gitId":"Gordon25"},"content":"     * @return true if the task date time matches the date time given.","lastModifiedDate":"2021-09-11"},{"lineNumber":86,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":87,"author":{"gitId":"Gordon25"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":88,"author":{"gitId":"Gordon25"},"content":"    public boolean isSameDateAs(String dateString) throws DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":89,"author":{"gitId":"Gordon25"},"content":"        assert eventDate !\u003d null : \"even date must not be unassigned\";","lastModifiedDate":"2021-09-13"},{"lineNumber":90,"author":{"gitId":"Gordon25"},"content":"        return eventDate.equals(dateString);","lastModifiedDate":"2021-09-11"},{"lineNumber":91,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":92,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":93,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":94,"author":{"gitId":"Gordon25"},"content":"     * Overrides contains in task by adding an additional check for date, if the search phrase is a date.","lastModifiedDate":"2021-09-11"},{"lineNumber":95,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":96,"author":{"gitId":"Gordon25"},"content":"     * @param searchPhrase the phrase or word or date of interest.","lastModifiedDate":"2021-09-11"},{"lineNumber":97,"author":{"gitId":"Gordon25"},"content":"     * @return","lastModifiedDate":"2021-09-11"},{"lineNumber":98,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":99,"author":{"gitId":"Gordon25"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":100,"author":{"gitId":"Gordon25"},"content":"    public boolean contains(String searchPhrase) {","lastModifiedDate":"2021-09-11"},{"lineNumber":101,"author":{"gitId":"Gordon25"},"content":"        if (searchPhrase.contains(\"/\")) {","lastModifiedDate":"2021-09-11"},{"lineNumber":102,"author":{"gitId":"Gordon25"},"content":"            try {","lastModifiedDate":"2021-09-11"},{"lineNumber":103,"author":{"gitId":"Gordon25"},"content":"                return isSameDateAs(searchPhrase);","lastModifiedDate":"2021-09-11"},{"lineNumber":104,"author":{"gitId":"Gordon25"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":105,"author":{"gitId":"Gordon25"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-09-11"},{"lineNumber":106,"author":{"gitId":"Gordon25"},"content":"            }","lastModifiedDate":"2021-09-11"},{"lineNumber":107,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":108,"author":{"gitId":"Gordon25"},"content":"        return toString().contains(searchPhrase);","lastModifiedDate":"2021-09-11"},{"lineNumber":109,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":110,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"Gordon25":110}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"package duke.task;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"import duke.main.DukeException;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":" * Represents a duke.task which can be marked done.","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":" *","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":" * @author Gordon Yit","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":" * @version CS2103T, Semester 2","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":"public class Task {","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"     * Class constructor for Duke.Task class.","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"     * Sets isDone to false, meaning duke.task is not done.","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"    public Task() {","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"     * Creates a subclass of task using the description, date and tag provided from storage file.","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"     * @param taskType the name of the tasktype given. For example, \"T\" for todo.","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"     * @param description of the task.","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"     * @param tag used to tag the task.","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"     * @param date of the task due, not used for todo.","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"     * @return either a deadline, event or todo task.","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"     * @throws DukeException thrown when an invalid tasktype is given.","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"    public static Task createTask(String taskType, String description, String tag, String ... date)","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"                throws DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"Gordon25"},"content":"        switch (taskType) {","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"Gordon25"},"content":"        case \"D\":","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"            return new Deadline(description, date[0], tag);","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"Gordon25"},"content":"        case \"E\":","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"Gordon25"},"content":"            return new Event(description, date[0], tag);","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"Gordon25"},"content":"        case \"T\":","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"Gordon25"},"content":"            return new Todo(description, tag);","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"Gordon25"},"content":"        default:","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"Gordon25"},"content":"            throw new DukeException(DukeException.Exceptions.EXCEPTIONS);","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"Gordon25"},"content":"     * Returns the status icon of the duke.task.","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"Gordon25"},"content":"     * @return \"X\" if duke.task is done, else returns \" \".","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"Gordon25"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"Gordon25"},"content":"        return (isDone ? \"X\" : \" \"); // mark done duke.task with X","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"Gordon25"},"content":"     * Marks duke.task as done.","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"Gordon25"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"Gordon25"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"Gordon25"},"content":"     * Prints out the duke.task.","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"Gordon25"},"content":"     * @return string format of the duke.task,","lastModifiedDate":"2021-09-02"},{"lineNumber":66,"author":{"gitId":"Gordon25"},"content":"     * consisting of the status icon and duke.task description.","lastModifiedDate":"2021-09-02"},{"lineNumber":67,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"Gordon25"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"Gordon25"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"Gordon25"},"content":"        return String.format(\"[%s]\", getStatusIcon());","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"Gordon25"},"content":"     * Formats the duke.task in to the storage format.","lastModifiedDate":"2021-09-02"},{"lineNumber":75,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":76,"author":{"gitId":"Gordon25"},"content":"     * @return storage format of the duke.task.","lastModifiedDate":"2021-09-02"},{"lineNumber":77,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"Gordon25"},"content":"    public String formatToStore() {","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"Gordon25"},"content":"        return String.format(\"| %s |\", isDone ? \"1\" : \"0\");","lastModifiedDate":"2021-09-20"},{"lineNumber":80,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":82,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":83,"author":{"gitId":"Gordon25"},"content":"     * Returns duke.task marker.","lastModifiedDate":"2021-09-02"},{"lineNumber":84,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":85,"author":{"gitId":"Gordon25"},"content":"     * @return a one character string that is a marker for this duke.task.","lastModifiedDate":"2021-09-02"},{"lineNumber":86,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":87,"author":{"gitId":"Gordon25"},"content":"    public String getTaskMarker() {","lastModifiedDate":"2021-08-30"},{"lineNumber":88,"author":{"gitId":"Gordon25"},"content":"        return \"\";","lastModifiedDate":"2021-08-30"},{"lineNumber":89,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":90,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":91,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":92,"author":{"gitId":"Gordon25"},"content":"     * Checks if given datetime matches the deadline of the duke.task.","lastModifiedDate":"2021-09-02"},{"lineNumber":93,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":94,"author":{"gitId":"Gordon25"},"content":"     * @param dateString date in string form to to compare with.","lastModifiedDate":"2021-08-30"},{"lineNumber":95,"author":{"gitId":"Gordon25"},"content":"     * @return false.","lastModifiedDate":"2021-08-30"},{"lineNumber":96,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":97,"author":{"gitId":"Gordon25"},"content":"    public boolean isSameDateAs(String dateString) throws DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":98,"author":{"gitId":"Gordon25"},"content":"        return false;","lastModifiedDate":"2021-08-30"},{"lineNumber":99,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":100,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":101,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":102,"author":{"gitId":"Gordon25"},"content":"     * Determines if the task description contains the given search phrase.","lastModifiedDate":"2021-09-10"},{"lineNumber":103,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":104,"author":{"gitId":"Gordon25"},"content":"     * @param searchPhrase the search word.","lastModifiedDate":"2021-09-10"},{"lineNumber":105,"author":{"gitId":"Gordon25"},"content":"     * @return true if the description contains the phrase, false otherwise.","lastModifiedDate":"2021-09-10"},{"lineNumber":106,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":107,"author":{"gitId":"Gordon25"},"content":"    public boolean contains(String searchPhrase) {","lastModifiedDate":"2021-09-10"},{"lineNumber":108,"author":{"gitId":"Gordon25"},"content":"        return toString().contains(searchPhrase);","lastModifiedDate":"2021-09-10"},{"lineNumber":109,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":110,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":111,"author":{"gitId":"Gordon25"},"content":"    public int getStartingIndexAfter(String description, String wordSlicer) {","lastModifiedDate":"2021-09-11"},{"lineNumber":112,"author":{"gitId":"Gordon25"},"content":"        return description.indexOf(wordSlicer) + wordSlicer.length();","lastModifiedDate":"2021-09-11"},{"lineNumber":113,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":114,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":115,"author":{"gitId":"Gordon25"},"content":"    public String getSubString(String taskDescription, int ... startAndEndIndex) {","lastModifiedDate":"2021-09-11"},{"lineNumber":116,"author":{"gitId":"Gordon25"},"content":"        if (startAndEndIndex.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-11"},{"lineNumber":117,"author":{"gitId":"Gordon25"},"content":"            return taskDescription.substring(startAndEndIndex[0]);","lastModifiedDate":"2021-09-11"},{"lineNumber":118,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":119,"author":{"gitId":"Gordon25"},"content":"        return taskDescription.substring(startAndEndIndex[0], startAndEndIndex[1]);","lastModifiedDate":"2021-09-11"},{"lineNumber":120,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":121,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"Gordon25":121}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"package duke.task;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":" * Represents a list of tasks.","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":" *","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":" * @author Gordon Yit","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":" * @version Cs2103T, Semester 2","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":"public class TaskList {","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"     * Class constructor, loads arraylist of tasks from the storage to the tasks arraylist.","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"     * @param tasksStored an arraylist of tasks.","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasksStored) {","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"        this.tasks.addAll(tasksStored);","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"     * Alternative class constructor, used when there is an error loading the file.","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"     * Initializes an empty arraylist.","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"     * Adds a duke.task to the tasks list.","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"Gordon25"},"content":"     * @param task a duke.task to be added.","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"Gordon25"},"content":"     * @return the added duke.task.","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"Gordon25"},"content":"    public Task add(Task task) {","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"Gordon25"},"content":"        this.tasks.add(task);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"Gordon25"},"content":"        return task;","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"Gordon25"},"content":"     * Retrieves a duke.task based on the given index.","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"Gordon25"},"content":"     * @param taskIndex index of the duke.task.","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"Gordon25"},"content":"     * @return a duke.task matching the given index.","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"Gordon25"},"content":"     * @throws IndexOutOfBoundsException if taskIndex is negative or greater than size of tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"Gordon25"},"content":"    public Task getTask(int taskIndex) throws IndexOutOfBoundsException {","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"Gordon25"},"content":"        return tasks.get(taskIndex);","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"Gordon25"},"content":"     * Marks the duke.task corresponding to the done.","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"Gordon25"},"content":"     * @param taskIndex index of the duke.task to be marked done.","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"Gordon25"},"content":"     * @return the duke.task marked done.","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"Gordon25"},"content":"     * @throws IndexOutOfBoundsException if taskIndex is negative or greater than size of tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"Gordon25"},"content":"    public Task markDone(int taskIndex) throws IndexOutOfBoundsException {","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"Gordon25"},"content":"        Task task \u003d getTask(taskIndex);","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"Gordon25"},"content":"        assert task !\u003d null : \"task cannot be null\";","lastModifiedDate":"2021-09-10"},{"lineNumber":64,"author":{"gitId":"Gordon25"},"content":"        task.markAsDone();","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"Gordon25"},"content":"        return task;","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"Gordon25"},"content":"     * Deletes a duke.task from the duke.task list.","lastModifiedDate":"2021-09-02"},{"lineNumber":70,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"Gordon25"},"content":"     * @param taskIndex index of the duke.task to be deleted.","lastModifiedDate":"2021-09-02"},{"lineNumber":72,"author":{"gitId":"Gordon25"},"content":"     * @return the deleted duke.task.","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"Gordon25"},"content":"     * @throws IndexOutOfBoundsException if taskIndex is negative or more than number of tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"Gordon25"},"content":"    public Task delete(int taskIndex) throws IndexOutOfBoundsException {","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"Gordon25"},"content":"        Task task \u003d tasks.get(taskIndex);","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"Gordon25"},"content":"        assert task !\u003d null : \"task deleted must exist\";","lastModifiedDate":"2021-09-10"},{"lineNumber":78,"author":{"gitId":"Gordon25"},"content":"        tasks.remove(task);","lastModifiedDate":"2021-09-01"},{"lineNumber":79,"author":{"gitId":"Gordon25"},"content":"        return task;","lastModifiedDate":"2021-09-01"},{"lineNumber":80,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":82,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":83,"author":{"gitId":"Gordon25"},"content":"     * Finds all the tasks matching the date given.","lastModifiedDate":"2021-08-30"},{"lineNumber":84,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":85,"author":{"gitId":"Gordon25"},"content":"     * @param searchPhrase used to filter out tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":86,"author":{"gitId":"Gordon25"},"content":"     * @return an arraylist of tasks which fall on that date.","lastModifiedDate":"2021-08-30"},{"lineNumber":87,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":88,"author":{"gitId":"Gordon25"},"content":"    public TaskList findMatchingTasks(String searchPhrase) {","lastModifiedDate":"2021-09-01"},{"lineNumber":89,"author":{"gitId":"Gordon25"},"content":"        TaskList matchingTasks \u003d new TaskList();","lastModifiedDate":"2021-09-01"},{"lineNumber":90,"author":{"gitId":"Gordon25"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2021-08-30"},{"lineNumber":91,"author":{"gitId":"Gordon25"},"content":"            if (t.contains(searchPhrase)) {","lastModifiedDate":"2021-09-10"},{"lineNumber":92,"author":{"gitId":"Gordon25"},"content":"                matchingTasks.add(t);","lastModifiedDate":"2021-09-01"},{"lineNumber":93,"author":{"gitId":"Gordon25"},"content":"            }","lastModifiedDate":"2021-08-30"},{"lineNumber":94,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":95,"author":{"gitId":"Gordon25"},"content":"        return matchingTasks;","lastModifiedDate":"2021-09-01"},{"lineNumber":96,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":97,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":98,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":99,"author":{"gitId":"Gordon25"},"content":"     * Returns number of tasks currently tracked by Duke.","lastModifiedDate":"2021-09-01"},{"lineNumber":100,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":101,"author":{"gitId":"Gordon25"},"content":"     * @return size of tasks arraylist.","lastModifiedDate":"2021-09-01"},{"lineNumber":102,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":103,"author":{"gitId":"Gordon25"},"content":"    public int getNumTasks() {","lastModifiedDate":"2021-09-01"},{"lineNumber":104,"author":{"gitId":"Gordon25"},"content":"        int numTasks \u003d tasks.size();","lastModifiedDate":"2021-09-11"},{"lineNumber":105,"author":{"gitId":"Gordon25"},"content":"        assert numTasks \u003e\u003d 0 : \"number of tasks cannot be negative\";","lastModifiedDate":"2021-09-11"},{"lineNumber":106,"author":{"gitId":"Gordon25"},"content":"        return numTasks;","lastModifiedDate":"2021-09-11"},{"lineNumber":107,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":108,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"Gordon25":108}},{"path":"src/main/java/duke/task/TaskTag.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"package duke.task;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"import duke.main.DukeException;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":" * Represents tags used to tag a task.","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"public class TaskTag {","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":"    private static final String TAG_SYMBOL \u003d \"#\";","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":"    private String taskTag;","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":"     * Class constructor.","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":"     * @param taskTag the tags use to tag the task.","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"    public TaskTag(String taskTag) throws DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"        if (taskTag.equals(\"\")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"            this.taskTag \u003d \"\";","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"        } else if (taskTag.indexOf(TAG_SYMBOL) \u003d\u003d 0) {","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"            this.taskTag \u003d taskTag;","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"        } else {","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"            throw new DukeException(DukeException.Exceptions.StringIndexOutOfBoundsException);","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"    public String getTag() {","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"        return this.taskTag;","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"    public static String getStorageTagSymbol() {","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"        return \" | \" + TAG_SYMBOL;","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"    public static String getTagSymbol() {","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"        return TAG_SYMBOL;","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"    public String getTagInStoreFormat() {","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"        if (taskTag.equals(\"\")) {","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"Gordon25"},"content":"            return taskTag;","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"        return \"| \" + taskTag;","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"Gordon25":39}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"package duke.task;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"import duke.main.DukeException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":" * Represents a todo duke.task.","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":" *","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":" * @author Gordon Yit","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":" * @version C2103T, Semester 2","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":"    private static final String TODO_MARKER \u003d \"T\";","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":"    private static final String TODO_KEYWORD \u003d \"todo \";","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"    private String todoDescription;","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"    private TaskTag todoTag;","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"     * @param description the todo description.","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"     * @throws DukeException cause by exception handled in DukeException class.","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"    public Todo(String description) throws DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"        super();","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"            int startOfDescriptionIndex \u003d getStartingIndexAfter(description, TODO_KEYWORD);","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"            int startOfTodoTagIndex \u003d getStartingIndexAfter(description,","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"                TaskTag.getTagSymbol()) - TaskTag.getTagSymbol().length();","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"            assert startOfDescriptionIndex !\u003d -1 : \"todo must be in the description.\";","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"            this.todoDescription \u003d getSubString(description, startOfDescriptionIndex,","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"                    startOfTodoTagIndex);","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"            todoTag \u003d new TaskTag(getSubString(description, startOfTodoTagIndex));","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"Gordon25"},"content":"            throw new DukeException(DukeException.Exceptions.StringIndexOutOfBoundsException);","lastModifiedDate":"2021-09-10"},{"lineNumber":36,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"Gordon25"},"content":"     * Class constructor for loading task from storage.","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"Gordon25"},"content":"     * @param todoDescription description of the todo task.","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"Gordon25"},"content":"     * @param tag tag use to tag the todo task.","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"Gordon25"},"content":"    public Todo(String todoDescription, String tag) throws DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"Gordon25"},"content":"        this.todoDescription \u003d todoDescription;","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"Gordon25"},"content":"        this.todoTag \u003d new TaskTag(tag);","lastModifiedDate":"2021-09-13"},{"lineNumber":48,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"Gordon25"},"content":"     * Prints out the duke.task.","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"Gordon25"},"content":"     * @return string format of the todo duke.task,","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"Gordon25"},"content":"     * consisting of the duke.task marker \"T\" and duke.task description.","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"Gordon25"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"Gordon25"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"Gordon25"},"content":"        return String.format(\"[%s]%s %s %s\", TODO_MARKER, super.toString(), todoDescription,","lastModifiedDate":"2021-09-13"},{"lineNumber":58,"author":{"gitId":"Gordon25"},"content":"                todoTag.getTag());","lastModifiedDate":"2021-09-13"},{"lineNumber":59,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"Gordon25"},"content":"     * Formats the duke.task in to the storage format.","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"Gordon25"},"content":"     * @return storage format of the duke.task.","lastModifiedDate":"2021-09-02"},{"lineNumber":65,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"Gordon25"},"content":"    public String formatToStore() {","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"Gordon25"},"content":"        return String.format(\"%s %s %s %s\", TODO_MARKER, super.formatToStore(),","lastModifiedDate":"2021-09-20"},{"lineNumber":68,"author":{"gitId":"Gordon25"},"content":"            todoDescription, todoTag.getTagInStoreFormat());","lastModifiedDate":"2021-09-13"},{"lineNumber":69,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"Gordon25":70}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":"    \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"CENTER\" graphicTextGap\u003d\"10.0\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":"            \u003cInsets left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":"         \u003c/HBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"  \u003c/children\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"Gordon25":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"      \u003c/content\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"  \u003c/children\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"Gordon25":19}},{"path":"src/test/java/duke/main/DukeExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"package duke.main;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":" * Represents testing the DukeException class.","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":"public class DukeExceptionTest {","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":"     * Tests the getMessage method.","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"    @SuppressWarnings(\"checkstyle:MethodName\")","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"    @Test","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"    public void getMessage_StringOutOfBoundsException_CommandIncompleteMessage() {","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"        DukeException dukeException \u003d new DukeException(DukeException.Exceptions.StringIndexOutOfBoundsException);","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"        assertEquals(dukeException.getMessage(),","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"            \"☹ The duke.task description or duke.command is incomplete.:$\\n\");","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"    @SuppressWarnings(\"checkstyle:MethodName\")","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"    @Test","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"    public void getMessage_IllgealArgumentException_DoNotUnderstandMessage() {","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"        DukeException dukeException \u003d new DukeException(DukeException.Exceptions.EXCEPTIONS);","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"        assertEquals(dukeException.getMessage(), \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"Gordon25":30}},{"path":"src/test/java/duke/main/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"package duke.main;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"import javax.annotation.processing.SupportedSourceVersion;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":" * Represents testing the TaskList class.","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"public class TaskListTest {","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"     * Tests the findTasksMatchingDate method.","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"    @Test","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"    public void findMatchingTasks() {","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"            tasks.add(new Deadline(\"deadline submit report by 30/08/2021\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"            tasks.add(new Event(\"event attend workshop at 03/09/2021\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"        TaskList matchingTasks \u003d tasks.findMatchingTasks(\"Sep 03\");","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"        assertEquals(matchingTasks.getNumTasks(), 1);","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"Gordon25"},"content":"     * Tests the markDone method.","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"Gordon25"},"content":"    @Test","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"Gordon25"},"content":"    public void markDone() {","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"Gordon25"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"Gordon25"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"Gordon25"},"content":"            tasks.add(new Deadline(\"deadline submit report by 30/08/2021\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"Gordon25"},"content":"            tasks.add(new Event(\"event attend workshop at 03/09/2021\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"Gordon25"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"Gordon25"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"Gordon25"},"content":"        Task taskMarkedDone \u003d tasks.markDone(1);","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"Gordon25"},"content":"        assertEquals(taskMarkedDone.toString(), \"[E][X] attend workshop (at: Sep 03)\");","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"Gordon25"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"Gordon25":54}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"list","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"todo read book","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"deadline return book by 21/06/2021","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"event project meeting at 12/08/2021","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"todo join sports club","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"todo create group chat","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"deadline set up meeting date by 31/08/2021","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":"event project meeting at 30/09/2021","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":"done 1","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":"blah","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":"done","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"todo","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"event something at","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"filter 30/09/2021","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"delete 2","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"todo","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Gordon25":21}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\main\\*.java","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Gordon25":1,"-":20}}]
