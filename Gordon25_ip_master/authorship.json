[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":" * Represents tasks with deadline.","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":" * ","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":" * @author Gordon Yit","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":" * @Since 23-08-21","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":"    protected String by;","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":"     * Class constructor for Deadline class.","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"     * @param description the task description.","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"     * @param by the time by which the task must be completed.","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"     * Print out the deadline task,","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"     * @return string format of the deadline task, ","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"     * consisting of the task marker \"[D]\", task description and deadline of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Gordon25":33}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"import javax.xml.stream.FactoryConfigurationError;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"import java.util.function.DoubleToIntFunction;","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":" * Represents the duke chat bot, which has the ability to log and track and delete tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":" * ","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":" * @author Gordon Yit","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":" * @Since 23-08-21","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":"    private int counter \u003d 0;","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"    private int bufferLength \u003d 5;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"    ","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"    public enum Command { ","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"        DONE(\"done\"), ","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"        LIST(\"list\"), ","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"        DELE(\"dele\"),","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"        TASK(\"\");","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"        ","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"        private final String NAME;","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"        /**","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"         * Constructor for command enum.","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"         * ","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"         * @param name name of the command.","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"         */","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"        Command(String name) {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"            this.NAME \u003d name;","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"        /**","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"Gordon25"},"content":"         * Returns name of the command.","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"Gordon25"},"content":"         * @return the name field.","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"         */","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"Gordon25"},"content":"        public String get_name() {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"Gordon25"},"content":"            return NAME;","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"Gordon25"},"content":"        ","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"Gordon25"},"content":"    };","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"Gordon25"},"content":"    ","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"Gordon25"},"content":"     * Constructor for the Duke class.","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"Gordon25"},"content":"     * Prints out a statement to greet user.","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"Gordon25"},"content":"    public Duke() {","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"Gordon25"},"content":"        String c \u003d \"~\";","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"Gordon25"},"content":"        String line1 \u003d \" Hello! I\u0027m Duke \";","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"Gordon25"},"content":"        String line2 \u003d \" What do you wanna do today? \";","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"Gordon25"},"content":"        int limit \u003d Integer.max(line1.length(), line2.length()) + bufferLength;","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"Gordon25"},"content":"        String buffer1 \u003d c.repeat((limit - line1.length()) / 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"Gordon25"},"content":"        String buffer2 \u003d c.repeat((limit - line2.length()) / 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"Gordon25"},"content":"        String str \u003d buffer1 + line1 + buffer1 + \"\\n\" + buffer2 + line2 + buffer2 + \"\\n\"; ","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"Gordon25"},"content":"        System.out.println(str);","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"Gordon25"},"content":"     * Adds a task to the tasks list,","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"Gordon25"},"content":"     * then prints a statement saying the text has been added.","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"Gordon25"},"content":"     * @param input task text from user.","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"Gordon25"},"content":"     * @return a log specifying that the task has been added and total number of tasks. ","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"Gordon25"},"content":"    public String add(String input) {","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"Gordon25"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"Gordon25"},"content":"            Task task \u003d setTask(input);","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"Gordon25"},"content":"            if (task !\u003d null) {","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"Gordon25"},"content":"                tasks.add(task);","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"Gordon25"},"content":"                counter++;","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"Gordon25"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"Gordon25"},"content":"            return logger(task);","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"Gordon25"},"content":"        } catch (StringIndexOutOfBoundsException se) {","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"Gordon25"},"content":"            return new DukeException(se).get_message();","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"Gordon25"},"content":"        } catch (NullPointerException ne) {","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"Gordon25"},"content":"            return new DukeException(ne).get_message();","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"Gordon25"},"content":"    ","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"Gordon25"},"content":"    private String logger(Task task) {","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"Gordon25"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"Gordon25"},"content":"            String string \u003d String.format(\"Got it. I\u0027ve added this task: \\n~~\" + task.toString() +","lastModifiedDate":"2021-08-19"},{"lineNumber":85,"author":{"gitId":"Gordon25"},"content":"                    \"~~\\nNow you have \" + tasks.size() +","lastModifiedDate":"2021-08-19"},{"lineNumber":86,"author":{"gitId":"Gordon25"},"content":"                    (tasks.size() \u003e 1 ? \" tasks\" : \" task\") + \" in the list.\\n\");","lastModifiedDate":"2021-08-19"},{"lineNumber":87,"author":{"gitId":"Gordon25"},"content":"            return string;","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"Gordon25"},"content":"        } catch (NullPointerException ne) {","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"Gordon25"},"content":"            return new DukeException(ne).get_message();","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":91,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":92,"author":{"gitId":"Gordon25"},"content":"    ","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":94,"author":{"gitId":"Gordon25"},"content":"     * Returns a string of tasks in order of which they are added.","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"Gordon25"},"content":"     * @return string which when printed out displays every task in tasks","lastModifiedDate":"2021-08-19"},{"lineNumber":97,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":98,"author":{"gitId":"Gordon25"},"content":"    public String iterate() {","lastModifiedDate":"2021-08-19"},{"lineNumber":99,"author":{"gitId":"Gordon25"},"content":"        String string \u003d \"\";","lastModifiedDate":"2021-08-19"},{"lineNumber":100,"author":{"gitId":"Gordon25"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":101,"author":{"gitId":"Gordon25"},"content":"            string +\u003d \"Here are the tasks in your list: \\n\";","lastModifiedDate":"2021-08-19"},{"lineNumber":102,"author":{"gitId":"Gordon25"},"content":"            for (int i \u003d 0; i \u003c counter; i++) {","lastModifiedDate":"2021-08-19"},{"lineNumber":103,"author":{"gitId":"Gordon25"},"content":"                string +\u003d String.format(\"%d.%s\\n\", i + 1, tasks.get(i).toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":104,"author":{"gitId":"Gordon25"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":105,"author":{"gitId":"Gordon25"},"content":"            string +\u003d \"\";","lastModifiedDate":"2021-08-19"},{"lineNumber":106,"author":{"gitId":"Gordon25"},"content":"            return string;","lastModifiedDate":"2021-08-19"},{"lineNumber":107,"author":{"gitId":"Gordon25"},"content":"        } catch (NullPointerException ne) {","lastModifiedDate":"2021-08-19"},{"lineNumber":108,"author":{"gitId":"Gordon25"},"content":"            return new DukeException(ne).get_message();","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":110,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":111,"author":{"gitId":"Gordon25"},"content":"    ","lastModifiedDate":"2021-08-19"},{"lineNumber":112,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":113,"author":{"gitId":"Gordon25"},"content":"     * Marks a task as done, returns string confirming the said task is marked done.","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"Gordon25"},"content":"     * @param input text from user.","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":117,"author":{"gitId":"Gordon25"},"content":"    public String markDone(String input) {","lastModifiedDate":"2021-08-19"},{"lineNumber":118,"author":{"gitId":"Gordon25"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":119,"author":{"gitId":"Gordon25"},"content":"            String index \u003d input.substring(\"done \".length());","lastModifiedDate":"2021-08-19"},{"lineNumber":120,"author":{"gitId":"Gordon25"},"content":"            int taskNum \u003d Integer.parseInt(index);","lastModifiedDate":"2021-08-19"},{"lineNumber":121,"author":{"gitId":"Gordon25"},"content":"            if(taskNum \u003e counter || taskNum \u003c 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":122,"author":{"gitId":"Gordon25"},"content":"                Exception ae \u003d new ArrayIndexOutOfBoundsException();","lastModifiedDate":"2021-08-19"},{"lineNumber":123,"author":{"gitId":"Gordon25"},"content":"                return new DukeException(ae).get_message();","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"Gordon25"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":125,"author":{"gitId":"Gordon25"},"content":"            Task taskDone \u003d tasks.get(taskNum - 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":126,"author":{"gitId":"Gordon25"},"content":"            taskDone.markAsDone();","lastModifiedDate":"2021-08-19"},{"lineNumber":127,"author":{"gitId":"Gordon25"},"content":"            String string \u003d \"Nice! I\u0027ve marked this task as done: \\n\";","lastModifiedDate":"2021-08-19"},{"lineNumber":128,"author":{"gitId":"Gordon25"},"content":"            string +\u003d \"~\" + taskDone.toString() + \"~ \\n\";","lastModifiedDate":"2021-08-19"},{"lineNumber":129,"author":{"gitId":"Gordon25"},"content":"            return string;","lastModifiedDate":"2021-08-19"},{"lineNumber":130,"author":{"gitId":"Gordon25"},"content":"        } catch (NullPointerException ne) {","lastModifiedDate":"2021-08-19"},{"lineNumber":131,"author":{"gitId":"Gordon25"},"content":"            return new DukeException(ne).get_message();","lastModifiedDate":"2021-08-23"},{"lineNumber":132,"author":{"gitId":"Gordon25"},"content":"        } catch (StringIndexOutOfBoundsException se) {","lastModifiedDate":"2021-08-19"},{"lineNumber":133,"author":{"gitId":"Gordon25"},"content":"            return new DukeException(se).get_message();","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":135,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":136,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":137,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":138,"author":{"gitId":"Gordon25"},"content":"     * Returns the corresponding task depending on the input.","lastModifiedDate":"2021-08-23"},{"lineNumber":139,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-23"},{"lineNumber":140,"author":{"gitId":"Gordon25"},"content":"     * @param input task text containing keywords \"deadline\", \"event\" or \"todo\".","lastModifiedDate":"2021-08-23"},{"lineNumber":141,"author":{"gitId":"Gordon25"},"content":"     * @return a subtype of Task depending on the keyword in the input.","lastModifiedDate":"2021-08-23"},{"lineNumber":142,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":143,"author":{"gitId":"Gordon25"},"content":"    public Task setTask(String input) {","lastModifiedDate":"2021-08-19"},{"lineNumber":144,"author":{"gitId":"Gordon25"},"content":"        Task t \u003d null;","lastModifiedDate":"2021-08-19"},{"lineNumber":145,"author":{"gitId":"Gordon25"},"content":"        if (input.contains(\"deadline\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":146,"author":{"gitId":"Gordon25"},"content":"            String[] arr \u003d formatInput(input, \"deadline \", \" by \");","lastModifiedDate":"2021-08-23"},{"lineNumber":147,"author":{"gitId":"Gordon25"},"content":"            t \u003d new Deadline(arr[0], arr[1]);","lastModifiedDate":"2021-08-19"},{"lineNumber":148,"author":{"gitId":"Gordon25"},"content":"        } else if (input.contains(\"event\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":149,"author":{"gitId":"Gordon25"},"content":"            String[] arr \u003d formatInput(input, \"event \", \" at \");","lastModifiedDate":"2021-08-23"},{"lineNumber":150,"author":{"gitId":"Gordon25"},"content":"            t \u003d new Event(arr[0], arr[1]);","lastModifiedDate":"2021-08-19"},{"lineNumber":151,"author":{"gitId":"Gordon25"},"content":"        } else if (input.contains(\"todo\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":152,"author":{"gitId":"Gordon25"},"content":"            t \u003d new Todo(input.substring(\"todo \".length()));","lastModifiedDate":"2021-08-19"},{"lineNumber":153,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":154,"author":{"gitId":"Gordon25"},"content":"        return t;","lastModifiedDate":"2021-08-19"},{"lineNumber":155,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":156,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":157,"author":{"gitId":"Gordon25"},"content":"    private String[] formatInput(String input, String keyword, String tag) {","lastModifiedDate":"2021-08-19"},{"lineNumber":158,"author":{"gitId":"Gordon25"},"content":"        int start \u003d input.indexOf(keyword);","lastModifiedDate":"2021-08-19"},{"lineNumber":159,"author":{"gitId":"Gordon25"},"content":"        int by \u003d input.indexOf(tag);","lastModifiedDate":"2021-08-23"},{"lineNumber":160,"author":{"gitId":"Gordon25"},"content":"        String taskDescription \u003d input.substring(start + keyword.length(), by);","lastModifiedDate":"2021-08-23"},{"lineNumber":161,"author":{"gitId":"Gordon25"},"content":"        String taskTime \u003d input.substring(by + tag.length());","lastModifiedDate":"2021-08-19"},{"lineNumber":162,"author":{"gitId":"Gordon25"},"content":"        return new String[]{taskDescription, taskTime};","lastModifiedDate":"2021-08-19"},{"lineNumber":163,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":164,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":165,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":166,"author":{"gitId":"Gordon25"},"content":"     * Takes in user input and generates a reply depending on the input.","lastModifiedDate":"2021-08-23"},{"lineNumber":167,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-23"},{"lineNumber":168,"author":{"gitId":"Gordon25"},"content":"     * @param input The user input command.","lastModifiedDate":"2021-08-23"},{"lineNumber":169,"author":{"gitId":"Gordon25"},"content":"     * @return a reply corresponding to the user input command.","lastModifiedDate":"2021-08-23"},{"lineNumber":170,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":171,"author":{"gitId":"Gordon25"},"content":"    public String generateReply(String input) {","lastModifiedDate":"2021-08-23"},{"lineNumber":172,"author":{"gitId":"Gordon25"},"content":"        String action \u003d input.substring(0, 4);","lastModifiedDate":"2021-08-23"},{"lineNumber":173,"author":{"gitId":"Gordon25"},"content":"        Command command \u003d Command.TASK;","lastModifiedDate":"2021-08-23"},{"lineNumber":174,"author":{"gitId":"Gordon25"},"content":"        ","lastModifiedDate":"2021-08-23"},{"lineNumber":175,"author":{"gitId":"Gordon25"},"content":"        for (Command c : Command.values()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":176,"author":{"gitId":"Gordon25"},"content":"            if (action.equals(c.get_name())) {","lastModifiedDate":"2021-08-23"},{"lineNumber":177,"author":{"gitId":"Gordon25"},"content":"                 command \u003d c;","lastModifiedDate":"2021-08-23"},{"lineNumber":178,"author":{"gitId":"Gordon25"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":179,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":180,"author":{"gitId":"Gordon25"},"content":"        ","lastModifiedDate":"2021-08-19"},{"lineNumber":181,"author":{"gitId":"Gordon25"},"content":"        switch (command) {","lastModifiedDate":"2021-08-23"},{"lineNumber":182,"author":{"gitId":"Gordon25"},"content":"            case DONE:    ","lastModifiedDate":"2021-08-23"},{"lineNumber":183,"author":{"gitId":"Gordon25"},"content":"                return markDone(input);","lastModifiedDate":"2021-08-23"},{"lineNumber":184,"author":{"gitId":"Gordon25"},"content":"            case LIST:","lastModifiedDate":"2021-08-23"},{"lineNumber":185,"author":{"gitId":"Gordon25"},"content":"                return iterate();","lastModifiedDate":"2021-08-23"},{"lineNumber":186,"author":{"gitId":"Gordon25"},"content":"            case DELE:","lastModifiedDate":"2021-08-23"},{"lineNumber":187,"author":{"gitId":"Gordon25"},"content":"                return delete(input);","lastModifiedDate":"2021-08-23"},{"lineNumber":188,"author":{"gitId":"Gordon25"},"content":"            default:","lastModifiedDate":"2021-08-23"},{"lineNumber":189,"author":{"gitId":"Gordon25"},"content":"                return add(input);","lastModifiedDate":"2021-08-23"},{"lineNumber":190,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":191,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":192,"author":{"gitId":"Gordon25"},"content":"    ","lastModifiedDate":"2021-08-23"},{"lineNumber":193,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":194,"author":{"gitId":"Gordon25"},"content":"     * Deletes a task from tasks list.","lastModifiedDate":"2021-08-23"},{"lineNumber":195,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-23"},{"lineNumber":196,"author":{"gitId":"Gordon25"},"content":"     * @param input consisting of delete and index of the task to be deleted. ","lastModifiedDate":"2021-08-23"},{"lineNumber":197,"author":{"gitId":"Gordon25"},"content":"     * @return string containing the deleted task and updated number of task left.","lastModifiedDate":"2021-08-23"},{"lineNumber":198,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":199,"author":{"gitId":"Gordon25"},"content":"    public String delete(String input) {","lastModifiedDate":"2021-08-19"},{"lineNumber":200,"author":{"gitId":"Gordon25"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":201,"author":{"gitId":"Gordon25"},"content":"            String index \u003d input.substring(\"delete \".length());","lastModifiedDate":"2021-08-19"},{"lineNumber":202,"author":{"gitId":"Gordon25"},"content":"            int taskNum \u003d Integer.parseInt(index);","lastModifiedDate":"2021-08-19"},{"lineNumber":203,"author":{"gitId":"Gordon25"},"content":"            if(taskNum \u003e counter || taskNum \u003c 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":204,"author":{"gitId":"Gordon25"},"content":"                Exception ae \u003d new ArrayIndexOutOfBoundsException();","lastModifiedDate":"2021-08-19"},{"lineNumber":205,"author":{"gitId":"Gordon25"},"content":"                return new DukeException(ae).get_message();","lastModifiedDate":"2021-08-23"},{"lineNumber":206,"author":{"gitId":"Gordon25"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":207,"author":{"gitId":"Gordon25"},"content":"            Task task \u003d tasks.get(taskNum - 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":208,"author":{"gitId":"Gordon25"},"content":"            tasks.remove(taskNum - 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":209,"author":{"gitId":"Gordon25"},"content":"            counter--;","lastModifiedDate":"2021-08-19"},{"lineNumber":210,"author":{"gitId":"Gordon25"},"content":"            String string \u003d \"Alright. I\u0027ve removed this task: \\n\";","lastModifiedDate":"2021-08-19"},{"lineNumber":211,"author":{"gitId":"Gordon25"},"content":"            string +\u003d \"~~\" + task.toString() + \"~~\\n\";","lastModifiedDate":"2021-08-19"},{"lineNumber":212,"author":{"gitId":"Gordon25"},"content":"            string +\u003d String.format(\"Now you have %d %s in the list\\n\", tasks.size(), ","lastModifiedDate":"2021-08-19"},{"lineNumber":213,"author":{"gitId":"Gordon25"},"content":"                                        (tasks.size() \u003e 1 ? \"tasks\" : \"task\"));","lastModifiedDate":"2021-08-19"},{"lineNumber":214,"author":{"gitId":"Gordon25"},"content":"            return string;","lastModifiedDate":"2021-08-19"},{"lineNumber":215,"author":{"gitId":"Gordon25"},"content":"        } catch (NullPointerException ne) {","lastModifiedDate":"2021-08-19"},{"lineNumber":216,"author":{"gitId":"Gordon25"},"content":"            return new DukeException(ne).get_message();","lastModifiedDate":"2021-08-23"},{"lineNumber":217,"author":{"gitId":"Gordon25"},"content":"        } catch (ArrayIndexOutOfBoundsException ae) {","lastModifiedDate":"2021-08-19"},{"lineNumber":218,"author":{"gitId":"Gordon25"},"content":"            return new DukeException(ae).get_message();","lastModifiedDate":"2021-08-23"},{"lineNumber":219,"author":{"gitId":"Gordon25"},"content":"        } catch (StringIndexOutOfBoundsException se) {","lastModifiedDate":"2021-08-19"},{"lineNumber":220,"author":{"gitId":"Gordon25"},"content":"            Exception ne \u003d new NullPointerException();","lastModifiedDate":"2021-08-19"},{"lineNumber":221,"author":{"gitId":"Gordon25"},"content":"            return new DukeException(ne).get_message();","lastModifiedDate":"2021-08-23"},{"lineNumber":222,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":223,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":224,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":225,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":226,"author":{"gitId":"Gordon25"},"content":"     * Closes the duke bot, by bidding user farewell.","lastModifiedDate":"2021-08-23"},{"lineNumber":227,"author":{"gitId":"Gordon25"},"content":"     * @return a closing statement to user.","lastModifiedDate":"2021-08-23"},{"lineNumber":228,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":229,"author":{"gitId":"Gordon25"},"content":"    public String close() {","lastModifiedDate":"2021-08-23"},{"lineNumber":230,"author":{"gitId":"Gordon25"},"content":"        String str \u003d \"@@@@ See ya later, alligator @@@@\";","lastModifiedDate":"2021-08-23"},{"lineNumber":231,"author":{"gitId":"Gordon25"},"content":"        return str;","lastModifiedDate":"2021-08-23"},{"lineNumber":232,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":233,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":234,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":235,"author":{"gitId":"Gordon25"},"content":"     * Tests the functionality of Duke by scanning user input and printing relevant replies.","lastModifiedDate":"2021-08-23"},{"lineNumber":236,"author":{"gitId":"Gordon25"},"content":"     * @param args Unused.","lastModifiedDate":"2021-08-23"},{"lineNumber":237,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":245,"author":{"gitId":"Gordon25"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-19"},{"lineNumber":246,"author":{"gitId":"Gordon25"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-19"},{"lineNumber":247,"author":{"gitId":"Gordon25"},"content":"        String input \u003d sc.nextLine();","lastModifiedDate":"2021-08-19"},{"lineNumber":248,"author":{"gitId":"Gordon25"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":249,"author":{"gitId":"Gordon25"},"content":"            System.out.println(duke.generateReply(input));","lastModifiedDate":"2021-08-23"},{"lineNumber":250,"author":{"gitId":"Gordon25"},"content":"            input \u003d sc.nextLine();","lastModifiedDate":"2021-08-19"},{"lineNumber":251,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":252,"author":{"gitId":"Gordon25"},"content":"        sc.close();","lastModifiedDate":"2021-08-19"},{"lineNumber":253,"author":{"gitId":"Gordon25"},"content":"        System.out.println(duke.close());","lastModifiedDate":"2021-08-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Gordon25":245,"-":10}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":" * Represents exceptions raised in Duke.","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":" * ","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":" * @author Gordon Yit","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":" * @Since 23-08-21","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"    private String message;","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":"    private Exception e;","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":"     * Class constructor for duke exception class.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":"     * @param e the exception raised in Duke class.","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"    public DukeException(Exception e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"        this.e \u003d e;","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"     * Returns the exception message.","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"     * @return exception message.","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"    public String get_message() {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"        if (e instanceof ArrayIndexOutOfBoundsException) {","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"            message \u003d \"☹ OOPS!!! The task does not exist.\\n\";","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"        } else if (e instanceof StringIndexOutOfBoundsException) {","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"            message \u003d \"☹ OOPS!!! The task description or command is incomplete.\\n\";","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"            message \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\";","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"        return message;","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Gordon25":33}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":" * Represents tasks with specific timing.","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":" * ","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":" * @author Gordon Yit","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":" * @Since 23-08-21","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":"    protected String timing;","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":"     * Class constructor for Event class.","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"     * @param description the task description.","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"     * @param timing the duration of the event.","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"    public Event(String description, String timing) {","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"        this.timing \u003d timing;","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"     * Print out the event task,","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"     * @return string format of the event task, ","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"     * consisting of the task marker \"[D]\", task description and duration of the event.","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + timing + \")\";","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Gordon25":33}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":" * Represents a task which can be marked done.","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":" * ","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":" * @author Gordon Yit","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":" * @Since 23-08-21","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"public class Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":"    protected String description;","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":"     * Class constructor for Task class.","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":"     * Sets isDone to false, meaning task is not done.","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"     * @param description the description of the task.","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"     * @return \"X\" if task is done, else returns \" \".","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"     * Marks task as done.","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"Gordon25"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"Gordon25"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"Gordon25"},"content":"     * Prints out the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"Gordon25"},"content":"     * @return string format of the task, ","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"Gordon25"},"content":"     * consisting of the status icon and task description.","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"Gordon25"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"Gordon25"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"Gordon25"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), description);","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Gordon25":50}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":" * a class to encapsulate tasks without any date/time attached.","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":" * ","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":" * @author Gordon Yit","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":" * @Since 23-08-21","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":"     * Class constructor for Todo class.","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":"     * @param description the task description.","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"     * prints out the Todo task.","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"     * @return string format of the todo task, ","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"     * consisting of the task marker \"[T]\" and task description.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Gordon25":29}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"todo read book","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"deadline return book by June 6th","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"event project meeting at Aug 6th 2-4pm","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"todo join sports club","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"blah","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":"done","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":"todo","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":"event something at","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":"deadline hang laundry by 12pm","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":"event go for lesson at 12-2","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"todo take notes","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"delete 2","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"delete 12","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Gordon25":19}}]
