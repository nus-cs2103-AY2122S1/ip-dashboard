[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"# Duke.Duke project template","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"3. After that, locate the `src/main/java/Duke.Duke.java` file, right-click it, and choose `Run Duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Gordon25":2,"-":22}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"D | 0 | bake chocolate cake | Jan 06","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"E | 1 | attend seminar | Jan 16","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"T | 1 | read book","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"D | 1 | return book | Jun 21","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"E | 1 | project meeting | Aug 12","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"T | 1 | join sports club","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"T | 1 | create group chat","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"D | 1 | set up meeting date | Aug 31","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":"E | 1 | project meeting | Sep 30","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"Gordon25":9}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"package duke.command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"import duke.main.DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"import duke.main.Storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"import duke.main.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"import duke.main.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":" * Represents a command to add a task.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":" * ","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":" * @author Gordon Yit","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":" * @Version CS2103T, Semester 2","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"    private String addCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"    private boolean isExitCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"     * @param addCommand the user inputed string to add a task.","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"    public AddCommand(String addCommand) {","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"        this.addCommand \u003d addCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"        isExitCommand \u003d false;","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"     * Executes the command to add a task for Duke.Duke to keep track of.","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"Gordon25"},"content":"     * @param tasks lists of tasks","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"     * @param ui the user interface.","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"Gordon25"},"content":"     * @param storage the storage file.","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"Gordon25"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"Gordon25"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"Gordon25"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"Gordon25"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"Gordon25"},"content":"            Task task;","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"Gordon25"},"content":"            if (addCommand.contains(\"deadline\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"Gordon25"},"content":"                task \u003d new Deadline(addCommand);","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"Gordon25"},"content":"            } else if (addCommand.contains(\"event\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"Gordon25"},"content":"                task \u003d new Event(addCommand);","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"Gordon25"},"content":"            } else {","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"Gordon25"},"content":"                task \u003d new Todo(addCommand);","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"Gordon25"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"Gordon25"},"content":"            tasks.add(task);","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"Gordon25"},"content":"            ui.showTaskAdded(task, tasks.getTasks());","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"Gordon25"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"Gordon25"},"content":"            throw new DukeException(e);","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"Gordon25"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"Gordon25"},"content":"            throw new DukeException(e);","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"Gordon25"},"content":"    ","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"Gordon25":61}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"package duke.command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"import duke.main.DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"import duke.main.Storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"import duke.main.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"import duke.main.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":" * Represents a command given by the user.","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":" * ","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":" * @author Gordon Yit","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":" * @version CS2103T, Semester 2","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"    private boolean isExitCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"     * Class constructor. ","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"    public Command() {","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"        isExitCommand \u003d false;","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"     * Executes the given command.","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"     * @param tasks lists of tasks","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"     * @param ui the user interface.","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"     * @param storage the storage file.","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"     * @return post execution message. ","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"Gordon25"},"content":"     * Checks whether the command is an exit command.","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"Gordon25"},"content":"     * @return true if the command is an exit command, false otherwise.","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"Gordon25"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"Gordon25"},"content":"        return isExitCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"Gordon25"},"content":"    ","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"Gordon25":44}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"package duke.command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"import duke.main.Storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"import duke.main.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"import duke.main.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":" * Represents a command to delete a task.","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":" * @author Gordon Yit","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":" * @version CS2103T, Semester 2","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"    private int taskNumber;","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"    private boolean isExitCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"     * @param taskNumber the serial number of the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"        isExitCommand \u003d false;","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"     * Executes the command to delete a task.","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"     * @param tasks lists of tasks","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"     * @param ui the user interface.","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"Gordon25"},"content":"     * @param storage the storage file.","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"Gordon25"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"Gordon25"},"content":"        Task DeletedTask \u003d tasks.getTask(taskNumber - 1);","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"Gordon25"},"content":"        ArrayList\u003cTask\u003e updatedTaskList \u003d tasks.delete(taskNumber - 1);","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"Gordon25"},"content":"        ui.showTaskDeleted(DeletedTask, updatedTaskList);","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"Gordon25"},"content":"    ","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"Gordon25":44}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"package duke.command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"import duke.main.DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"import duke.main.Storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"import duke.main.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"import duke.main.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":" * Represents a command to exit the chatbot.","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":" * ","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":" * @author Gordon Yit","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":" * @version CS2103T, Semester 2","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"    private boolean isExitCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"    public ExitCommand() {","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"        isExitCommand \u003d true;","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"     * Executes the command to exit the chat bot, stores tasks into storage.","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"     * @param tasks lists of tasks","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"     * @param ui the user interface.","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"     * @param storage the storage file.","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"Gordon25"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"Gordon25"},"content":"            storage.store(tasks.getTasks());","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"            ui.showFarewell();","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"Gordon25"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"Gordon25"},"content":"            throw new DukeException(e);","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"Gordon25"},"content":"     * Checks if this command is an exit command.","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"Gordon25"},"content":"     * @return true.","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"Gordon25"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"Gordon25"},"content":"        return isExitCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"Gordon25":50}},{"path":"src/main/java/duke/command/FilterCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"package duke.command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"import duke.main.Date;","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"import duke.main.Storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"import duke.main.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"import duke.main.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":" * Represents a command to filter out tasks that fall on a specific date.","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":" * ","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":" * @author Gordon Yit","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":" * @version CS2103T, Semester 2","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"    private Date date;","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"    private boolean isExitCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"     * @param dateString the date of interest.","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"    public FilterCommand(String dateString) {","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"        this.date \u003d new Date(dateString);","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"        isExitCommand \u003d false;","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"    ","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"     * Executes a command to filter out tasks falling on the specified date.","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"     * @param tasks lists of tasks","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"     * @param ui the user interface.","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"     * @param storage the storage file.","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"Gordon25"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"Gordon25"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"        ArrayList\u003cTask\u003e tasksMatchingDate \u003d tasks.findTasksMatchingDate(date);","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"Gordon25"},"content":"        ui.showFilteredTasks(tasksMatchingDate, date);","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"Gordon25":40}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"package duke.command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"import duke.main.Storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"import duke.main.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"import duke.main.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":" * Represents a command to list out the tasks Duke.Duke is keeping track of.","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":" * ","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":" * @author Gordon Yit","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":" * @version CS2103T, Semester 2","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":"    private boolean isExitCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"    public ListCommand() {","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"        isExitCommand \u003d false;","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"     * Executes the command to list out all tasks Duke.Duke is keeping track of.","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"     * @param tasks lists of tasks","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"     * @param ui the user interface.","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"     * @param storage the storage file.","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"        ui.showListOfTasks(tasks.getTasks());","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"Gordon25":34}},{"path":"src/main/java/duke/command/MarkDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"package duke.command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"import duke.main.Storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"import duke.main.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"import duke.main.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":" * Represents a command to mark a task as done.","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":" * ","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":" * @author Gordon Yit","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":" * @version CS2103T, Semester 2","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":"public class MarkDoneCommand extends Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"    private boolean isExitCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"    private int taskNumber;","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"     * @param taskNumber the serial number of the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"    public MarkDoneCommand(int taskNumber) {","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"        isExitCommand \u003d false;","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"     * Executes the command to mark a task as done.","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"        Task task \u003d tasks.markDone(taskNumber - 1);","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"        ui.showMarkTaskDone(task);","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"Gordon25"},"content":"    ","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"Gordon25":37}},{"path":"src/main/java/duke/main/Date.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"package duke.main;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":" * Represents the local date format of the given date..","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":" * ","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":" * @author Gordon Yit","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":" * @Version CS2103T Semester 1","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"public class Date {","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"    protected LocalDate localDate;","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"    private String[] date;","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"    ","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"     * @param dateString string specifying a date in the form DD/MM/YYYY.","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"     * @throws DateTimeParseException","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"    public Date(String dateString) throws DateTimeParseException {","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"        date \u003d dateString.split(\"/\");","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"            localDate \u003d LocalDate.parse(String.format(\"%s-%s-%s\", \"2021\", date[1], date[0]));","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"     * Returns string format of the datetime.","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"     * @return date in form DD MMM YYYY.","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"Gordon25"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"Gordon25"},"content":"    public String toString() {","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"        String dateString \u003d localDate.format(DateTimeFormatter.ofPattern(\"MMM dd\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"Gordon25"},"content":"        return dateString;","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"Gordon25"},"content":"     * Retrieves the local date object.","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"Gordon25"},"content":"     * return the local date of the date due.","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"Gordon25"},"content":"    public LocalDate getLocalDate() {","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"Gordon25"},"content":"        return this.localDate;","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"Gordon25"},"content":"     * Checks if a given local date equals this local date.","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"Gordon25"},"content":"     * @param dateString the given local date object.","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"Gordon25"},"content":"     * @return true if both local dates are equal, false otherwise.","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"Gordon25"},"content":"    public boolean isSameDate(String dateString) {","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"Gordon25"},"content":"        return toString().equals(dateString);","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"Gordon25"},"content":"     * converts a given date string into a date object.","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"Gordon25"},"content":"     * @param dateString in form of DD MMM YYYY.","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"Gordon25"},"content":"     * @return a date object corresponding to the date string.","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"Gordon25"},"content":"    public static Date convertDateStringToDate(String dateString) throws ParseException {","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"Gordon25"},"content":"        SimpleDateFormat stringDateFormat \u003d new SimpleDateFormat(\"MMM D\");","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"Gordon25"},"content":"        java.util.Date s \u003d stringDateFormat.parse(dateString);","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"Gordon25"},"content":"        SimpleDateFormat dateFormatToDate \u003d new SimpleDateFormat(\"DD/MM/YYYY\");","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"Gordon25"},"content":"        return new Date(dateFormatToDate.format(s));","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"Gordon25":72}},{"path":"src/main/java/duke/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"package duke.main;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":" * Represents the duke chat bot, which has the ability to log and track and delete tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":" * ","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":" * @author Gordon Yit","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":" * @Since 23-08-21","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"    ","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"     * Constructor for the Duke.Duke class.","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"    ","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"     * Executes the duke chatbot.","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"    public void run() {","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"Gordon25"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"Gordon25"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"        while(!isExit) {","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"Gordon25"},"content":"            try {","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"Gordon25"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"Gordon25"},"content":"                ui.showLine();","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"Gordon25"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"Gordon25"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"Gordon25"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"Gordon25"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"Gordon25"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"Gordon25"},"content":"            } finally {","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"Gordon25"},"content":"                ui.showLine();","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"Gordon25"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"Gordon25"},"content":"    ","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"Gordon25"},"content":"     * Runs the Duke.Duke chat bot.","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"Gordon25"},"content":"     * @param args Unused.","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"Gordon25"},"content":"        new Duke(\"../data/duke.txt\").run();","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Gordon25":55,"-":4}},{"path":"src/main/java/duke/main/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"package duke.main;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":" * Represents exceptions raised in Duke.Duke.","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":" * ","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":" * @author Gordon Yit","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":" * @Version CS2103T, Semester 2.","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":"    private String message;","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"    private Exception e;","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"     * Class constructor for duke exception class.","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"    public DukeException(Exception e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"        this.e \u003d e;","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"    ","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"     * Returns the exception message.","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"     * @return exception message.","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"        if (e instanceof NumberFormatException) {","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"            message \u003d \"☹ OH NO!!! The task does not exist.\u003e:(\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"        } else if (e instanceof StringIndexOutOfBoundsException || ","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"                    e instanceof ArrayIndexOutOfBoundsException) {","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"Gordon25"},"content":"            message \u003d \"☹ The task description or command is incomplete.:$\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"Gordon25"},"content":"        } else if (e instanceof IOException) {","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"            message \u003d \"☹ OH NO!!! I cannot find the file.\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"Gordon25"},"content":"        } else if (e instanceof DateTimeParseException) {","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"Gordon25"},"content":"            message \u003d \"Please enter a proper date and time format.\";","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"Gordon25"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"Gordon25"},"content":"            message \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\";","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"Gordon25"},"content":"        return message;","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Gordon25":45}},{"path":"src/main/java/duke/main/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"package duke.main;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"import duke.command.FilterCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":"import duke.command.MarkDoneCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":" * Represents a abstraction to read user input.","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":" * ","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":" * @author Gordon Yit","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":" * @version CS2103T, Semester 2","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"public class Parser {","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"    ","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"    public enum Commands { done, list, delete, filter, others};","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"    ","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"    private Parser() {","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"    ","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"     * Takes in a user command, logic decides which command to call.","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"     * @param command","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"     * @return the command to call based on user command.","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"    public static Command parse(String command) throws DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"        String[] commandDescription \u003d command.split(\" \", 0);","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"        String action \u003d commandDescription[0];","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"            switch (action) {","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"Gordon25"},"content":"                case \"done\":","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"Gordon25"},"content":"                    return new MarkDoneCommand(Integer.parseInt(commandDescription[1]));","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"                case \"list\":","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"Gordon25"},"content":"                    return new ListCommand();","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"Gordon25"},"content":"                case \"delete\":","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"Gordon25"},"content":"                    return new DeleteCommand(Integer.parseInt(commandDescription[1]));","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"Gordon25"},"content":"                case \"filter\":","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"Gordon25"},"content":"                    return new FilterCommand(commandDescription[1]);","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"Gordon25"},"content":"                case \"bye\":","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"Gordon25"},"content":"                    return new ExitCommand();","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"Gordon25"},"content":"                default:","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"Gordon25"},"content":"                    return new AddCommand(command);","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"Gordon25"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"Gordon25"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"Gordon25"},"content":"            throw new DukeException(e);","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"Gordon25"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"Gordon25"},"content":"            throw new DukeException(e);","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"Gordon25":54}},{"path":"src/main/java/duke/main/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"package duke.main;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"import java.io.File;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":" * Represents a file to store data, operations to write on the file.","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":" * ","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":" * @author Gordon","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":" * @Since 25/8/21","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"public class Storage {","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"    private String filepath;","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"    private File file;","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"    private FileWriter fileWriter;","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"    ","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"     * @param filePath the path from the project directory to the storage file.","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"        this.filepath \u003d filePath;","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"Gordon25"},"content":"     * loads all the tasks saved in the storage folder into a tasks arraylist.","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"Gordon25"},"content":"     * @return an arraylist of tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"Gordon25"},"content":"     * @throws IOException","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"Gordon25"},"content":"    public  ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"Gordon25"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"Gordon25"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"Gordon25"},"content":"            File tempFile \u003d new File(filepath);","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"Gordon25"},"content":"            filepath \u003d tempFile.getCanonicalPath();","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"Gordon25"},"content":"            file \u003d new File(filepath);","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"Gordon25"},"content":"            if (!file.exists()) {","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"Gordon25"},"content":"                file.createNewFile();","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"Gordon25"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"Gordon25"},"content":"            if (file.length() !\u003d 0) {","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"Gordon25"},"content":"                Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"Gordon25"},"content":"                String line;","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"Gordon25"},"content":"                while (sc.hasNext()) {","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"Gordon25"},"content":"                    line \u003d sc.nextLine();","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"Gordon25"},"content":"                    int START \u003d 8;","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"Gordon25"},"content":"                    Task t;","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"Gordon25"},"content":"                    String divider \u003d \" | \";","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"Gordon25"},"content":"                    int taskAndTimeDivider \u003d line.indexOf(divider);","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"Gordon25"},"content":"                    int startingIndex \u003d line.indexOf(divider) + divider.length() + 4;","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"Gordon25"},"content":"                    if (line.contains(\"D |\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"Gordon25"},"content":"                        String taskDescriptionAndTime \u003d line.substring(startingIndex);","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"Gordon25"},"content":"                        int startOfTimeIndex \u003d taskDescriptionAndTime.indexOf(divider);","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"Gordon25"},"content":"                        String task \u003d taskDescriptionAndTime.substring(0, startOfTimeIndex);","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"Gordon25"},"content":"                        String time \u003d taskDescriptionAndTime.substring(startOfTimeIndex + divider.length());","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"Gordon25"},"content":"                        t \u003d new Deadline(task, time);","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"Gordon25"},"content":"                    } else if (line.contains(\"E |\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"Gordon25"},"content":"                        String taskDescriptionAndTime \u003d line.substring(startingIndex);","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"Gordon25"},"content":"                        int startOfTimeIndex \u003d taskDescriptionAndTime.indexOf(divider);","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"Gordon25"},"content":"                        String task \u003d taskDescriptionAndTime.substring(0, startOfTimeIndex);","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"Gordon25"},"content":"                        String time \u003d taskDescriptionAndTime.substring(startOfTimeIndex + divider.length());","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"Gordon25"},"content":"                        t \u003d new Event(task, time);","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"Gordon25"},"content":"                    } else {","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"Gordon25"},"content":"                        String taskDescription \u003d line.substring(startingIndex);","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"Gordon25"},"content":"                        t \u003d new Todo(taskDescription, \"\");","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"Gordon25"},"content":"                    }","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"Gordon25"},"content":"                    if (line.contains(\"| 0 |\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"Gordon25"},"content":"                        t.markAsDone();","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"Gordon25"},"content":"                    }","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"Gordon25"},"content":"                    tasks.add(t);","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"Gordon25"},"content":"                    file.delete();","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"Gordon25"},"content":"                }","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"Gordon25"},"content":"                sc.close();","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"Gordon25"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"Gordon25"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"Gordon25"},"content":"            file \u003d new File(filepath);","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"Gordon25"},"content":"            throw new DukeException(e);","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"Gordon25"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"Gordon25"},"content":"            throw new DukeException(e);","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"Gordon25"},"content":"        return tasks;","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":93,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"Gordon25"},"content":"     * stores all the tasks from the tasks array into the storage file.","lastModifiedDate":"2021-08-29"},{"lineNumber":95,"author":{"gitId":"Gordon25"},"content":"     * @param tasks an arraylist of tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":96,"author":{"gitId":"Gordon25"},"content":"     * @throws IOException","lastModifiedDate":"2021-08-29"},{"lineNumber":97,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":98,"author":{"gitId":"Gordon25"},"content":"    public void store(ArrayList\u003cTask\u003e tasks) throws IOException{","lastModifiedDate":"2021-08-29"},{"lineNumber":99,"author":{"gitId":"Gordon25"},"content":"        file \u003d new File(filepath);","lastModifiedDate":"2021-08-29"},{"lineNumber":100,"author":{"gitId":"Gordon25"},"content":"        file.createNewFile();","lastModifiedDate":"2021-08-29"},{"lineNumber":101,"author":{"gitId":"Gordon25"},"content":"        fileWriter \u003d new FileWriter(file, false);","lastModifiedDate":"2021-08-29"},{"lineNumber":102,"author":{"gitId":"Gordon25"},"content":"        String data \u003d \"\";","lastModifiedDate":"2021-08-29"},{"lineNumber":103,"author":{"gitId":"Gordon25"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2021-08-29"},{"lineNumber":104,"author":{"gitId":"Gordon25"},"content":"            data +\u003d t.formatToStore() + \"\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":105,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":106,"author":{"gitId":"Gordon25"},"content":"        fileWriter.write(data);","lastModifiedDate":"2021-08-29"},{"lineNumber":107,"author":{"gitId":"Gordon25"},"content":"        fileWriter.close();","lastModifiedDate":"2021-08-29"},{"lineNumber":108,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":109,"author":{"gitId":"Gordon25"},"content":"    ","lastModifiedDate":"2021-08-29"},{"lineNumber":110,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"Gordon25":110}},{"path":"src/main/java/duke/main/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"package duke.main;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":" * Represents a list of tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":" * ","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":" * @author Gordon Yit","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":" * @Version Cs2103T, Semester 2","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":"public class TaskList {","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"     * Class constructor, loads arraylist of tasks from the storage to the tasks arraylist.","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"     * @param tasksStored an arraylist of tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasksStored) {","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"        tasks \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"        for (Task t : tasksStored) {","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"            this.tasks.add(t);","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"     * Alternative class constructor, used when there is an error loading the file.","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"     * Initiates the tasks arraylist.","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"      tasks \u003d new ArrayList\u003c\u003e(100);  ","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"    ","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"Gordon25"},"content":"     * Adds a task to the tasks list.","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"Gordon25"},"content":"     * @param task a task to be added.","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"Gordon25"},"content":"     * @return the updated tasks arraylist.","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"Gordon25"},"content":"    public ArrayList\u003cTask\u003e add(Task task) {","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"Gordon25"},"content":"        this.tasks.add(task);","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"Gordon25"},"content":"        return tasks;","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"Gordon25"},"content":"     * Retrieves a task based on the given index.","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"Gordon25"},"content":"     * @param taskIndex index of the task. ","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"Gordon25"},"content":"     * @return a task matching the given index.","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"Gordon25"},"content":"    public Task getTask(int taskIndex) {","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"Gordon25"},"content":"        return tasks.get(taskIndex);","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"Gordon25"},"content":"     * Marks the task corresponding to the done. ","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"Gordon25"},"content":"     * @param taskIndex index of the task to be marked done. ","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"Gordon25"},"content":"    public Task markDone(int taskIndex) {","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"Gordon25"},"content":"        Task task \u003d getTask(taskIndex);","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"Gordon25"},"content":"        task.markAsDone();","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"Gordon25"},"content":"        return task;","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"Gordon25"},"content":"    ","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"Gordon25"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"Gordon25"},"content":"     * @param taskIndex index of the task to be deleted.","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"Gordon25"},"content":"     * @return the updated tasks arraylist.","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"Gordon25"},"content":"    public ArrayList\u003cTask\u003e delete(int taskIndex) {","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"Gordon25"},"content":"        this.tasks.remove(taskIndex);","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"Gordon25"},"content":"        return tasks;","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"Gordon25"},"content":"    ","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"Gordon25"},"content":"     * finds all the tasks matching the date given. ","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"Gordon25"},"content":"     * @param date the date of interest.","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"Gordon25"},"content":"     * @return an arraylist of tasks which fall on that date.","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"Gordon25"},"content":"    public ArrayList\u003cTask\u003e findTasksMatchingDate(duke.main.Date date) {","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"Gordon25"},"content":"        String dateString \u003d date.toString();","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"Gordon25"},"content":"        ArrayList\u003cTask\u003e tasksMatchingDate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"Gordon25"},"content":"        for (Task t: tasks) {","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"Gordon25"},"content":"            if (t.isSameDate(dateString)) {","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"Gordon25"},"content":"                tasksMatchingDate.add(t);","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"Gordon25"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"Gordon25"},"content":"        return tasksMatchingDate;","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":93,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":95,"author":{"gitId":"Gordon25"},"content":"     * Returns the tasks arraylist.","lastModifiedDate":"2021-08-29"},{"lineNumber":96,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-29"},{"lineNumber":97,"author":{"gitId":"Gordon25"},"content":"     * @return arraylist of tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":98,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":99,"author":{"gitId":"Gordon25"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-08-29"},{"lineNumber":100,"author":{"gitId":"Gordon25"},"content":"        return tasks;","lastModifiedDate":"2021-08-29"},{"lineNumber":101,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":102,"author":{"gitId":"Gordon25"},"content":"    ","lastModifiedDate":"2021-08-29"},{"lineNumber":103,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":104,"author":{"gitId":"Gordon25"},"content":"     * Provides the number of tasks in the tasks list.","lastModifiedDate":"2021-08-29"},{"lineNumber":105,"author":{"gitId":"Gordon25"},"content":"     * @return size of the tasks arraylist.","lastModifiedDate":"2021-08-29"},{"lineNumber":106,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":107,"author":{"gitId":"Gordon25"},"content":"    public int getNumOfTasks() {","lastModifiedDate":"2021-08-29"},{"lineNumber":108,"author":{"gitId":"Gordon25"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-29"},{"lineNumber":109,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":110,"author":{"gitId":"Gordon25"},"content":"    ","lastModifiedDate":"2021-08-29"},{"lineNumber":111,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"Gordon25":111}},{"path":"src/main/java/duke/main/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"package duke.main;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":" * Represents user interface abstraction.","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":" * ","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":" * @author Gordon Yit","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":" * @Version CS2103T","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":"public class Ui {","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":"    private final String LOGO \u003d \" ____        _        \\n\" ","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"    private String c \u003d \"~\";","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"    private String line1 \u003d \" Hello! I\u0027m Duke.Duke \";","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"    private String line2 \u003d \" What do you wanna do today? \";","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"    private int bufferLength \u003d 5;","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"    private int limit \u003d Integer.max(line1.length(), line2.length()) + bufferLength;","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"    private String buffer1 \u003d c.repeat((limit - line1.length()) / 2);","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"    private String buffer2 \u003d c.repeat((limit - line2.length()) / 2);","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"    private String str \u003d buffer1 + line1 + buffer1 + \"\\n\" + buffer2 + line2 + buffer2 + \"\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"    private final String GREETING \u003d \"Hello from\\n\" + LOGO + str;","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"    private final String FAREWELL \u003d \"@@@@ Till we meet again, my friend @@@@\"; ","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"    private Scanner sc;","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"    private String command;","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"    ","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"     * Class constructor for Duke.Ui.","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"Gordon25"},"content":"    public Ui() {","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"Gordon25"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"Gordon25"},"content":"     * Welcomes the user.","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"Gordon25"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"Gordon25"},"content":"        System.out.println(GREETING);","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"Gordon25"},"content":"    ","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"Gordon25"},"content":"     * Reads user commands","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"Gordon25"},"content":"     * @return user commands as a string.","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"Gordon25"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"Gordon25"},"content":"        command \u003d sc.nextLine();","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"Gordon25"},"content":"        return command;","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"Gordon25"},"content":"    ","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"Gordon25"},"content":"     * Shows farewell message to user.","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"Gordon25"},"content":"    public void showFarewell() {","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"Gordon25"},"content":"        System.out.println(FAREWELL);","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"Gordon25"},"content":"        sc.close();","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"Gordon25"},"content":"    ","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"Gordon25"},"content":"     * Shows the diving line.","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"Gordon25"},"content":"    public void showLine() {","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"Gordon25"},"content":"        String line \u003d \"_________________________________\";","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"Gordon25"},"content":"        System.out.println(line);","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"Gordon25"},"content":"     * Shows the error message from loading the file.","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"Gordon25"},"content":"    public void showLoadingError() {","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"Gordon25"},"content":"        String loadingError \u003d \"There was a problem loading the file.\";","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"Gordon25"},"content":"        System.out.println(loadingError);","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"Gordon25"},"content":"     * Shows the error message from error contained in Duke.DukeException.","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"Gordon25"},"content":"     * @return the error message.","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"Gordon25"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"Gordon25"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"Gordon25"},"content":"     * Displays a specific task that was marked done.","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"Gordon25"},"content":"     * @param task task marked as done.","lastModifiedDate":"2021-08-29"},{"lineNumber":93,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"Gordon25"},"content":"    public void showMarkTaskDone(Task task) {","lastModifiedDate":"2021-08-29"},{"lineNumber":95,"author":{"gitId":"Gordon25"},"content":"        String doneMessage \u003d \"Yay, one task down!\";","lastModifiedDate":"2021-08-29"},{"lineNumber":96,"author":{"gitId":"Gordon25"},"content":"        System.out.println(doneMessage);","lastModifiedDate":"2021-08-29"},{"lineNumber":97,"author":{"gitId":"Gordon25"},"content":"        String taskMarkedAsDone \u003d String.format(\"~~%s~~\", task.toString());","lastModifiedDate":"2021-08-29"},{"lineNumber":98,"author":{"gitId":"Gordon25"},"content":"        System.out.println(taskMarkedAsDone);","lastModifiedDate":"2021-08-29"},{"lineNumber":99,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":100,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":101,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":102,"author":{"gitId":"Gordon25"},"content":"     * Displays the task deleted.","lastModifiedDate":"2021-08-29"},{"lineNumber":103,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-29"},{"lineNumber":104,"author":{"gitId":"Gordon25"},"content":"     * @param task the deleted task.","lastModifiedDate":"2021-08-29"},{"lineNumber":105,"author":{"gitId":"Gordon25"},"content":"     * @param taskArrayList an arraylist of task after deleting the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":106,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":107,"author":{"gitId":"Gordon25"},"content":"    public void showTaskDeleted(Task task, ArrayList\u003cTask\u003e taskArrayList) {","lastModifiedDate":"2021-08-29"},{"lineNumber":108,"author":{"gitId":"Gordon25"},"content":"        String deletionMessage \u003d \"Alrighty, I\u0027ve removed this task:\";","lastModifiedDate":"2021-08-29"},{"lineNumber":109,"author":{"gitId":"Gordon25"},"content":"        System.out.println(deletionMessage);","lastModifiedDate":"2021-08-29"},{"lineNumber":110,"author":{"gitId":"Gordon25"},"content":"        String deletedTask \u003d String.format(\"~~%s~~\", task.toString());","lastModifiedDate":"2021-08-29"},{"lineNumber":111,"author":{"gitId":"Gordon25"},"content":"        System.out.println(deletedTask);","lastModifiedDate":"2021-08-29"},{"lineNumber":112,"author":{"gitId":"Gordon25"},"content":"        String tasksRemaining \u003d String.format(\"Now, you have %s %s remaining\", taskArrayList.size(), ","lastModifiedDate":"2021-08-29"},{"lineNumber":113,"author":{"gitId":"Gordon25"},"content":"                                    (taskArrayList.size() \u003e 1 ? \"tasks\" : \"task\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":114,"author":{"gitId":"Gordon25"},"content":"        System.out.println(tasksRemaining);","lastModifiedDate":"2021-08-29"},{"lineNumber":115,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":116,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":117,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":118,"author":{"gitId":"Gordon25"},"content":"     * Displays the task added.","lastModifiedDate":"2021-08-29"},{"lineNumber":119,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-29"},{"lineNumber":120,"author":{"gitId":"Gordon25"},"content":"     * @param task the task added.","lastModifiedDate":"2021-08-29"},{"lineNumber":121,"author":{"gitId":"Gordon25"},"content":"     * @param taskArrayList arraylist of tasks after adding the new task.","lastModifiedDate":"2021-08-29"},{"lineNumber":122,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":123,"author":{"gitId":"Gordon25"},"content":"    public void showTaskAdded(Task task, ArrayList\u003cTask\u003e taskArrayList) {","lastModifiedDate":"2021-08-29"},{"lineNumber":124,"author":{"gitId":"Gordon25"},"content":"        String additionMessage \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2021-08-29"},{"lineNumber":125,"author":{"gitId":"Gordon25"},"content":"        System.out.println(additionMessage);","lastModifiedDate":"2021-08-29"},{"lineNumber":126,"author":{"gitId":"Gordon25"},"content":"        String addedTask \u003d String.format(\"~~%S~~\", task.toString());","lastModifiedDate":"2021-08-29"},{"lineNumber":127,"author":{"gitId":"Gordon25"},"content":"        System.out.println(addedTask);","lastModifiedDate":"2021-08-29"},{"lineNumber":128,"author":{"gitId":"Gordon25"},"content":"        String newTally \u003d String.format(\"Now you have %s %s in the list.\", taskArrayList.size(), ","lastModifiedDate":"2021-08-29"},{"lineNumber":129,"author":{"gitId":"Gordon25"},"content":"                                    (taskArrayList.size() \u003e 1 ? \"tasks\" : \"task\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":130,"author":{"gitId":"Gordon25"},"content":"        System.out.println(newTally);","lastModifiedDate":"2021-08-29"},{"lineNumber":131,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":132,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":133,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":134,"author":{"gitId":"Gordon25"},"content":"     * Lists out all the tasks Duke.Duke is keeping track of.","lastModifiedDate":"2021-08-29"},{"lineNumber":135,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-29"},{"lineNumber":136,"author":{"gitId":"Gordon25"},"content":"     * @param taskArrayList current arraylist of tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":137,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":138,"author":{"gitId":"Gordon25"},"content":"    public void showListOfTasks(ArrayList\u003cTask\u003e taskArrayList) {","lastModifiedDate":"2021-08-29"},{"lineNumber":139,"author":{"gitId":"Gordon25"},"content":"        String header \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2021-08-29"},{"lineNumber":140,"author":{"gitId":"Gordon25"},"content":"        iterate(header, taskArrayList);","lastModifiedDate":"2021-08-29"},{"lineNumber":141,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":142,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":143,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":144,"author":{"gitId":"Gordon25"},"content":"     * Lists out all the tasks that falls on a specified date.","lastModifiedDate":"2021-08-29"},{"lineNumber":145,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-29"},{"lineNumber":146,"author":{"gitId":"Gordon25"},"content":"     * @param taskArrayList arraylist of task that fall on the specified date.","lastModifiedDate":"2021-08-29"},{"lineNumber":147,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":148,"author":{"gitId":"Gordon25"},"content":"    public void showFilteredTasks(ArrayList\u003cTask\u003e taskArrayList, Date date) {","lastModifiedDate":"2021-08-29"},{"lineNumber":149,"author":{"gitId":"Gordon25"},"content":"        String header \u003d String.format(\"On %s, you have: \", date.toString());","lastModifiedDate":"2021-08-29"},{"lineNumber":150,"author":{"gitId":"Gordon25"},"content":"        iterate(header, taskArrayList);","lastModifiedDate":"2021-08-29"},{"lineNumber":151,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":152,"author":{"gitId":"Gordon25"},"content":"    ","lastModifiedDate":"2021-08-29"},{"lineNumber":153,"author":{"gitId":"Gordon25"},"content":"    private void iterate(String headerMessage, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-29"},{"lineNumber":154,"author":{"gitId":"Gordon25"},"content":"        System.out.println(headerMessage);","lastModifiedDate":"2021-08-29"},{"lineNumber":155,"author":{"gitId":"Gordon25"},"content":"        for(int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-29"},{"lineNumber":156,"author":{"gitId":"Gordon25"},"content":"            System.out.println(String.format(\"%s.%s\", i + 1, tasks.get(i).toString()));","lastModifiedDate":"2021-08-29"},{"lineNumber":157,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":158,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":159,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"Gordon25":159}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"package duke.task;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"import duke.main.Date;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":" * Represents tasks with deadline.","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":" * ","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":" * @author Gordon Yit","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":" * @Version CS2103T, Semester 1","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"    private final String TASK_MARKER \u003d \"D\";","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"    private String taskDescription;","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"    private String deadlineDate;","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"    private Date date;","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"    private final String KEYWORD \u003d \"deadline \";","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"    private final String BY \u003d \"by \";","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"    ","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"     * Class constructor for Duke.Deadline class.","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"     * @param description consisting of task description and deadline date.","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"    public Deadline(String description) throws DateTimeParseException {","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"        int startingIndex \u003d description.indexOf(KEYWORD) + KEYWORD.length();","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"        int startOfTimingIndex \u003d description.indexOf(BY);","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"        taskDescription \u003d description.substring(startingIndex, startOfTimingIndex - 1);","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"        deadlineDate \u003d description.substring(startOfTimingIndex + BY.length());","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"        date \u003d new Date(deadlineDate);","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"Gordon25"},"content":"     * Class constructor for loading tasks from storage file.","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"Gordon25"},"content":"     * @param deadlineDescription description of deadline task.","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"Gordon25"},"content":"     * @param dateOfTask date of the deadline task.","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"Gordon25"},"content":"    public Deadline(String deadlineDescription, String dateOfTask) throws ParseException {","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"Gordon25"},"content":"        taskDescription \u003d deadlineDescription;","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"Gordon25"},"content":"        date \u003d Date.convertDateStringToDate(dateOfTask);","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"Gordon25"},"content":"    ","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"Gordon25"},"content":"     * Print out the deadline task,","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"Gordon25"},"content":"     * @return string format of the deadline task, ","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"Gordon25"},"content":"     * consisting of the task marker \"D\", task description and deadline of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"Gordon25"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"Gordon25"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"Gordon25"},"content":"        return String.format(\"[%s]%s %s (by: %s)\", TASK_MARKER, super.toString(), taskDescription, ","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"Gordon25"},"content":"                                date.toString());","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"Gordon25"},"content":"     * Formats the task in to the storage format.","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"Gordon25"},"content":"     * @return storage format of the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"Gordon25"},"content":"    public String formatToStore() {","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"Gordon25"},"content":"        return String.format(\"%s | %s | %s | %s\", TASK_MARKER, getStatusIcon() \u003d\u003d \" \" ? 1 : 0, ","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"Gordon25"},"content":"                                taskDescription, date.toString());","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"Gordon25"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"Gordon25"},"content":"     * Returns task marker. ","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"Gordon25"},"content":"     * @return a one character string that is a marker for this task.","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"Gordon25"},"content":"    public String getTaskMarker() {","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"Gordon25"},"content":"        return TASK_MARKER;","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"Gordon25"},"content":"     * checks if given datetime matches the tasks date time.","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"Gordon25"},"content":"     * @param dateString date time (in string form) to compare with.","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"Gordon25"},"content":"     * @return true if the task date time matches the date time given.","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"Gordon25"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"Gordon25"},"content":"    public boolean isSameDate(String dateString) {","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"Gordon25"},"content":"        return this.date.isSameDate(dateString);","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Gordon25":87}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"package duke.task;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"import duke.main.Date;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":" * Represents tasks with specific timing.","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":" * ","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":" * @author Gordon Yit","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":" * @Since 23-08-21","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"    private final String TASK_MARKER \u003d \"E\";","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"    private String taskDescription;","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"    private String eventDate;","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"    private Date date;","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"    private final String KEYWORD \u003d \"event \";","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"    private final String AT \u003d \"at \";","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"    ","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"     * Class constructor for Duke.Event class.","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"     * @param description consisting of task description and timing.","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"    public Event(String description) throws DateTimeParseException {","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"        int startingIndex \u003d description.indexOf(KEYWORD) + KEYWORD.length();","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"        int startOfTimeIndex \u003d description.indexOf(AT);","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"        taskDescription \u003d description.substring(startingIndex, startOfTimeIndex - 1);   ","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"        eventDate \u003d description.substring(startOfTimeIndex + AT.length());","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"        this.date \u003d new Date(eventDate);","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"Gordon25"},"content":"     * Class constructor for loading tasks from storage file.","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"Gordon25"},"content":"     * @param eventDescription description of event task.","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"Gordon25"},"content":"     * @param dateOfTask date of the event task.","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"Gordon25"},"content":"    public Event(String eventDescription, String dateOfTask) throws ParseException {","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"Gordon25"},"content":"        taskDescription \u003d eventDescription;","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"Gordon25"},"content":"        date \u003d Date.convertDateStringToDate(dateOfTask);","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"Gordon25"},"content":"    ","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"Gordon25"},"content":"     * Print out the event task,","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"Gordon25"},"content":"     * @return string format of the event task, ","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"Gordon25"},"content":"     * consisting of the task marker \"E\", task description and duration of the event.","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"Gordon25"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"Gordon25"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"Gordon25"},"content":"        return String.format(\"[%s]%s %s (at: %s)\", TASK_MARKER, super.toString(), taskDescription,","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"Gordon25"},"content":"                date.toString());","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"Gordon25"},"content":"     * Formats the task in to the storage format.","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"Gordon25"},"content":"     * @return storage format of the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"Gordon25"},"content":"    public String formatToStore() {","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"Gordon25"},"content":"        return String.format(\"%s | %s | %s | %s\", TASK_MARKER, getStatusIcon() \u003d\u003d \" \" ? 1 : 0,","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"Gordon25"},"content":"                taskDescription, date.toString());","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"Gordon25"},"content":"     * Returns task marker. ","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"Gordon25"},"content":"     * @return a one character string that is a marker for this task.","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"Gordon25"},"content":"    public String getTaskMarker() {","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"Gordon25"},"content":"        return TASK_MARKER;","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"Gordon25"},"content":"     * checks if given datetime matches the tasks date time.","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"Gordon25"},"content":"     * @param dateString date to compare with in string form.","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"Gordon25"},"content":"     * @return true if the task date time matches the date time given.","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"Gordon25"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"Gordon25"},"content":"    public boolean isSameDate(String dateString) {","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"Gordon25"},"content":"        return this.date.isSameDate(dateString);","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Gordon25":87}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"package duke.task;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"import javax.xml.stream.FactoryConfigurationError;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":" * Represents a task which can be marked done.","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":" * ","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":" * @author Gordon Yit","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":" * @Since 23-08-21","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":"public class Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"     * Class constructor for Duke.Task class.","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"     * Sets isDone to false, meaning task is not done.","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"    public Task() {","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"    ","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"     * @return \"X\" if task is done, else returns \" \".","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"Gordon25"},"content":"     * Marks task as done.","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"Gordon25"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"Gordon25"},"content":"     * Prints out the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"Gordon25"},"content":"     * @return string format of the task, ","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"Gordon25"},"content":"     * consisting of the status icon and task description.","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"Gordon25"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"Gordon25"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"Gordon25"},"content":"        return String.format(\"[%s]\", getStatusIcon());","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"Gordon25"},"content":"     * Formats the task in to the storage format.","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"Gordon25"},"content":"     * @return storage format of the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"Gordon25"},"content":"    public String formatToStore() {","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"Gordon25"},"content":"        return String.format(\"%s |\", getStatusIcon() \u003d\u003d \" \" ? 1 : 0);","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"Gordon25"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"Gordon25"},"content":"     * Returns task marker. ","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"Gordon25"},"content":"     * @return a one character string that is a marker for this task.","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"Gordon25"},"content":"    public String getTaskMarker() {","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"Gordon25"},"content":"        return \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"Gordon25"},"content":"     * checks if given datetime matches the deadline of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"Gordon25"},"content":"     * @param dateString date in string form to to compare with.","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"Gordon25"},"content":"     * @return false.","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"Gordon25"},"content":"    public boolean isSameDate(String dateString) {","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"Gordon25"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Gordon25":80}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"package duke.task;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"import duke.main.DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":" * a class to encapsulate tasks without any date/time attached.","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":" * ","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":" * @author Gordon Yit","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":" * @Since 23-08-21","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":"    ","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":"    private final String TASK_MARKER \u003d \"T\";","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"    private String taskDescription;","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"    private final String KEYWORD \u003d \"todo \";","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"     * Class constructor for Duke.Todo class.","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"     * @param description the task description.","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"    public Todo(String description) throws DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"            if (!description.contains(\"todo\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"                throw new IllegalArgumentException();","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"            int startingIndex \u003d description.indexOf(KEYWORD);","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"            taskDescription \u003d description.substring(startingIndex + KEYWORD.length());","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"            if (taskDescription \u003d\u003d \"\") {","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"                throw new StringIndexOutOfBoundsException();","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"            throw new DukeException(e);","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"Gordon25"},"content":"            throw new DukeException(e);","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"Gordon25"},"content":"     * prints out the Duke.Todo task.","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"Gordon25"},"content":"     * ","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"Gordon25"},"content":"     * @return string format of the todo task, ","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"Gordon25"},"content":"     * consisting of the task marker \"T\" and task description.","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"Gordon25"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"Gordon25"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"Gordon25"},"content":"        return String.format(\"[%s]%s %s\", TASK_MARKER, super.toString(), taskDescription);","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"Gordon25"},"content":"     * Formats the task in to the storage format.","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"Gordon25"},"content":"     * @return storage format of the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"Gordon25"},"content":"    public String formatToStore() {","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"Gordon25"},"content":"        return String.format(\"%s | %s | %s\", TASK_MARKER, getStatusIcon() \u003d\u003d \" \" ? 1 : 0,","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"Gordon25"},"content":"                taskDescription);","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"Gordon25"},"content":"     * Class constructor for loading tasks from storage file.","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"Gordon25"},"content":"     * @param todoDescription description of todo task.","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"Gordon25"},"content":"     * @param dateOfTask date of the todo task (unused).","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"Gordon25"},"content":"    public Todo(String todoDescription, String dateOfTask) {","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"Gordon25"},"content":"        taskDescription \u003d todoDescription;","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"Gordon25"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"Gordon25"},"content":"     * Returns task marker. ","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"Gordon25"},"content":"     * @return a one character string that is a marker for this task.","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"Gordon25"},"content":"    public String getTaskMarker() {","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"Gordon25"},"content":"        return TASK_MARKER;","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Gordon25":78}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"list","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"todo read book","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"deadline return book by 21/06/2021","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"event project meeting at 12/08/2021","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"todo join sports club","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"todo create group chat","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"deadline set up meeting date by 31/08/2021","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":"event project meeting at 30/09/2021","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":"done 1","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":"blah","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":"done","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"todo","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"event something at","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"filter 30/09/2021","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"delete 2","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"todo","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Gordon25":21}}]
