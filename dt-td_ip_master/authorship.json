[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dt-td"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"dt-td"},"content":" * Encapsulates a deadline object.","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"dt-td"},"content":" * Deadline objects are task objects that needs to be done by a specific date/time.","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"dt-td"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"dt-td"},"content":" * @author Dickson","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"dt-td"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"dt-td"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"dt-td"},"content":"     * Constructor for Deadline object.","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"dt-td"},"content":"     * @param description","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"dt-td"},"content":"    public Deadline(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"dt-td"},"content":"        super(description);","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"dt-td"},"content":"     * Gets string representation of deadline task.","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"dt-td"},"content":"     * @return String representation of deadline task.","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"dt-td"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"dt-td"},"content":"    public String toString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"dt-td"},"content":"        return \"[D]\" + super.toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"dt-td"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"dt-td":26}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dt-td"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"dt-td"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"dt-td"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"dt-td"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"dt-td"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"dt-td"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"dt-td"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"dt-td"},"content":" * Encapsulates the Duke bot that has the ability to create, read, update and delete tasks","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"dt-td"},"content":" * such as todo, deadline and event tasks based on user input.","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"dt-td"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"dt-td"},"content":" * @author Dickson","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"dt-td"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"dt-td"},"content":"    private static ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"dt-td"},"content":"    private static int numberOfTasks;","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"dt-td"},"content":"        list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"dt-td"},"content":"        numberOfTasks \u003d 0;","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"dt-td"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"dt-td"},"content":"        printDoubleLineBorder();","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"dt-td"},"content":"        System.out.println(\"Hi there! I\u0027m Duke\\n\" + \"How may I help you?\\n\");","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"dt-td"},"content":"        printDoubleLineBorder();","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"dt-td"},"content":"        processInput(scanner);","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"dt-td"},"content":"     * Process user input.","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"dt-td"},"content":"     * @param scanner Scanner for user input.","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"dt-td"},"content":"    private static void processInput(Scanner scanner) {","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"dt-td"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"dt-td"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"dt-td"},"content":"            printSingleLineBorder();","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"dt-td"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"dt-td"},"content":"                System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"dt-td"},"content":"                scanner.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"dt-td"},"content":"                break;","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"dt-td"},"content":"            } else if (input.equals(\"list\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"dt-td"},"content":"                if (numberOfTasks \u003d\u003d 0) {","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"dt-td"},"content":"                    System.out.println(\"There are no tasks in your list!\");","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"dt-td"},"content":"                } else if (numberOfTasks \u003d\u003d 1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"dt-td"},"content":"                    System.out.println(\"Here is the task in your list:\");","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"dt-td"},"content":"                } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"dt-td"},"content":"                    System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"dt-td"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"dt-td"},"content":"                for (int i \u003d 0; i \u003c numberOfTasks; i++) {","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"dt-td"},"content":"                    System.out.println((i + 1) + \".\" + list.get(i));","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"dt-td"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"dt-td"},"content":"            } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"dt-td"},"content":"                try {","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"dt-td"},"content":"                    String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"dt-td"},"content":"                    if (splitInput.length \u003d\u003d 0) {","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"dt-td"},"content":"                        throw new InvalidInputException(\"Invalid Task. Please enter a valid task.\\n\" +","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"dt-td"},"content":"                                \"(Todo) todo CS2103T Readings\\n\" +","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"dt-td"},"content":"                                \"(Deadline) deadline CS2103T Individual Project /by 2021-09-07 1159\\n\" +","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"dt-td"},"content":"                                \"(Event) event CS2103T Finals /at 2021-11-23 1700\");","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"dt-td"},"content":"                    } else if (splitInput[0].equals(\"done\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"dt-td"},"content":"                        int taskIndex \u003d Integer.parseInt(splitInput[1]) - 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"dt-td"},"content":"                        if (taskIndex \u003c 0 || taskIndex \u003e list.size() - 1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"dt-td"},"content":"                            throw new InvalidInputException(\"Invalid Task Index\");","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"dt-td"},"content":"                        }","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"dt-td"},"content":"                        Task task \u003d list.get(taskIndex);","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"dt-td"},"content":"                        task.markDone();","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"dt-td"},"content":"                        saveAsFile();","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"dt-td"},"content":"                        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + task);","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"dt-td"},"content":"                    } else if (splitInput[0].equals(\"delete\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"dt-td"},"content":"                        removeTask(splitInput[1]);","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"dt-td"},"content":"                    } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"dt-td"},"content":"                        addTask(input);","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"dt-td"},"content":"                    }","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"dt-td"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"dt-td"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"dt-td"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"dt-td"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"dt-td"},"content":"            printSingleLineBorder();","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"dt-td"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"dt-td"},"content":"     * Adds a Task object into the list based on user input.","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"dt-td"},"content":"     * @param input user String input.","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"dt-td"},"content":"     * @throws DukeException Exceptions when using bot.","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"dt-td"},"content":"    private static void addTask(String input) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":91,"author":{"gitId":"dt-td"},"content":"        Task task;","lastModifiedDate":"2021-08-18"},{"lineNumber":92,"author":{"gitId":"dt-td"},"content":"        String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2021-08-18"},{"lineNumber":93,"author":{"gitId":"dt-td"},"content":"        String taskType \u003d splitInput[0];","lastModifiedDate":"2021-08-18"},{"lineNumber":94,"author":{"gitId":"dt-td"},"content":"        String taskDescription \u003d \"\";","lastModifiedDate":"2021-08-18"},{"lineNumber":95,"author":{"gitId":"dt-td"},"content":"        boolean taskHasDate \u003d false;","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"dt-td"},"content":"        boolean nextIsDateValue \u003d false;","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"dt-td"},"content":"        for (int i \u003d 1; i \u003c splitInput.length; i++) {","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"dt-td"},"content":"            if (nextIsDateValue) {","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"dt-td"},"content":"                if (!validDate(splitInput[i])) {","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"dt-td"},"content":"                    throw new InvalidInputException(\"Invalid Task Date. Please input date in this format YYYY-MM-DD.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"dt-td"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"dt-td"},"content":"                nextIsDateValue \u003d false;","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"dt-td"},"content":"                taskDescription \u003d taskDescription.concat(parseDate(splitInput[i]) + \" \");","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"dt-td"},"content":"            } else if (splitInput[i].contains(\"/\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"dt-td"},"content":"                taskHasDate \u003d true;","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"dt-td"},"content":"                nextIsDateValue \u003d true;","lastModifiedDate":"2021-08-22"},{"lineNumber":107,"author":{"gitId":"dt-td"},"content":"                taskDescription \u003d taskDescription.concat(\"(\" + splitInput[i].split(\"/\")[1] + \": \");","lastModifiedDate":"2021-08-22"},{"lineNumber":108,"author":{"gitId":"dt-td"},"content":"            } else if (i !\u003d splitInput.length - 1){","lastModifiedDate":"2021-08-18"},{"lineNumber":109,"author":{"gitId":"dt-td"},"content":"                taskDescription \u003d taskDescription.concat(splitInput[i] + \" \");","lastModifiedDate":"2021-08-22"},{"lineNumber":110,"author":{"gitId":"dt-td"},"content":"            } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":111,"author":{"gitId":"dt-td"},"content":"                taskDescription \u003d taskDescription.concat(splitInput[i]);","lastModifiedDate":"2021-08-22"},{"lineNumber":112,"author":{"gitId":"dt-td"},"content":"                if (taskHasDate) {","lastModifiedDate":"2021-08-22"},{"lineNumber":113,"author":{"gitId":"dt-td"},"content":"                    taskDescription +\u003d \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":114,"author":{"gitId":"dt-td"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":115,"author":{"gitId":"dt-td"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":116,"author":{"gitId":"dt-td"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":117,"author":{"gitId":"dt-td"},"content":"        if (validTaskType(taskType)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":118,"author":{"gitId":"dt-td"},"content":"            if (taskDescription.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-18"},{"lineNumber":119,"author":{"gitId":"dt-td"},"content":"                throw new InvalidInputException(\"Invalid Task Description. The description of a task cannot be empty.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"dt-td"},"content":"            } else if (taskType.equals(\"todo\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":121,"author":{"gitId":"dt-td"},"content":"                task \u003d new ToDo(taskDescription);","lastModifiedDate":"2021-08-18"},{"lineNumber":122,"author":{"gitId":"dt-td"},"content":"                list.add(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":123,"author":{"gitId":"dt-td"},"content":"            } else if (taskType.equals(\"deadline\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":124,"author":{"gitId":"dt-td"},"content":"                if (!input.contains(\"by\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":125,"author":{"gitId":"dt-td"},"content":"                    throw new InvalidInputException(\"Invalid Deadline Task.\\n\" +","lastModifiedDate":"2021-08-22"},{"lineNumber":126,"author":{"gitId":"dt-td"},"content":"                            \"Please enter deadline task followed by /by and then the date/time it is due,\\n\" +","lastModifiedDate":"2021-08-22"},{"lineNumber":127,"author":{"gitId":"dt-td"},"content":"                            \"e.g. CS2103T Individual Project /by 2021-09-07 1159\");","lastModifiedDate":"2021-08-22"},{"lineNumber":128,"author":{"gitId":"dt-td"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":129,"author":{"gitId":"dt-td"},"content":"                task \u003d new Deadline(taskDescription);","lastModifiedDate":"2021-08-18"},{"lineNumber":130,"author":{"gitId":"dt-td"},"content":"                list.add(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":131,"author":{"gitId":"dt-td"},"content":"            } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":132,"author":{"gitId":"dt-td"},"content":"                if (!input.contains(\"at\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":133,"author":{"gitId":"dt-td"},"content":"                    throw new InvalidInputException(\"Invalid Event Task.\\n\" +","lastModifiedDate":"2021-08-22"},{"lineNumber":134,"author":{"gitId":"dt-td"},"content":"                            \"Please enter event task followed by /at and then the date it is due,\\n\" +","lastModifiedDate":"2021-08-22"},{"lineNumber":135,"author":{"gitId":"dt-td"},"content":"                            \"e.g. CS2103T Test /at 2021-11-23 1700\");","lastModifiedDate":"2021-08-22"},{"lineNumber":136,"author":{"gitId":"dt-td"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":137,"author":{"gitId":"dt-td"},"content":"                task \u003d new Event(taskDescription);","lastModifiedDate":"2021-08-18"},{"lineNumber":138,"author":{"gitId":"dt-td"},"content":"                list.add(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":139,"author":{"gitId":"dt-td"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":140,"author":{"gitId":"dt-td"},"content":"            numberOfTasks++;","lastModifiedDate":"2021-08-18"},{"lineNumber":141,"author":{"gitId":"dt-td"},"content":"            saveAsFile();","lastModifiedDate":"2021-08-22"},{"lineNumber":142,"author":{"gitId":"dt-td"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\\n\" + task);","lastModifiedDate":"2021-08-18"},{"lineNumber":143,"author":{"gitId":"dt-td"},"content":"            if (numberOfTasks \u003d\u003d 1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":144,"author":{"gitId":"dt-td"},"content":"                System.out.println(\"Now you have \" + numberOfTasks + \" task in the list\");","lastModifiedDate":"2021-08-18"},{"lineNumber":145,"author":{"gitId":"dt-td"},"content":"            } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":146,"author":{"gitId":"dt-td"},"content":"                System.out.println(\"Now you have \" + numberOfTasks + \" tasks in the list\");","lastModifiedDate":"2021-08-18"},{"lineNumber":147,"author":{"gitId":"dt-td"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":148,"author":{"gitId":"dt-td"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":149,"author":{"gitId":"dt-td"},"content":"            throw new InvalidInputException(\"Invalid Task. Please enter a valid task.\\n\" +","lastModifiedDate":"2021-08-22"},{"lineNumber":150,"author":{"gitId":"dt-td"},"content":"                    \"(Todo) todo CS2103T Readings\\n\" +","lastModifiedDate":"2021-08-22"},{"lineNumber":151,"author":{"gitId":"dt-td"},"content":"                    \"(Deadline) deadline CS2103T Individual Project /by Week 6\\n\" +","lastModifiedDate":"2021-08-22"},{"lineNumber":152,"author":{"gitId":"dt-td"},"content":"                    \"(Event) event CS2103T Test /at Friday 4-6pm\");","lastModifiedDate":"2021-08-22"},{"lineNumber":153,"author":{"gitId":"dt-td"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":154,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":155,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":156,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":157,"author":{"gitId":"dt-td"},"content":"     * Removes Task from list based on user input.","lastModifiedDate":"2021-08-22"},{"lineNumber":158,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":159,"author":{"gitId":"dt-td"},"content":"     * @param index list index of task.","lastModifiedDate":"2021-08-22"},{"lineNumber":160,"author":{"gitId":"dt-td"},"content":"     * @throws DukeException Exceptions when using bot.","lastModifiedDate":"2021-08-22"},{"lineNumber":161,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":162,"author":{"gitId":"dt-td"},"content":"    private static void removeTask(String index) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":163,"author":{"gitId":"dt-td"},"content":"        int taskIndex \u003d Integer.parseInt(index) - 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":164,"author":{"gitId":"dt-td"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e numberOfTasks - 1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":165,"author":{"gitId":"dt-td"},"content":"            throw new InvalidInputException(\"Invalid Task Index.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":166,"author":{"gitId":"dt-td"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":167,"author":{"gitId":"dt-td"},"content":"            Task task \u003d list.get(taskIndex);","lastModifiedDate":"2021-08-18"},{"lineNumber":168,"author":{"gitId":"dt-td"},"content":"            list.remove(taskIndex);","lastModifiedDate":"2021-08-18"},{"lineNumber":169,"author":{"gitId":"dt-td"},"content":"            numberOfTasks--;","lastModifiedDate":"2021-08-18"},{"lineNumber":170,"author":{"gitId":"dt-td"},"content":"            saveAsFile();","lastModifiedDate":"2021-08-22"},{"lineNumber":171,"author":{"gitId":"dt-td"},"content":"            System.out.println(\"Noted. I\u0027ve removed the following task:\\n\" + task +","lastModifiedDate":"2021-08-18"},{"lineNumber":172,"author":{"gitId":"dt-td"},"content":"                    \"\\nNow you have \" + numberOfTasks + \" tasks in the list.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":173,"author":{"gitId":"dt-td"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":174,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":175,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":176,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":177,"author":{"gitId":"dt-td"},"content":"     * Checks if task type of user input is valid.","lastModifiedDate":"2021-08-22"},{"lineNumber":178,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":179,"author":{"gitId":"dt-td"},"content":"     * @param input Task type of type String.","lastModifiedDate":"2021-08-22"},{"lineNumber":180,"author":{"gitId":"dt-td"},"content":"     * @return boolean to check if task type is valid.","lastModifiedDate":"2021-08-22"},{"lineNumber":181,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":182,"author":{"gitId":"dt-td"},"content":"    private static boolean validTaskType(String input) {","lastModifiedDate":"2021-08-22"},{"lineNumber":183,"author":{"gitId":"dt-td"},"content":"        return input.equals(\"todo\") || input.equals(\"deadline\") || input.equals(\"event\");","lastModifiedDate":"2021-08-22"},{"lineNumber":184,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":185,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":186,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":187,"author":{"gitId":"dt-td"},"content":"     * Saves the tasks list as a text file in user\u0027s current directory.","lastModifiedDate":"2021-08-22"},{"lineNumber":188,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":189,"author":{"gitId":"dt-td"},"content":"    private static void saveAsFile() {","lastModifiedDate":"2021-08-22"},{"lineNumber":190,"author":{"gitId":"dt-td"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":191,"author":{"gitId":"dt-td"},"content":"            String path \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-08-22"},{"lineNumber":192,"author":{"gitId":"dt-td"},"content":"            FileWriter myWriter \u003d new FileWriter(path + \"\\\\duke.txt\");","lastModifiedDate":"2021-08-22"},{"lineNumber":193,"author":{"gitId":"dt-td"},"content":"            myWriter.write(\"Tasks:\\n\");","lastModifiedDate":"2021-08-22"},{"lineNumber":194,"author":{"gitId":"dt-td"},"content":"            for (int i \u003d 0; i \u003c numberOfTasks; i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":195,"author":{"gitId":"dt-td"},"content":"                myWriter.write(list.get(i).toString() + \"\\n\");","lastModifiedDate":"2021-08-22"},{"lineNumber":196,"author":{"gitId":"dt-td"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":197,"author":{"gitId":"dt-td"},"content":"            myWriter.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":198,"author":{"gitId":"dt-td"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":199,"author":{"gitId":"dt-td"},"content":"            System.out.println(\"An error occurred when saving tasks list as text file.\" + e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":200,"author":{"gitId":"dt-td"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-22"},{"lineNumber":201,"author":{"gitId":"dt-td"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":202,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":203,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":204,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":205,"author":{"gitId":"dt-td"},"content":"     * Returns boolean after checking for valid input date in this format: YYYY-MM-DD.","lastModifiedDate":"2021-08-22"},{"lineNumber":206,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":207,"author":{"gitId":"dt-td"},"content":"     * @param input User input date string","lastModifiedDate":"2021-08-22"},{"lineNumber":208,"author":{"gitId":"dt-td"},"content":"     * @return boolean to check for valid user input date string.","lastModifiedDate":"2021-08-22"},{"lineNumber":209,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":210,"author":{"gitId":"dt-td"},"content":"    private static boolean validDate(String input) {","lastModifiedDate":"2021-08-22"},{"lineNumber":211,"author":{"gitId":"dt-td"},"content":"        if (input.length() \u003d\u003d 10) {","lastModifiedDate":"2021-08-22"},{"lineNumber":212,"author":{"gitId":"dt-td"},"content":"            return input.charAt(4) \u003d\u003d input.charAt(7);","lastModifiedDate":"2021-08-22"},{"lineNumber":213,"author":{"gitId":"dt-td"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":214,"author":{"gitId":"dt-td"},"content":"            return false;","lastModifiedDate":"2021-08-22"},{"lineNumber":215,"author":{"gitId":"dt-td"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":216,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":217,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":218,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":219,"author":{"gitId":"dt-td"},"content":"     * Parse user input date string.","lastModifiedDate":"2021-08-22"},{"lineNumber":220,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":221,"author":{"gitId":"dt-td"},"content":"     * @return String of formatted user input date.","lastModifiedDate":"2021-08-22"},{"lineNumber":222,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":223,"author":{"gitId":"dt-td"},"content":"    private static String parseDate(String input) {","lastModifiedDate":"2021-08-22"},{"lineNumber":224,"author":{"gitId":"dt-td"},"content":"        LocalDate date \u003d LocalDate.parse(input);","lastModifiedDate":"2021-08-22"},{"lineNumber":225,"author":{"gitId":"dt-td"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":226,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":227,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":228,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":229,"author":{"gitId":"dt-td"},"content":"     * Prints double line border.","lastModifiedDate":"2021-08-22"},{"lineNumber":230,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":231,"author":{"gitId":"dt-td"},"content":"    private static void printDoubleLineBorder() {","lastModifiedDate":"2021-08-18"},{"lineNumber":232,"author":{"gitId":"dt-td"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-08-18"},{"lineNumber":233,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":234,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":235,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":236,"author":{"gitId":"dt-td"},"content":"     * Prints single line border.","lastModifiedDate":"2021-08-22"},{"lineNumber":237,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":238,"author":{"gitId":"dt-td"},"content":"    private static void printSingleLineBorder() {","lastModifiedDate":"2021-08-18"},{"lineNumber":239,"author":{"gitId":"dt-td"},"content":"        System.out.println(\"--------------------------------------------------\");","lastModifiedDate":"2021-08-18"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"dt-td":237,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dt-td"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"dt-td"},"content":" * Encapsulates the exceptions thrown by the Duke bot.","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"dt-td"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"dt-td"},"content":" * @author Dickson","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"dt-td"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"dt-td"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"dt-td"},"content":"     * Constructor for DukeException.","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"dt-td"},"content":"     * @param message","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"dt-td"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"dt-td"},"content":"        super(message);","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"dt-td"},"content":"     * Gets string message of thrown DukeException.","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"dt-td"},"content":"     * @return String representation of thrown DukeException.","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"dt-td"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"dt-td"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"dt-td"},"content":"        return \"☹ OOPS!!! \" + super.getMessage();","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"dt-td"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"dt-td":25}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dt-td"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"dt-td"},"content":" * Encapsulates an event object.","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"dt-td"},"content":" * Event objects are task objects that start and end at specific times.","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"dt-td"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"dt-td"},"content":" * @author Dickson","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"dt-td"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"dt-td"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"dt-td"},"content":"     * Constructor for Event object.","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"dt-td"},"content":"     * @param description","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"dt-td"},"content":"    public Event(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"dt-td"},"content":"        super(description);","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"dt-td"},"content":"     * Gets string representation of event task.","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"dt-td"},"content":"     * @return String representation of event task.","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"dt-td"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"dt-td"},"content":"    public String toString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"dt-td"},"content":"        return \"[E]\" + super.toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"dt-td"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"dt-td":26}},{"path":"src/main/java/InvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dt-td"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"dt-td"},"content":" * Encapsulates the InvalidDateException which is a DukeException thrown by the Duke bot.","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"dt-td"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"dt-td"},"content":" * @author Dickson","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"dt-td"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"dt-td"},"content":"public class InvalidDateException extends DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"dt-td"},"content":"     * Constructor for InvalidInputException.","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"dt-td"},"content":"     * @param message message to show user for InvalidDataException.","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"dt-td"},"content":"    public InvalidDateException(String message) {","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"dt-td"},"content":"        super(message);","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"dt-td"},"content":"     * Gets string message of thrown InvalidDataException.","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"dt-td"},"content":"     * @return String representation of thrown DukeException.","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"dt-td"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"dt-td"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"dt-td"},"content":"        return super.getMessage();","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"dt-td"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"dt-td":25}},{"path":"src/main/java/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dt-td"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"dt-td"},"content":" * Encapsulates the InvalidInputException which is a DukeException thrown by the Duke bot.","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"dt-td"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"dt-td"},"content":" * @author Dickson","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"dt-td"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"dt-td"},"content":"public class InvalidInputException extends DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"dt-td"},"content":"     * Constructor for InvalidInputException.","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"dt-td"},"content":"     * @param message message to show user for InvalidInputException.","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"dt-td"},"content":"    public InvalidInputException(String message) {","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"dt-td"},"content":"        super(message);","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"dt-td"},"content":"     * Gets string message of thrown InvalidInputException.","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"dt-td"},"content":"     * @return String representation of thrown DukeException.","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"dt-td"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"dt-td"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"dt-td"},"content":"        return super.getMessage();","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"dt-td"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"dt-td":25}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dt-td"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"dt-td"},"content":" * Encapsulates a task object.","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"dt-td"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"dt-td"},"content":" * @author Dickson","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"dt-td"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"dt-td"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"dt-td"},"content":"    private String description;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"dt-td"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"dt-td"},"content":"     * Constructor for Task object.","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"dt-td"},"content":"     * @param description","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"dt-td"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"dt-td"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"dt-td"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"dt-td"},"content":"    public void markDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"dt-td"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"dt-td"},"content":"     * @return String representation of a task.","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"dt-td"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"dt-td"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"dt-td"},"content":"        String done \u003d this.isDone ? \"X\" : \" \";","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"dt-td"},"content":"        return \"[\" + done + \"] \" + this.description;","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"dt-td"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"dt-td":33}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dt-td"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"dt-td"},"content":" * Encapsulates a todo object.","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"dt-td"},"content":" * Todo objects are tasks objects without any date/time.","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"dt-td"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"dt-td"},"content":" * @author Dickson","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"dt-td"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"dt-td"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"dt-td"},"content":"     * Constructor for Todo object.","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"dt-td"},"content":"     * @param description","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"dt-td"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"dt-td"},"content":"        super(description);","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"dt-td"},"content":"     * Gets string representation of todo task.","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"dt-td"},"content":"     * @return String representation of todo task.","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"dt-td"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"dt-td"},"content":"    public String toString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"dt-td"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"dt-td"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"dt-td":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dt-td"},"content":"todo Complete CS2100 Week 2 Individual Project","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"dt-td"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"dt-td"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"dt-td"},"content":"deadline CS2100 Individual Project /by Week 6","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"dt-td"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"dt-td"},"content":"event Winter break /at Home","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"dt-td"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"dt-td"},"content":"todo Rest for the day","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"dt-td"},"content":"done 4","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"dt-td"},"content":"list","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"dt-td":10}}]
