[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"dt-td"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"dt-td"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"dt-td"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"dt-td"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"dt-td"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"dt-td"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"dt-td"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"dt-td"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"dt-td"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"dt-td"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"dt-td"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"dt-td"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"dt-td"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"dt-td"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"dt-td":16,"-":45}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dt-td"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"dt-td"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"dt-td"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"dt-td"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"dt-td"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"dt-td"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"dt-td"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"dt-td"},"content":" * Encapsulates the Duke bot that has the ability to create, read, update and delete tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"dt-td"},"content":" * such as todo, deadline and event tasks based on user input.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"dt-td"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"dt-td"},"content":"public class Duke  {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"dt-td"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"dt-td"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"dt-td"},"content":"     * Constructor for Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"dt-td"},"content":"     * @param filePath user filepath to store text file.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"dt-td"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"dt-td"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"dt-td"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"dt-td"},"content":"            tasks \u003d new TaskList(storage.loadFile());","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"dt-td"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"dt-td"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"dt-td"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"dt-td"},"content":"     * Parse user input command to return message for user and save text file.","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"dt-td"},"content":"     * @param command user input command","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"dt-td"},"content":"     * @return message for user","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"dt-td"},"content":"    public String getResponse(String command) {","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"dt-td"},"content":"        String message \u003d \"Duke:\\n\";","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"dt-td"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"dt-td"},"content":"            message \u003d message.concat(Parser.parse(command).execute(tasks));","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"dt-td"},"content":"            storage.saveFile(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"dt-td"},"content":"            return message;","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"dt-td"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"dt-td"},"content":"            message \u003d message.concat(e.getMessage());","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"dt-td"},"content":"            return message;","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"dt-td"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"dt-td"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"dt-td":50}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dt-td"},"content":"package duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"dt-td"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"dt-td"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"dt-td"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"dt-td"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"dt-td"},"content":"public class Launcher {","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"dt-td"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"dt-td"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"dt-td"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"dt-td":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dt-td"},"content":"package duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"dt-td"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"dt-td"},"content":"import duke.gui.MainWindow;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"dt-td"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"dt-td"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"dt-td"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"dt-td"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"dt-td"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"dt-td"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"dt-td"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"dt-td"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"dt-td"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"dt-td"},"content":"    private final Duke duke \u003d new Duke(\"\\\\duke.txt\");","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"dt-td"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"dt-td"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"dt-td"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"dt-td"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"dt-td"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"dt-td"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"dt-td"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"dt-td"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"dt-td"},"content":"            stage.show();","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"dt-td"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"dt-td"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"dt-td"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"dt-td"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"dt-td":32}},{"path":"src/main/java/duke/exceptions/CorruptedFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dt-td"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"dt-td"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"dt-td"},"content":" * Encapsulates the CorruptedFileException thrown by the Duke bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"dt-td"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"dt-td"},"content":"public class CorruptedFileException extends DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"dt-td"},"content":"     * Constructor for CorruptedFileException.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"dt-td"},"content":"    public CorruptedFileException() {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"dt-td"},"content":"        super(\"Sorry! Your duke.txt file is corrupted and cannot be loaded!\");","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"dt-td"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"dt-td":14}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dt-td"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"dt-td"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"dt-td"},"content":" * Encapsulates the exceptions thrown by the Duke bot.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"dt-td"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"dt-td"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"dt-td"},"content":"     * Constructor for DukeException.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"dt-td"},"content":"     * @param message message to be shown when DukeException is thrown.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"dt-td"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"dt-td"},"content":"        super(message);","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"dt-td"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"dt-td":15}},{"path":"src/main/java/duke/exceptions/EmptyListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dt-td"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"dt-td"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"dt-td"},"content":" * Encapsulates the EmptyListException thrown by the Duke bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"dt-td"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"dt-td"},"content":"public class EmptyListException extends DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"dt-td"},"content":"     * Constructor for EmptyListException.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"dt-td"},"content":"    public EmptyListException() {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"dt-td"},"content":"        super(\"Sorry! Your list is empty!\");","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"dt-td"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"dt-td":13}},{"path":"src/main/java/duke/exceptions/IllegalFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dt-td"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"dt-td"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"dt-td"},"content":" * Encapsulates the IllegalFormatException thrown by the Duke bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"dt-td"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"dt-td"},"content":"public class IllegalFormatException extends DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"dt-td"},"content":"     * Constructor for IllegalFormatException.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"dt-td"},"content":"     * @param format correct format for user to follow.","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"dt-td"},"content":"    public IllegalFormatException(String format) {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"dt-td"},"content":"        super(\"Sorry! Please follow the following input format:\\n\" + format);","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"dt-td"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"dt-td":15}},{"path":"src/main/java/duke/exceptions/TaskNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dt-td"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"dt-td"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"dt-td"},"content":" * Encapsulates the TaskNotFoundException thrown by the Duke bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"dt-td"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"dt-td"},"content":"public class TaskNotFoundException extends DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"dt-td"},"content":"     * Constructor for TaskNotFoundException.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"dt-td"},"content":"    public TaskNotFoundException() {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"dt-td"},"content":"        super(\"Sorry! There is no such task with this task index!\");","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"dt-td"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"dt-td":13}},{"path":"src/main/java/duke/exceptions/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dt-td"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"dt-td"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"dt-td"},"content":" * Encapsulates the UnknownCommandException thrown by the Duke bot.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"dt-td"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"dt-td"},"content":"public class UnknownCommandException extends DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"dt-td"},"content":"     * Constructor for UnknownInputException.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"dt-td"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"dt-td"},"content":"        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means.\");","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"dt-td"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"dt-td":13}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dt-td"},"content":"package duke.gui;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"dt-td"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"dt-td"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"dt-td"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"dt-td"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"dt-td"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"dt-td"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"dt-td"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"dt-td"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"dt-td"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"dt-td"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"dt-td"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"dt-td"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"dt-td"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"dt-td"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"dt-td"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"dt-td"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"dt-td"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"dt-td"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"dt-td"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"dt-td"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"dt-td"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"dt-td"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"dt-td"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"dt-td"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"dt-td"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"dt-td"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"dt-td"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"dt-td"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"dt-td"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"dt-td"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"dt-td"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"dt-td"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"dt-td"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"dt-td"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"dt-td"},"content":"    private void flip() {","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"dt-td"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"dt-td"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"dt-td"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"dt-td"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"dt-td"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"dt-td"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"dt-td"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"dt-td"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"dt-td"},"content":"        db.flip();","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"dt-td"},"content":"        return db;","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"dt-td"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"dt-td":61}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dt-td"},"content":"package duke.gui;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"dt-td"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"dt-td"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"dt-td"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"dt-td"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"dt-td"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"dt-td"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"dt-td"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"dt-td"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"dt-td"},"content":" * Controller for duke.gui.MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"dt-td"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"dt-td"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"dt-td"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"dt-td"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"dt-td"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"dt-td"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"dt-td"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"dt-td"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"dt-td"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"dt-td"},"content":"    private final String startMessage \u003d \"Hi there! How may I help you?\";","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"dt-td"},"content":"    private final String endMessage \u003d \"Bye. Hope to see you again!\";","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"dt-td"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"dt-td"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"dt-td"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"dt-td"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"dt-td"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"dt-td"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"dt-td"},"content":"        duke \u003d d;","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"dt-td"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"dt-td"},"content":"                DialogBox.getDukeDialog(startMessage, dukeImage)","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"dt-td"},"content":"        );","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"dt-td"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"dt-td"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"dt-td"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"dt-td"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"dt-td"},"content":"        String response;","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"dt-td"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"dt-td"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"dt-td"},"content":"            response \u003d endMessage;","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"dt-td"},"content":"        } else {","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"dt-td"},"content":"            response \u003d duke.getResponse(input);","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"dt-td"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"dt-td"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"dt-td"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"dt-td"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"dt-td"},"content":"        );","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"dt-td"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"dt-td"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"dt-td":61}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dt-td"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"dt-td"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"dt-td"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"dt-td"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"dt-td"},"content":" * Encapsulates a deadline task.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"dt-td"},"content":" * Deadline tasks are tasks that needs to be done by a specific date/time.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"dt-td"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"dt-td"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"dt-td"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"dt-td"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"dt-td"},"content":"     * @param description description of deadline task","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"dt-td"},"content":"     * @param dateTime date and time deadline task is due","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"dt-td"},"content":"    public Deadline(String description, LocalDateTime dateTime) {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"dt-td"},"content":"        super(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"dt-td"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"dt-td"},"content":"     * Gets string representation of deadline task.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"dt-td"},"content":"     * @return String representation of deadline task.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"dt-td"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"dt-td"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"dt-td"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy h:mma\");","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"dt-td"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"dt-td"},"content":"                + dateTime.format(dateTimeFormatter) + \")\";","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"dt-td"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"dt-td":35}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dt-td"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"dt-td"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"dt-td"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"dt-td"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"dt-td"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"dt-td"},"content":" * Encapsulates an event task.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"dt-td"},"content":" * Event tasks are tasks that needs to be done on a specific date","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"dt-td"},"content":" * from a starting time to an ending time.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"dt-td"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"dt-td"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"dt-td"},"content":"    private final LocalDate date;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"dt-td"},"content":"    private final LocalTime startTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"dt-td"},"content":"    private final LocalTime endTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"dt-td"},"content":"     * Constructor for Event.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"dt-td"},"content":"     * @param description description of event task","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"dt-td"},"content":"     * @param date date of event task","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"dt-td"},"content":"     * @param startTime start time of event task","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"dt-td"},"content":"     * @param endTime end time of event task","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"dt-td"},"content":"    public Event(String description, LocalDate date, LocalTime startTime, LocalTime endTime) {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"dt-td"},"content":"        super(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"dt-td"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"dt-td"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"dt-td"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"dt-td"},"content":"     * Gets string representation of event task.","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"dt-td"},"content":"     * @return String representation of event task.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"dt-td"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"dt-td"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"dt-td"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"dt-td"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"h:mma\");","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"dt-td"},"content":"        return \"[E]\" + super.toString() + \" (at: \"","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"dt-td"},"content":"                + date.format(dateFormatter) + \" \"","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"dt-td"},"content":"                + startTime.format(timeFormatter) + \"-\"","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"dt-td"},"content":"                + endTime.format(timeFormatter) + \")\";","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"dt-td"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"dt-td":46}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dt-td"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"dt-td"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"dt-td"},"content":" * Encapsulates a task object.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"dt-td"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"dt-td"},"content":"public class Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"dt-td"},"content":"    private final String description;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"dt-td"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"dt-td"},"content":"     * Constructor for Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"dt-td"},"content":"     * @param description description of task task.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"dt-td"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"dt-td"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"dt-td"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"dt-td"},"content":"     * Marks task as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"dt-td"},"content":"    public void markDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"dt-td"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"dt-td"},"content":"     * Gets string representation of task object.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"dt-td"},"content":"     * @return String representation of a task.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"dt-td"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"dt-td"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"dt-td"},"content":"        String done \u003d this.isDone ? \"X\" : \" \";","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"dt-td"},"content":"        return \"[\" + done + \"] \" + this.description;","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"dt-td"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"dt-td":37}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dt-td"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"dt-td"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"dt-td"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"dt-td"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"dt-td"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"dt-td"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"dt-td"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"dt-td"},"content":"import java.util.List;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"dt-td"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"dt-td"},"content":"import duke.exceptions.EmptyListException;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"dt-td"},"content":"import duke.exceptions.IllegalFormatException;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"dt-td"},"content":"import duke.exceptions.TaskNotFoundException;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"dt-td"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"dt-td"},"content":" * Encapsulates a TaskList containing tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"dt-td"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"dt-td"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"dt-td"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"dt-td"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"dt-td"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"dt-td"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"dt-td"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"dt-td"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"dt-td"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"dt-td"},"content":"     * Checks user command format.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"dt-td"},"content":"     * @param command user input command","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"dt-td"},"content":"     * @param regex command format to match","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"dt-td"},"content":"     * @param correctFormat command format to follow","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"dt-td"},"content":"     * @throws IllegalFormatException if user gives invalid command","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"dt-td"},"content":"    private void checkCommandFormat(String command, String regex, String correctFormat)","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"dt-td"},"content":"            throws IllegalFormatException {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"dt-td"},"content":"        if (!command.matches(regex)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"dt-td"},"content":"            throw new IllegalFormatException(correctFormat);","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"dt-td"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"dt-td"},"content":"     * Adds a todo task to TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"dt-td"},"content":"     * @param command user input command","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"dt-td"},"content":"     * @return message for successful addition of todo task","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"dt-td"},"content":"     * @throws IllegalFormatException if user gives invalid command","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"dt-td"},"content":"    public String addTodo(String command) throws IllegalFormatException {","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"dt-td"},"content":"        String regexToMatch \u003d \"^todo .*\";","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"dt-td"},"content":"        String correctFormat \u003d \"todo \u003ctodo description\u003e\";","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"dt-td"},"content":"        checkCommandFormat(command, regexToMatch, correctFormat);","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"dt-td"},"content":"        Task task \u003d new ToDo(command.substring(5).trim());","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"dt-td"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"dt-td"},"content":"        return addMessage(task, tasks.size());","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"dt-td"},"content":"     * Adds an event task to TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"dt-td"},"content":"     * @param command user input command","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"dt-td"},"content":"     * @return message for successful addition of event task","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"dt-td"},"content":"     * @throws IllegalFormatException if user gives invalid command","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"dt-td"},"content":"    public String addEvent(String command) throws IllegalFormatException {","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"dt-td"},"content":"        String regexToMatch \u003d \"^event .* /at \\\\d{2}/\\\\d{2}/\\\\d{2} \\\\d{4}-\\\\d{4}\";","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"dt-td"},"content":"        String correctFormat \u003d \"event \u003cevent description\u003e /at \u003cdd/MM/yy\u003e \u003cHHmm\u003e-\u003cHHmm\u003e\";","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"dt-td"},"content":"        checkCommandFormat(command, regexToMatch, correctFormat);","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"dt-td"},"content":"        String[] eventInfo \u003d command.substring(6).split(\"/at \");","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"dt-td"},"content":"        String eventDescription \u003d eventInfo[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"dt-td"},"content":"        String dateString \u003d eventInfo[1].substring(0, 8);","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"dt-td"},"content":"        String startTimeString \u003d eventInfo[1].substring(9, 13);","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"dt-td"},"content":"        String endTimeString \u003d eventInfo[1].substring(14, 18);","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"dt-td"},"content":"        LocalDate date;","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"dt-td"},"content":"        LocalTime startTime;","lastModifiedDate":"2021-08-28"},{"lineNumber":90,"author":{"gitId":"dt-td"},"content":"        LocalTime endTime;","lastModifiedDate":"2021-08-28"},{"lineNumber":91,"author":{"gitId":"dt-td"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yy\");","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"dt-td"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"dt-td"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"dt-td"},"content":"            date \u003d LocalDate.parse(dateString, dateFormatter);","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"dt-td"},"content":"            startTime \u003d LocalTime.parse(startTimeString, timeFormatter);","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"dt-td"},"content":"            endTime \u003d LocalTime.parse(endTimeString, timeFormatter);","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"dt-td"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"dt-td"},"content":"            throw new IllegalFormatException(correctFormat);","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"dt-td"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"dt-td"},"content":"        if (startTime.isAfter(endTime)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"dt-td"},"content":"            throw new IllegalFormatException(correctFormat);","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"dt-td"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"dt-td"},"content":"        Task task \u003d new Event(eventDescription, date, startTime, endTime);","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"dt-td"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"dt-td"},"content":"        return addMessage(task, tasks.size());","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"dt-td"},"content":"     * Adds a deadline task to TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"dt-td"},"content":"     * @param command user input command","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"dt-td"},"content":"     * @return message for successful addition of deadline task","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"dt-td"},"content":"     * @throws IllegalFormatException if user gives invalid command","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"dt-td"},"content":"    public String addDeadline(String command) throws IllegalFormatException {","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"dt-td"},"content":"        String regexToMatch \u003d \"^deadline .* /by \\\\d{2}/\\\\d{2}/\\\\d{2} \\\\d{4}\";","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"dt-td"},"content":"        String correctFormat \u003d \"deadline \u003cdeadline description\u003e /by \u003cdd/MM/yy\u003e \u003cHHmm\u003e\";","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"dt-td"},"content":"        checkCommandFormat(command, regexToMatch, correctFormat);","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"dt-td"},"content":"        String[] eventInfo \u003d command.substring(9).split(\"/by \");","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"dt-td"},"content":"        String eventDescription \u003d eventInfo[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"dt-td"},"content":"        String dateTimeString \u003d eventInfo[1].trim();","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"dt-td"},"content":"        LocalDateTime dateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"dt-td"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yy HHmm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"dt-td"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"dt-td"},"content":"            dateTime \u003d LocalDateTime.parse(dateTimeString, dateTimeFormatter);","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"dt-td"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"dt-td"},"content":"            throw new IllegalFormatException(correctFormat);","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"dt-td"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"dt-td"},"content":"        Task task \u003d new Deadline(eventDescription, dateTime);","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"dt-td"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"dt-td"},"content":"        return addMessage(task, tasks.size());","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":144,"author":{"gitId":"dt-td"},"content":"     * Marks task in TaskList as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":145,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":146,"author":{"gitId":"dt-td"},"content":"     * @param command user input command","lastModifiedDate":"2021-08-25"},{"lineNumber":147,"author":{"gitId":"dt-td"},"content":"     * @return message for successful marking of task as done","lastModifiedDate":"2021-08-25"},{"lineNumber":148,"author":{"gitId":"dt-td"},"content":"     * @throws TaskNotFoundException if user inputs invalid task index","lastModifiedDate":"2021-08-25"},{"lineNumber":149,"author":{"gitId":"dt-td"},"content":"     * @throws IllegalFormatException if user gives invalid command","lastModifiedDate":"2021-08-25"},{"lineNumber":150,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":151,"author":{"gitId":"dt-td"},"content":"    public String markTaskDone(String command) throws TaskNotFoundException, IllegalFormatException {","lastModifiedDate":"2021-08-24"},{"lineNumber":152,"author":{"gitId":"dt-td"},"content":"        String regexToMatch \u003d \"^done [0-9].*\";","lastModifiedDate":"2021-08-24"},{"lineNumber":153,"author":{"gitId":"dt-td"},"content":"        String correctFormat \u003d \"done \u003ctask index\u003e\";","lastModifiedDate":"2021-08-24"},{"lineNumber":154,"author":{"gitId":"dt-td"},"content":"        checkCommandFormat(command, regexToMatch, correctFormat);","lastModifiedDate":"2021-08-24"},{"lineNumber":155,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":156,"author":{"gitId":"dt-td"},"content":"        int taskIndex;","lastModifiedDate":"2021-08-24"},{"lineNumber":157,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":158,"author":{"gitId":"dt-td"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":159,"author":{"gitId":"dt-td"},"content":"            taskIndex \u003d Integer.parseInt(command.substring(5)) - 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":160,"author":{"gitId":"dt-td"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":161,"author":{"gitId":"dt-td"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2021-08-24"},{"lineNumber":162,"author":{"gitId":"dt-td"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":163,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":164,"author":{"gitId":"dt-td"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":165,"author":{"gitId":"dt-td"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2021-08-24"},{"lineNumber":166,"author":{"gitId":"dt-td"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":167,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":168,"author":{"gitId":"dt-td"},"content":"        Task task \u003d tasks.get(taskIndex);","lastModifiedDate":"2021-08-24"},{"lineNumber":169,"author":{"gitId":"dt-td"},"content":"        task.markDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":170,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":171,"author":{"gitId":"dt-td"},"content":"        return doneMessage(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":172,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":173,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":174,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":175,"author":{"gitId":"dt-td"},"content":"     * Deletes a task from TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":176,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":177,"author":{"gitId":"dt-td"},"content":"     * @param command user input command","lastModifiedDate":"2021-08-25"},{"lineNumber":178,"author":{"gitId":"dt-td"},"content":"     * @return message for successful deletion of task","lastModifiedDate":"2021-08-25"},{"lineNumber":179,"author":{"gitId":"dt-td"},"content":"     * @throws TaskNotFoundException if user inputs invalid task index","lastModifiedDate":"2021-08-25"},{"lineNumber":180,"author":{"gitId":"dt-td"},"content":"     * @throws IllegalFormatException if user gives invalid command","lastModifiedDate":"2021-08-25"},{"lineNumber":181,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":182,"author":{"gitId":"dt-td"},"content":"    public String deleteTask(String command) throws TaskNotFoundException, IllegalFormatException {","lastModifiedDate":"2021-08-24"},{"lineNumber":183,"author":{"gitId":"dt-td"},"content":"        String regexToMatch \u003d \"^delete [0-9].*\";","lastModifiedDate":"2021-08-24"},{"lineNumber":184,"author":{"gitId":"dt-td"},"content":"        String correctFormat \u003d \"delete \u003ctask index\u003e\";","lastModifiedDate":"2021-08-24"},{"lineNumber":185,"author":{"gitId":"dt-td"},"content":"        checkCommandFormat(command, regexToMatch, correctFormat);","lastModifiedDate":"2021-08-24"},{"lineNumber":186,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":187,"author":{"gitId":"dt-td"},"content":"        int taskIndex;","lastModifiedDate":"2021-08-24"},{"lineNumber":188,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":189,"author":{"gitId":"dt-td"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":190,"author":{"gitId":"dt-td"},"content":"            taskIndex \u003d Integer.parseInt(command.substring(7)) - 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":191,"author":{"gitId":"dt-td"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":192,"author":{"gitId":"dt-td"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2021-08-24"},{"lineNumber":193,"author":{"gitId":"dt-td"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":194,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":195,"author":{"gitId":"dt-td"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":196,"author":{"gitId":"dt-td"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2021-08-24"},{"lineNumber":197,"author":{"gitId":"dt-td"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":198,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":199,"author":{"gitId":"dt-td"},"content":"        Task task \u003d tasks.remove(taskIndex);","lastModifiedDate":"2021-08-24"},{"lineNumber":200,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":201,"author":{"gitId":"dt-td"},"content":"        int size \u003d tasks.size();","lastModifiedDate":"2021-08-24"},{"lineNumber":202,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":203,"author":{"gitId":"dt-td"},"content":"        return deleteMessage(task, size);","lastModifiedDate":"2021-08-24"},{"lineNumber":204,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":205,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":206,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":207,"author":{"gitId":"dt-td"},"content":"     * Find and return tasks matching user keyword input.","lastModifiedDate":"2021-08-28"},{"lineNumber":208,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":209,"author":{"gitId":"dt-td"},"content":"     * @param command user input command","lastModifiedDate":"2021-08-28"},{"lineNumber":210,"author":{"gitId":"dt-td"},"content":"     * @return string representation of filtered TaskList stored","lastModifiedDate":"2021-08-28"},{"lineNumber":211,"author":{"gitId":"dt-td"},"content":"     * @throws IllegalFormatException if user gives invalid command","lastModifiedDate":"2021-08-28"},{"lineNumber":212,"author":{"gitId":"dt-td"},"content":"     * @throws EmptyListException if the TaskList is empty","lastModifiedDate":"2021-08-28"},{"lineNumber":213,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":214,"author":{"gitId":"dt-td"},"content":"    public String findFromList(String command) throws IllegalFormatException, EmptyListException {","lastModifiedDate":"2021-08-25"},{"lineNumber":215,"author":{"gitId":"dt-td"},"content":"        String regexToMatch \u003d \"^find .*\";","lastModifiedDate":"2021-08-25"},{"lineNumber":216,"author":{"gitId":"dt-td"},"content":"        String correctFormat \u003d \"find \u003ckeyword to find\u003e\";","lastModifiedDate":"2021-08-25"},{"lineNumber":217,"author":{"gitId":"dt-td"},"content":"        checkCommandFormat(command, regexToMatch, correctFormat);","lastModifiedDate":"2021-08-25"},{"lineNumber":218,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":219,"author":{"gitId":"dt-td"},"content":"        String keyword \u003d command.substring(5).trim();","lastModifiedDate":"2021-08-25"},{"lineNumber":220,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":221,"author":{"gitId":"dt-td"},"content":"        List\u003cTask\u003e filteredTaskList \u003d tasks.stream()","lastModifiedDate":"2021-08-28"},{"lineNumber":222,"author":{"gitId":"dt-td"},"content":"                                           .filter(str -\u003e str.toString().contains(keyword))","lastModifiedDate":"2021-08-25"},{"lineNumber":223,"author":{"gitId":"dt-td"},"content":"                                           .collect(Collectors.toList());","lastModifiedDate":"2021-08-25"},{"lineNumber":224,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":225,"author":{"gitId":"dt-td"},"content":"        return printTaskList(filteredTaskList);","lastModifiedDate":"2021-08-28"},{"lineNumber":226,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":227,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":228,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":229,"author":{"gitId":"dt-td"},"content":"     * Prints the full TaskList stored.","lastModifiedDate":"2021-08-25"},{"lineNumber":230,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":231,"author":{"gitId":"dt-td"},"content":"     * @return string representation of full TaskList stored","lastModifiedDate":"2021-08-25"},{"lineNumber":232,"author":{"gitId":"dt-td"},"content":"     * @throws EmptyListException if the TaskList is empty","lastModifiedDate":"2021-08-25"},{"lineNumber":233,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":234,"author":{"gitId":"dt-td"},"content":"    public String printFullTaskList() throws EmptyListException {","lastModifiedDate":"2021-08-25"},{"lineNumber":235,"author":{"gitId":"dt-td"},"content":"        return printTaskList(tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":236,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":237,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":238,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":239,"author":{"gitId":"dt-td"},"content":"     * Prints the TaskList stored so far.","lastModifiedDate":"2021-08-25"},{"lineNumber":240,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":241,"author":{"gitId":"dt-td"},"content":"     * @return string representation of TaskList","lastModifiedDate":"2021-08-25"},{"lineNumber":242,"author":{"gitId":"dt-td"},"content":"     * @throws EmptyListException if TaskList is empty","lastModifiedDate":"2021-08-25"},{"lineNumber":243,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":244,"author":{"gitId":"dt-td"},"content":"    public String printTaskList(List\u003cTask\u003e tasks) throws EmptyListException {","lastModifiedDate":"2021-08-25"},{"lineNumber":245,"author":{"gitId":"dt-td"},"content":"        String s;","lastModifiedDate":"2021-08-30"},{"lineNumber":246,"author":{"gitId":"dt-td"},"content":"        int size \u003d tasks.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":247,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":248,"author":{"gitId":"dt-td"},"content":"        if (size \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":249,"author":{"gitId":"dt-td"},"content":"            throw new EmptyListException();","lastModifiedDate":"2021-08-25"},{"lineNumber":250,"author":{"gitId":"dt-td"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":251,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":252,"author":{"gitId":"dt-td"},"content":"        s \u003d tasks.toString();","lastModifiedDate":"2021-08-30"},{"lineNumber":253,"author":{"gitId":"dt-td"},"content":"        return s;","lastModifiedDate":"2021-08-28"},{"lineNumber":254,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":255,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":256,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":257,"author":{"gitId":"dt-td"},"content":"     * Generates message for successful addition of task.","lastModifiedDate":"2021-08-25"},{"lineNumber":258,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":259,"author":{"gitId":"dt-td"},"content":"     * @param task task added to TaskList","lastModifiedDate":"2021-08-25"},{"lineNumber":260,"author":{"gitId":"dt-td"},"content":"     * @param size size of TaskList after addition","lastModifiedDate":"2021-08-25"},{"lineNumber":261,"author":{"gitId":"dt-td"},"content":"     * @return message for successful addition of task","lastModifiedDate":"2021-08-25"},{"lineNumber":262,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":263,"author":{"gitId":"dt-td"},"content":"    private String addMessage(Task task, int size) {","lastModifiedDate":"2021-08-24"},{"lineNumber":264,"author":{"gitId":"dt-td"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + task","lastModifiedDate":"2021-08-28"},{"lineNumber":265,"author":{"gitId":"dt-td"},"content":"                + \"\\nNow you have \" + size","lastModifiedDate":"2021-08-28"},{"lineNumber":266,"author":{"gitId":"dt-td"},"content":"                + (size \u003c\u003d 1","lastModifiedDate":"2021-08-28"},{"lineNumber":267,"author":{"gitId":"dt-td"},"content":"                  ? \" task \"","lastModifiedDate":"2021-08-24"},{"lineNumber":268,"author":{"gitId":"dt-td"},"content":"                  : \" tasks \" + \"in your list.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":269,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":270,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":271,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":272,"author":{"gitId":"dt-td"},"content":"     * Generates message for successful deletion of task.","lastModifiedDate":"2021-08-25"},{"lineNumber":273,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":274,"author":{"gitId":"dt-td"},"content":"     * @param task task deleted from TaskList","lastModifiedDate":"2021-08-25"},{"lineNumber":275,"author":{"gitId":"dt-td"},"content":"     * @param size size of TaskList after deletion","lastModifiedDate":"2021-08-25"},{"lineNumber":276,"author":{"gitId":"dt-td"},"content":"     * @return message for successful deletion of task","lastModifiedDate":"2021-08-25"},{"lineNumber":277,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":278,"author":{"gitId":"dt-td"},"content":"    private String deleteMessage(Task task, int size) {","lastModifiedDate":"2021-08-24"},{"lineNumber":279,"author":{"gitId":"dt-td"},"content":"        return \"Noted. I\u0027ve removed the following task:\\n\" + task","lastModifiedDate":"2021-08-28"},{"lineNumber":280,"author":{"gitId":"dt-td"},"content":"                + \"\\nNow you have \" + size","lastModifiedDate":"2021-08-28"},{"lineNumber":281,"author":{"gitId":"dt-td"},"content":"                + (size \u003c\u003d 1","lastModifiedDate":"2021-08-28"},{"lineNumber":282,"author":{"gitId":"dt-td"},"content":"                  ? \" task \"","lastModifiedDate":"2021-08-24"},{"lineNumber":283,"author":{"gitId":"dt-td"},"content":"                  : \" tasks \" + \"in your list.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":284,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":285,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":286,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":287,"author":{"gitId":"dt-td"},"content":"     * Generates message for successfully marking task as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":288,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":289,"author":{"gitId":"dt-td"},"content":"     * @param task task from TaskList marked as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":290,"author":{"gitId":"dt-td"},"content":"     * @return message for successfully marking task as done","lastModifiedDate":"2021-08-25"},{"lineNumber":291,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":292,"author":{"gitId":"dt-td"},"content":"    private String doneMessage(Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":293,"author":{"gitId":"dt-td"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + task;","lastModifiedDate":"2021-08-24"},{"lineNumber":294,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":295,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":296,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":297,"author":{"gitId":"dt-td"},"content":"     * Gets string representation of TaskList.","lastModifiedDate":"2021-08-30"},{"lineNumber":298,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":299,"author":{"gitId":"dt-td"},"content":"     * @return String representation of TaskList.","lastModifiedDate":"2021-08-30"},{"lineNumber":300,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":301,"author":{"gitId":"dt-td"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":302,"author":{"gitId":"dt-td"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":303,"author":{"gitId":"dt-td"},"content":"        String s \u003d \"\";","lastModifiedDate":"2021-08-30"},{"lineNumber":304,"author":{"gitId":"dt-td"},"content":"        int size \u003d tasks.size();","lastModifiedDate":"2021-08-30"},{"lineNumber":305,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":306,"author":{"gitId":"dt-td"},"content":"        for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2021-08-30"},{"lineNumber":307,"author":{"gitId":"dt-td"},"content":"            s \u003d s.concat(tasks.get(i).toString());","lastModifiedDate":"2021-08-30"},{"lineNumber":308,"author":{"gitId":"dt-td"},"content":"            if (i \u003c tasks.size() - 1) {","lastModifiedDate":"2021-08-30"},{"lineNumber":309,"author":{"gitId":"dt-td"},"content":"                s \u003d s.concat(\"\\n\");","lastModifiedDate":"2021-08-30"},{"lineNumber":310,"author":{"gitId":"dt-td"},"content":"            }","lastModifiedDate":"2021-08-30"},{"lineNumber":311,"author":{"gitId":"dt-td"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":312,"author":{"gitId":"dt-td"},"content":"        return s;","lastModifiedDate":"2021-08-30"},{"lineNumber":313,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":314,"author":{"gitId":"dt-td"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"dt-td":314}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dt-td"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"dt-td"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"dt-td"},"content":" * Encapsulates a todo task.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"dt-td"},"content":" * Todo tasks are tasks without any date/time.","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"dt-td"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"dt-td"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"dt-td"},"content":"     * Constructor for Todo.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"dt-td"},"content":"     * @param description description of todo task","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"dt-td"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"dt-td"},"content":"        super(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"dt-td"},"content":"     * Gets string representation of todo task.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"dt-td"},"content":"     * @return String representation of todo task.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"dt-td"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"dt-td"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"dt-td"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"dt-td"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"dt-td":26}},{"path":"src/main/java/duke/util/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dt-td"},"content":"package duke.util;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"dt-td"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"dt-td"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"dt-td"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"dt-td"},"content":" * Encapsulates command interface to handle DukeExceptions thrown by bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"dt-td"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"dt-td"},"content":"public interface Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"dt-td"},"content":"    String execute(TaskList taskList) throws DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"dt-td"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"dt-td":11}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dt-td"},"content":"package duke.util;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"dt-td"},"content":"import duke.exceptions.UnknownCommandException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"dt-td"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"dt-td"},"content":" * Encapsulates Parser of Duke bot.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"dt-td"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"dt-td"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"dt-td"},"content":"     * Parses user input command and returns command to run in duke bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"dt-td"},"content":"     * @param command user input command","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"dt-td"},"content":"     * @return Command to run in duke bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"dt-td"},"content":"     * @throws UnknownCommandException invalid user command","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"dt-td"},"content":"    public static Command parse(String command) throws UnknownCommandException {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"dt-td"},"content":"        if (command.contains(\"list\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"dt-td"},"content":"            return taskList -\u003e taskList.printFullTaskList();","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"dt-td"},"content":"        } else if (command.contains(\"todo\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"dt-td"},"content":"            return taskList -\u003e taskList.addTodo(command);","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"dt-td"},"content":"        } else if (command.contains(\"event\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"dt-td"},"content":"            return taskList -\u003e taskList.addEvent(command);","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"dt-td"},"content":"        } else if (command.contains(\"deadline\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"dt-td"},"content":"            return taskList -\u003e taskList.addDeadline(command);","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"dt-td"},"content":"        } else if (command.contains(\"delete\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"dt-td"},"content":"            return taskList -\u003e taskList.deleteTask(command);","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"dt-td"},"content":"        } else if (command.contains(\"done\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"dt-td"},"content":"            return taskList -\u003e taskList.markTaskDone(command);","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"dt-td"},"content":"        } else if (command.contains(\"find\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"dt-td"},"content":"            return taskList -\u003e taskList.findFromList(command);","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"dt-td"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"dt-td"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"dt-td"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"dt-td"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"dt-td":35}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dt-td"},"content":"package duke.util;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"dt-td"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"dt-td"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"dt-td"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"dt-td"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"dt-td"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"dt-td"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"dt-td"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"dt-td"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"dt-td"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"dt-td"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"dt-td"},"content":"import duke.exceptions.CorruptedFileException;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"dt-td"},"content":"import duke.exceptions.EmptyListException;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"dt-td"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"dt-td"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"dt-td"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"dt-td"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"dt-td"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"dt-td"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"dt-td"},"content":" * Encapsulates Storage of Duke bot.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"dt-td"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"dt-td"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"dt-td"},"content":"    private final String filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"dt-td"},"content":"     * Constructor for Storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"dt-td"},"content":"     * @param filePath user filepath to store text file.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"dt-td"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"dt-td"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"dt-td"},"content":"     * Loads data from the text file if present in the user\u0027s file path.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"dt-td"},"content":"     * @return arraylist of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"dt-td"},"content":"     * @throws CorruptedFileException if invalid data format in loaded text file","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"dt-td"},"content":"     * @throws IOException if given file path is a directory instead of a text file","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"dt-td"},"content":"    public ArrayList\u003cTask\u003e loadFile() throws CorruptedFileException, IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"dt-td"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"dt-td"},"content":"        String pathString \u003d System.getProperty(\"user.dir\") + filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"dt-td"},"content":"        File f \u003d new File(pathString);","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"dt-td"},"content":"        if (f.createNewFile()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"dt-td"},"content":"            return tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"dt-td"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"dt-td"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"dt-td"},"content":"        while (s.hasNextLine()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"dt-td"},"content":"            Task task;","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"dt-td"},"content":"            String input \u003d s.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"dt-td"},"content":"            switch (input.charAt(1)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"dt-td"},"content":"            case \u0027T\u0027:","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"dt-td"},"content":"                task \u003d loadToDo(input);","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"dt-td"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"dt-td"},"content":"            case \u0027E\u0027:","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"dt-td"},"content":"                task \u003d loadEvent(input);","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"dt-td"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"dt-td"},"content":"            case \u0027D\u0027:","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"dt-td"},"content":"                task \u003d loadDeadline(input);","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"dt-td"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"dt-td"},"content":"            default:","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"dt-td"},"content":"                throw new CorruptedFileException();","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"dt-td"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"dt-td"},"content":"            if (input.charAt(4) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"dt-td"},"content":"                task.markDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"dt-td"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"dt-td"},"content":"            tasks.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"dt-td"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"dt-td"},"content":"        s.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"dt-td"},"content":"        return tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"dt-td"},"content":"     * Loads todo data into a todo task.","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"dt-td"},"content":"     * @param command todo task data string","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"dt-td"},"content":"     * @return todo task","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"dt-td"},"content":"    private Task loadToDo(String command) {","lastModifiedDate":"2021-08-28"},{"lineNumber":87,"author":{"gitId":"dt-td"},"content":"        Task task;","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"dt-td"},"content":"        String description;","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"dt-td"},"content":"        description \u003d command.substring(7);","lastModifiedDate":"2021-08-28"},{"lineNumber":91,"author":{"gitId":"dt-td"},"content":"        task \u003d new ToDo(description);","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"dt-td"},"content":"        return task;","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"dt-td"},"content":"     * Loads event data into an event task.","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"dt-td"},"content":"     * @param command event task data string","lastModifiedDate":"2021-08-28"},{"lineNumber":99,"author":{"gitId":"dt-td"},"content":"     * @return event task","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"dt-td"},"content":"     * @throws CorruptedFileException if invalid event data format in loaded text file","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"dt-td"},"content":"    private Task loadEvent(String command) throws CorruptedFileException {","lastModifiedDate":"2021-08-28"},{"lineNumber":103,"author":{"gitId":"dt-td"},"content":"        Task task;","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"dt-td"},"content":"        String[] taskInfo;","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"dt-td"},"content":"        String description;","lastModifiedDate":"2021-08-28"},{"lineNumber":106,"author":{"gitId":"dt-td"},"content":"        String dateString;","lastModifiedDate":"2021-08-28"},{"lineNumber":107,"author":{"gitId":"dt-td"},"content":"        String startTimeString;","lastModifiedDate":"2021-08-28"},{"lineNumber":108,"author":{"gitId":"dt-td"},"content":"        String endTimeString;","lastModifiedDate":"2021-08-28"},{"lineNumber":109,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"dt-td"},"content":"        taskInfo \u003d command.substring(7).split(\" \\\\(at: \");","lastModifiedDate":"2021-08-28"},{"lineNumber":111,"author":{"gitId":"dt-td"},"content":"        description \u003d taskInfo[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"dt-td"},"content":"        taskInfo \u003d taskInfo[1].split(\"[ -]\");","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"dt-td"},"content":"        dateString \u003d taskInfo[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"dt-td"},"content":"        startTimeString \u003d taskInfo[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"dt-td"},"content":"        endTimeString \u003d taskInfo[2];","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"dt-td"},"content":"        LocalDate date;","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"dt-td"},"content":"        LocalTime startTime;","lastModifiedDate":"2021-08-28"},{"lineNumber":119,"author":{"gitId":"dt-td"},"content":"        LocalTime endTime;","lastModifiedDate":"2021-08-28"},{"lineNumber":120,"author":{"gitId":"dt-td"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"dt-td"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"h:mma\");","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"dt-td"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"dt-td"},"content":"            date \u003d LocalDate.parse(dateString, dateFormatter);","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"dt-td"},"content":"            startTime \u003d LocalTime.parse(startTimeString, timeFormatter);","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"dt-td"},"content":"            endTime \u003d LocalTime.parse(endTimeString, timeFormatter);","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"dt-td"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"dt-td"},"content":"            throw new CorruptedFileException();","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"dt-td"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"dt-td"},"content":"        task \u003d new Event(description, date, startTime, endTime);","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"dt-td"},"content":"        return task;","lastModifiedDate":"2021-08-25"},{"lineNumber":133,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":135,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":136,"author":{"gitId":"dt-td"},"content":"     * Loads deadline data into a deadline task.","lastModifiedDate":"2021-08-25"},{"lineNumber":137,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"dt-td"},"content":"     * @param command deadline task data string","lastModifiedDate":"2021-08-28"},{"lineNumber":139,"author":{"gitId":"dt-td"},"content":"     * @return deadline task","lastModifiedDate":"2021-08-25"},{"lineNumber":140,"author":{"gitId":"dt-td"},"content":"     * @throws CorruptedFileException if invalid deadline data format in loaded text file","lastModifiedDate":"2021-08-25"},{"lineNumber":141,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":142,"author":{"gitId":"dt-td"},"content":"    private Task loadDeadline(String command) throws CorruptedFileException {","lastModifiedDate":"2021-08-28"},{"lineNumber":143,"author":{"gitId":"dt-td"},"content":"        Task task;","lastModifiedDate":"2021-08-25"},{"lineNumber":144,"author":{"gitId":"dt-td"},"content":"        String[] taskInfo;","lastModifiedDate":"2021-08-25"},{"lineNumber":145,"author":{"gitId":"dt-td"},"content":"        String description;","lastModifiedDate":"2021-08-28"},{"lineNumber":146,"author":{"gitId":"dt-td"},"content":"        String dateTimeString;","lastModifiedDate":"2021-08-28"},{"lineNumber":147,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":148,"author":{"gitId":"dt-td"},"content":"        taskInfo \u003d command.substring(7).split(\" \\\\(by: \");","lastModifiedDate":"2021-08-28"},{"lineNumber":149,"author":{"gitId":"dt-td"},"content":"        description \u003d taskInfo[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":150,"author":{"gitId":"dt-td"},"content":"        dateTimeString \u003d taskInfo[1].substring(0, taskInfo[1].indexOf(\")\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":151,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":152,"author":{"gitId":"dt-td"},"content":"        LocalDateTime dateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":153,"author":{"gitId":"dt-td"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy h:mma\");","lastModifiedDate":"2021-08-25"},{"lineNumber":154,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":155,"author":{"gitId":"dt-td"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":156,"author":{"gitId":"dt-td"},"content":"            dateTime \u003d LocalDateTime.parse(dateTimeString, dateTimeFormatter);","lastModifiedDate":"2021-08-25"},{"lineNumber":157,"author":{"gitId":"dt-td"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":158,"author":{"gitId":"dt-td"},"content":"            throw new CorruptedFileException();","lastModifiedDate":"2021-08-25"},{"lineNumber":159,"author":{"gitId":"dt-td"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":160,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":161,"author":{"gitId":"dt-td"},"content":"        task \u003d new Deadline(description, dateTime);","lastModifiedDate":"2021-08-25"},{"lineNumber":162,"author":{"gitId":"dt-td"},"content":"        return task;","lastModifiedDate":"2021-08-25"},{"lineNumber":163,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":164,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":165,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":166,"author":{"gitId":"dt-td"},"content":"     * Creates/Replaces text file with tasks\u0027 data in user\u0027s current directory.","lastModifiedDate":"2021-08-25"},{"lineNumber":167,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":168,"author":{"gitId":"dt-td"},"content":"     * @param taskList tasks with data to be loaded into text file","lastModifiedDate":"2021-08-28"},{"lineNumber":169,"author":{"gitId":"dt-td"},"content":"     * @throws IOException if given file path is a directory instead of a text file","lastModifiedDate":"2021-08-25"},{"lineNumber":170,"author":{"gitId":"dt-td"},"content":"     * @throws EmptyListException if TaskList is empty","lastModifiedDate":"2021-08-25"},{"lineNumber":171,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":172,"author":{"gitId":"dt-td"},"content":"    public void saveFile(TaskList taskList) throws IOException, EmptyListException {","lastModifiedDate":"2021-08-28"},{"lineNumber":173,"author":{"gitId":"dt-td"},"content":"        String path \u003d System.getProperty(\"user.dir\") + filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":174,"author":{"gitId":"dt-td"},"content":"        FileWriter myWriter \u003d new FileWriter(path);","lastModifiedDate":"2021-08-24"},{"lineNumber":175,"author":{"gitId":"dt-td"},"content":"        myWriter.write(taskList.toString());","lastModifiedDate":"2021-08-30"},{"lineNumber":176,"author":{"gitId":"dt-td"},"content":"        myWriter.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":177,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":178,"author":{"gitId":"dt-td"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"dt-td":178}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"dt-td"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"dt-td"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"dt-td"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"dt-td"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"dt-td"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"dt-td"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"dt-td"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"dt-td"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"dt-td"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"dt-td"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"dt-td"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"dt-td"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"dt-td"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"dt-td"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"dt-td":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"dt-td"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"dt-td"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"dt-td"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"dt-td"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"dt-td"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"dt-td"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"dt-td"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"dt-td"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"dt-td"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"dt-td"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"dt-td"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"dt-td"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"dt-td"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"dt-td"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"dt-td"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"dt-td"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"dt-td"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"dt-td":19}},{"path":"src/test/java/duke/exceptions/DukeExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dt-td"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"dt-td"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"dt-td"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"dt-td"},"content":"public class DukeExceptionTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"dt-td"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"dt-td"},"content":"    public void dukeExceptionTest_dukeException_sameOutput() {","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"dt-td"},"content":"        DukeException dukeException \u003d new DukeException(\"☹ OOPS!!! I\u0027m sorry, something has gone wrong\");","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"dt-td"},"content":"        assertEquals(\"☹ OOPS!!! I\u0027m sorry, something has gone wrong\", dukeException.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"dt-td"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"dt-td"},"content":"    public void corruptedFileExceptionTest_corruptedFile_sameOutput() {","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"dt-td"},"content":"        DukeException dukeException \u003d new CorruptedFileException();","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"dt-td"},"content":"        assertEquals(\"☹ Sorry! Your duke.txt file is corrupted and cannot be loaded!\",","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"dt-td"},"content":"                dukeException.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"dt-td"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"dt-td"},"content":"    public void emptyListExceptionTest_emptyList_sameOutput() {","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"dt-td"},"content":"        DukeException dukeException \u003d new EmptyListException();","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"dt-td"},"content":"        assertEquals(\"☹ Sorry! Your list is empty!\",","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"dt-td"},"content":"                dukeException.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"dt-td"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"dt-td"},"content":"    public void taskNotFoundExceptionTest_taskNotFound_sameOutput() {","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"dt-td"},"content":"        DukeException dukeException \u003d new TaskNotFoundException();","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"dt-td"},"content":"        assertEquals(\"☹ Sorry! There is no such task with this task index!\",","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"dt-td"},"content":"                dukeException.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"dt-td"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"dt-td"},"content":"    public void unknownCommandExceptionTest_unknownCommand_sameOutput() {","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"dt-td"},"content":"        DukeException dukeException \u003d new UnknownCommandException();","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"dt-td"},"content":"        assertEquals(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means.\",","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"dt-td"},"content":"                dukeException.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"dt-td"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"dt-td"},"content":"    public void illegalFormatExceptionTest_toDo_sameOutput() {","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"dt-td"},"content":"        String format \u003d \"todo \u003cdescription\u003e\";","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"dt-td"},"content":"        DukeException dukeException \u003d new IllegalFormatException(format);","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"dt-td"},"content":"        assertEquals(\"☹ Sorry! Please follow the following input format:\\n\" + format,","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"dt-td"},"content":"                dukeException.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"dt-td"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"dt-td":50}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dt-td"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"dt-td"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"dt-td"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"dt-td"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"dt-td"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"dt-td"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"dt-td"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"dt-td"},"content":"public class TaskTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"dt-td"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"dt-td"},"content":"    public void taskTest_commandLineInput_sameOutput() {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"dt-td"},"content":"        Task task \u003d new Task(\"Task\");","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"dt-td"},"content":"        assertEquals(\"[ ] Task\", task.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"dt-td"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"dt-td"},"content":"    public void markDoneTest_commandLineInput_sameOutput() {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"dt-td"},"content":"        Task task \u003d new Task(\"Task\");","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"dt-td"},"content":"        task.markDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"dt-td"},"content":"        assertEquals(\"[X] Task\", task.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"dt-td"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"dt-td"},"content":"    public void toDoTest_commandLineInput_sameOutput() {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"dt-td"},"content":"        Task task \u003d new ToDo(\"Todo\");","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"dt-td"},"content":"        assertEquals(\"[T][ ] Todo\", task.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"dt-td"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"dt-td"},"content":"    public void eventTest_commandLineInput_sameOutput() {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"dt-td"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"dt-td"},"content":"        LocalTime startTime \u003d LocalTime.now();","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"dt-td"},"content":"        LocalTime endTime \u003d LocalTime.now().plusHours(1);","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"dt-td"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"dt-td"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"h:mma\");","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"dt-td"},"content":"        Task task \u003d new Event(\"event\", date, startTime, endTime);","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"dt-td"},"content":"        assertEquals(\"[E][ ] event (at: \"","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"dt-td"},"content":"                        + date.format(dateFormatter) + \" \"","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"dt-td"},"content":"                        + startTime.format(timeFormatter) + \"-\"","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"dt-td"},"content":"                        + endTime.format(timeFormatter) + \")\",","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"dt-td"},"content":"                        task.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"dt-td"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"dt-td"},"content":"    public void deadlineTest_commandLineInput_sameOutput() {","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"dt-td"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.now();","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"dt-td"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy h:mma\");","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"dt-td"},"content":"        Task task \u003d new Deadline(\"deadline\", dateTime);","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"dt-td"},"content":"        assertEquals(\"[D][ ] deadline (by: \"","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"dt-td"},"content":"                        + dateTime.format(dateTimeFormatter) + \")\",","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"dt-td"},"content":"                task.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"dt-td"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"dt-td":60}},{"path":"src/test/java/duke/util/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dt-td"},"content":"package duke.util;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"dt-td"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"dt-td"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"dt-td"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"dt-td"},"content":"import duke.exceptions.UnknownCommandException;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"dt-td"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"dt-td"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"dt-td"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"dt-td"},"content":"    public void parseTest_invalidCommand_sameOutput() throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"dt-td"},"content":"        String command \u003d \"Random Command\";","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"dt-td"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"dt-td"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"dt-td"},"content":"            Parser.parse(command).execute(tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"dt-td"},"content":"        } catch (UnknownCommandException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"dt-td"},"content":"            assertEquals(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means.\",","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"dt-td"},"content":"                    e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"dt-td"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"dt-td"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"dt-td"},"content":"    public void parseTest_validCommand_sameOutput() throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"dt-td"},"content":"        String userInputCommand \u003d \"todo Finish Week 3 IP\";","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"dt-td"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"dt-td"},"content":"        TaskList resultTaskList \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"dt-td"},"content":"        Command command \u003d tasks -\u003e tasks.addTodo(userInputCommand);","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"dt-td"},"content":"        assertEquals(command.execute(resultTaskList),","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"dt-td"},"content":"                Parser.parse(userInputCommand).execute(taskList));","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"dt-td"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"dt-td":37}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dt-td"},"content":"todo Complete CS2100 Week 2 Individual Project","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"dt-td"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"dt-td"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"dt-td"},"content":"deadline CS2100 Individual Project /by Week 6","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"dt-td"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"dt-td"},"content":"event Winter break /at Home","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"dt-td"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"dt-td"},"content":"todo Rest for the day","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"dt-td"},"content":"done 4","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"dt-td"},"content":"list","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"dt-td":10}}]
