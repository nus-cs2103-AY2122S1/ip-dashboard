[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"pcgiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"pcgiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"pcgiang"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"pcgiang"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"pcgiang":16,"-":45}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import duke.exception.InvalidDeadlineException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":" * A subclass of task that represents a deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"    private String type;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"    private LocalDate deadlineDate;","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"    private LocalTime deadlineTime;","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"     * Constructor for Deadline class.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"     * @param title Name of the task to be created.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"     * @param deadline Date and time of deadline.","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"    public Deadline(String title, String deadline) throws InvalidDeadlineException {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"        super(title);","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"        type \u003d \"D\";","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"pcgiang"},"content":"        String[] dateTime \u003d deadline.split(\" \");","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"pcgiang"},"content":"        if (dateTime.length \u003c 1) {","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"pcgiang"},"content":"            throw new InvalidDeadlineException();","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"pcgiang"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"pcgiang"},"content":"            deadlineDate \u003d LocalDate.parse(dateTime[0]);","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"pcgiang"},"content":"            if (dateTime.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"pcgiang"},"content":"                deadlineTime \u003d LocalTime.parse(\"23:59\");","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"pcgiang"},"content":"            } else {","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"pcgiang"},"content":"                deadlineTime \u003d LocalTime.parse(dateTime[1]);","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"pcgiang"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"pcgiang"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"pcgiang"},"content":"            throw new InvalidDeadlineException();","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"pcgiang"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"pcgiang"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"pcgiang"},"content":"        String date \u003d this.deadlineDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"pcgiang"},"content":"        String time \u003d this.deadlineTime.format(DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"pcgiang"},"content":"        String deadline \u003d date + \" \" + time;","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"pcgiang"},"content":"        return \"[\" + type + \"]\" + super.toString() + \"(by: \" + deadline + \")\";","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"pcgiang"},"content":"     * A method that prints out details of a task.","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"pcgiang"},"content":"     * @return Details of task.","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"pcgiang"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"pcgiang"},"content":"    public String writeTask() {","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"pcgiang"},"content":"        String date \u003d this.deadlineDate.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"pcgiang"},"content":"        String time \u003d this.deadlineTime.format(DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"pcgiang"},"content":"        String deadline \u003d date + \" \" + time;","lastModifiedDate":"2021-09-07"},{"lineNumber":62,"author":{"gitId":"pcgiang"},"content":"        return type + \" | \" + super.writeTask() + \" | \" + deadline;","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"pcgiang":64}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"pcgiang"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"pcgiang"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"pcgiang"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"pcgiang"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"pcgiang"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"pcgiang"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"pcgiang"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"pcgiang"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"pcgiang"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"pcgiang"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"pcgiang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"pcgiang"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"pcgiang"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"pcgiang"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"pcgiang"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"pcgiang"},"content":"    private void flip() {","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"pcgiang"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"pcgiang"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"pcgiang"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"pcgiang"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"pcgiang"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"pcgiang"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"pcgiang"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"pcgiang"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"pcgiang"},"content":"        db.flip();","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"pcgiang"},"content":"        return db;","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"pcgiang":65}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":" * Duke contains a main method which runs the program.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"public class Duke {","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"     * Constructor of Duke. UI object, storage and tasks are instantiated.","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"    public Duke() {","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"        storage \u003d new Storage(\".\\\\src\\\\main\\\\level-7.txt\");","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"            assert tasks !\u003d null: \"tasks shouldnt be null here!\";","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"pcgiang"},"content":"            System.out.println(\"RESET!\");","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"pcgiang"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"pcgiang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"pcgiang"},"content":"            System.out.println(\"File failed to load.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"pcgiang"},"content":"     * A method that allows user give input and runs the program.","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"pcgiang"},"content":"     * Contains a parser which reads command from the input.","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"pcgiang"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"pcgiang"},"content":"    String getResponse(String input) {","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"pcgiang"},"content":"        String result \u003d \"\";","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"pcgiang"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"pcgiang"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"pcgiang"},"content":"                result +\u003d \"Babai! See you again soon! XD\";","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"pcgiang"},"content":"            } else if (input.equals(\"list\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"pcgiang"},"content":"                result +\u003d tasks.printList();","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"pcgiang"},"content":"            } else if (input.startsWith(\"done\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"pcgiang"},"content":"                result +\u003d tasks.markAsDone(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"pcgiang"},"content":"            } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"pcgiang"},"content":"                result +\u003d tasks.deleteTask(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"pcgiang"},"content":"            } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"pcgiang"},"content":"                result +\u003d tasks.findTask(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"pcgiang"},"content":"            } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"pcgiang"},"content":"                result +\u003d tasks.addTask(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"pcgiang"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"pcgiang"},"content":"            storage.updateFile(tasks);","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"pcgiang"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"pcgiang"},"content":"            result \u003d e.getMessage();","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"pcgiang"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"pcgiang"},"content":"            result \u003d \"Task number is invalid!\";","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"pcgiang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"pcgiang"},"content":"            return \"File failed to load!\";","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"pcgiang"},"content":"        assert result !\u003d null: \"result cannot be null here!\";","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"pcgiang"},"content":"        return result;","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"pcgiang":65,"-":2}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import duke.exception.InvalidEventException;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":" * A subclass of Task that represents an Event.","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":" *","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"public class Event extends Task {","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"    String type;","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"    LocalDate eventDate;","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"    LocalTime eventStartTime;","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"    LocalTime eventEndTime;","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"     * Constructor for Deadline class.","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"     * @param title Name of the task to be created.","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"     * @param eventTime Date and time of event.","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"pcgiang"},"content":"    public Event(String title, String eventTime) throws InvalidEventException {","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"pcgiang"},"content":"        super(title);","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"pcgiang"},"content":"        type \u003d \"E\";","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"pcgiang"},"content":"        String[] dateTime \u003d eventTime.split(\" \");","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"pcgiang"},"content":"        if (dateTime.length \u003c 1) {","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"pcgiang"},"content":"            throw new InvalidEventException();","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"pcgiang"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"pcgiang"},"content":"            eventDate \u003d LocalDate.parse(dateTime[0]);","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"pcgiang"},"content":"            if (dateTime.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"pcgiang"},"content":"                eventStartTime \u003d LocalTime.parse(\"23:59\");","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"pcgiang"},"content":"                eventEndTime \u003d LocalTime.parse(\"23:59\");","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"pcgiang"},"content":"            } else {","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"pcgiang"},"content":"                String time \u003d dateTime[1];","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"pcgiang"},"content":"                eventStartTime \u003d LocalTime.parse(time.split(\"-\")[0]);","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"pcgiang"},"content":"                eventEndTime \u003d LocalTime.parse(time.split(\"-\")[1]);","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"pcgiang"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"pcgiang"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"pcgiang"},"content":"            throw new InvalidEventException();","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"pcgiang"},"content":"    @Override","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"pcgiang"},"content":"    public String toString() {","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"pcgiang"},"content":"        String date \u003d this.eventDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"pcgiang"},"content":"        String start \u003d this.eventStartTime.format(DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"pcgiang"},"content":"        String end \u003d this.eventEndTime.format(DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"pcgiang"},"content":"        String time \u003d date + \" \" + start + \"-\" + end;","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"pcgiang"},"content":"        return \"[\" + type + \"]\" + super.toString() + \"(at: \" + time + \")\";","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"pcgiang"},"content":"     * A method that prints out details of an event.","lastModifiedDate":"2021-09-07"},{"lineNumber":62,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"pcgiang"},"content":"     * @return Details of an event.","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"pcgiang"},"content":"    @Override","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"pcgiang"},"content":"    public String writeTask() {","lastModifiedDate":"2021-09-07"},{"lineNumber":67,"author":{"gitId":"pcgiang"},"content":"        String date \u003d this.eventDate.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"pcgiang"},"content":"        String start \u003d this.eventStartTime.format(DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":69,"author":{"gitId":"pcgiang"},"content":"        String end \u003d this.eventEndTime.format(DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":70,"author":{"gitId":"pcgiang"},"content":"        String time \u003d date + \" \" + start + \"-\" + end;","lastModifiedDate":"2021-09-07"},{"lineNumber":71,"author":{"gitId":"pcgiang"},"content":"        return type + \" | \" + super.writeTask() + \" | \" + time;","lastModifiedDate":"2021-09-07"},{"lineNumber":72,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":73,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"pcgiang":73}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"public class Launcher {","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"pcgiang":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"            stage.show();","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"pcgiang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"pcgiang"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"pcgiang":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"    private Application main;","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"pcgiang"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"pcgiang"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.png\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"pcgiang"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"pcgiang"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"pcgiang"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"pcgiang"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"pcgiang"},"content":"        duke \u003d d;","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"pcgiang"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"pcgiang"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"pcgiang"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"pcgiang"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"pcgiang"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"pcgiang"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"pcgiang"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"pcgiang"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"pcgiang"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"pcgiang"},"content":"        );","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"pcgiang"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"pcgiang"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"pcgiang"},"content":"            Platform.exit();","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"pcgiang":57}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":" * A class that reads user input and gives commands accordingly.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"    Scanner sc;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"    TaskList list;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"    UI ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"    Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"     * Constructor of a parser.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"     * @param list A TaskList which contains all the current tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"     * @param ui An Ui object which prints out messages to users.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"     * @param storage A Storage object which deals with opening and loading file to the program.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"    public Parser(TaskList list, UI ui, Storage storage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"pcgiang"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"pcgiang"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"pcgiang"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"pcgiang"},"content":"     * A method to read task from user input and call commands accordingly.","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"pcgiang"},"content":"     * @throws IOException Thrown when file cannot be found.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"pcgiang"},"content":"    public void readTask() throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"pcgiang"},"content":"        String input \u003d sc.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"pcgiang"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"pcgiang"},"content":"            if (input.equals(\"list\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"pcgiang"},"content":"                list.printList();","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"pcgiang"},"content":"            } else if (input.startsWith(\"done\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"pcgiang"},"content":"                try {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"pcgiang"},"content":"                    list.markAsDone(input);","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"pcgiang"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"pcgiang"},"content":"                    ui.printErrorMessage(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"pcgiang"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"pcgiang"},"content":"                    ui.printErrorMessage(\"Task number is invalid!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"pcgiang"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"pcgiang"},"content":"            } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"pcgiang"},"content":"                try {","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"pcgiang"},"content":"                    list.deleteTask(input);","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"pcgiang"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"pcgiang"},"content":"                    ui.printErrorMessage(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"pcgiang"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"pcgiang"},"content":"            } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"pcgiang"},"content":"                try {","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"pcgiang"},"content":"                    list.findTask(input);","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"pcgiang"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"pcgiang"},"content":"                    ui.printErrorMessage(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"pcgiang"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"pcgiang"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"pcgiang"},"content":"                try {","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"pcgiang"},"content":"                    list.addTask(input);","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"pcgiang"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"pcgiang"},"content":"                    ui.printErrorMessage(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"pcgiang"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"pcgiang"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"pcgiang"},"content":"            storage.updateFile(list);","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"pcgiang"},"content":"            input \u003d sc.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"pcgiang"},"content":"        ui.printByeMessage();","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"pcgiang"},"content":"        sc.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"pcgiang":77}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"import duke.exception.InvalidDeadlineException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"import duke.exception.InvalidEventException;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"import duke.exception.InvalidTaskException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":" * A class that deals with loading and saving data to/from a file.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"    private final String filePath;","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"     * Constructor of a storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"     * @param filePath A path that access the location of the file to be open and used.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"pcgiang"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"pcgiang"},"content":"     * Method to load any existing data from file to the current list","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"pcgiang"},"content":"     * @return ArrayList of current tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"pcgiang"},"content":"     * @throws IOException thrown when file cannot be found.","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"pcgiang"},"content":"     * @throws InvalidTaskException thrown when users give invalid input.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"pcgiang"},"content":"     * @throws InvalidDeadlineException thrown when users give invalid deadlines.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"pcgiang"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException, DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"pcgiang"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"pcgiang"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"pcgiang"},"content":"        assert filePath !\u003d null: \"filePath must not be null!\";","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"pcgiang"},"content":"        if (file.exists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"pcgiang"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"pcgiang"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"pcgiang"},"content":"                String str \u003d sc.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"pcgiang"},"content":"                String[] stuff \u003d str.split(\" \\\\| \");","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"pcgiang"},"content":"                Task task;","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"pcgiang"},"content":"                switch (stuff[0]) {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"pcgiang"},"content":"                case \"T\":","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"pcgiang"},"content":"                    task \u003d new ToDos(stuff[2]);","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"pcgiang"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"pcgiang"},"content":"                case \"D\":","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"pcgiang"},"content":"                    task \u003d new Deadline(stuff[2], stuff[3]);","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"pcgiang"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"pcgiang"},"content":"                case \"E\":","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"pcgiang"},"content":"                    task \u003d new Event(stuff[2], stuff[3]);","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"pcgiang"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"pcgiang"},"content":"                default:","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"pcgiang"},"content":"                    throw new InvalidTaskException();","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"pcgiang"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"pcgiang"},"content":"                if (stuff[1].equals(\"1\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"pcgiang"},"content":"                    task.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"pcgiang"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"pcgiang"},"content":"                list.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"pcgiang"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"pcgiang"},"content":"        return list;","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"pcgiang"},"content":"     * Method to update file when TaskList is changed.","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"pcgiang"},"content":"     * @param list TaskList after it is changed.","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"pcgiang"},"content":"     * @throws IOException thrown when file is not found.","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"pcgiang"},"content":"    public void updateFile(TaskList list) throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"pcgiang"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"pcgiang"},"content":"        if (!file.exists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"pcgiang"},"content":"            file.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"pcgiang"},"content":"            return;","lastModifiedDate":"2021-09-07"},{"lineNumber":84,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":85,"author":{"gitId":"pcgiang"},"content":"        file.delete();","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"pcgiang"},"content":"        File newFile \u003d new File(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"pcgiang"},"content":"        newFile.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"pcgiang"},"content":"        FileWriter writer \u003d new FileWriter(file);","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"pcgiang"},"content":"        for (Task task : list.getList()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"pcgiang"},"content":"            writer.write(task.writeTask() + \"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"pcgiang"},"content":"        writer.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":95,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"pcgiang":96}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":" * A class that represents a task","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"public class Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"    private boolean done;","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"    private String title;","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"     * Constructor for Task class","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"     * @param title Name of the task to be created","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"    public Task(String title) {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"        this.done \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"        this.title \u003d title;","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"        return (done ? \"[X]\" : \"[ ]\") + title;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"pcgiang"},"content":"     * Method to mark a task as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"pcgiang"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"pcgiang"},"content":"        done \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"pcgiang"},"content":"     * A method that prints out details of a task.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"pcgiang"},"content":"     * @return Details of task","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"pcgiang"},"content":"    public String writeTask() {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"pcgiang"},"content":"        String doneLabel \u003d done ? \"1\" : \"0\";","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"pcgiang"},"content":"        return doneLabel + \" | \" + title;","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"pcgiang"},"content":"    public String getTitle() {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"pcgiang"},"content":"        return title;","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"pcgiang":47}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import duke.exception.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":" * A class that represents a list of Tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":" * It contains a constructor, a getter,","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":" * a method to print a list, add a task to a list,","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":" * mark a task as done and delete a task.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"     * Constructor to create a new TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"pcgiang"},"content":"     * Constructor to create a new TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"pcgiang"},"content":"     * @param tasks An ArrayList of Task that contains Tasks to be put inside the TaskList.","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"pcgiang"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"pcgiang"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"pcgiang"},"content":"     * Method to print out tasks inside a TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"pcgiang"},"content":"     * @return String representation of all the tasks inside the current TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"pcgiang"},"content":"    public String printList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"pcgiang"},"content":"        String str \u003d \"Here are the tasks on your list: \\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"pcgiang"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"pcgiang"},"content":"            str \u003d str + i + \". \" + tasks.get(i-1) + \"\\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"pcgiang"},"content":"        return str;","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"pcgiang"},"content":"     * A method to mark a task as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"pcgiang"},"content":"     * @param str User input which indicates details of the task to be marked as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"pcgiang"},"content":"     * @return Task after it is marked as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"pcgiang"},"content":"     * @throws OutOfBoundException Thrown when user inputs task number that is out of the given task range.","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"pcgiang"},"content":"     * @throws NumberFormatException Thrown when user gives a non-number as the task number.","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"pcgiang"},"content":"    public String markAsDone(String str) throws OutOfBoundException, NumberFormatException {","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"pcgiang"},"content":"        String i \u003d str.substring(str.length()-1);","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"pcgiang"},"content":"        int index \u003d Integer.parseInt(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"pcgiang"},"content":"        if (index \u003c 0 || index \u003e tasks.size()) {","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"pcgiang"},"content":"            throw new OutOfBoundException();","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"pcgiang"},"content":"        Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"pcgiang"},"content":"        task.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"pcgiang"},"content":"        String result \u003d \"Nice! I have marked this task as done!\\n\" + task.toString() ;","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"pcgiang"},"content":"        return result;","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"pcgiang"},"content":"     * A method to add a Task inside a TaskList","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"pcgiang"},"content":"     * @param str User inputs which indicates details of the task to be added.","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"pcgiang"},"content":"     * @return Task after it is added.","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"pcgiang"},"content":"     * @throws EmptyDescriptionException Thrown when users do not give a task description.","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"pcgiang"},"content":"     * @throws InvalidTaskException Thrown when users give incorrect input for task.","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"pcgiang"},"content":"     * @throws InvalidDeadlineException Thrown when users give an incorrect deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"pcgiang"},"content":"    public String addTask(String str) throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":80,"author":{"gitId":"pcgiang"},"content":"        //if the task only contain 1 word","lastModifiedDate":"2021-09-07"},{"lineNumber":81,"author":{"gitId":"pcgiang"},"content":"        if (str.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"pcgiang"},"content":"            if (str.startsWith(\"todo\") || str.startsWith(\"deadline\") || str.startsWith(\"event\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"pcgiang"},"content":"                throw new EmptyDescriptionException(str);","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"pcgiang"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"pcgiang"},"content":"            throw new InvalidTaskException();","lastModifiedDate":"2021-09-07"},{"lineNumber":86,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"pcgiang"},"content":"        //if task contains more than 1 word, but keyword is wrong","lastModifiedDate":"2021-09-07"},{"lineNumber":89,"author":{"gitId":"pcgiang"},"content":"        if (!str.startsWith(\"todo\") \u0026\u0026 !str.startsWith(\"deadline\") \u0026\u0026 !str.startsWith(\"event\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"pcgiang"},"content":"            throw new InvalidTaskException();","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":93,"author":{"gitId":"pcgiang"},"content":"        Task task;","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"pcgiang"},"content":"        if (str.startsWith(\"todo\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"pcgiang"},"content":"            task \u003d new ToDos(str.substring(5));","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"pcgiang"},"content":"            tasks.add(task);","lastModifiedDate":"2021-09-07"},{"lineNumber":97,"author":{"gitId":"pcgiang"},"content":"        } else if (str.startsWith(\"deadline\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"pcgiang"},"content":"            String[] message \u003d str.split(\"/by \");","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"pcgiang"},"content":"            if (message.length !\u003d 2) {","lastModifiedDate":"2021-09-07"},{"lineNumber":100,"author":{"gitId":"pcgiang"},"content":"                throw new InvalidTaskException();","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"pcgiang"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"pcgiang"},"content":"            task \u003d new Deadline(message[0].substring(9), message[1]);","lastModifiedDate":"2021-09-07"},{"lineNumber":103,"author":{"gitId":"pcgiang"},"content":"            tasks.add(task);","lastModifiedDate":"2021-09-07"},{"lineNumber":104,"author":{"gitId":"pcgiang"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"pcgiang"},"content":"            String[] message \u003d str.split(\"/at \");","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"pcgiang"},"content":"            if (message.length !\u003d 2) {","lastModifiedDate":"2021-09-07"},{"lineNumber":107,"author":{"gitId":"pcgiang"},"content":"                throw new InvalidTaskException();","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"pcgiang"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"pcgiang"},"content":"            task \u003d new Event(message[0].substring(6), message[1]);","lastModifiedDate":"2021-09-07"},{"lineNumber":110,"author":{"gitId":"pcgiang"},"content":"            tasks.add(task);","lastModifiedDate":"2021-09-07"},{"lineNumber":111,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"pcgiang"},"content":"        String result \u003d \"Got it. I\u0027ve added this task.\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":114,"author":{"gitId":"pcgiang"},"content":"                + tasks.get(tasks.size() - 1).toString() + \"\\r\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":115,"author":{"gitId":"pcgiang"},"content":"                + \"Now you have \" + tasks.size()","lastModifiedDate":"2021-09-07"},{"lineNumber":116,"author":{"gitId":"pcgiang"},"content":"                + (tasks.size() \u003d\u003d 1 ? \" task in the list\" : \" tasks in the list.\");","lastModifiedDate":"2021-09-07"},{"lineNumber":117,"author":{"gitId":"pcgiang"},"content":"        return result;","lastModifiedDate":"2021-09-01"},{"lineNumber":118,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"pcgiang"},"content":"     * A method to delete a certain in a TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":123,"author":{"gitId":"pcgiang"},"content":"     * @param str User inputs which indicates detail of task to be deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"pcgiang"},"content":"     * @return Task after it is deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"pcgiang"},"content":"     * @throws OutOfBoundException Thrown when user gives a task number that is outside of the range of TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"pcgiang"},"content":"    public String deleteTask(String str) throws OutOfBoundException {","lastModifiedDate":"2021-09-01"},{"lineNumber":128,"author":{"gitId":"pcgiang"},"content":"        String i \u003d str.substring(str.length() - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"pcgiang"},"content":"        int index \u003d Integer.parseInt(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"pcgiang"},"content":"        if (index \u003c 0 || index \u003e tasks.size()) {","lastModifiedDate":"2021-09-07"},{"lineNumber":132,"author":{"gitId":"pcgiang"},"content":"            throw new OutOfBoundException();","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":134,"author":{"gitId":"pcgiang"},"content":"        Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2021-09-07"},{"lineNumber":135,"author":{"gitId":"pcgiang"},"content":"        tasks.remove(index - 1);","lastModifiedDate":"2021-09-07"},{"lineNumber":136,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":137,"author":{"gitId":"pcgiang"},"content":"        String result \u003d \"Noted. I\u0027ve removed this task: \\n\" + task.toString() + \"\\r\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":138,"author":{"gitId":"pcgiang"},"content":"                + \"Now you have \" + tasks.size()","lastModifiedDate":"2021-09-07"},{"lineNumber":139,"author":{"gitId":"pcgiang"},"content":"                + (tasks.size() \u003d\u003d 1 ? \" task in the list\" : \" tasks in the list.\");","lastModifiedDate":"2021-09-07"},{"lineNumber":140,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":141,"author":{"gitId":"pcgiang"},"content":"        return result;","lastModifiedDate":"2021-09-01"},{"lineNumber":142,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"pcgiang"},"content":"     * Method to find a task given an input string.","lastModifiedDate":"2021-08-24"},{"lineNumber":146,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":147,"author":{"gitId":"pcgiang"},"content":"     * @param str Input string from user to find a certain task.","lastModifiedDate":"2021-08-24"},{"lineNumber":148,"author":{"gitId":"pcgiang"},"content":"     * @return TaskList which contains all the tasks that match.","lastModifiedDate":"2021-08-24"},{"lineNumber":149,"author":{"gitId":"pcgiang"},"content":"     * @throws TaskDoesNotExistException when there is no task that matches.","lastModifiedDate":"2021-08-24"},{"lineNumber":150,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":151,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":152,"author":{"gitId":"pcgiang"},"content":"    public String findTask(String str)throws TaskDoesNotExistException {","lastModifiedDate":"2021-09-01"},{"lineNumber":153,"author":{"gitId":"pcgiang"},"content":"        String t \u003d str.substring(5);","lastModifiedDate":"2021-08-24"},{"lineNumber":154,"author":{"gitId":"pcgiang"},"content":"        ArrayList\u003cTask\u003e l \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":155,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":156,"author":{"gitId":"pcgiang"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2021-09-07"},{"lineNumber":157,"author":{"gitId":"pcgiang"},"content":"            if (task.getTitle().contains(t)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":158,"author":{"gitId":"pcgiang"},"content":"                l.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":159,"author":{"gitId":"pcgiang"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":160,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":161,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":162,"author":{"gitId":"pcgiang"},"content":"        if (l.isEmpty()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":163,"author":{"gitId":"pcgiang"},"content":"            throw new TaskDoesNotExistException();","lastModifiedDate":"2021-08-24"},{"lineNumber":164,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":165,"author":{"gitId":"pcgiang"},"content":"        String result \u003d \"Here are the matching tasks in your list: \\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":166,"author":{"gitId":"pcgiang"},"content":"        TaskList list \u003d new TaskList(l);","lastModifiedDate":"2021-08-24"},{"lineNumber":167,"author":{"gitId":"pcgiang"},"content":"        result +\u003d list.printList() + \"\\r\\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":168,"author":{"gitId":"pcgiang"},"content":"        return result;","lastModifiedDate":"2021-09-01"},{"lineNumber":169,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":170,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":171,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":172,"author":{"gitId":"pcgiang"},"content":"     * Getter to get ArrayList","lastModifiedDate":"2021-08-24"},{"lineNumber":173,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":174,"author":{"gitId":"pcgiang"},"content":"     * @return ArrayList of the current tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":175,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":176,"author":{"gitId":"pcgiang"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":177,"author":{"gitId":"pcgiang"},"content":"        return tasks;","lastModifiedDate":"2021-09-07"},{"lineNumber":178,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":179,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"pcgiang":179}},{"path":"src/main/java/duke/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":" * A subclass of Task that represents a Todo task.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"public class ToDos extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"    private String type;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"     * Constructor for Deadline class.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"     * @param title Name of the task to be created.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"    public ToDos(String title) {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"        super(title);","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"        type \u003d \"T\";","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"        return \"[\" + type + \"]\" + super.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"pcgiang"},"content":"     * A method that prints out details of a todo task.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"pcgiang"},"content":"     * @return Details of todo task.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"pcgiang"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"pcgiang"},"content":"    public String writeTask() {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"pcgiang"},"content":"        return type + \" | \" + super.writeTask();","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"pcgiang":35}},{"path":"src/main/java/duke/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":" * A class that prints messages to users","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"public class UI {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"     * Constructor of class. Prints welcome message when the program is first run.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"    public UI() {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"        printWelcomeMessage();","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"     * A method which displays welcome message.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"    public void printWelcomeMessage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"        System.out.println(\"Hello!! This is Duke \u003c3\" + \"\\n\" + \"What can I do for you?\");","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"     * A method which display an error message when the program throws an error.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"     * @param message Error message to be sent to users.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"pcgiang"},"content":"    public void printErrorMessage(String message) {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"pcgiang"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"pcgiang"},"content":"     * A method which displays goodbye message.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"pcgiang"},"content":"    public void printByeMessage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"pcgiang"},"content":"        System.out.println(\"Babai! See you again soon! XD\");","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"pcgiang":38}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":" * A class which contains all exceptions thrown in the program.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"     * Constructor of an exception.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"     * @param message Message to be displayed to users.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"        super(message);","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"pcgiang":15}},{"path":"src/main/java/duke/exception/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":" * A subclass of DukeException. Thrown when users do not give a description to the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"public class EmptyDescriptionException extends DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"     * Constructor of an exception.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"     * @param input User input used to display error message.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"    public EmptyDescriptionException(String input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"        super(\"☹ OOPS!!! The description of \" + (input.startsWith(\"e\") ? \"an \" : \"a \")","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"                + input + \" cannot be empty.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"pcgiang":16}},{"path":"src/main/java/duke/exception/InvalidDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":" * A subclass of DukeException. Thrown when users do not give a valid deadline to the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"public class InvalidDeadlineException extends DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"     * Constructor for the exception.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"    public InvalidDeadlineException() {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"        super(\"Please enter deadline in the format [Task name] /by yyyy-mm-dd HH:mm\");","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"pcgiang":14}},{"path":"src/main/java/duke/exception/InvalidEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke.exception;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":" * A subclass of DukeException. Thrown when users do not give a valid deadline to the task.","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":" *","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"public class InvalidEventException extends DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"     * Constructor for the exception.","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"    public InvalidEventException() {","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"        super(\"Please enter event in the format [Task name] /at yyyy-mm-dd HH:mm-HH:mm\");","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"pcgiang":14}},{"path":"src/main/java/duke/exception/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":" * A subclass of DukeException. Thrown when users do not give a valid task.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"public class InvalidTaskException extends DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"     * Constructor for the exception.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"    public InvalidTaskException() {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-( Please key in a valid task!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"pcgiang":14}},{"path":"src/main/java/duke/exception/OutOfBoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":" * A subclass of DukeException. Thrown when users gives task number that is out of bound.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"public class OutOfBoundException extends DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"     * Constructor for the exception.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"    public OutOfBoundException() {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"        super(\"Task does not exist. Please send a correct task number \u003e\u003c\");","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"pcgiang":14}},{"path":"src/main/java/duke/exception/TaskDoesNotExistException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":" * A subclass of DukeException, thrown when search cannot be found.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"public class TaskDoesNotExistException extends DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"     * Constructor of the exception.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"    public TaskDoesNotExistException() {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"        super(\"Sorry. No such task is found :( Try another key word?\");","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"pcgiang":14}},{"path":"src/main/level-7.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"T | 0 | hello","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"E | 0 | event 1  | 2012-12-01 04:55-08:00","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"pcgiang":2}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"pcgiang":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"pcgiang":16}},{"path":"src/test/java/duke/test/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke.test;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"import duke.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import duke.exception.InvalidDeadlineException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":" * A class that Test functionality of a Deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"     * Test writeTask() method.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"     * @throws InvalidDeadlineException when users gives invalid deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"    public void testWriteTask() throws InvalidDeadlineException {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"        Deadline t \u003d new Deadline(\"Task 1\" , \"2021-10-03\");","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"        assertEquals(\"D | 0 | Task 1 | Oct 3 2021\", t.writeTask());","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"     * Test writeTask() method when users give invalid input.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"pcgiang"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"pcgiang"},"content":"    public void testWriteTask2() {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"pcgiang"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"pcgiang"},"content":"            Deadline t \u003d new Deadline(\"Task 1\" , \"03/10/2021\");","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"pcgiang"},"content":"            assertEquals(\"\", t.writeTask());","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"pcgiang"},"content":"        } catch (InvalidDeadlineException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"pcgiang"},"content":"            assertEquals(\"Please enter deadline in the format yyyy-mm-dd\",","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"pcgiang"},"content":"                    e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"pcgiang":38}},{"path":"src/test/java/duke/test/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke.test;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":" * Dummy test for Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"    public void dummyTest() {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"pcgiang":15}},{"path":"src/test/java/duke/test/EventsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke.test;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"import duke.Event;","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":" * A class that test functionality of an event.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"public class EventsTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"     * Method that test writeTask() in Event class.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"    public void testWriteTask() {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"            Event t \u003d new Event(\"Task 1\" , \"12pm\");","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"            assertEquals(\"E | 0 | Task 1 | 12pm\", t.writeTask());","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"pcgiang":26}},{"path":"src/test/java/duke/test/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke.test;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import duke.Event;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"import duke.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"import duke.ToDos;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"import duke.exception.OutOfBoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":" * A class that tests the functionalities of a Tasklist.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"     * Test functionality of printList().","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"    public void printListTest() {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"        ToDos task1 \u003d new ToDos(\"shower\");","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"        ToDos task2 \u003d new ToDos(\"assignment\");","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"pcgiang"},"content":"        ArrayList\u003cTask\u003e l \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"pcgiang"},"content":"        l.add(task1);","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"pcgiang"},"content":"        l.add(task2);","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"pcgiang"},"content":"        TaskList list \u003d new TaskList(l);","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"pcgiang"},"content":"        assertEquals(\"1. [T][ ]shower\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"pcgiang"},"content":"                        + \"2. [T][ ]assignment\\n\", list.printList());","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"pcgiang"},"content":"     * Test functionality of addTask() when users give valid input.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"pcgiang"},"content":"     * @throws DukeException when users gives invalid input.","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"pcgiang"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"pcgiang"},"content":"    public void addTaskTest() throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"pcgiang"},"content":"        TaskList list \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"pcgiang"},"content":"        String t \u003d list.addTask(\"todo shower\");","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"pcgiang"},"content":"        assertEquals(\"[T][ ]shower\", t);","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"pcgiang"},"content":"     * Test functionality of addTask() when users give invalid input.","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"pcgiang"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"pcgiang"},"content":"    public void addTaskTest2() {","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"pcgiang"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"pcgiang"},"content":"            TaskList list \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"pcgiang"},"content":"            String t \u003d list.addTask(\"deadline hw\");","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"pcgiang"},"content":"            fail();","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"pcgiang"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"pcgiang"},"content":"            assertEquals(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-( \" +","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"pcgiang"},"content":"                            \"Please key in a valid task!\", e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"pcgiang"},"content":"     * Test functionality of deleteTask() method.","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"pcgiang"},"content":"     * @throws OutOfBoundException when users gives invalid task number.","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"pcgiang"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"pcgiang"},"content":"    public void deleteTaskTest() throws OutOfBoundException {","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"pcgiang"},"content":"        ToDos task1 \u003d new ToDos(\"shower\");","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"pcgiang"},"content":"        ArrayList\u003cTask\u003e l \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"pcgiang"},"content":"        l.add(task1);","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"pcgiang"},"content":"        TaskList list \u003d new TaskList(l);","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"pcgiang"},"content":"        String t \u003d list.deleteTask(\"1\");","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"pcgiang"},"content":"        assertEquals(\"[T][ ]shower\", t);","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"pcgiang"},"content":"     * Test functionality of deleteTask().","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"pcgiang"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"pcgiang"},"content":"    public void deleteTaskTest2() {","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"pcgiang"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"pcgiang"},"content":"            ToDos task1 \u003d new ToDos(\"shower\");","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"pcgiang"},"content":"            ArrayList\u003cTask\u003e l \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"pcgiang"},"content":"            l.add(task1);","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"pcgiang"},"content":"            TaskList list \u003d new TaskList(l);","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"pcgiang"},"content":"            list.deleteTask(\"2\");","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"pcgiang"},"content":"            fail();","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"pcgiang"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"pcgiang"},"content":"            assertEquals(\"Task does not exist. \" +","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"pcgiang"},"content":"                    \"Please send a correct task number \u003e\u003c\", e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"pcgiang"},"content":"     * Test funcionality of MarkAsDone().","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"pcgiang"},"content":"     * @throws OutOfBoundException when users give invalid input.","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"pcgiang"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"pcgiang"},"content":"    public void markAsDoneTest() throws OutOfBoundException {","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"pcgiang"},"content":"        ToDos task1 \u003d new ToDos(\"shower\");","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"pcgiang"},"content":"        ArrayList\u003cTask\u003e l \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"pcgiang"},"content":"        l.add(task1);","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"pcgiang"},"content":"        TaskList list \u003d new TaskList(l);","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"pcgiang"},"content":"        String t \u003d list.markAsDone(\"1\");","lastModifiedDate":"2021-09-01"},{"lineNumber":109,"author":{"gitId":"pcgiang"},"content":"        assertEquals(\"[T][X]shower\", t);","lastModifiedDate":"2021-09-01"},{"lineNumber":110,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"pcgiang"},"content":"     * Test functionality of markAsDone().","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"pcgiang"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"pcgiang"},"content":"    public void markAsDoneTest2() {","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"pcgiang"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"pcgiang"},"content":"            ToDos task1 \u003d new ToDos(\"shower\");","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"pcgiang"},"content":"            ArrayList\u003cTask\u003e l \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"pcgiang"},"content":"            l.add(task1);","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"pcgiang"},"content":"            TaskList list \u003d new TaskList(l);","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"pcgiang"},"content":"            String t \u003d list.markAsDone(\"2\");","lastModifiedDate":"2021-09-01"},{"lineNumber":124,"author":{"gitId":"pcgiang"},"content":"            fail();","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"pcgiang"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"pcgiang"},"content":"            assertEquals(\"Task does not exist. \" +","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"pcgiang"},"content":"                    \"Please send a correct task number \u003e\u003c\", e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"pcgiang":130}},{"path":"src/test/java/duke/test/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke.test;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"import duke.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":" * A class that tests the functionality of a Task class.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"public class TaskTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"     * Test functionality of writeTask().","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"    public void testWriteTask() {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"        Task t \u003d new Task(\"Task 1\");","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"        assertEquals(\"0 | Task 1\", t.writeTask());","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"pcgiang":21}},{"path":"src/test/java/duke/test/ToDosTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke.test;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"import duke.ToDos;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":" * A class that tests functionality of Todo class.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"public class ToDosTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"     * Test functionality of writeTask().","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"    public void testWriteTask() {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"        ToDos t \u003d new ToDos(\"Task 1\");","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"        assertEquals(\"T | 0 | Task 1\", t.writeTask());","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"pcgiang":24}},{"path":"text-ui-test/actual.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"Hello! This is Duke :)","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"What can I do for you?","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"Got it. I\u0027ve added this task.","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"[T][ ]task1","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"Now you have 1 task in the list","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"Got it. I\u0027ve added this task.","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"[D][ ]task2 (by: tonight)","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"Got it. I\u0027ve added this task.","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"[D][ ]task3 (by: tmr)","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"Got it. I\u0027ve added this task.","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"[E][ ]shower (at: noon)","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"Now you have 4 tasks in the list.","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"Here are the tasks on your list: ","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"1. [T][ ]task1","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"2. [D][ ]task2 (by: tonight)","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"3. [D][ ]task3 (by: tmr)","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"4. [E][ ]shower (at: noon)","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"Nice! I have marked this task as done!","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"[D][X]task3 (by: tmr)","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"Nice! I have marked this task as done!","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"[E][X]shower (at: noon)","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"Here are the tasks on your list: ","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"1. [T][ ]task1","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"2. [D][ ]task2 (by: tonight)","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"pcgiang"},"content":"3. [D][X]task3 (by: tmr)","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"pcgiang"},"content":"4. [E][X]shower (at: noon)","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"pcgiang"},"content":"Bye! See you again soon!!","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"pcgiang":29}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"todo task1","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"deadline task2 /by tonight","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"deadline task3 /by tmr","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"event shower /at noon","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"done 3","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"done 4","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"bye","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"pcgiang":10}}]
